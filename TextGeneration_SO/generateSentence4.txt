0.508521709979
code:
public container < t > max size ( float size ) {
 max size ( new fixed ( size ) ) ;
 return this ;
 }
comment:
Sets the maxWidth and maxHeight to the specified value .
--generate--
sets the width and max height to the specified value .
sets the max width and height to the specified value .
sets the min width and height to the specified value .
sets the width and max height to the specified height .
sets the width and max height to the specified width .

code:
public void set service url ( string service url ) {
 this . service url = service url ;
 }
comment:
Set the URL of this remote accessor 's target service .
--generate--
set the url .
set the url to be used .
set the url for this request .
set the url for the request .
set the url for the UNK .

code:
public boolean remove listener ( event listener listener ) {
 return root . remove listener ( listener ) ;
 }
comment:
Removes a listener from the root .
--generate--
removes a listener .
removes a listener from the listener .
removes a listener from the list .
removes a listener from the UNK .
removes a listener from the list of the UNK .

code:
public rational get value as rational ( long default value ) {
 rational default val = new rational ( default value , DecimalInteger ) ;
 return get value as rational ( default val ) ;
 }
comment:
Gets the value as a Rational .
--generate--
gets a value .
gets a value value .
adds a value value .
gets a value to a value .
adds a value to a value .

code:
public void set UNK ( string UNK ) {
 set ( key_ g , UNK ) ;
 }
comment:
Sets the antibanding .
--generate--
sets the UNK .
sets the current UNK .
sets the UNK UNK .
sets the UNK to the UNK .
sets the UNK for the UNK .

code:
@ android . view . remotable view method public final void set hint ( char sequence hint ) {
 hint = text utils . string or spanned string ( hint ) ;
 if ( layout != null ) {
 check for UNK ( ) ;
 }
 if ( text . length ( ) == DecimalInteger ) {
 invalidate ( ) ;
 }
 if ( editor != null && text . length ( ) == DecimalInteger && hint != null ) {
 editor . invalidate text display list ( ) ;
 }
 }
comment:
Sets the text to be displayed when the text of the TextView is empty .
--generate--
sets the text of the view .
sets the color of the view .
sets the content of the view .
sets the color of the current view .
sets the text view of the view .

code:
public void add at ( int i , long value ) {
 switch ( i ) {
 case DecimalInteger : x += value ;
 return ;
 case DecimalInteger : y += value ;
 return ;
 case DecimalInteger : z += value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
add the vector field value by index @param i @param value
--generate--
add the vector field value by index @param i @param value
add the vector field field by index @param i @param value
adds the vector field value by index @param i @param value
add a vector field value by index @param i @param value
add the vector field value by index @param i @return

code:
public static void create table ( database db , boolean if not exists ) {
 string constraint = if not exists ? String : String ;
 db . exec l ( String + constraint + String + String ) ;
 }
comment:
Creates the underlying database table .
--generate--
creates the underlying database table .
creates the underlying underlying table .
creates the underlying table table .
creates the underlying byte table .
creates the underlying underlying underlying table .

code:
public void set base path ( string base path ) {
 this . base path = base path ;
 }
comment:
Set the base path for context publication .
--generate--
set the path .
sets the path .
sets the path for the path .
sets the path for the request .
sets the path for the target .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public r set controller listener ( controller listener < ? super o > controller listener ) {
 mcontroller listener = controller listener ;
 return get this ( ) ;
 }
comment:
Sets the controller listener .
--generate--
sets the listener .
sets the listener to be used .
sets a listener to be used .
sets the listener to be UNK .
sets the listener to be used for the UNK .

code:
public static void create table ( database db , boolean if not exists ) {
 string constraint = if not exists ? String : String ;
 db . exec l ( String + constraint + String + String + String ) ;
 }
comment:
Creates the underlying database table .
--generate--
creates the underlying database table .
creates the underlying underlying table .
creates the underlying table table .
creates the underlying byte table .
creates the underlying underlying underlying table .

code:
@ deprecated public static void set header ( http message message , char sequence name , object value ) {
 message . headers ( ) . set ( name , value ) ;
 }
comment:
Sets a new header with the specified name and value .
--generate--
sets a new header with the specified name .
sets a new item with the specified name .
sets a new header with the given name .
sets a new header with the specified name and the specified value .
sets a new header with the specified name and the specified header .

code:
public void set view class ( class < ? > view class ) {
 if ( view class == null || ! required view class ( ) . is assignable from ( view class ) ) {
 throw new illegal argument exception ( String + ( view class != null ? view class . get name ( ) : null ) + String + required view class ( ) . get name ( ) + String ) ;
 }
 this . view class = view class ;
 }
comment:
Set the view class that should be used to create views .
--generate--
set the class that should be used .
set the class that should be used for this view .
set the class that should be used for the view .
set the class that should be used for the UNK .
set the class that should be used for the view of the list .

code:
public long get extra long ( string key ) throws exception {
 return mextra data . get long ( key ) ;
 }
comment:
Get extra long value .
--generate--
get extra long value .
get extra extra value .
get extra byte value .
get extra first value .
get extra single value .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public void set user id ( int user id ) {
 if ( muser id != user id ) {
 muser id = user id ;
 synchronized ( lock ) {
 if ( is UNK ( ) ) {
 reset ( false ) ;
 }
 }
 }
 }
comment:
Sets the currently active user ID .
--generate--
sets the user id .
sets the user id for the current user .
sets the default id for the current user .
sets the user id for the current id .
sets the UNK id for the current user .

code:
public values < v > values ( ) {
 if ( values1 == null ) {
 values1 = new ordered map values ( this ) ;
 values2 = new ordered map values ( this ) ;
 }
 if ( ! values1 . valid ) {
 values1 . reset ( ) ;
 values1 . valid = true ;
 values2 . valid = false ;
 return values1 ;
 }
 values2 . reset ( ) ;
 values2 . valid = true ;
 values1 . valid = false ;
 return values2 ;
 }
comment:
Returns an iterator for the values in the map . Remove is supported .
--generate--
returns an iterator for the values in the map . remove is supported .
returns an iterator for the map in the map . remove is supported .
returns an iterator for the map . remove is supported . remove is supported .
returns an iterator for the entries in the map . remove is supported .
returns an iterator for the map . remove is supported .

code:
public void set max header table size ( byte buf out , long max header table size ) throws http2 exception {
 if ( max header table size < min_ header_ table_ e || max header table size > max_ header_ table_ e ) {
 throw connection error ( UNK r , String , min_ header_ table_ e , max_ header_ table_ e , max header table size ) ;
 }
 if ( this . max header table size == max header table size ) {
 return ;
 }
 this . max header table size = max header table size ;
 ensure capacity ( DecimalInteger ) ;
 encode integer ( out , 0x20 , DecimalInteger , ( int ) max header table size ) ;
 }
comment:
Set the maximum table size .
--generate--
set the maximum size .
set the given size .
set the specified size .
set the current size .
set the size size .

code:
public string as string ( ) {
 switch ( type ) {
 case string value : return string value ;
 case double value : return string value != null ? string value : double . to string ( double value ) ;
 case long value : return string value != null ? string value : long . to string ( long value ) ;
 case boolean value : return long value != DecimalInteger ? String : String ;
 case null value : return null ;
 }
 throw new illegal state exception ( String + type ) ;
 }
comment:
Returns this value as a string .
--generate--
returns a string value .
returns the value .
returns the string value .
returns a value .
returns the value of the UNK .

code:
public object get value ( ) {
 return this . value ;
 }
comment:
Return the value of the attribute .
--generate--
return the value .
return the value of the UNK .
return the value of the values .
return the value of the value .
return the value for the UNK .

code:
public float get ( int i ) {
 switch ( i ) {
 case DecimalInteger : return x ;
 case DecimalInteger : return y ;
 case DecimalInteger : return z ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
get the vector field value by index @param i @return
--generate--
get the vector field value by index @param i @return
get the vector field value by index @param i @param value
get the vector field value by index @param i @param
get the vector field value by index @param i @param @param value
get the vector field value by index

code:
@ override public string get first ( string header name ) {
 list < string > header values = headers . get ( header name ) ;
 return header values != null ? header values . get ( DecimalInteger ) : null ;
 }
comment:
Return the first header value for the given header name , if any .
--generate--
return the header value for the given name , if any .
return the element value for the given name , if any .
return the header value for the specified name , if any .
return the header value for the given name .
return the header value for the given name , or null if any .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public object get value ( ) {
 return this . value ;
 }
comment:
Return the result value returned by a successful invocation of the target method , if any .
--generate--
return the value .
return the value of the UNK .
return the value of the values .
return the value of the value .
return the value for the UNK .

code:
public closeable reference < bitmap > create bitmap ( display metrics display , int [ ] colors , int offset , int stride , int width , int height , bitmap . config config ) {
 return create bitmap ( display , colors , offset , stride , width , height , config , null ) ;
 }
comment:
Creates a bitmap with the specified width and height .
--generate--
creates a bitmap with the specified width and height .
creates a bitmap with the specified width .
creates a bitmap with the specified width and width .
creates a bitmap of the specified width .
creates a bitmap from the specified width .

code:
public values < v > values ( ) {
 if ( values1 == null ) {
 values1 = new values ( this ) ;
 values2 = new values ( this ) ;
 }
 if ( ! values1 . valid ) {
 values1 . reset ( ) ;
 values1 . valid = true ;
 values2 . valid = false ;
 return values1 ;
 }
 values2 . reset ( ) ;
 values2 . valid = true ;
 values1 . valid = false ;
 return values2 ;
 }
comment:
Returns an iterator for the values in the map . Remove is supported .
--generate--
returns an iterator for the values in the map . remove is supported .
returns an iterator for the map in the map . remove is supported .
returns an iterator for the map . remove is supported . remove is supported .
returns an iterator for the entries in the map . remove is supported .
returns an iterator for the map . remove is supported .

code:
public static < e > immutable list < e > copy of ( e [ ] elements ) {
 switch ( elements . length ) {
 case DecimalInteger : return immutable list . of ( ) ;
 case DecimalInteger : return new singleton immutable list < e > ( elements [ DecimalInteger ] ) ;
 default : return new regular immutable list < e > ( check elements not null ( elements . clone ( ) ) ) ;
 }
 }
comment:
Returns an immutable list containing the given elements , in order .
--generate--
returns an immutable list containing the given elements .
returns an immutable list containing the specified elements .
returns an immutable list containing the given entries .
returns an immutable map containing the given elements .
returns an immutable map containing the specified elements .

code:
public float array to array ( ) {
 float array array = new float array ( true , map . size ) ;
 while ( has next ) array . add ( next ( ) ) ;
 return array ;
 }
comment:
Returns a new array containing the remaining values .
--generate--
returns a new array containing the values .
returns a new array of the values .
returns a new array containing the map .
returns a new array containing the array .
returns a new array containing the array of the values .

code:
public void set ( UNK a ) {
 this . x = a . x ;
 this . y = a . y ;
 this . z = a . z ;
 this . w = a . w ;
 }
comment:
set vector value by Int4 @param a
--generate--
set vector value by UNK @param a
set field value by UNK @param a
set value by UNK @param a
set vector value by UNK .
set vector value by UNK

code:
public long get ( int i ) {
 switch ( i ) {
 case DecimalInteger : return ( long ) ( x ) ;
 case DecimalInteger : return ( long ) ( y ) ;
 case DecimalInteger : return ( long ) ( z ) ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
get the vector field value by index @param i @return
--generate--
get the vector field value by index @param i @return
get the vector field value by index @param i @param value
get the vector field value by index @param i @param
get the vector field value by index @param i @param @param value
get the vector field value by index

code:
public void add at ( int i , short value ) {
 switch ( i ) {
 case DecimalInteger : x += value ;
 return ;
 case DecimalInteger : y += value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
add the vector field value by index @param i @param value
--generate--
add the vector field value by index @param i @param value
add the vector field field by index @param i @param value
add the vector field value by index @param i @return
adds the vector field value by index @param i @param value
add a vector field value by index @param i @param value

code:
public static < e > immutable list < e > of ( e e1 , e e2 , e e3 ) {
 return construct ( e1 , e2 , e3 ) ;
 }
comment:
Returns an immutable list containing the given elements , in order .
--generate--
returns an immutable list containing the given elements , in order .
returns an immutable map containing the given elements , in order .
returns an immutable list containing the given entries , in order .
returns an immutable list containing the given elements .
returns an immutable list containing the specified elements , in order .

code:
public image request builder set postprocessor ( postprocessor postprocessor ) {
 postprocessor = postprocessor ;
 return this ;
 }
comment:
Sets the postprocessor .
--generate--
sets the UNK .
sets the current UNK .
sets the default UNK .
sets the UNK for the UNK .
sets the UNK of the UNK .

code:
public bounding box UNK ( ) {
 return this . set ( min . set ( DecimalInteger , DecimalInteger , DecimalInteger ) , max . set ( DecimalInteger , DecimalInteger , DecimalInteger ) ) ;
 }
comment:
Sets the minimum and maximum vector to zeros .
--generate--
sets the UNK .
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return g ;
 default : return null ;
 }
 }
comment:
Find the _ Fields constant that matches fieldId , or null if its not found .
--generate--
find the _ fields constant that matches field id , or null if its not found .
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches constant id , or null if its not found .
find the _ constant constant that matches field id , or null if its not found .
find the _ fields constant that matches field id .

code:
public void set properties ( UNK enhancer . settings settings ) throws illegal state exception , illegal argument exception , unsupported operation exception {
 check status ( set parameter ( param_ target_ gain_ b , settings . target UNK b ) ) ;
 }
comment:
Sets the LoudnessEnhancer properties .
--generate--
sets the UNK UNK .
sets the UNK .
sets the UNK state .
sets the current UNK .
sets the UNK to the UNK .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public static vector2 polygon centroid ( float [ ] polygon , int offset , int count , vector2 centroid ) {
 if ( count < DecimalInteger ) throw new illegal argument exception ( String ) ;
 float x = DecimalInteger , y = DecimalInteger ;
 float signed area = DecimalInteger ;
 int i = offset ;
 for ( int n = offset + count - DecimalInteger ;
 i < n ;
 i += DecimalInteger ) {
 float x0 = polygon [ i ] ;
 float y0 = polygon [ i + DecimalInteger ] ;
 float x1 = polygon [ i + DecimalInteger ] ;
 float y1 = polygon [ i + DecimalInteger ] ;
 float a = x0 * y1 - x1 * y0 ;
 signed area += a ;
 x += ( x0 + x1 ) * a ;
 y += ( y0 + y1 ) * a ;
 }
 float x0 = polygon [ i ] ;
 float y0 = polygon [ i + DecimalInteger ] ;
 float x1 = polygon [ offset ] ;
 float y1 = polygon [ offset + DecimalInteger ] ;
 float a = x0 * y1 - x1 * y0 ;
 signed area += a ;
 x += ( x0 + x1 ) * a ;
 y += ( y0 + y1 ) * a ;
 if ( signed area == DecimalInteger ) {
 centroid . x = DecimalInteger ;
 centroid . y = DecimalInteger ;
 }
 else {
 signed area *= DecimalFloatingPoint ;
 centroid . x = x / ( DecimalInteger * signed area ) ;
 centroid . y = y / ( DecimalInteger * signed area ) ;
 }
 return centroid ;
 }
comment:
Returns the centroid for the specified non-self-intersecting polygon .
--generate--
returns the UNK .
returns a UNK UNK .
returns the UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .

code:
public static void create table ( database db , boolean if not exists ) {
 string constraint = if not exists ? String : String ;
 db . exec l ( String + constraint + String + String + String ) ;
 }
comment:
Creates the underlying database table .
--generate--
creates the underlying database table .
creates the underlying underlying table .
creates the underlying table table .
creates the underlying byte table .
creates the underlying underlying underlying table .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return wait_ s ;
 default : return null ;
 }
 }
comment:
Find the _ Fields constant that matches fieldId , or null if its not found .
--generate--
find the _ fields constant that matches field id , or null if its not found .
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches constant id , or null if its not found .
find the _ constant constant that matches field id , or null if its not found .
find the _ fields constant that matches field id .

code:
public static < e > immutable list < e > of ( e e1 , e e2 , e e3 , e e4 , e e5 , e e6 , e e7 , e e8 , e e9 ) {
 return construct ( e1 , e2 , e3 , e4 , e5 , e6 , e7 , e8 , e9 ) ;
 }
comment:
Returns an immutable list containing the given elements , in order .
--generate--
returns an immutable list containing the given elements , in order .
returns an immutable list containing the given entries , in order .
returns an immutable list containing the specified elements , in order .
returns an immutable map containing the given elements , in order .
returns an immutable list containing the given elements .

code:
public void set ( UNK a ) {
 this . x = a . x ;
 this . y = a . y ;
 this . z = a . z ;
 this . w = a . w ;
 }
comment:
set vector value by Short4 @param a
--generate--
set vector value by UNK @param a
set field value by UNK @param a
set value by UNK @param a
set vector value by UNK .
set vector value by UNK

code:
public void set model key ( string model key ) {
 this . model key = model key ;
 }
comment:
Set the name of the model key that represents the object to be marshalled .
--generate--
set the name of the key .
set the name of the given key .
set the name of the key in the key .
set the name of the key in the given key .
set the name of the key in the key

code:
public static image request builder from request ( image request image request ) {
 return image request builder . new builder with source ( image request . get source uri ( ) ) . set image decode options ( image request . get image decode options ( ) ) . set cache choice ( image request . get cache choice ( ) ) . set local thumbnail UNK enabled ( image request . get local thumbnail UNK enabled ( ) ) . set lowest permitted request level ( image request . get lowest permitted request level ( ) ) . set postprocessor ( image request . get postprocessor ( ) ) . set UNK rendering enabled ( image request . get UNK rendering enabled ( ) ) . set request priority ( image request . get priority ( ) ) . set resize options ( image request . get resize options ( ) ) . set request listener ( image request . get request listener ( ) ) . set rotation options ( image request . get rotation options ( ) ) ;
 }
comment:
Creates a new request builder instance with the same parameters as the imageRequest passed in .
--generate--
creates a new request request .
creates a new request instance .
creates a new request instance for the given request .
creates a new request instance for the specified request .
creates a new request instance for the given UNK .

code:
public long get value ( int key , int index ) {
 assert UNK ( ) ;
 try {
 final long [ ] array = parent . longs . get ( get array from key ( key ) ) ;
 return array [ get index from key ( key ) + index ] ;
 }
 catch ( index out of bounds exception ex ) {
 log or throw ( String + integer . to hex string ( key ) + String + index + String + dump internal state ( ) , ex ) ;
 return DecimalInteger ;
 }
 }
comment:
Get the value for the given key and offset from that key .
--generate--
get the value for the given key .
return the value for the given key .
get the value for the given value .
get the value for the given key in the key .
get the value for the given key in the specified value .

code:
public void set index ( int index ) {
 this . index = index ;
 }
comment:
Set the index of this parameter in the operation signature .
--generate--
set the index .
set the index for this view .
set the index for this index .
set the index of this view .
set the index for the index .

code:
public int get UNK count ( ) {
 return UNK count ;
 }
comment:
Returns the number of tuners this TV input has .
--generate--
returns the number of UNK .
returns the current number of UNK .
returns the UNK of the UNK .
returns the number of UNK in the UNK .
returns the current number of the UNK .

code:
public void put ( string key , boolean value ) {
 values . put ( key , value ) ;
 }
comment:
Adds a value to the set .
--generate--
adds a value to the set .
adds a value to the UNK .
adds a new value to the UNK .
adds a new value to the set .
adds a new value to the value .

code:
public animation desc set animation ( final string id , int loop count , float speed , final animation listener listener ) {
 return set animation ( id , DecimalFloatingPoint , - DecimalFloatingPoint , loop count , speed , listener ) ;
 }
comment:
Set the active animation , replacing any current animation .
--generate--
set the current animation .
set the current animation , in any .
set the current rotation .
set the current display , in any .
set the current window , in any .

code:
public static void create table ( database db , boolean if not exists ) {
 string constraint = if not exists ? String : String ;
 db . exec l ( String + constraint + String + String + String + String + String + String + String ) ;
 }
comment:
Creates the underlying database table .
--generate--
creates the underlying database table .
creates the underlying underlying table .
creates the underlying table table .
creates the underlying byte table .
creates the underlying underlying underlying table .

code:
public float get UNK ( ) {
 return jni get UNK ( addr ) ;
 }
comment:
Get the rotational inertia of the body about the local origin .
--generate--
get the UNK .
get the UNK of the UNK .
returns the UNK of the UNK .
get the UNK of the current UNK .
get the UNK of the UNK

code:
public values values ( ) {
 if ( values1 == null ) {
 values1 = new values ( this ) ;
 values2 = new values ( this ) ;
 }
 if ( ! values1 . valid ) {
 values1 . reset ( ) ;
 values1 . valid = true ;
 values2 . valid = false ;
 return values1 ;
 }
 values2 . reset ( ) ;
 values2 . valid = true ;
 values1 . valid = false ;
 return values2 ;
 }
comment:
Returns an iterator for the values in the map . Remove is supported .
--generate--
returns an iterator for the values in the map . remove is supported .
returns an iterator for the map in the map . remove is supported .
returns an iterator for the map . remove is supported . remove is supported .
returns an iterator for the values . remove is supported . remove is supported .
returns an iterator for the map . remove is supported .

code:
private void set UNK sample state ( track output output to use , long current sample duration , int UNK read bytes , int sample size ) {
 state = state_ UNK e ;
 bytes read = UNK read bytes ;
 this . current output = output to use ;
 this . current sample duration = current sample duration ;
 this . sample size = sample size ;
 }
comment:
Sets the state to STATE_READING_SAMPLE .
--generate--
sets the UNK state .
sets the UNK UNK .
sets the UNK .
sets the current UNK .
sets the UNK state . sets null .

code:
private closeable reference < bitmap > create bitmap ( display metrics display , int width , int height , bitmap . config config , boolean has alpha ) {
 return create bitmap ( display , width , height , config , has alpha , null ) ;
 }
comment:
Creates a bitmap with the specified width and height .
--generate--
creates a bitmap with the specified width and height .
creates a bitmap of the specified width and height .
creates a bitmap with the specified width and width .
creates a bitmap from the specified width and height .
creates a bitmap with the specified width .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
Find the _ Fields constant that matches name , or null if its not found .
--generate--
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches field , or null if its not found .
find the fields constant that matches name , or null if its not found .
find the _ fields constant that matches name , or null if its not not .
find the _ fields constant that matches name .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return d ;
 case DecimalInteger : return t ;
 default : return null ;
 }
 }
comment:
Find the _ Fields constant that matches fieldId , or null if its not found .
--generate--
find the _ fields constant that matches field id , or null if its not found .
find the _ fields constant that matches name , or null if its not found .
find the _ fields constant that matches constant id , or null if its not found .
find the _ constant constant that matches field id , or null if its not found .
find the _ fields constant that matches field id .

code:
public int get type argument index ( ) {
 return value & 0x f ;
 }
comment:
Returns the index of the type argument referenced by this type reference .
--generate--
returns the type of the type .
returns the type of the index .
returns the type of the key .
returns the type of the UNK .
returns the type of the type of the type .

code:
public static animated drawable options builder new builder ( ) {
 return new animated drawable options builder ( ) ;
 }
comment:
Creates a new builder .
--generate--
creates a new builder .
creates a new instance for a UNK .
creates a new builder for a UNK .
creates a new builder for the given UNK .
creates a new instance for the given UNK .

code:
public void set ( UNK a ) {
 this . x = a . x ;
 this . y = a . y ;
 }
comment:
set vector value by Short2 @param a
--generate--
set vector value by UNK @param a
set vector value by UNK .
set field value by UNK @param a
set value by UNK @param a
set vector value by UNK

code:
public final void set value ( int value ) {
 if ( value != value ) {
 value = value ;
 update displayed value ( ) ;
 }
 }
comment:
Sets the currently displayed value .
--generate--
sets the value .
sets the current value .
sets the specified value .
sets the value of the specified value .
sets the value of the specified .

code:
public void set size ( long size ) {
 if ( size < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( size > 0xffffffff l ) {
 feature set . add ( feature . zip64_ e ) ;
 }
 else {
 feature set . remove ( feature . zip64_ e ) ;
 }
 this . size = size ;
 }
comment:
Sets the uncompressed size of the entry data in bytes .
--generate--
sets the size of the data .
sets the size of the current data .
sets the current size of the data .
sets the current size of the UNK .
sets the current size of the current data .

code:
public void set content ( byte [ ] content ) {
 this . content = content ;
 }
comment:
Set the content of the request body as a byte array .
--generate--
set the content of the request .
set the data of the request .
set the path of the request .
set the content of the data .
set the data of the data .

code:
public final string get path ( ) {
 return this . path ;
 }
comment:
Return the path for this resource .
--generate--
return the path .
return the path for the path .
return the path for the UNK .
return the path for the file .
return the path for the target .

code:
@ deprecated public void remove nmea listener ( gps status . nmea listener listener ) {
 try {
 gnss status listener transport transport = mgps nmea listeners . remove ( listener ) ;
 if ( transport != null ) {
 service . unregister gnss status callback ( transport ) ;
 }
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
Removes an NMEA listener .
--generate--
removes an listener .
removes a listener .
removes a listener from the listener .
removes an listener from the listener .
adds a listener .

code:
public k find key ( object value , boolean identity ) {
 v [ ] value table = this . value table ;
 if ( value == null ) {
 k [ ] key table = this . key table ;
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( key table [ i ] != null && value table [ i ] == null ) return key table [ i ] ;
 }
 else if ( identity ) {
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( value table [ i ] == value ) return key table [ i ] ;
 }
 else {
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( value . equals ( value table [ i ] ) ) return key table [ i ] ;
 }
 return null ;
 }
comment:
Returns the key for the specified value , or null if it is not in the map .
--generate--
returns the key for the specified value , or null if it is not .
returns the key for the specified value , or null if not is not .
returns the element for the specified value , or null if not is not .
returns the key for the given value , or null if not is not .
returns the map for the specified value , or null if not is not .

code:
public closeable reference < bitmap > create bitmap ( display metrics display , int [ ] colors , int offset , int stride , int width , int height , bitmap . config config , @ nullable object caller context ) {
 closeable reference < bitmap > bitmap ref = create bitmap ( display , width , height , config , caller context ) ;
 bitmap bitmap = bitmap ref . get ( ) ;
 bitmap . set pixels ( colors , offset , stride , DecimalInteger , DecimalInteger , width , height ) ;
 return bitmap ref ;
 }
comment:
Creates a bitmap with the specified width and height .
--generate--
creates a bitmap with the specified width and height .
creates a bitmap with the specified width .
creates a bitmap of the specified width and height .
creates a bitmap from the specified width .
creates a bitmap of the specified width .

code:
public values < v > values ( ) {
 if ( values iter1 == null ) {
 values iter1 = new values ( this ) ;
 values iter2 = new values ( this ) ;
 }
 if ( ! values iter1 . valid ) {
 values iter1 . index = DecimalInteger ;
 values iter1 . valid = true ;
 values iter2 . valid = false ;
 return values iter1 ;
 }
 values iter2 . index = DecimalInteger ;
 values iter2 . valid = true ;
 values iter1 . valid = false ;
 return values iter2 ;
 }
comment:
Returns an iterator for the values in the map . Remove is supported .
--generate--
returns an iterator for the values in the map . remove is supported .
returns an iterator for the map in the map . remove is supported .
returns an iterator for the values in the array . remove is supported .
returns an iterator for the map . remove is supported .
returns an iterator for the values in the map .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return d ;
 case DecimalInteger : return d ;
 case DecimalInteger : return process_ ms_ g ;
 case DecimalInteger : return d ;
 case DecimalInteger : return UNK ms_ g ;
 default : return null ;
 }
 }
comment:
Find the _ Fields constant that matches fieldId , or null if its not found .
--generate--
find the _ fields constant that matches field id , or null if its not found .
find the _ fields constant that matches constant id , or null if its not found .
find the _ fields constant that matches name , or null if its not found .
find the _ constant constant that matches field id , or null if its not found .
find the _ fields constant that matches field id .

code:
public generic drawee hierarchy builder set retry image ( int resource id , @ nullable scale type retry image scale type ) {
 mretry image = resources . get drawable ( resource id ) ;
 mretry image scale type = retry image scale type ;
 return this ;
 }
comment:
Sets the retry image and its scale type .
--generate--
sets the scale type .
sets the last image .
sets the progress image .
sets the underlying image .
sets the first image .

code:
public boolean set rotation x ( float rotation x ) {
 return nset rotation x ( mnative render node , rotation x ) ;
 }
comment:
Sets the rotation value for the display list around the X axis .
--generate--
sets the rotation value for the display list .
sets the display value for the display list .
sets the rotation value for the display list on the display list .
sets the rotation value for the display list on the display position .
sets the rotation value for the display list of the display UNK .

code:
public entries < k , v > entries ( ) {
 if ( entries1 == null ) {
 entries1 = new entries ( this ) ;
 entries2 = new entries ( this ) ;
 }
 if ( ! entries1 . valid ) {
 entries1 . index = DecimalInteger ;
 entries1 . valid = true ;
 entries2 . valid = false ;
 return entries1 ;
 }
 entries2 . index = DecimalInteger ;
 entries2 . valid = true ;
 entries1 . valid = false ;
 return entries2 ;
 }
comment:
Returns an iterator for the entries in the map . Remove is supported .
--generate--
returns an iterator for the values in the map . remove is supported .
returns an iterator for the map in the map . remove is supported .
returns an iterator for the entries in the map . remove is supported .
returns an iterator for the elements in the map . remove is supported .
returns an iterator for the map . remove is supported .

code:
item new field item ( final string owner , final string name , final string desc ) {
 key3 . set ( d , owner , name , desc ) ;
 item result = get ( key3 ) ;
 if ( result == null ) {
 put122 ( d , new class ( owner ) , new name type ( name , desc ) ) ;
 result = new item ( index ++ , key3 ) ;
 put ( result ) ;
 }
 return result ;
 }
comment:
Adds a field reference to the constant pool of the class being build .
--generate--
adds a class reference to the constant pool of the class being build .
adds a class pool to the constant pool of the class being build .
adds a method pool to the constant pool of the class being build .
adds a class being build to the constant pool of the class being build .
adds a class build to the constant pool of the class being build .

code:
public keys < k > keys ( ) {
 if ( keys1 == null ) {
 keys1 = new keys ( this ) ;
 keys2 = new keys ( this ) ;
 }
 if ( ! keys1 . valid ) {
 keys1 . reset ( ) ;
 keys1 . valid = true ;
 keys2 . valid = false ;
 return keys1 ;
 }
 keys2 . reset ( ) ;
 keys2 . valid = true ;
 keys1 . valid = false ;
 return keys2 ;
 }
comment:
Returns an iterator for the keys in the map . Remove is supported .
--generate--
returns an iterator for the map in the map . remove is supported .
returns an iterator for the values in the map . remove is supported .
returns an iterator for the entries in the map . remove is supported .
returns an iterator for the map , in the map . remove is supported .
returns an iterator for the map . remove is supported .

code:
public entries < k , v > entries ( ) {
 if ( entries1 == null ) {
 entries1 = new entries ( this ) ;
 entries2 = new entries ( this ) ;
 }
 if ( ! entries1 . valid ) {
 entries1 . reset ( ) ;
 entries1 . valid = true ;
 entries2 . valid = false ;
 return entries1 ;
 }
 entries2 . reset ( ) ;
 entries2 . valid = true ;
 entries1 . valid = false ;
 return entries2 ;
 }
comment:
Returns an iterator for the entries in the map . Remove is supported .
--generate--
returns an iterator for the map in the map . remove is supported .
returns an iterator for the values in the map . remove is supported .
returns an iterator for the entries in the map . remove is supported .
returns an iterator for the elements in the map . remove is supported .
returns an iterator for the map . remove is supported .

code:
public final observable < list < t > > buffer ( long timespan , time unit unit , scheduler scheduler ) {
 return buffer ( timespan , timespan , unit , scheduler ) ;
 }
comment:
Returns an Observable that emits buffers of items it collects from the source Observable .
--generate--
returns an observable that emits any of items it from the source observable .
returns an observable that emits any of elements from the source observable .
returns an observable that emits any of elements it from the source observable .
returns an observable that emits any of items it from the specified observable .
returns an observable that emits any of elements from the observable .

code:
public entries < v > entries ( ) {
 if ( entries1 == null ) {
 entries1 = new entries ( this ) ;
 entries2 = new entries ( this ) ;
 }
 if ( ! entries1 . valid ) {
 entries1 . reset ( ) ;
 entries1 . valid = true ;
 entries2 . valid = false ;
 return entries1 ;
 }
 entries2 . reset ( ) ;
 entries2 . valid = true ;
 entries1 . valid = false ;
 return entries2 ;
 }
comment:
Returns an iterator for the entries in the map . Remove is supported .
--generate--
returns an iterator for the map in the map . remove is supported .
returns an iterator for the entries in the map . remove is supported .
returns an iterator for the values in the map . remove is supported .
returns an iterator for the elements in the map . remove is supported .
returns an iterator for the keys in the map . remove is supported .

code:
item new long ( final long value ) {
 key . set ( value ) ;
 item result = get ( key ) ;
 if ( result == null ) {
 pool . put byte ( g ) . put long ( value ) ;
 result = new item ( index , key ) ;
 index += DecimalInteger ;
 put ( result ) ;
 }
 return result ;
 }
comment:
Adds a long to the constant pool of the class being build .
--generate--
adds a reference to the constant pool of the class being build .
adds a header to the constant pool of the class being build .
adds a item to the constant pool of the class being build .
adds a method to the constant pool of the class being build .
adds a reference to the constant pool of the class pool .

code:
item new double ( final double value ) {
 key . set ( value ) ;
 item result = get ( key ) ;
 if ( result == null ) {
 pool . put byte ( e ) . put long ( key . long val ) ;
 result = new item ( index , key ) ;
 index += DecimalInteger ;
 put ( result ) ;
 }
 return result ;
 }
comment:
Adds a double to the constant pool of the class being build .
--generate--
adds a reference to the constant pool of the class being build .
adds a item to the constant pool of the class being build .
adds a method to the constant pool of the class being build .
adds a header to the constant pool of the class being build .
adds a new to the constant pool of the class being build .

code:
public int new handle ( final int tag , final string owner , final string name , final string desc , final boolean itf ) {
 return new handle item ( tag , owner , name , desc , itf ) . index ;
 }
comment:
Adds a handle to the constant pool of the class being build .
--generate--
adds a reference to the constant pool of the class being build .
adds a pool to the constant pool of the class being build .
adds a class to the constant pool of the class being build .
adds a method to the constant pool of the class being build .
adds a header to the constant pool of the class being build .

code:
public object get header value ( string name ) {
 header value holder header = header value holder . get by name ( this . headers , name ) ;
 return ( header != null ? header . get value ( ) : null ) ;
 }
comment:
Return the primary value for the given header , if any .
--generate--
return the header value for the given name , if any .
return the header value for the specified name , if any .
return the header value for the given name .
return the header value for the specified name .
return the header value for the given name , or null if any .

code:
@ override public string get header ( string name ) {
 header value holder header = header value holder . get by name ( this . headers , name ) ;
 return ( header != null ? header . get string value ( ) : null ) ;
 }
comment:
Return the primary value for the given header as a String , if any .
--generate--
return the header value for the given name , if any .
return the value for the given name , if any .
return the name for the given name , if any .
return the header value for the given name , or null if it is not .
return the header value for the given name , or null if any .

code:
public void set at ( int i , byte value ) {
 switch ( i ) {
 case DecimalInteger : x = value ;
 return ;
 case DecimalInteger : y = value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
set the vector field value by index @param i @param value
--generate--
add the vector field value by index @param i @param value
set the vector field value by index @param i @param value
add the vector field value by index @param i @return
add the vector field value by index @param i @param @param value
add the vector field field by index @param i @param value

code:
public void delete ( int key ) {
 int i = container helpers . binary search ( keys , size , key ) ;
 if ( i >= DecimalInteger ) {
 remove at ( i ) ;
 }
 }
comment:
Removes the mapping from the specified key , if there was any .
--generate--
removes the element from the specified key , if any .
removes the element from the specified key .
removes the elements from the specified key .
removes the values from the specified key .
removes the element from the specified key , or null if it is not .

code:
public boolean contains value ( object value , boolean identity ) {
 v [ ] value table = this . value table ;
 if ( value == null ) {
 k [ ] key table = this . key table ;
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( key table [ i ] != null && value table [ i ] == null ) return true ;
 }
 else if ( identity ) {
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( value table [ i ] == value ) return true ;
 }
 else {
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( value . equals ( value table [ i ] ) ) return true ;
 }
 return false ;
 }
comment:
Returns true if the specified value is in the map .
--generate--
returns true if the specified value is in the array .
returns true if the specified value is in the value .
returns true if the specified value is in the map .
returns true if the specified value is in the specified value .
returns true if the specified value is in .

code:
public void set at ( int i , long value ) {
 switch ( i ) {
 case DecimalInteger : x = value ;
 return ;
 case DecimalInteger : y = value ;
 return ;
 case DecimalInteger : z = value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
set the vector field value by index @param i @param value
--generate--
add the vector field value by index @param i @param value
set the vector field value by index @param i @param value
add the vector field value by index @param i @return
add the vector field field by index @param i @param value
add the vector field value by index @param i @param @param value

code:
public static byte buf copy long ( long value ) {
 byte buf buf = buffer ( DecimalInteger ) ;
 buf . write long ( value ) ;
 return buf ;
 }
comment:
Creates a new 8-byte big-endian buffer that holds the specified 64-bit integer .
--generate--
creates a new buffer that NUMBER to the specified NUMBER .
creates a new buffer that NUMBER to the specified UNK .
creates a new NUMBER buffer that UNK the specified NUMBER buffer .
creates a new NUMBER buffer that UNK the specified NUMBER NUMBER .
creates a new NUMBER buffer that UNK the specified NUMBER .

code:
public void delete ( int key ) {
 int i = container helpers . binary search ( keys , size , key ) ;
 if ( i >= DecimalInteger ) {
 remove at ( i ) ;
 }
 }
comment:
Removes the mapping from the specified key , if there was any .
--generate--
removes the element from the specified key , if any .
removes the element from the specified key .
removes the elements from the specified key .
removes the values from the specified key .
removes the element from the specified key , or null if it is not .

code:
protected highlight get highlight for x ( float val , float x , float y ) {
 list < highlight > closest values = get UNK at value ( val , x , y ) ;
 if ( closest values . is empty ( ) ) {
 return null ;
 }
 float left axis min dist = get minimum distance ( closest values , y , axis . axis dependency . t ) ;
 float right axis min dist = get minimum distance ( closest values , y , axis . axis dependency . t ) ;
 axis . axis dependency axis = left axis min dist < right axis min dist ? axis . axis dependency . t : axis . axis dependency . t ;
 highlight detail = get closest highlight by pixel ( closest values , x , y , axis , chart . get max highlight distance ( ) ) ;
 return detail ;
 }
comment:
Returns the corresponding Highlight for a given xVal and x - and y-touch position in pixels .
--generate--
returns the UNK for the given position and UNK .
returns the UNK for the given position of the UNK .
returns the UNK for the given position of the given UNK .
returns the UNK for the given position of the specified UNK .
returns the UNK for the given position of the UNK

code:
public void add at ( int i , long value ) {
 switch ( i ) {
 case DecimalInteger : x += value ;
 return ;
 case DecimalInteger : y += value ;
 return ;
 case DecimalInteger : z += value ;
 return ;
 case DecimalInteger : w += value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
add the vector field value by index @param i @param value
--generate--
add the vector field value by index @param i @return
add the vector field field by index @param i @param value
add the vector field value by index @param i @param @param value
adds the vector field value by index @param i @param value
add the vector field value by index @param i @param value

code:
@ override public closeable reference < bitmap > create bitmap internal ( int width , int height , bitmap . config bitmap config ) {
 int size in bytes = bitmap util . get size in byte for bitmap ( width , height , bitmap config ) ;
 bitmap bitmap = mbitmap pool . get ( size in bytes ) ;
 bitmaps . UNK bitmap ( bitmap , width , height , bitmap config ) ;
 return closeable reference . of ( bitmap , mbitmap pool ) ;
 }
comment:
Creates a bitmap of the specified width and height .
--generate--
creates a bitmap with the specified width and height .
creates a bitmap from the specified width .
creates a bitmap with the specified width .
creates a bitmap with the specified width and width .
creates a bitmap .

code:
x emit partition batch new ( transaction attempt tx , UNK collector collector , partition partition , x last partition meta ) ;
comment:
Return the metadata that can be used to reconstruct this partition/batch in the future .
--generate--
return the UNK to be used for the UNK .
return the UNK to be used for the UNK of the UNK .
return a UNK to be used for the UNK .
return the UNK to be used to the UNK of the UNK .
return a UNK to be used for the UNK of the UNK .


code:
public boolean is multi pane ( ) {
 return has headers ( ) && UNK container . get visibility ( ) == view . e ;
 }
comment:
Returns true if this activity is showing multiple panes -- the headers and a preference fragment .
--generate--
returns true if this node is a UNK .
returns true if this file is a UNK .
returns true if this view is a UNK .
returns true if this node is the UNK .
returns true if this node is a UNK of the UNK .

code:
public boolean is directory ( ) {
 if ( type == file type . classpath ) return false ;
 return file ( ) . is directory ( ) ;
 }
comment:
Returns true if this file is a directory .
--generate--
returns true if this file is a UNK .
returns true if this file is a file .
returns true if the file is a UNK .
returns true if this file is a input .
returns true if this file is a new .

code:
public void add header ( string key , string ... value ) {
 this . headers . put ( key , arrays . as list ( value ) ) ;
 }
comment:
Adds a new header with the given key .
--generate--
adds a new key with the given name .
adds a new key with the given index .
adds a new header with the given name .
adds a new header with the given index .
adds a new header with the specified name .

code:
public static boolean is UNK subtype ( types types , type mirror subtype , type mirror supertype ) {
 return types . is subtype ( types . UNK ( subtype ) , types . UNK ( supertype ) ) ;
 }
comment:
Returns true if the erased type of subtype is a subtype of the erased type of supertype .
--generate--
returns true if the given type is UNK .
returns true if the type of the given type .
returns true if the given type is a UNK .
returns true if the type of the given type is UNK .
returns true if the given type is UNK to the given type .

code:
public matrix4 set to rotation ( final float x1 , final float y1 , final float z1 , final float x2 , final float y2 , final float z2 ) {
 return set ( quat . set from cross ( x1 , y1 , z1 , x2 , y2 , z2 ) ) ;
 }
comment:
Set the matrix to a rotation matrix between two vectors .
--generate--
set the matrix to a rotation matrix matrix .
set the matrix to a rotation matrix .
set the matrix to a rotation matrix matrix
set the matrix to a rotation matrix matrix to be used .
set the matrix to a rotation matrix matrix to

code:
public static < e > immutable sorted multiset < e > copy of ( iterable < ? extends e > elements ) {
 @ suppress warnings ( String ) ordering < e > natural order = ( ordering < e > ) ordering . < comparable > natural ( ) ;
 return copy of ( natural order , elements ) ;
 }
comment:
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering .
--generate--
returns an immutable map containing the given elements .
returns an immutable elements containing the given elements .
returns an immutable immutable map containing the given elements .
returns an immutable map containing the given elements , by order .
returns an immutable map containing the given elements , in order .

code:
@ deprecated public static void add header ( http message message , char sequence name , object value ) {
 message . headers ( ) . add ( name , value ) ;
 }
comment:
Adds a new header with the specified name and value .
--generate--
adds a new header to the specified name .
adds a new header with the specified name .
adds a new header to the given name .
adds a new header with the given name .
adds a new header with the specified name and the specified name .

code:
public http headers set ( char sequence name , object value ) {
 return set ( name . to string ( ) , value ) ;
 }
comment:
Sets a header with the specified name and value .
--generate--
sets a new header with the specified name .
sets a new header with the given name .
sets a new item with the specified name .
sets a new object with the specified name .
sets a new item with the given name .

code:
public boolean set translation z ( float translation z ) {
 return nset translation z ( mnative render node , translation z ) ;
 }
comment:
Sets the translation value for the display list on the Z axis .
--generate--
sets the display value for the display list .
sets the display value for this view list .
sets the display value for this view list in this height .
sets the display value for this view list in the display list .
sets the display value for this view list in the display .

code:
public boolean is directory ( ) {
 return preloader . is directory ( file ) ;
 }
comment:
Returns true if this file is a directory .
--generate--
returns true if this file is a UNK .
returns true if this file is the UNK .
returns true if this file is a file .
returns true if this target is a UNK .
returns true if this file is a input .

code:
public final int [ ] get drawable state ( ) {
 if ( ( mdrawable state != null ) && ( ( mprivate flags & pflag_ drawable_ state_ y ) == DecimalInteger ) ) {
 return mdrawable state ;
 }
 else {
 mdrawable state = on create drawable state ( DecimalInteger ) ;
 mprivate flags &= ~ pflag_ drawable_ state_ y ;
 return mdrawable state ;
 }
 }
comment:
Return an array of resource IDs of the drawable states representing the current state of the view .
--generate--
return the current state of the current view .
return the current state of the current data .
return the current state of the current state .
return the current state of the current user .
return the current state of the UNK .

code:
@ deprecated public static void set date header ( http message message , char sequence name , date value ) {
 if ( value != null ) {
 message . headers ( ) . set ( name , http header date format . get ( ) . format ( value ) ) ;
 }
 else {
 message . headers ( ) . set ( name , null ) ;
 }
 }
comment:
Sets a new date header with the specified name and value .
--generate--
sets a new item with the specified name .
sets a new header with the specified name .
sets a new header header with the specified name name .
sets a new header object with the specified name .
sets a new header header with the specified name .

code:
@ override public string get type name ( string param name ) {
 assert . not null ( param name , String ) ;
 return this . type names . get ( param name ) ;
 }
comment:
Return the type name for the given parameter , if registered .
--generate--
return the class name for the given type .
return the class name for the given method .
return the class name for the given class .
return the class name for the given type , if any .
return the class name for the given type , or null .

code:
public boolean is socket ( ) {
 return ( st_mode & s_ t ) == s_ k ;
 }
comment:
Returns true iff this file is a UNIX-domain socket .
--generate--
returns true if this file is a UNK .
returns true if this file is a file .
returns true if this file is an .
returns true if this file is a input .
returns true if this file is a new .

code:
public void add file ( string filename , date date , input stream in ) throws exception {
 zip file entry entry = new zip file entry ( filename ) ;
 entry . set time ( date != null ? date . get time ( ) : new date ( ) . get time ( ) ) ;
 add file ( entry , in ) ;
 }
comment:
Adds a file with the specified name and date to the combined ZIP file .
--generate--
adds a new file to the specified file .
adds the given file to the specified file .
adds a new file to the given file .
adds the given path to the specified file .
adds a new file to the specified path .

code:
public matrix4 set to rotation ( float axis x , float axis y , float axis z , float degrees ) {
 if ( degrees == DecimalInteger ) {
 idt ( ) ;
 return this ;
 }
 return set ( quat . set from axis ( axis x , axis y , axis z , degrees ) ) ;
 }
comment:
Sets the matrix to a rotation matrix around the given axis .
--generate--
sets the matrix to the given matrix matrix .
sets the matrix to the specified matrix matrix .
sets the matrix to a matrix matrix to the specified matrix .
sets the matrix to a matrix matrix to the given matrix .
sets the matrix to a matrix matrix at the given matrix .

code:
public boolean is o ( ) {
 return ( st_mode & s_ t ) == s_ o ;
 }
comment:
Returns true iff this file is a FIFO .
--generate--
returns true if this file is a UNK .
returns true if this file is an .
returns true if this file is an . .
returns true if this object is an .
returns true if this file is a .

code:
public final int count data schemes ( ) {
 return mdata schemes != null ? mdata schemes . size ( ) : DecimalInteger ;
 }
comment:
Return the number of data schemes in the filter .
--generate--
return the number of bytes in the UNK .
return the size of the array of this data .
return the size of the array of the UNK .
return the size of the data in the UNK .
return the number of bytes that this data is UNK .

code:
public static < e extends comparable < ? super e > > immutable sorted multiset < e > copy of ( e [ ] elements ) {
 return copy of ( ordering . natural ( ) , arrays . as list ( elements ) ) ;
 }
comment:
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering .
--generate--
returns an immutable elements containing the given elements .
returns an immutable map containing the given elements .
returns an immutable map containing the given elements in order .
returns an immutable map containing the given elements containing this elements .
returns an immutable map containing the given elements containing the elements .

code:
public search source builder script field ( string name , script script ) {
 script field ( name , script , false ) ;
 return this ;
 }
comment:
Adds a script field under the given name with the provided script .
--generate--
adds a provided class with the given name .
adds a provided class with the given name with the given name .
adds a provided class with the given name with the specified name .
adds a provided class with the given name with the provided name .
adds a provided class with the given name with the given class .

code:
public put repository request builder set settings ( settings . builder settings ) {
 request . settings ( settings ) ;
 return this ;
 }
comment:
Sets the repository settings @param settings repository settings builder @return this builder
--generate--
sets the settings @param settings settings @return this request
sets the settings @param settings settings @return
sets the repository settings @param repository settings @return this request
sets the settings @param settings settings @return this settings
sets the settings @param settings settings settings

code:
@ deprecated public static void set header ( http message message , char sequence name , iterable < ? > values ) {
 message . headers ( ) . set ( name , values ) ;
 }
comment:
Sets a new header with the specified name and values .
--generate--
adds a new header with the specified name .
sets a new header with the specified name .
adds a new item with the specified name .
adds a new header with the specified name and the specified name .
adds a new header with the specified name and the specified value .

code:
public static string md5 digest as hex ( input stream input stream ) throws exception {
 return digest as hex string ( UNK UNK e , input stream ) ;
 }
comment:
Return a hexadecimal string representation of the MD5 digest of the given stream .
--generate--
return a string representation of the given UNK .
return a string representation of the given file .
return a string representation of the given string .
return a string representation of the file .
return a string representation of the UNK .

code:
public void set shortcuts visible ( boolean shortcuts visible ) {
 if ( UNK visible == shortcuts visible ) return ;
 set shortcuts visible inner ( shortcuts visible ) ;
 on items changed ( false ) ;
 }
comment:
Sets whether the shortcuts should be visible on menus .
--generate--
sets whether the UNK should be used .
sets whether the UNK should be UNK .
sets whether the UNK should be enabled .
sets whether the UNK should be added .
sets whether the UNK should be be .

code:
@ override public immutable set < entry < k , v > > entry set ( ) {
 immutable set < entry < k , v > > result = entry set ;
 return ( result == null ) ? entry set = create entry set ( ) : result ;
 }
comment:
Returns an immutable set of the mappings in this map .
--generate--
returns an immutable map of the values .
returns an immutable map of the map .
returns an immutable map of the values in this map .
returns an immutable map of the values in the map .
returns an immutable map of the values in this map , in any .

code:
public transition remove target ( int target id ) {
 if ( target id > DecimalInteger ) {
 mtarget ids . remove ( ( integer ) target id ) ;
 }
 return this ;
 }
comment:
Removes the given targetId from the list of ids that this Transition is interested in animating .
--generate--
removes the given header from the list .
removes the specified header from the list .
removes the given header from the list of all .
removes the specified header from the list of all .
removes the given object from the list of all .

code:
@ override public string to string ( ) {
 string properties string = string . format ( String , is UNK ( ) , allows self UNK ( ) ) ;
 return string . format ( UNK string_ t , properties string , nodes ( ) , edge value map ( ) ) ;
 }
comment:
Returns a string representation of this graph .
--generate--
returns a string representation of this UNK .
returns a string representation of this instance .
returns a string representation of this data .
returns a string representation of the UNK .
returns a string representation of this UNK

code:
public int remove index ( int index ) {
 if ( index >= size ) throw new index out of bounds exception ( String + index + String + size ) ;
 int [ ] items = this . items ;
 int value = items [ index ] ;
 size -- ;
 if ( ordered ) system . arraycopy ( items , index + DecimalInteger , items , index , size - index ) ;
 else items [ index ] = items [ size ] ;
 return value ;
 }
comment:
Removes and returns the item at the specified index .
--generate--
removes the index at the specified index .
removes the index from the specified index .
removes the specified at the specified index .
removes the specified index from the specified index .
removes the index at the given index .

code:
protected time zone get default time zone ( ) {
 return this . default time zone ;
 }
comment:
Return the fixed TimeZone that this resolver will return if no cookie found , if any .
--generate--
return the current time , if any .
return the current time , if any , if any .
return the current time , if any . return null if it is not .
return the current time , if any . return null if any .
return the current time , if any . return null if it is not in any .

code:
public long [ ] as long array ( ) {
 if ( type != value type . array ) throw new illegal state exception ( String + type ) ;
 long [ ] array = new long [ size ] ;
 int i = DecimalInteger ;
 for ( json value value = child ;
 value != null ;
 value = value . next , i ++ ) {
 long v ;
 switch ( value . type ) {
 case string value : v = long . parse long ( value . string value ) ;
 break ;
 case double value : v = ( long ) value . double value ;
 break ;
 case long value : v = value . long value ;
 break ;
 case boolean value : v = value . long value != DecimalInteger ? DecimalInteger : DecimalInteger ;
 break ;
 default : throw new illegal state exception ( String + value . type ) ;
 }
 array [ i ] = v ;
 }
 return array ;
 }
comment:
Returns the children of this value as a newly allocated long array .
--generate--
returns the first value of this array .
returns the single value of this array .
returns the first value of this key .
returns the first value for this array .
returns the single value of this key .

code:
public int get child atom of type count ( int type ) {
 int count = DecimalInteger ;
 int size = leaf children . size ( ) ;
 for ( int i = DecimalInteger ;
 i < size ;
 i ++ ) {
 leaf atom atom = leaf children . get ( i ) ;
 if ( atom . type == type ) {
 count ++ ;
 }
 }
 size = container children . size ( ) ;
 for ( int i = DecimalInteger ;
 i < size ;
 i ++ ) {
 container atom atom = container children . get ( i ) ;
 if ( atom . type == type ) {
 count ++ ;
 }
 }
 return count ;
 }
comment:
Returns the total number of leaf/container children of this atom with the given type .
--generate--
returns the type of the given type .
returns the type of the specified type .
returns the type of the type of the type .
returns the type of the type of the given type .
returns the type of the type of the specified type .

code:
public char remove index ( int index ) {
 if ( index >= size ) throw new index out of bounds exception ( String + index + String + size ) ;
 char [ ] items = this . items ;
 char value = items [ index ] ;
 size -- ;
 if ( ordered ) system . arraycopy ( items , index + DecimalInteger , items , index , size - index ) ;
 else items [ index ] = items [ size ] ;
 return value ;
 }
comment:
Removes and returns the item at the specified index .
--generate--
removes the index at the specified index .
removes the index from the specified index .
removes an index from the specified index .
removes the specified index from the specified index .
removes the specified index from the index .

code:
public boolean remove all ( char array array ) {
 int size = this . size ;
 int start size = size ;
 char [ ] items = this . items ;
 for ( int i = DecimalInteger , n = array . size ;
 i < n ;
 i ++ ) {
 char item = array . get ( i ) ;
 for ( int ii = DecimalInteger ;
 ii < size ;
 ii ++ ) {
 if ( item == items [ ii ] ) {
 remove index ( ii ) ;
 size -- ;
 break ;
 }
 }
 }
 return size != start size ;
 }
comment:
Removes from this array all of elements contained in the specified array .
--generate--
removes all values of the specified array .
removes all values from the specified array .
removes all values from the specified array of this array .
removes all values from the specified array of the array .
removes all values from the specified array of the specified array .

code:
@ suppress warnings ( String ) public void set ( string field name , object value ) {
 boolean is string = ( value instanceof string ) ;
 string str value = is string ? ( string ) value : null ;
 long column index = proxy state . get row$realm ( ) . get column index ( field name ) ;
 realm field type type = proxy state . get row$realm ( ) . get column type ( column index ) ;
 if ( is string && type != realm field type . g ) {
 switch ( type ) {
 case n : value = boolean . parse boolean ( str value ) ;
 break ;
 case r : value = long . parse long ( str value ) ;
 break ;
 case t : value = float . parse float ( str value ) ;
 break ;
 case e : value = double . parse double ( str value ) ;
 break ;
 case e : value = json utils . string to date ( str value ) ;
 break ;
 default : throw new illegal argument exception ( string . format ( String + String + String , field name , value ) ) ;
 }
 }
 if ( value == null ) {
 set null ( field name ) ;
 }
 else {
 set value ( field name , value ) ;
 }
 }
comment:
Sets the value for the given field .
--generate--
sets the value for the given key .
sets the value of the given key .
sets the value for the given field .
sets the given value for the given key .
sets the given value for the specified key .

code:
public matrix4 set ( vector3 position , quaternion orientation ) {
 return set ( position . x , position . y , position . z , orientation . x , orientation . y , orientation . z , orientation . w ) ;
 }
comment:
Set this matrix to the specified translation and rotation .
--generate--
set this matrix to the specified matrix .
set this matrix to the given matrix .
set this matrix to a given matrix .
set this matrix to the specified position .
set this matrix to the given position .

code:
public string get init method ( ) {
 return this . init method ;
 }
comment:
Return the default init-method setting for the document that 's currently parsed .
--generate--
return the default UNK for the UNK .
return the default value for the UNK UNK .
return the default UNK for the UNK UNK .
return the default value for the UNK .
return the UNK UNK for the UNK .

code:
public value holder get indexed argument value ( int index , class < ? > required type , string required name ) {
 assert . is true ( index >= DecimalInteger , String ) ;
 value holder value holder = this . indexed argument values . get ( index ) ;
 if ( value holder != null && ( value holder . get type ( ) == null || ( required type != null && class utils . matches type name ( required type , value holder . get type ( ) ) ) ) && ( value holder . get name ( ) == null || String . equals ( required name ) || ( required name != null && required name . equals ( value holder . get name ( ) ) ) ) ) {
 return value holder ;
 }
 return null ;
 }
comment:
Get argument value for the given index in the constructor argument list .
--generate--
return the value for the given index .
return the value for the given key .
return the value for the given key and value .
return the value for the given index in the key .
return the value for the given key and value for the given value .

code:
static boring fragment new instance ( int num ) {
 boring fragment f = new boring fragment ( ) ;
 bundle args = new bundle ( ) ;
 args . put int ( String , num ) ;
 f . set arguments ( args ) ;
 return f ;
 }
comment:
Create a new instance of CountingFragment , providing `` num '' as an argument .
--generate--
create a new instance of an values .
create a new instance of the collection .
create a new instance of an values from the single class .
create a new instance of an values from the single method .
create a new instance of an values from the single class

code:
public string get class name ( ) {
 if ( realm == null ) {
 return native get class name ( native ptr ) ;
 }
 else {
 return table . get name ( ) . substring ( table . table_ x . length ( ) ) ;
 }
 }
comment:
Returns the name of the RealmObject class being represented by this schema .
--generate--
returns the class name of the class .
returns the default name of the class .
returns the class name of the class in this class .
returns the class name of the class in the class .
returns the class name of the class in the UNK .

code:
public void add all ( iterator < ? extends number > values ) {
 while ( values . has next ( ) ) {
 add ( values . next ( ) . double value ( ) ) ;
 }
 }
comment:
Adds the given values to the dataset .
--generate--
adds the given values to the list .
adds the specified values to the list .
add the given values to the list .
add the specified values to the list .
adds the given values to the list of

code:
public void set UNK ( string name , int value ) {
 l20 gl = gdx . gl20 ;
 check managed ( ) ;
 int location = fetch uniform location ( name ) ;
 gl . gl UNK ( location , value ) ;
 }
comment:
Sets the uniform with the given name .
--generate--
sets the single with the given name .
sets the single with the specified name .
sets the first with the given name .
sets the first with the specified name .
sets the single value .

code:
public final char char at ( int index ) {
 if ( index < DecimalInteger || index >= remaining ( ) ) {
 throw new index out of bounds exception ( ) ;
 }
 return get ( position + index ) ;
 }
comment:
Returns the character located at the specified index in the buffer .
--generate--
returns the time at the specified index .
returns the time at the given index .
returns the index at the specified index .
returns the index at the given index .
returns the index for the specified index .

code:
public array < k > to array ( ) {
 array array = new array ( true , map . size ) ;
 while ( has next ) array . add ( next ( ) ) ;
 return array ;
 }
comment:
Returns a new array containing the remaining keys .
--generate--
returns a new array containing the values .
returns a new array containing the map .
returns a new array containing the single array .
returns a new array containing the elements .
returns a new array containing the array .

code:
public void remove at ( int index ) {
 if ( values [ index ] != d ) {
 values [ index ] = d ;
 garbage = true ;
 }
 }
comment:
Removes the mapping at the specified index .
--generate--
removes the item at the specified index .
removes the child at the specified index .
removes the item at the given index .
removes the specified at the specified index .
removes the child at the given index .

code:
public boolean remove index ( int index ) {
 if ( index >= size ) throw new index out of bounds exception ( String + index + String + size ) ;
 boolean [ ] items = this . items ;
 boolean value = items [ index ] ;
 size -- ;
 if ( ordered ) system . arraycopy ( items , index + DecimalInteger , items , index , size - index ) ;
 else items [ index ] = items [ size ] ;
 return value ;
 }
comment:
Removes and returns the item at the specified index .
--generate--
removes an item at the specified index .
removes the index at the specified index .
removes an item from the specified index .
removes the index from the specified index .
removes and returns the specified index at the specified index .

code:
@ override public int get max size ( ) {
 return this . max size ;
 }
comment:
Return the maximum size of the pool .
--generate--
return the maximum size of the request .
return the maximum size of the data .
return the maximum size of the maximum data .
return the maximum size of the current data .
return the maximum size of the maximum UNK .

code:
public void put ( string key , long value ) {
 if ( key != null ) {
 url params . put ( key , string . value of ( value ) ) ;
 }
 }
comment:
Adds a long value to the request .
--generate--
adds a new value to the request .
adds a new value to the list .
adds a new value to the UNK .
adds a new value to the specified value .
adds a new value to the list . .

code:
public int array to array ( ) {
 int array array = new int array ( true , set . size ) ;
 while ( has next ) array . add ( next ( ) ) ;
 return array ;
 }
comment:
Returns a new array containing the remaining keys .
--generate--
returns a new array containing the values .
returns a new array containing the map .
returns a new array of the values .
returns a new array containing the array of this array .
returns a new array containing the array of the values .

code:
void set ( final int type , final string str val1 , final string str val2 , final string str val3 ) {
 this . type = type ;
 this . str val1 = str val1 ;
 this . str val2 = str val2 ;
 this . str val3 = str val3 ;
 switch ( type ) {
 case class writer . f8 : case class writer . r : case class writer . s : case class writer . e : case class writer . type_ l : hash code = 0x7 f & ( type + str val1 . hash code ( ) ) ;
 return ;
 case class writer . name_ e : {
 hash code = 0x7 f & ( type + str val1 . hash code ( ) * str val2 . hash code ( ) ) ;
 return ;
 }
 default : hash code = 0x7 f & ( type + str val1 . hash code ( ) * str val2 . hash code ( ) * str val3 . hash code ( ) ) ;
 }
 }
comment:
Sets this item to an item that do not hold a primitive value .
--generate--
sets a new value to this item .
sets a new value to this view .
sets a new value to this matrix .
sets a new value to this new .
sets a new value to the specified .

code:
public boolean remove all ( byte array array ) {
 int size = this . size ;
 int start size = size ;
 byte [ ] items = this . items ;
 for ( int i = DecimalInteger , n = array . size ;
 i < n ;
 i ++ ) {
 int item = array . get ( i ) ;
 for ( int ii = DecimalInteger ;
 ii < size ;
 ii ++ ) {
 if ( item == items [ ii ] ) {
 remove index ( ii ) ;
 size -- ;
 break ;
 }
 }
 }
 return size != start size ;
 }
comment:
Removes from this array all of elements contained in the specified array .
--generate--
removes all values of the specified array .
removes all values from the specified array .
removes all values from the specified array of this array .
removes all values from the specified array of the array .
removes all values from the array of the array .

code:
public static boolean has UNK meta ( annotation mirror anno ) {
 return anno . get annotation type ( ) . as element ( ) . get annotation ( UNK . class ) != null ;
 }
comment:
Returns true if the given annotation has a @Inherited meta-annotation .
--generate--
returns true if the UNK is UNK .
returns true if the UNK should be used .
returns true if the UNK is a UNK .
returns true if the UNK should be used to the UNK .
returns true if the UNK should be used to the the UNK .

code:
private void remove item at int ( int index , boolean update children on menu views ) {
 if ( ( index < DecimalInteger ) || ( index >= items . size ( ) ) ) return ;
 items . remove ( index ) ;
 if ( update children on menu views ) on items changed ( true ) ;
 }
comment:
Remove the item at the given index and optionally forces menu views to update .
--generate--
removes the item at the given index .
removes the item at the specified index .
removes the item at the given index and UNK .
removes the item at the given index and the specified index .
removes the item at the specified index and the specified index .

code:
public int get state ( ) throws remote exception {
 throw on dead server ( ) ;
 return utils . transact get int ( method_ get_ e , state_ d ) ;
 }
comment:
Gets the current state of this clock 's common time service in the the master election algorithm .
--generate--
gets the current state of the view .
gets the current state of the current view .
gets the current state of the current time .
return the current state of the current view .
gets the current state of the view in the UNK .

code:
public json value get ( string name ) {
 json value current = child ;
 while ( current != null && ! current . name . equals ignore case ( name ) ) current = current . next ;
 return current ;
 }
comment:
Returns the child with the specified name .
--generate--
returns the header with the specified name .
returns the single value with the specified name .
returns the new value with the specified name .
returns the element to the specified name .
returns the element to the specified value .

code:
@ override public string to string ( ) {
 string properties string = string . format ( String , is UNK ( ) , allows self UNK ( ) ) ;
 return string . format ( UNK string_ t , properties string , nodes ( ) , edges ( ) ) ;
 }
comment:
Returns a string representation of this graph .
--generate--
returns a string representation of this UNK .
returns a string representation of this instance .
returns a string representation of this data .
returns a string representation of the UNK .
returns a string representation of this instance , or null if it is not .

code:
@ nullable public final color state list get color state list ( @ color res int id ) {
 return get resources ( ) . get color state list ( id , get theme ( ) ) ;
 }
comment:
Returns a color state list associated with a particular resource ID and styled for the current theme .
--generate--
returns a color for the specified id .
returns a new color for the specified id .
returns a drawable with the specified id .
returns a drawable with the specified id of the specified color .
returns a drawable with the specified id of the specified resource .

code:
@ override public string to string ( ) {
 more objects . to string helper s = more objects . to string helper ( this ) ;
 if ( initial capacity != unset_ t ) {
 s . add ( String , initial capacity ) ;
 }
 if ( concurrency level != unset_ t ) {
 s . add ( String , concurrency level ) ;
 }
 if ( key strength != null ) {
 s . add ( String , ascii . to lower case ( key strength . to string ( ) ) ) ;
 }
 if ( value strength != null ) {
 s . add ( String , ascii . to lower case ( value strength . to string ( ) ) ) ;
 }
 if ( key equivalence != null ) {
 s . add value ( String ) ;
 }
 return s . to string ( ) ;
 }
comment:
Returns a string representation for this MapMaker instance .
--generate--
returns a string representation of this instance .
returns a string representation of this UNK .
returns a string representation of this view .
returns a string representation of this data .
returns a string representation of the UNK of this UNK .

code:
protected class < ? > required view class ( ) {
 return abstract url based view . class ;
 }
comment:
Return the required type of view for this resolver .
--generate--
return the class type of this view .
return the configured type of this view .
return the class type of the view .
return the class of the view .
return the class type of the UNK .

code:
public static extended whitespace throwable pattern converter new instance ( string [ ] options ) {
 return new extended whitespace throwable pattern converter ( options ) ;
 }
comment:
Creates a new instance of the class .
--generate--
creates a new instance of the UNK .
creates a new instance of the values .
creates a new instance of the data .
creates a new instance of the given UNK .
creates a new instance of the UNK

code:
public static path fragment get manifest path from fileset path ( path fragment fileset dir ) {
 path fragment manifest dir = fileset dir . replace name ( String + fileset dir . get base name ( ) ) ;
 path fragment output manifest frag = manifest dir . get relative ( String ) ;
 return output manifest frag ;
 }
comment:
Returns the path of the associated manifest file for the path of a Fileset .
--generate--
returns the path of the given path .
returns the path of the given file .
returns the path of the path .
returns the path of the file .
returns the path of the UNK .

code:
public boolean is rotation enabled ( ) {
 return mrotate enabled ;
 }
comment:
Returns true if rotation of the chart by touch is enabled , false if not .
--generate--
returns true if the device is enabled .
returns true if the device is enabled to be used .
returns true if the device is enabled to be used for the user .
returns true if the device is enabled to be used for the UNK .
returns true if the device is enabled to be used for the UNK of the user .

code:
public boolean remove all ( short array array ) {
 int size = this . size ;
 int start size = size ;
 short [ ] items = this . items ;
 for ( int i = DecimalInteger , n = array . size ;
 i < n ;
 i ++ ) {
 short item = array . get ( i ) ;
 for ( int ii = DecimalInteger ;
 ii < size ;
 ii ++ ) {
 if ( item == items [ ii ] ) {
 remove index ( ii ) ;
 size -- ;
 break ;
 }
 }
 }
 return size != start size ;
 }
comment:
Removes from this array all of elements contained in the specified array .
--generate--
removes all values from the specified array .
removes all values of the specified array .
removes all values from the specified array of this array .
removes all values from the specified array of the array .
removes all values from the specified array , in the array .

code:
public void set data source supplier ( @ nullable supplier < data source < e > > data source supplier ) {
 mdata source supplier = data source supplier ;
 }
comment:
Sets the data source supplier to be used .
--generate--
sets the data data to be used .
sets the data data for the request .
sets the data data to be used for the request .
sets the data data to be used for the UNK .
sets the data data to be used by the UNK .

code:
public void put ( string key , input stream stream , string name , string content type , boolean auto close ) {
 if ( key != null && stream != null ) {
 stream params . put ( key , stream wrapper . new instance ( stream , name , content type , auto close ) ) ;
 }
 }
comment:
Adds an input stream to the request .
--generate--
adds an input data to the request .
adds an output data to the request .
adds an input data to the file .
adds an rule to the request .
adds an input data to the current file .

code:
public int get step argument ( int index ) {
 return b [ offset + DecimalInteger * index + DecimalInteger ] ;
 }
comment:
Returns the index of the type argument that the given step is stepping into .
--generate--
returns the value of the given index .
returns the value of the given key .
returns the value of the specified index .
returns the value of the specified key .
returns the value of the given element .

code:
public boolean is draw labels enabled ( ) {
 return mdraw labels ;
 }
comment:
Returns true if drawing the labels is enabled for this axis .
--generate--
returns true if the UNK is enabled .
returns true if this view is enabled .
returns true if this view is currently in the UNK .
returns true if this view is currently in the specified UNK .
returns true if this view is currently in the current UNK .

code:
public static void add filter library ( string library path ) {
 if ( mlog verbose ) log . v ( g , String + library path ) ;
 synchronized ( mclass loader guard ) {
 if ( libraries . contains ( library path ) ) {
 if ( mlog verbose ) log . v ( g , String ) ;
 return ;
 }
 libraries . add ( library path ) ;
 mcurrent class loader = new path class loader ( library path , mcurrent class loader ) ;
 }
 }
comment:
Adds a new Java library to the list to be scanned for filters .
--generate--
adds a new action to the UNK .
adds a new file to the UNK .
adds a new UNK to the UNK .
adds a new options to the UNK .
adds a new options to the list of the UNK .

code:
public string to short string ( string builder sb ) {
 sb . set length ( DecimalInteger ) ;
 sb . append ( String ) ;
 sb . append ( left ) ;
 sb . append ( String ) ;
 sb . append ( top ) ;
 sb . append ( String ) ;
 sb . append ( right ) ;
 sb . append ( String ) ;
 sb . append ( bottom ) ;
 sb . append ( String ) ;
 return sb . to string ( ) ;
 }
comment:
Return a string representation of the rectangle in a compact form .
--generate--
return a string representation of the string .
return a string representation of the given string .
return a string representation of the provided string .
return a string representation of the string in the string .
return a string representation of the string in the specified string .

code:
public void translate x ( float amount ) {
 this . x += amount ;
 if ( dirty ) return ;
 final float [ ] vertices = this . vertices ;
 for ( int i = DecimalInteger ;
 i < vertices . length ;
 i += sprite . vertex_ e ) vertices [ i ] += amount ;
 }
comment:
Sets the x position relative to the current position where the sprite will be drawn .
--generate--
sets the height to the current position .
sets the matrix to the current position .
sets the height to the current matrix .
sets the height to the specified position .
sets the matrix to the specified position .

code:
public void set vertex attribute ( string name , int size , int type , boolean normalize , int stride , int offset ) {
 l20 gl = gdx . gl20 ;
 check managed ( ) ;
 int location = fetch attribute location ( name ) ;
 if ( location == - DecimalInteger ) return ;
 gl . gl vertex UNK pointer ( location , size , type , normalize , stride , offset ) ;
 }
comment:
Sets the vertex attribute with the given name .
--generate--
sets the single with the given name .
sets the single name of the given name .
sets the single name with the given name .
sets the single name of the specified name .
sets the first name of the given name .

code:
@ non null public builder set UNK by biometric enrollment ( boolean invalidate key ) {
 UNK by biometric enrollment = invalidate key ;
 return this ;
 }
comment:
Sets whether this key should be invalidated on fingerprint enrollment .
--generate--
sets whether this UNK should be used .
sets whether this UNK should be used for the UNK .
sets whether this UNK should be used to the UNK .
sets whether this node should be used to the UNK .
sets whether this UNK should be used for the UNK of the UNK .

code:
protected model and view get model and view ( string view name , exception ex , http servlet request request ) {
 return get model and view ( view name , ex ) ;
 }
comment:
Return a ModelAndView for the given request , view name and exception .
--generate--
return the view for the given view .
create the view for the given view .
return the view for the given view , if any .
return the view for the specified view .
return the view for the given view , if the view is not .

code:
public boolean remove all ( float array array ) {
 int size = this . size ;
 int start size = size ;
 float [ ] items = this . items ;
 for ( int i = DecimalInteger , n = array . size ;
 i < n ;
 i ++ ) {
 float item = array . get ( i ) ;
 for ( int ii = DecimalInteger ;
 ii < size ;
 ii ++ ) {
 if ( item == items [ ii ] ) {
 remove index ( ii ) ;
 size -- ;
 break ;
 }
 }
 }
 return size != start size ;
 }
comment:
Removes from this array all of elements contained in the specified array .
--generate--
removes all values from the specified array .
removes all values of the specified array .
removes all values from the specified array of this array .
removes all values from the specified array of the array .
removes all values from the given array .

code:
public boolean is UNK ( ) {
 try {
 return service . is UNK ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
Returns true if the device is in an interactive state .
--generate--
returns true if the UNK is UNK .
returns true if this UNK is UNK .
returns true if the UNK is in the UNK .
returns true if the UNK is UNK in this UNK .
returns true if the UNK is UNK in the UNK .

code:
public void set max sql cache size ( int cache size ) {
 if ( cache size > max_ sql_ cache_ e || cache size < DecimalInteger ) {
 throw new illegal state exception ( String + max_ sql_ cache_ e ) ;
 }
 synchronized ( lock ) {
 throw if not open locked ( ) ;
 final int old max sql cache size = mconfiguration locked . max sql cache size ;
 mconfiguration locked . max sql cache size = cache size ;
 try {
 mconnection pool locked . UNK ( mconfiguration locked ) ;
 }
 catch ( runtime exception ex ) {
 mconfiguration locked . max sql cache size = old max sql cache size ;
 throw ex ;
 }
 }
 }
comment:
Sets the maximum size of the prepared-statement cache for this database .
--generate--
sets the maximum size of the bytes .
sets the maximum size of the bytes to be used .
sets the maximum size of the bytes to use .
sets the maximum size of the bytes
sets the maximum size of the bytes to be used to be in the specified UNK .

code:
public matrix4 set ( float quaternion x , float quaternion y , float quaternion z , float quaternion w ) {
 return set ( DecimalFloatingPoint , DecimalFloatingPoint , DecimalFloatingPoint , quaternion x , quaternion y , quaternion z , quaternion w ) ;
 }
comment:
Sets the matrix to a rotation matrix representing the quaternion .
--generate--
sets this matrix to a rotation matrix .
sets this matrix to a matrix to a rotation .
sets this matrix to a matrix to a matrix .
sets this matrix to a matrix to the rotation .
sets this matrix to a matrix to a y matrix .

code:
public int get debug flags ( ) {
 return mdebug flags ;
 }
comment:
Get the current value of the debug flags .
--generate--
get the current value of the view .
get the current value of the UNK .
get the current value of the text .
get the current value of the current view .
get the current value of the current UNK .

code:
public color filter get color filter ( ) {
 return mcolor filter ;
 }
comment:
Returns the active color filter for this ImageView .
--generate--
returns the color used for this view .
returns the color view for this view .
returns the drawable used for this view .
returns the color used to use for this view .
returns the color used to use .

code:
public int remove index ( int index ) {
 if ( index >= size ) throw new index out of bounds exception ( String + index + String + size ) ;
 byte [ ] items = this . items ;
 int value = items [ index ] ;
 size -- ;
 if ( ordered ) system . arraycopy ( items , index + DecimalInteger , items , index , size - index ) ;
 else items [ index ] = items [ size ] ;
 return value ;
 }
comment:
Removes and returns the item at the specified index .
--generate--
removes the index at the specified index .
removes the index from the specified index .
removes the specified at the specified index .
removes the specified index from the specified index .
removes the index at the given index .

code:
public static boolean get boolean ( string key , boolean def ) {
 if ( key . length ( ) > prop_ name_ x ) {
 throw new illegal argument exception ( String + prop_ name_ x ) ;
 }
 return UNK ( key , def ) ;
 }
comment:
Get the value for the given key , returned as a boolean .
--generate--
returns the value for the given key .
returns the value for the given value .
get the value for the given key .
returns the value of the given key .
returns the value for the given UNK .

code:
@ can ignore return value public < e extends t > e min ( iterable < e > iterable ) {
 return min ( iterable . iterator ( ) ) ;
 }
comment:
Returns the least of the specified values according to this ordering .
--generate--
returns the elements of the specified values .
returns the iterator of the specified values .
returns the observable of the specified values .
returns the iterator of the given values .
returns the iterator of the specified values , in the specified .

code:
public array < fixture > get fixture list ( ) {
 return fixtures ;
 }
comment:
Get the list of all fixtures attached to this body .
--generate--
get the list of all values .
get the list of all of this view .
get the list of all values to be used .
get the list of all values to be used for this list .
get the list of all values to be used to this UNK .

code:
public int get max num focus areas ( ) {
 return get int ( key_ max_ num_ focus_ s , DecimalInteger ) ;
 }
comment:
Gets the maximum number of focus areas supported .
--generate--
gets the maximum number of pixels .
gets the maximum number of pixels for this view .
gets the maximum number of pixels for this UNK .
gets the maximum number of bytes for this view .
gets the maximum number of bytes for this UNK .

code:
public type get return type ( ) {
 return get return type ( get descriptor ( ) ) ;
 }
comment:
Returns the return type of methods of this type .
--generate--
returns the type of the type .
returns the type type of the type .
returns the type of the UNK type .
returns the type of the UNK .
returns the type of the type of this type .

code:
public indices aliases request builder add alias ( string indices [ ] , string alias , string filter ) {
 request . add alias action ( alias actions . add ( ) . indices ( indices ) . alias ( alias ) . filter ( filter ) ) ;
 return this ;
 }
comment:
Adds an alias to the index .
--generate--
adds an indices to the index .
adds an settings to the index .
adds an indices to the request .
adds a indices to the index .
adds an indices to the index

code:
public string get bean name ( ) {
 return this . bean name ;
 }
comment:
Return the name of the instance that was of the wrong type .
--generate--
return the name of the class .
return the name of the bean , if any .
return the name of the class , if any .
return the name of the bean .
return the name of the bean , if any , if any .

code:
@ gen ignore x509 certificate [ ] peer certificate chain ( ) throws UNK UNK exception ;
comment:
Returns null if connection is not SSL .
--generate--
returns null if it is not .
returns null if there is not .
returns null if any .
returns null if there is not not .
returns null if it is not

code:
public void set target bean name ( string target bean name ) {
 this . target bean name = target bean name ;
 }
comment:
Set the name of the target bean in the Spring BeanFactory .
--generate--
set the name of the request .
set the name of the class .
set the name of the target .
set the name of the bean .
set the name of the class that this request .

code:
public intent put extra ( string name , short value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put short ( name , value ) ;
 return this ;
 }
comment:
Add extended data to the intent .
--generate--
add extended data to the search .
add extra http data to the search .
add extra data to the search .
add extra http data to the intent .
add extra http data to the current data .

code:
public path fragment get jar executable ( ) {
 return jar ;
 }
comment:
Returns the path to the jar binary .
--generate--
returns the path to the path .
returns the path of the path .
returns the path of the path to this file .
returns the path of the path to this file . returns null if this file is not .
returns the path of the path to this file . .

code:
public uri get UNK file url ( ) {
 return UNK file url ;
 }
comment:
Returns the URL of the current PAC script or null if there is no PAC script .
--generate--
returns the path of the UNK .
returns the UNK of the UNK .
returns the file of the UNK .
returns the path of the file .
returns the UNK of the file .

code:
public void set conforming ( boolean conforming ) {
 is conforming = conforming ;
 }
comment:
Sets the boolean flag to indicate whether the cluster is conforming to all non-excluded conformity rules .
--generate--
sets whether the UNK is UNK .
sets whether this UNK is UNK .
sets the UNK UNK .
sets whether the UNK is UNK
sets whether the UNK is UNK to

code:
public usb accessory [ ] get accessory list ( ) {
 try {
 usb accessory accessory = service . get current accessory ( ) ;
 if ( accessory == null ) {
 return null ;
 }
 else {
 return new usb accessory [ ] {
 accessory }
 ;
 }
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
Returns a list of currently attached USB accessories .
--generate--
returns a list of all UNK .
returns a list of all of the UNK .
returns a list of UNK in the UNK .
returns a list of all of this UNK .
returns a list of all the UNK .

code:
@ json property ( String ) public server factory get server factory ( ) {
 return server ;
 }
comment:
Returns the server-specific section of the configuration file .
--generate--
returns the UNK of the UNK .
returns the new instance of this view .
returns the new instance of this context .
returns the new instance of this request .
returns the new instance of this instance .

code:
@ suppress warnings ( String ) public static < t > operator on UNK latest < t > instance ( ) {
 return ( operator on UNK latest < t > ) holder . e ;
 }
comment:
Returns a singleton instance of the OnBackpressureLatest operator since it is stateless .
--generate--
returns the UNK of the UNK .
returns the UNK of the UNK UNK .
returns a UNK UNK for the UNK .
returns a UNK UNK for the given UNK .
returns a UNK UNK for the UNK of the UNK .

code:
public void set value ( object value ) {
 this . value = value ;
 }
comment:
Set the result value returned by a successful invocation of the target method , if any .
--generate--
set the value of the UNK .
set the value for the UNK .
set the value of the given value .
set the value of the given UNK .
set the value of the new value .

code:
public void set catalog name ( string catalog name ) {
 this . catalog name = catalog name ;
 }
comment:
Set the name of the catalog for this context .
--generate--
set the name of the query .
set the name of the document .
set the name of the search .
set the name of the document to use .
set the name of the document to be used .

code:
public static list < string > get cert fingerprints from package manager ( string package name , context context ) throws name not found exception {
 signature [ ] signatures = context . get package manager ( ) . get package info ( package name , package manager . get_ s ) . signatures ;
 array list < string > result = new array list < string > ( signatures . length ) ;
 for ( signature sig : signatures ) {
 result . add ( compute normalized sha256 fingerprint ( sig . to byte array ( ) ) ) ;
 }
 return result ;
 }
comment:
Returns the normalized sha-256 fingerprints of a given package according to the Android package manager .
--generate--
returns a list of UNK UNK .
returns a list of UNK for the given UNK .
returns a list of UNK for the UNK .
returns a list of UNK from the given UNK .
returns a list of UNK from the UNK .

code:
public string get name ( ) {
 return this . name ;
 }
comment:
Return the name of this parameter in the operation signature .
--generate--
return the name of the UNK .
return the name of the request .
return the name of the class .
return the name of the string .
return the name of the target .

code:
public void set color ( color tint ) {
 float color = tint . to float bits ( ) ;
 float [ ] vertices = this . vertices ;
 vertices [ c1 ] = color ;
 vertices [ c2 ] = color ;
 vertices [ c3 ] = color ;
 vertices [ UNK ] = color ;
 }
comment:
Sets the color used to tint this sprite .
--generate--
sets the color to be used .
sets the color used to be used .
sets the color to be used to the text .
sets the color to be used to the color .
sets the color to be used for the text .

code:
public label get target label ( ) {
 return target label ;
 }
comment:
Returns the label of the associated target .
--generate--
returns the path of the target .
returns the path of the UNK .
returns the target .
returns the path of the action .
returns the path of the file .

code:
public cpp link action builder add object files ( iterable < artifact > inputs ) {
 for ( artifact input : inputs ) {
 add object file ( linker inputs . simple linker input ( input , artifact category . object_ e ) ) ;
 }
 return this ;
 }
comment:
Adds object files to the linker action .
--generate--
adds all files to the action .
adds an files to the action .
adds an action to the action .
adds an options to the action .
adds an files to the action

code:
public transition remove listener ( transition listener listener ) {
 if ( listeners == null ) {
 return this ;
 }
 listeners . remove ( listener ) ;
 if ( listeners . size ( ) == DecimalInteger ) {
 listeners = null ;
 }
 return this ;
 }
comment:
Removes a listener from the set listening to this animation .
--generate--
removes a listener from the listener .
removes a listener for the listener .
removes a listener from the list .
removes a listener from the UNK .
removes a listener from the listener . .

code:
public void set positive button text ( char sequence positive button text ) {
 mpositive button text = positive button text ;
 }
comment:
Sets the text of the positive button of the dialog .
--generate--
sets the text of the view .
sets the text of the text .
sets the UNK of the text .
sets the text of the view of the text .
sets the text of the view of the current text .

code:
public void set date time style ( format style date time style ) {
 this . date style = date time style ;
 this . time style = date time style ;
 }
comment:
Set the style to use for date and time types .
--generate--
set the time used to use .
set the time used to use for the UNK .
set the time used to use to the UNK .
set the time used to use for the UNK of the UNK .
set the time used to use for the UNK of the UNK

code:
public string get name ( ) {
 return this . name ;
 }
comment:
Return the name of the method argument .
--generate--
return the name of the UNK .
return the name of the request .
return the name of the class .
return the name of the string .
return the name of the target .

code:
spdy settings frame set value ( int id , int value ) ;
comment:
Sets the value of the setting ID .
--generate--
sets the value of the UNK .
sets the value of the specified view .
sets the UNK id of the view .
sets the UNK id of the list .
sets the UNK id of the UNK .

code:
public void set time ( float time ) {
 this . time = time ;
 }
comment:
Sets the time spent waiting for the delay .
--generate--
sets the time for the UNK .
sets the time to the UNK .
sets the current time to the UNK .
set the current time to the UNK .
sets the current time to the current UNK .

code:
public url path helper get url path helper ( ) {
 return url path helper ;
 }
comment:
Return the UrlPathHelper implementation to use for resolution of lookup paths .
--generate--
return the path path to use .
return the path path to be used for this url .
return the path path to be used for this request .
return the path path to be used for this path .
return the path path to be used for this target .

code:
public void set logger name ( string logger name ) {
 this . default logger = log factory . get log ( logger name ) ;
 }
comment:
Set the name of the logger to use .
--generate--
set the name of the class .
sets the name of the class .
sets the name of the class to be used .
set the name of the class to be used .
sets the name of the class to be used to .

code:
public void set max rows ( int max rows ) {
 this . max rows = max rows ;
 }
comment:
Set the maximum number of rows for this JdbcTemplate .
--generate--
set the maximum number of pixels .
set the maximum number of bytes that should be used .
set the maximum number of bytes to be used .
set the maximum number of bytes that should be used for the UNK .
set the maximum number of bytes that should be used to the UNK .

code:
public string get method name ( ) {
 return this . method name ;
 }
comment:
Return the name of the method to be overridden .
--generate--
return the name of the request .
return the name of the class .
return the name of the method .
return the name of the class that is UNK .
return the name of the class that is UNK to .

code:
public link target type get link type ( ) {
 return this . link type ;
 }
comment:
Returns the type of the linking of this target .
--generate--
returns the type of the UNK .
returns the type of the file .
returns the type of the type .
returns the type of the action .
returns the type of the target .

code:
public e get and null value ( ) {
 e temp = lp value ( ) ;
 sp value ( null ) ;
 return temp ;
 }
comment:
Gets the current value and nulls out the reference to it from this node .
--generate--
gets the value of the UNK .
gets the value for the UNK .
gets the UNK of the UNK .
return the UNK of the UNK .
returns the UNK of the UNK .

code:
public void set sub locality ( string UNK ) {
 msub locality = UNK ;
 }
comment:
Sets the sub-locality of the address to the given String , which may be null .
--generate--
sets the size of the UNK .
sets the time of the UNK .
sets the size of the given UNK .
sets the size of the current UNK .
sets the size of the specified UNK .

code:
public byte [ ] get sha1 digest ( ) throws exception {
 return file system . get sha1 digest ( this ) ;
 }
comment:
Returns the SHA1 digest of the file denoted by the current path , following symbolic links .
--generate--
returns the path to the UNK .
returns the path for the UNK .
returns the UNK UNK for the UNK .
returns the path to a UNK .
returns the path for a UNK .

code:
public void set jndi template ( object jndi template ) {
 this . jndi environment = jndi template ;
 }
comment:
Set the JNDI template to use for JNDI lookups .
--generate--
set the configured template to use .
set the custom template to use for use .
set the custom template to use for use for this url .
set the custom template to use for use for this connection .
set the custom template to use for use for this configured .

code:
public class < ? > get actual type ( ) {
 return this . actual type ;
 }
comment:
Return the actual type of the instance found .
--generate--
return the type of the type .
return the default type of the type .
return the default type of the request .
return the type of the type . return null if it is not .
return the type of the type . return null if any .

code:
public void set values ( int a , int b ) {
 this . x = a ;
 this . y = b ;
 }
comment:
set the vector field value by Int @param a @param b
--generate--
set the vector field value @param vector
set the vector field value by vector @param vector
set the vector field value @param vector @param vector
set the vector field value by vector @param vector @param vector
set the vector field value by vector @param vector @param vector @param @param @param y

code:
public void set table name ( string table name ) {
 check if configuration modification is allowed ( ) ;
 this . table meta data context . set table name ( table name ) ;
 }
comment:
Set the name of the table for this insert .
--generate--
set the name of the query .
set the name of the query to be used .
set the name of the query for this request .
set the name of the query for this UNK .
set the name of the query to be used for .

code:
public string get bean name ( ) {
 return this . bean name ;
 }
comment:
Return the primary name of the bean , as specified for the bean definition .
--generate--
return the name of the class .
return the name of the bean , if any .
return the name of the class , if any .
return the name of the bean .
return the name of the bean , if any , if any .

code:
public path matcher get path matcher ( ) {
 return this . path matcher ;
 }
comment:
Return a custom PathMatcher to use for the PatternsRequestCondition , if any .
--generate--
return the path path to use .
return the path path to use for this request .
return the path path to use for this path .
return the path path to use for this request , if any .
return the path path to use for this path , if any .

code:
void set ( final double double val ) {
 this . type = class writer . e ;
 this . long val = double . double to raw long bits ( double val ) ;
 this . hash code = 0x7 f & ( type + ( int ) double val ) ;
 }
comment:
Sets this item to a double item .
--generate--
sets this item to the item .
sets this item to a item .
sets this matrix to a new item .
sets this matrix to a item .
sets this matrix to a bitmap .

code:
public script . kernel d get kernel src ( ) {
 return create kernel d ( DecimalInteger , DecimalInteger , null , null ) ;
 }
comment:
Get a KernelID for the Src kernel .
--generate--
get a kernel for this kernel .
get a kernel d for this kernel .
get a kernel for this kernel kernel .
get a kernel for the kernel .
get a kernel for the kernel kernel .

code:
public rectangle set size ( float size y ) {
 this . width = size y ;
 this . height = size y ;
 return this ;
 }
comment:
Sets the squared size of this rectangle @param sizeXY The size @return this rectangle for chaining
--generate--
sets the size of this size .
sets the maximum size of this height .
sets the maximum size of this size .
sets the maximum size of this drawable .
sets the size of this drawable .

code:
public final void set transition name ( string transition name ) {
 mtransition name = transition name ;
 }
comment:
Sets the name of the View to be used to identify Views in Transitions .
--generate--
sets the name of the UNK .
sets the default name of the UNK .
sets the name of the UNK to be used .
sets the name of the UNK to be used for the UNK .
sets the name of the UNK to be used for this UNK .

code:
final void internal reset ( long initial value ) {
 cell [ ] as = cells ;
 base = initial value ;
 if ( as != null ) {
 int n = as . length ;
 for ( int i = DecimalInteger ;
 i < n ;
 ++ i ) {
 cell a = as [ i ] ;
 if ( a != null ) a . value = initial value ;
 }
 }
 }
comment:
Sets base and all cells to the given value .
--generate--
sets UNK to the given value .
sets UNK to the given matrix .
sets UNK to the specified value .
sets UNK to the specified matrix .
sets UNK to the given array .

code:
public float get line height ( ) {
 return data . line height ;
 }
comment:
Returns the line height , which is the distance from one line of text to the next .
--generate--
returns the height of the height .
returns the height of the text .
returns the height of the display .
returns the height of the height in this view .
returns the height of the height in this text .

code:
public void set width ( int width ) {
 mdrop down width = width ;
 }
comment:
Sets the width of the popup window in pixels .
--generate--
sets the width of the height .
sets the width of the height in this position .
sets the width of the height in this drawable .
sets the width of the height in this matrix .
sets the width of the position of the text .

code:
public float measure text ( string text ) {
 if ( text == null ) {
 throw new illegal argument exception ( String ) ;
 }
 return measure text ( text , DecimalInteger , text . length ( ) ) ;
 }
comment:
Return the width of the text .
--generate--
return the color of the text .
return the index of the text .
return the current value of the view .
return the current value of the text .
return the current value of the text

code:
public string get name ( ) {
 return this . name ;
 }
comment:
Return the name of the method argument .
--generate--
return the name of the UNK .
return the name of the request .
return the name of the class .
return the name of the string .
return the name of the target .

code:
public link staticness get link staticness ( ) {
 return link staticness ;
 }
comment:
Returns the `` staticness '' of the link .
--generate--
returns the UNK of the UNK .
returns the UNK of the file .
returns the UNK of the target .
returns the UNK of the input .
returns the UNK of the UNK of this action .

code:
public indices aliases request builder add alias ( string [ ] indices , string alias , map < string , object > filter ) {
 request . add alias action ( alias actions . add ( ) . indices ( indices ) . alias ( alias ) . filter ( filter ) ) ;
 return this ;
 }
comment:
Adds an alias to the index .
--generate--
adds an indices to the index .
adds an indices to the specified index .
adds an single index to the index .
adds an indices to the specified list .
adds an single index to the specified index .

code:
public int get block count in sector ( int sector index ) {
 validate sector ( sector index ) ;
 if ( sector index < DecimalInteger ) {
 return DecimalInteger ;
 }
 else {
 return DecimalInteger ;
 }
 }
comment:
Return the number of blocks in the given sector .
--generate--
return the UNK number of UNK .
return the number of UNK in the UNK .
return the number of all of the UNK .
return the UNK number of UNK in the UNK .
return the UNK number of UNK in the UNK UNK .

code:
public void add action ( action action ) {
 root . add action ( action ) ;
 }
comment:
Adds an action to the root of the stage .
--generate--
adds an action to the request .
adds a action to the request .
adds a action to the action .
adds a new action to the request .
adds a new action to the action .

code:
public string get name ( ) {
 return this . name ;
 }
comment:
Return the name of the property .
--generate--
return the name of the UNK .
return the name of the request .
return the name of the class .
return the name of the string .
return the name of the target .

code:
public r set first available image requests ( t [ ] first available image requests , boolean try cache only first ) {
 mmulti image requests = first available image requests ;
 UNK cache only first = try cache only first ;
 return get this ( ) ;
 }
comment:
Sets the array of first-available image requests that will be probed in order .
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK of UNK for the UNK .
sets the UNK of the UNK for the UNK .

code:
public final observable < observable < t > > window ( long timespan , long timeshift , time unit unit , int count , scheduler scheduler ) {
 return lift ( new operator window with time < t > ( timespan , timeshift , unit , count , scheduler ) ) ;
 }
comment:
Returns an Observable that emits windows of items it collects from the source Observable .
--generate--
returns an observable that emits all of it it from the source observable .
returns an observable that emits all of elements from the source observable .
returns an observable that emits all of it it from the specified observable .
returns an observable that emits any of elements from the source observable .
returns an observable that emits any of elements from the source observable of the specified observable .

code:
public void remove listener ( animator listener listener ) {
 if ( listeners == null ) {
 return ;
 }
 listeners . remove ( listener ) ;
 if ( listeners . size ( ) == DecimalInteger ) {
 listeners = null ;
 }
 }
comment:
Removes a listener from the set listening to this animation .
--generate--
removes a listener from the listener .
remove a given listener .
removes a listener from the list .
removes a listener from the UNK .
removes a listener from the list of the UNK .

code:
private managed service info remove service impl ( interface service , final int userid ) {
 if ( g ) slog . d ( g , String + service + String + userid ) ;
 managed service info service info = null ;
 synchronized ( mutex ) {
 final int n = services . size ( ) ;
 for ( int i = n - DecimalInteger ;
 i >= DecimalInteger ;
 i -- ) {
 final managed service info info = services . get ( i ) ;
 if ( info . service . as binder ( ) == service . as binder ( ) && info . userid == userid ) {
 if ( g ) slog . d ( g , String + info . component ) ;
 service info = remove service locked ( i ) ;
 }
 }
 }
 return service info ;
 }
comment:
Removes a service from the list but does not unbind @return the removed service .
--generate--
removes the UNK from the UNK .
removes the UNK from the list .
remove the UNK UNK .
remove the given UNK .
removes the UNK UNK .

code:
public void set iconified by default ( boolean iconified ) {
 if ( miconified by default == iconified ) return ;
 miconified by default = iconified ;
 update views visibility ( iconified ) ;
 update query hint ( ) ;
 }
comment:
Sets the default or resting state of the search field .
--generate--
sets the UNK of the UNK .
sets the UNK of the view .
sets the UNK of the UNK view .
sets the UNK of the UNK UNK .
sets the UNK UNK of the UNK .

code:
public void set values ( int a , int b , int c ) {
 this . x = a ;
 this . y = b ;
 this . z = c ;
 }
comment:
set the vector field value by Int @param a @param b @param c
--generate--
set the vector field value @param vector
set the vector field value by vector @param vector
set the vector field value by vector @param vector @param vector
set the vector field value by vector @param vector @param UNK
set the vector field value by vector @param vector @param vector @param @param @param y

code:
public string get target field ( ) {
 return this . target field ;
 }
comment:
Return the name of the field to be retrieved .
--generate--
return the name of the request .
return the name of the view that is UNK .
return the name of the class that is UNK .
return the name of the view that is UNK to .
return the name of the class that is UNK to .

code:
public int index of key ( object key ) {
 return key == null ? index of null ( ) : index of ( key , UNK hash code ? system . identity hash code ( key ) : key . hash code ( ) ) ;
 }
comment:
Returns the index of a key in the set .
--generate--
returns the value of the index .
returns the index of the given index .
returns the index of the index .
returns the index of the index in the index .
returns the index of the index in the specified index .

code:
public void set values ( byte a , byte b , byte c ) {
 this . x = a ;
 this . y = b ;
 this . z = c ;
 }
comment:
set the vector field value by Char @param a @param b @param c
--generate--
set the vector field value @param vector
set the vector field value @param index
set the vector field value @param vector @param vector
set the vector field value @param vector @param given
set the vector field value @param vector @param vector @param @param @param y

code:
public void set width ( int width ) {
 this . width = width ;
 }
comment:
Sets the width of the outline .
--generate--
sets the width of the animation .
sets the width of the rotation .
sets the width of the text .
sets the width of the display .
sets the width of the display in this position .

code:
public int get max results ( ) {
 return this . max results ;
 }
comment:
Return the maximum number of rows specified for this HibernateTemplate .
--generate--
return the maximum number of UNK .
return the maximum size of the UNK .
return the maximum number of use for the UNK .
return the maximum number of use for UNK .
return the maximum number of use for the UNK of the UNK .

code:
public string get name ( ) {
 return this . name ;
 }
comment:
Return the name of the constructor argument .
--generate--
return the name of the UNK .
return the name of the request .
return the name of the class .
return the name of the string .
return the name of the target .

code:
public string get schema name ( ) {
 return this . table meta data context . get schema name ( ) ;
 }
comment:
Get the name of the schema for this insert .
--generate--
get the name of the device .
get the name of the user .
get the name of the device to be used .
get the name of the device to be used to this UNK .
get the name of the device to be used to this .

code:
public void set url ( string url ) {
 this . url = url ;
 }
comment:
Set the URL of the resource that this view wraps .
--generate--
set the url of the request .
set the url of the url .
set the url of the http request .
set the url of the target .
set the url of the resource .

code:
public boolean is draw entry labels enabled ( ) {
 return mdraw entry labels ;
 }
comment:
Returns true if drawing the entry labels is enabled , false if not .
--generate--
returns true if there is enabled .
returns true if there is enabled to be used .
returns true if there is enabled to be used for the UNK .
returns true if there is enabled to be used for the current user .
returns true if there is enabled to be used for the UNK of this user .

code:
public void set pressed ( boolean pressed ) {
 final boolean needs refresh = pressed != ( ( mprivate flags & pflag_ d ) == pflag_ d ) ;
 if ( pressed ) {
 mprivate flags |= pflag_ d ;
 }
 else {
 mprivate flags &= ~ pflag_ d ;
 }
 if ( needs refresh ) {
 refresh drawable state ( ) ;
 }
 dispatch set pressed ( pressed ) ;
 }
comment:
Sets the pressed state for this view .
--generate--
sets the UNK for this view .
sets the UNK of this view .
sets the UNK of the current view in this view .
sets the UNK of the current view .
sets the UNK of the current view in this view , in any .

code:
public string get framework name ( ) {
 return framework name ;
 }
comment:
Returns the name of the framework .
--generate--
returns the name of the UNK .
returns the name of the class .
returns the name of the class to be used .
returns the name of the class to be used to
returns the name of the class to be used to the the UNK .

code:
public builder set max streams ( int max streams ) throws illegal argument exception {
 if ( max streams <= DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 mmax streams = max streams ;
 return this ;
 }
comment:
Sets the maximum of number of simultaneous streams that can be played simultaneously .
--generate--
sets the maximum number of bytes .
set the maximum number of bytes .
set the maximum number of UNK .
sets the maximum number of UNK .
sets the maximum of the UNK .

code:
public float measure text ( char [ ] text , int index , int count ) {
 if ( text == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( ( index | count ) < DecimalInteger || index + count > text . length ) {
 throw new array index out of bounds exception ( ) ;
 }
 if ( text . length == DecimalInteger || count == DecimalInteger ) {
 return DecimalFloatingPoint ;
 }
 if ( ! mhas compat scaling ) {
 return ( float ) math . ceil ( nget text advances ( mnative paint , mnative typeface , text , index , count , index , count , mbidi flags , null , DecimalInteger ) ) ;
 }
 final float old size = get text size ( ) ;
 set text size ( old size * mcompat scaling ) ;
 float w = nget text advances ( mnative paint , mnative typeface , text , index , count , index , count , mbidi flags , null , DecimalInteger ) ;
 set text size ( old size ) ;
 return ( float ) math . ceil ( w * minv compat scaling ) ;
 }
comment:
Return the width of the text .
--generate--
return the text of the UNK .
return the text of the text .
return the text value of the specified position .
return the text value of the UNK .
return the text value of the specified UNK .

code:
public void set target name ( string target name ) {
 this . target name = target name ;
 }
comment:
Set the name of the target bean .
--generate--
set the name of the request .
set the name of the target .
set the name of the bean .
set the name of the request to be used .
set the name of the bean that this request .

code:
public string get name ( ) {
 return this . name ;
 }
comment:
Return the name of the repository .
--generate--
return the name of the UNK .
return the name of the request .
return the name of the class .
return the name of the string .
return the name of the target .

code:
public int get num UNK arguments ( ) {
 return num UNK args ;
 }
comment:
Returns the number of arguments which are positional ; the remainder are keyword arguments .
--generate--
returns the size of the UNK .
returns the number of UNK .
returns the number of all of the UNK .
returns the number of UNK in the UNK .
returns the size of the UNK of the UNK .

code:
public static string escaped path ( string path ) {
 return path_ r . escape ( path ) ;
 }
comment:
Returns the escaped name for a given relative path as a string .
--generate--
returns a path for the UNK .
returns a path for the given UNK .
returns a path for the given file .
returns an path for the UNK .
returns a path for the file .

code:
public static final files to run provider UNK ( rule context rule context ) {
 return rule context . get executable prerequisite ( objc rule classes . UNK e , mode . t ) ;
 }
comment:
Returns the location of the libtool tool .
--generate--
returns the UNK of the UNK .
returns the UNK UNK .
returns the current UNK .
returns the UNK .
returns the configured UNK .

code:
public index request type ( string type ) {
 this . type = type ;
 return this ;
 }
comment:
Sets the type of the indexed document .
--generate--
sets the type of the request .
sets the type of the type .
sets the name of the request .
sets the type of the content .
sets the type of the text .

code:
public static int max h264 UNK frame size ( ) throws decoder query exception {
 if ( max h264 UNK frame size == - DecimalInteger ) {
 int result = DecimalInteger ;
 media codec info decoder info = get decoder info ( mime types . video_ h264 , false ) ;
 if ( decoder info != null ) {
 for ( codec profile level profile level : decoder info . get profile levels ( ) ) {
 result = math . max ( UNK level to max frame size ( profile level . level ) , result ) ;
 }
 result = math . max ( result , DecimalInteger * DecimalInteger ) ;
 }
 max h264 UNK frame size = result ;
 }
 return max h264 UNK frame size ;
 }
comment:
Returns the maximum frame size supported by the default H264 decoder .
--generate--
returns the size of the UNK .
returns the UNK size of the UNK .
returns the UNK size for the UNK .
returns the UNK size of a UNK .
returns the size of a UNK .

code:
public path matcher get path matcher ( ) {
 return this . path matcher ;
 }
comment:
Return the PathMatcher implementation to use for matching URL paths against registered URL patterns .
--generate--
return the path path to use .
return the path path to use for this request .
return the path path to use for this path .
return the path path to use for this request , if any .
return the path path to use for this path , if any .

code:
public void set thoroughfare ( string thoroughfare ) {
 this . thoroughfare = thoroughfare ;
 }
comment:
Sets the thoroughfare name of the address , which may be null .
--generate--
set the name of the UNK .
set the name of the file .
set the name of the UNK to the UNK .
set the name of the file to be used .
set the name of the file to be used to the UNK .

code:
public string get column name ( ) {
 return this . column name ;
 }
comment:
Return the name of the column in the sequence table .
--generate--
return the name of the UNK .
return the name of the class .
return the name of the file .
return the name of the class that is UNK .
return the name of the class that is UNK to .

code:
@ skylark callable ( name = String , struct field = true , doc = String + String + String ) public path fragment get UNK ( ) {
 return UNK ;
 }
comment:
Returns the sysroot to be used .
--generate--
returns the file to be used .
returns the file to be used for this file .
returns the file to be used by this file .
returns the file to be used for this UNK .
returns the file to be used for the UNK of this file .

code:
public indices aliases request builder add alias ( string indices [ ] , string alias , query builder filter builder ) {
 request . add alias action ( alias actions . add ( ) . indices ( indices ) . alias ( alias ) . filter ( filter builder ) ) ;
 return this ;
 }
comment:
Adds an alias to the index .
--generate--
adds an indices to the index .
adds an indices to the request .
adds a indices to the index .
adds an settings to the index .
adds an indices .

code:
public void set output file ( string path ) throws illegal state exception {
 fd = null ;
 path = path ;
 }
comment:
Sets the path of the output file to be produced .
--generate--
sets the path to the UNK .
sets the path to the file .
sets the path for the UNK .
sets the path for the given file .
sets the path to the given .

code:
public path [ ] node data paths ( ) {
 assert env is locked ( ) ;
 path [ ] paths = new path [ node paths . length ] ;
 for ( int i = DecimalInteger ;
 i < paths . length ;
 i ++ ) {
 paths [ i ] = node paths [ i ] . path ;
 }
 return paths ;
 }
comment:
Returns an array of all of the nodes data locations .
--generate--
returns an array of the values .
returns an array of the values of this request .
returns an array of the values in this data .
returns an array of the values of this data .
returns an array of the values of this file .

code:
public int get sql type ( ) {
 return this . sql type ;
 }
comment:
Return the SQL type of the parameter .
--generate--
return the type of the UNK .
return the content type of the UNK .
return the current type of the UNK .
return the content type of this view .
return the type of the UNK

code:
public void set incrementer name ( string incrementer name ) {
 this . incrementer name = incrementer name ;
 }
comment:
Set the name of the sequence/table .
--generate--
set the name of the request .
set the name of the UNK .
set the name of the method .
set the name of the class .
set the name of the class to be used .

code:
public void set target bean name ( string target bean name ) {
 this . target bean name = target bean name ;
 }
comment:
Set the name of the target bean in the factory .
--generate--
set the name of the request .
set the name of the class .
set the name of the target .
set the name of the bean .
set the name of the class that this request .

code:
item new const item ( final object cst ) {
 if ( cst instanceof integer ) {
 int val = ( ( integer ) cst ) . int value ( ) ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof byte ) {
 int val = ( ( byte ) cst ) . int value ( ) ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof character ) {
 int val = ( ( character ) cst ) . char value ( ) ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof short ) {
 int val = ( ( short ) cst ) . int value ( ) ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof boolean ) {
 int val = ( ( boolean ) cst ) . boolean value ( ) ? DecimalInteger : DecimalInteger ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof float ) {
 float val = ( ( float ) cst ) . float value ( ) ;
 return new float ( val ) ;
 }
 else if ( cst instanceof long ) {
 long val = ( ( long ) cst ) . long value ( ) ;
 return new long ( val ) ;
 }
 else if ( cst instanceof double ) {
 double val = ( ( double ) cst ) . double value ( ) ;
 return new double ( val ) ;
 }
 else if ( cst instanceof string ) {
 return new string ( ( string ) cst ) ;
 }
 else if ( cst instanceof type ) {
 type t = ( type ) cst ;
 int s = t . get sort ( ) ;
 if ( s == type . t ) {
 return new class item ( t . get internal name ( ) ) ;
 }
 else if ( s == type . d ) {
 return new method type item ( t . get descriptor ( ) ) ;
 }
 else {
 return new class item ( t . get descriptor ( ) ) ;
 }
 }
 else if ( cst instanceof handle ) {
 handle h = ( handle ) cst ;
 return new handle item ( h . tag , h . owner , h . name , h . desc , h . itf ) ;
 }
 else {
 throw new illegal argument exception ( String + cst ) ;
 }
 }
comment:
Adds a number or string constant to the constant pool of the class being build .
--generate--
adds a class reference to the constant pool of the class being build .
adds a class pool to the constant pool of the class being build .
adds a method pool to the constant pool of the class being build .
adds a class reference to the constant pool of the class being being build .
adds a class reference to the constant pool of the class pool .

code:
public int new f8 ( final string value ) {
 key . set ( f8 , value , null , null ) ;
 item result = get ( key ) ;
 if ( result == null ) {
 pool . put byte ( f8 ) . put f8 ( value ) ;
 result = new item ( index ++ , key ) ;
 put ( result ) ;
 }
 return result . index ;
 }
comment:
Adds an UTF8 string to the constant pool of the class being build .
--generate--
adds a reference to the constant pool of the class being build .
adds a pool to the constant pool of the class being build .
adds a build pool to the constant pool of the class being build .
adds a method pool to the constant pool of the class being build .
adds a reference to the constant pool of the class pool .

code:
public params set num items ( int num items ) {
 mnum items = num items ;
 return this ;
 }
comment:
Set the number of items in the list .
--generate--
set the number of UNK .
set the size of the UNK .
set the UNK of the UNK .
set the number of UNK in the UNK .
set the number of UNK in this .

code:
private typed value create new instance ( expression state state ) throws evaluation exception {
 object [ ] arguments = new object [ get child count ( ) - DecimalInteger ] ;
 list < type descriptor > argument types = new array list < > ( get child count ( ) - DecimalInteger ) ;
 for ( int i = DecimalInteger ;
 i < arguments . length ;
 i ++ ) {
 typed value child value = this . children [ i + DecimalInteger ] . get value internal ( state ) ;
 object value = child value . get value ( ) ;
 arguments [ i ] = value ;
 argument types . add ( type descriptor . for object ( value ) ) ;
 }
 constructor executor executor to use = this . cached executor ;
 if ( executor to use != null ) {
 try {
 return executor to use . execute ( state . get evaluation context ( ) , arguments ) ;
 }
 catch ( access exception ex ) {
 if ( ex . get cause ( ) instanceof invocation target exception ) {
 throwable root cause = ex . get cause ( ) . get cause ( ) ;
 if ( root cause instanceof runtime exception ) {
 throw ( runtime exception ) root cause ;
 }
 else {
 string type name = ( string ) this . children [ DecimalInteger ] . get value internal ( state ) . get value ( ) ;
 throw new spel evaluation exception ( get start position ( ) , root cause , spel message . UNK invocation_ m , type name , format helper . format method for message ( String , argument types ) ) ;
 }
 }
 this . cached executor = null ;
 }
 }
 string type name = ( string ) this . children [ DecimalInteger ] . get value internal ( state ) . get value ( ) ;
 executor to use = find executor for constructor ( type name , argument types , state ) ;
 try {
 this . cached executor = executor to use ;
 if ( this . cached executor instanceof reflective constructor executor ) {
 this . exit type descriptor = code flow . to descriptor ( ( ( reflective constructor executor ) this . cached executor ) . get constructor ( ) . get declaring class ( ) ) ;
 }
 return executor to use . execute ( state . get evaluation context ( ) , arguments ) ;
 }
 catch ( access exception ex ) {
 throw new spel evaluation exception ( get start position ( ) , ex , spel message . UNK invocation_ m , type name , format helper . format method for message ( String , argument types ) ) ;
 }
 }
comment:
Create a new ordinary object and return it .
--generate--
create a new UNK instance .
create a new instance .
creates a new instance .
create a new instance of the UNK .
create a new instance of a UNK .

code:
public string get scene mode ( ) {
 return get ( key_ scene_ e ) ;
 }
comment:
Gets the current scene mode setting .
--generate--
gets the current UNK mode .
gets the UNK mode .
gets the UNK mode to use .
gets the UNK mode to be used .
gets the UNK mode for this view .

code:
public int get row count ( ) {
 return mvertical axis . get count ( ) ;
 }
comment:
Returns the current number of rows .
--generate--
returns the number of bytes .
returns the number of bytes . .
returns the size of the UNK .
returns the index of the UNK .
returns the size of the UNK . .

code:
public set < string > get classes not UNK ( ) {
 return UNK not UNK ;
 }
comment:
Returns the list of classes that have not been renamed yet .
--generate--
returns the set of UNK .
returns the UNK set .
returns the UNK set of UNK .
returns the set of all UNK .
returns the UNK set of the UNK .

code:
public int get body count ( ) {
 return world . get body count ( ) ;
 }
comment:
Get the number of bodies .
--generate--
get the number of UNK .
get the size of the UNK .
get the current number of UNK .
get the UNK of the UNK .
get the size of the current UNK .

code:
public list < input method subtype > get enabled input method subtype list ( input method info imi , boolean allows UNK selected subtypes ) {
 try {
 return service . get enabled input method subtype list ( imi == null ? null : imi . get id ( ) , allows UNK selected subtypes ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
Returns a list of enabled input method subtypes for the specified input method info .
--generate--
returns a list of UNK .
returns a list of UNK for this request .
returns a list of UNK for this view .
returns a list of UNK for this action .
returns a list of UNK for this UNK .

code:
public long count ( ) {
 return stats . count ( ) ;
 }
comment:
Returns the number of pairs in the dataset .
--generate--
returns the number of bytes .
returns the number of bytes in the UNK .
returns the number of bytes in this data .
returns the number of bytes in this UNK .
returns the size of the UNK .

