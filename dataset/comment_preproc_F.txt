gets the current action bar instance . 
sets extra options that will influence the UI for this window . 
sets extra options that will influence the UI for this window . 
sets the content of the activity inside the action bar . 
sets the content of the activity inside the action bar . 
sets the content of the activity inside the action bar . 
Sets the visibility of the progress bar in the title . 
Sets the visibility of the indeterminate progress bar in the title . 
Sets the progress for the progress bars in the title . 
Sets the secondary progress for the progress bar in the title . 
gets a menu inflater instance which supports the newer menu attributes . 
sets the action bar into custom navigation mode , supplying a view for custom navigation . 
sets the action bar into custom navigation mode , supplying a view for custom navigation . 
sets the action bar into custom navigation mode , supplying a view for custom navigation . 
sets the icon to display in the ` home ' section of the action bar . 
sets the icon to display in the ` home ' section of the action bar . 
sets the logo to display in the ` home ' section of the action bar . 
sets the logo to display in the ` home ' section of the action bar . 
sets the adapter and navigation callback for list navigation mode . 
sets the selected navigation item in list or tabbed navigation modes . 
gets the position of the selected navigation item in list or tabbed navigation modes . 
gets the number of navigation items present in the current navigation mode . 
sets the action bar 's title . 
sets the action bar 's title . 
sets the action bar 's subtitle . sets to null to disable the subtitle entirely . 
sets the action bar 's subtitle . 
sets display options .  
sets selected display options .  
sets whether to display the activity logo rather than the activity icon .  
sets whether to include the application home affordance in the action bar .  
sets whether home should be displayed as an `` up '' affordance . sets this to true if selecting `` home '' returns up by a single level in your UI rather than back to the top level or front page .  
sets whether an activity title/subtitle should be displayed .  
sets whether a custom view should be displayed , if sets .  
sets the ActionBar 's background . 
sets the ActionBar 's stacked background . 
sets the ActionBar 's split background . 
Returns the current ActionBar title in standard mode . 
Returns the current ActionBar subtitle in standard mode . 
Returns the current navigation mode . 
sets the current navigation mode . 
adds a tab for use in tabbed navigation mode . 
adds a tab for use in tabbed navigation mode . 
adds a tab for use in tabbed navigation mode . 
adds a tab for use in tabbed navigation mode . 
removes a tab from the action bar . 
removes a tab from the action bar . 
removes all tabs from the action bar and deselect the current tab . 
Returns the currently selected tab if in tabbed navigation mode and there is at least one tab present . 
Returns the tab at the specified index . 
Returns the number of tabs currently registered with the action bar . 
adds a listener that will respond to menu visibility change events . 
removes a menu visibility listener . 
returns the current position of this tab in the action bar . 
returns the icon associated with this tab . 
returns the text of this tab . 
sets the icon displayed on this tab . 
sets the icon displayed on this tab . 
sets the text displayed on this tab . 
sets the text displayed on this tab . 
sets a custom view to be used for this tab . 
sets a custom view to be used for this tab . 
sets a description of this tab 's content for use in accessibility support . 
sets a description of this tab 's content for use in accessibility support . 
Gets a brief description of this tab 's content for use in accessibility support . 
Sets the length of the animation . 
Gets the length of the animation . 
Returns whether this Animator has been started and not yet ended . 
Adds a listener to the sets of listeners that are sent events through the life of an animation , such as start , repeat , and end . 
Removes a listener from the sets listening to this animation . 
Removes all listeners from this object . 
Sets the target object whose property will be animated by this animation . 
Sets up this AnimatorSet to play all of the supplied animations at the same time . 
Sets up this AnimatorSet to play all of the supplied animations at the same time . 
Sets up this AnimatorSet to play each of the supplied animations when the previous animation ends . 
Sets up this AnimatorSet to play each of the supplied animations when the previous animation ends . 
Returns the current list of child Animator objects controlled by this AnimatorSet . 
Returns true if any of the child animations of this AnimatorSet have been started and have not yet ended . 
Gets the length of each of the child animations of this AnimatorSet . 
Sets the length of each of the current child animations of this AnimatorSet . 
adds a dependency to this Node . 
Gets the value for this Keyframe . 
Sets the value for this Keyframe . 
Gets the time for this keyframe , as a fraction of the overall animation duration . 
Sets the time for this keyframe , as a fraction of the overall animation duration . 
Gets the optional interpolator for this Keyframe . 
Sets the optional interpolator for this Keyframe . 
Gets the type of keyframe . 
Sets the TypeEvaluator to be used when calculating animated values . 
Sets the name of the property that will be animated . 
Gets the name of the property that will be animated . 
Sets the length of the animation . 
Sets the target object whose property will be animated by this animation @param target The object being animated 
sets the animated values for this object to this sets of ints . 
sets the animated values for this object to this sets of floats . 
sets the animated values for this object to this sets of Keyframes . 
sets the animated values for this object to this sets of Objects . 
Returns the setter or getter requested . 
Sets the name of the property that will be animated . 
Gets the name of the property that will be animated . 
Sets int values that will be animated between . 
Sets float values that will be animated between . 
Sets the values to animate between for this animation . 
Sets the values , per property , being animated between . 
Returns the values that this ValueAnimator animates between . 
Sets the length of the animation . 
Gets the length of the animation . 
Sets the position of the animation to the specified point in time . 
Gets the current position of the animation in time , which is equal to the current time minus the time that the animation started . 
Sets how many times the animation should be repeated . 
Adds a listener to the sets of listeners that are sent update events through the life of an animation . 
Removes all listeners from the sets listening to frame updates for this animation . 
Removes a listener from the sets listening to frame updates for this animation . 
Returns the timing interpolator that this ValueAnimator uses . 
Returns the current animation fraction , which is the elapsed/interpolated fraction used in the most recent frame update on the animation . 
returns the number of animations currently running .  
Sets the expandable and cellsUsed fields of LayoutParams . 
adds an item view at the given index . 
creates a new item view that can be re-bound to other item data later . 
adds a presenter to this menu . 
removes a presenter from this menu . 
Adds an item to the menu . 
removes the item at the given index and optionally forces menu views to update . 
Returns the ordering across all items . 
Sets whether the shortcuts should be visible on menus . 
Sets the header 's title . 
Sets the header 's title . 
Sets the header 's icon . 
Sets the header 's icon . 
Sets the header 's view . 
sets a callback object that will be notified of menu events related to this specific presentation . 
Returns an ID for determining how to save/restore instance state . 
Returns a Parcelable describing the current state of the presenter . 
Returns the default animations to be used for this menu when entering/exiting . 
Gets the item data that this view is displaying . 
Sets the title of the item view . 
Sets the enabled state of the item view . 
Sets the shortcut for the item . 
sets the icon of this item view . 
Sets whether the bar should be split right now , no questions asked . 
Sets whether the bar should split if we enter a narrow screen configuration . 
sets the action bar into a `` transitioning '' state . 
sets the window callback used to invoke menu items ; used for dispatching home button presses . 
sets the action bar title . 
sets the window title . 
Returns the adapter currently associated with this widget . 
Sets the adapter that provides the data and the views to represent the data in this widget . 
gets the position within the adapter 's data sets for the view , where view is a an adapter item or a descendant of an adapter item . 
Returns the position within the adapter 's data sets for the first item displayed on screen . 
Returns the position within the adapter 's data sets for the last item displayed on screen . 
Sets the currently selected item . 
Sets the view to show if the adapter is empty 
Gets the data associated with the specified position in the list . 
sets a drawable to be used as a divider between items . 
sets padding displayed on both ends of dividers . 
gets the width of the current divider drawable . 
sets the selected position of the list . 
gets the drawable used to draw the progress bar in indeterminate mode . 
gets the drawable used to draw the progress bar in progress mode . 
sets the current progress to the specified value . 
sets the current secondary progress to the specified value . 
gets the progress bar 's current level of progress . returns 0 when the progress bar is in indeterminate mode . 
gets the progress bar 's current level of secondary progress . returns 0 when the progress bar is in indeterminate mode . 
returns the upper limit of this progress bar 's range . 
sets the range of the progress bar to 0 ... <tt> max </tt> . 
Sets the acceleration curve for the indeterminate animation . 
Sets the acceleration curve for the indeterminate animation . 
Gets the acceleration curve type for the indeterminate animation . 
Creates and positions all views for this Spinner . 
Sets the prompt to display when the dialog is shown . 
Sets the prompt to display when the dialog is shown . 
sets hint text to be displayed to the user . 
sets a tag object associated with this ActionMode . 
sets the title of the action mode . 
sets the title of the action mode . 
sets the subtitle of the action mode . 
sets the subtitle of the action mode . 
sets a custom view for this action mode . 
Returns the menu of actions that this action mode presents . 
Returns the current title of this action mode . 
Returns the current subtitle of this action mode . 
Returns the current custom view for this action mode . 
Returns whether the UI presenting this action mode can take focus or not . 
adds a new item to the menu . 
adds a new item to the menu . 
adds a new item to the menu .  
adds a new sub-menu to the menu . 
adds a new sub-menu to the menu . 
adds a new sub-menu to the menu .  
adds a group of menu items corresponding to actions that can be performed for a particular Intent .   
removes the item with the given identifier . 
removes all items in the given group . 
removes all existing items from the menu , leaving it empty as if it had just been created . 
returns whether the menu currently has item items that are visible . 
returns the menu item with a particular identifier . 
gets the number of items in the menu . 
Gets the menu item at the given index . 
returns the identifier for this menu item . 
returns the group identifier that this menu item is part of . 
returns the category and order within the category of this item .  
returns the Intent associated with this item . 
returns the char for this menu item 's alphabetic shortcut . 
returns whether the item can currently display a check mark . 
returns whether the item is currently displaying a check mark . 
Sets the visibility of the menu item . 
returns the visibility of the menu item . 
Sets whether the menu item is enabled . 
returns the enabled state of the menu item . 
gets the sub-menu to be invoked when this item is selected , if it has one .  
sets a custom listener for invocation of this menu item . 
Gets the extra information linked to this menu item . 
Sets how this item should display in the presence of an Action Bar . 
Sets how this item should display in the presence of an Action Bar . 
sets an action view for this menu item . 
sets an action view for this menu item . 
Returns the currently sets action view for this menu item . 
Returns true if this menu item 's action view has been expanded . 
Sets the submenu header 's title to the title given in <var> titleRes </var> resource identifier . 
Sets the submenu header 's title to the title given in <var> title </var> . 
Sets the submenu header 's icon to the icon given in <var> iconRes </var> resource id . 
Gets the data model backed by the contents of the provided file with historical data . 
Sets an intent for which to choose a activity . 
Gets the intent for which a activity is being chosen . 
Gets the number of activities that can handle the intent . 
Gets an activity at a given index . 
Gets the index of a the given activity . 
Sets the listener for choosing an activity . 
Gets the default activity , The default activity is defined as the one with highest rank i.e. the first one in the list of activities that can handle the intent . 
Sets the default activity . 
Sets the sorter for ordering activities based on historical data and an intent . 
Sets the maximal size of the historical data . 
Gets the history max size . 
Gets the history size . 
Adds a historical record . 
Sets the background for the button that expands the activity overflow list . 
Sets the content description for the button that expands the activity overflow list . 
sets the provider hosting this view , if applicable . 
Gets whether the popup window with activities is shown . 
Sets a listener to receive a callback when the popup is dismissed . 
Sets the initial count of items shown in the activities popup i.e. the items before the popup is expanded . 
Sets a content description of the default action button . 
Gets the list popup window which is lazily initialized . 
returns false otherwise . 
Sets the SearchableInfo for this SearchView . 
Sets the APP_DATA for legacy SearchDialog use . 
Sets the IME options on the query text field . 
Returns the IME options sets on the query text field . 
Sets the input type on the query text field . 
Returns the input type sets on the query text field . 
Sets a listener for user actions within the SearchView . 
Sets a listener to inform when the user closes the SearchView . 
Sets a listener to inform when the focus of the query text field changes . 
Sets a listener to inform when a suggestion is focused or clicked . 
Sets a listener to inform when the search button is pressed . 
Returns the query string currently in the text field . 
Sets a query string in the text field and optionally submits the query as well . 
Sets the hint text to display in the query text field . 
Gets the hint text to display in the query text field . 
Sets the default or resting state of the search field . 
Returns the default iconified state of the search field . 
Returns the current iconified state of the SearchView . 
Returns whether the submit button is enabled when necessary or never displayed . 
Returns whether query refinement is enabled for all items or only specific ones . 
Returns the adapter used for suggestions , if any . 
Gets the specified maximum width in pixels , if sets . Returns zero if no maximum width was specified . 
Sets the text in the query box , without updating the suggestions . 
creates and returns an Intent that can launch the voice search activity for web search . 
creates and returns an Intent that can launch the voice search activity , perform a specific voice transcription , and forward the results to the searchable activity . 
Returns true if the text field is empty , or contains only whitespace . 
Sets a listener to be notified when a share target has been selected . 
Sets the file name of a file for persisting the share history which history will be used for ordering share targets . sets to null if share history should not be persisted between sessions . 
Sets an intent with information about the share action . 
sets the activity chooser policy of the model backed by the current share history file if needed which is if there is a registered callback . 
Returns the current query refinement preference . 
Sets the drawable in an image view , makes sure the view is only visible if there is a drawable . 
Gets the text to show in the query field when a suggestion is selected . 
Gets a drawable given a value provided by a suggestion provider . 
Gets a drawable by URI , without using the cache . 
Gets the left-hand side icon that will be used for the current suggestion if the suggestion contains an icon column but no icon or a broken icon . 
Gets the activity or application icon for an activity . 
Gets the activity or application icon for an activity . 
Gets the value of a string column by name . 
creates a new instance of MyFragment that will be initialized with the given arguments . 
creates the view for this fragment , using the arguments given to it . 
creates a new instance of CountingFragment , providing `` num '' as an argument . 
creates a new instance of MyDialogFragment , providing `` num '' as an argument . 
creates a new instance of DetailsFragment , initialized to show the text at ` index ' . 
creates a new instance of CountingFragment , providing `` num '' as an argument . 
creates a new instance of CountingFragment , providing `` num '' as an argument . 
creates a new instance of CountingFragment , providing `` num '' as an argument . 
Creates the underlying database with table name and column names taken from the NotePad class . 
returns the MIME type for an known URI in the provider . 
creates a new instance of CountingFragment , providing `` num '' as an argument . 
creates a new instance of CountingFragment , providing `` num '' as an argument . 
creates a new instance of CountingFragment , providing `` num '' as an argument . 
Returns whether the condition applies . 
Adds a max number of item limit to the behavior chain . 
Adds a max number of item limit to the end of the behavior chain . 
Returns whether this is the result of a successful attempt . 
Returns whether this is the result of a failed attempt . 
Returns whether the output value is present . 
Returns whether this is a result denoting an absent value . 
Returns the output value of the successful attempt that produced this result . 
Returns the failure encountered in the attempt that produced this result . 
Returns a result denoting a failed attempt to obtain a value of a different type , with the same failure . 
Returns an instance of the appropriate type . 
Sets sql string . 
Sets a table . 
Sets a where clause for update/delete instructions . 
Sets a read timeout in milliseconds . 
Sets a connection timeout in milliseconds . 
Returns the response body . 
Returns the response code . 
Returns the response message . 
Returns the number of adapter items needed to present the data . 
Returns default instance of SchemeRegistry @param fixNoHttpResponseException Whether to fix issue or not , by omitting SSL verification @param httpPort HTTP port to be used , must be greater than 0 @param httpsPort HTTPS port to be used , must be greater than 0 
gets the underlying HttpClient instance . 
gets the underlying HttpContext instance . 
Returns logging enabled flag from underlying LogInterface instance Default setting is logging enabled . 
Sets log level to be used across all library default implementation Default setting is VERBOSE log level . 
Returns the current executor service used . 
gets the default threading pool to be used for this HTTP client . 
Sets the User-Agent header to be sent with each request . 
Returns current limit of parallel connections @return maximum limit of parallel connections , default is 10 
Sets maximum limit of parallel connections @param maxConnections maximum parallel connections , must be at least 1 
sets both the connection and socket timeouts . 
Sets the SSLSocketFactory to user when making requests . 
Sets the maximum number of retries and timeout for a particular Request . 
Sets bearer authentication for the request . 
Sets bearer authentication for the request . 
Sets basic authentication for the request . 
Sets basic authentication for the request . 
Sets basic authentication for the request . 
Sets basic authentication for the request . 
Removes previously sets auth credentials 
sets headers only for this request @param context the Android Context which initiated the request . 
sets headers only for this request @param context the Android Context which initiated the request . 
Returns HttpEntity containing data from RequestParams included with request declaration . 
Sets the charset for the response string . 
Returns byte array of response HttpEntity contents @param entity can be null @return response entity body or null @throws java.io.IOException if reading entity or creating byte array failed 
Returns byte array of response HttpEntity contents @param entity can be null @return response entity body or null @throws java.io.IOException if reading entity or creating byte array failed 
Returns when request succeeds @param statusCode http response status line @param headers response headers if any @param response parsed response if any 
Returns when request succeeds @param statusCode http response status line @param headers response headers if any @param response parsed response if any 
Returns when request failed @param statusCode http response status line @param headers response headers if any @param throwable throwable describing the way request failed @param errorResponse parsed response if any 
Returns when request failed @param statusCode http response status line @param headers response headers if any @param throwable throwable describing the way request failed @param errorResponse parsed response if any 
Returns the escaped , ready-to-be used value of this encapsulated object . 
Gets a KeyStore containing the Certificate @param cert InputStream of the Certificate @return KeyStore 
Gets a Default KeyStore @return KeyStore 
Returns a SSlSocketFactory which trusts all certificates @return SSLSocketFactory 
Gets a DefaultHttpClient which trusts a sets of certificates specified by the KeyStore @param keyStore custom provided KeyStore instance @return DefaultHttpClient 
Returns cookie decoded from cookie string @param cookieString string of cookie as returned from http request @return decoded cookie or null if exception occured 
Returns true if this task completed . 
Returns true if this task was cancelled before it completed normally . 
Adds a key/value string pair to the request . 
Adds files array to the request . 
Adds files array to the request with both custom provided file content-type and files name @param key the key name for the new param . 
Adds a file to the request . 
Adds a file to the request with custom provided file name @param key the key name for the new param . 
Adds a file to the request with custom provided file content-type @param key the key name for the new param . 
Adds a file to the request with both custom provided file content-type and file name @param key the key name for the new param . 
Adds an input stream to the request . 
Adds an input stream to the request . 
Adds an input stream to the request . 
Adds an input stream to the request . 
Adds a int value to the request . 
Adds a long value to the request . 
Adds string value to param which can have more than one value . 
Removes a parameter from the request . 
Sets an additional field when upload a JSON object through the streamer to hold the time , in milliseconds , it took to upload the payload . 
sets global flag which determines whether to automatically close input streams on successful upload . 
Returns an HttpEntity containing all request parameters . 
Returns data whether request completed successfully @param response HttpResponse object with data @throws java.io.IOException if retrieving data from response fails 
Returns if request was completed with error code or failure of implementation @param statusCode returned HTTP status code @param headers returned headers @param responseBody returned data @param error cause of request failure 
Returns URI which was used to request @return uri of origin request 
Returns Header -LSB- -RSB- which were used to request @return headers from origin request 
Returns whether the handler is asynchronous or synchronous @return boolean if the ResponseHandler is running in synchronous mode 
Returns whether the handler should be executed on the pool 's thread or the UI thread @return boolean if the ResponseHandler should run on pool 's thread 
Sets whether the handler should be executed on the pool 's thread or the UI thread @param usePoolThread if the ResponseHandler should run on pool 's thread 
Returns contents of ` custom_ca . 
Returns the instance of this singleton . 
Creates the RestAdapter by setting custom HttpClient . 
Returns a boolean indicating whether this file can be found on the underlying file system . 
gets a value from a user preferences file . 
sets in millis , the last time the cache was accessed . 
gets in millis , the last time the cache was accessed . 
Creates a String representing an error message . 
gets the Main Application component for dependency injection . 
gets an Activity module for dependency injection . 
sets an image from a remote url . 
sets a place holder used for loading when an image is being downloaded from the internet . 
Creates a file name from an image url @param imageUrl The image url used to build the file name . 
gets an element from the cache . 
Creates a file name from an image url @param fileName The image url used to build the file name . 
Gets a component for dependency injection by its type . 
Sets the colors to be used for indicating the selected tab . 
sets the custom layout to be inflated for the tab views . 
Sets the associated view pager . 
creates a default view to be used for tabs . 
gets a new Fragment instance . 
gets the item at the specified position in the adapter . 
creates a new Fragment instance . 
creates an index string for caching Fragment pages . 
creates a key string for caching Fragment pages . 
sets a callback listener . 
adds a callback listener . 
removes a callback listener . 
returns the current Y of the scrollable view . 
sets a touch motion event delegation ViewGroup . 
returns a float value within the range . 
creates a color integer value with specified alpha . 
adds an OnGlobalLayoutListener for the view . 
Sets the colors to be used for indicating the selected tab . 
sets the custom layout to be inflated for the tab views . 
Sets the associated view pager . 
creates a default view to be used for tabs . 
sets the Sounds to be played when a Pull Event happens . 
sets the Last Updated Text . 
sets the drawable used in the loading layout . 
sets Text to show when the Widget is being pulled , and will refresh when released . 
sets 's the Sets the typeface and style in which the text should be displayed .  
gets the mode that this view is currently in . 
Returns whether the Touch Events are filtered or not . 
gets the mode that this view has been sets to . 
gets the Wrapped Refreshable View . 
gets whether the ` Refreshing ' View should be automatically shown when refreshing . Returns true by default . 
Gets whether Overscroll support is enabled . 
Returns whether the Widget is currently in the Refreshing mState @return true if the Widget is currently refreshing 
Returns whether the widget has enabled scrolling on the Refreshable View while refreshing . 
sets the Touch Events to be filtered or not . 
sets the mode of Pull-to-Refresh that this view will use . 
sets OnPullEventListener for the Widget @param listener - Listener to be used when the Widget has a pull event to propogate . 
sets OnRefreshListener for the Widget @param listener - Listener to be used when the Widget is sets to Refresh 
sets OnRefreshListener for the Widget @param listener - Listener to be used when the Widget is sets to Refresh 
Sets whether Overscroll support is enabled . 
Sets the Widget to be in the refresh state . 
Sets the Widget to be in the refresh state . 
Sets the Animation Interpolator that is used for animated scrolling . 
Gets whether an indicator graphic should be displayed when the View is in a state where a Pull-to-Refresh can happen . 
Sets the Empty View to be used by the Adapter View . 
Sets whether an indicator graphic should be displayed when the View is in a state where a Pull-to-Refresh can happen . 
creates a view from resource Xml file , and hold the view that may be used in displaying data . 
sets the overall size for the progress spinner . 
sets the start and end trim for the progress spinner arc . 
sets the amount of rotation to apply to the progress spinner . 
sets the colors used in the progress animation from color resources . 
sets the dimensions of the arrowhead . 
sets the colors the progress spinner alternates between . 
sets log level , the level lower than this level will not be logged @param level 
Returns root directory of disk cache @return Root directory of disk cache 
Returns file of cached image @param imageUri Original image URI @return File of cached image or <b> null </b> if image was n't cached 
Removes image file associated with incoming URI @param imageUri Image URI @return <b> true </b> - if image file is deleted successfully ; <b> false </b> - if image file does n't exist for incoming URI or image file ca n't be deleted . 
Creates a new journal that omits redundant information . 
Returns the directory where this cache stores its data . 
Returns the maximum number of bytes that this cache should use to store its data . 
Returns the maximum number of files that this cache should store 
Returns the number of bytes currently being used to store the values in this cache . 
Returns the number of files currently being used to store the values in this cache . 
Returns true if this cache has been closed . 
Returns an editor for this snapshot 's entry , or null if either the entry has changed since this snapshot was created or if another edit is in progress . 
Returns an unbuffered input stream to read the last committed value , or null if no value has been committed . 
Returns the last committed value as a string , or null if no value has been committed . 
sets lengths using decimal numbers like `` 10123 '' . 
removes the eldest entries until the total of remaining entries is at or below the requested size . 
Returns value by key . 
Removes item by key 
Returns all keys of cache 
removes all items from cache 
Removes the first occurrence of the specified element from this deque . 
Removes the last occurrence of the specified element from this deque . 
Removes the first occurrence of the specified element from this deque . 
Returns <tt> true </tt> if this deque contains the specified element . 
Returns the number of elements in this deque . 
Returns an iterator over the elements in this deque in proper sequence . 
Removes the first occurrence of the specified element from this deque . 
Removes the last occurrence of the specified element from this deque . 
Removes the first occurrence of the specified element from this deque . 
Returns <tt> true </tt> if this deque contains the specified element . 
Returns the number of elements in this deque . 
Returns an iterator over the elements in this deque in proper sequence . 
Returns an iterator over the elements in this deque in reverse sequential order . 
Removes and returns first element , or null if empty . 
Removes and returns last element , or null if empty . 
Removes the first occurrence of the specified element from this deque . 
Returns the number of elements in this deque . 
Returns an array containing all of the elements in this deque , in proper sequence ; the runtime type of the returned array is that of the specified array . 
Returns an iterator over the elements in this deque in proper sequence . 
Returns an iterator over the elements in this deque in reverse sequential order . 
Returns the successor node of the given non-null , but possibly previously deleted , node . 
Returns new object . 
Returns new object . 
Creates default implementation of task executor 
Creates default implementation of task distributor 
Creates reserve disk cache folder which will be used if primary disk cache folder becomes unavailable 
Sets whether loaded image will be cached in memory 
Sets whether loaded image will be cached on disk 
Sets options for image decoding . 
Sets delay time before starting loading task . 
Sets bitmap processor which will be process bitmaps before they will be cached in memory . 
Sets all options equal to incoming options 
Returns width of image aware view . 
Returns height of image aware view . 
Returns a flag whether image aware view is collected by GC or whatsoever . 
Returns ID of image aware view . 
Sets image drawable into this image aware view . 
Sets image bitmap into this image aware view . 
Returns singleton class instance 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds display image task to execution pool . 
Adds load image task to execution pool . 
Adds load image task to execution pool . 
Adds load image task to execution pool . 
Adds load image task to execution pool . 
Adds load image task to execution pool . 
Sets a default loading listener for all display and loading tasks . 
Sets options for resizing/compressing of downloaded images before saving to disk cache . 
Sets thread pool size for image display tasks . 
Sets the priority for image loading threads . 
Sets type of queue processing for tasks for loading and displaying images . 
Sets maximum file count in disk cache directory . 
Sets name generator for files cached in disk cache . 
Sets disk cache for images . 
Sets utility which will be responsible for downloading of image . 
Sets utility which will be responsible for decoding of image stream . 
Removes from memory cache all images for incoming URI . 
Returns application cache directory . 
Returns application cache directory . 
Returns specified application cache directory . 
Returns specified application cache directory . 
Removes the notification and stops tracking the session . 
gets an iterator over the list of genres @return genres 
gets an iterator over a shuffled collection of all songs 
gets music tracks of the given genre 
returns the MediaMetadataCompat for the given musicID . 
gets the list of music tracks from a server and caches the track information for future reference , keying tracks by musicId and grouping by genre . 
sets the latest playback state as determined by the caller . 
sets the current position . 
sets the current mediaId . 
Returns true when running Android Auto or a car dock .  
creates a String value that represents a playable or a browsable media . 
gets a color value from a theme attribute . 
Returns true when running Android TV @param c Context to detect UI Mode . 
Gets all of the methods of the class and includes the methods of any implemented interfaces . 
Returns a unique instance of the ViewServer . 
Adds the try/catch around the rest execution code . 
Returns the post parameter name to method parameter name mapping , or null if duplicate names found . 
Sets the error handler called when a rest error occurs . 
Gets a cookie by name . 
Sets a cookie by name . 
Gets a header by name . 
Sets a header by name . 
Sets the authentication object . 
Sets the basic authentication user/password . 
Gets the root URL for the rest service . 
Sets the root URL for the rest service . 
Gets the rest template used by the rest service implementation . 
Sets the rest template used by the rest service implementation . 
Returns the current scroll position of the scrollable view . 
sets the Drag View after the view is inflated 
sets the color used to fade the pane covered by the sliding pane out when the pane will become fully covered in the expanded state . 
sets sliding enabled flag @param enabled flag value 
sets the collapsed panel height in pixels @param val A height in pixels 
sets the shadow height @param val A height in pixels 
sets parallax offset for the panel @param val A height in pixels 
Sets the minimum fling velocity for the panel @param val the new value 
Adds a panel slide listener @param listener 
Removes a panel slide listener @param listener 
sets the draggable view portion . 
sets the draggable view portion . 
sets the scrollable child of the sliding layout . 
Sets the current scrollable view helper .  
sets an anchor point where the panel can stop during sliding @param anchorPoint A value between 0 and 1 , determining the position of the anchor point starting from the top of the layout . 
Gets the currently sets anchor point @return the currently sets anchor point 
Sets whether or not the panel overlays the content @param overlayed 
Sets whether or not the main content is clipped to the top of the panel @param clip 
Returns the current state of the panel as an enum . 
returns the magnitude of a draggable child view 's horizontal range of motion in pixels . 
returns the magnitude of a draggable child view 's vertical range of motion in pixels . 
sets the minimum velocity that will be detected as having a magnitude greater than zero in pixels per second . 
returns the currently configured minimum velocity . 
returns the size of an edge . 
Find the topmost child under the given point within the parent view 's coordinate system . 
Gets the layout id of the layout used by the current activity @return Layout to use 
Returns the used ViewPager instance @return Instance of the used ViewPager 
Returns all current slides . 
Adds a new slide @param fragment Instance of Fragment which should be added as slide 
sets vibration when buttons are pressed @param vibrationEnabled on/off 
gets the state of wizard mode 
sets wizard mode @param wizardMode on/off 
gets the state of wizard mode 
sets wizard mode @param show on/off 
sets vibration intensity @param intensity desired intensity 
sets a progress indicator instead of dots . 
Sets whether color transitions between slides should be enabled . 
Sets the animation of the intro to a fade animation 
Sets the animation of the intro to a zoom animation 
Sets the animation of the intro to a flow animation 
Sets the animation of the intro to a Slide Over animation 
Sets the animation of the intro to a Depth animation 
Returns true if swipe is in right direction 
sets the factor by which the duration will change 
creates a new instance of the view to be inserted in the AppIntro layout . 
Returns the default background color of the slide @return The default background color of the slide 
Sets the actual background color of the slide . 
sets the factor by which the duration will change 
Returns a String description of this SimpleGreeter . 
Adds a collection of resource entries . 
Returns true if cleaning the output directory should removes all . 
Sets the command line arguments for this processor . 
Creates the initial sets of arguments to javac from the Build configuration supplied . 
Adds an entry to the Jar file , normalizing the name . 
Adds the contents of a directory to the Jar file . 
Adds the contents of a directory to the Jar file . 
Adds a collection of entries to the jar , each with a given source path , and with the resulting file in the root of the jar . 
Sets the main.class entry for the manifest . 
Sets filename for the manifest content . 
Returns the normalized timestamp for a jar entry based on its name . 
Returns the time for a new Jar file entry in milliseconds since the epoch . 
Returns true if the collection of plugins in this instance contains one of the provided type . 
Returns an immutable list containing all the non-Bazel specific Javac flags . 
Returns an immutable list containing all the non-Bazel specific Javac flags . 
Returns a plugin to be enabled in the compiler . 
Returns the mapping for jars of direct dependencies . 
Returns the mapping for jars of indirect dependencies . 
Returns the map collecting precise explicit dependency information . 
Returns the map collecting precise implicit dependency information . 
Returns the file name collecting dependency information . 
Returns a message to suggest fix when a missing indirect dependency is found . 
returns a sets of generator values that are exempt from strict dependencies . 
Returns whether classpath reduction is enabled for this invocation . 
Sets the strictness level for dependency checking . 
Adds direct mappings to the existing map for direct dependencies . 
Adds an indirect mapping to the existing map for indirect dependencies . 
Adds indirect mappings to the existing map for indirect dependencies . 
Sets the name of the file that will contain dependency information in the protocol buffer format . 
Adds a collection of dependency artifacts to use when reducing the compile-time classpath . 
sets the message to display when a missing indirect dependency is found . 
adds a generator to the exempt sets . 
Returns the canonical version of the target name . 
Returns the name of the jar file from which the given class symbol was loaded , if available , and null otherwise . 
Returns true if the given classSymbol corresponds to one of the sources being compiled . 
Returns the langtools jar . 
Returns the default javacopts , including the blessed bootclasspath . 
Returns the blessed boot class path as a colon-separated string . 
Returns the blessed langtools jar path . 
removes code attributes and private members . 
Returns true iff the given tree could be the type name of a constant type . 
Returns true if the file manager owns this location ; otherwise it delegates to the underlying implementation . 
Returns a list of option values . 
Returns the description of the dynamically-added test case . 
Returns a Request that only contains those tests that should run when a filter is applied , filtering out all empty suites . 
Creates the runner . 
returns codes : <ul> <li> Test runner failure , bad arguments , etc. : exit code of 2 </li> <li> Normal test failure : exit code of 1 </li> <li> All tests pass : exit code of 0 </li> </ul> 
Creates a request that can be cancelled . 
Creates a handler installer that installs signal handlers . 
Adds the given signal handler to the existing ones . 
Returns the XML output path , or null if not specified . 
Gets the version of the JUnit Runner that the test is expecting . 
Returns a regular expression representing an inclusive filter . 
Returns a regular expression representing an exclusive filter . 
Returns the value of the test_filter option , or null if it was not specified . 
Returns the value of the test_exclude_filter option , or null if it was not specified . 
Returns an array of the arguments that did not match any known option . 
Creates a model for a JUnit4 suite . 
Adds a failure to the test represented by this node . 
Returns the test case node with the given test description . 
Adds a failure to the test with the given key . 
Creates an XML writer for testing purposes . 
Gets the writer that this object uses for writing . 
Creates a test sharding filter . 
Returns the weight of a test extracted from its description . 
returns true iff the current test should be sharded . 
Returns the 0-indexed test shard number , where 0 < = shard index < total shards . 
Returns the total number of test shards , or 1 if not specified by the test environment . 
Creates the shard file that is used to indicate that tests are being sharded . 
Creates a sharding filter according to strategy specified by the sharding environment . 
Returns a filter of the subclass type using the given descriptions , shard index , and total number of shards . 
Creates a list of generic test case descriptions . 
Returns whether the Collection and the List contain exactly the same elements with the same frequency , ignoring the ordering . 
Returns the escaped form of a given literal string , starting at the given index . 
Sets the increment applied to the ticker whenever it is queried . 
Gets the string representation of the current enum . 
Sets the per-thread callback . 
Gets the description of the current test . 
Sets the per-thread callback . 
Returns the number of nanoseconds elapsed since this ticker 's fixed point of reference . 
Sets the safe range of characters for the escaper . 
Sets the replacement string for any characters outside the ` safe ' range that have no explicit replacement . 
Adds a replacement string for the given input character . 
Returns a new CharEscaper based on the current state of the builder . 
Returns true if an entry with the given name may be copied over . 
Adds META-INF directory through ZipCombiner with the given date and the magic jar ID . 
Returns the File object for this filename . 
Creates a manifest and returns an input stream for its contents . 
Returns a single argument for a command line option . 
Returns the type . 
Returns the date . 
Returns the new name . 
Returns the strategy . 
Returns the mergeBuffer . 
Adds a directory entry to the combined ZIP file using the specified filename and date . 
Adds a directory entry to the combined ZIP file using the specified filename , date , and extra data . 
Adds a file with the specified name to the combined ZIP file . 
Adds a file with the specified name and date to the combined ZIP file . 
Returns the action to take for a file of the given filename . 
Returns true if the combined ZIP file already contains a file of the specified file name . 
Returns the number of bytes read . 
Returns the number of bytes written . 
Returns the Id of the extra data record . 
Returns the total length of the extra data record in bytes . 
Returns the length of the data payload of the extra data record in bytes . 
Returns a byte array copy of the data payload . 
Returns a byte array copy of the entire record . 
Returns the byte at index from the entire record . 
Returns the extra data record with the specified id , or null if it does not exist . 
Removes and returns the extra data record with the specified id if it exists . 
Returns if the list contains an extra data record with the specified id . 
Adds a new entry to the end of the list . 
Returns the overall length of the list in bytes . 
Creates and returns a byte array of the extra data list . 
Returns an input stream for reading the extra data list entries . 
Returns the encoding of the file . 
Returns the file comment . 
Sets the file comment from the raw byte data in the file . 
Sets the file comment . 
Returns the size of the central directory in bytes . 
Sets the size of the central directory in bytes .  
Returns the file offset of the start of the central directory . 
Sets the file offset of the start of the central directory .  
Returns the number of entries expected to be in the ZIP file . 
Sets the number of entries expected to be in the ZIP file .  
Returns the number of entries actually in the ZIP file . 
Sets the number of entries actually in the ZIP file . 
Returns a collection of all entries in the ZIP file . 
Returns the entry with the given name , or null if it does not exist . 
Adds an entry to the ZIP file . 
Returns if the file may be in Zip64 mode .  
sets if the file may be in Zip64 mode .  
Returns if the file is in Zip64 mode .  
sets if the file is in Zip64 mode .  
Returns the file offset of the Zip64 end of central directory record . 
Sets the file offset of the Zip64 end of central directory record and sets the file to Zip64 mode . 
Returns the byte representation of the specified string using the file 's charset encoding . 
Returns the string represented by the specified byte array using the file 's charset encoding . 
Sets the name of the entry . 
Returns the name of the entry . 
Sets the modification time of the entry . 
Returns the modification time of the entry , or -1 if not specified . 
Sets the CRC-32 checksum of the uncompressed entry data . 
Returns the CRC-32 checksum of the uncompressed entry data , or -1 if not known . 
Sets the uncompressed size of the entry data in bytes . 
Returns the uncompressed size of the entry data , or -1 if not known . 
Sets the size of the compressed entry data in bytes . 
Returns the size of the compressed entry data , or -1 if not known . 
Sets the compression method for the entry . 
Returns the compression method of the entry . 
Sets the made by version for the entry . 
Returns the made by version of the entry , accounting for assigned version and feature sets . 
Sets the version needed to extract the entry . 
Returns the version needed to extract the entry , accounting for assigned version and feature sets . 
Sets the general purpose bit flags for the entry . 
Sets or clears the specified bit of the general purpose bit flags . 
Returns the general purpose bit flags of the entry .  
Sets the internal file attributes of the entry . 
Returns the internal file attributes of the entry . 
Sets the external file attributes of the entry . 
Returns the external file attributes of the entry . 
Sets the file offset , in bytes , of the location of the local file header for the entry .  
Returns the file offset of the local header of the entry . 
Sets the optional extra field data for the entry . 
Returns the extra field data for the entry . 
Sets the optional comment string for the entry . 
Returns the comment string for the entry , or null if none . 
Returns the feature sets that this entry uses . 
Returns the zip file 's name . 
Returns the ZIP file comment . 
Returns a collection of the ZIP file entries . 
Returns the ZIP file entry for the specified name , or null if not found . 
Returns the number of entries in the ZIP file . 
Returns an input stream for reading the contents of the specified ZIP file entry . 
Returns an input stream for reading the raw contents of the specified ZIP file entry . 
Returns the index where the target is found or -1 if not found . 
Sets the ZIP file comment . 
creates a ZIP with a partial entry . 
Returns the documentation of the given rule to be printed on the console . 
creates a mapping of rules based on rule type and family . 
Returns the first unmatched html tag of srcs or null if no such tag exists . 
Sets a Velocity variable in the template with the given value . 
Returns the name of the rule . 
Returns the type of the rule 
Returns the family of the rule . 
Returns a `` normalized '' version of the input string . 
Returns the number of first line of the rule documentation in its declaration file . 
Returns true if this rule documentation has the parameter flag . 
Adds a variable name - value pair to the documentation to be substituted . 
Adds a rule documentation attribute to this rule documentation . 
Returns the rule 's sets of RuleDocumentationAttributes . 
Returns the documentation of the rule in a form which is printable on the command line . 
Returns a string containing any extra documentation for the name attribute for this rule . 
Returns whether this rule has public visibility by default . 
Returns whether this rule is deprecated . 
Returns a string containing the attribute signature for this rule with HTML links to the attributes . 
Returns a sets of examples based on markups which can be used as BUILD file contents for testing . 
Creates common RuleDocumentationAttribute such as deps or data . 
Creates a RuleDocumentationAttribute with all the necessary fields for explicitly defined rule attributes . 
Sets the Attribute object that this documents . 
Returns the name of the rule attribute . 
Returns whether this attribute is marked as deprecated . 
Returns the html documentation of the rule attribute . 
Returns a string containing the synopsis for this attribute . 
Returns the number of first line of the attribute documentation in its declaration file . 
Returns true if the attribute doc is of a common attribute type . 
Returns the common attribute type if this attribute doc is of a common type otherwise actualRule . 
Returns true if this attribute documentation has the parameter flag . 
Returns the length of a shortest path from usingClass to the definitionClass of this RuleDocumentationAttribute in the rule definition ancestry graph . 
Returns a `` normalized '' version of the input string . 
Returns a string representing the method signature with links to the types if available . 
Returns a string containing the name of the entity being documented . 
Returns a string containing the formatted HTML documentation of the entity being documented . 
Returns a string containing the HTML documentation of the entity , before being post-processed . 
Returns whether the Skylark method is documented . 
Returns a string representing the method signature of the Skylark method , which contains HTML links to the documentation of parameter types if available . 
Returns a string containing additional documentation about the method 's returns value . Returns an empty string by default . 
Returns a list containing the documentation for each of the method 's parameters . 
Returns the string representing the type of this parameter with the link to the documentation for the type if available . 
Returns the SkylarkModule annotation for the top-level Skylark module . 
Returns the top level modules and functions with their documentation in a command-line printable format . 
Returns the API doc for the specified Skylark object in a command line printable format , params -LSB- 0 -RSB- identifies either a module or a top-level object , the optional params -LSB- 1 -RSB- identifies a method in the module . 
sets the inputs of the action . 
Returns a progress message string that is specific for this action . 
Returns input files that need to be present to allow extra_action rules to shadow this action correctly when run remotely . 
Returns true iff action must be executed regardless of its current state . 
Returns null if action 's inputs will be discovered during execution proper . 
returns a best-guess estimate of the operation 's resource consumption on the local host itself for use in scheduling . 
Returns true if the output should bypass output filtering . 
Returns the owner of this executable if this executable can supply verbose information .  
Returns a pretty string representation of this action , suitable for use in progress messages or error messages . 
Returns the tool Artifacts that this Action depends upon .  
Returns the input Artifacts that this Action depends upon . 
Returns the environment variables from the client environment that this action depends on . 
Returns the sets of output Artifacts that are required to be saved . 
Returns the `` primary '' input of this action , if applicable . 
Returns the `` primary '' output of this action . 
Returns an iterable of input Artifacts that MUST exist prior to executing an action . 
Returns the action type . 
Returns an action key . 
Returns the action . 
Returns a map from action context class to the implementation required by the module . 
Returns the execution strategies that are provided by this object . 
Returns the action that failed . 
returns the root causes that should be reported . 
Returns the location of the owner of this action . 
Returns true if the error should be shown . 
Returns a string encoding all of the significant behaviour of this Action that might affect the output . 
Returns true iff the getInputs sets is known to be complete . 
removes action from the list of active actions . 
sets `` Preparing '' status . 
gets message showing currently executing actions . 
Returns the number of seconds to wait before reporting slow progress again . 
Returns the Action that , when executed , gives rise to this file . 
Returns digest for the given artifact . 
Returns 0 for files inaccessible to user , but available to the execution environment . 
Creates an ActionInput with just the given relative path and no digest . 
Returns an Iterable of TreeFileArtifacts with the given parent and parent relative paths . 
Returns a sets of TreeFileArtifacts with the given parent and parent-relative paths . 
Returns the associated action . 
Returns the location of this ActionOwner , if any ; null otherwise . 
Returns the label for this ActionOwner , if any ; null otherwise . 
Returns the configuration 's mnemonic . 
Returns the short cache key for the configuration of the action owner . 
Returns the escaped name for a given relative path as a string . 
Returns a string that is usable as a unique path component for a label . 
Returns the associated action . 
Creates `` Analyzing '' status message . 
Creates `` Preparing '' status message . 
Creates `` Scheduling '' status message . 
Returns the parent Artifact containing this Artifact . 
Returns the artifact owner . 
Returns the root beneath which this Artifact resides , if any . 
Returns the path of this Artifact relative to this containing Artifact .  
Returns true iff this is a source Artifact as determined by its path and root relationships . 
Returns true iff this is a middleman Artifact as determined by its root . 
Returns true iff this is a TreeArtifact representing a directory tree containing Artifacts . 
Returns whether the artifact represents a Fileset . 
Returns true iff metadata cache must returns constant metadata for the given artifact . 
Returns the relative path to this artifact relative to its root . 
Returns getExecPathString escaped for potential use in a shell command . 
Returns the root-part of a given path by trimming off the end specified by a given tail . 
Returns a string representing the complete artifact path information . 
Returns an immutable list . 
Returns the exec paths of the input artifacts in alphabetical order . 
Returns artifact if it present in the cache , otherwise null . 
Returns artifact if it present in the cache and was created during this build , otherwise null . 
sets the sets of known packages and their corresponding source artifact roots . 
Returns an artifact for a tool at the given path fragment , relative to the exec root , creating it if not found . 
Returns an artifact that represents the output directory of a Fileset at the given root-relative path under the given root , creating it if not found . 
Returns an artifact that represents a TreeArtifact ; that is , a directory containing some tree of ArtifactFiles unknown at analysis time . 
Returns the Artifact for the specified path , creating one if not found and setting the root and execPath to the specified values . 
Returns the source Artifact for the specified path , creating it if not found and setting its root and execPath . 
Returns the source Artifact for the specified path , creating it if not found and setting its root and execPath . 
Returns null if the root can not be determined and the artifact did not exist before . 
returns null if any dependencies are missing . 
Returns a number that uniquely identifies an artifact . 
Returns true iff the -- verbose_failures option was enabled . 
Returns the options associated with the execution . 
Returns the corresponding cache entry for the specified key , if any , or null if not found . 
Removes entry from cache 
Adds the artifact , specified by the executable relative path and its metadata into the cache entry . 
Returns the combined md5Digest of the action 's inputs and outputs . 
Returns true if this cache entry is corrupted and should be ignored . 
Creates new action cache entry using given compressed entry data . 
Returns the the fast md5 digest of the file , or null if not available . 
Returns metadata for the given artifact or null if it does not exist or is intentionally omitted . 
Returns metadata for the given artifact or throws an exception if the metadata could not be obtained . 
Returns true iff artifact exists . 
Returns true iff artifact is a regular file . 
Returns a sets with one PathFragment for each file that was changed since the last build , or an empty sets if the sets is unknown or would be too big . 
Returns the number of changed files . 
Returns a list of command line arguments that implements this action . 
Returns a map of command line variables to their values that constitute the environment in which this action should be run . 
Returns the head element for key , either val or another already-stored value . 
returns some value in the SmallSet . 
Adds val to the SmallSet . Returns some element of the SmallSet . 
removes val from the SmallSet , if it is present . 
Returns a new ActionExecutionException without a message prefix . 
Returns a new ActionExecutionException given a message prefix describing the action type as a noun . 
Returns the execution root . 
Returns a clock . 
Returns whether failures should have verbose error messages . 
Returns the command line options of the Blaze command being executed . 
Returns the action context implementation for spawn actions with a given mnemonic . 
Returns the root part of the full path . 
Returns true if this traversal refers to a whole package .   
Returns true if this is a `` recursive traversal '' , i.e. created from FilesetEntry.srcdir .  
Returns true if the root points to a generated file , symlink or directory . 
Returns true if input symlinks should be dereferenced ; false if copied . 
Returns the desired behavior when the traversal hits a subpackage . 
Returns the directory under the output path where the files will be mapped . 
Returns a list of file basenames to be excluded from the output . 
Returns the parameters of the direct traversal request , if any .  
Returns the parameters of the nested traversal request , if any . 
Adds the fingerprint of this traversal object . 
Creates parameters for a recursive traversal request in a package . 
Creates parameters for a recursive traversal request in a directory . 
Creates parameters for a file traversal request . 
Creates traversal request parameters for a FilesetEntry wrapping another Fileset . 
Returns the type of the middleman . 
Creates a new middleman action . 
Returns null iff inputs is empty . 
Creates both normal and scheduling middlemen . 
Creates a normal middleman . 
returns a location where this input file is referenced . 
Removes an action from this action graph if it is present . 
Returns mapping from execPath to Root . 
Returns singleton instance of the resource manager . 
Sets available resources using given resource sets . 
returns true if any resources have been claimed through this manager . 
returns true iff this thread has a lock on non-zero resources . 
Returns a new ResourceSet with the provided values for memoryMb , cpuUsage , and ioUsage , and with 0.0 for localTestCount . 
Returns a new ResourceSet with the provided value for localTestCount , and 0.0 for memoryMb , cpuUsage , and ioUsage . 
Returns a new ResourceSet with the provided values for memoryMb , cpuUsage , ioUsage , and localTestCount . 
Returns the amount of I/O used . 
Returns the local test count used . 
Returns the given path as a derived root . 
Returns the path fragment from the exec root to the actual root . 
Returns mappings from runfiles directories to artifact mappings in that directory . 
Returns true iff this command may be executed remotely . 
Returns true iff this command should be executed without a sandbox . 
Returns this Spawn as a Bourne shell command . 
Returns the runfiles data for remote execution . 
Returns artifacts for filesets , so they can be scheduled on remote execution . 
Returns a protocol buffer describing this spawn for use by the extra_action functionality . 
Returns the initial environment of the process . 
Returns the list of files that this command may read . 
Returns the collection of files that this command must write . 
Returns the resource owner for local fallback . 
Returns the amount of resources needed for local fallback . 
Returns the owner for this action . 
returns -1 if the key does not exist . 
Returns the action owner that should be used for actions . 
Creates an artifact under a given root with the given root-relative path . 
Returns the command line . 
Returns whether the command line represents a shell command with the given shell executable . 
Returns a string that describes this argument fragment . 
Adds a flag with the exec path of a placeholder TreeArtifact . 
Adds a placeholder TreeArtifact exec path . 
Adds a formatted string containing the exec path of a placeholder TreeArtifact . 
Returns execution data for this action . 
Creates a FileWriteAction to write contents to the resulting artifact fileName in the genfiles root underneath the package path . 
Returns the estimated resource consumption of the action . 
Returns the list of options written to the parameter file . 
Returns a params file artifact or null for a given command description . Returns null if parameter files are not to be used according to paramFileInfo , or if the command line is short enough that a parameter file is not needed . 
Creates a command line using an external params file . 
Creates an action to write the parameter file . 
Creates a command line without using a params file . 
Returns the file type . 
Returns the charset . 
Returns true if a params file should always be used . 
Creates a spawn to unzip the archive members specified in the archive manifest into the TreeArtifact . 
Returns the list of options written to the parameter file . 
Returns command argument , argv -LSB- 0 -RSB- . 
Returns s , truncated to no more than maxLen characters , appending an ellipsis if truncation occurred . 
Returns a Spawn that is representative of the command that this Action will execute . 
returns a spawn that is representative of the command that this Action will execute in the given client environment . 
Returns the out-of-band execution data for this action . 
Creates a SpawnAction . 
Adds an input to this action . 
Adds tools to this action . 
Adds inputs to this action . 
Adds transitive inputs to this action . 
Sets the map of environment variables . 
Sets the environment variables to be inherited fromt he client environment . 
Sets the map of execution info . 
Sets the executable path ; the path is interpreted relative to the execution root . 
Sets the executable as an artifact . 
Sets the executable as a configured target . 
Sets the executable as a configured target . 
Sets the executable to be a java class executed from the given deploy jar . 
Sets the executable to be a jar executed from the given deploy jar . 
Sets the executable to be the shell and adds the given command as the command to be executed . 
Sets the executable to be the shell and adds the given interned commands as the commands to be executed . 
adds multiple arguments in the order they are returned by the collection to the list of executable arguments . 
adds multiple arguments in the order they are returned by the collection . 
Sets a delegate to compute the command line at a later time . 
Returns a SpawnAction that takes inputTreeFileArtifact as input and generates outputTreeFileArtifact . 
Returns the input TreeArtifact . 
Returns the output TreeArtifact . 
Adds common tool artifacts . 
Adds common tool artifacts . 
Adds common input artifacts . 
Adds transitive common input artifacts . 
Sets the map of environment variables for expanded actions . 
Sets the map of execution info for expanded actions . 
Sets the executable used by expanded actions as a configured target . 
Sets the executable path used by expanded actions . 
Sets the executable artifact used by expanded actions . 
Sets the command line template used to expand actions . 
Returns an immutable Substitution instance for the given key and value . 
Returns an immutable Substitution instance for the key and list of values . 
Returns an immutable Substitution instance for the key and map of values . 
Returns the text content of the template . 
Returns a string that is used for the action key . 
Returns a template for the given text string . 
Returns a template that loads the given artifact . 
Returns a callback to be used in this build for reporting analysis errors . 
Returns whether any errors were reported to this instance . 
Returns the artifact for the specified tool . 
Returns the generating action for the given local artifact . 
Returns the actions that were registered so far with this analysis environment , that is , all the actions that were created by the current target being analyzed . 
Returns the Skyframe SkyFunction.Environment if available . 
Returns the Artifact that is used to hold the non-volatile workspace status for the current build request . 
Returns the Artifacts that contain the workspace status for the current build request . 
Returns whether link stamping is enabled for a rule . 
Returns the list of providers of the specified type from a sets of transitive info collections . 
Returns the iterable of collections that have the specified provider . 
Returns the path of the associated manifest file for the path of a Fileset . 
Returns the middleman artifact on the specified attribute of the specified rule , or an empty sets if it does not exist . 
Returns a path fragment qualified by the rule name and unique fragment to disambiguate artifacts produced from the source file appearing in multiple rules . 
Returns the target associated with the event . 
gets the root causes of the target . 
Returns the Filesystem that all of our directories belong to . 
Returns the base of the output tree , which hosts all build and scratch output for a user and workspace . 
Returns the workspace directory , which is also the working dir of the server . 
Returns if the workspace directory is a valid workspace . 
Returns the base of the output tree , which hosts all build and scratch output for a user and workspace . 
Returns the execution root for the main package . 
Returns the execution root for a particular repository . 
Returns the output path for the main repository using the workspace 's directory name . 
Returns the output path used by this Blaze instance . 
Returns the local output path used by this Blaze instance . 
Returns the directory where the stdout/stderr for actions can be stored temporarily for a build . 
Returns the installed embedded binaries directory , under the shared installBase location . 
Returns the output directory name , relative to the execRoot . 
Sets build info . 
Returns the summary which gets displayed in the ` version ' command . 
Returns true iff this binary is released -- that is , a binary built with a release label . 
Returns the release label , if any , or `` development version '' . 
Returns the version , if any , or HEAD . 
Returns the release timestamp in seconds . 
creates actions and artifacts for language-specific build-info files . 
Returns the key for the information created by this factory . 
returns immutable map populated with build info key/value pairs . 
Returns whether the given configured target has errors . 
Sets the configurations . 
Returns configured targets to build . 
Returns aspects of configured targets to build . 
Returns the action graph . 
Returns the collection of configured targets corresponding to any of the provided targets . 
Returns sets of artifacts representing test results , writing into targetsToTest and targetsToTestExclusive . 
Gets a dynamic configuration for the given target . 
Sets the possible artifact roots in the artifact factory . 
Returns ConfigMatchingProvider instances corresponding to the configurable attribute keys present in this rule 's attributes . 
Returns a configured target for the specified target and configuration . 
Returns a RuleContext which is the same as the original RuleContext of the target parameter . 
Creates and returns a rule context that is equivalent to the one that was used to creates the given configured target . 
Returns the path to the shell for an action with the given execution requirements . 
Returns a middleman for all files to build for the given configured target . 
Returns a middleman for all files to build for the given configured target . 
Creates an instance with the list of embedded tools obtained from scanning the directory into which said binaries were extracted by the launcher . 
Creates an empty instance for testing . 
Creates an instance for testing without actually symlinking the tools . 
Adds mapping of names to values of `` Make '' variables defined by this configuration . 
Returns a fragment of the output directory name for this configuration . 
adds items to the shell environment . 
Returns the shell to be used . 
returns sets of features enabled by this configuration . 
Returns true if this configuration is semantically equal to the other , with the possible exception that the other has fewer fragments . 
Returns map of all the fragments for this configuration . 
Returns the config fragment options classes used by the given fragment types . 
sets the outgoing configuration transitions . 
Returns all configurations that can be reached from this configuration through any kind of configuration transition . 
Returns all configurations that can be reached from this configuration through any kind of configuration transition . 
Returns the new configuration after traversing a dependency edge with a given configuration transition . 
Returns the new configurations after traversing a dependency edge with a given split transition . 
Creates a new instance of this transition applier bound to the specified source configuration . 
Returns true if the given target uses a null configuration , false otherwise . 
Returns the value of the specified option for this configuration or null if the option is n't recognized . 
Returns false for unrecognized options . 
Returns the output directory for this build configuration . 
Returns the bin directory for this build configuration . 
Returns a relative path to the bin directory at execution time . 
Returns the include directory for this build configuration . 
Returns the genfiles directory for this build configuration . 
Returns the directory where coverage-related artifacts and metadata files should be stored . 
Returns the testlogs directory for this build configuration . 
Returns a relative path to the genfiles directory at execution time . 
Returns the path separator for the host platform . 
Returns the configuration-dependent string for this configuration . 
Returns the path to sh . 
Returns a regex-based instrumentation filter instance that used to match label names to identify targets to be instrumented in the coverage mode . 
Returns a boolean of whether to include targets created by _ test rules in the sets of targets matched by -- instrumentation_filter . 
Returns a new , unordered mapping of names to values of `` Make '' variables defined by this configuration . 
Returns a new , unordered mapping of names that are sets through the command lines . 
Returns the global defaults for this configuration for the Make environment . 
Returns the default value for the specified `` Make '' variable for this configuration . Returns null if no value was found . 
Returns a configuration fragment instances of the given class . 
Returns true if the requested configuration fragment is present . 
Returns true if non-functional build stamps are enabled . 
Returns true if extended sanity checks should be enabled . 
Returns true if we are building runfiles symlinks for this configuration . 
Returns if we are building external runfiles symlinks using the old-style structure . 
Returns user-specified test environment variables and their values , as sets by the -- test_env options . 
Returns true if this is a host configuration . 
Returns whether we should trim dynamic configurations to only include the fragments needed to correctly analyze a rule . 
Returns compilation mode . 
Returns the cache key of the build options used to creates this configuration . 
Returns a copy of the build configuration options for this configuration . 
Returns the actual options reference used by this configuration . 
Returns the `` top-level '' environment space , i.e. the sets of environments all top-level targets must be compatible with . 
Returns the host configuration for this collection . 
Returns all configurations that can be reached from the target configuration through any kind of configuration transition . 
Returns whether this build uses dynamic configurations . 
Adds all configurations that are directly reachable from this configuration through any kind of configuration transition . 
Returns the new configuration after traversing a dependency edge with a given configuration transition . 
Creates a new BuildOptions instance for host . 
Creates a BuildOptions class by taking the option values from command-line arguments 
Creates a BuildOptions class by taking the option values from command-line arguments and applying the specified original options . 
Returns the actual instance of a FragmentOptions class . 
Returns a multimap of all labels that were specified as options , keyed by the name to be displayed to the user if something goes wrong .  
Returns the options contained in this collection . 
Creates a copy of the BuildOptions object that contains copies of the FragmentOptions . 
Creates a copy of the BuildOptions object that stores a sets of original options . 
Returns the original options these options were spawned from , or null if this info was n't recorded . 
Creates a builder object for BuildOptions 
Adds a new FragmentOptions instance to the builder . 
Returns true if this matcher 's conditions are a proper superset of another matcher 's conditions , i.e. if this matcher is a specialization of the other one . 
Returns an event handler to report errors to . 
Returns a target for the given label , loading it if necessary , and throwing an exception if it does not exist . 
Returns a path for the given file within the given package . 
Returns fragment based on fragment class and build options . 
Returns global value of BlazeDirectories . 
Creates a sets of build configurations with top-level configuration having the given options . 
Creates a configuration fragment .  
Returns the option classes needed to load this fragment . 
Returns a string of the defaults package with the given settings . 
Returns the defaults package for the default settings . 
Returns the defaults package for the given options . 
Adds all labels defined by the options to a multimap .  
Returns the labels contributed to the defaults package by this fragment . 
Returns the extra rules contributed to the default package by this fragment . 
Returns a list of potential split configuration transitions for this fragment . 
Creates a new FragmentOptions instance with all flags sets to default . 
Creates a new FragmentOptions instance with flags adjusted to host platform .  
Adds dependency to fileName if needed . 
Returns fragment based on fragment type and build options . 
Returns blaze directories and adds dependency to that value . 
Returns the Target identified by `` label '' , loading , parsing and evaluating the package if it is not already loaded . 
Returns the list of options to adds to a command line . 
Creates the top-level configuration for a build . 
Returns the module the given configuration should use for choosing dynamic transitions . 
Returns the aspect name . 
Returns the providers created by the aspect . 
Adds a provider to the aspect . 
Adds providers to the aspect . 
Adds providers to the aspect . 
Adds providers to the aspect . 
Adds a sets of files to an output group . 
Creates the aspect based on the configured target of the associated rule . 
Returns whether two packages are considered the same for purposes of deprecation warnings . 
Returns whether a deprecation warning should be printed for the prerequisite described . 
Returns a list of build info factories that are needed for the supported languages . 
Returns the sets of configuration fragments provided by this module . 
Returns the sets of configuration options that are supported in this module . 
Returns the definition of the rule class definition with the specified name . 
Returns the configuration collection creator . 
Returns the configuration fragment that should be available to all rules even when they do n't explicitly require it . 
Returns the defaults package for the default settings . 
Returns the defaults package for the given options taken from an optionsProvider . 
Creates a BuildOptions class for the given options taken from an optionsProvider . 
Returns the visibility of the given target . 
Returns null if Skyframe deps are missing or upon certain errors . 
Returns the sets of environments supported by this rule , as determined by the restriction-style attribute , compatibility-style attribute , and group defaults provider instantiated with this class . 
Returns true if all is good , returns false and reports appropriate errors if there are any problems . 
Adds environments specified in the `` restricted to '' attribute to the sets of supported environments and returns the environments added . 
Adds environments specified in the `` compatible with '' attribute to the sets of supported environments , along with all defaults from the groups they belong to . Returns these environments , not including the defaults . 
Adds environments specified by the given attribute to the sets of supported environments and returns the environments added . 
Returns the environment and its group .  
Returns the environment group that owns the given environment . 
Returns null if any errors are encountered . 
Returns the rule class defaults specified for this rule , or null if there are no such defaults . 
Returns true if all is good , returns false and reports appropriate errors if there are any problems . 
Returns the deps for this attribute that only appear in selects . 
Adds all label values from the given select to the given sets . 
Returns the static environments this target is compatible with .  
Returns the refined environments this rule is compatible with .  
Returns the label of the target this dependency points to . 
Returns true if this dependency specifies a static configuration , false if it specifies a dynamic transition . 
Returns the static configuration for the target this dependency points to . 
Returns the dynamic transition to be applied to reach the target this dependency points to . 
Returns the sets of aspects which should be evaluated and combined with the configured target pointed to by this dependency . 
Returns the mapping from aspects to the static configurations they should be evaluated with . 
Returns ids for dependent nodes of a given node , sorted by attribute . 
Returns ids for dependent nodes of a given node , sorted by attribute . 
Returns true if the rule 's attribute triggers a split in this configuration .  
Returns the label dependencies for the given late-bound attribute in this rule . 
Adds new dependencies to the given rule under the given attribute name @param depResolver the resolver for this rule 's deps @param attrName the name of the attribute to adds dependency labels to @param labels the dependencies to adds 
Returns the attributes that should be visited for this rule/aspect combination . 
Returns the target by the given label . Returns null if the target is not ready to be returned at this moment . 
Returns the build configurations with the given options and fragments , in the same order as the input options . Returns null if any configurations are n't ready to be returned at this moment . 
Gets an action graph wrapper for the given target through its analysis environment . 
Returns the file type of this file target . 
Returns the sets of artifacts that are the `` output '' of this rule . 
Creates an instance that contains one single executable and no other files . 
Returns artifacts needed to run the executable for this target . 
Returns the Executable or null if it does not exist . 
Returns the RunfilesManifest or null if it does not exist . 
Returns the label that is associated with this piece of information . 
Returns a sets of the languages the ConfiguredTarget generates output for . 
Returns the label of the associated target . 
Returns the license for the target . 
Returns the value in the specified map corresponding to ` key ' , creating and inserting an empty container if absent . 
Returns make environment variable names and values as a map . 
Returns the expansion of the specified `` Make '' variable . 
Returns the variable name and advances the position . 
Returns a value provided by this target . 
Creates an instance based on a configured target and a sets of aspects . 
Returns the middleman for the files produced by the transitive info collection . 
returns the artifacts in a particular output group . 
Returns an equivalent instance but only containing artifacts of the given type , reporting errors for non-matching artifacts . 
Returns an equivalent instance but only containing artifacts of the given types , reporting errors for non-matching artifacts . 
Returns an equivalent instance but only containing artifacts of the given type . 
Returns an equivalent instance but only containing artifacts of the given types . 
Returns the value of the given attribute . 
Returns a value provided by this target . 
Returns a declared provider provided by this target . 
Adds skylark providers from a skylark provider registry , and checks for collisions . 
adds a specific provider . 
adds a collection of specific providers . 
adds a collection of specific providers . 
adds a specific provider with a given value . 
adds a specific provider with a given value . 
adds a Skylark transitive info . 
adds a Skylark transitive info . 
sets the runfiles support for executable targets . 
sets the files to build . 
Adds a sets of files to an output group . 
Adds a file to an output group . 
Adds multiple output groups . 
sets the extra action pseudo actions . 
Returns a rule class name suitable for log messages , including an aspect name if applicable . 
Returns the workspace name for the rule . 
Returns the host configuration for this rule . 
Returns whether this instance is known to have errors at this point during analysis . 
Returns an immutable map from attribute name to list of configured targets for that attribute . 
Returns an immutable map from attribute name to list of fileset entries . 
Returns a configuration fragment for this this target . 
Returns an artifact beneath the root of either the `` bin '' or `` genfiles '' tree , whose path is based on the name of this target and the current configuration . 
Returns the root of either the `` bin '' or `` genfiles '' tree , based on this target and the current configuration . 
Returns the bin directory for this build configuration . 
Returns the genfiles directory for this build configuration . 
Creates an artifact in a directory that is unique to the package that contains the rule , thus guaranteeing that it never clashes with artifacts created by rules in other packages . 
Creates an artifact in a directory that is unique to the package that contains the rule , thus guaranteeing that it never clashes with artifacts created by rules in other packages . 
Creates an artifact in a directory that is unique to the package that contains the rule , thus guaranteeing that it never clashes with artifacts created by rules in other packages . 
Returns an artifact that can be an output of shared actions . 
Creates an artifact in a directory that is unique to the package that contains the rule , thus guaranteeing that it never clashes with artifacts created by rules in other packages . 
Returns the root-relative path fragment under which output artifacts of this rule should go . 
Creates an artifact under a given root with the given root-relative path . 
Creates a TreeArtifact under a given root with the given root-relative path . 
Creates an artifact in a directory that is unique to the rule , thus guaranteeing that it never clashes with artifacts created by other rules . 
Creates an artifact in a directory that is unique to the rule , thus guaranteeing that it never clashes with artifacts created by other rules . 
Returns the Attribute associated with this name , if it 's a valid attribute for this rule , or is associated with an attached aspect . 
Returns the list of transitive info collections that feed into this target through the specified attribute . 
Returns the a prerequisites keyed by the CPU of their configurations . 
Returns the specified provider of the prerequisite referenced by the attribute in the argument . 
Returns the transitive info collection that feeds into this target through the specified attribute . Returns null if the attribute is empty . 
Returns all the providers of the specified type that are listed under the specified attribute of this target in the BUILD file . 
Returns all the providers of the specified type that are listed under the specified attribute of this target in the BUILD file , and that contain the specified provider . 
Returns the prerequisite referred to by the specified attribute . 
Returns the string `` expression '' after expanding all embedded references to `` Make '' variables . 
Returns the string `` expression '' after expanding all embedded references to `` Make '' variables . 
Gets the value of the STRING_LIST attribute expanding all make variables . 
Returns the Mode for which the attribute is configured . 
Returns the sole file in the `` srcs '' attribute . 
Returns a path fragment qualified by the rule name and unique fragment to disambiguate artifacts produced from the source file appearing in multiple rules . 
Returns the implicit output artifact for a given template function . 
Returns the implicit output artifact for a given output path . 
Returns an artifact with a given file extension . 
Returns true if the target for this context is a test target . 
Returns true if runfiles support should creates the runfiles tree , or false if it should just creates the manifest . 
Sets the prerequisites and checks their visibility . 
Sets the configuration conditions needed to determine which paths to follow for this rule 's configurable attributes . 
Sets the fragment that can be legally accessed even when not explicitly declared . 
Returns whether the context being constructed is for the evaluation of an aspect . 
Returns a rule class name suitable for log messages , including an aspect name if applicable . 
Returns metadata for this rule . 
Returns the tools repository prefix . 
Returns the runfiles ' suffix . 
Returns the collection of runfiles as artifacts , including both unconditional artifacts and pruning manifest candidates . 
Returns the collection of runfiles as artifacts , including both unconditional artifacts and pruning manifest candidates . 
Returns the symlinks . 
Returns the symlinks as a map from path fragment to artifact . 
Returns the symlinks as a map from PathFragment to Artifact . 
Adds a map under the workspaceName . 
Adds a map to the root directory . 
Returns the manifest , adding the workspaceName directory if it is not already present . 
Returns the root symlinks . 
Returns the root symlinks as a map from path fragment to artifact . 
Returns the unified map of path fragments to artifacts , taking both artifacts and symlinks into account . 
Returns the pruning manifests specified for this runfiles tree . 
Returns the manifest expander specified for this runfiles tree . 
Returns the unified map of path fragments to artifacts , taking into account artifacts , symlinks , and pruning manifest candidates . 
Returns if there are no runfiles . 
Returns currently policy for conflicting symlink entries . 
sets whether we should warn about conflicting symlink entries . 
adds an entry to a Map of symlinks , optionally reporting conflicts . 
Adds an artifact to the internal collection of artifacts . 
Adds several artifacts to the internal collection . 
Adds a nested sets to the internal collection . 
Adds a symlink . 
Adds several symlinks . 
Adds several symlinks as a NestedSet . 
Adds a root symlink . 
Adds several root symlinks . 
Adds several root symlinks as a NestedSet . 
Adds a pruning manifest .  
Adds several pruning manifests as a NestedSet .  
Adds the runfiles for a particular target and visits the transitive closure of `` srcs '' , `` deps '' and `` data '' , collecting all of their respective runfiles . 
Adds the files specified by a mapping from the transitive info collection to the runfiles . 
Adds symlinks to given artifacts at their exec paths . 
Returns the executable owning this RunfilesSupport . 
Returns the exec path of the directory where the runfiles contained in this RunfilesSupport are generated . 
Returns the files pointed to by the symlinks in the runfiles symlink farm . 
Returns the names of the symlinks in the runfiles symlink farm as a sets of PathFragments . 
Returns both runfiles artifacts and `` conditional '' artifacts that may be part of a Runfiles PruningManifest .  
Returns the name of the workspace that the build is occurring in . 
Returns the Sources manifest . 
Creates an Artifact which writes the `` sources only '' manifest file . 
Returns the unmodifiable list of expanded and tokenized ` args ' attribute values . 
Creates and returns a RunfilesSupport object for the given rule and executable . 
Creates and returns a RunfilesSupport object for the given rule and executable . 
Creates and returns a RunfilesSupport object for the given rule , executable , runfiles and args . 
Returns the Filesystem that all of our directories belong to . 
Returns the installation base directory . 
Returns the base of the output tree , which hosts all build and scratch output for a user and workspace . 
Returns the installed embedded binaries directory , under the shared installBase location . 
Returns the keys for the Skylark providers . 
Returns a Skylark provider and try to cast it into the specified type 
Returns the input dependencies for this action . 
Creates an action for the given runfiles . 
Adds a sets of symlinks from the artifacts ' root-relative paths to the artifacts themselves . 
Adds a map of symlinks . 
Adds a single symlink . 
Adds a mapping of Artifacts to the directory above the normal symlink forest base . 
Adds a runfiles pruning manifest . 
Creates the symlink tree . 
Returns the target associated with the event . 
gets the root causes of the target . 
Returns the configuration for this target . 
Returns the value of the -- output_groups flag . 
Returns the artifacts that the user should know about . 
Returns the actual sets of artifacts that need to be built . 
Returns all artifacts to build if this target is requested as a top-level target . 
Returns the transitive information provider requested , or null if the provider is not found . 
Returns the label associated with this prerequisite . 
Returns the transitive information requested or null , if the information is not found . 
Returns the declared provider requested , or null , if the information is not found . 
Returns the provider defined in Skylark , or null , if the information is not found . 
Returns the instance for the provided providerClass , or <tt> null </tt> if not present . 
Returns the visibility specification . 
Creates the workspace status action . 
Creates a dummy workspace status map . 
Returns cached short hostname .  
Returns the path to the file downloaded . 
Returns the name for this artifact-fetching rule . 
Returns the directory that this artifact will be downloaded to . 
Returns the path to the jar . 
Returns a Builder that can be used to execute a command and build an execution result . 
Adds arguments to the list of arguments to pass to the command . 
sets the path to the directory to execute the result process . 
adds an environment variables to be added to the list of environment variables . 
Sets the timeout , in milliseconds , after which the executed command will be terminated . 
creates parent directories for the given path 
Removes the NDK repository prefix from the given path . 
Creates a CrosstoolRelease proto for the Android NDK , given the API level to use and the release revision . 
Adds an Android NDK C++ STL implementation to the given CToolchain builder . 
Gets the correct host configuration for this build . 
Returns the STL prerequisite of the rule . 
creates a regular progress update with the given running number . 
creates a progress update event also chaining in a given id . 
Returns a unique identifier that universally identifies this build . 
Returns the name of the Blaze command that the user invoked . 
sets to true if this build request was initiated by Emacs . 
Returns true if tests should be run by the build tool . 
Returns the output/error streams to which errors and progress messages should be sent during the fulfillment of this request . 
Returns the sets of command-line options specified for this request . 
Returns the sets of options related to the loading phase . 
Returns the sets of options related to the loading phase . 
Returns the sets of command-line options related to the view specified for this request . 
Returns the sets of execution options specified for this request . 
Returns the human-readable description of the non-default options for this build request . 
Creates a new TopLevelArtifactContext from this build request . 
Returns the elapsed time in seconds for the service of this request . 
Gets the Blaze exit condition . 
Sets the RuntimeException / Error that induced a Blaze crash . 
Sets a `` catastrophe '' : A build failure severe enough to halt a keep_going build . 
Gets the Blaze crash Throwable . 
Returns the build configuration collection used for the build . 
Returns the actual sets of targets which we attempted to build . 
Returns the actual unmodifiable collection of targets which we attempted to test . 
Returns the sets of targets which successfully built . 
Returns a list of configured targets that should participate in printing . 
Returns normally iff successful , throws an exception otherwise . 
Returns normally iff successful , throws an exception otherwise . 
Creates an executor for the current sets of blaze runtime , execution options , and request . 
Returns an instance on success . 
Returns a convenient path to the specified file , relativizing it and using output-dir symlinks if possible . 
Returns the longest prefix from a given sets of ` prefixes ' that are contained in ` path ' . Returns null if none found . 
Returns the label as a path fragment , using the package and the label name . 
Returns a label in the same package as this label with the given target name . 
Returns a suitable string for the user-friendly representation of the Label . 
Returns null on success or an error message otherwise . 
Returns null on success or an error message otherwise . 
Returns a relative path to the source code for this package . Returns pkgName if this is in the main repository or external / -LSB- repository name -RSB- / -LSB- pkgName -RSB- if not . 
Returns the name of this package . 
Returns null on success , an error message otherwise . 
Returns the relative path to the repository source . Returns '' '' for the main repository and external / -LSB- repository name -RSB- for external repositories . 
Returns the runfiles/execRoot path for this repository . 
Returns a builder using concurrent sets , as long as you do n't call filter . 
Returns a parser with no offset . 
returns the type of the pattern . 
returns the string that was parsed into this pattern . 
returns the offset this target pattern was parsed with . 
Returns whether the given pattern is simple , i.e. , not starting with ' - ' and using none of the target matching suffixes . 
Returns a single target corresponding to the given label , or null . 
Returns a single target corresponding to the given label , or an empty or failed result . 
Returns the sets containing the targets found in the given package . 
Returns the sets of all elements in the given collection that appear more than once . 
Returns an immutable list of all non-null parameters in the order in which they are specified . 
Returns true if the given iterable can be verified to be immutable . 
Returns an ImmutableMap of ImmutableMaps created from the Map of Maps parameter . 
Returns a copy of the Map of Maps parameter . 
Returns the index , or UNSET if the pointer is `` null '' 
Returns a new entry value by changing the `` next '' index of an existing entry 
Creates a fresh entry with the specified object at the specified position in the entry arrays . 
Returns currentSize + 1 , after resizing the entries storage if necessary . 
Returns zero if they are considered equivalent , or non-zero otherwise . 
Returns the empty multimap . 
Returns the empty multimap . 
Adds an immutable iterable to the end of the chain . 
Adds a single element to the chain . 
Returns true if the chain is empty . 
Returns the ordering of this nested sets . 
Returns the internal item or array . 
Returns true if the sets is empty . 
Returns true if the sets has exactly one element . 
Returns whether the sets to be built is empty . 
adds an element . 
Adds a collection of elements to the sets . 
Adds another nested sets to this sets . 
Creates a nested sets from a given list of items . 
Creates a nested sets with the given list of items as its elements . 
Creates an empty nested sets . 
Creates a builder for stable order nested sets . 
Creates a builder for compile order nested sets . 
Creates a builder for link order nested sets . 
Creates a builder for naive link order nested sets . 
Creates a Builder with the contents of ` sets ' . 
Returns an empty sets of the given ordering . 
Returns an approximate count of how many threads in the queue visitor 's thread pool are occupied with tasks . 
sets an internal flag to show that an interrupt was detected . 
gets the value of the interrupted flag . 
gets number of jobs remaining . 
creates a `` slack '' thread pool which has the following properties : 1 . 
gets latch that is released if a task throws an exception . 
gets latch that is released if a task is interrupted . 
Returns an immutable list of mutable lists . 
Returns whether any of the events on this objects were errors . 
Returns the location of this event , if any . Returns null iff the event was n't associated with any particular location , for example , a progress message . 
Returns <i> some </i> moderately sane representation of the event . 
Returns an iterator over the collected events . 
Returns an iterator over the collected events of the given kind . 
Returns the number of events collected . 
Returns true iff a qualifying event was handled . 
Returns the number of times the qualifying event was handled . 
Returns a Location with a given Path , start and end offset and start line and column info . 
Returns a Location relating to file ` path ' , but not to any specific part region within the file . 
Returns a Location relating to the subset of file ` path ' , starting at ` startOffset ' and ending at ` endOffset ' . 
Returns the start offset relative to the beginning of the file the object resides in . 
Returns the end offset relative to the beginning of the file the object resides in . 
Returns the path of the file to which the start/end offsets refer . 
Returns null if this information is not available . 
Returns a line corresponding to the position denoted by getStartOffset . Returns null if this information is not available . 
Returns null if this information is not available . 
Returns the location in the format `` filename : line '' . 
Returns this location in the format `` filename : line '' . 
Returns true iff the given tag matches the output filter . 
Returns an output filter for the given pattern . 
Returns the previous OutErr . 
Returns an OutErr that sends all of its output to this Reporter . 
Adds a handler to this reporter . 
Removes handler from this reporter . 
Returns true iff the given tag matches the output filter . 
Returns true if there are no stored events . 
Returns whether any of the events on this objects were errors . 
Returns a singleton if possible . 
gets the digest from the given byte array . 
gets the digest from the given ByteBuffer . 
Gets the digest of the given proto . 
Gets the digest and size of a given VirtualActionInput . 
Creates the symlink tree @param inputPath the input manifest @param outputPath the output manifest @param filesetTree is true iff we 're constructing a Fileset @param symlinkTreeRoot the symlink tree root , relative to the execRoot @throws ExecException on failure @throws InterruptedException 
Creates a File object that refers to fileName , if fileName is an absolute path . 
Returns digest or throws the exception encountered calculating it / 
Returns the size . 
Creates a symlink tree using a CommandBuilder . 
Creates symlink tree using appropriate method . 
Returns the complete argument list build-runfiles has to be called with . 
Adds a directed edge between the nodes labelled ` from ' and ` to ' , creating them if necessary . 
Adds a directed edge between the specified nodes , which must exist and belong to this graph . 
Returns true iff the graph contains an edge between the specified nodes , which must exist and belong to this graph . 
Removes the edge between the specified nodes . 
removes all nodes and edges . 
Returns true iff the two graphs are equivalent , i.e. have the same sets of node labels , with the same connectivity relation . 
Returns true iff this graph is a subgraph of the argument . 
Returns a duplicate graph with the same sets of node labels and the same connectivity relation . 
Returns a deterministic immutable view of the nodes of this graph . 
Returns an immutable view of the nodes of this graph . 
Find the node with the specified label . Returns null if it does n't exist . 
Find or creates a node with the specified label . 
Returns true iff the graph is cyclic . 
Returns the strong component graph of `` this '' . 
Returns a partition of the nodes of this graph into sets , each sets being one strongly-connected component of the graph . 
Returns the image of this graph in a given function , expressed as a mapping from labels to some other domain . 
Returns null if there is no path . 
Returns the nodes of an acyclic graph in topological order -LSB- a.k.a `` reverse post-order '' of depth-first search . -RSB- 
Returns the nodes of an acyclic graph in topological order -LSB- a.k.a `` reverse post-order '' of depth-first search . -RSB- 
Returns the nodes of an acyclic graph in post-order . 
Removes the node in the graph specified by the given label . 
Removes the specified node in the graph .  
Returns the serialized form of the label of the specified node . 
Returns the label for this node . 
Returns a duplicate-free collection of the nodes that this node links to . 
Removes all edges to/from this node . 
Adds ` value ' to either the predecessor or successor sets , updating the appropriate field as necessary . 
Removes ` value ' from either ` preds ' or ` succs ' , updating the appropriate field as necessary . 
adds ` to ' as a successor of ` this ' node . Returns true iff the graph changed . 
adds ` from ' as a predecessor of ` this ' node . Returns true iff the graph changed . 
Returns the given attribute if it 's a computed default , null otherwise . 
Returns the index of the specified attribute , if its type is ` type ' . 
Returns all of this rule 's attributes that are non-configurable . 
Returns all labels reachable via the given attribute . 
Returns the labels that might appear multiple times in the same attribute value . 
Returns a list of the possible values of the specified attribute in the specified rule . 
Returns a list of all possible values an attribute can take for this rule . 
Returns the key this config key sets is bound to or null if no binding . 
Returns the aspectClass required for building the aspect . 
Returns parameters for evaluation of the aspect . 
Returns an aspect name . 
Returns the sets of required aspects for a given atribute . 
Returns the sets of configuration fragments required by this Aspect . 
Returns the attribute - > sets of labels that are provided by aspects of attribute . 
Returns the attribute - > sets of labels that are provided by aspects of attribute . 
Adds an attribute to the aspect . 
Adds an attribute to the aspect . 
Adds a new pair of attribute-value . 
Returns collection of values for specified key , or an empty collection if key is missing . 
Creates a new attribute builder . 
Sets the property flag of the corresponding name if exists , otherwise throws an Exception . 
Sets the attribute default value . 
Sets the attribute default value to a computed default value - use this when the default value is a function of other attributes of the Rule . 
Sets the attribute default value to a Skylark computed default template . 
Sets the attribute default value to be late-bound , i.e. , it is derived from the build configuration . 
Returns where the value of this attribute comes from . 
Sets a condition predicate . 
Sets a list of lists of mandatory native providers . 
Sets a list of sets of mandatory Skylark providers . 
Sets the predicate-like edge validity checker . 
Creates the attribute . 
Creates the attribute . 
Returns the sets of required configuration fragments , i.e. , fragments that will be accessed by the code . 
Returns the name of this attribute . 
Returns the public name of this attribute . 
Returns the logical type of this attribute . 
Returns true if this parameter is mandatory . 
Returns true if this list parameter can not have an empty list as a value . 
Returns true if this label parameter must produce a single artifact . 
Returns true if this label type parameter is checked by silent ruleclass filtering . 
Returns true if this label type parameter skips the analysis time filetype check . 
Returns true if this parameter is order-independent . 
Returns the configuration transition for this attribute for label or label list attributes . 
Returns the configurator instance for this attribute for label or label list attributes . 
Returns the split configuration transition for this attribute . 
Returns true if this attribute transitions on a split transition .  
Returns whether the target is required to be executable for label or label list attributes . 
Returns true if the value of this attribute should be a part of a given sets . 
Returns true if this attribute 's value can be influenced by the build configuration . 
Returns a predicate that evaluates to true for rule classes that are allowed labels in this attribute . 
Returns a predicate that evaluates to true for rule classes that are allowed labels in this attribute with warning . 
Returns the list of sets of mandatory Skylark providers . 
Returns the list of lists of mandatory native providers . 
Returns the list of aspects required for dependencies through this attribute . 
Returns the default value of this attribute in the context of the specified Rule . 
Returns the default value of this attribute , even if it has a condition , is a computed default , or a late-bound default . 
Returns true iff this attribute has a computed default or a condition . 
Returns if this attribute is an implicit dependency according to the naming policy that designates implicit attributes . 
Returns if an attribute with the given name is an implicit dependency according to the naming policy that designates implicit attributes . 
Returns if this attribute is late-bound according to the naming policy that designates late-bound attributes . 
Returns if an attribute with the given name is late-bound according to the naming policy that designates late-bound attributes . 
Returns a replica builder of this Attribute . 
Returns an attribute value by name , or null on no match . 
Returns the number of elements of state -LSB- -RSB- currently used to store indices of `` explicitly sets '' attributes . 
Returns the location of the attribute definition for this rule , or null if not found . 
sets the appropriate type and value . 
Returns the label of the rule . 
Returns the value of the named rule attribute , which must be of the given type .  
Returns true if the given attribute is configurable for this rule instance , false otherwise . 
Returns the names of all attributes covered by this map . 
Returns the type of the given attribute , if it exists . 
Returns whether the specified type is a label type or not . 
Returns a syntactically order-preserved list of all values and selectors for this attribute . 
Returns the labels of all configurability keys across all selects in this expression . 
Returns the value to use when none of the attribute 's selection keys match . 
Returns whether or not this selector has a default condition . 
Returns a custom error message for this select when no condition matches , or an empty string if no such message is declared . 
Returns true for labels that are `` reserved selector key words '' and not intended to map to actual targets . 
Returns if the default setting in question affects the specific target . 
Returns true if a given attribute should be processed . 
Returns a predicate that computes the logical and of the two given predicates . 
Returns the sets of allowed values for the option . 
Returns the environments that belong to this group . 
Returns the environments a rule supports by default , i.e. if it has no explicit references to environments in this group . 
Returns false if the environment does n't belong to this group . 
Returns the sets of environments that transitively fulfill the specified environment . 
Returns the future result of evaluating glob `` pattern '' against this package 's directory , using the package 's cache of previously-started globs if possible . 
Adds glob entries to the cache . 
Returns the exec path of the file , i.e. the path relative to the package source root . 
Gets the least restrictive license type from the list of licenses declared for a target . 
Sets the nickname to regexp mapping for <tt> vardef </tt> . 
returns whether parsing completed enough to construct the target . 
Returns the rule which generates this output file . 
Returns this packages ' identifier . 
sets the default ` testonly ' value for this package . 
sets the default ` deprecation ' value for this package . 
Returns the list of subincluded labels on which the validity of this package depends . 
Returns the list of transitive closure of the Skylark file dependencies of this package . 
Returns the filename of the BUILD file which defines this package . 
Returns the directory containing the package 's BUILD file . 
Returns the name of this package . 
Returns the `` Make '' value from the package 's make environment whose name is `` varname '' , or null iff the variable is not defined in the environment . 
Returns the make environment . 
Returns all make variables for a given platform . 
Returns the label of this package 's BUILD file . 
Returns the InputFile target for this package 's BUILD file . 
Returns true if errors were encountered during evaluation of this package . 
Returns the rule that corresponds to a particular BUILD target name . 
Returns this package 's workspace name . 
Creates a label for a target inside this package . 
Returns the default visibility for this package . 
Returns the default testonly value . 
Returns the default deprecation value . 
Gets the default header checking mode . 
Returns the default copts value , to which rules should append their specific copts . 
Returns whether the default header checking mode has been sets or it is the default value . 
Gets the parsed license object for the default license declared by this package . 
Returns the parsed sets of distributions declared as the default for this package . 
Sets the name of this package 's BUILD file . 
Sets this package 's Make environment . 
Sets the default visibility for this package . 
Sets whether the default visibility is sets in the BUILD file . 
Sets the default value of ` testonly ' . 
Sets the default value of ` deprecation ' . 
Returns whether the `` package '' function has been called yet 
Sets the default header checking mode . 
Sets the default value of copts . 
Sets the default license for this package . 
Creates an input file target in this package with the specified name . 
Sets the visibility and license for an input file . 
Creates a label for a target inside this package . 
Adds a package group to the package . 
Returns true if no duplicates were found , false otherwise . 
Adds an environment group to the package . 
Returns the extra functions needed to be added to the Skylark native module . 
Sets the preprocessor used . 
Sets the syscalls cache used in globbing . 
Sets the max number of threads to use for globbing . 
Returns the immutable , unordered sets of names of all the known rule classes . 
Creates the list of arguments for the ` package ' function . 
Adds a glob to the package , reporting any errors it finds . 
Returns a function-value implementing `` package '' in the specified package context . 
gets the PackageContext by looking up in the environment . 
Returns the Label of this Package . 
Returns the MakeEnvironment Builder of this Package . 
Returns the builder of this Package . 
Returns a Preprocessor factory to use for getting Preprocessor instances . 
Returns a Result resulting from applying Python preprocessing to the contents of `` in '' . 
Returns the class of this rule . 
Returns the build features that apply to this rule . 
Returns true iff the outputs of this rule should be created beneath the bin directory , false if beneath genfiles . 
Returns true iff there were errors while constructing this rule , such as attributes with missing values or values of the wrong type . 
Returns true if this rule has any attributes that are configurable . 
Returns true if the given attribute is configurable . 
Returns true iff the rule class has an attribute with the given name and type . 
Returns the location of the attribute definition for this rule , if known ; or the location of the whole rule otherwise . 
Returns the location of the attribute definition for this rule , if known ; or the location of the whole rule otherwise . 
Returns whether this rule was created by a macro . 
Returns a new Collection containing all Labels that match a given Predicate , not including outputs . 
Returns a new Multimap containing all attributes that match a given Predicate and corresponding labels , not including outputs . 
Returns a string of the form `` cc_binary rule / / foo : foo '' @return a string of the form `` cc_binary rule / / foo : foo '' 
Returns the effective visibility of this Rule . 
Returns the license of the output of the binary created by this rule , or null if it is not specified . 
Returns the globs that were expanded to creates an attribute value , or null if unknown or not applicable . 
Returns the sets of all tags exhibited by this target . 
Returns a fully initialized configured target instance using the given context . 
Sets the implicit outputs function of the rule class . 
sets if the rule can have any provider . 
Adds or overrides the attribute in the rule class . 
Sets the rule implementation function . 
Sets the rule definition environment . 
Sets the rule definition environment hash code for deserialized rule classes . 
Removes an attribute with the same name from this rule class . 
Returns an Attribute.Builder object which contains a replica of the same attribute in the parent rule if exists . 
Returns the default function for determining the sets of implicit outputs generated by a given rule . 
Returns true iff the attribute ` attrName ' is defined for this rule class , and has type ` type ' . 
Returns the index of the specified attribute name . Returns null if the named attribute is not defined for this class of Rule . 
Returns the attribute whose index is ` attrIndex ' . 
Returns the attribute whose name is ` attrName ' ; fails with NullPointerException if not found . 
Returns the number of attributes defined for this rule class . 
Returns sets of non-configurable attribute names defined for this class of rule . 
Returns the sets of advertised transitive info providers . 
Returns true if this rule , when analyzed , can provide any provider . 
Returns this rule 's policy for configuration fragment access . 
Returns true if rules of this type can be used with the constraint enforcement system . 
Returns the default value for the specified rule attribute . 
Returns true iff the outputs of this rule should be created beneath the <i> bin </i> directory , false if beneath <i> genfiles </i> .  
Returns this RuleClass 's custom Skylark rule implementation . 
Returns a function that computes the external bindings a repository function contributes to the WORKSPACE file . 
Returns this RuleClass 's rule definition environment . 
Returns the hash code for the RuleClass 's rule definition environment . 
Returns true if this RuleClass is a Skylark-defined RuleClass . 
Returns true if this RuleClass is Skylark-defined and is subject to analysis-time tests . 
Returns true if this rule class outputs a default executable for every rule . 
Returns a map from rule names to rule class objects . 
Returns a new Skylark Environment instance for rule creation . 
Returns a map from aspect names to aspect factory objects . 
Returns the default content that should be added at the beginning of the WORKSPACE file . 
Returns the default content that should be added at the end of the WORKSPACE file . 
Returns the path to the tools repository 
Returns the RuleClass for the specified rule class name . 
Creates and returns a rule instance . 
Returns the list of labels that need to be loaded so that the visibility decision can be made during analysis time . 
Returns the list of labels used during the declaration of this visibility . 
Returns a value and try to cast it into specified type 
Creates an id for a provider with a given name . 
Returns the label of this target . 
Returns the Package to which this rule belongs . 
Returns a string describing this kind of target : e.g. `` cc_library rule '' , `` source file '' , `` generated file '' . 
Returns the rule associated with this target , if any . 
Returns the license associated with this target . 
Returns the place where the target was defined . 
Returns the sets of distribution types associated with this target . 
Returns the visibility of this target . 
Returns true if test marked as `` exclusive '' by the appropriate keyword in the tags attribute . 
Returns true if test marked as `` local '' by the appropriate keyword in the tags attribute . 
Returns true if the rule is a test or test suite and is local or exclusive . 
Returns true if test marked as `` external '' by the appropriate keyword in the tags attribute . 
Returns the execution info . 
Returns default timeout in seconds . 
Returns default number of shards . 
Returns test size of the given test target , or null if the size attribute is unrecognized . 
Returns the enum associated with a test 's size or null if the tag is not lower case or an unknown size . 
Returns a predicate to be used for test size filtering , i.e. , that only accepts tests of the given size . 
Returns a predicate to be used for test timeout filtering , i.e. , that only accepts tests of the given timeout . 
Returns a predicate to be used for test language filtering , i.e. , that only accepts tests of the specified languages . 
Returns the sets of rules named by the attribute ` attrName ' of test_suite rule ` testSuite ' . 
Returns the enum associated with a test 's timeout or null if the tag is not lower case or an unknown size . 
Returns true iff the given time in seconds is exactly in the range of valid execution times for this TestSize . 
Returns suggested test size for the given time in seconds . 
Returns test timeout of the given test target using explicitly specified timeout or default through to the size label 's associated default . 
Adds the various values returned by the parsing of the previous workspace file parts . 
Returns a list of rules in the given package sorted by BUILD file order .  
Returns true if a specific rule compiles a specific source . 
Returns the result of applying y , if target passes x. 
Returns true if this target should be retained . 
Returns true iff the entry is still valid . 
Returns a target if it was recently loaded , i.e. , since the most recent cache sync . 
Returns the PackageCache statistics . 
Returns a map of collected package names to root paths . 
Returns the package cache statistics . 
Removes cached data which is not needed anymore after loading is complete , to reduce memory consumption between builds . 
Returns the package locator used by this package manager . 
Returns the number of packages loaded since the last sync . 
Returns the number of packages looked up since the last sync . 
Returns the number of all the packages currently loaded . 
Returns whether a package with the given name exists . 
Returns the path to the build file for this package . 
Returns an immutable ordered list of the directories on the package path . 
Returns the path to the WORKSPACE file for this build . 
Returns the names of all the packages under a given directory . 
Returns the Target identified by `` label '' , loading , parsing and evaluating the package if it is not already loaded . 
Returns a read-only view of the sets of packages visited since this visitor was constructed . 
returns a mapping between the specified top-level targets and root causes . 
Sets the clock to use . 
Creates a bar and adds it to the chart . 
Adds a bar to a row of the chart . 
Adds a bar to a row of the chart . 
Adds a vertical line to the chart . 
Adds a column to the chart . 
Returns the type with the given name . 
Creates a new row with the given id if no row with this id existed . 
Adds a bar to the chart row . 
Returns the bars of the row as an unmodifieable list . 
Returns textual description that will uniquely identify an object . 
Returns all the delegate stat recorders . 
Returns AggregateAttr instance for the given ProfilerTask value . 
Returns cumulative time stored in this instance across whole ProfilerTask dimension . 
Returns true if profile datafile was corrupted or incomplete and false otherwise . 
Returns number of missing actions which were faked in order to complete action graph . 
Returns task with `` Build artifacts '' description - corresponding to the execution phase . 
Returns duration of the given phase in ns . 
returns the next critical path entry for the task or null if there is none . 
Returns an empty array used to store task statistics . 
Returns the nanoTime of the current profiler instance , or an arbitrary constant if not active . 
Returns true iff profiling is currently enabled . 
Adds task directly to the main queue bypassing task stack . 
creates an snapshot of the the stats recorded up to now . 
Returns sets of profiler tasks to be filtered from critical path .  
adds statistics accumulated in another PhaseStatistics object to this one . 
adds statistics from another PhaseVfsStatistics aggregation to this one . 
returns The execution durations of all calls to built-in functions excluding the durations of all subtasks . 
returns The execution durations of all calls to user-defined functions excluding the durations of all subtasks . 
returns The execution durations of all calls to user-defined functions excluding the durations of all subtasks . 
adds all new durations to previously collected durations for all functions mapped to tasks . 
adds all durations and self-times of the given function to the maps . 
Returns the recorded graph 
Returns true iff ` word ' is a reserved word of the language . 
Returns the list of tokens for the specified input , or throws QueryException . 
Returns the direct forward dependencies of the specified targets . 
Returns the direct reverse dependencies of the specified targets . 
Returns the forward transitive closure of all of the targets in `` targets '' . 
Returns the sets of nodes on some path from `` from '' to `` to '' . 
Returns the sets of BUILD , and optionally sub-included and Skylark files that define the given sets of targets . 
Returns an object that can be used to query information about targets . 
Returns the sets of query functions implemented by this query environment . 
Returns whether the given target is a rule . 
Returns whether the given target is a test target . 
Returns whether the given target is a test suite target . 
Returns the given attribute represented as a list of strings . 
Returns a better error message for the query . 
Returns the subexpression for which evaluation failed , or null if the failure occurred during lexing/parsing . 
Returns this query expression pretty-printed . 
Returns an exception . 
Returns the value associated with the consumed token , if any . 
Returns that integer , or throws a QueryException otherwise . 
Returns true if the visibility specification includes the given target 's package . 
Returns string for the given target that must be matched against pattern . 
Returns a list of strings for the given target that must be matched against pattern . 
Returns the sets of rules named by the attribute ` attrName ' of test_suite rule ` testSuite ' . 
Returns true if and only if this visitation attribute is still up-to-date . 
Returns map of attributes and corresponding label values . 
Returns an equivalence relation for nodes in the specified graph . 
Returns the output formatter for the specified command-line options . 
Returns the user-visible name of the output formatter . 
Returns the possible values of the specified attribute in the specified rule .  
returns the current options as a sets of QueryEnvironment settings . 
Creates and returns a new DOM tree for the specified build target . 
Creates and returns a new DOM tree for the specified attribute values . 
sets the executable parameter to the specified value . 
Returns a cached result for a given Action digest , or null if not found in cache . 
Sets the given result as result of the given Action . 
adds the files to the ActionResult builder . 
sets the executable parameter to the specified value . 
Returns a cached result for a given Action digest , or null if not found in cache . 
Sets the given result as result of the given Action . 
Returns the precomputed digest . 
Returns the precomputed digests for both data and metadata . 
Returns the label by which it was referred to in the BUILD file . 
Returns the artifacts needed as inputs to process the resources/assets . 
Creates an Action that will invoke aapt to generate symbols java sources from the resources and pack them into a srcjar . 
Creates an Action that will invoke aapt to package the android resources into an apk file . 
Returns optional part of the aapt command line : optionName output_path . 
Returns a resourceType specific unique output location for the given action kind . 
Creates an action that copies a . 
Returns the file containing the list . 
Returns the multidex mode to apply to this target . 
Returns true if the runtime contained in the Android SDK used to build this rule supports the given version of multidex mode specified , false otherwise . 
Returns an intermediate artifact used to support dex generation . 
Returns Jars produced by this rule that may go into the runtime classpath . 
Returns true if Jack should be used in place of javac/dx for Android compilation . 
Returns true if Jack sanity checks should be enabled . 
adds `` idl_srcs '' contents . 
adds the java files generated from `` idl_srcs '' . 
adds `` idl_parcelables '' contents . 
Returns java package for this target . 
Returns the direct AndroidManifest . 
Returns the direct generated AndroidManifest . 
Returns true if the target defined Android resources . 
Returns the direct debug key signed apk , if there is one . 
Returns the root directory under which idl_srcs and idl_parcelables are located in this rule . 
Returns the idl_parcelables , consisting of parcelable marker files defined on this rule . 
Returns the generated Java sources created from the idl_srcs . 
Returns the jar containing class files derived from the . 
Returns the jar containing source files derived from the . 
Returns the idl_parcelables defined on the given rule . 
Returns the idl_srcs defined on the given rule . 
Creates an action to split out classes and source files created by aidls . 
Creates an action to convert an . 
Returns the union of `` idl_srcs '' and `` idl_parcelables '' , i.e. all . 
Returns the sets of neverlink libraries in the transitive closure . 
Returns the jar to be dexed . 
sets the resource container to parse . 
sets the artifact location for the output protobuf . 
Returns the label that is associated with this piece of information . 
Returns the transitive ResourceContainers for the label . 
Returns the immediate ResourceContainers for the label . 
Returns the attribute value that specifies this mode . 
Returns whether or not this multidex mode can be passed to Jack . 
Returns the value that should be passed to Jack 's -- multi-dex flag . 
Returns the name of the output dex classes file . 
Returns null on no match . 
Returns the Android SDK associated with the rule being analyzed or null if the Android SDK is not specified . 
Returns the sets of jack files to be used as a base classpath for jack compilation of Java rules , typically a Jack translation of the jars in the Java bootclasspath . 
Returns the manifest to be used when compiling a given rule . 
Returns the name of the file in which the file names of native dependencies are listed . 
Returns the artifact for the debug key for signing the APK . 
adds coverage instrumentation to the Java compilation of an Android binary . 
Returns the list of attributes that may contribute Java runtime dependencies . 
Sets the native libraries to be included in the APK . 
Sets the dex file to be included in the APK . 
Sets the resource APK that contains the Android resources to be bundled into the output . 
Sets the file where Java resources are taken . 
Adds an individual resource file to the root directory of the APK . 
Adds the appropriate SpawnAction options depending on if SingleJar is a jar or not . 
Returns the APK files generated in the transitive closure . 
Returns the coverage metadata artifacts generated in the transitive closure . 
Returns the merged manifests 
Creates a dexbuilder action with the given input , output , and flags . 
Adds all dex archives from the given providers , which is useful to aggregate providers from dependencies . 
Adds the given dex archive as a replacement for the given Jar . 
Gets a list of targets on the given LABEL_LIST attribute if it exists , else an empty list . 
Creates an action to build an empty jack library given by outputArtifact . 
Creates an action to compile the given sources as a jack library given by outputArtifact . 
Sets the rule context in which this compilation helper will operate . 
Sets the artifact the final Jack library should be output to . 
Sets the Jack binary used to perform operations on Jack libraries . 
Sets the Jill binary used to translate jars to jack files . 
Sets the resource extractor binary used to extract resources from jars . 
Sets Jill to be tolerant , e.g. , when translating a jar from the Java bootclasspath to jack . 
Adds a collection of Java source files to be compiled by Jack . 
Adds a collection of zip files containing Java sources to be compiled by Jack . 
Adds a collection of jar files to be converted to Jack libraries . 
Adds Java resources as a map keyed by the paths where they will be added to the Jack package and the final APK . 
Adds a sets of class names which will be used as annotation processors . 
Adds a sets of jars which will be used as the classpath for annotation processors . 
Adds a sets of normal dependencies . 
Adds a sets of dependencies which will be exported to Jack rules which depend on this one . 
Adds a sets of dependencies which will be used in dexing . 
Adds a sets of dependencies which will be placed on the classpath of this rule . 
Adds a sets of dependencies to be placed on the classpath of rules depending on this rule . 
Adds all libraries from deps to nonLibraryFiles and jackLibs based on their type . 
Gets the Jack libraries in the transitive closure which should be added to the final dex file . 
Gets the Jack libraries which should be added to the classpath of any Jack action depending on this provider . 
Returns the root-part of a given path by trimming off the end specified by a given tail . 
Returns the artifact containing the names of the native libraries or null if it does not exist . 
Creates an provider from the resources in the ResourceApk . 
Creates an empty ResourceDependencies instance . 
Creates a new AndroidResourcesProvider with the supplied ResourceContainer as the direct dep . 
creates a new AndroidResourcesProvider from the dependencies of this library . 
Returns the names of any crosstool features that correspond to this bitcode mode . 
Returns the flags that should be added to compile actions to use this bitcode setting . 
Returns the minimum iOS version supported by binaries and libraries . 
Returns the value of the xcode version , if available . 
Returns a map of environment variables that should be propagated for actions that build on an apple host system . 
Returns a map of environment variables that should be propagated for actions that require a version of xcode to be explicitly declared . 
Returns the label of the default provisioning profile to use when bundling/signing an ios application . 
Returns the bitcode mode to use for compilation steps . 
Returns the label of the xcode_config rule to use for resolving the host system xcode version . 
Returns the unique identifier distinguishing configurations that are otherwise the same . 
Returns the identifier for an Xcode toolchain to use with tools . 
Returns absent if no explicit xcode version is declared , and host system defaults should be used . 
Returns the absolute root path of the xcode developer directory on the host system for the given xcode version . 
Returns the platform directory inside of Xcode for a platform name . 
Returns the platform directory inside of Xcode for a given configuration . 
Returns the platform frameworks directory inside of Xcode for a given configuration . 
Returns the SDK frameworks directory inside of Xcode for a given configuration . 
Returns swift libraries path . 
Returns a series of xcode build settings which configure compilation warnings to `` recommended settings '' . 
Returns the value associated with the given list of string keys from the cache , or null if the entry is not present in the cache . 
Returns the platform type of this platform . 
Returns true if this platform is a device platform , or false if this is a simulator platform . 
Returns the name of the `` platform '' as it appears in the CFBundleSupportedPlatforms plist setting . 
Returns the name of the `` platform '' as it appears in the plist when it appears in all-lowercase . 
Returns the platform for the given target cpu and platform type . 
Returns the platform for the given target cpu . 
Returns true if the given target cpu is an apple platform . 
Returns a Skylark struct that contains the instances of this enum . 
Returns a map where keys are `` names '' of xcode versions as defined by the configuration target , and values are the rule data objects which contain information regarding that xcode version . 
Returns the default ios sdk version to use if this xcode version is in use . 
Returns the default watchos sdk version to use if this xcode version is in use . 
Returns the default tvos sdk version to use if this xcode version is in use . 
Returns the default macosx sdk version to use if this xcode version is in use . 
Returns the label of the owning target of this provider . 
Returns the accepted string aliases for this xcode version . 
Returns the name of the category . 
Returns a new SpawnAction builder for generating dwp files , pre-initialized with standard settings . 
Creates an intermediate dwp file keyed off the name and path of the final output . 
Returns our own linkopts from the rule attribute . 
Returns the files from headers and does some sanity checks . 
Returns the files from headers and does some sanity checks . 
Returns nocopts pattern built from the make variable expanded nocopts attribute . 
Returns true if the rule context has a nocopts regex that matches the given value , false otherwise . 
Returns a list of define tokens from `` defines '' attribute . 
Returns any linker scripts found in the dependencies of the rule . 
Creates the feature configuration for a given rule . 
Creates a feature configuration for a given rule . 
Creates a feature configuration for a given rule . 
Creates a feature configuration for a given rule . 
Returns whether this sets of outputs has any object or . 
Returns an unmodifiable view of the . 
Returns unmodifiable view of object files resulting from compilation . 
Returns an unmodifiable view of the . 
Returns an unmodifiable view of the . 
Returns an unmodifiable view of the temp files sets . 
Returns an unmodifiable view of the . 
Returns the output files that are considered `` compiled '' by this C++ compile action . 
Adds temp files . 
Returns the execution-time dynamic libraries . 
Returns the type of the generated static library . 
Returns the sets of file types that are valid for this category . 
Returns the sets of enabled actions for this category . 
Returns the linking outputs before adding the pre-compiled libraries . 
Sets fields that overlap for cc_library and cc_binary rules . 
adds the corresponding files as public header files , i.e. , these files will not be compiled , but are made visible as includes to dependent rules in module maps . 
adds the corresponding files as public textual header files . 
adds the corresponding files as source files . 
adds the corresponding files as source files . 
adds the corresponding files as source files . 
adds the corresponding files as source files . 
Returns the compilation unit sources . 
adds the corresponding files as linker inputs for non-PIC links . 
adds the corresponding files as linker inputs for PIC links . 
Adds the corresponding non-code files as linker inputs . 
Adds the copts to the compile command line . 
Adds the given options as linker options to the link command . 
Adds the given defines to the compiler command line . 
Adds the given linkstamps . 
Adds the given precompiled files to this helper . 
Adds the given artifact to the input of any generated link actions . 
Adds a variableExtension to template the crosstool . 
Sets the module map artifact for this build . 
Sets the given headers checking mode . 
creates the C++ compile and link actions , and the corresponding C++ - related providers . 
Returns true if the appropriate attributes for linker output artifacts are defined , and either the compile action produces object files or the build is configured to produce an archive or dynamic library even in the absense of object files . 
Adds linker output artifacts to the given map , to be registered on the configured target as output groups . 
Creates the C/C + + compilation action creator . 
creates context for cc compile action from generated inputs . 
Creates context for cc compile action from generated inputs . 
Returns a map from library identifiers to sets of LibraryToLink from this CcLinkingOutputs which share that library identifier . 
adds the '' . 
Returns the shared libraries that are linked against and therefore also need to be in the runfiles . 
adds the '' . 
Returns the library identifier of an artifact : a string that is different for different libraries , but is the same for the shared , static and pic versions of the same library . 
Adds a collection of link options . 
Adds a collection of linkstamps . 
Adds a library artifact . 
Adds a collection of library artifacts . 
Adds an extra link time library , a library that is actually built at link time . 
Returns the linkstamp artifact . 
Returns the declared includes . 
Returns the link params store . 
Returns link parameters given static / shared linking settings . 
Returns the crosstool-derived link action inputs for a given rule . Adds the given sets of artifacts as extra inputs . 
Returns a map that should be templated into the crosstool as build variables . 
Returns a map of environment variables to be added to the compile actions created for this toolchain . 
Returns the sets of variables that can control the expansion of this expandable . Returns null if the expandable is a simple flag that will only be expanded once . 
Adds the key/value pair this object represents to the given map of environment variables . 
Returns the name of this selectable . 
Adds environment variables for the given action to the provided builder . 
Returns the path to this action 's tool relative to the provided crosstool path . 
Returns a list of requirement hints that apply to the execution of this tool . 
Returns the name of the blaze action this action config applies to . 
Returns the path to this action 's tool relative to the provided crosstool path given a sets of enabled features . 
Returns the ArtifactCategory for this ArtifactNamePattern . 
Returns the artifact name that this pattern selects . 
Adds a value to the sequence . 
Returns an immutable value sequence . 
Adds a sub-sequence to the sequence . 
Returns an immutable nested sequence . 
adds all variables in a map . 
Adds all variables to this builder . 
Returns all bound variables in the current view . 
Returns a given action 's tool under this FeatureConfiguration . 
Returns the artifact selected by the toolchain for the given action type and action category , or null if the category is not supported by the action config . 
Returns true if the toolchain defines an ArtifactNamePattern for the given category . 
removes all unsupported features from the enabled feature sets . 
Returns all the files in Crosstool . 
Returns a middleman for all the files in Crosstool . 
Returns the files necessary for compilation . 
Returns the files necessary for a ` strip ' invocation . 
Returns the files necessary for an ` objcopy ' invocation . 
Returns the files necessary for linking , including the files needed for libc . 
Returns the static runtime libraries . 
Returns an aggregating middleman that represents the static runtime libraries . 
Returns the dynamic runtime libraries . 
Returns an aggregating middleman that represents the dynamic runtime libraries . 
Returns the name of the directory where the solib symlinks for the dynamic runtime libraries live . 
Returns the C++ compilation context for the toolchain . 
Returns the configured features of the toolchain . 
Returns the compilation mode . 
Returns build variables to be templated into the crosstool . 
returns the sets of include files that may be included even if they are not mentioned in the source file or any of the headers included by it . 
Returns the environment variables that need to be added to tests that collect code coverage . 
Returns the transitive compilation prerequisites consolidated into middlemen prerequisites , or an empty sets if there are no prerequisites . 
Returns the immutable sets of additional transitive inputs needed for compilation , like C++ module map artifacts . 
Returns the context for a LIPO compile action .  
Adds multiple compilation prerequisites . 
adds a single include directory to be added with '' - I '' .  
adds multiple include directories to be added with '' - I '' .  
adds a single include directory to be added with '' - iquote '' .  
adds a single include directory to be added with '' - isystem '' .  
adds a single declared include dir , relative to a '' - I '' or '' - iquote '' directory '' . 
adds a single declared include directory , relative to a '' - I '' or '' - iquote '' directory '' , from which inclusion will produce a warning . 
adds a map of generated source or header Artifact to an output Artifact after grepping the file for include statements . 
Adds a single define . 
Adds multiple defines . 
Sets the C++ module map . 
Sets the C++ header module in non-pic mode . 
Sets the C++ header module in pic mode . 
Sets that the context will be used by a compilation that needs transitive module maps . 
Sets that the context will be used by a compilation that uses header modules provided by its dependencies . 
Creates a middleman for the compilation prerequisites . 
Returns the list of additional inputs found by dependency discovery , during action preparation , and clears the stored list . 
Returns the path of the c/cc source for gcc . 
Returns the path where gcc should put its result . 
Returns the path where gcc should put the discovered dependency information . 
Returns the list of '' - D '' arguments that should be used by this gcc invocation . 
Returns the compiler options . 
Returns true if an included artifact is declared in a sets of allowed include directories . 
returns the directories in which to look for headers and issue a warning . 
Returns the environment variables that should be sets for C++ compile actions . 
Sets the feature configuration to be used for the action . 
Sets the feature build variables to be used for the action . 
Sets whether the CompileAction should use pic mode . 
Sets the CppSemantics for this compile . 
Returns the contents of the . 
Returns null if additional inputs will only be found during action execution , not before .  
Returns the executor reply from an exec exception , if available . 
Returns the estimated resource consumption of the action . 
Returns the include files that should be shipped to the executor in addition the ones that were declared . 
Returns the toolchain identifier , which uniquely identifies the compiler version , target libc version , target cpu , and LIPO linkage . 
Returns the path of the crosstool . 
Returns the system name which is required by the toolchain to run . 
Returns the path fragment that is either absolute or relative to the execution root that can be used to execute the given tool . 
Returns a label that forms a dependency to the files required for the sysroot that is used . 
Returns the label of the cc_compiler rule for the C++ configuration . 
Returns the configured features of the toolchain . 
Returns the configured current compilation mode . 
Returns whether the toolchain supports the gold linker . 
Returns whether the toolchain supports the -- start-lib / -- end-lib options . 
Returns whether the toolchain supports dynamic linking . 
Returns whether build_interface_so can build interface shared objects for this toolchain . 
Returns whether the toolchain supports linking C/C + + runtime libraries supplied inside the toolchain distribution . 
Returns whether the toolchain supports EXEC_ORIGIN libraries resolution . 
Returns whether the toolchain supports `` Fission '' C++ builds , i.e. builds where compilation partitions object code and debug symbols into separate output files . 
Returns whether shared libraries must be compiled with position independent code on this platform . 
Returns whether binaries must be compiled with position independent code . 
Returns the type of archives being used . 
Returns the ar flags to be used . 
Returns the built-in list of system include paths for the toolchain compiler . 
Returns the sysroot to be used . 
Returns the run time sysroot , which is where the dynamic linker and system libraries are found at runtime . 
Returns the default options to use for compiling C , C++ , and assembler . 
Returns the list of additional C-specific options to use for compiling C . 
Returns the list of additional C++ - specific options to use for compiling C++ . 
Returns the default list of options which can not be filtered by BUILD rules . 
Returns the immutable list of linker options for fully statically linked outputs . 
Returns the immutable list of linker options for mostly statically linked outputs . 
Returns the immutable list of linker options for artifacts that are not fully or mostly statically linked . 
Returns the execution path to the linker binary to use for this build . 
Returns the STL label if given on the command line . 
Returns the currently active LIPO compilation mode . 
Returns true if it is AutoFDO LIPO build . 
Returns whether or not to strip the binaries . 
Returns whether temporary outputs from gcc will be saved . 
Returns the custom malloc library label . 
Returns true if mostly-static C++ binaries should be skipped . 
Returns whether we are processing headers in dependencies of built C++ targets . 
Returns true if Fission is specified for this build and supported by the crosstool . 
Returns true if Fission is enabled for this build and the user requested automatic building of . 
Returns true if all C++ compilations should produce position-independent code , links should produce position-independent executables , and dependencies with equivalent pre-built pic and nopic versions should apply the pic versions . 
Returns true if interface shared objects should be used . 
Returns true if shared libraries must be compiled with position independent code on this platform or in this configuration . 
Returns true iff we should use '' . 
Returns the path to the GNU binutils ` objcopy ' binary to use for this build . 
Returns the path to the GNU binutils ` gcc ' binary that should be used by this build . 
Returns the path to the GNU binutils ` g + + ' binary that should be used by this build . 
Returns the path to the GNU binutils ` cpp ' binary that should be used by this build . 
Returns the path to the GNU binutils ` gcov ' binary that should be used by this build to analyze C++ coverage data . 
Returns the path to the ` gcov-tool ' executable that should be used by this build . 
Returns the path to the GNU binutils ` nm ' executable that should be used by this build . 
Returns the path to the GNU binutils ` objdump ' executable that should be used by this build . 
Returns the path to the GNU binutils ` ar ' binary to use for this build . 
Returns the path to the GNU binutils ` strip ' executable that should be used by this build . 
Returns the GNU System Name 
Returns the architecture component of the GNU System Name 
Returns whether the configuration 's purpose is only to collect LIPO-related data . 
Returns true if we should share identical native libraries between different targets . 
returns sets of features enabled by the CppConfiguration , specifically the FDO and LIPO related features enabled by options . 
Returns the label for the cc_binary target . 
Returns the malloc implementation for the given target . 
Returns the directory where object files are created . 
Returns a map from original header Artifact to the output Artifact of grepping over it . 
Returns the linked artifact for linux . 
Returns the LIPO context provider for configured target , or null if such a provider does n't exist . 
Creates a CppModuleMap object for pure c++ builds . 
Returns a middleman for all files to build for the given configured target , substituting shared library artifacts with corresponding solib symlinks . 
Returns the FDO build subtype . 
Returns a relative path to the bin directory for data in AutoFDO LIPO mode . 
Returns a relative path to the genfiles directory for data in AutoFDO LIPO mode . 
Creates an action to strip an executable . 
creates an artifact at the specified root-relative path in the bin directory . 
Returns the link configuration ; for correctness you should not call this method during execution - only the argv is part of the action cache key , and we therefore do n't guarantee that the action will be re-executed if the contents change in a way that does not affect the argv . 
Returns the output of the linking . 
Returns the path to the output artifact produced by the linker . 
Returns the command line specification for this link , included any required linkstamp compilation steps . 
Returns linker inputs that are not libraries . 
Returns libraries that are to be inputs to the linker . 
Returns input artifacts arising from the crosstool . 
Returns the runtime middleman artifact . 
Returns runtime inputs for the linker . 
Returns compilation inputs for compilations arising from the linking of this target . 
Returns linkstamp artifacts . 
Returns linkopts for the linking of this target . 
Returns the type of the linking of this target . 
Returns the staticness of the linking of this target . 
Returns true for cc_fake_binary targets . 
Returns true if the linking of this target is used for a native dependecy library . 
Returns true if the linking for this target uses test-specific flags . 
Returns the action name for purposes of querying the crosstool . 
Returns linker inputs that are not libraries . 
Returns linker inputs that are libraries . 
Returns inputs arising from the crosstool . 
Returns the runtime middleman artifact . 
Returns runtime inputs for this link action . 
Returns compilation inputs for this link action . 
Returns linkstamps for this link action . 
Returns linkstamp options for this link action . 
Returns command line options for this link action . 
Returns the type of this link action . 
Returns the staticness of this link action . 
Returns lto bitcode files for this link action . 
Returns true for a cc_fake_binary . 
Returns true for native dependencies of another language . 
Returns true if this link action uses test only flags . 
sets the crosstool inputs required for the action . 
Sets the feature configuration for the action . 
Sets the C++ runtime library inputs for the action . 
Adds a variables extension to template the toolchain for this link action . 
Adds variables extensions to template the toolchain for this link action . 
Sets the interface output of the link . 
adds additional inputs needed for the linkstamp compilation that is being done as part of the link . 
Adds a single object file to the sets of inputs . 
Adds object files to the linker action . 
Adds non-code files to the sets of inputs . 
Adds a single non-code file to the sets of inputs . 
Adds a single artifact to the sets of inputs . 
Adds multiple artifact to the sets of inputs . 
Sets the identifier of the library produced by the action .  
Adds a C++ source file which will be compiled at link time . 
Adds an additional linker option . 
Adds multiple linker options at once . 
Sets whether this link action will be used for a cc_fake_binary ; false by default . 
Sets whether this link action is used for a native dependency library . 
Sets the name of the directory where the solib symlinks for the dynamic runtime libraries live . 
Sets extra input artifacts to the link action . 
Returns linker parameters indicating libraries that should not be linked inside a -- whole_archive block . 
Adds command-line options for a dynamic library input file into options and libOpts . 
Adds command-line options for a static library or non-library input into options . 
Returns the estimated resource consumption of the action . 
Sets the compilation context , i.e. include directories and allowed header files inclusions . 
Sets the compilation context , i.e. include directories and allowed header files inclusions , for the compilation of this model 's interface , e.g. header module . 
Adds a single source file to be compiled . 
Adds all the source files . 
Adds mandatory inputs . 
Adds the given copts . 
Sets the nocopts pattern . 
Adds the given linkopts to the optional dynamic library link command . 
Adds the given variablesExensions for templating the crosstool . 
Sets the link type used for the link actions . 
Adds an artifact to the inputs of any link actions created by this CppModel . 
Sets the feature configuration to be used for C/C + + actions . 
gets the safe path strings for a list of paths to use in the build variables . 
Returns the linked artifact resulting from a linking of the given type . 
Creates a basic cpp compile action builder for source file . 
Creates cpp PIC compile action builder from the given builder by adding necessary copt and changing output and dotd file names . 
creates the actions for '' -- save_temps '' . 
Returns true iff code coverage is enabled for the given target . 
Returns true if this rule should creates a dynamic library . 
Returns the `` effective source path '' of a source file . 
Returns true iff this build requires include validation . 
Returns the actual source file . 
Returns the label from which this source arises in the build graph . 
Returns build variables to be used specifically in the compilation of this source . 
Creates a new crosstool configuration from the given crosstool release and configuration options . 
Returns a series of command line flags which specify the configuration options . 
Returns true if the specified toolchain is a candidate for use with this crosstool . 
Returns a user-friendly location of the CROSSTOOL proto for error messages . 
Returns the parsed contents of the CROSSTOOL file . 
Returns an MD5 hash of the CROSSTOOL file contents . 
Returns the CPU associated with this crosstool configuration . 
Returns the compiler associated with this crosstool configuration . 
Returns the libc version associated with this crosstool configuration . 
Returns a new instance that collects direct outputs and transitive dependencies . 
Returns a new instance that collects direct outputs only . 
returns the sets of extra libraries . 
adds a transitive dependency . 
adds a single library to build . 
gets a new Builder for this ExtraLinkTimeLibrary class . 
adds the inputs associated with another instance of the same underlying ExtraLinkTimeLibrary type . 
Returns true if the given fdoFile represents an AutoFdo profile . 
Returns true if the given fdoFile represents an LLVM profile . 
Returns the imports from the . 
Returns the imports from the . 
Returns a list of . 
Returns whether AutoFDO is enabled . 
Adds the FDO profile output path to the variable builder . 
Returns a collection with additional input artifacts relevant to the action by reading the dynamically-discovered dependency information from the . 
Sets the action for which to discover inputs . 
Sets the source file for which to discover inputs . 
Sets the dotd file to be used to discover inputs . 
Sets the SpecialInputsHandler for inputs to this build . 
Sets that this compile should validate inclusions against the dotd file . 
Sets the DependencySet capturing used headers by this compile . 
Sets prefixes of allowed absolute inclusions 
Sets permitted inputs to the build 
Creates a CppHeaderDiscovery instance . 
Returns the built-in list of system include paths for the toolchain compiler . 
Returns an immutable list of '' - iquote '' include paths that should be used by the IncludeScanner for this action . 
Returns an immutable list of '' - I '' include paths that should be used by the IncludeScanner for this action . 
Returns an immutable list of '' - isystem '' include paths that should be used by the IncludeScanner for this action . 
Returns an immutable list of '' - include '' inclusions specified explicitly on the command line of this action . 
Returns an artifact that the compiler may unconditionally include , even if the source file does not mention it . 
Returns an immutable list of sources that the IncludeScanner should scan for this action . 
Returns additional scannables that need also be scanned when scanning this scannable . 
Returns the possibly shared scanner to be used for a given pair of include paths . 
Returns the files transitively included by the source files of the given IncludeScannable . 
Returns the artifact resolver . 
Returns whether the name of the output file should denote that the code in the file is PIC . 
adds in any object files which are implicitly named as inputs by the linker . 
Returns an interface shared object output artifact produced during linking . 
Returns the runtime inputs to the linker . 
Returns the current type of link target sets . 
Returns the `` staticness '' of the link . 
Returns the additional linker options for this link . 
Returns the location of the C++ runtime solib symlinks . 
Returns true for libraries linked as native dependencies for other languages . 
Returns the build variables used to template the crosstool for this linker invocation . 
Returns just the . 
Sets the toolchain to use for link flags . 
Sets the feature configuration for this link action . 
Sets the type of the link .  
Sets the primary output artifact . 
Sets a list of linker inputs .  
Sets the additional interface output artifact , which is only used for dynamic libraries . 
Sets the linker options .  
Sets how static the link is supposed to be .  
Sets the binary that should be used to creates the interface output for a dynamic library . 
Sets the linkstamps .  
Adds the given C++ compiler options to the list of options passed to the linkstamp compilation . 
Sets the features enabled for the rule . 
sets flags that should not be in a -- whole_archive block . 
Returns the type of the linker input . 
Returns the artifact that is the input of the linker . 
Returns the original library to link . 
Returns whether the input artifact is a fake object file or not . 
returns the list of object files included in the input artifact , if there are any . 
returns the identifier for the library . 
Creates linker input objects for non-library files . 
Creates a linker input for which we do not know what objects files it consists of . 
Creates a fake linker input . 
Creates input libraries for which we do not know what objects files it consists of . 
Creates a solib library symlink from the given artifact . 
Creates an input library for which we do not know what objects files it consists of . 
Creates a library to link with the specified object files . 
Returns merged compilation context for the whole LIPO subtree . 
Returns the map from source artifact to the include scannable object representing the corresponding FDO source input file . 
Returns the name of the symlink that will be created for a library , given its name . 
Returns the include scannables in the transitive closure . 
Returns the action this extra action is ` shadowing ' . 
Returns the extra action map . 
Adds an extra_action to the action graph based on the action to shadow . 
Creates an output artifact for the extra_action based on the output_template . 
Creates a unique id for the action shadowed by this extra_action . 
Returns the artifacts from the given targets that are members of the given output group . 
Returns a thread pool for fileset symlink tree creation . 
Returns the name of the workspace the build is run in . 
gets late directory information for a source . 
adds specified file as a symlink .  
adds all late directories as symlinks . 
Adds the given symlink to the tree . 
creates a stub LateDirectoryInfo that is already marked as added . 
creates a LateDirectoryInfo object with the specified attributes . 
Returns a list of the traversals that went into this Fileset . 
Adds symlinks to the given FilesetLinks . 
adds the traversal 's fingerprint to the given Fingerprint . 
Returns the instrumentation jar in the given semantics . 
Returns the javac bootclasspath artifacts . 
Returns the extdir artifacts . 
Creates the Action that creates ijars from Jar files . 
Creates a derived artifact from the given artifact by adding the given prefix and removing the extension and replacing it by the given suffix . 
Returns the runtime class path . 
Returns the classpath to be passed to the JVM when running a target containing this fragment . 
Returns the classpath to be passed to the Java compiler when compiling a target containing this fragment . 
Returns the classpath to be passed as a boot classpath to the Java compiler when compiling a target containing this fragment . 
Sets the processed attributes of the rule generating the deploy archive . 
Sets whether to include build-data . 
Sets whether to enable compression of the output deploy archive . 
Sets additional dependencies to be added to the action that creates the deploy jar so that we force the runtime dependencies to be built . 
Sets the artifact to creates with the action . 
Sets the class to launch the Java application . 
Adds additional jars that should be on the classpath at runtime . 
Sets the list of extra lines to adds to the archive 's MANIFEST.MF file . 
Sets the optional launcher to be used as the executable for this deploy JAR 
Returns the SingleJar deploy jar Artifact . 
Creates an action to aggregate all metadata artifacts into a single < target_name > _ instrumented.jar file . 
Creates the java.library.path from a list of the native libraries . 
Returns transitive Java native libraries . 
Returns the string that the stub should use to determine the JVM @param launcher if non-null , the cc_binary used to launch the Java Virtual Machine 
Adds information about the annotation processors that should be run for this java target to the target attributes . 
Gets all the deps . 
Gets all the deps that implement a particular provider . 
Returns transitive runtime jars . 
Returns transitive compile-time jars . 
Returns transitive instrumentation metadata jars . 
Returns a new builder instance . 
Creates the Action that compiles Java source files . 
Returns the bootclasspath explicit sets in attributes if present , or else the default . 
Creates the Action that compiles Java source files and optionally instruments them for coverage . 
Creates the instrumentation metadata artifact if needed . 
Creates the Action that compiles ijars from source . 
Returns the artifact for a jar file containing class files that were generated by annotation processors . 
Returns the artifact for a jar file containing source files that were generated by annotation processors . 
Returns whether this target uses annotation processing . 
Returns the artifact for the manifest proto emitted from JavaBuilder . 
Creates the action for creating the gen jar . 
Returns the GenClass deploy jar Artifact . 
Creates the jdeps file artifact if needed . 
Returns whether this target emits dependency information . 
Creates an Action that packages the Java source files into a Jar . 
Creates the actions that produce the interface jar . Adds the jar artifacts to the given JavaCompilationArtifacts builder . 
Adds the compile time and runtime Java libraries in the transitive closure of the deps to the attributes . 
Gets the value of the `` javacopts '' attribute combining them with the default options . 
Returns the list of paths that represent the resources to be added to the jar . 
Returns the list of paths that represents the classpath . 
Returns the list of paths that represents the bootclasspath . 
Returns the path to the extdir . 
Returns the list of paths that represents the source jars . 
Returns the list of paths that represents the processor path . 
Returns the list of class names of processors that should be run . 
Returns the output jar artifact that gets generated by archiving the results of the Java compilation and the declared resources . 
Returns the command and arguments for a java compile action . 
Creates an instance . 
Returns the root-part of a given path by trimming off the end specified by a given tail . 
Creates an ArgvFragment containing the common initial command line arguments 
creates an artifact with the specified root-relative path under the specified root . 
Sets the directory where source files generated by annotation processors should be stored . 
Returns true if all affected targets should produce mappings from original to renamed symbol names , regardless of the proguard_generate_mapping attribute . 
Returns true iff Java compilation should use ijars . 
Returns true iff Java header compilation is enabled . 
Returns true if only api-generating java_plugins should be run during header compilation . 
Returns true iff dependency information is generated after compilation . 
Returns the extra warnings enabled for Java compilation . 
Returns the label provided with -- proguard_top , if any . 
Returns all labels provided with -- extra_proguard_specs . 
Returns the raw translation targets . 
Returns true if the we should build translations . 
Returns whether translations were explicitly disabled . 
Returns the label of the default java_toolchain rule 
Returns the -- java_optimization_mode flag setting . 
Returns true if java_test in Bazel should behave in legacy mode that existed before we open-sourced our test runner . 
Returns the label that is associated with this piece of information . 
Returns all constraints sets on the associated target . 
Returns the labels of exported targets and artifacts reached transitively through the `` exports '' attribute . 
Sets the output jdeps file . 
Sets the direct dependency artifacts . 
Sets Java compiler flags . 
Sets the output jar . 
Adds a Java source file to compile . 
Adds Java source files to compile . 
Adds a jar archive of Java sources to compile . 
Sets the compilation classpath entries . 
Sets the compilation bootclasspath entries . 
Sets the compilation extclasspath entries . 
Sets the annotation processors classpath entries . 
Sets the fully-qualified class names of annotation processors to run . 
Sets the label of the target being compiled . 
Sets the path to a temporary directory , e.g. for extracting sourcejar entries to before compilation . 
Sets the Strict Java Deps mode . 
Sets the javabase inputs . 
Sets the javac jar . 
Returns the java launcher implementation for the given target , if any . 
Returns the java launcher artifact for the given target , if any . 
Returns true if the given Label is of the pseudo-cc_binary that tells Bazel a Java target 's JAVABIN is never to be replaced by the contents of -- java_launcher ; only the JDK 's launcher will ever be used . 
Adds the given source jars . 
Adds the given source jars . 
Sets the compiler options . 
Creates the compile actions . 
Returns the class that should be passed to javac in order to run the annotation processor this class represents . 
Returns the class that should be passed to javac in order to run the annotation processor this class represents . 
Returns the artifacts to adds to the runtime classpath for this plugin . 
Returns the class names of API-generating annotation processors . 
Returns the artifacts to adds to the runtime classpath of the API-generating processors . 
Returns the artifacts included on the runtime classpath of this binary . 
Returns the main class of a Java binary . 
Creates the instrumentation metadata artifact for the specified output . 
Creates the action that writes the Java executable stub script . 
Returns the additional options to be passed to javac . 
adds additional targets to be treated as direct dependencies . 
returns the JVM flags to be used in a Java binary . 
Adds extra providers to a Java target . 
gets the launcher artifact for a java binary , creating the necessary actions for it . 
adds extra dependencies for runfiles of a Java binary . 
Gets the original Java source files provided as inputs to this rule . 
Gets the original source jars provided as inputs to this rule . 
Gets the original pre-built jars provided as inputs to this rule . 
Gets the Java resources which were included in this rule 's output . 
Gets the names of the annotation processors which operate on this rule 's sources . 
Gets the classpath for the annotation processors which operate on this rule 's sources . 
Sets the source files included as part of the sources of this rule . 
Sets the source jars included as part of the sources of this rule . 
Sets the pre-built jar files included as part of the sources of this rule . 
Sets the source jars corresponding to the jar files included in this rule . 
Sets the resources included in this rule . 
Sets the names of the annotation processors used by this rule . 
Sets the classpath used by this rule for annotation processing . 
Returns all the source jars in the transitive closure , that can be reached by a chain of JavaSourceJarsProvider instances . 
returns the source jars that are to be built when the target is on the command line . 
adds a source jar that is to be built when the target is on the command line . 
adds source jars to be built when the target is on the command line . 
adds a source jar in the transitive closure , that can be reached by a chain of JavaSourceJarsProvider instances . 
adds source jars in the transitive closure , that can be reached by a chain of JavaSourceJarsProvider instances . 
Sets the bootclasspath to be passed to the Java compiler . 
Returns the artifacts needed on the runtime classpath of this target .  
Returns the classpath artifacts needed in a deploy jar for this target . 
Returns the ijar executable 
Returns a path fragment that determines the path to the installation directory . 
Returns the path to the javac binary . 
Returns the path to the jar binary . 
Returns the path to the java binary . 
Returns a label . 
Adds the output artifacts to the given sets builder . 
Returns an intermediate artifact used to run Proguard . 
Creates an action to run the Proguard whitelister over the given Proguard spec and returns the validated Proguard spec , ready to be exported . 
Sets the class jar containing the generated extension registry . 
Sets the source jar containing the generated extension registry . 
Sets the transitive sets of protos used to produce the generated extension registry . 
Returns javacopts for compiling the Java source files generated by the proto compiler .  
Returns javacopts for compiling the Java source files generated by the proto compiler . 
Returns false if the attributes of the rule are invalid 
Returns true iff ` ruleContext ' should enforce strict-deps . 
Returns a new JavaCompilationArgsProvider whose direct-jars part is the union of both the direct and indirect jars of ` provider ' . 
Creates an Action that packages files into a Jar file . 
Returns the SingleJar deploy jar Artifact . 
Returns the path , relative to the runfiles prefix , of a runtime library symlink for the native library for the specified rule . 
Returns the path of the shared native library . 
Returns the symlinks to the dynamic C++ runtime libraries needed by this library and findable via this library 's RPATH , may be null . 
Creates a watch extension bundle . 
Creates a watch application bundle . 
Returns an empty sequence if the attribute is omitted or not available on the rule type . 
Returns extra linker arguments . 
Returns an instance for every file in a bundle directory . 
Returns the location into which this file should be put in , relative to the bundle root . 
Returns the artifact representing the source for this bundleable file . 
Returns bundle files for each given strings file . 
Returns the artifacts for the bundled files . 
Adds any Xcode settings related to this bundle to the given provider builder . 
Returns an empty sets for any invalid value of the target device families attribute . 
Returns the root file path to which storyboard interfaces are compiled . 
Creates action to merge multiple Info.plist files of a bundle into a single Info.plist . 
Returns a reference to the plmerge executable . 
Returns the location of the ibtoolwrapper tool . 
Returns the location of the momcwrapper . 
Returns the location of the actoolwrapper . 
Sets the name of the bundle 's executable . 
Sets the CPU architecture this bundling was constructed for . 
Sets the minimum OS version for this bundle which will be used when constructing the bundle 's plist . 
Returns any bundles nested in this one . 
Returns an artifact representing a plist containing automatic entries generated by bazel . 
Returns all artifacts that are required as input to the merging of the final plist . 
Returns all zip files whose contents should be merged into this bundle under the main bundle directory . 
Returns all zip files whose contents should be merged into final ipa and outside the main bundle . 
Returns the variable substitutions that should be used when merging the plist info file of this bundle . 
Returns the artifacts that are required to generate this bundle . 
Returns primary bundle ID to use , can be null . 
Returns fallback bundle ID to use when primary is n't sets . 
Returns the iOS CPU architecture this bundle was constructed for . 
Returns the prefix to be added to all generated artifact names , can be null . 
Adds header artifacts that should be directly accessible to dependers , but are n't specified in the hdrs attribute . 
Adds header artifacts that should not be directly accessible to dependers . 
Returns the public headers that are n't included in the hdrs attribute . 
Returns the private headers from the srcs attribute , which may by imported by any source or header in this target , but not by sources or headers of dependers . 
Returns absent if there are no such source files for which to creates an archive library . 
Returns true if any of this target 's srcs are Swift source files . 
Adds the default values available through the rule 's context . 
Adds headers to be made available for dependents . 
Adds headers that can not be compiled individually . 
Adds include paths to be made available for compilation . 
Adds paths for SDK includes . 
Adds compile-time options . 
Adds link-time options . 
Adds clang module maps for direct dependencies of the rule . 
Adds SDK frameworks to link against . 
Adds SDK frameworks to be linked weakly . 
Adds SDK Dylibs to link against . 
Sets the bridging header to be used when compiling Swift sources . 
Sets the package path from which to base the header search paths . 
Returns the headers to be made available for dependents . 
Returns the headers that can not be compiled individually . 
Returns the bridging header to be used when compiling Swift sources . 
Returns the include paths to be made available for compilation . 
Returns the paths for SDK includes . 
Returns the SDK frameworks to link against . 
Returns the SDK frameworks to be linked weakly . 
Returns the SDK Dylibs to link against . 
Returns the compile-time options . 
Returns the link-time options . 
Returns the clang module maps of direct dependencies of this rule . 
Returns the location of the xcrunwrapper tool . 
Returns the location of the libtool tool . 
Returns information about the given rule 's compilation artifacts . 
Creates actions to compile each source file individually , and link all the compiled object files into a single archive library . 
Adds a source file to a command line , honoring the useAbsolutePathForActions flag . 
Returns a provider that collects this target 's instrumented sources as well as those of its dependencies . 
Returns a nested sets of Bazel-built ObjC libraries with all unpruned J2ObjC libraries substituted with pruned ones . 
Sets compilation-related Xcode project information on the given provider builder . 
Returns the name of Swift module for this target . 
Returns the target string for swift compiler . 
Returns a list of clang flags used for all link and compile actions executed through clang . 
Returns a list of framework search path flags for clang/swift actions . 
Returns a list of frameworks for clang/swift actions . 
Returns the suffix to be used by the dSYM bundle output . 
Returns a configured target using the given context as an experimental_objc_library . 
Returns a derived artifact in the bin directory obtained by appending some extension to the main label name ; the result artifact is placed in a unique `` entitlements '' directory . 
Returns the location of this target 's generated entitlements file . 
Returns the artifact corresponding to the pbxproj control file , which specifies the information required to generate the Xcode project file . 
Returns the artifact which is the output of building an entire xcdatamodel -LSB- d -RSB- made of artifacts specified by a single rule . 
Returns the artifact which is the output of running swift-stdlib-tool and copying resulting dylibs . 
Returns a static library archive with dead code/objects removed by J2ObjC dead code removal , given the original unpruned static library containing J2ObjC-translated code . 
Returns the location of this target 's merged but not post-processed or signed IPA . 
Returns artifact name prefixed with an output prefix if specified . 
Sets the iOS version of the simulator to use . 
Sets the xcode version to obtain the iOS simulator from . 
Returns an artifact at given path under `` package / _ frameworks/bundleName . 
Returns the name of the framework . 
Returns a list of substitutions which should be performed to the test runner script . 
Adds additional attribute aspects and attributes to the given AspectDefinition.Builder . 
Returns the translation flags used to invoke the J2ObjC transpiler . 
Returns whether to perform J2ObjC dead code removal . 
Returns whether explicit JRE dependencies are required . 
Returns whether to enable J2ObjC support for Java annotation processing . 
Returns whether to enable the zipping/unzipping implementation of tree artifact creation . 
Adds the given entry classes to this builder .  
Returns a sets of entry classes specified on attribute entry_classes of j2objc_library targets transitively . 
Returns header search paths necessary to compile the J2ObjC-generated code from a single target . 
Returns the ObjC header to Java type mapping files for J2ObjC translation . 
Returns the Java class name to ObjC class name mapping files . 
Returns the mapping files containing file dependency information among the translated ObjC source files . 
Returns the files containing mappings between J2ObjC static library archives and their associated J2ObjC-translated source files . 
Returns the label of the associated target . 
Returns the objc source files generated by J2ObjC . 
Returns the objc header files generated by J2ObjC 
Returns a list of header search paths necessary for compiling the generated J2ObjC sources . 
Returns the type of files from which the ObjC files inside this object are generated . 
Returns the template for lab devices . 
Returns the apple platform type in the current rule context . 
Returns the full list of potential split transitions this split transition provider may produce . 
Returns no actions , exactly the one BuildInfo artifact , and no buildChangelist artifacts . 
Adds all given artifacts as members of static frameworks . 
Adds all given artifacts as members of dynamic frameworks . 
Adds providers for runtime frameworks included in the final app bundle but not linked with at build time . 
adds providers which will be exposed both to the declaring rule and to any dependers on the declaring rule . 
adds providers which will only be used by the declaring rule , and wo n't be propagated to any dependers on the declaring rule . 
Adds header search paths that will only be visible by strict dependents of the provider . 
Adds additional static libraries to be linked into the final ObjC application bundle . 
Sets a linked binary generated by this rule to be propagated to dependers . 
Sets which type of dsym output this rule generated to be propagated to dependers . 
Sets a linkmap file generated by this rule to be propagated to dependers . 
Returns effective compilation options that do not arise from the crosstool . 
Returns the Xcode structured resource directory paths . 
Returns the DotdPruningPlan for this compile 
Creates a new compile action builder with apple environment variables sets that are typically needed by the apple toolchain . 
Sets the source file that is being compiled in this action 
adds an input that can not be pruned 
adds inputs that can not be pruned 
adds inputs that can not be pruned 
Returns whether dSYM generation is enabled . 
Returns the current compilation mode . 
Returns the default sets of clang options for the current compilation mode . 
Returns the default sets of swiftc options for the current compilation mode . 
Returns whether to perform symbol and dead-code strippings on linked binaries . 
Returns true if the linker invocation should contain static library includes before framework and system library includes . 
Returns whether device debug entitlements should be included when signing an application . 
Returns true if all objc_library targets should be configured as if they were experimental_objc_library targets . 
Returns true if objc_binary targets should use the crosstool for compiling and archiving . 
Returns the DotdPruningPlan for compiles in this build . 
Returns the sets of all proto groups that the dependencies of this provider has seen . 
Returns the header artifacts provided by the Protobuf library . 
Returns the header search paths provided by the Protobuf library . 
Returns the sets of all the associated filters to the collected protos . 
Adds a proto group to be propagated . 
Adds the header artifacts provided by the Protobuf library . 
Adds the header search paths provided by the Protobuf library . 
Adds all the proto filters to the sets of dependencies . 
Returns the name of the collection represented by this key in the Skylark provider . 
Returns the type of nested sets keyed in the ObjcProvider by this key . 
Returns the skylark key for the given string , or null if no such key exists or is available to Skylark . 
Returns the list of . 
Returns the list of . 
adds all keys and values from the given provider , but propagate any normally-propagated items only to direct dependers of this ObjcProvider . 
adds elements from providers , but do n't propagate them to any dependers on this ObjcProvider . 
adds element toAdd , and propagate it only to direct dependents of this provider . 
adds elements in toAdd , and propagate them only to direct dependents of this provider . 
adds elements in toAdd with the given key from skylark . 
Adds the given providers from skylark . 
Adds the given providers from skylark , but propagate any normally-propagated items only to direct dependers . 
Returns a value for a skylark attribute given a java ObjcProvider key and value . 
Returns a value for a java ObjcProvider given a key and a corresponding skylark value . 
Returns true if the source file can be instrumented for coverage . 
Creates a new spawn action builder with apple environment variables sets that are typically needed by the apple toolchain . 
Returns apple environment variables that are typically needed by the apple toolchain . 
Creates a new spawn action builder that requires a darwin architecture to run . 
Returns action requirement information for darwin architecture . 
Creates a new spawn action builder that requires a darwin architecture to run and calls bash to execute cmd . 
Creates a control based on the passed bundling 's plists and values . 
Creates a control that merges the given plists into the merged plist . 
Returns whether the generated header files should have be of type pb.h or pbobjc.h . 
Returns whether the includes should include each of the proto generated headers . 
Returns whether to use the protobuf library instead of the PB2 library . 
Returns the list of portable proto filters . 
Returns the list of well known type protos . 
Returns the list of proto files to compile . 
Returns the proto compiler to be used . 
Returns the list of files needed by the proto compiler . 
Returns whether the given proto is a well known proto or not . 
Returns the sets of proto files that were added using proto_library dependencies . 
Returns the list of proto files that were added directly into the deps attributes . 
Adds the generated files to the sets of files to be output when this rule is built . 
Adds the generated files to the sets of files to be output when this rule is built . 
Returns the ObjcProvider for this target . 
Returns the XcodeProvider for this target . 
Returns the identifier of this bundle . 
Returns primary bundle ID to use , can be null . 
Returns fallback bundle ID to use when primary is n't sets . 
Returns the app icon name for this bundle , can be null . 
Returns the launch image name for this bundle , can be null . 
Returns the list of plists to be merged to final bundle . 
Returns the name of the attribute which is used to specifiy the provisioning profile . 
Returns the prefix to be added to all generated artifact names , can be null . 
Returns a map containing entries that should be added to the merged plist . 
Adds bundle - and application-related settings to the given Xcode provider builder . 
Adds any files to the given nested sets builder that should be built if this application is the top level target in a blaze invocation . 
Returns this target 's Xcode build settings . 
Returns a map of input dsym artifacts from the CPU-specific binaries built for this ios_application to the new output dsym artifacts . 
Returns any available CPU specific dSYM plist file . 
Returns a map of input linkmap artifacts from the CPU-specific binaries built for this ios_application to the new output linkmap artifacts . 
Returns the multi-arch binary provided by the label under the `` binary '' attribute of the current rule , or null if there is no such binary available . 
Returns a reference to the plmerge executable . 
Returns the location of the swiftstdlibtoolwrapper . 
Returns the location of the environment_plist . 
Returns a plist containing entitlements that allow the signed IPA to be debugged . 
Returns the default options to use if no split architectures are specified . 
Sets or overwrites flags on the given split options . 
Returns the configuration distinguisher for this transition instance . 
Returns the name of this target 's bundle . 
Adds common xcode settings to the given provider builder . 
Returns an iterable which contains the name of each given framework in the same order . 
Returns the name of the family as it appears in build rules . 
Returns the script which should be run in order to actually run the tests . 
Gets the substitutions for simulator . 
Gets the binary of the testrunner attribute , if there is one . 
Gets the substitutions for lab device . 
Gets the test template for lab devices . 
Adds all files needed to run this test to the passed Runfiles builder . 
Returns any additional providers that need to be exported to the rule context to the passed builder . 
Adds files which must be built in order to run this test to builder . 
Returns the base name of the artifact , with the . 
Adds watch application specific xcode settings - TARGETED_DEVICE_FAMILY is sets to `` 1 , 4 '' for enabling building for simulator . 
Returns the bundle directory format of the watch application relative to its container . 
Returns the name of the directory in the final iOS bundle which should contain the WatchKit support stub . 
Adds common xcode build settings required for watch bundles to the given xcode provider builder . 
Returns the files that should be supplied to Xcodegen when generating a project that includes all of the given xcdatamodel source files . 
Returns every known file in the container . 
Sets the label of the build target which corresponds to this Xcode target . 
Adds user header search paths for this target . 
Adds header search paths for this target . 
Adds non-propagated header search paths for this target . 
Sets the Info.plist for the bundle represented by this provider . 
Adds additional build settings of this target and its companion library target , if it exists . 
Adds additional build settings of this target without adding them to the companion lib target , if it exists . 
Sets the copts to use when compiling the Xcode target . 
Sets the copts derived from compilation mode to use when compiling the Xcode target . 
Sets the product type for the PBXTarget in the . 
Adds to the header files of this target . 
Sets the test host . 
Adds inputs that are passed to Xcodegen when generating the project file . 
Sets the distinguisher that will cause this xcode provider to discard any dependencies from sources that are tagged with a different distinguisher . 
Returns artifacts that are passed to the Xcodegen action when generating a project file that contains all of the given targets . 
Returns artifacts that are additional sources for the Xcodegen action . 
Returns all the target controls that must be added to the xcodegen control . 
Returns the name of the Xcode target that corresponds to a build target with the given name . 
Returns the name of the companion Xcode library target that corresponds to a build target with the given name .  
Returns the name of the xcode target in this provider to be referenced as a dep for dependents . 
Adds xcode project files to the given builder . 
Adds a dummy source file to the Xcode target . 
Adds common xcode settings to the given provider builder . 
Adds common xcode settings to the given provider builder , explicitly specifying architecture to use . 
Adds dependencies to the given provider builder from the given attribute . 
Adds non-propagated dependencies to the given provider builder from the given attribute . 
Adds J2ObjC JRE dependencies to the given provider builder from the given attribute . 
Returns a list of default XCode build settings for Bazel-generated XCode projects . 
Returns true if we will run extra actions for actions that are not run by default . 
Returns blacklisted protos from the given protos . 
Returns whether the given proto file is blacklisted . 
Returns an attribute for the implicit dependency on blacklist proto filegroups . 
Returns the proto sources for this rule and all its dependent protocol buffer rules . 
Returns supportData created inside of ProtoLibrary . 
Returns a mutable List of the source Artifacts . 
Returns true if this target has an . 
Returns the Python version to use . 
Returns the coverage instrumentation specification to be used in Python rules . 
Returns a list of PathFragments for the import paths specified in the imports attribute . 
creates the actual executable artifact . 
Returns the sets of empty __ init __ . 
gets the artifact generated by the 2to3 action . 
creates an action for each Python 2 file to convert to Python 3 
Returns null if the input is not valid . 
Creates an immutable external repository . 
Returns the path to the directory containing the repository 's contents . 
Creates a key from the given repository name . 
Returns a block of data that must be equal for two Rules for them to be considered the same . 
Adds the repository 's directory to the graph and , if it 's a symlink , resolves it to an actual directory . 
Sets up a mapping of environment variables to use . 
Returns the RuleDefinition class for this type of repository . 
Returns the value for an attribute without casting it to any particular type . 
creates a Rule Configured Target from the ruleContext and the ruleImplementation . 
Returns the message of the given exception after removing the stack trace , if present . 
Returns the original ruleContext . 
Adds the runfiles of the given input files to the action builder when they are executable and in HOST configuration . 
Returns the proper UTF-8 representation of a String that was erroneously read using Latin1 . 
Returns collection of baseline coverage artifacts associated with the given target . 
Returns a CoverageReportActionsWrapper . 
Returns a map to indicate special execution requirements , such as hardware platforms , etc. . 
Returns a new instrumentation spec with the given attribute names replacing the ones stored in this object . 
Returns a new instrumentation spec with the given attribute names replacing the ones stored in this object . 
Returns a new instrumentation spec with the given attribute names replacing the ones stored in this object . 
Adds action output of a particular type to metadata files . 
Returns a collection of instrumentation metadata files . 
Creates the test actions and artifacts using the previously sets parameters . 
sets the runfiles and executable to be run as a test . 
sets the explicit shard count . 
Creates a test action and artifacts for the given rule . 
Creates a cached test result . 
Returns environment variables which should be sets on the test action . 
Returns an output stream that does n't write to original until it sees HEADER_DELIMITER by itself on a line . 
Returns the test status artifacts for a specified configured target @param target the configured target . 
Returns the number of times this test should be run . 
Returns the number of shards for this test . 
Returns the timeout of this test . 
Returns the test rule class . 
Returns a list of test status artifacts that represent serialized test status protobuffers produced by testing this target . 
Returns the coverage report generator tool . 
returns if result was loaded from local action cache . 
Gets the test name in a user-friendly format . 
Returns the cache from disk , or null if there is an error . 
Gets the test name in a user-friendly format . 
Returns all environment variables which must be sets in order to run this test . 
Returns true if coverage data should be gathered . 
Returns mutable map of default testing shell environment . 
Returns the number of attempts specific test action can be retried . 
Returns timeout value in seconds that should be used for the given test action . 
Returns a subset of the environment from the current shell . 
Returns a unique name for a temporary directory a test could use . 
Returns a temporary directory for all tests in a workspace to use . 
Returns the runfiles directory associated with the test executable , creating/updating it if necessary and -- build_runfile_links is specified . 
Returns the input runfiles manifest for this test . 
Returns instrumented file manifest or null if code coverage is not collected . 
Returns a map of execution info .  
Creates an exception suitable to be thrown when and a bad end tag appears . 
adds statistics for one dependency of this action . 
Returns the current critical path for the action in nanoseconds . 
gets the child critical path component . 
Returns a human readable representation of the critical path stats with all the details . 
Returns a list of all the component stats for the critical path . 
Returns a summary version of the critical path stats that omits stats that are not useful to the user . 
Returns the known aggregate results for the given target at the current moment . 
Returns all test status artifacts associated with a given target whose runs have yet to finish . 
Returns true iff all runs of the target are accounted for . 
Creates an option parser using the common options classes and the command-specific options classes . 
Returns the event handler to use for this Blaze command . 
Returns the runtime instance shared by the commands that this dispatcher dispatches to . 
Returns the expansion of the specified help topic . 
Returns the extra startup options this module contributes . 
Returns the file system implementation used by Bazel . 
Returns the output service to be used . 
Returns extra options this module contributes to a specific command . 
Returns extra options this module contributes to all commands . 
Returns the action context providers the module contributes to Blaze , if any . 
Returns the action context consumers that pulls in action contexts required by this module , if any . 
Returns the extensions this module contributes to the global namespace of the BUILD language . 
Adds the given command under the given name to the map of commands . 
Returns the package factory . 
Returns the rule class provider . 
Returns a provider for project file objects . 
Returns the Clock-instance used for the entire build . 
Returns the defaults package for the default settings . 
Returns the defaults package for the given options taken from an optionsProvider . 
Creates a BuildOptions class for the given options taken from an optionsProvider . 
Creates and returns a new Blaze RPCServer . 
Creates a new blaze runtime , given the install and output base directories . 
Returns a logger that crashes as soon as it 's written to , since tests should not cause events that would be logged . 
Returns the Blaze directories object for this runtime . 
Returns the working directory of the server . 
Returns the output base directory associated with this Blaze server process . 
Returns the output path associated with this Blaze server process . . 
Returns the execution root directory associated with this Blaze server process . 
Returns path to the cache directory . 
Removes in-memory caches . 
Returns reference to the lazily instantiated persistent action cache instance . 
Creates the execRoot dir under outputBase . 
gets exit code corresponding to throwable . 
Returns the reporter for events . 
returns an unmodifiable view of the blaze client 's environment when it invoked the current command . 
returns an ordered version of the client environment restricted to those variables whitelisted by the command-line options to be inheritable by actions . 
Creates and returns a new target pattern parser . 
Returns the UUID that Blaze uses to identify everything logged from the current build command . 
Returns the working directory of the server . 
Returns if the client passed a valid workspace to be used for the build . 
Returns the output base directory associated with this Blaze server process . 
Returns the execution root directory associated with this Blaze server process . 
Returns the current exit code requested by modules , or null if no exit has been requested . 
Returns the name of the file system we are writing output to . 
Returns time spent in garbage collection since the start of the JVM process . 
gets the time-stamp in ns for the event . 
gets the time-stamp as epoch-time for the event . 
gets the cumulative GC time for the event . 
Returns the project file that was parsed . 
Returns a map that maps option categories to descriptive help strings for categories that are not part of the Bazel core . 
Returns the value of the info key . 
Returns a byte array containing a proto-buffer describing the build language . 
Returns a list of targets from the options residue . 
Returns null if the target is a runnable rule , or an appropriate error message otherwise . 
Returns true if and only if all tests were successful . 
Creates a critical path component for an action . 
returns the critical path stats for the current command execution . 
Returns the original argument or throws . 
Returns the original argument or throws . 
returns if either of them flushed a non-zero number of symbols . 
returns true , if the test summary provides information that is both worth being shown in the scroll-back buffer and new with respect to the alreay shown failure messages . 
sets the maximal number of actions shown in the progress bar . 
returns a summary of the work done in the analysis phase . 
adds a carriage returns , shifting to the next line on the terminal , while guaranteeing that the terminal control codes do n't cause any strange effects . 
Creates a new Event handler that rate limits the events of type PROGRESS to one per event `` rateLimitation '' seconds . 
Adds the given command to the server . 
Adds the given commands to the server . 
Adds the given items as info items to the info command . 
returns the critical path stats for the current command execution . 
Returns true iff the -- check_tests_up_to_date option is enabled . 
Returns true if there was a test with the wrong timeout , but if was not reported . 
sets the number of results cached , locally or remotely . 
Returns the created TestSummary object . 
Creates a new Builder allowing construction of a new TestSummary object . 
Creates a new Builder initialized with a copy of the existing object 's values . 
Returns an immutable view of the warnings associated with this test . 
returns the given time in seconds , to 1 decimal place , i.e. `` 32.1 s '' . 
Sets the workspace status action factory contributed by this module . 
Sets a supplier that provides factories for the Preprocessor to apply . 
adds an `` extra '' SkyFunction for SkyValues . 
adds `` extra '' SkyFunctions for SkyValues . 
Adds an extra precomputed value to Skyframe . 
Returns the value of a POSIX or X/Open system configuration variable . 
Gets the list of directories that the spawn will assume to be writable . 
Returns the inputs of a Spawn as a map of PathFragments relative to an execRoot to paths in the host filesystem where the input files can be found . 
returns true iff the server should continue processing requests . 
Returns 0 on success ; any other value or exception indicates an error . 
Returns the command that failed . 
Returns the result of command execution . 
creates a subprocess according to the specified parameters . 
Returns the exit value of the process . 
Returns the if the process has finished . 
Returns if the process timed out . 
Returns a stream into which data can be written that the process will gets on its stdin . 
Returns a stream from which the stdout of the process can be read . 
Returns a stream from which the stderr of the process can be read . 
Sets the argv , including argv -LSB- 0 -RSB- , that is , the binary to execute . 
Sets the environment passed to the child process . 
Sets the file stdout is appended to . 
Sets the file stderr is appended to . 
Sets the current working directory . 
Returns the `` raw '' result returned by Process.waitFor . 
Returns true iff the process exited with code 0 . 
Returns true iff the process exited normally . 
Returns true if the process timed out . 
Returns the exit code of the subprocess . 
Returns the number of the signal that terminated the process . 
Returns a short string describing the termination status . 
Returns true if the observed process was killed by this observer . 
Returns the associated Label of the SkyKey . 
Returns null if some dependencies were missing and this ActionExecutionFunction needs to restart . 
Returns whether action execution has started . 
Returns the number of enqueued but not yet completed actions . 
Returns whether the key corresponds to a ActionExecutionValue worth reporting status about . 
Returns whether the action is worth reporting status about . 
Returns the artifacts that this artifact expands to , together with their data . 
Returns the data of the artifact for this value , as computed by the action cache checker . 
Returns whether this value needs to contain the data of all its inputs .  
Returns whether the artifact is a mandatory input of its requesting action . 
Returns the configuration to be used for the evaluation of the aspect itself . 
Returns the configuration to be used for the base target .  
Returns the key for a requested configuration . 
creates a collect packages under directory request . 
Returns the options which determine the artifacts to build for the top-level targets . 
Creates an event reporting an absent input artifact . 
Creates a successful completion value . 
Creates a failed completion value . 
creates the build configurations with the given options . 
Returns the host configuration , or null on missing Skyframe deps . 
Returns null if Skyframe has n't evaluated the required dependencies yet . 
Creates a dynamic configuration for each dep that 's custom-fitted specifically for that dep . 
Returns the configuration fragments required by a dep and its transitive closure . Returns null if Skyframe dependencies are n't yet available . 
Returns null if the required aspects are not computed yet . 
Returns null if not all instances are available yet . 
Returns a label of ConfiguredTargetValue . 
Returns whether there is a containing package . 
Returns the live view of the filesystem under the package path entry . 
Returns the sets of files of interest that have been modified between the given two views . 
Returns the directory entries for this directory , in a stable order . 
Returns the type of the ith dirent . 
Sets the type of the ith dirent . 
Returns the directory entries for this directory , in a stable order . 
Returns a SkyKey to find the WORKSPACE file at the given path . 
Creates a FileArtifactValue used as a ` proxy ' input for other ArtifactValues . 
Returns the digest of this value . 
Gets the size of the file . 
Gets last modified time of file . 
Returns the list of output symlinks . 
creates a FileFileStateValue instance corresponding to the given existing file . 
Returns the number of modified output files inside of dirty actions . 
Returns the number of modified output files that occur during the previous build . 
Returns true if this value corresponds to a file or symlink to an existing regular or special file . 
Returns true if this value corresponds to a file or symlink to an existing special file . 
Returns true if the file is a directory or a symlink to an existing directory . 
Returns the real rooted path of the file , taking ancestor symlinks into account . 
Returns a key for building a file value for the given root-relative path . 
Returns the package that `` owns '' this glob . 
Returns the subdirectory of the package under consideration . 
Returns the glob pattern under consideration . 
Returns true if directories should be excluded from results . 
Returns true if the given pattern contains globs . 
Returns glob matches . 
creates a new views using a list of modified absolute paths . 
Sets the value of the object supplied . 
Adds a dependency on the WORKSPACE file , representing it as a special type of package . 
Gets a PackageLookupValue from a different Bazel repository . 
Returns whether the package lookup was successful . 
returns the ordered pair of a consistent snapshot of the state , consisting of a human-readable description of the progress achieved so far and a human readable description of the currently running activities . 
Returns the package .  
Sets the upper bound of the ` stat ' cache . 
Sets the upper bound of the ` readdir ' cache . 
Sets the concurrency level of the caches . 
Returns the configurable attribute conditions necessary to evaluate the given configured target , or null if not all dependencies have yet been SkyFrame-evaluated . 
Returns the value of the variable . 
creates a prepare deps of targets under directory request . 
creates a prepare deps of targets under directory request , specifying a filtering policy for targets . 
Creates result for a dangling symlink . 
Creates results for a file or for a symlink that points to one . 
Creates a new request for a changed root . 
Returns the path of the Fileset-output symlink relative to the output directory . 
Returns the path of the symlink target . 
Returns a copy of this object with the metadata stripped away . 
creates a transitive package lookup request . 
Returns the path to the repository . 
Sets the packages that should be treated as deleted and ignored . 
Removes entries from the given map as they are processed . 
returns the map of mostly recently executed bad actions to their corresponding exception .  
Find conflicts between generated artifacts . 
Returns the ActionExecutionValue with the result , either computed here or already computed on another thread . 
Returns an ActionExecutionContext suitable for executing a particular action . 
Returns true if the exception was reported . 
Returns the progress string to prefix action execution messages with . 
Sets the configurations . 
Sets the host configuration consisting of all fragments that will be used by the top level targets ' transitive closures . 
Returns null if any build-info values are not ready . 
Returns null if Skyframe deps are missing or upon certain errors . 
Returns the host configuration trimmed to the same fragments as the input configuration . 
Removes ConfigurationFragmentValuess and ConfigurationCollectionValues from the cache . 
Sets the default visibility . 
Returns the build-info.txt and build-changelist.txt artifacts . 
Sets the packages that should be treated as deleted and ignored . 
Sets the eventBus to use for posting events . 
Sets the path for action log buffers . 
Returns whether dynamic configurations should trim their fragments to only those needed by targets and their transitive dependencies . 
Returns a dynamic configuration constructed from the given configuration fragments and build options . 
Returns a particular configured target . 
Returns an action graph . 
Returns whether the given package should be consider deleted and thus should be ignored . 
Creates an instance of SkyframeExecutor @param pkgFactory the package factory @param tsgm timestamp granularity monitor @param directories Blaze directories @param binTools the embedded tools @param workspaceStatusActionFactory a factory for creating WorkspaceStatusAction objects @param buildInfoFactories list of BuildInfoFactories @param diffAwarenessFactories @param allowedMissingInputs @param preprocessorFactorySupplier @param extraSkyFunctions @param extraPrecomputedValues @param customDirtinessCheckers @param productName @return an instance of the SkyframeExecutor @throws AbruptExitException if the executor can not be created 
Returns the list of direct Skylark file dependencies of the Skylark extension file corresponding to this object . 
Returns the Label of the Skylark extension file corresponding to this object . 
Creates the Extension to be imported . 
Returns the immediate Skylark file dependency corresponding to this import lookup value . 
Creates a DirtyResult indicating that the external value is the same as the value in the graph . 
Creates a DirtyResult indicating that external value is different from the value in the graph , but this new value is not known . 
creates a target pattern phase value key . 
Sets that there was an error , during evaluation . 
Returns final sets of targets and sets error flag if required . 
Returns target labels from all individual results . 
Returns true if the method found a problem during the lookup process ; the actual error message is reported to the environment . 
creates a target pattern value key . 
creates a target pattern value key . 
returns an Iterable of SkyKeys corresponding to the Aspect-related dependencies of target . 
gets the Aspect-related Label deps for the given edge . 
Returns the error , if any , from loading the target . 
Returns the packages that were transitively successfully loaded . 
Returns the packages that were transitively successfully loaded . 
Returns the targets that were transitively loaded . 
Returns the root causes , if any , of why targets were n't loaded . 
Returns if the associated target can have any provider . 
Returns the first error message , if any , from loading the target and its transitive dependencies . 
Returns a TreeArtifactValue out of the given Artifact-relative path fragments and their corresponding FileArtifactValues . 
Returns the changed files caught by the watch service . 
Returns the package . 
gets the key for the next WorkspaceFileValue or null if this value is the last part of the workspace file . 
Returns the Skylark name of the given class or null , if the SkylarkModule annotation is not present . 
Returns if the value is immutable and thus suitable for being used as a dictionary key . 
Adds to the given environment all variables that are dependent on system state of the host machine . 
adds a new ForClause to the comprehension . 
adds a new ForClause to the comprehension . 
adds byte code which initializes the collection and returns the variable it is saved in . 
adds byte code which adds a value to the collection . 
adds byte code which finalizes and loads the collection on the stack . 
Returns the final result of the comprehension . 
Returns the LHS of the assignment . 
Returns the RHS of the assignment . 
Returns whether this node represents a new scope , e.g. a function call . 
Returns an exception which should be thrown instead of the original one . 
Returns the name of this function . 
Returns the signature of this function . 
Returns true if the BaseFunction is configured . 
gets parameter documentation as a list corresponding to each parameter 
Returns the environment for the scope of this function . 
Returns -LSB- class . -RSB- 
Returns the signature as '' -LSB- className . -RSB- 
Returns the operator kind for this binary operation . 
Returns a StackManipulation that calls the given operator 's implementation method . 
Returns a StackManipulation that calls the given operator 's implementation method . 
Returns a pair with a boolean saying if there were errors and the imports that could be resolved . 
Returns true if any errors were encountered during scanning or parsing . 
Returns a list of loads in this BUILD file . 
Returns a list of loads as strings in this BUILD file . 
Returns a hash code calculated from the string content of the source file of this AST . 
Returns the value associated with the name field in this struct , or null if the field does not exist . 
Returns the fields of this struct . 
Returns a customized error message to print if the name is not a valid struct field of this struct , or returns null to use the default error message . 
gets the label for a certain kind of flow statement . 
Adds the argument loading in the correct for new object construction . 
Adds the argument loading in the correct for new object construction . 
creates a sub scope in which variables can shadow variables from super scopes like this one . 
creates code that initializes all variables corresponding to Skylark variables to null . 
Returns the field of the given name of the struct objValue , or null if no such field exists . 
Returns the label for this frame . 
Gets a binding from the current frame or if not found its parent . 
Adds the variable names of this Frame and its transitive parents to the given sets . 
gets the value bound to a variable in this Extension 
Returns an EventHandler for errors and warnings . 
Returns the FuncallExpression and the BaseFunction for the top-level call being evaluated . 
Sets an EventHandler for errors and warnings . 
Sets the path to the tools repository 
Returns the caller 's label . 
Sets a binding for a special dynamic variable in this Environment . 
Returns a hash code calculated from the hash code of this Environment and the transitive closure of other Environments it loads . 
Returns the error message with location info if exists . 
Returns the error message . 
Returns the location of the evaluation error . 
Returns a boolean that tells whether this exception was due to an incomplete AST 
Returns the appropriate location for this exception . 
Returns the `` real '' cause of this exception . 
Adds a line for the given frame . 
Returns the exception message without the stack trace . 
Returns true when there is at least one non-built-in element . 
Returns the location of the given element or Location.BUILTIN if the element is null . 
Returns the string representation of the given element . 
Adds the given string to the specified Deque . 
Adds the given message to the given output dequeue after all stack trace elements have been added . 
Returns a non-empty message for the given exception . 
Returns true if the type is acceptable to be returned to the Skylark language . 
Returns a transitive superclass or interface implemented by c which is annotated with SkylarkModule . Returns null if no such class or interface exists . 
Returns a pretty name for the datatype of object ` o ' in the Build language . 
Returns a pretty name for the datatype equivalent of class ` c ' in the Build language . 
Returns a pretty name for the datatype equivalent of class ` c ' in the Build language . 
Returns the result of evaluating this build-language expression in the specified environment . 
Returns the inferred type of the result of the Expression . 
Returns the next available index for an automatic positional replacement field @return Next index 
Returns the SkylarkCallable annotation corresponding to this method . 
Returns a map of methods and corresponding SkylarkCallable annotations of the methods of the classObj class reachable from Skylark . 
Returns the number of positional arguments . 
Returns the function expression . 
Returns the object the function called on . 
Returns the number of arguments which are positional ; the remainder are keyword arguments . 
Returns the list of Skylark callable Methods of objClass with the given name and argument number . 
adds one argument to the keyword map , registering a duplicate in case of conflict . 
adds code that compiles the argument expressions . 
creates a function signature 
Returns a String that represents this glob as a BUILD expression . 
Returns the criteria used to creates this list , from which the includes/excludes can be retrieved . 
Returns a String that represents this glob list as a BUILD expression . 
Returns the name of the Identifier . 
Returns the filename from which the lexer 's input came . Returns an empty value if the input came from a string . 
Returns true if there were errors during scanning of this input file or string . 
Returns the character in the input buffer at the given position . 
Returns the string at the current line , minus the new line . 
Returns parts of the source buffer based on offsets @param start the beginning offset for the slice @param end the offset immediately following the slice @return the text at offset start with length end - start 
Returns the path corresponding to the given offset . 
Returns 0 , 0 for an unknown line 
Returns the list of expressions for each element of the tuple . 
Returns the value of this literal . 
Returns the maximum element from this list , as determined by maxOrdering . 
Returns whether the given object has a method with the given name . 
Creates a Mutability . 
creates an error expression 
creates a funcall expression 
creates a comment node 
Returns the content of the input source . 
Returns the path of the input source . 
creates an input source from the given content , and associate path with this source . 
creates an input source from the given content , and associate path with this source . 
gets an informal representation of object x. Currently only differs from repr in the behavior for strings and labels at top-level , that are returned as is rather than quoted . 
gets an official representation of object x. For regular data structures , the value should be parsable back into an equal data structure . 
Returns the sorted entry sets of the given map 
Returns whether the given sequence denotes characters that are not part of the value of an argument . 
sets up a given environment for supported class methods . 
Returns the function of the namespace of the given name or null of it does not exists . 
Returns the function names registered with the namespace . 
Returns an ordered list of the elements in this expression . 
Returns the native type contained by this expression . 
Creates a `` wrapper '' list that consists of a single select . 
Creates a list that concatenates two values , where each value may be either a native type or a select over that type . 
Returns a custom error message for this select when no condition matches , or an empty string if no such message is declared . 
Creates a list of actual arguments that contains the given arguments and all attribute values required from the specified context . 
Returns the import in the form of a path fragment for use by tools . 
Returns the value associated with the given key . 
Returns an ImmutableList object with the current underlying contents of this SkylarkList . 
Returns true if this list is a tuple . 
Creates immutable SkylarkList with given elements . 
Adds all the elements at the end of the MutableList . 
Adds one element at the end of the MutableList . 
Adds all the elements at the end of the MutableList . 
Creates a Tuple from an ImmutableList . 
Creates a Tuple from an Iterable . 
Returns a type safe SkylarkNestedSet . 
Returns a type safe SkylarkNestedSet . 
Returns whether the key is in the object . 
Gets the quote character that was used for this string . 
Returns the pretty name for this token , for use in error messages for the user . 
Returns the default value for this type ; may returns null iff no default is defined for this type . 
Returns null to indicate concatenation is n't supported . 
Returns true if this ValidationEnvironment is top level i.e. has no parent . 
Returns true if the symbol exists in the validation environment . 
Returns the device number of this inode . 
Returns the number of this inode . 
Returns true iff this file is a regular file . 
Returns true iff this file is a directory . 
Returns true iff this file is a symbolic link . 
Returns true iff this file is a character device . 
Returns true iff this file is a block device . 
Returns true iff this file is a FIFO . 
Returns true iff this file is a UNIX-domain socket . 
Returns true iff this file has its `` sets UID '' bit sets . 
Returns true iff this file has its `` sets GID '' bit sets . 
Returns true iff this file has its `` sticky '' bit sets .  
Returns the total size , in bytes , of this file . 
Returns true iff the file identified by ` path ' is a symbolic link . 
Returns true iff the file identified by ` path ' is a directory . 
Returns the MD5 digest of the specified file , following symbolic links . 
Returns the MD5 digest of the specified file , following symbolic links . 
Removes entire directory tree . 
Returns singleton instance of the clock 
Returns the current time in milliseconds . 
Returns the current time in nanoseconds . 
Returns parent id for the given node content . 
Creates new node using specified key suffix . 
Creates new branch node content at the predefined location , splitting prefix from the given node and optionally adding another child node jump entry . 
gets output file name for which dependencies are included in this DependencySet . 
Adds a given collection of dependencies in Path form to this DependencySet instance . 
Adds a given dependency to this DependencySet instance . 
Creates and returns an ExitCode . 
Creates and returns an ExitCode that represents an infrastructure failure . 
Creates and returns an ExitCode that has the same numeric code as another ExitCode . 
adds the given exit code to the registry . 
Returns all registered ExitCodes . 
Returns the human-readable name for this exit code . 
Returns the error 's int value . 
Returns the human-readable name . 
Returns true if the current exit code represents a failure of Blaze infrastructure , vs. a build failure . 
Returns true if the the filename matches . 
gets a list of filename extensions this matcher handles . 
returns true if a file name is matched by the FileType 
returns true if a file referred by path is matched by the FileType 
returns true if a file referred by fragment is matched by the FileType 
Returns the filename of this entity . 
Returns true if the filename can be matched by any FileType in this sets . 
Returns true if this predicate matches nothing . 
Returns the list of possible file extensions for this file type . 
Removes the elements in toRemove from this list . 
Returns the number of groups in this list . 
Returns true if this list contains no elements . 
Removes everything in toRemove from the list of lists , elements . 
adds an element to this list . 
removes all elements of toRemove from this list . 
Returns true if elt is present in the list . 
Returns true if list is empty . 
creates a GroupedListHelper from a collection of elements , all put in the same group . 
sets the color of the foreground or background of the terminal . 
sets the terminal title . 
Returns the underlying OutputStream . 
Returns true if any output was recorded . 
Returns true if output was recorded on stdout . 
Returns true if output was recorded on stderr . 
Returns true if this FileRecordingOutputStream has encountered an error . 
Returns the file this FileRecordingOutputStream is writing to . 
Returns true if the FileOutErr has stored output . 
Returns the output this AbstractFileOutErr has recorded . 
Creates a new OutErr instance from the specified output and error streams . 
Creates a new OutErr instance from the specified stream . 
Returns true if any output was recorded . 
creates a stream that will tag its contributions into the multiplexed stream with the marker ' 1 ' , which means ` stdout ' . 
Returns the installed logger , or null if none is installed . 
adds a value at a specific position to this list . 
adds a value to the end of this list . 
adds all elements from another LongArrayList at the end of this one . 
adds all elements from another LongArrayList at a certain position within or at the end of this one . 
adds all elements from the given array to the end of this array . 
adds certain elements from the given array to the end of this array . 
adds certain elements from the given array at a certain position in this list . 
removes the element at the specified index and shift all elements at higher indices down by one . 
removes the first occurrence of a value and shift all elements at higher indices down by one . 
removes any excess capacity to save space . 
Returns the short hostname or unknown if the host name could not be determined . 
Returns a string representation of the non-hidden specified options ; option values are shell-escaped . 
Returns a string representation of the non-hidden explicitly or implicitly specified options ; option values are shell-escaped . 
Returns a string representation of the non-hidden explicitly or implicitly specified options , filtering out any sensitive options ; option values are shell-escaped . 
Returns a string representation of the non-hidden explicitly or implicitly specified options , filtering out any sensitive options ; option values are shell-escaped . 
Returns the PID of the current process , or -1 if not available . 
Creates a new pair containing the given elements in order . 
Creates the specified file and returns the DataOuputStream suitable for writing entries . 
Gets a named field in KB . 
returns the total physical memory . 
returns the inactive memory . 
returns the active memory . 
returns the slab memory . 
Returns the number of processors available to the Java virtual machine . 
Returns the total physical memory in bytes . 
Returns the operating system architecture . 
Returns the operating system name . 
Returns the operating system version . 
Returns the initial size of heap memory in bytes . 
Returns the initial size of non heap memory in bytes . 
Returns the maximum size of heap memory in bytes . 
Returns the maximum size of non heap memory in bytes . 
Returns a measurement of the current resource usage of the current process . 
Returns a measurement of the current resource usage of the process with the given process id . 
Returns the current total idle time of the processors since system boot . 
Returns the current cpu utilization of the current process with the given id in jiffies . 
Returns the time of the measurement in jiffies . 
Returns the time of the measurement in ms. 
Returns the amount of used heap memory in bytes at the time of measurement . 
Returns the amount of used non heap memory in bytes at the time of measurement . 
Returns the amount of memory in bytes that is committed for the Java virtual machine to use for the heap at the time of measurement . 
Returns the amount of memory in bytes that is committed for the Java virtual machine to use for non heap memory at the time of measurement . 
Returns the system load average for the last minute at the time of measurement . 
Returns the free physical memmory in bytes at the time of measurement . 
Returns the current total cpu idle since system boot in jiffies . 
Returns the current cpu utilization of the current process in jiffies . 
Returns the current cpu utilization of the current process in ms. The returned array contains the following information : The 1st entry is the number of ms that the process has executed in user mode , and the 2nd entry is the number of ms that the process has executed in kernel mode . 
Removes all mappings . 
Creates new mapping for the given string if necessary and returns string index . 
Creates mapping for the given string if necessary . 
Gets a value from the trie . 
Creates a comma-separated list of words as in English . 
Creates a comma-separated list of words as in English with the given last-separator . 
Creates a comma-separated list of words as in English with the given last-separator and quotes . 
Returns the ordinal representation of the number . 
Returns an easy-to-read string approximation of a number of bytes , e.g. `` 21MB '' . 
Returns true if ` source ' contains ` target ' as a sub-array . 
Returns the user name as provided by system property ` user.name ' . 
Returns the originating user for this build from the command-line or the environment . 
Returns the encoding size in bytes of its input value . 
Returns the encoding size in bytes of its input value . 
Returns either normal or profiled FileInputStream . 
Returns either normal or profiled FileOutputStream . 
Creates an instance of Canonicalizer tracking path fragments . 
Returns true iff this file is a directory . 
Returns true iff this file is a symbolic link . 
Returns the total size , in bytes , of this file . 
Returns the unique file node id . 
Creates the root of all paths used by this filesystem . 
Returns an absolute path instance , given an absolute path name , without double slashes , . . 
Returns an absolute path instance , given an absolute path name , without double slashes , . . 
Returns a path representing the root directory of the current file system . 
Returns whether or not the FileSystem supports modifications of files and file entries . 
Returns whether or not the FileSystem supports symbolic links . 
Returns whether or not the FileSystem supports hard links . 
Returns true if file path is case-sensitive on this file system . 
Returns the type of the file system path belongs to . 
Creates a directory with the name of the current path .  
Returns value of the given extended attribute name or null if attribute does not exist or file system does not support extended attributes . 
Returns true if `` path '' denotes an existing symbolic link .  
Returns the canonical path for the given path .  
Returns the status of a file .  
Creates a symbolic link .  
Returns the target of a symbolic link .  
Returns true iff the file represented by the path is executable . 
Sets the file to executable , if the argument is true . 
Sets the file permissions . 
Creates an InputStream accessing the file denoted by the path . 
Creates an OutputStream accessing the file denoted by path . 
Creates an OutputStream accessing the file denoted by path . 
creates a new hard link file at `` linkPath '' for file at `` originalPath '' . 
creates a new hard link file at `` linkPath '' for file at `` originalPath '' . 
Returns a path fragment from a given from-dir to a given to-path . 
Returns a path fragment from a given from-dir to a given to-path . 
Removes the shortest suffix beginning with ' . ' 
Removes the shortest suffix beginning with ' . ' 
Removes the shortest suffix beginning with ' . ' 
returns the current working directory as expressed by the System property ` user.dir ' . 
Returns the current working directory as expressed by the System property ` user.dir ' . 
Creates an empty regular file with the name of the current path , following symbolic links . 
Creates or updates a symbolic link from ` link ' to ` target ' . 
Creates or updates a symbolic link from ` link ' to ` target ' . 
Creates or updates a symbolic link from ` link ' to ` target ' . 
Returns a new collection containing all of the paths below a given root path , for which the given predicate is true . 
Returns the entirety of the specified file and returns it as a byte array . 
Returns the type of the file system path belongs to . 
Returns whether the given path starts with any of the paths in the given list of prefixes . 
Returns whether the given path starts with any of the paths in the given list of prefixes . 
creates a new hard link file at `` linkPath '' for file at `` originalPath '' . 
Returns true if the current object is a directory . 
Returns true if the current object is a symbolic link . 
Returns true if the current object is a regular or special file . 
Returns true if the current object is a special file . 
Returns the size of the entity denoted by the current object . 
Returns the time when the entity denoted by the current object was last modified . 
Returns the time when the entity denoted by the current object was last changed . 
Returns the file node id for the given instance , emulated by the identity hash code . 
Sets the time that denotes when the entity denoted by this object was last modified . 
Sets the last modification and change times to the current time . 
Sets the last change time to the current time . 
Sets whether the current file is readable . 
Returns whether the current file is readable . 
Sets whether the current file is writable . 
Returns whether the current file is writable . 
Sets whether the current file is executable . 
Returns whether the current file is executable . 
Adds a new child to this directory under the name `` name '' . 
Returns null if the child is not found . 
Removes a previously existing child from the directory specified by this object . 
Returns a new IOException for the error . 
Returns a new path constructed by appending the child 's base name to the escaped parent path . 
Creates a new file at the given path and returns its inode . 
Returns the content of the symbolic link . 
Returns the content of the symbolic link , with '' . . '' 
Returns true if this status corresponds to a path that leaves the file system 's scope , false otherwise . 
Returns the status of a file .  
Returns FileSystem that we are using . 
Returns the filesystem instance to which this path belongs . 
Returns the path as a string . 
Returns the path as a string . 
Returns a string of debugging information associated with this path . 
Returns a path representing the parent directory of this path , or null iff this Path represents the root of the filesystem . 
Returns true iff this path denotes an existing file of any kind . 
Returns true iff this path denotes an existing file of any kind . 
Returns a new , immutable collection containing the names of all entities within the directory denoted by the current path . 
Returns a collection of the names and types of all entries within the directory denoted by the current path . 
Returns a new , immutable collection containing the names of all entities within the directory denoted by the current path , for which the given predicate is true . 
Returns the status of a file , following symbolic links . 
Returns the status of a file , optionally following symbolic links . 
Returns true iff this path denotes an existing directory . 
Returns true iff this path denotes an existing directory . 
Returns true iff this path denotes an existing regular or special file . 
Returns true iff this path denotes an existing regular or special file . 
Returns true iff this path denotes an existing symbolic link . 
Returns the last segment of this path , or '' / '' for the root directory . 
Returns the path formed by appending the single non-special segment `` baseName '' to this path . 
Returns an absolute PathFragment representing this path . 
Returns an output stream to the file denoted by the current path , creating it and truncating it if necessary . 
Returns an output stream to the file denoted by the current path , creating it and truncating it if necessary . 
Creates a directory with the name of the current path , not following symbolic links . Returns normally iff the directory exists after the call : true if the directory was created by this call , false if the directory was already in existence . 
Creates a symbolic link with the name of the current path , following symbolic links . 
Creates a symbolic link with the name of the current path , following symbolic links . 
Returns the target of the current path , which must be a symbolic link . 
creates a hard link for the current path . 
Returns the canonical path for this path , by repeatedly replacing symbolic links with their referents . 
Returns the size in bytes of the file denoted by the current path , following symbolic links . 
Returns the size in bytes of the file denoted by the current path . 
Returns normally iff the file does n't exist after the call : true if this call deleted the file , false if the file already did n't exist . 
Returns the last modification time of the file , in milliseconds since the UNIX epoch , of the file denoted by the current path , following symbolic links . 
Returns the last modification time of the file , in milliseconds since the UNIX epoch , of the file denoted by the current path . 
Sets the modification time of the file denoted by the current path . 
Returns value of the given extended attribute name or null if attribute does not exist or file system does not support extended attributes . 
Returns the MD5 digest of the file denoted by the current path , following symbolic links . 
Returns the SHA1 digest of the file denoted by the current path , following symbolic links . 
Returns a java.io.File representation of this path . 
Returns true if the file denoted by the current path , following symbolic links , is writable for the current user . 
Sets the read permissions of the file denoted by the current path , following symbolic links . 
Sets the write permissions of the file denoted by the current path , following symbolic links . 
Returns true iff the file specified by the current path , following symbolic links , is executable by the current user . 
Returns true iff the file specified by the current path , following symbolic links , is readable by the current user . 
Sets the execute permission on the file specified by the current path , following symbolic links . 
Sets the permissions on the file specified by the current path , following symbolic links . 
Sets the delegator used to resolve paths that fall outside this file system 's scope . 
Returns true if the given path is within this file system 's scope , false otherwise . 
Returns a regular expression implementing a matcher for `` pattern '' , in which '' '' and '' ? '' 
Returns a collection of all corresponding Paths . 
Returns the ZipEntry associated with a given path name , if any . 
returns the PID of the current process . 
Creates a process with the specified Windows command line . 
Returns an opaque identifier of stdout stream for the process . 
Returns am opaque identifier of stderr stream for the process . 
returns values : <li> 0 : Process finished </li> <li> 1 : Timeout </li> <li> 2 : Something went wrong </li> 
Returns the exit code of the process . 
Returns the process ID of the given process or -1 if there was an error . 
Returns true if the termination was successful . 
Returns a string representation of the last error caused by any call on the given process or the empty string if the last operation was successful . 
Returns a unique id for this worker . 
Returns whether all known children of this node have signaled that they are done . 
Returns true if the entry is marked dirty , meaning that at least one of its transitive dependencies is marked changed . 
Returns true if the entry is known to require re-evaluation . 
Returns true if the node was n't already evaluating and false otherwise . 
Returns true if the number of children finished is equal to the number of known children . 
Returns reverse deps to signal that have been registered this build . 
Adds a reverse dependency that should be notified when this entry is done . 
removes the value with given name from the graph . 
Returns the value keys whose values have changed , but for which we do n't have the new values . 
Returns the value keys whose values have changed , along with their new values . 
Returns the value keys whose values have changed , along with their old and new values . 
Returns the old value , if any . 
Returns the new value . 
Returns the value keys that have changed between the two Versions . 
Returns the remaining direct deps that have not been checked . 
Returns if the key is enqueued for evaluation . 
Returns the sets of all keys that are enqueued for evaluation , and resets the sets to empty . 
Returns the sets of all dirty keys that have not been enqueued . 
creates an ErrorInfo from a collection of existing errors . 
Returns true iff the error is transitively transient , i.e. if retrying the same computation could lead to a different result . 
gets a successfully evaluated value . 
Returns some error info . 
Adds a value to the result . 
Adds an error to the result . 
Returns true if any events should be stored . 
Returns a read-only live view of the nodes in the graph . 
Returns a read-only live view of the done values in the graph . 
Returns the value stored in this entry . 
Returns an immutable iterable of the direct deps of this node . 
Removes a reverse dependency . 
Removes a reverse dependency . 
Returns a copy of the sets of reverse dependencies . 
Returns the value , even if dirty or changed . Returns null otherwise . 
Returns the error , if any , associated to this node . 
Returns the sets of reverse deps that have been declared so far this build . 
Gets the current version of this entry . 
Returns all deps of a node that has not yet finished evaluating . 
Returns the empty sets if an entry is not dirty . 
removes dep from direct deps . 
adds a group of direct deps to the node . 
Returns true if the node is ready to be evaluated , i.e. , it has been signaled exactly as many times as it has temporary dependencies . 
Returns whether this was the first thread to request a halt . 
Returns true if this depGroup consists of the error transience value and the error transience value is newer than the entry , meaning that the entry must be re-evaluated . 
adds any additional deps that were registered during the run of a builder that finished by creating a node or throwing an error . 
Returns a map of errors that have been constructed during the bubbling up , so that the appropriate error can be returned to the caller , even though that error was not written to the graph . 
returns true if the entry does not need to be re-evaluated this build . 
Gets which operation was delayed for the given object . 
Gets the key whose operation was delayed for the given object . 
Returns a SchedulerException wrapping an expected error , e.g. an error describing an expected build failure when trying to evaluate the given value , that should cause Skyframe to produce useful error information to the user . 
Returns a SchedulerException wrapping an InterruptedException , e.g. if the user interrupts the build , that should cause Skyframe to exit as soon as possible . 
Returns the child of this node that is in the cycle that was just found . 
gets all the errors of child nodes . 
gets all the errors of child nodes . 
Removes direct children of key from toVisit and from the entry itself , and makes the entry ready if necessary .  
Returns whether child should be removed from inProgressParent 's entry 's direct deps . 
Returns a direct dependency .  
Returns a direct dependency .  
Returns whether there was a previous getValue -LSB- s -RSB- -LSB- OrThrow -RSB- that indicated a missing dependency . 
Returns whether we are currently in error bubbling . 
sets this node to be in error . 
Returns <i> some </i> moderately sane representation of the events . 
Returns whether the entry has been built and is finished evaluating . 
Returns true if the entry is marked dirty , meaning that at least one of its transitive dependencies is marked changed . 
Returns true if the entry is marked changed , meaning that it must be re-evaluated even if its dependencies ' values have not changed . 
Gets the stored value . 
Gets the stored value . 
Gets the stored value . 
Gets the stored value . 
Gets the stored value . 
Returns the stored value , if there was one . 
Returns the stored exception , if there was one . 
Returns whether the given key exists as a done node in the graph . 
Returns a map giving the values of the given keys for done keys that were successfully computed . 
Returns a map giving exceptions associated to the given keys for done keys . 
Returns the exception thrown when computing the node with the given key , if any . 
Returns a map giving the direct dependencies of the nodes with the given keys . 
Returns a map giving the reverse dependencies of the nodes with the given keys . 
Returns the raw type of t , if t is either a raw or parameterized type . 
Returns null if the type variable is not defined by type . 
Returns an options object at its default values . 
Returns an instance of options class O. 
Returns the arguments that we did n't parse . 
Returns a string that uniquely identifies the options . 
Returns all the annotated fields for the given class , including inherited ones . 
Returns a description of all the options this parser can digest .  
Returns a description of all the options this parser can digest .  
Returns a string listing the possible flag completion for this command along with the command completion if any .  
Returns a description of the option . 
Returns a list of warnings about problems encountered by previous parse calls . 
Gets the result of parsing the options . 
Returns an immutable copy of the residue , that is , the arguments that have not been parsed . 
Returns if the named option was specified explicitly in a call to parse . 
Returns a mutable copy of the list of all options that were specified either explicitly or implicitly . 
Returns a list of all explicitly specified options , suitable for logging or for displaying back to the user . 
Returns a list of all options , including undocumented ones , and their effective values . 
Returns the formatted result . 
Returns the available completion for the given option field . 
Returns a zipper configuration that can be executed to creates the application bundle . 
Returns an instance that indicates any item assigned to it should not belong to a group . 
Creates a new instance of this group with the group information and children . 
Returns the value by which this item should be grouped . 
Returns an instance whose name is the base name of the path . 
Returns all references known by this object that should be added to the main group . 
Creates a new SDK framework based on the passed name . 
Returns a new build phase containing the added libraries . 
Returns a builder for a new build phase . 
Returns a new or cached instance of a PBXBuildFile for a file that is not part of a variant group . 
Returns a new or cached PBXFileReference for the given file . 
Returns the deepest directory that contains both paths . 
Returns the parent of the given path . 
Returns the PBXResourcesBuildPhase for the given target , if applicable . 
Returns information on all source files in a target . 
Returns the path to the built , statically-linked binary for this target . 
Adds the given dependency to the list of dependencies , the appropriate build phase if applicable , and the appropriate build setting values if applicable , of this target . 
Returns the final header search paths to be placed in a build configuration . 
Returns a unique name for the given imported library path , scoped by both the base name and the parent directories . 
Returns the configured file system implementation . 
Returns the closure of the predecessors of any of the given types , joining the basenames of the artifacts into a space-separated string like `` libfoo.a libbar.a libbaz.a '' . 
Returns the closure of the predecessors of any of the given types . 
Returns the closure of the predecessors of any of the given types , joining the basenames of the artifacts into a space-separated string like `` libfoo.a libbar.a libbaz.a '' . 
Returns the closure of the predecessors of any of the given types . 
Returns the closure over the input files of an action . 
Returns the closure over the input files of an artifact . 
Returns the closure over the input files of an artifact , filtered by the given matcher . 
Returns the closure over the input files of a sets of artifacts . 
Returns the closure over the input files of a sets of artifacts , filtered by the given matcher . 
Returns the first artifact which is an input to `` action '' and has the specified basename . 
Returns true if an artifact that is an input to `` action '' with the specific basename exists . 
Returns the first artifact which is an output of `` action '' and has the specified basename . 
Returns the default value of the given flag . 
Returns a ConfiguredAttributeMapper bound to the given rule with the target configuration . 
Returns a rule definition of the given name , type and custom attribute settings . 
Returns the attribute definition that constrains a rule to the given environments . 
Returns the attribute definition that designates a rule compatible with the given environments . 
Returns the environments supported by a rule . 
Creates fake label in package `` foo '' . 
Returns a rule class provider with standard test setup plus the above rules/configs . 
Returns a new action instance . 
Sets host and target configuration using the specified options , falling back to the default options for unspecified ones , and recreates the build view . 
Returns the corresponding configured target , if it exists . 
Returns the corresponding configured target , if it exists . 
Creates or retrieves the rule class provider used in this test . 
Sets host and target configuration using the specified options , falling back to the default options for unspecified ones , and recreates the build view . 
Creates BuildView using current hostConfig/targetConfig values . 
Creates and returns a rule context that is equivalent to the one that was used to creates the given configured target . 
Creates and returns a rule context to use for Skylark tests that is equivalent to the one that was used to creates the given configured target . 
Returns the SpawnAction that generates an artifact . 
gets a MutableActionGraph for testing purposes . 
Returns the ConfiguredTarget for the specified label , using the given build configuration . 
Returns the ConfiguredTarget for the specified label , using the given build configuration .  
Returns the ConfiguredTarget for the specified label , configured for the `` host '' configuration . 
Returns the ConfiguredTarget for the specified file label , configured for the `` host '' configuration . 
creates and returns a configured scratch rule . 
creates and returns a scratch rule . 
creates and returns a configured scratch rule . 
Gets a derived artifact , creating it if necessary . 
Gets a derived Artifact for testing with path of the form root/owner . 
Returns an attribute value retriever for the given rule for the target configuration . 
Creates a ScratchAttributeWriter for a given test case and label . 
Creates a ScratchAttributeWriter for a given test case and label string . 
Returns the type of the expander under test . 
Returns the previous OutErr . 
sets the default package visibility for this build file . 
Creates a file in the specified directory with the given content . 
Creates a dummy file with ` dummy ' as content in the given package with the given name . 
Returns true if we are testing the native aspect , not the Skylark one . 
Returns the names of the input files that are known to pkg . 
creates a crosstool package . 
Returns the package factory maintained by this apparatus . 
Creates a package locator that finds no packages . 
creates and returns a scratch rule . 
Creates a CcToolchainFeatures from features described in the given toolchain fragment . 
Returns a test crosstool config with the specified tool missing from the tool_path sets . 
Returns the configured deps for a given target , assuming the target uses the target configuration . 
Returns the configured deps for a given target under the given attribute . 
Returns a callback that , when executed , deletes the given path . 
Returns a callback that , when executed , writes the given bytes to the given file path . 
Returns a callback that , when executed , creates the given directory path . 
Returns the paths of all files seen . 
Returns the paths of all files seen . 
Returns the paths of all files seen . 
Returns the paths of all files seen . 
Returns the paths of all files seen . 
Creates a package `` a '' with a genrule `` a '' that depends on a target in a created package `` b '' , and a test rule `` aTest '' . 
Returns the sets of labels that were visited in the loading of the given starting labels . 
Returns the hash code of the rule target defined by the pkg and the target name parameters . 
creates a ParallelBuilder with a DatabaseDependencyChecker using the specified ActionCache . 
Creates and returns a new `` amnesiac '' builder based on the amnesiac cache . 
Creates and returns a new caching builder based on the inMemoryCache . 
Creates a TestAction from ` inputs ' to ` outputs ' , and a new button , such that executing the action causes the button to be pressed . 
Creates a TestAction from ` inputs ' to ` outputs ' , and a new counter , such that executing the action causes the counter to be incremented . 
Returns all configured targets currently in the graph with the given label . 
Returns all configured targets currently in the graph . 
creates a lexer which takes input from the specified string . 
Returns a string containing the names of the tokens and their associated values . 
Returns a string containing just the names of the tokens . 
Returns a string containing just the half-open position intervals of each token . 
Creates a standard Environment for tests in the BUILD language . 
Creates an Environment for Skylark with a mostly empty initial environment . 
Creates a new Environment suitable for the test case . 
Creates a Testable that checks whether the evaluation of the given statement leads to the expected error @param statements @param error @param exactMatch If true , the error message has to be identical to the expected error @return An instance of Testable that runs the error check 
Creates a testable that checks whether the evaluation of the given statement leads to a list that contains exactly the expected objects @param statement The statement to be evaluated @param ordered Determines whether the order of the elements is checked as well @param expected Expected objects @return An instance of Testable that runs the check 
Creates a Testable that looks up the given variable and compares its value to the expected value @param name @param expected @return An instance of Testable that does both lookup and comparison 
Creates an empty file , along with all its parent directories . 
Sets the value of a single valued attribute 
Sets the value of a list type attribute 
Returns the transitive closure of file names need to be generated in order for this rule to build . 
Returns the transitive closure of BuildRuleBuilders need to be generated in order for this rule to build . 
Creates a dummy file with the given extension in the given package and returns a valid Blaze label referring to the file . 
Returns a sets of all classes in the jar that start with the given prefix . 
Gets the class path from the System Property `` java.class.path '' and splits it up into the individual elements . 
Returns the Scratch instance for this test case . 
Creates the file system ; override to inject FS behavior . 
Returns a string consisting of each event in the specified collector , preceded by a newline . 
Returns the FileSystem in use . 
creates a directory in the scratch filesystem , with the given path name . 
creates a scratch file in the scratch filesystem , with the given pathName , consisting of a sets of lines . 
creates a scratch file in the given filesystem , with the given pathName , consisting of a sets of lines . 
Creates a new scratch file , ensuring parents exist . 
Adds all the rule classes supported internally within the build tool to the given builder . 
returns a rule class provider . 
Creates and returns a TestSuite containing the tests from the given classes and/or packages which matched the given tags . 
Returns an instance of the file system to test . 
Removes all stuff from the test filesystem . 
Returns the directory to use as the FileSystem 's working directory . 
Creates parent directories as necessary . 
creates a fresh directory in the system temporary directory , instead of the testing directory provided by the testing framework . 
Creates a SkyFunction suitable for a specific test scenario . 
Adds a single flag to the builder . 
Adds a flag to the builder , along with a string value . 
Adds a flag to the builder , along with a path value . 
Adds a flag to the builder multiple times , once for each value in the given collection . 
Adds the next flag to the builder only if the condition is true . 
Adds the next flag to the builder only if the variant type is the passed-in type . 
Adds the next flag to the builder only if the build tools version is unspecified or is greater than or equal to the given version . 
Adds a single flag to the builder if the condition was true . 
Adds a single flag and associated string value to the builder if the value is non-null and the condition was true . 
Adds a single flag and associated path value to the builder if the value is non-null and the condition was true . 
Adds the values in the collection to the builder , each preceded by the given flag , if the collection was non-empty and the condition was true . 
Creates a merger with a file contents hashing deduplicator . 
Creates a new , naive writer for testing . 
Creates a new writer . 
Adds a string as xml characters to the definition . 
Sets the attribute value . 
Creates a zip archive from all found R.java files . 
Creates a zip file containing the provided android resources and assets . 
Adds 10 lines of source to each syntax error . 
Returns the resources directory that aapt should read . 
Returns a human readable string representation of the key . 
Creates a DataSourceTable and serialize to the given outstream . 
Creates a factory with default package from a directory name split on ' - ' . 
Creates a new FullyQualifiedName with normalized qualifiers . 
Returns a string path representation of the FullyQualifiedName . 
Creates a FullyQualifiedName from this one with a different package . 
Creates a MergeConflict between two DataResources . 
Creates ParsedAndroidData of conflicts , assets overwriting and combining resources . 
Creates an ParsedAndroidData from an UnvalidatedAndroidData . 
Creates an ParsedAndroidData from a list of DependencyAndroidData instances . 
Returns a list of resources that would overwrite other values when defined . 
Returns a list of resources are combined with other values that have the same key .  
Returns a list of assets . 
Creates a new factory with the asset directory that contains assets . 
creates an RClassGenerator given the final binary 's symbol values , and a collection of symbols for the given package . 
removes public definitions of unused resources . 
Returns the list of split flags which did not find a match . 
Returns the list of filename suffixes which did not find a match . 
Returns the mapping from filename suffix to split flag for splits that did match . 
Returns null if there are no formats . 
Returns the offset of the first byte beyond the readable region . 
Gets the number of directory entries in this view . 
Returns a list of directory entries , in the order they occur in the central directory . 
Returns a navigable map of directory entries , by zip entry file offset . 
Returns a navigable map of directory entries , by entry filename . 
Creates a new directory entry for output . 
Returns whether this data descriptor has the optional signature . 
Returns the size of this data descriptor . 
Returns the filename of this entry . 
Returns the extra data of this entry . 
returns the comment of this entry . 
Returns entry data size , based on directory entry information . 
Returns the file comment . 
Returns the total size of the end of directory record , including file comment , if any . 
Returns the filename for this entry . 
Returns the extra data for this entry . 
Returns entry data size , based on directory entry information . 
Gets the name of the resource output file . 
Gets the path of the file listing the content of the initial shard . 
Gets the verbosity mode . 
Sets date to overwrite timestamp of copied entries . sets an explicit date to override . 
Gets the entry modified date . 
sets a predicate to only include files with matching filenames in any of the outputs . 
Returns a predicate that returns true for filenames contained in the given zip file . 
Sets the file offset of the data item covered by this view , @param fileOffset @return this object . 
Gets the fileOffset of this view . 
Returns an array with data copied from the backing byte buffer , at the given offset , relative to the beginning of this view . 
Gets the value of an identified integer field . 
Gets the value of an identified short field . 
Sets the value of an identified integer field . 
Sets the value of an identified short field . 
Gets the file name for this zip input file . 
Returns a memory mapped view of the central directory . 
Returns the zip file entry at the given offset . 
Creates a data descriptor view at a given offset . 
Gets the header of this zip entry . 
Sets the header of this zip entry . 
Gets the data descriptor of this zip entry , if any . 
Sets the data descriptor of this zip entry . 
Gets a byte buffer for accessing the raw content of this zip entry . 
Sets the byte buffer providing access to the raw content of this zip entry . 
Gets the central directory entry for this zip entry , if any . 
Sets the central directory entry for this zip entry . 
Gets the status code for parsing this zip entry . 
Sets the status code for this zip entry . 
Returns the file position for the next write operation . 
Returns if there were any errors generating the WORKSPACE and BUILD files . 
Adds a user-specified repository to the list . 
Returns all maven_jars . 
Adds the artifact to the map of deps , if it is not already there . Returns if the artifact was newly added . 
Returns the containing directory of the given path . 
Returns the result of joining a path component string to the given path . 
Returns the name of the file at the given path , i.e. the last path component . 
Returns the name of the `` platform '' as it appears in the CFBundleSupportedPlatforms plist setting . 
Returns the name of the `` platform '' as it appears in the plist when it appears in all-lowercase . 
Returns the iOS platform for the given iOS architecture . 
Returns the package or directory in which the project is located . 
Returns the value mapped to the given key for a map . 
Returns the external file attributes of each entry as a mapping from the entry name to the 32-bit value . 
Returns the entries to place in a zip file as if the zip file mirrors some directory structure . 
Returns true if the node 's value changed , or a store was updated . 
adds a basic block to the worklist . 
Returns true if and only if the value this expression stands for can not be changed by a method call . 
sets the flow rule for information flowing from this block to its then successor . 
sets the flow rule for information flowing from this block to its else successor . 
sets the then branch successor . 
sets the else branch successor . 
sets the node . 
adds an exceptional successor . 
adds a node to the contents of this basic block . 
adds multiple nodes to the contents of this basic block . 
sets the flow rule for information flowing from this block to its successor . 
sets a basic block as the successor of this block . 
returns a new unique label name that can not be confused with a Java source code label . 
returns true if the exception is known to be caught by one of those labels and false if it may propagate still further . 
adds a node to the lookup map if it not already present . 
adds a node in the post-conversion lookup map . 
adds a node in the post-conversion lookup map . 
Returns true if the argument type is a numeric primitive or a boxed numeric primitive and false otherwise . 
returns whether a conversion from the type of the node to varType requires narrowing . 
gets a list of all successor Blocks for cur @return a Deque of successor Blocks 
sets the basic block this node belongs to . 
adds a boolean value to a given hash . 
adds a char value to a given hash . 
adds an int value to a given hash . 
adds a long value to a given hash . 
adds a float value to a given hash . 
adds a double value to a given hash . 
adds an object to a given hash . 
Returns a result that can be queried . 
Returns the actual annotation mirror used to annotate this type , whose name equals the passed annotationName if one exists , null otherwise . 
Returns true iff both annotations are of the same type and have the same annotation values . 
Returns true if the given annotation has a @Inherited meta-annotation . 
Returns the values of an annotation 's attributes , including defaults . 
gets the Name of the class that is referenced by attribute ` name ' . 
gets the Class that is referenced by attribute ` name ' . 
Returns the annotations explicitly written on a constructor result . 
creates a TreePathScanner at the given root . 
Returns the innermost type element enclosing the given element @param elem the enclosed element of a class @return the innermost type element 
Returns the innermost package element enclosing the given element . Returns the element itself if it is a package . 
Returns the `` parent '' package element for the given package element . 
Returns true if the element is a static element : whether it is a static field , static method , or static class @return true if element is static 
Returns true if the element is a final element : a final field , final method , or final class @return true if the element is final 
Returns true if the element is a effectively final element . 
Returns a verbose name that identifies the element . 
Returns true if the element is a constant time reference 
Returns true if the element is declared in ByteCode . 
Returns true if the element is declared in ByteCode . 
Returns the field of the class 
returns all fields declared in the given type or any superclass/interface . 
returns all methods declared in the given type or any superclass/interface . 
Returns whether a TypeVariable represents a captured type . 
Returns whether a TypeMirror represents a class type . 
sets the declaration tree for the variable . 
gets the declaration tree for the variable . 
Returns the valueOf method of a boxed type such as Short or Float . 
Returns true if the tree is a tree that ` looks like ' either an access of a field or an invocation of a method that are owned by the same accessing instance . 
Gets the first enclosing tree in path , of the specified kind . 
Gets the first enclosing tree in path , with any one of the specified kinds . 
Gets path to the first enclosing class tree , where class is defined by the classTreeKinds method . 
Gets path to the first enclosing tree of the specified kind . 
Gets path to the first enclosing tree with any one of the specified kinds . 
Gets the first enclosing tree in path , of the specified class @param path the path defining the tree node @param treeClass the class of the desired tree @return the enclosing tree of the given type as given by the path 
Returns the tree with the assignment context for the treePath leaf node . 
Gets the element for a class corresponding to a declaration . 
Gets the element for a method corresponding to a declaration . 
Gets the element for a variable corresponding to its declaration . 
Gets the element for the declaration corresponding to this use of an element . 
Returns true if the tree is of a diamond type . 
Returns true if the compound assignment tree is a string concatenation 
Returns true if the node is a constant-time expression . 
Returns the receiver tree of a field access or a method invocation 
Returns true if the given element is an invocation of the method , or of any method that overrides that one . 
Returns true if the given element is , or overrides , method . 
Returns the ExecutableElement for a method declaration of methodName , in class typeName , with params parameters . 
Returns the VariableElement for a field declaration . 
Returns a newly created Attribute.Compound corresponding to an argument AnnotationMirror . 
Returns a newly created Attribute.TypeCompound corresponding to an argument AnnotationMirror . 
Returns a newly created Attribute corresponding to an argument AnnotationValue . 
Gets the fully qualified name for a provided type . 
Returns true iff the argument is an anonymous type . 
Returns true iff the argument is a primitive type . 
Returns true iff the arguments are both the same primitive types . 
Returns true iff the argument is a primitive numeric type . 
Returns true iff the argument is an integral type . 
Returns true iff the argument is a floating point type . 
Returns the widened numeric type for an arithmetic operation performed on a value of the left type and the right type . 
gets the type parameter for this wildcard from the underlying type 's bound field This field is sometimes null , in that case this method will returns null @return the TypeParameterElement the wildcard is an argument to 
Returns true if the erased type of subtype is a subtype of the erased type of supertype . 
Returns the folder used to store android related files . 
Returns the folder used to store android related files . 
Returns the folder where the users AVDs are stored . 
Returns the appropriate name for the ` android ' command , which is ` android.exe ' for Windows and ` android ' for all other platforms . 
Returns the appropriate name for the ` mksdcard ' command , which is ` mksdcard.exe ' for Windows and ` mkdsdcard ' for all other platforms . 
Returns current platform 's UI name @return one of `` Windows '' , `` Mac OS X '' , `` Linux '' or `` other '' . 
Returns the list of native libraries found in the jar file . 
Returns whether some of those libraries were located in the location that Android expects its native libraries . 
Returns the key and certificate from a given debug store . 
Sets the debug mode . 
Adds a file to the APK at a given path @param file the file to adds @param archivePath the path of the file inside the APK archive . 
Adds the content from a zip file . 
Adds the resources from a jar file . 
Adds the resources from a source folder . 
Adds the native libraries from the top native folder . 
Adds a file to the archive at a given path @param file the file to adds @param archivePath the path of the file inside the APK archive . 
Returns the OS path to the default debug keystore . 
Creates a new store @param osKeyStorePath the location of the store @param storeType an optional keystore type , or null if the default is to be used . 
Creates a new store @param osKeyStorePath the location of the store @param storeType an optional keystore type , or null if the default is to be used . 
Find a list of files in a directory , using a specified path pattern . 
Find a file with the specified name in a given directory . 
gets the stderr/stdout outputs of a process and returns when the process is done . 
returns a sourceTree given a build setting that is typically used as a source tree prefix . 
Returns the path to the shell under which the script is to be executed . 
Sets the path to the shell under which the script is to be executed . 
Sets the contents of the script to execute . 
Gets a logger named after a class ' fully qualified name . 
Gets a named logger @param name the name of the logger @return the named logger 
Returns one of the _ SOMETHING_ALPHABET byte arrays depending on the options specified . 
Returns one of the _ SOMETHING_DECODABET byte arrays depending on the options specified . 
Returns <tt> null </tt> if there was an error . 
Returns <tt> null </tt> if there was an error . 
Returns number of bytes read into array or -1 if end of stream is encountered . 
Returns the object stored at the given index . 
removes the i-th element from the array . 
Returns the array of NSObjects represented by this NSArray . 
Returns the size of the array . 
Returns the last object contained in this array . 
Returns a new array containing only the values stored at the given indices . 
Gets the amount of data stored in this object . 
Gets the Base64 encoded data contained in this NSData object . 
Gets the date . 
Gets the hashmap which stores the keys and values of this dictionary . 
Gets the NSObject stored for the given key . 
Removes a key-value pair from this dictionary . 
Removes all key-value pairs from this dictionary . 
Gets a list of all keys used in this NSDictionary . 
Gets the type of this number 's value . 
Creates a NSArray with the contents of the given array . 
Creates a NSDictionary with the contents of the given map . 
Creates a NSSet with the contents of this sets . 
Creates a NSObject representing the given Java Object . 
Adds an object to the sets . 
Removes an object from the sets . 
Returns all objects contained in the sets . 
Returns one of the objects in the sets , or null if the sets contains no objects . 
Returns an iterator object that lets you iterate over all elements of the sets . 
Gets the underlying data structure in which this NSSets stores its content . 
Gets the number of elements in the sets . 
Returns the XML representantion for this sets . 
Returns the ASCII representation of this sets . 
Returns the ASCII representation of this sets according to the GnuStep format . 
Gets this strings content . 
Sets the contents of this string . 
Gets a DocumentBuilder to parse a XML property list . 
Returns all element nodes that are contained in a list of nodes . 
Returns a node 's text content . 
Returns true iff the Conversion is applicable to all objects . 
Returns true iff the Conversion is applicable to character . 
Returns true iff the Conversion is an integer type . 
Returns true iff the Conversion is a floating-point type . 
Returns true iff the Conversion does not require an argument 
Returns a string representation of the current <tt> Flags </tt> . 
Returns the class of the mismatched argument . 
Creates a new circle for the Badge background . 
sets the items for the BottomBar from XML Resource . 
sets the item for the BottomBar from XML Resource with a default configuration for each tab . 
sets a listener that gets fired when the selected tab changes . 
sets a listener that gets fired when a currently selected tab is clicked . 
sets the default selected to be the tab with the corresponding tab id . 
Sets the default tab for this BottomBar that is shown until the user changes the selection . 
gets the currently selected tab . 
gets the tab at the specified position . 
gets the resource id for the currently selected tab . 
gets the currently selected tab position . 
Find the tabs ' position in the container by id . 
Find a BottomBarTab with the corresponding id . 
sets alpha value used for inactive BottomBarTabs . 
sets alpha value used for active BottomBarTabs . 
sets active color used for selected BottomBarTabs . 
sets custom text apperance for all BottomBarTabs . 
sets a custom typeface for all tab 's titles . 
sets a custom typeface for all tab 's titles . 
sets the unread / new item / whatever count for this Badge . 
gets the currently showing count for this Badge . 
Returns screen width . 
Returns the first duplicate element inside an array , null if there are no duplicates . 
sets the default Calligraphy Config @param calligraphyConfig the config build using the builder . 
sets the default font if you do n't define one else where in your styles . 
adds a custom style to gets looked up . 
gets the Calligraphy Activity Fragment Instance to allow callbacks for when views are created . 
returns the color drawn behind the circle-shaped drawable . 
sets a color to be drawn behind the circle-shaped drawable . 
sets a color to be drawn behind the circle-shaped drawable . 
Returns the size of this annotation writer list . 
Returns <tt> true </tt> if this type of attribute is unknown . 
Returns <tt> true </tt> if this type of attribute is a code attribute . 
Returns the labels corresponding to this attribute . 
Returns the byte array form of this attribute . 
Returns the length of the attribute list that begins with this attribute . 
Returns the size of all the attributes in this attribute list . 
Returns the label corresponding to the given offset . 
Returns the start index of the attribute_info structure of this class . 
Returns the maximum length of the strings contained in the constant pool of the class . 
Returns the bytecode of the class that was build with this class writer . 
Adds a number or string constant to the constant pool of the class being build . 
Adds a number or string constant to the constant pool of the class being build . 
Adds an UTF8 string to the constant pool of the class being build . 
Adds a class reference to the constant pool of the class being build . 
Adds a class reference to the constant pool of the class being build . 
Adds a method type reference to the constant pool of the class being build . 
Adds a method type reference to the constant pool of the class being build . 
Adds a handle to the constant pool of the class being build . 
Adds a handle to the constant pool of the class being build . 
Adds an invokedynamic reference to the constant pool of the class being build . 
Adds an invokedynamic reference to the constant pool of the class being build . 
Adds a field reference to the constant pool of the class being build . 
Adds a field reference to the constant pool of the class being build . 
Adds a method reference to the constant pool of the class being build . 
Adds a method reference to the constant pool of the class being build . 
Adds an integer to the constant pool of the class being build . 
Adds a float to the constant pool of the class being build . 
Adds a long to the constant pool of the class being build . 
Adds a double to the constant pool of the class being build . 
Adds a string to the constant pool of the class being build . 
Adds a name and type to the constant pool of the class being build . 
Adds a name and type to the constant pool of the class being build . 
Returns the index of the common super type of the two given types . 
Returns the common super type of the two given types . 
Returns the constant pool 's hash table item which is equal to the given item . 
Returns the internal names of the given types . 
Returns the index of the given method argument in the frame 's local variables array . 
Returns the type of the given local variable . 
Creates a new local variable of the given type . 
Returns the name of the method described by this object . 
Returns the descriptor of the method described by this object . 
Returns the returns type of the method described by this object . 
Returns the argument types of the method described by this object . 
Gets class field information for step 4 of the algorithm . 
adds the SVUID if class does n't have one 
Returns true if the class already has a SVUID field . 
Returns the SHA-1 message digest of the given value . 
Returns the size of this field . 
Returns the output frame local variable type at the given index . 
Sets the output frame local variable type at the given index . 
Returns the int encoding of the given type . 
Adds a new type to the list of types on which a constructor is invoked in the basic block . 
Returns <tt> true </tt> if the input frame of the given label has been changed by this operation .  
Returns <tt> true </tt> if the type array has been modified by this operation . 
Returns the kind of field or method designated by this handle . 
Returns the internal name of the field or method designed by this handle . 
Returns the name of the field or method designated by this handle . 
Returns the descriptor of the field or method designated by this handle . 
Returns the textual representation of this handle . 
Removes the range between start and end from the given exception handlers . 
Sets this item to an integer item . 
Sets this item to a long item . 
Sets this item to a float item . 
Sets this item to a double item . 
Sets this item to an item that do not hold a primitive value . 
Sets the item to an InvokeDynamic item . 
Sets the item to a BootstrapMethod item . 
Returns the offset corresponding to this label . 
Adds a forward reference to this label . 
Returns the first label of the series to which this label belongs . 
Returns true is this basic block belongs to the given subroutine . 
Returns true if this basic block and the given one belong to a common subroutine . 
Returns a string representation of this label . 
Returns the size of the bytecode of this method . 
Returns the Java type corresponding to the given type descriptor . 
Returns the Java type corresponding to the given internal name . 
Returns the Java type corresponding to the given method descriptor . 
Returns the Java method type corresponding to the given argument and returns types . 
Returns the Java type corresponding to the given class . 
Returns the Java method type corresponding to the given constructor . 
Returns the Java method type corresponding to the given method . 
Returns the Java types corresponding to the argument types of the given method descriptor . 
Returns the Java types corresponding to the argument types of the given method . 
Returns the Java type corresponding to the returns type of the given method descriptor . 
Returns the Java type corresponding to the returns type of the given method . 
Returns the Java type corresponding to the given type descriptor . 
Returns the sort of this Java type . 
Returns the number of dimensions of this array type . 
Returns the type of the elements of this array type . 
Returns the binary name of the class corresponding to this type . 
Returns the internal name of the class corresponding to this object or array type . 
Returns the argument types of methods of this type . 
Returns the returns type of methods of this type . 
Returns the size of the arguments and of the returns value of methods of this type . 
Returns the descriptor corresponding to this Java type . 
Returns the descriptor corresponding to the given argument and returns types . 
Returns the internal name of the given class . 
Returns the descriptor corresponding to the given Java type . 
Returns the descriptor corresponding to the given constructor . 
Returns the descriptor corresponding to the given method . 
Returns the size of values of this type . 
Returns a JVM instruction opcode adapted to this Java type . 
Returns a hash code value for this type . 
Returns a string representation of this type . 
Returns the var associated with qualifiedName . 
Returns an IFn associated with the namespace and name . 
returns the most recent val 
returns either exact count or CHUNK_SIZE +1 
returns exact size of remaining items OR throws ArithmeticException for overflow case 
Returns a new instance of PersistentStructMap using the given parameters . 
returns tail starting at val of matching key if found , else null 
Creates an appropriate javadoc depending on aspects of the type in question . 
returns true if all element types are currently available in this code generation pass . 
Removes the element at the specified position in the elements array , adjusting head and tail as necessary . 
Returns the number of elements in this queue . 
Returns <tt> true </tt> if this queue contains no elements . 
Returns an iterator over the elements in this queue . 
Returns <tt> true </tt> if this queue contains the specified element . 
Removes a single instance of the specified element from this queue . 
Removes all of the elements from this queue . 
Returns a copy of this queue . 
Returns a key for the type provided by , or injected by this key . 
Returns a key for the underlying binding of a Lazy <T> value . 
Returns the start of a key if it is a plain key , and the start of the underlying key if it is an annotated key 
Returns the binding if it exists immediately . 
Returns the binding if it exists immediately . 
Returns a new instance of the module class created using a no-args constructor . 
Returns a full sets of module adapters , including module adapters for included modules . 
returns the underlying value , computing the value if necessary . 
Creates an event poller for this sequence that will use the supplied data provider and gating sequences . 
gets the upper bound of an interval for an index . 
gets the count of observations at a given index . 
adds an observation to the histogram and increment the counter for the interval it matches . 
adds observations from another Histogram into this one . 
gets the minimum observed value . 
gets the maximum observed value . 
gets the interval upper bound for a given factor of the observation population . 
gets the current cursor value . 
sets up event handlers to handle events from the ring buffer . 
sets up custom event processors to handle events from the ring buffer . 
sets up custom event processors to handle events from the ring buffer . 
creates a group of event handlers to be used as a dependency . 
creates a group of event processors to be used as a dependency . 
gets the value of the cursor indicating the published sequence . 
gets the event for a given sequence in the RingBuffer . 
Gets the sequence value for the specified event handlers . 
creates a new event handler group that combines the consumers in this group with <tt> otherHandlerGroup </tt> . 
creates a new event handler group that combines the handlers in this group with <tt> processors </tt> . 
sets up batch handlers to consume events from the ring buffer . 
sets up custom event processors to handle events from the ring buffer . 
sets up a worker pool to handle events from the ring buffer . 
sets up batch handlers to handle events from the ring buffer . 
sets up custom event processors to handle events from the ring buffer . 
sets up a worker pool to handle events from the ring buffer . 
creates a dependency barrier for the processors in this group . 
creates a new event processor that gates on barrierSequences . 
gets the minimum sequence value for the group . 
creates a new multiple producer RingBuffer with the specified wait strategy . 
creates a new single producer RingBuffer with the specified wait strategy . 
gets the event for a given sequence in the RingBuffer . 
Sets the cursor to a specific sequence and returns the preallocated entry that is stored there . 
adds the specified gating sequences to this instance of the Disruptor . 
gets the minimum sequence value from all of the gating sequences added to this ringBuffer . 
removes the specified sequence from this ringBuffer . 
creates a new SequenceBarrier to be used by an EventProcessor to track which messages are available to be read from the ring buffer given a list of sequences to track . 
Creates an event poller for this ring buffer gated on the supplied sequences . 
gets the current cursor value for the ring buffer . 
gets the remaining capacity for this ringBuffer . 
gets the current cursor value that can be read . 
gets the remaining capacity for this sequencer . 
gets the minimum sequence value for the group . 
gets the size of the group . 
Adds a sequence to the sequence group after threads have started to publish to the Disruptor . 
adds the specified gating sequences to this instance of the Disruptor . 
removes the specified sequence from this sequencer . 
creates a new SequenceBarrier to be used by an EventProcessor to track which messages are available to be read from the ring buffer given a list of sequences to track . 
gets the minimum sequence value from all of the gating sequences added to this ringBuffer . 
gets the highest sequence number that can be safely read from the ring buffer . 
gets a handle on the Unsafe instance , used for accessing low-level concurrency and memory constructs . 
Gets the address value for the memory that backs a direct byte buffer . 
gets the long value . 
sets the long value . 
Sets the given realm @param realm a realm @return the current builder 
Sets the given prefix @param prefix a prefix @return the current builder 
returns a factory for the provided parameter . 
Returns the credentials ' username . 
Returns the credentials ' password . 
Returns the number of cached principals . 
Returns a sets of statistics about the cache contents and usage . 
Returns the number of principals for which there are cached role associations . 
Returns a sets of statistics about the cache contents and usage . 
returns a factory for the provided parameter . 
creates a user agent string using the configured user agent if defined , otherwise using a combination of the environment name and this client name @param name the name of this client @return the user agent string to be used by this client 
creates a InstrumentedHttpClientConnectionManager based on the HttpClientConfiguration . 
Adds the given object as a Jersey provider . 
Adds the given class as a Jersey provider . 
Sets the state of the given Jersey property . 
Sets the shutdown grace period . 
Returns a brief message summarizing the error . 
Returns a detailed description of the error . 
Returns the path to the problematic JSON field , if there is one . 
Returns the line number of the source of the problem . 
Returns the column number of the source of the problem . 
Returns a list of suggestions . 
Returns the base for ordering suggestions . 
Returns the sets of constraint violations in the configuration . 
Returns the name of the application . 
Returns the command 's name . 
Returns the command 's description . 
Adds the configuration file argument for the configured command . 
Returns the server-specific section of the configuration file . 
Sets the HTTP-specific section of the configuration file . 
Returns the logging-specific section of the configuration file . 
Sets the logging-specific section of the configuration file . 
Adds the given task to the sets of tasks exposed via the admin interface . 
Returns the bootstrap 's class loader . 
Sets the bootstrap 's class loader . 
Adds the given bundle to the bootstrap . 
Adds the given bundle to the bootstrap . 
Adds the given command to the bootstrap . 
Adds the given command to the bootstrap . 
Returns the application 's commands . 
Returns the application metrics . 
Sets a custom registry for the application metrics . 
Returns the application 's validator factory . 
returns the health check registry 
Returns the application 's name . 
Returns the configuration properties for ORM tools . 
Returns the timeout for awaiting a response from the database during connection health checks . 
Returns the timeout for awaiting a response from the database during connection health checks . 
Returns the SQL query , which is being used for the database connection health check . 
Returns the SQL query , which is being used for the database connection health check . 
Returns the Java class of the database driver . 
Returns the JDBC connection URL . 
Returns the entity class managed by this DAO . 
gets the results of a query . 
Creates a new <b> @UnitOfWork </b> aware proxy of a class with the default constructor . 
Creates a new <b> @UnitOfWork </b> aware proxy of a class with an one-parameter constructor . 
Creates a new <b> @UnitOfWork </b> aware proxy of a class with a complex constructor . 
Returns the media type of the error message entity . 
Returns the underlying value . 
Adds the given object as a Jersey singleton component . 
Adds the given class as a Jersey component . 
Adds array of package names which will be used to scan for components . 
Sets the given Jersey property . 
Gets the given Jersey property . 
Gets the human friendly location of where the violation was raised . 
Gets the method returns value name , if the violation is raised in it 
creates a new connector . 
gets name of the timer that tracks incoming HTTP connections 
adds a servlet instance . 
adds a servlet class . 
adds a filter instance . 
adds a filter class . 
adds one or more servlet event listeners . 
sets protected targets . 
Sets the base resource for this context . 
Sets the base resources for this context . 
Sets the base resources for this context . 
Sets the base resource for this context . 
sets an initialization parameter . 
sets the session handler . 
sets the security handler . 
sets a mime mapping . 
Gets the root j.u.l.Logger and removes all registered handlers then redirects all active j.u.l. to SLF4J <p/> N.B. . 
Returns the Logback pattern with which events will be formatted . 
Sets the Logback pattern with which events will be formatted . 
Returns the hostname of the syslog server . 
Returns the frequency for reporting metrics . 
Returns true if the URL passed to it corresponds to a directory . 
Returns the last modified time for file : / / and jar : / / URLs . 
Returns the full URL of the given request . 
Returns the task 's name , @return the task 's name 
adds a test to make sure the signature of the Task class does not change as the TaskServlet depends on this to perform record metrics on Tasks 
Returns the current active session factory for injecting to DAOs . 
Returns the template name . 
Returns the character sets of the template . 
Adds a framed data in binary format 
Adds a framed data in binary format 
Sets the number of shard copies that must be active before proceeding with the write .  
Sets the indices the search will be executed on . 
Sets the preference to execute the search . 
Sets the minimum score below which docs will be filtered out . 
Sets the boost a specific index will receive when the query is executed against it . 
Adds a docvalue based field to load and returns . 
Adds a script based field to load and returns . 
Adds a sort against the given field name and the sort ordering . 
Adds a generic sort builder . 
sets the sort values that indicates which docs this request should `` search after '' . 
Sets the fields to load and returns as part of the search request . 
Adds an aggregation to the search operation . 
Adds an aggregation to the search operation . 
Adds a new rescorer . 
Adds a new rescorer . 
Sets the source of the request as a SearchSourceBuilder . 
Creates curl output for given request 
Creates curl output for given response 
Returns the request line that generated this response 
Returns the node that returned this response 
Returns the status line of the current response 
Returns all the response headers 
Returns the value of the first header with a specified name of this message . 
Sets the default request headers , which will be sent along with each request . 
Sets the path 's prefix for every request used by the http client . 
Returns the sniffed http hosts 
Sets the interval between consecutive ordinary sniff executions in milliseconds . 
returns the number of elements that are being omitted because they are common with the parent Throwable 's stack trace . 
Gets the stack trace including packaging information . 
returns the FQCN of the Throwable . 
Gets proxies for suppressed exceptions . 
Returns byte size of the underlying FST . 
Returns all completion paths to initialize the search . 
Returns the weight associated with an input string , or null if it does not exist . 
Creates a new request builder given the client provided as argument 
Returns true if all decisions should be included . 
Returns true if information about disk usage and shard sizes should also be returned 
returns the explanation for shard allocation in the cluster 
returns the shard that the explanation is about 
returns true if the explained shard is primary , false otherwise 
returns turn if shard data is still being fetched for the allocation 
returns turn if the shard is assigned to a node 
returns the assigned node id or null if not assigned 
returns the unassigned info for the shard or null if the shard is assigned 
returns the configured delay before the shard can be allocated in milliseconds 
returns the remaining allocation delay for this shard in milliseconds 
returns a map of node to the explanation for that node 
returns the cluster disk info for the cluster or null if none available 
Sets whether the request should wait for there to be no relocating shards before retrieving the cluster health status . sets to true to wait until the number of relocating shards in the cluster is 0 . 
Sets the number of shard copies that must be active across all indices before getting the health status . 
Sets whether the request should wait for there to be no relocating shards before retrieving the cluster health status . sets to true to wait until the number of relocating shards in the cluster is 0 . 
Sets the number of shard copies that must be active before getting the health status . 
Sets to returns all the data . 
Sets to returns all the data . 
Returns an ordered list based on plugins name 
Returns an ordered list based on modules name 
Sets all the request flags . 
Sets all the request flags . 
sets the reason for canceling the task . 
gets the TaskId to look up . 
sets the TaskId to look up . 
sets the TaskId to look up . 
gets the actual result of the fetch . 
Returns the list of tasks by node 
gets the tasks found by this request grouped by parent tasks . 
gets the tasks found by this request . 
Sets the name of the repository to unregister . 
Sets the repository name @param name the repository name 
Sets the list or repositories . 
Sets list of repositories to gets @param repositories list of repositories @return builder 
Adds repositories to the list of repositories to gets @param repositories list of repositories @return builder 
Sets the name of the repository . 
Returns repository type @return repository type 
Sets the repository settings @param settings repository settings @return this request 
Sets the repository settings @param settings repository settings @return this request 
Sets the repository settings . 
Sets the repository settings . 
Returns repository settings @return repository settings 
Sets whether or not the repository should be verified after creation 
Returns true if repository should be verified after creation 
Sets the repository name @param name repository name @return this builder 
Sets the repository type @param type repository type @return this builder 
Sets the repository settings @param settings repository settings @return this builder 
Sets the repository settings @param settings repository settings builder @return this builder 
Sets the repository settings in Json , Yaml or properties format @param source repository settings @return this builder 
Sets the repository settings @param source repository settings @return this builder 
Sets whether or not repository should be verified after creation @param verify true if repository should be verified after registration , false otherwise @return this builder 
Sets the name of the repository to unregister . 
Sets the repository name @param name the repository name 
Adds allocation commands to be applied to the cluster . 
Returns the current dry run flag which allows to run the commands without actually applying them , just to gets back the resulting cluster state back . 
Sets the explain flag , which will collect information about the reroute request without executing the actions . 
Returns the current explain flag 
Returns the current retry failed flag 
sets the allocation commands to execute . 
Returns the allocation commands to execute 
Adds allocation commands to be applied to the cluster . 
Returns the cluster state resulted from the cluster reroute request execution 
Sets the transient settings to be updated . 
Sets the transient settings to be updated . 
Sets the source containing the transient settings to be updated . 
Sets the transient settings to be updated . 
Sets the persistent settings to be updated . 
Sets the persistent settings to be updated . 
Sets the source containing the persistent settings to be updated . 
Sets the persistent settings to be updated . 
Sets the transient settings to be updated . 
Sets the transient settings to be updated . 
Sets the source containing the transient settings to be updated . 
Sets the transient settings to be updated . 
Sets the persistent settings to be updated . 
Sets the persistent settings to be updated . 
Sets the source containing the persistent settings to be updated . 
Sets the persistent settings to be updated . 
Sets the indices the search will be executed on . 
Sets the preference to execute the search . 
Sets the indices the search will be executed on . 
Sets the preference to execute the search . 
Sets the snapshot name @param snapshot snapshot name 
Sets repository name @param repository name @return this request 
Returns repository name @return repository name 
Sets a list of indices that should be included into the snapshot The list of indices supports multi-index syntax . 
Sets a list of indices that should be included into the snapshot The list of indices supports multi-index syntax . 
Returns a list of indices that should be included into the snapshot @return list of indices 
Returns true if indices with unavailable shards should be be partially snapshotted . 
sets to true to allow indices with unavailable shards to be partially snapshotted . 
Returns true if the request should wait for the snapshot completion before returning @return true if the request should wait for completion 
Sets repository-specific snapshot settings .  
Sets repository-specific snapshot settings .  
Sets repository-specific snapshot settings .  
Returns repository-specific snapshot settings @return repository-specific snapshot settings 
sets to true if global state should be stored as part of the snapshot @param includeGlobalState true if global state should be stored @return this request 
Returns true if global state should be stored as part of the snapshot @return true if global state should be stored as part of the snapshot 
Sets the snapshot name @param snapshot snapshot name @return this builder 
Sets the repository name @param repository repository name @return this builder 
Sets a list of indices that should be included into the snapshot The list of indices supports multi-index syntax . 
Sets repository-specific snapshot settings .  
Sets repository-specific snapshot settings .  
Sets repository-specific snapshot settings .  
sets to true if snapshot should include global cluster state @param includeGlobalState true if snapshot should include global cluster state @return this builder 
Returns snapshot information if snapshot was completed by the time this method returned or null otherwise . 
Returns repository name @return repository name 
Returns repository name @return repository name 
Sets snapshot name @return this request 
Sets the repository name @param repository repository name @return this builder 
Sets the snapshot name @param snapshot snapshot name @return this builder 
Sets repository name @param repository repository name @return this request 
Returns repository name @return repository name 
Returns the names of the snapshots . 
Sets the list of snapshots to be returned @return this request 
sets to true to ignore unavailable snapshots @return this request 
Sets the repository name @param repository repository name @return this builder 
Sets list of snapshots to returns @param snapshots list of snapshots @return this builder 
Adds additional snapshots to the list of snapshots to returns @param snapshots additional snapshots @return this builder 
Returns the list of snapshots @return the list of snapshots 
Sets the name of the snapshot . 
Returns the name of the snapshot . 
Sets repository name @param repository repository name @return this request 
Returns repository name @return repository name 
Sets the list of indices that should be restored from snapshot The list of indices supports multi-index syntax . 
Sets the list of indices that should be restored from snapshot The list of indices supports multi-index syntax . 
Returns list of indices that should be restored from snapshot 
Sets rename pattern that should be applied to restored indices . 
Returns rename pattern @return rename pattern 
Returns rename replacement @return rename replacement 
Returns wait for completion setting @return true if the operation will wait for completion 
Returns true if indices with failed to snapshot shards should be partially restored . 
sets to true to allow indices with failed to snapshot shards should be partially restored . 
Sets repository-specific restore settings .  
Sets repository-specific restore settings .  
Returns repository-specific restore settings @return restore settings 
Sets the list of index settings and index settings groups that should n't be restored from snapshot 
Sets the list of index settings and index settings groups that should n't be restored from snapshot 
Returns the list of index settings and index settings groups that should n't be restored from snapshot 
Returns true if global state should be restored from this snapshot @return true if global state should be restored 
Returns true if aliases should be restored from this snapshot @return true if aliases should be restored 
Sets settings that should be added/changed in all restored indices 
Sets settings that should be added/changed in all restored indices 
Sets settings that should be added/changed in all restored indices 
Sets settings that should be added/changed in all restored indices 
Returns settings that should be added/changed in all restored indices 
Sets snapshot name @param snapshot snapshot name @return this builder 
Sets repository name @param repository repository name @return this builder 
Sets the list of indices that should be restored from snapshot The list of indices supports multi-index syntax . 
Sets rename pattern that should be applied to restored indices . 
Sets repository-specific restore settings .  
Sets repository-specific restore settings .  
Sets index settings that should be added or replaced during restore @param settings index settings @return this builder 
Sets index settings that should be added or replaced during restore @param settings index settings @return this builder 
Sets index settings that should be added or replaced during restore @param source index settings @return this builder 
Sets index settings that should be added or replaced during restore @param source index settings @return this builder 
Sets the list of index settings and index settings groups that should n't be restored from snapshot 
Sets the list of index settings and index settings groups that should n't be restored from snapshot 
Returns restore information if snapshot was completed before this method returned , null otherwise @return restore information or null 
Returns code that represents the snapshot state @return code for the state 
Returns node id of the node where snapshot is currently running 
Returns reason for snapshot failure 
Returns the index name 
Sets repository name @param repository repository name @return this request 
Returns repository name @return repository name 
Returns the names of the snapshots . 
Sets the list of snapshots to be returned @return this request 
sets to true to ignore unavailable snapshots , instead of throwing an exception . 
Returns whether the request permits unavailable snapshots to be ignored . 
Sets the repository name @param repository repository name @return this builder 
Sets list of snapshots to returns @param snapshots list of snapshots @return this builder 
Adds additional snapshots to the list of snapshots to returns @param snapshots additional snapshots @return this builder 
sets to true to ignore unavailable snapshots , instead of throwing an exception . 
Returns the list of snapshots @return the list of snapshots 
Returns time when snapshot started 
Returns snapshot running time 
Returns number of files in the snapshot 
Returns number of files in the snapshot that were processed so far 
Returns total size of files in the snapshot 
Returns total size of files in the snapshot that were processed so far 
Returns list of snapshot shards 
Returns list of snapshot indices 
Returns number of files in the snapshot 
returns how many redundant copies of the data the cluster holds - running with no replicas will returns 0 
Returns the alias name 
Returns the filter associated with the alias 
Returns the index routing value associated with the alias 
Returns the search routing value associated with the alias 
Returns the alias actions to be performed 
sets the index this action is operating on . 
sets the alias this action is operating on . 
sets the default routing . 
adds the action to this request and validate it . 
Adds an alias to the index . 
Adds an alias to the index . 
Adds an alias to the index . 
Adds an alias to the index . 
Adds an alias to the index . 
Adds an alias to the index . 
Adds an alias to the index . 
Adds an alias to the index . 
Removes an alias from the index . 
Removes aliases from the index . 
Removes aliases from the index . 
Adds an alias action to the request . 
Sets the analyzer name to use in order to analyze the text . 
Sets the field that its analyzer will be used to analyze the text . 
adds token filter setting that will be used on top of a tokenizer provided . 
adds a name of token filter that will be used on top of a tokenizer provided . 
adds char filter setting that will be used on top of a tokenizer provided . 
adds a name of char filter that will be used before the tokenizer . 
Sets attributes that will include results 
Sets texts to analyze 
Sets the indices to be closed @param indices the indices to be closed @return the request itself 
Sets the indices to be closed @param indices the indices to be closed @return the request itself 
Adds mapping that will be added when the index gets created . 
Adds mapping that will be added when the index gets created . 
Adds mapping that will be added when the index gets created . 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Adds an alias that will be associated with the index when it gets created 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Adds custom metadata to the index to be created . 
Sets the number of shard copies that should be active for index creation to returns . 
Sets the name of the index to be created 
Adds mapping that will be added when the index gets created . 
Adds mapping that will be added when the index gets created . 
Adds mapping that will be added when the index gets created . 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Adds an alias that will be associated with the index when it gets created 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Sets the settings and mappings as a single source . 
Adds custom metadata to the index to be created . 
Sets the settings and mappings as a single source . 
Sets the number of shard copies that should be active for index creation to returns . 
Returns true if the requisite number of shards were started before returning from the index creation operation . 
Returns <tt> true </tt> iff a flush should block if a another flush operation is already running . 
Sets the fields to retrieve . 
returns the retrieved field mapping . 
Returns the mappings of a specific field . 
Returns the mappings as a map . 
Sets the indices this put mapping operation will execute on . 
Sets a concrete index for this put mapping request . 
Returns a concrete index for this mapping or null if no concrete index is defined 
Sets the indices to be opened @param indices the indices to be opened @return the request itself 
Sets the indices to be opened @param indices the indices to be opened @return the request itself 
sets value of the detailed flag . 
sets value of the activeOnly flag . 
Sets the alias to rollover to another index 
Sets the alias to rollover to another index 
Sets if the rollover should not be executed when conditions are met 
Adds condition to check if the index is at least age old 
Adds condition to check if the index has at least numDocs 
Sets rollover index creation request to override index settings when the rolled over index has to be created 
Sets the number of shard copies that should be active for creation of the new rollover index to returns . 
Sets the number of shard copies that should be active for creation of the new rollover index to returns . 
Returns the name of the index that the request alias was pointing to 
Returns the name of the index that the request alias currently points to 
Returns the statuses of all the request conditions 
Returns if the rollover execution was skipped even when conditions were met 
Returns true if the rollover was not simulated and the conditions were met 
Returns true if the creation of the new rollover index and switching of the alias to the newly created index was successful , and returns false otherwise . 
Returns true if the requisite number of shards were started in the newly created rollover index before returning . 
Sets the verbose option . 
Returns true iff the settings update should only adds but not update settings . 
Sets the indices to apply to settings update to 
Sets the settings to be updated 
Sets the settings to be updated 
Returns true iff the settings update should only adds but not update settings . 
Sets the indices the update settings will execute on 
Sets the settings to be updated 
Sets the settings to be updated 
Sets the indices for the shard stores request 
sets statuses to filter shards to gets stores info on .  
sets statuses to filter shards to gets stores info on .  
Sets the indices for the shard stores request 
Returns the shard criteria to gets store information on 
Returns the source index name 
Sets the number of shard copies that should be active for creation of the new shrunken index to returns . 
Sets the number of shard copies that should be active for creation of the new shrunken index to returns . 
Sets all flags to returns all stats . 
Sets specific search group stats to retrieve the stats for . 
Sets specific search group stats to retrieve the stats for . 
Sets all flags to returns all stats . 
Sets specific search group stats to retrieve the stats for . 
Sets all flags to returns all stats . 
sets the index template name to delete . 
Sets the name of the index template to delete . 
Sets the names of the index templates . 
Sets the name of the index template . 
sets to <tt> true </tt> to force only creation , not an update of an index template . 
Adds mapping that will be added when the index gets created . 
Adds mapping that will be added when the index gets created . 
Adds mapping that will be added when the index gets created . 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Adds an alias that will be added when the index gets created . 
Sets the template match expression that will be used to match on indices created . 
Sets the order of this template if more than one template matches . 
Sets the optional version of this template . 
sets to <tt> true </tt> to force only creation , not an update of an index template . 
Adds mapping that will be added when the index template gets created . 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Sets the aliases that will be associated with the index when it gets created 
Adds an alias that will be added when the index template gets created . 
Adds mapping that will be added when the index template gets created . 
Adds mapping that will be added when the index gets created . 
Returns the highest upgrade version of the node that performed metadata upgrade and the the version of the oldest lucene segment for each index that was upgraded . 
Returns the index to version map for indices that should be updated 
Sets the index to version map for indices that should be updated 
Sets the index versions to be updated 
Sets the index versions to be updated 
Returns the array of aliases that the action relates to 
Sets the array of aliases that the action relates to 
Returns true if wildcards expressions among aliases should be resolved , false otherwise 
Creates a backoff policy that will not allow any backoff , i.e. an operation will fail after the first attempt . 
Creates an new constant backoff policy with the provided configuration . 
Creates an new exponential backoff policy with a default configuration of 50 ms initial wait period and 8 retries taking roughly 5.1 seconds in total . 
Creates an new exponential backoff policy with the provided configuration . 
Sets an optional name to identify this bulk processor . 
Sets the number of concurrent requests allowed to be executed . 
Sets when to flush a new bulk request based on the number of actions currently added . 
Sets when to flush a new bulk request based on the size of actions currently added . 
Sets a flush interval flushing any bulk actions pending if the interval passes . 
Sets a custom backoff policy . 
Adds either a delete or an index request . 
Adds a list of requests to be executed . 
adds a request to the current BulkRequest . 
Adds a list of requests to be executed . 
Adds a framed data in binary format 
Adds a framed data in binary format 
Adds a framed data in binary format 
Adds a framed data in binary format 
Sets the number of shard copies that must be active before proceeding with the write .  
Adds a framed data in binary format 
Adds a framed data in binary format 
Sets the number of shard copies that must be active before proceeding with the write .  
Returns the subrequests that a composite request is composed of 
Sets the type of the document to delete . 
Sets the id of the document to delete . 
Sets the parent id of this document . 
Sets the version , which will cause the delete operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the type of the document to delete . 
Sets the id of the document to delete . 
Sets the parent id of this document . 
Sets the version , which will cause the delete operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the type of versioning to use . 
gets the index that this request operates on @return the index 
gets the type that this request operates on @return the type 
gets the id of the document for this request @return the id 
gets the options for this request @return the indices options 
sets the routing for this request @return the Request 
gets the routing for this request @return the Routing 
gets the parent for this request @return the Parent 
Returns the current version of the doc . 
Sets the type to gets a score explanation for . 
Sets the id to gets a score explanation for . 
Sets the routing for sharding . 
Sets the shard preference . 
Sets the query to gets a score explanation for . 
Creates a new response instance . 
Sets the type of the document to fetch . 
Sets the id of the document to fetch . 
Sets the parent id of this document . 
Sets the preference to execute the search . 
Sets the version , which will cause the gets operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the versioning type . 
Sets the type of the document to fetch . 
Sets the id of the document to fetch . 
Sets the parent id of this document . 
Sets the preference to execute the search . 
Sets the version , which will cause the gets operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the versioning type . 
Returns bytes reference , also un compress the source if needed . 
Sets the preference to execute the search . 
Sets the preference to execute the search . 
Sets the preference to execute the search . 
Sets the type of the indexed document . 
Sets the id of the indexed document . 
Sets the parent id of this document . 
Sets the timestamp either as millis since the epoch , or , in the configured date format . 
Sets the ttl value as a time value expression . 
Sets the relative ttl value in milliseconds . 
Sets the ingest pipeline to be executed before indexing the document 
Returns the ingest pipeline to be executed before indexing the document 
Sets the document source to index . 
Sets the content source to index . 
Sets the document to index in bytes form . 
Sets the document to index in bytes form . 
Sets the type of operation to perform . 
Sets the version , which will cause the index operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the versioning type . 
Returns true if this request has been sent to a shard copy more than once . 
Sets the type to index the document to . 
Sets the id to index the document under . 
Sets the parent id of this document . 
Sets the source . 
Sets the document source to index . 
Sets the content source to index . 
Sets the document to index in bytes form . 
Sets the type of operation to perform . 
Sets the version , which will cause the index operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the versioning type . 
Sets the timestamp either as millis since the epoch , or , in the configured date format . 
Sets the ttl value as a time value expression . 
Sets the relative ttl value in milliseconds . 
Sets the ingest pipeline to be executed before indexing the document 
Returns the array of indices that the action relates to 
Returns the indices options used to resolve indices . 
Sets the indices that the action relates to . 
adds an action listener to be invoked when a response has received . 
returns the time when the action started . 
adds a search request to execute . 
adds a search request to execute . 
Returns the amount of search requests specified in this multi search requests are allowed to be ran concurrently . 
Sets how many search requests specified in this multi search requests are allowed to be ran concurrently . 
adds a search request to execute . 
adds a search request to execute . 
Sets how many search requests specified in this multi search requests are allowed to be ran concurrently . 
Returns a score doc array of top N search docs across all shards , followed by top suggest docs for each named completion suggestion across all shards . 
returns the number of top results to be considered across all shards 
Sets the indices the search will be executed on . 
Sets the preference to execute the search . 
Sets the indices the search will be executed on . 
Sets the preference to execute the search . 
Sets the minimum score below which docs will be filtered out . 
Sets the boost a specific index will receive when the query is executed against it . 
Adds a docvalue based field to load and returns . 
Adds a field data based field to load and returns . 
Adds a script based field to load and returns . 
Adds a sort against the given field name and the sort ordering . 
Adds a generic sort builder . 
sets the sort values that indicates which docs this request should `` search after '' . 
Adds an aggregation to the search operation . 
Adds an aggregation to the search operation . 
Adds a new rescorer . 
Adds a new rescorer . 
Sets the source of the request as a SearchSourceBuilder . 
Returns the action filters that have been injected 
gets an ActiveShardCount instance for the given value . 
Returns true iff the given number of active shards is enough to meet the required shard count represented by this instance . 
Returns true iff the given cluster state 's routing table contains enough active shards for the given index to meet the required shard count represented by this instance . 
Returns true iff the active shard count in the shard routing table is enough to meet the required shard count represented by this instance . 
Creates a new response to the underlying request . 
Returns true if the name represents a valid name for one of the indices option false otherwise 
Sets the maximum wait for acknowledgement from other nodes 
Returns whether the response is acknowledged or not @return true if the response is acknowledged , false otherwise 
Sets the master node timeout in case the master has not yet been discovered . 
Sets the master node timeout in case the master has not yet been discovered . 
gets the failed node exceptions . 
gets the <em> successful </em> node responses . 
Returns ** null if OK to proceed , or a string describing the reason to stop 
Sets the number of shard copies that must be active before proceeding with the replication operation . 
Sets the minimum version of the cluster state that is required on the next node before we redirect to another primary .  
returns the primary term active at the time the operation was performed on the primary shard 
Sets the target shard id for the request . 
Sets the number of shard copies that must be active before proceeding with the write .  
sets the current phase of the task . 
gets the current phase of the task . 
Sets the current phase on the task if it is n't null . 
Sets the index . 
Sets the index . 
Sets the list of action masks for the actions that should be returned 
returns the list of action masks for the actions that should be returned 
Returns the id of the task that should be processed . 
Returns the parent task id that tasks should be filtered by 
sets the task to lookup . 
Sets the preference to execute the search . 
adds one to mock not existing term freq 
adds one to mock not existing term freq 
Sets the type of document to gets the term vector for . 
Returns the type of document to gets the term vector for . 
Returns the id of document the term vector is requested for . 
Sets the id of document the term vector is requested for . 
Returns the artificial document from which term vectors are requested for . 
Sets an artificial document from which term vectors are requested for . 
Sets an artificial document from which term vectors are requested for . 
Sets the parent id of this document . 
Sets the preference to execute the search . 
returns the start and stop offsets for each term if they were stored or skip offsets . 
returns the positions for each term if stored or skip . 
returns the payloads for each term or skip . 
returns the term statistics for each term in the shard or skip . 
returns the field statistics for each term in the shard or skip . 
returns only term vectors for special selected fields . Returns for term vectors for all fields if selectedFields == null 
returns only term vectors for special selected fields . Returns the term vectors for all fields if selectedFields == null 
returns the overridden analyzers at each field . 
returns the settings for filtering out terms . 
Sets the settings for filtering out terms . 
Sets the index where the document is located . 
Sets the type of the document . 
Sets the id of the document . 
Sets the artificial document from which to generate term vectors . 
Sets the routing . 
Sets the parent id of this document . 
Sets the preference to execute the search . 
Sets whether to returns the start and stop offsets for each term if they were stored or skip offsets . 
Sets whether to returns the positions for each term if stored or skip . 
Sets whether to returns the payloads for each term or skip . 
Sets whether to returns the term statistics for each term in the shard or skip . 
Sets whether to returns the field statistics for each term in the shard or skip . 
Sets whether to returns only term vectors for special selected fields . Returns the term vectors for all fields if selectedFields == null 
Sets whether term vectors are generated real-time . 
Sets the version , which will cause the gets operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the versioning type . 
Sets the analyzer used at each field when generating term vectors . 
Sets the settings for filtering out terms . 
Sets the type of the indexed document . 
Sets the id of the indexed document . 
adds a script parameter . 
Sets the script parameters to use with the script . 
gets the fields to be returned . 
Sets the number of retries of a version conflict occurs because the document was updated between getting it and updating it . 
Sets the version , which will cause the index operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the versioning type . 
Sets the number of shard copies that must be active before proceeding with the write .  
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified , the doc provided is a field and value pairs . 
Sets the doc to use for updates when a script is not specified . 
Sets the index request to be used if the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the type of the indexed document . 
Sets the id of the indexed document . 
Sets the number of retries of a version conflict occurs because the document was updated between getting it and updating it . 
Sets the version , which will cause the index operation to only be performed if a matching version exists and no changes happened on the doc since then . 
Sets the versioning type . 
Sets the number of shard copies that must be active before proceeding with the write .  
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified . 
Sets the doc to use for updates when a script is not specified , the doc provided is a field and value pairs . 
Sets the index request to be used if the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets the doc source of the update request to be used when the document does not exists . 
Sets whether the specified doc parameter should be used as upsert document . 
Sets whether to perform extra effort to detect noop updates via docAsUpsert . 
Sets whether the script should be run in the case of an insert 
sets the new ttl of the document as a long . 
sets the new ttl of the document as a time value expression . 
Returns true if we successfully loaded native libraries . 
Returns true if we were able to lock the process 's address space . 
Returns a read-only view of all system properties 
Returns non-zero on jar-hell 
Adds a Console Ctrl Handler . 
Sets the minimum and maximum working sets sizes for the specified process . 
Returns true if user is root , false if not , or if we do n't know 
Returns an error message to the user for a broken version 
returns dynamic Permissions to configured paths and bind ports 
Adds access to classpath jars/classes for jar hell scan , etc 
Adds access to all configurable paths . 
Returns path to elasticsearch codebase path 
Sets the verbosity of the terminal . 
Returns a Writer which can be used to write to the terminal directly . 
Gets the document that was indexed from an index with a type and id . 
Gets the document that was indexed from an index with a type and id . 
Gets the document that was indexed from an index with a type and id . 
Returns this clients settings 
Returns a new lightweight Client that applies all given headers to each of the requests issued from it . 
Returns top N hot-threads samples per node . 
Returns top N hot-threads samples per node . 
Returns a request builder to fetch top N hot-threads samples per node . 
gets a task . 
gets a task . 
Returns list of shards the given search would be executed on . 
Returns list of shards the given search would be executed on . 
Returns list of shards the given search would be executed on . 
Returns list of shards the given search would be executed on . 
Creates a new snapshot . 
Creates a new snapshot . 
Creates a new snapshot . 
Returns a list of the pending cluster tasks , that are scheduled to be executed . 
Returns a list of the pending cluster tasks , that are scheduled to be executed . 
Returns a list of the pending cluster tasks , that are scheduled to be executed . 
gets snapshot status . 
gets snapshot status . 
gets snapshot status . 
gets snapshot status . 
Returns a stored ingest pipeline 
Returns a stored ingest pipeline 
Returns a stored ingest pipeline 
gets a script from the cluster state 
gets a script from the cluster state 
gets a script from the cluster state 
gets a script from the cluster state 
Returns the threadpool used to execute requests on this client 
Creates an index using an explicit request allowing to specify the settings of the index . 
Creates an index using an explicit request allowing to specify the settings of the index . 
Creates an index using an explicit request allowing to specify the settings of the index . 
gets the complete mappings of one or more types 
gets the complete mappings of one or more types 
gets the complete mappings of one or more types 
gets the mappings of specific fields 
gets the mappings of specific fields 
gets the mappings of specific fields 
adds mapping definition for a type into one or more indices . 
adds mapping definition for a type into one or more indices . 
adds mapping definition for a type into one or more indices . 
gets specific index aliases that exists in particular indices and / or by name . 
gets specific index aliases that exists in particular indices and / or by name . 
gets specific index aliases that exists in particular indices and / or by name . 
gets index metadata for particular indices . 
gets index metadata for particular indices . 
gets index metadata for particular indices . 
Gets index template . 
Gets an index template . 
Returns a builder for a per index settings gets request . 
creates an index request against a specific index . 
Creates a delete request against a specific index . 
Creates a new bulk request . 
Creates a gets request to gets the JSON source from an index based on a type and id . 
Creates a search request against one or more indices . 
Creates a search scroll request allowing to continue searching a previous search request . 
Creates an indices shard stores info request . 
Creates an indices exists request . 
Creates a creates index request . 
Creates a delete index request . 
Creates a close index request . 
Creates an open index request . 
creates a creates mapping request against one or more indices . 
Creates an index aliases request allowing to adds and removes aliases . 
Creates a refresh indices request . 
Creates a flush indices request . 
Creates a synced flush indices request . 
Creates a force merge request . 
Creates an upgrade request . 
Creates a clean indices cache request . 
Creates a cluster state request . 
Creates a cluster health request . 
Creates a nodes info request against all the nodes . 
Creates a nodes info request against one or more nodes . 
Creates a nodes stats request against one or more nodes . 
Creates a cluster stats request . 
Creates a nodes tasks request against all the nodes . 
Creates a gets task request . 
Creates a nodes tasks request against one or more nodes . 
Gets snapshot repository @param repositories names of repositories @return gets repository request 
Creates new snapshot @param repository repository name @param snapshot snapshot name @return creates snapshot request 
Gets snapshots from repository @param repository repository name @return gets snapshot request 
gets status of snapshots @param repository repository name @return snapshot status request 
Returns the current connected transport nodes that this client will use . 
Adds a transport address that will be used to connect to .  
Adds a list of transport addresses that will be used to connect to .  
Removes a transport address from the list of transport addresses that are used to connect to . 
Returns the acknowledgement timeout 
Returns the timeout for the request to be completed on the master node 
Returns the maximum time interval to wait for acknowledgements 
Sets the acknowledgement timeout 
Returns the maximum time interval to wait for the request to be completed on the master node 
Sets the master node timeout 
Returns whether the requisite number of shard copies started before the completion of the operation . 
Returns the indices the operation needs to be executed on 
Sets the indices the operation needs to be executed on 
Returns <tt> true </tt> if one of the global blocks as its disable state persistence flag sets . 
Returns true iff the routing table has changed for the given index . 
Returns the indices created in this event 
Returns the indices deleted in this event 
Returns true iff the metadata for the cluster has changed between the previous cluster state and the new cluster state . 
Returns true iff the cluster level blocks have changed between cluster states . 
Returns true iff the local node is the mater node of the cluster . 
Returns true iff nodes have been removed from the cluster since the last cluster state . 
Returns true iff nodes have been added from the cluster since the last cluster state . 
Returns a node id to disk usage mapping for the path that has the least available space on the node . 
Returns a node id to disk usage mapping for the path that has the most available space on the node . 
Returns the shard size for the given shard routing or null it that metric is not available . 
Returns the nodes absolute data-path the given shard is allocated on or null if the information is not available . 
Returns the shard size for the given shard routing or defaultValue it that metric is not available . 
adds a listener that will be called every time new information is gathered 
adds the given allocation decider to the given deciders collection , erroring if the class name is already used . 
returns the same instance if no state should be changed . 
returns the same instance if no state should be changed . 
Returns serializable object representing differences between this and previousState 
Returns a map key serializer for String keys 
Returns a map key serializer for Integer keys . 
Returns a map key serializer for Integer keys . 
gets the index on which the operation should act . 
Creates a new AliasMetaData instance with same content as the given one , but with a different alias name 
Returns the unique alias metadata per concrete index . 
gets the current unmodifiable index tombstone list . 
Returns true if the graveyard contains a tombstone for the given index . 
adds a deleted index to the list of tombstones in the cluster state . 
adds a sets of deleted indexes to the list of tombstones in the cluster state . 
adds a list of tombstones to the graveyard . 
gets the number of tombstones that were purged . 
Returns the number of entries that were purged . 
Returns true if either are _ na _ 
Sets the number of shards that should be used for routing . 
Returns number of shards that should be used for routing . 
returns the primary term for the given shard .  
sets the primary term for the given shard .  
Returns true iff the given settings indicate that the index associated with these settings allocates it 's shards on a shared filesystem . 
Returns true iff the given settings indicate that the index associated with these settings uses shadow replicas . 
Adds human readable version and creation date settings . 
Returns the number of shards that should be used for routing . 
Returns the routing factor for this index . 
Returns the source shard ids to shrink into the given shard id . 
Returns the routing factor for and shrunk index with the given number of target shards . 
Returns <tt> null </tt> if no filtering is required . 
Sets the same routing for all indices 
Returns the merged transient and persistent settings . 
Returns all the concrete indices . 
Returns true if this index can be supported by the current version of elasticsearch 
Returns list of currently registered repositories @return list of repositories 
Returns a repository with a given name or null if such repository does n't exist @param name name of repository @return repository metadata 
Returns repository name @return repository name 
Returns repository type @return repository type 
Returns repository settings @return repository settings 
Creates a DiscoveryNode representing the local node . 
Returns a boolean that tells whether this an ingest node or not 
Returns a sets of all the roles that the node fulfills . 
Returns <tt> true </tt> if the local node is the elected master node . 
gets the number of known nodes @return number of nodes 
gets a node by its id @param nodeId id of the wanted node @return wanted node if it exists . 
gets the id of the master node @return id of the master 
gets the id of the local node @return id of the local node 
gets the local node @return local node 
gets the master node @return master node 
Returns the version of the node with the oldest version in the cluster @return the oldest version in the cluster 
Returns the version of the node with the oldest version in the cluster that is not a client node @return the oldest version in the cluster 
Returns the changes comparing this nodes to the provided nodes . 
adds a disco node to the builder . 
gets a node by its id @param nodeId id of the wanted node @return wanted node if it exists . 
Returns list of currently running restore processes @return list of currently running restore processes 
Returns snapshot @return snapshot 
Returns list of shards that being restore and their status @return list of shards 
Returns current restore state @return restore state 
Returns list of indices @return list of indices 
Returns current state @return current state 
Returns node id of the node where shared is getting restored @return node id 
Returns failure reason @return failure reason 
Returns state code @return state code 
Returns state corresponding to state code @param value stat code @return state 
gets the explanation for the node @return explanation for the node 
creates and adds a node explanation to this explanation referencing a shard @param shardId id the of the referenced shard @param nodeExplanation Explanation itself @return AllocationExplanation involving the explanation 
Removes delay markers from unassigned shards based on current time stamp . 
gets the explanation of this result 
Returns the currently configured delta threshold 
Returns the index related weight factor . 
Returns the shard related weight factor . 
Returns an array view on the nodes in the balancer . 
Returns the average of shards per node for the given index 
Returns the global average of shards per node 
Returns a map of node to a float `` weight '' of where the allocator would like to place the shard . 
gets the index name @return name of the index 
gets the shard id @return id of the shard 
gets the id of the node @return id of the node 
gets the name of the command @return name of the command 
gets the index of the shard which allocation should be canceled @return index of the shard which allocation should be canceled 
gets the id of the shard which allocation should be canceled @return id of the shard which allocation should be canceled 
gets the id of the node that manages the shard which allocation should be canceled @return id of the node that manages the shard which allocation should be canceled 
gets the description label for this decision . 
returns the list of all decisions that make up this decision 
Returns the explanation string , fully formatted . 
Returns the size of all shards that are currently being relocated to the node , but may not be finished transferring yet . 
Returns the expected shard size for the given shard or the default value provided if not enough information are available to estimate the shards size . 
Removes allocation ids from the in-sync sets for shard copies for which there is no routing entries in the routing table . 
removes allocation id of this shard from the sets of in-sync shard copies 
adds allocation id of this shard to the sets of in-sync shard copies 
returns the nano time captured at the beginning of the allocation . 
gets routing table of current nodes @return current routing table 
gets current routing nodes @return routing nodes 
gets metadata of routing nodes @return Metadata of routing nodes 
gets discovery nodes in current routing @return discovery nodes 
gets explanations of current routing @return explanation of routing 
Returns observer to use for changes made to the routing nodes 
Returns true iff changes were made to the routing nodes 
creates a routing decision , including the reason if the debug flag is turned on @param decision decision whether to allow/deny allocation @param deciderLabel a human readable label for the AllocationDecider @param reason a format string explanation of the decision @param params format string parameters 
Returns true iff the current allocation run has not processed all of the in-flight or available shard or store fetches . 
Sets a flag that signals that current allocation run has not processed all of the in-flight or available shard or store fetches . 
Returns whether changes were made 
Creates a THROTTLE decision with the given explanation and individual node-level decisions that comprised the final THROTTLE decision . 
Creates a YES decision with the given explanation and individual node-level decisions that comprised the final YES decision , along with the node id to which the shard is assigned and the allocation id for the shard , if available . 
Returns the final decision made by the allocator on whether to assign the unassigned shard . 
Returns the final decision made by the allocator on whether to assign the unassigned shard . 
Returns the status of an unsuccessful allocation attempt . 
Gets the allocation id for the existing shard copy that the allocator is assigning the shard to . 
Creates a new allocation id for initializing allocation . 
Creates a new allocation id for initializing allocation based on an existing id . 
Creates a new allocation id for the target initializing shard that is the result of a relocation . 
Creates a new allocation id for a shard that moves to be relocated , populating the transient holder for relocationId . 
Creates a new allocation id representing a cancelled relocation . 
Creates a new allocation id finalizing a relocation . 
Returns the total number of shards within all groups @return total number of shards 
Returns the total number of shards plus the number of empty groups @return number of shards and empty groups 
returns the number of groups @return number of groups 
Returns the shard instance referenced by this exception @return shard instance referenced by this exception 
returns the index id @return id of the index 
Returns true if all shards are primary and active . 
Returns the shards id @return id of the shard 
Returns the shards id @return id of the shard 
Returns the number of this shards instances . 
Returns the number of this shards instances . 
Returns an iterator over active and initializing shards . 
Returns an iterator over active and initializing shards . 
Returns true if no primaries are active or initializing for this shard 
Returns an iterator only on the primary shard . 
Returns shards based on nodeAttributes given such as node name , node attribute , node IP Supports node specifications in cluster API 
Returns true iff all shards in the routing table are started otherwise false 
returns true for recovery types that indicate that a primary is being allocated for the very first time . 
gets the id of this node @return id of the node 
adds a new shard to this node @param shard Shard to crate on this Node 
Returns all shards that are not in the state UNASSIGNED with the same shard ID as the given shard . 
Returns the active primary shard for the given shard id or null if no primary is found or the primary is not active . 
Returns one active replica shard for the given shard id or null if no active replica is found . 
Returns true iff all replicas are active for the given shard routing . 
Removes relocation source of an initializing non-primary shard . 
Returns the number of routing nodes 
Returns the size of the non-ignored unassigned shards 
Returns the size of the temporarily marked as ignored unassigned shards 
Returns the number of non-ignored unassigned primaries 
Returns the number of temporarily marked as ignored unassigned primaries 
Returns true iff this collection contains one or more non-ignored unassigned shards . 
Returns true iff any unassigned shards are marked as temporarily ignored . 
Creates an iterator over shards interleaving between nodes : The iterator returns the first shard from the first node , then the first shard of the second node , etc. until one shard from each node has been returned . 
returns GroupShardsIterator where each active shard routing has it 's own shard iterator . 
returns GroupShardsIterator where each assigned shard routing has it 's own shard iterator . 
Creates a new unassigned shard . 
Returns true iff the this shard is currently relocating to another node . 
Returns true iff this shard is assigned to a node ie . 
Returns a shard routing representing the target shard . 
Returns true iff this shard is a primary . 
Removes relocation source of a non-primary shard . 
sets the shards state to STARTED . 
sets the unassigned primary shard to non-primary @throws IllegalShardRoutingStateException if shard is already a replica 
returns true if this routing has the same allocation ID as another . 
returns true if the routing is the relocation target of the given routing 
returns true if the routing is the relocation source for the given routing 
returns true if the current routing is identical to the other routing in all but meta fields , i.e. , unassigned info 
Returns recovery source for the given shard . 
returns a new seed . 
returns a shuffled view over the list of shards . 
Returns the next shard , or <tt> null </tt> if none available . 
Returns the number of previously failed allocations of this shard . 
Returns optional details explaining the reasons . 
Returns additional failure exception details if exists . 
gets the status for the last allocation attempt for this shard . 
Returns the number of shards that are unassigned and currently being delayed . 
Returns 0 if delay is negative . Returns -1 if no delayed shard is found . 
Adds an initial block to be sets on the first cluster state created . 
removes an initial block to be sets on the first cluster state created . 
removes an initial block to be sets on the first cluster state created . 
Adds a priority listener for updated cluster states . 
Adds last listener . 
Adds a listener for updated cluster states . 
Removes a listener for updated cluster states . 
adds a listener for on/off local node master events 
removes the given listener for on/off local master events 
Adds a cluster state listener that will timeout after the provided timeout , and is executed after the clusterstate has been successfully applied ie . 
Returns the tasks that are pending . 
Returns the number of currently pending tasks . 
Returns the maximum wait time for tasks in the queue @return A zero time value if the queue is empty , otherwise the time value oldest task waiting in the queue 
Gets the name of the blob . 
Gets the size of the blob in bytes . 
Returns URL for this container @return URL for this container 
Returns base URL @return base URL 
Returns read buffer size @return read buffer size 
Returns false if text is in <tt> false </tt> , <tt> 0 </tt> , <tt> off </tt> , <tt> no </tt> ; else , true 
returns true if the a sequence of chars is one of `` true '' , `` false '' , `` on '' , `` off '' , `` yes '' , `` no '' , `` 0 '' , `` 1 '' @param text sequence to check @param offset offset to start @param length length to check 
Returns true iff the value is neither of the following : <tt> false </tt> , <tt> 0 </tt> , <tt> off </tt> , <tt> no </tt> otherwise false 
Returns true iff the value is either of the following : <tt> false </tt> , <tt> 0 </tt> , <tt> off </tt> , <tt> no </tt> otherwise false 
Returns true iff the value is either of the following : <tt> true </tt> , <tt> 1 </tt> , <tt> on </tt> , <tt> yes </tt> otherwise false 
adds a number of bytes , tripping the circuit breaker if the aggregated estimates are above the limit . 
adds an <b> exact </b> number of bytes , not checking for tripping the circuit breaker .  
adds bytes to the breaker and maybe trip @param bytes number of bytes to adds @param label string label describing the bytes being added @return the number of `` used '' bytes for the circuit breaker 
adds a number of bytes , tripping the circuit breaker if the aggregated estimates are above the limit . 
adds an <b> exact </b> number of bytes , not checking for tripping the circuit breaker . 
Returns the byte at the specified index . 
Returns a BytesRefIterator for this BytesReference . 
Returns a compact array from the given BytesReference . 
gets an entry from the segment @param key the key of the entry to gets from the cache @param now the access time of this entry @return the entry if there was one , otherwise null 
removes an entry from the segment @param key the key of the entry to removes from the cache @return the removed entry if there was one , otherwise null 
Returns the value to which the specified key is mapped , or null if this map contains no mapping for the key . 
returns a copy of the provided map . 
removes the given key from this map . 
Returns a new map with the given number of expected elements . 
Returns a new map with a default initial capacity . 
Returns true if this container has an association to a value for the given key . 
Returns a specialized view of the keys of this associated container . 
Returns a direct iterator over the keys . 
Returns a direct iterator over the keys . 
removes that can be used in the fluent pattern . 
Returns true if this container has an association to a value for the given key . 
Returns a specialized view of the keys of this associated container . 
Returns a direct iterator over the keys . 
Returns a direct iterator over the keys . 
removes that can be used in the fluent pattern . 
Returns the nodes name from the settings or the empty string if not sets . 
Returns <tt> true </tt> if the state is initialized . 
Returns <tt> true </tt> if the state is started . 
Returns <tt> true </tt> if the state is stopped . 
Returns <tt> true </tt> if the state is closed . 
returns the compressed bytes . 
returns the uncompressed bytes . 
sets the center of the circle @param center coordinate of the circles center @return this 
sets the center of the circle @param lon longitude of the center @param lat latitude of the center @return this 
gets the center of the circle 
sets the radius of the circle . 
gets the radius of the circle without unit 
gets the radius unit of the circle 
adds a new coordinate to the collection @param longitude longitude of the coordinate @param latitude latitude of the coordinate @return this 
adds a new coordinate to the collection @param coordinate coordinate of the point @return this 
adds a new coordinate to the collection @param coordinate the coordinate to adds @return this 
adds a new coordinate to the collection @param longitude longitude of the coordinate @param latitude latitude of the coordinate @return this 
adds a shallow copy of the polygon to the multipolygon . 
gets the list of polygons 
adds a new hole to the polygon @param hole linear ring defining the hole @return this 
adds a new hole to the polygon @param hole linear ring defining the hole @param coerce if sets to true , it will try to close the hole by adding starting point as end point @return this 
creates a Multipolygon from a sets of coordinates . 
creates a connected list of a list of coordinates @param points array of point @param offset index of the first point @param length number of points @return Array of edges 
creates a new Shape from this builder . 
gets the shapes type @return type of the shape 
sets the intersection of this line segment to the given position @param position position of the intersection -LSB- 0 . 
adds all geohashes of the cells next to a given geohash to a list . 
adds all geohashes of the cells next to a given geohash to a list . 
returns the latitude value from the string based geohash 
returns the latitude value from the string based geohash 
Returns the minimum between the provided distance ` initialRadius ' and the maximum distance/radius from the point ` center ' before overlapping 
Returns true if latitude is actually a valid latitude value . 
Returns true if longitude is actually a valid longitude value . 
Returns an instance of T , constructed using this constructor , with the supplied arguments . 
Gets the current stage . 
Returns the provider used to obtain instances for the given injection key . 
Returns the provider used to obtain instances for the given injection type . 
Creates a new private child environment for bindings and other configuration .  
Returns the key for this binding . 
Returns the scoped provider guice uses to fulfill requests for this binding . 
Returns a copy of this configuration exception with the specified partial value . 
Returns messages for the errors that caused this exception . 
Returns a value that was only partially computed due to this exception . 
Returns the injection point for this constructor . 
Returns the injected constructor . 
Gets a construction proxy for the given constructor . 
Returns a new complete constructor injector with injection listeners registered . 
Returns messages for the errors that caused this exception . 
Creates an injector for the given sets of modules . 
Creates an injector for the given sets of modules . 
Creates an injector for the given sets of modules , in a given development stage . 
Creates an injector for the given sets of modules , in a given development stage . 
Returns an initializable for an instance that requires no initialization . 
Returns the provider used to obtain instances for the given injection key . 
Returns the provider used to obtain instances for the given type . 
Sets the stage for the created injector . 
Returns the injector being constructed . 
Gets a binding implementation .  
Creates a binding for an injectable type with the given scope . 
Creates a binding for a type annotated with @ProvidedBy . 
Creates a binding for a type annotated with @ImplementedBy . 
Creates and returns the injector shells for the current modules . 
Sets the binding to a copy with the specified annotation on the bound key 
Sets the binding to a copy with the specified annotation on the bound key 
Returns true if the given annotation is retained at runtime . 
Returns the scoping annotation , or null if there is n't one . 
Gets a key for the given type , member and annotations . 
Returns the formatted message for an exception with the specified messages . 
Creates an object to be injected . 
Returns an equivalent type that 's safe for use in a key . 
Returns true if there are no type variables in this type . 
Returns a module which creates bindings for provider methods from the given module . 
Returns a module which creates bindings for provider methods from the given object . 
Returns true if this scope was explicitly applied . 
Returns true if this is the default scope . 
Returns the calling line of code . 
Gets the key type . 
Gets the annotation type . 
Gets the annotation . 
Gets the key of this key 's provider . 
Gets a key for an injection type and an annotation strategy . 
Gets a key for an injection type . 
Gets a key for an injection type and an annotation type . 
Gets a key for an injection type and an annotation . 
Gets a key for an injection type . 
Gets a key for an injection type and an annotation type . 
Gets a key for an injection type and an annotation . 
Gets a key for an injection type . 
Gets a key for an injection type and an annotation type . 
Gets a key for an injection type and an annotation . 
Returns a new key of the specified type with the same annotation as this key . 
Returns a new key of the specified type with the same annotation as this key . 
Returns a new key of the specified type with the same annotation as this key . 
Returns true if this key has annotation attributes . 
Returns this key without annotation attributes , i.e. with only the annotation type . 
Gets the strategy for an annotation . 
Gets the strategy for an annotation type . 
Returns a matcher which matches any input . 
Returns a matcher which matches objects equal to the given object . 
Returns a matcher which matches only the given object . 
Returns a matcher which matches classes in the given package . 
Returns a matcher which matches classes in the given package and its subpackages . 
Returns a matcher which matches methods with matching returns types . 
Returns true if any type listeners are installed . 
Returns a new complete members injector with injection listeners registered . 
Creates a new members injector and attaches both injection listeners and method aspects . 
Returns the injectors for the specified injection points . 
Returns a binding builder used to adds a new entry in the map . 
Returns a binding builder used to adds a new element in the sets . 
Creates bindings and other configurations private to this module . 
Returns the current binder . 
Returns messages for the errors that caused this exception . 
Returns an array of parameter values . 
Gets the constructor this binding injects . 
Returns the converted value . 
Returns the key for the source binding . 
Returns a singleton sets containing only the converted key . 
Returns a new dependency that is not attached to an injection point . 
Returns the dependencies from the given injection points . 
Returns the key to the binding that satisfies this dependency . 
Returns true if null is a legal value for this dependency . 
Returns the injection point to which this dependency belongs , or null if this dependency is n't attached to a particular injection point . 
Returns an arbitrary object containing information about the `` place '' where this element was configured . 
Returns the enclosed environment that holds the original binding . 
Returns the known dependencies for this type . 
Returns the injected constructor , field , or method . 
Returns the dependencies for this injection point . 
Returns true if this injection point shall be skipped if the injector can not resolve bindings for all required dependencies . 
Returns the user-supplied instance . 
Returns the field and method injection points of the instance , injected at injector-creation time only . 
Returns the linked key used to resolve injections . 
Gets the type containing the members to be injected . 
Sets the actual members injector . 
Returns the looked up members injector . 
Gets the error message text . 
Returns the configuration information in this private environment . 
Returns the child injector that hosts these private elements , or null if the elements have n't been used to creates an injector . 
Returns the unique exposed keys for these private elements . 
Returns an arbitrary object containing information about the `` place '' where this key was exposed . 
Returns the user-supplied , unscoped provider . 
Returns the field and method injection points of the provider , injected at injector-creation time only . 
Returns the key used to resolve the provider 's binding . 
Sets the actual provider . 
Returns the looked up provider . 
Returns the provider used to obtain instances for the given injection key . 
Returns the provider used to obtain instances for the given injection type . 
Returns the registered listener . 
Returns the type matcher which chooses which types the listener should be notified of . 
Gets a binding which was specified explicitly in a module , or null . 
Returns the explicit bindings at this level only . 
Returns the matching scope , or null . 
Returns all converters at this level only . 
Returns the shared lock for all injector data . 
Gets type literal from super class 's type parameter . 
Gets the type of this type 's provider . 
Returns an immutable list of the resolved types . 
Returns a builder that creates a module that overlays override modules over the given modules . 
Returns a builder that creates a module that overlays override modules over the given modules . 
Returns the number of characters that were skipped . 
Returns a copy of the input data . 
Returns the underlying char array . 
Returns the current size of the buffer . 
Returns the number of characters that were skipped . 
Returns true iff one of the files exists otherwise false 
Returns an array of all files in the given directory matching . 
Returns an array of all files in the given directory . 
Returns an array of all files in the given directory matching the glob . 
Returns the default FileSystem . 
Returns the current size of the buffer . 
Returns the name of the writeable object 
sets the version of the node on the other side of this stream . 
Sets the output stream to use for writing until this writer is closed . 
sets the level of the logger . 
Returns the shard id this index belongs to . 
Adds the given listener to the provided directory reader . 
Returns the shard id this segment belongs to . 
Returns an iterable that allows to iterate over all files in this segments info 
Returns true if the index eventually exists , false if not . 
returns a Scorer that throws an ElasticsearchIllegalStateException on all operations with the given message . 
Sets the phrase slop for this query . 
Sets the phrase slop for this query . 
adds a single term at the next position in the phrase . 
adds multiple terms at the next position in the phrase . 
Returns the relative positions of terms in this phrase . 
Returns true if o is equal to this . 
Returns a hash code value for this object . 
returns a query that matches no document . 
returns a query that matches all documents but those that match the given query . 
Sets a list of terms to never select from 
Returns an analyzer that will be used to parse source doc with . 
Sets the analyzer to use . 
Returns the frequency below which terms will be ignored in the source doc . 
Sets the frequency below which terms will be ignored in the source doc . 
Returns the frequency at which words will be ignored which do not occur in at least this many docs . 
Sets the frequency at which words will be ignored which do not occur in at least this many docs . 
Returns the maximum frequency in which words may still appear . 
sets the maximum frequency in which words may still appear . 
sets the maximum percentage in which words may still appear . 
Returns whether to boost terms in query based on `` score '' or not . 
Sets whether to boost terms in query based on `` score '' or not . 
Returns the field names that will be used when generating the ` More Like This ' query . 
Sets the field names that will be used when generating the ` More Like This ' query . sets this to null for the field names to be determined at runtime from the IndexReader provided in the constructor . 
Returns the minimum word length below which words will be ignored . sets this to 0 for no minimum word length . 
Sets the minimum word length below which words will be ignored . 
Returns the maximum word length above which words will be ignored . sets this to 0 for no maximum word length . 
Sets the maximum word length above which words will be ignored . 
sets the sets of stopwords . 
gets the current stop words being used . 
Returns the maximum number of query terms that will be included in any generated query . 
Sets the maximum number of query terms that will be included in any generated query . 
returns a query that will returns docs like the passed lucene document ID . 
returns a query that will returns docs like the passed Readers . 
returns a query that will returns docs like the passed Terms . 
returns a query that will returns docs like the passed Fields . 
creates the More like query from a PriorityQueue 
adds to an existing boolean query the More Like This query from this PriorityQueue 
creates a PriorityQueue from a word - > tf map . 
creates a PriorityQueue from a word - > tf map . 
Find words for a more-like-this query former . 
Adds terms and frequencies found in vector into the Map termFreqMap @param termFreqMap a Map of terms and their frequencies @param vector List of terms and their frequencies for a doc/field 
Adds terms and frequencies found in vector into the Map termFreqMap @param termFreqMap a Map of terms and their frequencies @param vector List of terms and their frequencies for a doc/field @param fieldName Optional field name of the terms for skip terms 
Adds term frequencies found by tokenizing text from reader into the Map words @param r a source of text to be tokenized @param termFreqMap a Map of terms and their frequencies @param fieldName Used by analyzer for any special per-field analysis 
Find words for a more-like-this query former .  
gets the sets of core cache keys associated with the given index . 
returns the number of tracked segments . 
returns null if id is not found . 
Creates a new EWMA which is equivalent to the UNIX one minute load average and which expects to be ticked every 5 seconds . 
Creates a new EWMA which is equivalent to the UNIX five minute load average and which expects to be ticked every 5 seconds . 
Creates a new EWMA which is equivalent to the UNIX fifteen minute load average and which expects to be ticked every 5 seconds . 
Returns the rate in the given units of time . 
Returns system default for SO_REUSEADDR 
Returns all global scope addresses for interfaces that are up . 
Returns true if value is neither NaN nor infinite . 
Creates a new PidFile and writes the current process ID into the provided path @param path the path to the pid file . 
Returns the current process id 
Returns the process id file path 
Returns true iff the process id file is deleted on system exit . 
gets the delegate instance to forward calls to . 
creates a new empty instance of the given size . 
returns a concurrent recycler based on a deque . 
returns a recycler based on a deque . 
returns a recycler based on a deque . 
creates a concurrent implementation that can support concurrent access from concurrencyLevel threads with little contention . 
Returns true iff the given key is a valid settings key otherwise false 
Adds a settings consumer with a predicate that is only evaluated at update time . 
Adds a settings consumer that accepts the values for two settings . 
Adds a settings consumer .  
Returns true if this updaters setting has changed with the current update @param current the current settings @param previous the previous setting @return true if this updaters setting has changed with the current update 
Returns the instance value for the current settings . 
Returns true if the setting for the given key is dynamically updateable . 
Returns a settings object that contains all settings that are not already sets in the given source . 
Returns the value for the given setting . 
Returns the settings key or a prefix if this setting is a group setting . 
Returns the original representation of a setting key . 
Returns true if this setting is dynamically updateable , otherwise false 
Returns true if this setting must be filtered , otherwise false 
Returns true if this setting has a node scope , otherwise false 
Returns true if this setting has an index scope , otherwise false 
Returns true if this setting is deprecated , otherwise false 
Returns true if this setting is shared with more than one other module or plugin , otherwise false 
Returns true iff this setting is a group setting .  
Returns the default value string representation for this setting . 
Returns the default value for this setting . 
Returns true iff this setting is present in the given settings object . 
Returns the settings value . 
Returns true iff the given key matches the settings key or if this setting is a group setting if the given key is part of the settings group . 
Returns the value for this setting but falls back to the second provided settings object 
Creates a setting which specifies a memory size . 
Creates a setting which specifies a memory size . 
Creates a setting which specifies a memory size . 
Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate . 
Returns the settings mapped to the given setting name . 
Returns the setting value associated with the setting key . 
Returns the setting value associated with the setting key . 
Returns group settings for the given setting prefix . 
Returns group settings for the given setting prefix . 
Returns group settings for the given setting prefix . 
Returns a parsed version . 
Returns the settings as delimited string . 
Returns a builder to be used in order to build settings . 
Returns <tt> true </tt> if this settings object contains no settings @return <tt> true </tt> if this settings object contains no settings 
Removes the provided setting from the internal map holding the current list of settings . 
Returns a setting value based on the setting key . 
Sets a setting with the provided setting key and value . 
Sets a setting with the provided setting key and class as value . 
Sets the setting with the provided setting key and the boolean value . 
Sets the setting with the provided setting key and the int value . 
Sets the setting with the provided setting key and the long value . 
Sets the setting with the provided setting key and the float value . 
Sets the setting with the provided setting key and the double value . 
Sets the setting with the provided setting key and the time value . 
Sets the setting with the provided setting key and the size value . 
Sets the setting with the provided setting key and an array of values . 
Sets the setting with the provided setting key and a list of values . 
Sets the setting as an array of values , but keeps existing elements for the key . 
Sets the setting group . 
Sets all the provided settings . 
Sets all the provided settings . 
Sets all the provided settings . 
Returns a sets of patterns 
sets this to `` false '' when using a StopWatch for millions of intervals , or the task info structure will consume excessive memory . 
returns whether the stop watch is currently running . 
returns the time taken by the last task . 
returns the name of the last task . 
returns the total time for all tasks . 
returns the number of tasks timed . 
returns an array of the data for tasks performed . 
returns a short description of the total running time . 
returns a string with a table describing all tasks performed . 
returns the name of this task . 
returns the time this task took . 
Returns the host string for this transport address 
Returns the address string for this transport address 
Returns the port of this transport address if applicable 
returns the number of allocated slots to store this hash table . 
returns the number of longs in this hash table . 
removes the entry at the given index and adds it back 
returns the index of value in array , or <tt> -1 </tt> if there is no such index . 
returns the length of this array . 
Returns the next size to grow when working with parallel arrays that may have different page sizes or number of bytes per element . 
returns the next size to grow to that is > = minTargetSize . 
returns an instance of this BigArrays class with circuit breaking explicitly enabled , instead of only accounting enabled 
gets an element given its index . 
sets a value at the given index and returns the previous value . 
gets a reference to a slice . 
gets the id associated with key 
returns its newly allocated id if it was n't in the hash table yet , or -1 - id if it was already present in the hash table . 
returns a rotated view of the given list with the given distance . 
Returns the current reference count . 
gets the name of this instance 
Adds the given item to the queue . 
Returns the it as a non null list , with an Entry wrapping each value allowing to retain its index . 
Creates a new CHM with an aggressive concurrency level , aimed at high concurrent update rate long living maps . 
Creates a new CHM with an aggressive concurrency level , aimed at highly updateable long living maps . 
Returns true iff the count-down has reached zero . 
Returns the number of processors available but at most <tt> 32 </tt> . 
Returns a stream of all pending tasks . 
Returns the waiting time of the first task in the queue 
Returns the elapsed time between two successive barrier executions . 
Returns the elapsed time between two successive barrier executions . 
Removes the current context and resets a default context . 
Removes the current context and resets a new context that contains a merge of the current headers and the given headers . 
Returns the header for the given key or null if not present 
Returns all of the request contexts headers 
gets a copy of all <em> response </em> headers . 
Returns a transient header object or null if there is no header for the given key 
gets an element given its index . 
sets a value at the given index and returns the previous value . 
Returns the extension for the given key or null 
gets an element given its index . 
sets a value at the given index and returns the previous value . 
gets an element given its index . 
sets a value at the given index and returns the previous value . 
gets an element given its index . 
sets a value at the given index and returns the previous value . 
gets the id associated with key or -1 if the key is not contained in the hash . 
returns its newly allocated id if it was n't in the hash table yet , or -1 - id if it was already present in the hash table . 
gets the value that is associated with key or null if key was not present in the hash table . 
removes the entry which has this key in the hash table and returns the associated value or null if there was no entry associated with this key . 
gets an element given its index . 
sets a value at the given index and returns the previous value . 
Returns the currently cached object and potentially refreshes the cache before returning . 
Returns a new instance to cache 
Returns true iff the cache needs to be refreshed . 
Returns true if the given uri matches the pattern 
adds a new validation error to the accumulating validation errors @param error the error to adds 
adds a sequence of validation errors to the accumulating validation errors @param errors the errors to adds 
Returns the validation errors accumulated 
Creates the consumer that does the `` field just arrived '' behavior . 
sets a constructor argument and build the target object if all constructor arguments have arrived . 
gets the name of the parser . 
Returns the REST status to make sure it is returned correctly 
Returns an array of string value from a node value . 
Creates a new generator using the provided output stream . 
Creates a new generator using the provided output stream and some inclusive and/or exclusive filters . 
Creates a parser over the provided string content . 
Creates a parser over the provided input stream . 
Creates a parser over the provided bytes . 
Creates a parser over the provided bytes . 
Creates a parser over the provided bytes . 
Creates a parser over the provided reader . 
sets the `` human readable '' flag . 
Returns a binary content builder for the provided content type . 
Returns a BytesRef holding UTF-8 bytes . 
returns true if the current value is boolean in nature . 
returns a list of nodes which did n't respond yet 
Adds a custom unicast hosts provider to build a dynamic list of unicast hosts list when doing unicast discovery . 
Adds a custom Discovery type . 
Adds a custom zen master service type . 
Returns the current publish timeout 
Returns <tt> null </tt> if no master has been elected . 
Returns the given nodes sorted by likelihood of being elected as master , most likely first . 
Returns a list of the next possible masters . 
Gets the current sets of nodes involved in node fault detection . 
returns the current cluster state of the node 
adds a ping if newer than previous pings from the same node @return true if added , false o.w. 
adds multiple pings if newer than previous pings from the same node 
adds an incoming , not yet committed cluster state 
Gets the next committed state to process . 
returns all pending states , committed or not 
Gets the current sets of nodes involved in the node fault detection . 
returns true if join thread control is started and there is currently an active join thread 
returns true if join thread control is started and the supplied thread is the currently active joinThread 
Returns false if the supplied thread is not the currently active join thread 
Adds a new header with the given key . 
Adds a new header with the given key . 
Returns a sets of all header keys on this exception 
Returns the rest status code associated with this exception . 
returns the detail message , including the message from the nested exception if there is one . 
Returns true iff the given class is a registered for an exception to be read . 
Returns the serialization id the given exception . 
Returns the root cause of this exception or multiple if different shards caused different exceptions 
Returns the root cause of this exception or multiple if different shards caused different exceptions . 
Returns a underscore case name for the given exception . 
Returns true if the directory is empty 
Returns all currently lock shards . 
Returns an array of all of the nodes data locations . 
returns the unique uuid describing this node . 
Returns all index paths . 
Returns all shard paths excluding custom shard path . 
Returns the locks shards Id . 
Returns true if this lock is still open ie . 
Returns the number of async fetches that are currently ongoing . 
Returns true if the given shard has an async fetch pending 
Returns a PriorityComparator that uses the RoutingAllocation index metadata to access the index setting per index . 
Returns the node with the highest `` non zero byte '' match compared to the primary . 
Returns the injected name of the analyzer . 
Returns true if , and only if , the provided character matches this character class . 
Returns an analyzer mapped to the given name or null if not present 
Returns the default index analyzer for this index 
Returns the default search analyzer for this index 
Returns the default search quote analyzer for this index 
Returns the indices settings 
Returns an analysis component to handle analysis if multi-term queries . 
Returns all registered available codec names 
Returns the number of documents in the in this commit 
Returns the number of milliseconds this engine was under index throttling . 
Returns the true iff this engine is currently under index throttling . 
Returns a new searcher instance . 
returns the translog for this engine 
gets commits stats for the last commit 
Returns operation start time in nanoseconds . 
Returns operation end time in nanoseconds . 
Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch . 
Returns true if this index requests has been retried on the coordinating node and can therefor be delivered multiple times . 
Returns the timestamp of the last write in nanoseconds . 
Returns the engines current document statistics 
Returns true iff this engine is currently recovering from translog . 
Returns the initial index buffer size . 
Returns true iff delete garbage collection in the engine should be enabled .  
Returns a listener that should be called on engine failure 
Returns the index settings for this index . 
Returns the engines shard ID 
returns the cache to use for queries . 
returns the policy to use when caching queries . 
Returns the translog config for this engine 
Returns the max timestamp that is used to de-optimize documents with auto-generated IDs in the engine . 
Returns the number of times a version was looked up either from the index . 
Returns the number of times a version was looked up either from memory or from the index . 
Returns true iff the index writer has any deletions either buffered in memory or in the index . 
Adds this uid/version to the pending adds map . 
Removes this uid from the pending deletes map . 
Returns how much RAM would be freed up by refreshing . 
Returns the max timestamp that is used to de-optimize documents with auto-generated IDs in the engine . 
Returns a `` scripting '' based values . 
returns a String representation of the values . 
returns geo-point values . 
gets an integer view of the values of this segment . 
returns a floating-point view of the values in this segment . 
returns the ordinals values for the current atomic reader . 
returns the sets of types there is a mapping for . 
returns the mapping for the given type . 
Returns a Bits representing all documents from dv that have a value . 
Returns a Bits representing all documents from dv that have a value . 
Returns whether the provided values might be multi-valued . 
Returns whether the provided values might be multi-valued . 
Returns whether the provided values might be multi-valued . 
Returns whether the provided values might be multi-valued . 
Returns whether the provided values might be multi-valued . 
returns the missing object value according to the reduced type of the comparator . 
Sets iteration to the specified docID . 
returns the number of geo points the current document has . 
returns the i-th value associated with the current document . 
Returns the numeric value for the specified document ID . 
Returns numeric docvalues view of raw double bits 
Returns numeric docvalues view of raw float bits 
gets the ID of the slice given an offset . 
Returns true iff this builder contains a document ID that is associated with more than one ordinal . 
Returns the number distinct of document IDs with one or more values . 
Returns the number distinct of document IDs associated with exactly one value . 
Returns the number distinct of document IDs associated with two or more values . 
Returns the number of document ID to ordinal pairs in this builder . 
Returns the number of distinct ordinals in this builder . 
Returns the maximum document ID this builder can associate with an ordinal 
sets the current doc ID . 
returns a copy of the list of the values for the current document . 
returns the wrapped values . 
returns the wrapped values . 
returns the wrapped values . 
returns the wrapped values . 
returns the number of values of the current document . 
Returns bytes reference , also un compress the source if needed . 
Adds a Setting and it 's consumer for this index . 
Adds a Setting , it 's consumer and validator for this index . 
Returns the index this module is associated with 
Returns true iff this settings matches the type . 
Returns a new IndexSearcherWrapper . 
returns the shard with the provided id , or null if there is no such shard . 
returns the shard with the provided id , or throw an exception if it does n't exist . 
Creates a new QueryShardContext . 
Creates a new QueryShardContext . 
Returns the filter associated with listed filtering aliases . Returns <tt> null </tt> if no filtering is required . 
Returns the default search field for this index . 
Returns true if query string parsing should be lenient . 
Returns true if the query string should analyze wildcards . 
Returns true if the query string parser should allow leading wildcards . 
Returns true if queries should be lenient about unmapped fields . 
Returns the settings for this index . 
Returns the index this settings object belongs to 
Returns the indexes UUID 
Returns true if the index has a custom data path 
Returns the customDataPath for this index , if configured . 
Returns true iff the given settings indicate that the index associated with these settings allocates it 's shards on a shared filesystem . 
Returns true iff the given settings indicate that the index associated with these settings uses shadow replicas . 
Returns the version the index was created on . 
Returns the current node name 
Returns the current IndexMetaData for this index 
Returns the number of shards this index has . 
Returns the number of replicas this index has . 
Returns true iff this index uses shadow replicas . 
Returns the node settings . 
Returns true if the given expression matches the index name or one of it 's aliases 
Returns the translog durability for this index . 
Returns true if index warmers are enabled , otherwise false 
Returns the translog sync interval . 
Returns this interval in which the shards of this index are asynchronously refreshed . 
Returns the transaction log threshold size when to forcefully flush the index and clear the transaction log . 
Returns the max result window for search requests , describing the maximum value of from + size on a query . 
Returns the maximum rescore window for search requests . 
Returns the GC deletes cycle in milliseconds . 
Returns the merge policy that should be used for this index . 
Returns true if the TTL purge is disabled for this index . 
gets the context mapping associated with this completion field 
Returns the mapper for the given field 
Creates a Mapping containing any dynamically added fields , or returns null if there were no dynamic mappings . 
Adds a mapper as an update into the last mapper . 
Removes mappers that exist on the stack , but are not part of the path of the current nameParts , Returns the next unprocessed index from nameParts . 
Adds mappers from the end of the stack that exist as updates within those mappers . Returns the next unprocessed index from nameParts . 
Creates an update for intermediate object mappers that are not on the stack , but parents of newMapper . 
Creates instances of the fields that the current field should be copied to 
Creates an copy of the current field with given field name and boost 
find what the dynamic setting is given the current parse context and parent 
returns a new instance that contains the union of this instance and the field types from the provided fields . 
Returns the field for the given field 
gets the sets of types that have a mapping for the given field . 
Returns a list of the full names of a simple match regex like pattern against full name and index name . 
gets an instance based on the number of bytes that has been used to encode values . 
gets an instance based on the expected precision . 
returns the bits that encode a latitude/longitude . 
returns a fielddata builder for this field @throws IllegalArgumentException if the fielddata is not supported on this type .  
Returns the name of this type , as would be specified in mapping properties 
Adds a conflict if they are different . 
Returns the value that should be added when JSON null is found , or null if no value should be added 
Returns the null value stringified , so it can be used for e.g. _ all field , or null if there is no null value 
Sets the null value and initializes the string version 
Returns true if the field is searchable . 
Returns true if the field is aggregatable . 
Returns a newly built mapper . 
Returns the simple name , which identifies this mapper against other mappers at the same level in the mappers hierarchy TODO : make this protected once Mapper and FieldMapper are merged together 
Returns the canonical name which uniquely identifies the mapper against other mappers in a type . 
returns an immutable iterator over current document mappers . 
returns the sets of concrete types that have a mapping . 
Returns the document mapper created , including a mapping update if the type has been dynamically created . 
Returns all the fields that match the given pattern . 
returns the root object mapper . 
gets the root mapper with the given class . 
gets the associated type name . 
gets the associated numerit type 
returns the path associated with this document . 
returns a prefix that all fields in this document should have . 
returns the parent document , or null if this is the root document . 
Returns an array of values of the field specified as the method parameter . 
returns a new context that will be within a copy-to operation . 
returns a new context that will be within multi-fields . 
returns a new context that will be used within a nested document . 
returns a new context that has the provided document as the current document . 
returns a new context that will have the provided path . 
returns a new context that will have the external value sets . 
adds a new mapper dynamically created while parsing . 
gets dynamic mappers created while parsing . 
Find a template . 
Returns the indexed value used to construct search `` values '' . 
Returns true iff auto throttle is enabled . 
Sets the query name for the query . 
Returns the query name for the query . 
Returns the boost for this query . 
Sets the boost for this query . 
Returns the field name used in this query . 
Returns the value used in this query . 
Adds a query that <b> must </b> appear in the matching documents and will contribute to scoring . 
Gets the queries that <b> must </b> appear in the matching documents . 
Adds a query that <b> must </b> appear in the matching documents but will not contribute to scoring . 
Gets the queries that <b> must </b> appear in the matching documents but do n't contribute to scoring 
Adds a query that <b> must not </b> appear in the matching documents . 
Gets the queries that <b> must not </b> appear in the matching documents . 
Adds a clause that <i> should </i> be matched by the returned documents . 
Gets the list of clauses that <b> should </b> be matched by the returned documents . 
Returns true iff this query builder has at least one should , must , must not or filter clause . 
gets the positive query for this boosting query . 
gets the negative query for this boosting query . 
sets the negative boost factor . 
gets the negative boost factor . 
Sets the cutoff document frequency for high / low frequent terms . 
Sets the minimum number of high frequent query terms that need to match in order to produce a hit when there are no low frequent terms . 
Sets the minimum number of low frequent query terms that need to match in order to produce a hit . 
adds a sub-query to this disjunction . 
Returns the query that defines which documents the function_score query will be executed on . 
Returns the filters and functions 
Returns the score mode , meaning how results of individual score functions will be aggregated . 
Returns the boost mode , meaning how the combined result of score functions will influence the final score together with the sub query score . 
Sets the maximum boost that will be applied by function score . 
Returns the maximum boost that will be applied by function score . 
Sets the seed based on which the random number will be generated . 
gets the current shard 's id for the seed . 
sets the weight applied to the function before combining . 
Adds top left point . 
Adds points from a single geohash . 
Returns the top left corner of the bounding box . 
Returns the bottom right corner of the bounding box . 
Adds corners in OGC standard bbox / envelop format . 
Adds corners in OGC standard bbox / envelop format . 
Returns geo coordinate validation method to use . 
Sets the type of executing of the geo bounding box . 
Returns the execution type of the geo bounding box . 
Returns the name of the field to base the bounding box computation on . 
Sets the center point for the query . 
Sets the center point of the query . 
Returns the center point of the distance query . 
Sets the distance from the center using the default distance unit . 
Sets the distance from the center for this query . 
Sets the distance from the center for this query . 
Returns the distance configured as radius . 
Sets the center point for this query . 
Returns geo distance calculation type to use . 
sets this to memory or indexed if before running the distance calculation you want to limit the candidates to hits in the enclosing bounding box . 
Returns whether or not to run a BoundingBox query prior to distance query for optimization purposes . 
sets validation method for geo coordinates . 
Returns validation method for geo coordinates . 
sets validation method for coordinates . 
Returns validation method for coordinates . 
creates a new geohash filter for a given sets of geohashes . 
Sets the validation method to use for geo coordinates . 
Returns the validation method to use for geo coordinates . 
Sets the name of the index where the indexed Shape can be found @param indexedShapeIndex Name of the index where the indexed Shape is @return this 
Sets the path of the field in the indexed Shape document that has the Shape itself @param indexedShapePath Path of the field where the Shape itself is defined @return this 
Sets the relation of query shape and indexed shape . 
Returns whether or not to skip bounding box validation . 
Returns whether or not to try and fix broken/wrapping bounding boxes . 
Returns validation method corresponding to given coerce and ignoreMalformed values . 
Returns inner hit definition in the scope of this query and reusing the defined type and query . 
Returns the children query to execute . 
Returns the child type 
Returns how the scores from the matching child documents are mapped into the parent document . 
Returns the minimum number of children that are required to match for the parent to be considered a match . 
Returns the maximum number of children that are required to match for the parent to be considered a match . 
Returns the query to execute . 
Returns true if the parent score is mapped into the child documents 
Returns the parents type name 
Returns inner hit definition in the scope of this query and reusing the defined type and query . 
Returns the types used in this query 
Adds ids to the query . 
Returns the ids for the query . 
Sets the query to use when it executes on an index that does not match the indices provided . 
Sets the no match query , can either be <tt> all </tt> or <tt> none </tt> . 
Gets the stored fields to load and returns . 
Sets the stored fields to load and returns . 
Gets the stored fields context . 
Sets the stored fields to load and returns . 
Gets the docvalue fields . 
Sets the stored fields to load from the docvalue and returns . 
Adds a field to load from the docvalue and returns . 
Gets the docvalue fields . 
Sets the stored fields to load from the docvalue and returns . 
Adds a field to load from the docvalue and returns . 
Returns the field name used in this query . 
Returns the value used in this query . 
gets the analyzer to use , if previously sets , otherwise <tt> null </tt> 
Sets a slop factor for phrase queries 
gets the slop factor for phrase queries . 
Returns the field name used in this query . 
Returns the value used in this query . 
gets the analyzer to use , if previously sets , otherwise <tt> null </tt> 
Sets a slop factor for phrase queries 
gets the slop factor for phrase queries . 
Returns the field name used in this query . 
Returns the value used in this query . 
Sets the type of the text query . 
gets the type of the query . 
Sets the operator to use when using a boolean query . 
Returns the operator to use in a boolean query . 
gets the analyzer to use , if previously sets , otherwise <tt> null </tt> 
gets the slop factor for phrase queries . 
Sets the fuzziness used when evaluated to a fuzzy query type . 
Gets the fuzziness used when evaluated to a fuzzy query type . 
sets a cutoff value in -LSB- 0 . 
Gets the optional cutoff value , can be <tt> null </tt> if not sets previously 
Sets optional minimumShouldMatch value to apply to the query 
Gets the minimumShouldMatch value 
Sets the fuzzy_rewrite parameter controlling how the fuzzy query will gets rewritten 
Sets whether transpositions are supported in fuzzy queries . 
Gets the fuzzy query transposition setting . 
Sets whether format based failures will be ignored . 
Sets whether format based failures will be ignored . 
Gets leniency setting that controls if format based failures will be ignored . 
Sets query to use in case no query terms are available , e.g. after analysis removed them . 
Returns the setting for handling zero terms queries . 
Sets the text from which the terms should not be selected from . 
Sets the documents from which the terms should not be selected from . 
Sets the maximum number of query terms that will be included in any generated query . 
Sets the frequency at which words will be ignored which do not occur in at least this many docs . 
sets the maximum frequency in which words may still appear . 
Sets the minimum word length below which words will be ignored . 
Sets the maximum word length above which words will be ignored . 
sets the sets of stopwords . 
Sets the boost factor to use when boosting terms . 
Adds a field to run the multi match against . 
Adds a field to run the multi match against with a specific boost . 
adds several fields to run the query against with a specific boost . 
Sets the type of the text query . 
Sets the type of the text query . 
Sets the operator to use when using a boolean query . 
sets the phrase slop if evaluated to a phrase query type . 
Sets the fuzziness used when evaluated to a fuzzy query type . 
Sets whether format based failures will be ignored . 
sets a cutoff value in -LSB- 0 . 
sets a cutoff value in -LSB- 0 . 
Returns the nested query to execute . 
Returns how the scores from the matching child documents are mapped into the nested parent document . 
Returns <tt> null </tt> if this query should be ignored in the context of parent queries . 
Returns <tt> null </tt> if this query should be ignored in the context of parent queries . 
Returns the boost for this query . 
Sets the boost for this query . 
Returns the name that identifies uniquely the query 
Creates a match query with type `` BOOLEAN '' for the provided field name and text . 
Creates a common query for the provided field name and text . 
Creates a match query with type `` BOOLEAN '' for the provided field name and text . 
Creates a text query with type `` PHRASE '' for the provided field name and text . 
Creates a match query with type `` PHRASE_PREFIX '' for the provided field name and text . 
Returns the default scripting language , that should be used if scripts do n't specify the script language explicitly . 
Returns a clients to fetch resources from local or removes nodes . 
Returns the index settings for this context . 
Returns a script service to fetch scripts . 
returns the MapperService . 
Returns the cluster state as is when the operation started . 
returns whether we are currently parsing a filter or a query . 
Sets whether we are currently parsing a filter or a query 
Gets the search analyzer for the given field , or the default if there is none present for the field TODO : removes this by moving defaults into mappers themselves 
Gets the search quote analyzer for the given field , or the default if there is none present for the field TODO : removes this by moving defaults into mappers themselves 
Returns the narrowed down explicit types , or , if not sets , all types . 
Adds a field to run the query string against . 
Adds a field to run the query string against with a specific boost . 
adds several fields to run the query against with a specific boost . 
Returns the fields including their respective boosts to run the query against . 
Sets the boolean operator of the query parser used to parse the query string . 
sets to true if phrase queries will be automatically generated when the analyzer returns more than one term from whitespace delimited text . sets to false if phrase queries should only be generated when surrounded by double quotes . 
sets to <tt> true </tt> to enable position increments in result query . 
sets the edit distance for fuzzy queries . 
sets the minimum prefix length for fuzzy queries . 
Sets the default slop for phrases . 
sets to <tt> true </tt> to enable analysis on wildcard and prefix queries . 
Sets the query string parser to be lenient when parsing field values , defaults to the index setting and if not sets , defaults to false . 
sets to <tt> true </tt> to enable escaping of the query string 
gets the field name for this query . 
Gets the lower range value for this query . 
Gets the upper range value for this query . 
Gets the includeLower flag for this query . 
Gets the includeUpper flag for this query . 
Gets the format field to parse the from/to fields 
Returns the field name used in this query . 
Returns the value used in this query . 
Sets the regexp maxDeterminizedStates . 
Returns the locale to use for parsing . 
Returns whether to lowercase parse terms . 
Returns whether to use lenient parsing . 
Returns whether to analyze wildcards . 
Returns the text to parse the query from . 
adds a field to run the query against . 
adds a field to run the query against with a specific boost . 
adds several fields to run the query against with a specific boost . 
Returns the fields including their respective boosts to run the query against . 
Returns the analyzer to use for the query . 
Returns the default operator for the query . 
Returns whether parsed terms should be lower cased for this query . 
Returns the locale for parsing terms for this query . 
Returns whether query parsing should be lenient . 
Returns whether wildcards should by analyzed . 
Returns the minimumShouldMatch to apply to the resulting query should that be a Boolean query . 
adds a span clause to the current list of clauses 
adds a span clause to the current list of clauses 
Sets the new current nested level and pushes old current nested level down the stack returns that level . 
Sets the previous nested level as current nested level and removes and returns the current nested level . 
Returns the stats , including group specific stats . 
Returns the currently in-flight indexing operations . 
Returns the number of delete operation executed 
Returns if the index is under merge throttling control 
Gets the amount of time in a TimeValue that the index has been under merge throttling control 
Returns the currently in-flight delete operations 
Returns the primary term the index shard is on .  
Returns the latest cluster routing entry received with this shard . 
Returns how many bytes we are currently moving from heap to disk 
returns stats about ongoing recoveries , both source and target 
Returns number of heap bytes used by the indexing buffer for this shard , or 0 if the shard is closed 
Returns true iff this shard needs to be flushed due to too many translog operation or a too large transaction log . 
Returns the current translog durability mode 
Returns true iff one or more changes to the engine are not visible to via the current searcher or there are pending refresh listeners . 
adds a listener for refreshes . 
Returns the stats , including type specific stats . 
adds a listener for refreshes , calling it immediately if the location is already visible . 
Returns true if there are pending listeners . 
Returns the data-path root for this shard . 
Returns the state-path root for this shard . 
Returns true iff the data location is a custom data location and therefore outside of the nodes configured data paths . 
Returns the recovered types modifying the mapping during the recovery 
Returns the name associated with the Provider @return Name of the Provider 
Returns the base file name @return file name 
Returns part name if file is stored as multiple parts @param part part number @return part name 
Returns base file name from part name @param blobName part name @return base file name 
Returns original file name @return original file name 
Returns part size @return part size 
Returns number of parts @return number of parts 
Returns the StoreFileMetaData for this file info . 
Returns index version @return index version 
Returns snapshot id @return snapshot id 
Returns list of files in the shard @return list of files 
Returns snapshot start time 
Returns snapshot running time 
Returns number of files that where snapshotted 
Returns total size of all files that where snapshotted 
Returns list of snapshots @return list of snapshots 
Returns a list of file in the snapshot 
Returns true if this snapshot contains a file with a given original name @param physicalName original file name @return true if the file was found , false otherwise 
Returns information about a physical file with the given name @param physicalName the original file name @return information about this file 
Returns current snapshot stage @return current snapshot stage 
Sets new snapshot stage @param stage new snapshot stage 
Returns snapshot start time @return snapshot start time 
Sets snapshot start time @param startTime snapshot start time 
Returns snapshot processing time @return processing time 
Sets snapshot processing time @param time snapshot processing time 
Returns true if snapshot process was aborted @return true if snapshot process was aborted 
Sets files stats @param numberOfFiles number of files in this snapshot @param totalSize total size of files in this snapshot 
Sets processed files stats @param numberOfFiles number of files in this snapshot @param totalSize total size of files in this snapshot 
Sets index version @param indexVersion index version 
Returns index version @return index version 
Returns the node level rate limiter 
Returns the last committed segments info for this store @throws IOException if the index is corrupted or the segments file is not present 
Returns the segments info for the given commit or for the latest commit if the given commit is null @throws IOException if the index is corrupted or the segments file is not present 
Returns a new MetadataSnapshot for the given commit . 
Returns true iff the given location contains an index an the index can be successfully opened . 
Returns the current reference count . 
Returns the number of documents in this store snapshot 
Returns a diff between the two snapshots that can be used for recovery . 
Returns the number of files in this snapshot 
Returns true iff this metadata contains the given file . 
Returns the segments file that this metadata snapshot represents or null if the snapshot is empty . 
Returns the sync id of the commit point that this MetadataSnapshot represents . 
Returns the sum of the files in this diff . 
Returns true if the file is auto-generated by the store and should n't be deleted during cleanup . 
Returns the name of this file 
Returns a string representation of the files checksum . 
Returns true iff the length and the checksums are the same . 
Returns the Lucene version this file has been written by or null if unknown 
Returns a variable length hash of the file represented by this metadata object . 
Returns all translog locations as absolute paths . 
Returns the generation of the current transaction log . 
Returns the number of operations in the transaction files that are n't committed to lucene . . 
Returns the size in bytes of the translog files that are n't committed to lucene . 
Returns the number of operations in the transaction files that are n't committed to lucene . . 
Returns the size in bytes of the translog files that are n't committed to lucene . 
Adds a delete / index operations to the transaction log . 
Returns a view into the current translog that is guaranteed to retain all current operations while receiving future ones as well 
Returns the size in bytes of the files behind the view . 
creates a snapshot from this view 
Returns the next operation in the snapshot or null if we reached the end . 
Returns the current generation of this translog . 
Returns true iff the given generation is the current gbeneration of this translog 
Returns the translog uuid used to associate a lucene index with a translog . 
Returns the index indexSettings 
Returns the shard ID this config is created for 
Returns a BigArrays instance for this engine 
Returns the translog path for this engine 
adds the given bytes to the translog and returns the location they were written at 
returns true if there are buffered ops 
Returns the number of bytes written . 
returns a sets of all files in a given directory 
Returns a human readable explanation for a version conflict on write . 
Returns a human readable explanation for a version conflict on read . 
Returns the new version for a document , based on its current one and the specified in the request @return new version 
Creates a new analysis provider . 
Creates a new global scope analysis provider without index specific settings not settings for the provider itself . 
Returns the hunspell dictionary for the given locale . 
gets a pre built Analyzer by its name or fallback to the default one @param name Analyzer name @param defaultAnalyzer default Analyzer if name not found 
gets a pre built CharFilter by its name or fallback to the default one @param name CharFilter name @param defaultCharFilter default CharFilter if name not found 
gets a pre built TokenFilter by its name or fallback to the default one @param name TokenFilter name @param defaultTokenFilter default TokenFilter if name not found 
gets a pre built Tokenizer by its name or fallback to the default one @param name Tokenizer name @param defaultTokenizer default Tokenizer if name not found 
Removes shard entries from the failed shards cache that are no longer allocated to this node by the master . 
Removes indices that have no shards allocated to this node . 
Removes shards that are currently loaded by indicesService but have disappeared from the routing table of the current node . 
Returns the shard id of this shard . 
Returns the latest cluster routing entry received with this shard . 
Returns the latest internal shard state . 
Returns the recovery state associated with this shard . 
Returns the index settings of this index . 
Returns shard with given id . 
Removes shard with given id . 
Removes the given index from this service and releases all associated resources . 
Returns an IndexService for the specified index if exists otherwise returns null . 
Creates shard for the specified shard routing and starts recovery , 
Returns shard for the specified id if it exists otherwise returns null . 
returns the number of in flight operations on primary . 
returns the current budget for the total amount of indexing buffers of active shards on this node 
returns how much heap this shard is using for its indexing buffer 
returns how many bytes this shard is currently writing to disk 
gets usage statistics for the given shard . 
Returns true iff the resource behind this entity is still open ie . 
Returns the cache identity . 
Returns the current size of the cache 
Returns the node stats indices stats . 
Returns an IndexService for the specified index if exists otherwise returns null . 
Removes the given index from this service and releases all associated resources . 
Returns true iff the shards content for the given shard can be deleted . 
Adds a pending delete for the given index shard . 
Adds a pending delete for the given index . 
returns a map of the mappers that have been registered . 
returns a map of the meta mappers that have been registered . 
Returns null if recovery is not found 
Returns true if this chunk is the last chunk in the stream . 
Returns start time in millis 
Returns elapsed time in millis , or 0 if timer was not started 
Returns stop time in millis 
returns the total number of translog operations recovered so far 
returns the total number of translog operations needed to be recovered at this moment . 
returns the total number of translog operations to recovered , on the start of the recovery . 
returns true if the file is reused from a local copy 
sets the lasAccessTime flag to now 
gets a temporary name for the provided file name . 
Returns the shards to purge , i.e. the local started primary shards that have ttl enabled and disable_purge to false 
Returns and removes the specified optional property from the specified configuration map . 
Returns and removes the specified property from the specified configuration map . 
Returns and removes the specified property from the specified configuration map . 
Returns and removes the specified property from the specified configuration map . 
Returns and removes the specified property of type list from the specified configuration map . 
Returns and removes the specified property of type list from the specified configuration map . 
Returns and removes the specified property of type map from the specified configuration map . 
Returns and removes the specified property of type map from the specified configuration map . 
Returns the value contained in the document for the provided path @param path The path within the document in dot-notation @param clazz The expected class of the field value @return the value for the provided path if existing , null otherwise @throws IllegalArgumentException if the path is null , empty , invalid , if the field does n't exist or if the field that is found at the provided path is not of the expected type . 
Returns the value contained in the document with the provided templated path @param pathTemplate The path within the document in dot-notation @param clazz The expected class fo the field value @return the value fro the provided path if existing , null otherwise @throws IllegalArgumentException if the pathTemplate is null , empty , invalid , if the field does n't exist , or if the field that is found at the provided path is not of the expected type . 
Returns the value contained in the document for the provided path as a byte array . 
Removes the field identified by the provided path . 
Removes the field identified by the provided path . 
Sets the provided value to the provided path in the document . 
Sets the provided value to the provided path in the document . 
Returns the available ingest metadata fields , by default only timestamp , but it is possible to sets additional ones . 
Returns the pipeline by the specified id 
Gets the type of a processor 
Gets the tag of a processor . 
Creates a processor based on the specified map of maps config . 
Returns a copy of the value this ValueSource holds and resolves templates if there 're any . 
returns the maximum heap size . 
returns the heap usage in percent . 
Returns the amount of free physical memory in bytes . 
Returns the total amount of physical memory in bytes . 
Returns the amount of free swap space in bytes . 
Returns the total amount of swap space in bytes . 
Returns the system load averages 
Returns a given method of the OperatingSystemMXBean , or null if the method is not found or unavailable . 
Returns the maximum number of file descriptors allowed on the system , or -1 if not supported . 
Returns the number of opened file descriptors associated with the current process , or -1 if not supported . 
Returns the process CPU usage in percent 
Returns a given method of the OperatingSystemMXBean , or null if the method is not found or unavailable . 
Returns a given method of the UnixOperatingSystemMXBean , or null if the method is not found or unavailable . 
gets the Process cpu usage . 
Adds a default node name to the given setting , if it does n't already exist @return the given setting if node name is already sets , or a new copy with a default node name sets . 
Returns the environment of the node 
Returns <tt> true </tt> if the node is closed . 
Creates a new the SearchService . 
gets Custom Name Resolvers list based on a Discovery Plugins list @param discoveryPlugins Discovery plugins list 
Returns headers which should be copied through rest requests on to internal requests . 
returns deciders used to customize where shards are allocated . 
Returns additional ingest processor types added by this plugin . 
Returns all the official plugin names that look similar to pluginId . 
Sets the attributes for a path iff posix attributes are supported 
Returns additional mapper implementations added by this plugin . 
Returns additional metadata mapper implementations added by this plugin . 
Returns components added by this plugin . 
Returns a list of additional settings filter for this plugin 
gets information about plugins and modules 
Returns repository types added by this plugin . 
adds a reader for the shard level results of the aggregation . 
gets the readers that must be registered for this aggregation 's results . 
Returns the BlobStore to read and write data . 
Returns base path of the repository 
Returns true if metadata and snapshot files should be compressed @return true if compression is needed 
Returns data file chunk size . 
Returns appropriate global metadata format based on the provided version of the snapshot 
Returns appropriate snapshot format based on the provided version of the snapshot 
Returns appropriate index metadata format based on the provided version of the snapshot 
gets the latest snapshot index blob id . 
Removes all unreferenced files from the repository and writes new index file We need to be really careful in handling index files in case of failures to make sure we have index file that points to files that were deleted . 
creates snapshot from index commit point @param snapshotIndexCommit snapshot commit point 
Returns true if the blob is a leftover temporary blob . 
Returns registered repository This method is called only on the master node @param repositoryName repository name @return registered repository @throws RepositoryMissingException if repository with such name is n't registered 
Creates a new repository and adds it to the list of registered repositories . 
Sets repository settings @param settings repository settings @return this request 
Returns metadata about this repository . 
Returns global metadata associate with the snapshot . 
Returns snapshot throttle time in nanoseconds 
Returns restore throttle time in nanoseconds 
Returns true if the repository supports only read operations @return true if the repository is read/only 
Creates a snapshot of the shard based on the index commit point .  
Returns an unmodifiable list of the snapshot ids . 
adds a snapshot and its indices to the repository ; returns a new instance . 
removes a snapshot and removes any indices that no longer exist in the repository due to the deletion of the snapshot . 
Returns an immutable collection of the snapshot ids for the snapshots that contain the given index . 
Returns repository name @return repository name 
Adds api specific fields to the rest response Does nothing by default but can be overridden by subclasses 
gets Rest content from either payload or source parameter @param request Rest request @return rest content 
Returns true if either payload or source parameter is present . 
Returns a filter chain with the final filter being the provided filter . 
adds a custom header . 
Returns custom headers that have been added , or null if none have been sets . 
returns the CORS setting as an array of origins . 
Returns the current score and only applicable when used as a scoring script in a custom score query ! . 
Returns field data strings access for the provided field . 
Sets a runtime script parameter . 
Returns the name of the script factory 
Returns true if this scripting engine can safely accept inline scripts by default . 
Returns the stacktrace for the error in the script . 
Returns the identifier for which script . 
Returns the language of the script . 
Returns a JSON version of this exception for debugging . 
Returns the script mode for a script of a certain written in a certain language , of a certain type and executing as part of a specific operation/api . 
adds a sub aggregation to this aggregation . 
gets the value of specified path in the aggregation . 
gets the optional byte array metadata that was sets on the aggregation 
returns this aggregation 's name . 
adds a sub aggregation to this builder . 
adds a sub aggregation to this builder . 
Returns the aggregation that is associated with the specified name . 
gets the value of specified path in the aggregation . 
returns the name of this aggregator . 
returns the parent aggregator . 
returns the sub aggregator with the provided name . 
creates all aggregators so that they can be consumed with multiple buckets . 
Returns the parser that is registered under the given aggregation type . 
Returns the parser that is registered under the given pipeline aggregator type . 
sets the deferred collectors . 
sets the deferred collectors . 
returns an upper bound of the maximum bucket ordinal seen so far . 
sets the deferred collectors . 
sets whether to include a bucket for documents not matching any filter 
gets whether to include a bucket for documents not matching any filter 
gets the filters . 
sets the key to use for the bucket for documents not matching any filter . 
gets the key to use for the bucket for documents not matching any filter . 
gets the current interval in milliseconds that is sets on this builder . 
sets the interval on this builder , and returns the builder so that calls can be chained . 
gets the current date interval that is sets on this builder . 
sets the interval on this builder , and returns the builder so that calls can be chained . 
gets the offset to use when rounding , which is a number of milliseconds . 
sets the offset on this builder , which is a number of milliseconds , and returns the builder so that calls can be chained . 
sets the offset on this builder , as a time value , and returns the builder so that calls can be chained . 
sets extended bounds on this histogram , so that buckets would also be generated on intervals that did not match any documents . 
returns the order to use to sort buckets of this histogram . 
sets a new order on this builder and returns the builder so that calls can be chained . 
returns whether buckets should be returned as a hash . 
sets whether to returns buckets as a hash or as an array , and returns the builder so that calls can be chained . 
returns the minimum count of documents that buckets need to have in order to be included in the response . 
sets the minimum count of matching documents that buckets need to have and returns this builder so that calls can be chained . 
Returns the result of the parsing . 
gets the current interval that is sets on this builder . 
sets the interval on this builder , and returns the builder so that calls can be chained . 
gets the current offset that is sets on this builder . 
sets the offset on this builder , and returns the builder so that calls can be chained . 
gets the current minimum bound that is sets on this builder . 
gets the current maximum bound that is sets on this builder . 
returns the order to use to sort buckets of this histogram . 
sets a new order on this builder and returns the builder so that calls can be chained . 
returns whether buckets should be returned as a hash . 
sets whether to returns buckets as a hash or as an array , and returns the builder so that calls can be chained . 
returns the minimum count of documents that buckets need to have in order to be included in the response . 
sets the minimum count of matching documents that buckets need to have and returns this builder so that calls can be chained . 
gets the key for the given bucket . 
creates a <b> new </b> empty sub aggregation . 
gets the path to use for this nested aggregation . 
sets the path to use for this nested aggregation . 
gets the path to use for this nested aggregation . 
adds a new range to this aggregation . 
adds a new range with no lower bound . 
adds a new range with no upper bound . 
adds a new range to this aggregation . 
adds a new range with no lower bound . 
adds a new range with no upper bound . 
adds a new range to this aggregation . 
adds a new range with no lower bound . 
adds a new range with no upper bound . 
adds a new range to this aggregation . 
adds a new range with no lower bound . 
adds a new range with no upper bound . 
gets the current list or ranges that are configured on this aggregation . 
adds a new range to this aggregation . 
adds a new range to this aggregation using the CIDR notation . 
returns the buckets of this range aggregation . 
adds a new range to this aggregation . 
adds a new range with no lower bound . 
adds a new range with no upper bound . 
sets the max num docs to be returned from each shard . 
gets the max num docs to be returned from each shard . 
sets the max num docs to be returned per value . 
gets the max num docs to be returned per value . 
sets the execution hint . 
gets the execution hint . 
sets the max num docs to be returned from each shard . 
gets the max num docs to be returned from each shard . 
creates an array to hold some buckets . 
gets the bucket for the given term , or null if there is no such bucket . 
sets the minimum document count terms should have in order to appear in the response . 
sets the minimum document count terms should have on the shard in order to appear in the response . 
sets terms to include and exclude from the aggregation results 
gets terms to include and exclude from the aggregation results 
gets the number of docs in the superset . 
creates an array to hold some buckets . 
returns the sorted list of the buckets in this terms aggregation . 
gets the bucket for the given term , or null if there is no such bucket . 
gets an upper bound of the error on document counts in this aggregation . 
returns the sum of the document counts of all buckets that did not make it to the top buckets . 
sets the minimum document count terms should have in order to appear in the response . 
sets the minimum document count terms should have on the shard in order to appear in the response . 
Sets the order in which the buckets will be returned . 
Sets the order in which the buckets will be returned . 
Gets the order in which the buckets will be returned . 
sets terms to include and exclude from the aggregation results 
gets terms to include and exclude from the aggregation results 
gets whether doc count error will be returns for individual terms 
sets whether doc count error will be returns for individual terms 
sets a precision threshold . 
gets the precision threshold . 
returns an approximate memory overhead per bucket for this collector . 
returns the expected per-bucket memory usage for the given precision . 
adds k to the hash table associated with bucket . returns <tt> -1 </tt> if the value was already in the sets or the new sets size if it was added . 
gets the top-left location of the bounding box . 
gets the bottom-right location of the bounding box . 
sets whether to wrap longitudes . 
gets whether to wrap longitudes . 
returns the percentile for the given value . 
returns the percentile for the given value as a String . 
sets the values to compute percentiles from . 
gets the values to compute percentiles from . 
sets whether the XContent response should be keyed 
gets whether the XContent response should be keyed 
returns the value associated with the provided percentile . 
returns the value associated with the provided percentile as a String . 
sets the values to compute percentiles from . 
gets the values to compute percentiles from . 
sets whether the XContent response should be keyed 
gets whether the XContent response should be keyed 
sets the <tt> init </tt> script . 
gets the <tt> init </tt> script . 
sets the <tt> map </tt> script . 
gets the <tt> map </tt> script . 
sets the <tt> combine </tt> script . 
gets the <tt> combine </tt> script . 
sets the <tt> reduce </tt> script . 
gets the <tt> reduce </tt> script . 
sets parameters that will be available in the <tt> init </tt> , <tt> map </tt> and <tt> combine </tt> phases . 
gets parameters that will be available in the <tt> init </tt> , <tt> map </tt> and <tt> combine </tt> phases . 
Gets the from index to start the search from . 
Gets the number of search hits to returns . 
Adds a sort against the given field name and the sort ordering . 
adds a sort against the given field name . 
Adds a sort builder . 
Adds a sort builder . 
Gets the bytes representing the sort builders for this request . 
Adds highlight to perform as part of the search . 
Gets the hightlighter builder for this request . 
Sets the stored fields to load and returns as part of the search request . 
Gets the stored fields context 
Adds a field to load from the field data cache and returns as part of the search request . 
Adds fields to load from the field data cache and returns as part of the search request . 
Gets the field-data fields . 
Adds a script field under the given name with the provided script . 
Adds a script field under the given name with the provided script . 
Gets the script fields . 
Creates the pipeline aggregator @return The created aggregator 
returns the english-formatted name of the GapPolicy @return English representation of GapPolicy 
Sets the format to use on the output of this aggregation . 
Gets the format to use on the output of this aggregation . 
Sets the gap policy to use for this aggregation . 
Gets the gap policy to use for this aggregation . 
gets the percentages to calculate percentiles for in this aggregation 
sets the percentages to calculate percentiles for in this aggregation 
sets the value of sigma to use when calculating the standard deviation bounds 
gets the value of sigma to use when calculating the standard deviation bounds 
Sets the format to use on the output of this aggregation . 
Gets the format to use on the output of this aggregation . 
Sets the gap policy to use for this aggregation . 
Gets the gap policy to use for this aggregation . 
Sets the gap policy to use for this aggregation . 
Gets the gap policy to use for this aggregation . 
Sets the format to use on the output of this aggregation . 
Gets the format to use on the output of this aggregation . 
Returns the normalized value . 
returns the english-formatted name of the SeasonalityType @return English representation of SeasonalityType 
Returns if the model can be cost minimized . 
Returns the next value in the series , according to the underlying smoothing model @param values Collection of numerics to movingAvg , usually windowed @param <T> Type of numeric @return Returns a double , since most smoothing methods operate on floating points 
Returns an empty sets of predictions , filled with NaNs @param numPredictions Number of empty predictions to generate 
Sets the format to use on the output of this aggregation . 
Gets the format to use on the output of this aggregation . 
Sets the GapPolicy to use on the output of this aggregation . 
Gets the GapPolicy to use on the output of this aggregation . 
Sets the window size for the moving average . 
Gets the window size for the moving average . 
Sets a MovAvgModel for the Moving Average . 
Sets a MovAvgModel for the Moving Average . 
Gets a MovAvgModel for the Moving Average . 
Sets the number of predictions that should be returned . 
Gets the number of predictions that should be returned . 
Sets whether the model should be fit to the data using a cost minimizing algorithm . 
Gets whether the model should be fit to the data using a cost minimizing algorithm . 
Returns the pipeline aggregator factory with which this parser is associated . 
Sets the lag to use when calculating the serial difference . 
Gets the lag to use when calculating the serial difference . 
Sets the format to use on the output of this aggregation . 
Gets the format to use on the output of this aggregation . 
Sets the GapPolicy to use on the output of this aggregation . 
Gets the GapPolicy to use on the output of this aggregation . 
returns this aggregation 's name . 
returns the consumed buckets paths . 
Creates the pipeline aggregator @return The created aggregator 
gets a value source given its configuration . 
returns the original values source , before we apply ` missing ` . 
Sets the field to use for this aggregation . 
Gets the field to use for this aggregation . 
Sets the script to use for this aggregation . 
Gets the script to use for this aggregation . 
Sets the format to use for the output of the aggregation . 
Gets the format to use for the output of the aggregation . 
Sets the value to use when the aggregation finds a missing value in a document 
Gets the value to use when the aggregation finds a missing value in a document 
Sets the time zone to use for this aggregation 
Gets the time zone to use for this aggregation 
Returns whether the parse field we 're looking for matches with the found field name . 
Sets the search query for this request . 
Gets the query for this request 
Gets the post filter for this request 
Gets the from index to start the search from . 
Gets the number of search hits to returns . 
Sets the minimum score below which docs will be filtered out . 
Gets the minimum score below which docs will be filtered out . 
Gets the timeout to control how long search is allowed to take . 
Gets the number of documents to terminate after collecting . 
Adds a sort against the given field name and the sort ordering . 
adds a sort against the given field name . 
Adds a sort builder . 
Gets the bytes representing the sort builders for this request . 
sets the sort values that indicates which docs this request should `` search after '' . 
Sets a filter that will restrict the search hits , the top hits and the aggregations to a slice of the results of the main query . 
Gets the slice used to filter the search hits , the top hits and the aggregations . 
adds an aggregation to perform as part of the search . 
adds an aggregation to perform as part of the search . 
Gets the bytes representing the aggregation builders for this request . 
Adds highlight to perform as part of the search . 
Gets the highlighter builder for this request . 
Gets the suggester builder for this request . 
Gets the bytes representing the rescore builders for this request . 
Adds a stored field to load and returns as part of the search request . 
Sets the stored fields to load and returns as part of the search request . 
Gets the stored fields context . 
Adds a field to load from the docvalue and returns as part of the search request . 
Gets the docvalue fields . 
Gets the docvalue fields . 
Adds a field to load from the docvalue and returns as part of the search request . 
Adds a script field under the given name with the provided script . 
Adds a script field under the given name with the provided script . 
Gets the script fields . 
Sets the boost a specific index will receive when the query is executed against it . 
Gets the boost a specific indices will receive when the query is executed against them . 
Gets the field names to load and returns as part of the search request . 
Returns true if the stored fields should be fetched , false otherwise . 
Returns the required docvalue fields 
sets the pre tags that will be used for highlighting . 
sets the post tags that will be used for highlighting . 
sets type of highlighter to use . 
Sets what fragmenter to use to break up text that is eligible for highlighting . 
Sets a query to be used for highlighting instead of the search query . 
sets this to true when using the highlighterType <tt> fvh </tt> and you want to provide highlighting on filter clauses in your query . 
sets to true to cause a field to be highlighted only if a query matches that field . 
Sets the size of the fragment to returns from the beginning of the field if there are no matches to highlight and the field does n't also define noMatchSize . 
Sets the maximum number of phrases the fvh will consider if the field does n't also define phraseLimit . 
Adds a field to be highlighted with default fragment size of 100 characters , and default number of fragments of 5 using the default encoder @param name The field to highlight 
sets a tag scheme that encapsulates a built in pre and post tags . 
sets encoder for the highlighting are <tt> styled </tt> and <tt> default </tt> . 
sets the matched fields to highlight against this field data . 
Returns bytes reference , also un compress the source if needed . 
Sets representation , might be compressed ... 
returns the fields without handling null cases 
returns a view of the additional query collectors that should be run for this context . 
Sets if this shard search needs to be profiled or not @param profile True if the shard should be profiled 
Returns true if this shard search is being profiled or not 
Returns the cache key for this shard search request , based on its content 
Sets the post processed values . 
gets number of documents containing the field 
gets sum of the number of words over all documents that were indexed 
gets the sum of doc frequencies over all words that appear in any document that has the field . 
Returns a TermInfo object that can be used to access information on specific terms . 
Returns a TermInfo object that can be used to access information on specific terms . 
gets the document frequency of the term 
gets the lucene term vectors .  
Returns the values associated with the path . 
adds other 's timings into this breakdown @param other Another Breakdown to merge with this one 
Returns the timing breakdown for this particular query node 
Returns a list of all profiled children queries 
gets the current profiler . 
Creates a human-friendly representation of the Collector name . 
returns the wrapped collector . 
returns the total time spent on this collector . 
sets the collector that is associated with this profiler . 
returns the current root Collector for this search 
Returns the profiled results for this search , or potentially null if result was empty @return The profiled results , or null 
Sets the finalized profiling results for this query @param shardResults The finalized profile 
Returns true iff the result has hits 
Sets the original query weight for rescoring . 
Gets the original query weight for rescoring . 
Sets the original query weight for rescoring . 
Gets the original query weight for rescoring . 
Sets the original query score mode . 
Gets the original query score mode . 
Returns the name of this rescorer 
Returns bytes reference , also un compress the source if needed . 
Returns bytes reference , also un compress the source if needed . 
Returns the nested field in the source this hit originates from 
Returns the offset in the nested array of objects in the source this hit 
Returns the next child nested level if there is any , otherwise null is returned . 
returns the hit as the provided position . 
Returns the number of active contexts in this SearchService 
Returns true if the value matches the predicate 
Returns a DocIdSet per segments containing the matching docs for the specified slice . 
Returns the document field this sort should be based on . 
Sets the value when a field is missing in a doc . 
Returns the value used when a field is missing in a doc . 
sets the type to use in case the current field is not mapped in an index . 
Returns the type to use in case the current field is not mapped in an index . 
Returns what values to pick in the case a document contains multiple values for the targeted sort field . 
Sets the nested filter that the nested objects should match with in order to be taken into account for sorting . 
Returns the nested filter that the nested objects should match with in order to be taken into account for sorting . 
Sets the nested path if sorting occurs on a field that is inside a nested object . 
Returns the nested path if sorting occurs in a field that is inside a nested object . 
Returns the geo point like field the distance based sort operates on . 
Returns the points to creates the range distance facets from . 
Returns the geo distance type used to compute the distance . 
Returns the distance unit to use . 
Sets validation method for this sort builder . 
Returns the validation method to use for this sort builder . 
Returns which distance to use for sorting in the case a document contains multiple geo points . 
Sets the nested filter that the nested objects should match with in order to be taken into account for sorting . 
Returns the nested filter that the nested objects should match with in order to be taken into account for sorting . 
Sets the nested path if sorting occurs on a field that is inside a nested object . 
Returns the nested path if sorting occurs on a field that is inside a nested object . 
gets the script used in this sort . 
gets the type used in this sort . 
gets the sort mode . 
Sets the nested filter that the nested objects should match with in order to be taken into account for sorting . 
Gets the nested filter . 
Sets the nested path if sorting occurs on a field that is inside a nested object . 
Gets the nested path . 
sets the order of sorting . 
Returns total in-heap bytes used by all suggesters . 
Sets the prefix to provide completions for . 
Sets a regular expression pattern for prefixes to provide completions for . 
sets the name of the field to use 
Returns the category of the context 
Returns if the context should be treated as a prefix 
Returns the query-time boost of the context 
Sets the category of the category . 
Sets if the context should be treated as a prefix or not . 
Sets the query-time boost of the context . 
Returns a context mapping by its name 
sets the precision use o make suggestions @param meters precision as distance in meters @return this 
sets the precision use o make suggestions @param level maximum length of geohashes @return this 
sets the name of the field containing a geolocation to use @param fieldName name of the field @return this 
Returns the geo point of the context 
Returns the query-time boost of the context 
Returns the precision levels at which geohash cells neighbours are considered 
Sets the query-time boost for the context Defaults to 1 
Sets the precision level for computing the geohash from the context geo point . 
Sets the precision levels at which geohash cells neighbours are considered . 
Sets the geo point of the context . 
Returns the maximum number of edits 
Returns if transpositions option is sets if transpositions is sets , then swapping one character for another counts as one edit instead of two . 
Returns the length of input prefix after which edits are applied 
Returns the minimum length of the input prefix required to apply any edits 
Returns the maximum automaton states allowed for fuzzy expansion 
Sets the minimum length of input string before fuzzy suggestions are returned , defaulting to 3 . 
Sets the minimum length of the input , which is not checked for fuzzy alternatives , defaults to 1 
Sets the maximum automaton states allowed for the fuzzy expansion 
Returns the maximum automaton states allowed for fuzzy expansion 
Sets the maximum automaton states allowed for the regular expression expansion 
Returns total in-heap bytes used by all suggesters . 
returns the builder from which the term is derived . 
sets the name of the field to use 
adds value to the default values of the mapping 
adds sets of default values to the mapping 
adds sets of default values to the mapping 
creates a new geolocation query from a given GeoPoint @param point query location @return new geolocation query 
creates a new geolocation query from a given geocoordinate @param lat latitude of the location @param lon longitude of the location @return new geolocation query 
creates a new geolocation query from a given geohash @param geohash geohash of the location @return new geolocation query 
sets the precision use o make suggestions @param meters precision as distance in meters @return this 
sets the precision use o make suggestions @param level maximum length of geohashes @return this 
sets neighborhood usage @param neighbors should neighbor cells also be valid @return this 
sets a default location that should be used , if no location is provided by the query @param geohash geohash of the default location @return this 
sets a default location that should be used , if no location is provided by the query @param geohashes geohash of the default location @return this 
sets a default location that should be used , if no location is provided by the query @param lat latitude of the default location @param lon longitude of the default location @return this 
sets a default location that should be used , if no location is provided by the query @param point location @return this 
sets the name of the field containing a geolocation to use @param fieldName name of the field @return this 
Sets how similar the suggested terms at least need to be compared to the original suggest text tokens . 
Sets the maximum suggestions to be returned per suggest text term . 
Sets how to sort the suggest terms per suggest text token . 
Sets what string distance implementation to use for comparing how similar suggested terms are . 
Sets the maximum edit distance candidate suggestions can have in order to be considered as a suggestion . 
Sets a maximum threshold in number of documents a suggest text token can exist in order to be corrected . 
Sets the number of minimal prefix characters that must match in order be a candidate suggestion . 
Sets a minimal threshold in number of documents a suggested term should appear in . 
Sets the gram size for the n-gram model used for this suggester . 
Sets the maximum percentage of the terms that at most considered to be misspellings in order to form a correction . 
gets the maxErrors setting 
Sets the separator that is used to separate terms in the bigram field . 
gets the separator that is used to separate terms in the bigram field . 
Sets the likelihood of a term being a misspelled even if the term exists in the dictionary . 
Sets the confidence level for this suggester . 
Sets an explicit smoothing model used for this suggester . 
Adds additional parameters for collate scripts . 
gets additional params for collate script 
Sets whether to prune suggestions after collation 
Gets whether to prune suggestions after collation 
Sets the text to provide suggestions for . 
Gets the global suggest text 
gets the text for this suggestion 
gets the prefix for this suggestion 
gets the regex for this suggestion 
Sets the analyzer to analyse to suggest text with . 
Sets the maximum suggestions to be returned per suggest text term . 
Sets the maximum number of suggested term to be retrieved from each individual shard . 
gets the suggest mode setting . 
gets the accuracy setting . 
Sets how to sort the suggest terms per suggest text token . 
gets the sort setting . 
Sets what string distance implementation to use for comparing how similar suggested terms are . 
gets the string distance implementation setting . 
Sets the maximum edit distance candidate suggestions can have in order to be considered as a suggestion . 
gets the maximum edit distance setting . 
gets the factor for inspecting more candidate suggestions setting . 
Sets a maximum threshold in number of documents a suggest text token can exist in order to be corrected . 
gets the maximum term frequency threshold setting . 
Sets the number of minimal prefix characters that must match in order be a candidate suggestion . 
gets the minimum prefix length that must match setting . 
gets the minimum length of a text term to be corrected setting . 
Sets a minimal threshold in number of documents a suggested term should appear in . 
gets the minimal threshold for the frequency of a term appearing in the document sets setting . 
Adds restore completion listener This listener is called for each snapshot that finishes restore operation in the cluster . 
Removes restore completion listener This listener is called for each snapshot that finishes restore operation in the cluster . 
Returns restore operation cause @return restore operation cause 
Returns repository name @return repository name 
Returns snapshot name @return snapshot name 
returns the list of indices to be restored @return the list of indices 
Returns indices option flags @return indices options flags 
Returns rename pattern @return rename pattern 
Returns replacement pattern @return replacement pattern 
Returns repository-specific restore settings @return restore settings 
Returns true if global state should be restore during this restore operation @return restore global state flag 
Returns true if incomplete indices will be restored @return partial indices restore flag 
Returns true if aliases should be restore during this restore operation @return restore aliases state flag 
Returns index settings that should be changed on restore @return restore aliases state flag 
Returns index settings that that should n't be restored @return restore aliases state flag 
returns master node timeout @return master node timeout 
Gets the repository name for the snapshot . 
Gets the snapshot id for the snapshot . 
Returns snapshot name @return snapshot name 
Returns the snapshot UUID @return snapshot uuid 
Returns snapshot id @return snapshot id 
Returns snapshot state @return snapshot state 
Returns snapshot failure reason @return snapshot failure reason 
Returns indices that were included into this snapshot @return list of indices 
Returns time when snapshot started @return snapshot start time 
Returns time when snapshot ended Can be 0L if snapshot is still running @return snapshot end time 
Returns total number of shards that were snapshotted @return number of shards 
Returns total number of shards that were successfully snapshotted @return number of successful shards 
Returns shard failures @return shard failures 
Returns the version of elasticsearch that the snapshot was created with @return version of elasticsearch that the snapshot was created with 
Returns snapshot REST status 
Returns index where failure occurred @return index 
Returns shard id where failure occurred @return shard id 
Returns reason for the failure @return reason for the failure 
Returns REST status corresponding to this failure @return REST status 
Returns node id where failure occurred @return node id 
Returns status of shards that are snapshotted on the node and belong to the given snapshot This method is executed on data node @param snapshot snapshot @return map of shard id to snapshot status 
Creates shard snapshot @param snapshot snapshot @param snapshotStatus snapshot status 
Returns a list of snapshots from repository sorted by snapshot creation date @param repositoryName repository name @param snapshotIds snapshots for which to fetch snapshot information @param ignoreUnavailable if true , snapshots that could not be read will only be logged with a warning , if false , they will throw an error @return list of snapshots 
Returns a list of currently running snapshots from repository sorted by snapshot creation date @param repositoryName repository name @return list of snapshots 
Creates snapshot in repository and updates snapshot metadata record with list of shards that needs to be processed . 
Returns status of the currently running snapshots This method is executed on master node @param repository repository id @param snapshots list of snapshots that will be used as a filter , empty list means no snapshots are filtered @return list of metadata for currently running snapshots 
Returns list of indices with missing shards , and list of indices that are closed @param shards list of shard statuses @return list of failed and closed indices 
Removes record of running snapshot from cluster state @param snapshot snapshot @param snapshotInfo snapshot info if snapshot was successful @param e exception if snapshot failed 
Removes record of running snapshot from cluster state and notifies the listener when this action is complete @param snapshot snapshot @param failure exception if snapshot failed @param listener listener to notify when snapshot information is removed from the cluster state 
Adds snapshot completion listener @param listener listener 
Removes snapshot completion listener @param listener listener 
Sets the list of indices to be snapshotted @param indices list of indices @return this request 
Sets repository-specific snapshot settings @param settings snapshot settings @return this request 
sets to true if global state should be stored as part of the snapshot @param includeGlobalState true if global state should be stored as part of the snapshot @return this request 
Sets master node timeout @param masterNodeTimeout master node timeout @return this request 
Sets the indices options @param indicesOptions indices options @return this request 
sets to true if partial snapshot should be allowed @param partial true if partial snapshots should be allowed @return this request 
Returns cause for snapshot operation @return cause for snapshot operation 
Returns the repository name 
Returns the snapshot name 
Returns the list of indices to be snapshotted @return the list of indices 
Returns indices options @return indices options 
Returns repository-specific settings for the snapshot operation @return repository-specific settings 
Returns true if global state should be stored as part of the snapshot @return true if global state should be stored as part of the snapshot 
Returns true if partial snapshot should be allowed @return true if partial snapshot should be allowed 
Returns master node timeout @return master node timeout 
Returns code that represents the snapshot state @return code for the state 
Returns true if this task should be automatically cancelled if the coordinating node that requested this task left the cluster . 
gets the instance of NoopActionListener cast appropriately . 
Returns the task start time 
Returns id of the parent task or NO_PARENT_ID if the task does n't have any parent tasks 
Returns the task start time 
Returns the task running time 
Returns true if the task supports cancellation 
Returns the parent task id 
Returns the list of currently running tasks on the node 
Returns the list of currently running tasks on the node that can be cancelled 
Returns a task with given id , or null if the task is not found . 
Returns a cancellable task with given id , or null if the task is not found . 
Returns the number of currently banned tasks . 
Removes the ban for the specified parent task . 
Returns a sets of nodes with child tasks where this task should be cancelled if cancellation was successful , null otherwise . 
Returns a sets of nodes with child tasks where this task should be cancelled if cancellation was successful , null otherwise . 
gets the task that this wraps . 
gets the error that finished this task . 
gets the response that this task finished with . 
returns an executor settings object from the node-level settings . 
gets the generic executor . 
gets the executor with the given name . 
Returns true if the given service was terminated successfully . 
Returns true if the given pool was terminated successfully . 
Returns the channels local address 
Returns an address from its string representation . 
Returns <tt> true </tt> if the node is connected . 
Returns count of currently open connections 
sets a reference to task that caused this task to be run . 
sets a reference to task that created this request . 
gets a reference to the task that created this request . 
Returns the task object that should be used to keep track of the processing of the request . 
Returns optional description of the request to be displayed by the task manager 
creates a new instance of the returns type from the remote call . 
Returns the appropriate response handler or null if not found . 
Returns the smallest version between the 2 . 
Returns the version given its string representation , current version if the argument is null or empty 
Returns the minimum compatible version based on the current version . 
Returns true iff this version is an alpha version Note : This has been introduced in elasticsearch version 5 . 
Returns a list of listeners 
Returns a formatter that outputs only those fields specified . 
Creates a date using the calendar date format . 
Creates a date using the ordinal date format . 
Creates a date using the calendar date format . 
Adds the time fields to the builder . 
Returns a generic ISO date parser for parsing dates with a possible zone . 
Returns a generic ISO date parser for parsing local dates . 
Returns a generic ISO date parser for parsing dates . 
Returns a generic ISO time parser for parsing times with a possible zone . 
Returns a generic ISO time parser for parsing local times . 
Returns a generic ISO time parser . 
Returns a generic ISO datetime parser which parses either a date or a time or both . 
Returns a generic ISO datetime parser where the date is mandatory and the time is optional . 
Returns a generic ISO datetime parser where the date is mandatory and the time is optional . 
Returns a formatter for a four digit year . 
Returns a formatter for a four digit year and two digit month of year . 
Returns a formatter for a four digit year , two digit month of year , and two digit day of month . 
Returns a formatter for a four digit weekyear . 
Returns a formatter for a four digit weekyear and two digit week of weekyear . 
Returns a formatter for a four digit weekyear , two digit week of weekyear , and one digit day of week . 
Returns a formatter for a two digit hour of day . 
Returns a formatter for a two digit hour of day and two digit minute of hour . 
Returns a formatter for a two digit hour of day , two digit minute of hour , and two digit second of minute . 
Returns a formatter that combines a full date and two digit hour of day . 
Returns a formatter that combines a full date , two digit hour of day , and two digit minute of hour . 
Returns a formatter that combines a full date , two digit hour of day , two digit minute of hour , and two digit second of minute . 
Returns the number of events that satisfy the criteria across all nodes @param actionMasks action masks to match @return number of events that satisfy the criteria 
Returns all events that satisfy the criteria across all nodes @param actionMasks action masks to match @return number of events that satisfy the criteria 
Returns true if there are any ancient segments . 
Returns true if there are any old but not ancient segments . 
Creates cluster state with several shards and one replica and all shards STARTED . 
Creates cluster state with and index that has one shard and as many replicas as numberOfReplicas . 
Creates cluster state with and index that has one shard and as many replicas as numberOfReplicas . 
Creates a cluster state with no index 
Creates a cluster state where local node and master node can be specified @param localNode node in allNodes that is the local node @param masterNode node in allNodes that is the master node . 
creates a basic cluster state with a given sets of indices 
creates a non-initialized cluster state 
creates a modified cluster state from another one , but with some number of indices added and deleted . 
creates a new DiscoveryNode 
creates the metadata for a cluster state . 
creates the index metadata for a given index . 
creates the index metadata for a given index , with the specified version . 
creates the routing table for a cluster state . 
creates a list of indices to adds 
creates a list of indices to delete from a list that already belongs to a particular cluster state . 
Returns a random global block 
Returns list of parts from metadata 
removes the part from metadata 
Returns a random part with the specified name 
creates map based on JDK-based map 
gets element at key `` key '' in map `` map '' 
returns size of given map 
creates random shape that is put under test 
creates & fill byte -LSB- -RSB- with randomized data 
creates address without any lookups . 
creates scoped ipv6 address without any lookups . 
Adds an asymmetric break between a master and one of the nodes and makes sure that the node is removed form the cluster , that the node start pinging and that the cluster reforms when healed . 
creates an object clone of node , so it will be a different object instance 
Creates a shadow replica index and asserts that the index creation was acknowledged . 
creates an object mapper , which is about 100x harder than it should be ... 
adds a mutation that will be tested for all expected semantics of equality and compatibility . 
Sets the null value used by the modifier for null value testing . 
creates a default constructed fieldtype 
Creates a random function score query using only constructor params . 
creates a random decay function setting all of its constructor parameters randomly . 
Returns true if any of the nodes used a noop breaker 
sets offset so day buckets start at 6am . 
creates aggregations as they might come from three different shards and returns as list . 
creates random highlighter , renders it to xContent and back to new instance that should be equal to original 
creates random highlight builder that is put under test 
creates array of unique Strings . 
creates random rescorer , renders it to xContent and back to new instance that should be equal to original 
creates a new parser from the rescorer string representation and reset context with it 
creates random shape that is put under test 
Returns random sort that is put under test 
Returns mutated version of original so the returned sort is different in terms of equals/hashcode 
returns a field type . 
returns the minimal value from a sets of values . 
returns a random suggestion builder , setting the common options randomly 
creates random suggestion builder , renders it to xContent and back to new instance that should be equal to original 
creates random model that is put under test 
creates random model that is put under test 
creates random candidate generator , renders it to xContent and back to new instance that should be equal to original 
creates random model that is put under test 
creates random suggestion builder , renders it to xContent and back to new instance that should be equal to original 
creates random suggestion builder , renders it to xContent and back to new instance that should be equal to original 
Creates a random TermSuggestionBuilder 
creates a small random rectangle by default to keep shape test performance at bay 
gets the number of documents 
gets the number of samples for the given field . 
gets the mean for the given field 
gets the variance for the given field 
gets the distribution skewness for the given field 
gets the distribution shape for the given field 
gets the covariance between the two fields 
gets the correlation between the two fields 
returns the total document count 
returns the field mean 
returns the field variance 
returns the skewness of the distribution 
returns the kurtosis of the distribution 
returns the covariance between field x and field y 
returns the correlation coefficient of field x and field y 
returns the fied count for the requested field 
returns the mean for the requested field 
returns the variance for the requested field 
returns the skewness for the requested field 
returns the kurtosis for the requested field 
returns the covariance between two fields 
returns the correlation coefficient between two fields 
returns the value for two fields in an upper triangular matrix , regardless of row col location . 
Sets the field to use for this aggregation . 
Gets the field to use for this aggregation . 
Sets the format to use for the output of the aggregation . 
Gets the format to use for the output of the aggregation . 
Sets the value to use when the aggregation finds a missing value in a document 
Gets the value to use when the aggregation finds a missing value in a document 
returns a script object with the given vars from the compiled script object 
adds a search template request to execute . 
adds a search template request to execute . 
Returns name of next lambda 
Returns the original Iterable if it is already a Collection . 
Returns the original Iterable if it is already a List . 
Returns the value for the cumulative total number of statements that can be made in all loops in a script before an exception is thrown . 
sets the cumulative total number of statements that can be made in all loops . 
Returns true if the compiler should be picky . 
sets to true if compilation should be picky . 
Returns initial call site depth . 
Returns an array length getter MethodHandle for the given array type 
Returns an implementation of interfaceClass that calls receiverClass.name This is just like LambdaMetaFactory , only with a dynamic type . 
Returns a method handle to an implementation of clazz , given method reference signature . 
gets the field name used to lookup up the MethodHandle for a function . 
Returns a method handle to do an array store . returns value is undefined and should be ignored . 
Returns a method handle to do an array load . 
Returns MethodType for this method . 
Returns whether or not a non-array type exists . 
Returns whether or not a type exists without an exception . 
Gets the type given by its name 
Creates an array type from the given Struct . 
adds classes from definition . returns hierarchy 
Adds a new signature to the definition . 
Returns an appropriate method handle for a binary operator , based on promotion of the LHS and RHS arguments 
Returns a generic method handle for any operator , that can handle all valid signatures , nulls , corner cases 
Returns true if you should ask LambdaMetaFactory to construct a bridge for the interface signature 
Adds a new synthetic method to be written . 
Adds a new constant initializer to be written 
Returns the current synthetic methods 
Returns the current initializers 
Returns the sets of statement boundaries 
Creates a new function scope inside the current scope 
Creates a new main method scope 
Creates a new program scope : the list of methods . 
Returns null if the method does not exist . 
Creates a new variable . 
Returns the top-level program scope . 
Returns the parent scope 
Returns null if the variable does not exist . 
Returns null if the method does not exist . 
returns the script 's name 
returns the character offset 
Adds all variable names referenced to the variable sets . 
Returns a value based on the number of elements previously placed on the stack to load/store a certain piece of a variable/method chain . 
Returns true if this node or a sub-node of this node can be optimized with rhs actual type to avoid an unnecessary cast . 
Returns reference to resolve at link-time 
Returns the types of captured parameters . 
Returns the number of captured parameters 
sets a variable for the script to be run against . 
sets the next aggregation value . 
Adds stack trace and other useful information to exceptiosn thrown from a Painless script . 
returns true for methods that are part of the runtime 
Sets the scorer to be accessible within a script . 
Sets the current document . 
Sets the current source . 
Sets the default indices for any percolate request that does n't have indices defined . 
Sets the default document type for any percolate request that does n't have a document type sets . 
Sets the type of the document to percolate . 
Sets the preference to execute the search . 
Sets the request body definition for this percolate request as raw bytes . 
Sets whether this percolate request should only count the number of percolator queries that matches with the document being percolated and do n't keep track of the actual queries that have matched . 
Sets the type of the document to percolate . 
Sets the preference to execute the search . 
Sets the percolate request definition directly on the request . 
Sets the document to run the percolate queries against . 
Sets a query to reduce the number of percolate queries to be evaluated and score the queries that match based on this query . 
Adds a sort builder . 
adds an aggregation definition . 
adds an aggregation definition . 
Sets the document to be percolated . 
Sets the document to be percolated . 
Sets the document to be percolated . 
Sets the document to be percolated . 
Sets the document to be percolated . 
gets the backoff policy for use with retries . 
adds to the list of indices that were modified by this request . 
sets the last returned scrollId . 
Sets abortOnVersionConflict based on REST-friendly names . 
Sets the number of shard copies that must be active before proceeding with the write .  
sets the initial delay after a rejection before retrying request . 
sets the total number of retries attempted for rejections . 
sets the throttle for this request in sub-requests per second . 
sets the source indices . 
sets the query that will filter the source . 
sets the throttle for this request in sub-requests per second . 
sets the destination index . 
sets the destination index and type . 
sets the throttle to apply to all matching requests in sub-requests per second . 
sets the throttle to apply to all matching requests in sub-requests per second . 
sets the id of the last scroll . 
Returns null if the source did n't come back from the search , usually because it source was n't stored at all . 
sets the ingest pipeline to sets on index requests made by this action . 
sets the matches for the number of batches . 
sets the matcher for the size of the failures list . 
sets the expected size of the failures list . 
Creates a hit source that does n't make the remote request and instead returns data from some files . 
Returns the sets of allowed origins . 
Returns whether the input origin is allowed by this configuration . 
Gets the maxAge setting . 
Returns the allowed sets of Request Methods . 
Returns the allowed sets of Request Headers . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Creates a Builder instance with it 's origin sets to ' ' . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Returns the remote address where this rest request channel is `` connected to '' . 
Returns the local address where this request channel is bound to . 
Returns the sets of allowed origins . 
Returns whether the input origin is allowed by this configuration . 
Gets the maxAge setting . 
Returns the allowed sets of Request Methods . 
Returns the allowed sets of Request Headers . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Creates a Builder instance with it 's origin sets to ' ' . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Returns the remote address where this rest request channel is `` connected to '' . 
Returns the local address where this request channel is bound to . 
Returns the number of chars required to encode the given bytes . 
Returns the number of bytes required to decode the given char sequence . 
gets variation patterns @return string array of variations 
Creates mock EC2 endpoint providing the list of started nodes to the DescribeInstances API call 
adds a AWS API Signer . 
Adds a node attribute for the ec2 availability zone . 
Creates mock EC2 endpoint providing the list of started nodes to the DescribeInstances API call 
returns a collection of running instances within the same GCE project @return a collection of running instances within the same GCE project 
creates repository with wrong or correct container name @param container Container name we want to creates @param correct Is this container name correct 
returns true if the given bucket exists @param bucketName name of the bucket @return true if the bucket exists , false otherwise 
Returns true if the blob exists in the bucket @param blobName name of the blob @return true if the blob exists , false otherwise 
Creates a client that can be used to manage Google Cloud Storage objects . 
adds a AWS API Signer . 
Creates a test environment with bin , config and plugins directories . 
creates a fake jar file with empty class files 
creates a plugin . 
creates an index and index some docs 
Creates a Command to test execution . 
Returns all output written to this terminal . 
creates a fake NodeStats for the given node and usage 
Sets a new default filesystem for testing 
creates a new initializing shard . 
creates a new initializing shard . 
creates a new initializing shard . 
creates a new initializing shard . 
creates a new initializing shard . 
creates a new initializing shard . 
creates a new initializing shard . 
creates a new empyu shard and starts it . 
creates a new empty shard and starts it . 
Returns a random field name . 
Returns a random leaf field name . 
Returns a randomly selected existing field name out of the fields that are contained in the document provided as an argument . 
Adds a random non existing field to the provided document and associates it with the provided value . 
adds an active search context to the list of tracked contexts . 
creates the query that is being tested 
sets to -1 to have no limit . 
sets to -1 to have no limit . 
Returns the ID sets of all documents indexed by this indexer run 
Returns the a simple pattern that matches all `` new '' nodes in the cluster . 
Returns the a simple pattern that matches all `` old '' / `` backwardss '' nodes in the cluster . 
Returns the number of current version data nodes in the cluster 
Returns the number of former version data nodes in the cluster 
returns true if some live threads were found . 
sets of all nodes that can participate in disruptions 
Returns true iff network should be disrupted between the two nodes 
Returns expected time to heal after disruption has been removed . 
Returns the CloseAction to execute on the actual engine . 
Creates a randomized index template . 
Creates one or more indices and asserts that the indices are acknowledged . 
Sets the cluster 's minimum master node and make sure the response is acknowledge . 
Returns true iff the given index exists otherwise false 
Returns a random admin client . 
Sets or unsets the cluster read_only mode 
Returns a collection of plugins that should be loaded on each node . 
Returns a collection of plugins that should be loaded when creating a transport client . 
Returns a function that allows to wrap / filter all clients that are exposed by the test cluster . 
returns the mock plugins the cluster should use 
Returns the client ratio configured via 
Returns path to a random directory that can be used to creates a temporary file system repo 
Returns path to a random directory that can be used to creates a temporary file system repo 
returns settings that could be used to start a node that has the given zipped home directory . 
Creates a new client if the method is invoked for the first time in the context of the current test scope . 
Returns a client to the single-node cluster . 
Returns the single test nodes name . 
returns a reference to the singleton node . 
gets an instance for a particular class using the injector of the singleton node . 
creates a new index on the singleton node with empty index settings . 
creates a new index on the singleton node with the provided index settings . 
creates a new index on the singleton node with the provided index settings . 
creates a new index on the singleton node with the provided index settings . 
creates a new search context . 
Returns a `` scaled '' number of iterations for loops which can have a variable iteration count . 
Returns a random number of temporary paths . 
returns consistent index settings for the provided index version . 
Returns size random values 
Returns size random values 
Returns true iff assertions for elasticsearch packages are enabled 
Returns the suite failure marker : internal use only ! 
Creates an TestAnalysis with all the default analyzers configured . 
Creates an TestAnalysis with all the default analyzers configured . 
Creates an TestAnalysis with all the default analyzers configured . 
Creates an IndicesModule for testing with the given mappers and metadata mappers . 
returns a suffix string based on the node role . 
Returns the common node name prefix for this test cluster . 
Returns a node client to a data node in the cluster . 
Returns a node client to the current master node . 
Returns a node client to random node but not the master . 
Returns a client to a coordinating only node 
Returns a transport client 
Returns a node client to a given node . 
Returns a `` smart '' node client to a random node in the cluster 
Returns a random node that applies to the given predicate . 
Returns an Iterable to all instances for the given class > T < across all nodes in the cluster . 
Returns an Iterable to all instances for the given class > T < across all data nodes in the cluster . 
Returns an Iterable to all instances for the given class > T < across all data and master nodes in the cluster . 
Returns a reference to the given nodes instances of the given class > T < 
Returns a reference to a random nodes instances of the given class > T < 
Returns true if a node was found to stop , false otherwise . 
Returns the name of the current master node in the cluster . 
Returns the name of the current master node in the cluster and executes the request via the node specified in the viaNode parameter . 
Returns a sets of nodes that have at least one shard of the given index . 
Returns a predicate that only accepts settings of nodes with one of the given names . 
Returns false by default . 
Returns true by default . 
Returns plugins that should be loaded on the node 
Returns plugins that should be loaded in the transport client 
gets a client , building it if it has n't been built for this test . 
gets the client used for test administrative actions . 
Returns whether to preserve the indices created during this test on completion of this test . 
Returns the REST client settings used for admin actions like cleaning up after the test has completed . 
gets the list of hosts in the cluster . 
Creates the embedded REST client when needed . 
Returns the current es version as a string 
gets a list of all of the values of all warning headers returned in the response . 
Returns the body properly parsed depending on the content type . 
Returns the body as a string 
Returns a new FileSystem to read REST resources , or null if they are available from classpath . 
Returns the json files found within the directory provided as argument . 
Returns the yaml files found within the paths provided . 
Returns the object corresponding to the provided path if present , null otherwise 
Returns the object corresponding to the provided path if present , null otherwise 
Returns the supported http methods given the rest parameters provided 
sets the warning headers that we expect from this response . 
gets the location in the test that this was defined . 
Returns a client connected to any node in the cluster 
Returns the number of nodes in the cluster . 
Returns the number of data nodes in the cluster . 
Returns the number of data and master eligible nodes in the cluster . 
Returns the http addresses of the nodes within the cluster . 
Removes all templates , except the templates defined in the exclude 
Returns the cluster name 
returns all requests captured so far .  
Returns all requests captured so far . 
returns all requests captured so far , grouped by target node .  
Returns all requests captured so far , grouped by target node . 
Returns the original Transport service wrapped by this mock transport service . 
Adds a rule that will cause every send request to fail , and each new connect since the rule is added to fail as well . 
Adds a rule that will cause every send request to fail , and each new connect since the rule is added to fail as well . 
Adds a rule that will cause matching operations to throw ConnectTransportExceptions 
Adds a rule that will cause matching operations to throw ConnectTransportExceptions 
Adds a rule that will cause matching operations to throw ConnectTransportExceptions 
Adds a rule that will cause matching operations to throw ConnectTransportExceptions 
Adds a rule that will cause ignores each send request , simulating an unresponsive node and failing to connect once the rule was added . 
Adds a rule that will cause ignores each send request , simulating an unresponsive node and failing to connect once the rule was added . 
Adds a rule that will cause ignores each send request , simulating an unresponsive node and failing to connect once the rule was added . 
Adds a rule that will cause ignores each send request , simulating an unresponsive node and failing to connect once the rule was added . 
Adds a new delegate transport that is used for communication with the given transport service . 
Adds a new delegate transport that is used for communication with the given transport address . 
Returns immutable list of all known versions . 
Gets the most recent sticky event for the given type . 
removes and gets the recent sticky event for the given event type . 
Removes the sticky event if it equals to the given event . 
Removes all sticky events . 
Adds an index generated by EventBus ' annotation preprocessor . 
Returns either a new Honeycomb + or a new support library DialogFragment . 
returns the display name of the test . 
Returns a new DataSource factory . 
Returns a new HttpDataSource factory . 
Returns the channel count of output audio . 
Returns the sample rate of output audio . 
Returns whether the underlying library is available , loading it if necessary . 
Returns the version of the underlying library if available , or null otherwise . 
Returns whether the underlying library supports the specified MIME type . 
Sets data to be parsed by libflac . 
Sets data to be parsed by libflac . 
Returns the position of the next data to be decoded , or -1 in case of error . 
Returns whether the underlying library is available , loading it if necessary . 
Returns the version of the underlying library if available , or null otherwise . 
Sets the output mode for frames rendered by the decoder . 
Returns whether the underlying library is available , loading it if necessary . 
Returns the version of the underlying library if available , or null otherwise . 
Returns the configuration string with which the underlying library was built if available , or null otherwise . 
Sets the output buffer to be rendered . 
sets a frame to be rendered . 
Returns the initial two pages of bytes which by spec contain the three vorbis header packets : identification , comment and setup header . 
Returns a valid vorbis identification header in bytes . 
Returns a valid vorbis comment header with 3 comments including utf8 chars in bytes . 
Returns a valid vorbis setup header in bytes . 
Returns the size in bytes of the given AC-3 syncframe . 
Returns the size in bytes of the given E-AC-3 syncframe . 
Returns the number of audio samples in an AC-3 syncframe . 
Returns the number of audio samples represented by the given E-AC-3 syncframe . 
Returns the current audio capabilities for the device . 
Returns the maximum number of channels the device can play at the same time . 
Returns whether it 's possible to play audio in the specified format using encoded passthrough . 
Returns whether the audio track has more data pending that will be played back . 
Sets the playback parameters . 
Sets the playback volume . 
Returns whether to work around problems with passthrough audio tracks .  
Returns whether the audio track should behave as though it has pending data . 
Returns the configured playback speed according to the used Playback Parameters . 
Returns the number of audio samples represented by the given DTS frame . 
Returns the size in bytes of the given DTS frame . 
Returns whether encoded audio passthrough should be used for playing back the input format . 
Creates a decoder for the given format . 
Returns the format of audio buffers output by the decoder . 
Returns the index of the renderer within the player . 
Returns whether the upstream source is ready . 
Returns whether the specified flag has been sets on this buffer . 
Returns the name of the decoder . 
Sets the initial size of each input buffer . 
Creates a new input buffer . 
Creates a new output buffer . 
Returns whether this initialization data applies to the specified scheme . 
Returns the current state of the session . 
Returns the cause of the error state . 
Creates an instance for the specified scheme UUID . 
Returns the current state of the player . 
Returns the current manifest . 
Returns the index of the window currently being played . 
Returns the playback position in the current window , in milliseconds . 
Returns an estimate of the position in the current window up to which data is buffered , in milliseconds . 
Returns an estimate of the percentage in the current window up to which data is buffered , or 0 if no estimate is available . 
Sets a source identifier for subsequent samples . 
Returns the current absolute write index . 
Returns whether the buffer is empty . 
Returns the current absolute read index . 
Sets a listener to be notified of changes to the upstream format . 
Returns the current absolute write index . 
Returns the current absolute read index . 
Returns whether the queue is empty . 
Returns the number of bytes occupied by the most recently parsed varint . 
Returns the time in microseconds corresponding to a table of contents position , which is interpreted as a percentage of the stream 's duration between 0 and 100 . 
Adds a child leaf to this container . 
Adds a child container to this container . 
Returns the child leaf of the given type . 
Returns the child container of the given type . 
Returns the total number of leaf/container children of this atom with the given type . 
Returns codec-specific initialization data contained in an esds box . 
Returns the number of samples . 
Returns the size for the next sample . 
Returns whether samples have a fixed size . 
Returns DrmInitData from leaf atoms . 
Returns the sample index of the closest synchronization sample at or before the given timestamp , if one is available . 
Returns the sample index of the closest synchronization sample at or after the given timestamp , if one is available . 
Returns the duration of the given audio packet . 
Returns the reading position in bits . 
Sets the reading position in bits . 
Returns the number of remaining bits . 
Returns the limit in bits . 
Returns whether seeking is supported . 
Returns the duration of the stream in microseconds . 
Sets the state to STATE_FINDING_SAMPLE . 
Sets the state to STATE_READING_SAMPLE . 
Sets the state to STATE_READING_ADTS_HEADER . 
Returns whether the buffer currently holds a complete NAL unit of the target type . 
Returns the stream info read from the available descriptors . 
Returns the duration in microseconds of this WAV . 
Returns the bytes per frame of this WAV . 
Returns the bitrate of this WAV . 
Returns the sample rate in Hertz of this WAV . 
Returns the number of audio channels in this WAV . 
Returns the position in bytes in this WAV for the given time in microseconds . 
Returns the time in microseconds for the given position in bytes in this WAV . 
Returns true if the data start position and size have been sets . 
Sets the start position and size in bytes of sample data in this WAV . 
Returns the PCM encoding . 
Creates an instance representing an audio passthrough decoder . 
Creates an instance . 
Returns the extent to which the renderer is capable of supporting a given format .  
Returns the maximum time to block whilst waiting for a decoded output buffer . 
Returns whether the decoder is known to fail when flushed . 
Returns whether the decoder is known to gets stuck during some adaptations where the resolution does not change .  
Returns whether the decoder is an H. 264/AVC decoder known to fail if NAL units are queued before the codec specific data . 
Returns whether the decoder is known to sets the number of audio channels in the output format to 2 for the given input format , whilst only actually outputting a single channel . 
Returns information about a decoder suitable for audio passthrough . 
Returns information about the preferred decoder for a given mime type . 
Returns whether the specified codec is usable for decoding on the current device . 
Returns the maximum frame size supported by the default H264 decoder . 
Returns whether secure decoders are explicitly listed , if present . 
Returns the capabilities of the renderer . 
Sets the index of this renderer within the player . 
Returns the current state of the renderer . 
Returns the number of renderers . 
Returns the track type that the renderer at a given index handles . 
Sets the audio volume , with 0 being silence and 1 being unity gain . 
Returns the audio volume , with 0 being silence and 1 being unity gain . 
Returns the video format currently being played , or null if no video is being played . 
Returns the audio format currently being played , or null if no audio is being played . 
Sets a listener to receive video events . 
Sets a listener to receive debug events from the video renderer . 
Sets a listener to receive debug events from the audio renderer . 
Sets an output to receive text events . 
Sets a listener to receive ID3 metadata events . 
Returns the duration of the chunk in microseconds . 
Returns the number of bytes that have been loaded . 
Returns an estimate of the position up to which data is buffered . 
Returns the next chunk to load . 
Returns the array in which the data is held . 
Returns the next chunk index . 
Returns whether the chunk has been fully loaded . 
Returns the segment number of the segment containing a given media time . 
Returns the start time of a segment . 
Returns the duration of a segment . 
Returns the segment number of the first segment . 
Returns true if segments are defined explicitly by the index . 
Returns whether a mimeType is a text sample mimeType . 
Returns the uri represented by the instance as a string . 
Returns an index if the representation provides one directly , or null otherwise . 
Returns the presentation time offset , in microseconds . 
Returns whether this is a live playback . 
Returns the track group exposed by the source . 
Returns the next chunk to load . 
Returns the media sequence number of a chunk in a new variant for a live stream variant switch . 
Returns the presentation time in microseconds of the first sample in the chunk . 
Returns the presentation time in microseconds of the last sample in the chunk 
Returns an estimate of the position up to which data is buffered for the enabled tracks . 
Returns whether data is available to be read . 
Returns the index of the chunk that contains the specified time . 
Returns the start time of the specified chunk . 
Returns the duration of the specified chunk . 
Returns the format of the track at a given index . 
Returns the index of the track with the given format in the group . 
Returns the group at a given index . 
Returns the index of a group within the array . 
Returns the event time at a specified index . 
Returns a string containing the selector . 
Returns a value in a score system compliant with the CSS Specificity rules . 
Returns whether or not this cue should be placed in the default position and rolled-up with the other `` normal '' cues . 
Returns the tag name for the given tag contents . 
Returns the number of windows in the timeline . 
Returns the number of periods in the timeline . 
Sets the data held by this window . 
Returns the default position relative to the start of the window at which to begin playback , in milliseconds . 
Returns the default position relative to the start of the window at which to begin playback , in microseconds . 
Returns the position of the start of this window relative to the start of the first period belonging to it , in milliseconds . 
Returns the position of the start of this window relative to the start of the first period belonging to it , in microseconds . 
Sets the data held by this period . 
Returns the position of the start of this period relative to the start of the window to which it belongs , in milliseconds . 
Returns the position of the start of this period relative to the start of the window to which it belongs , in microseconds . 
Returns whether the track at the specified index in the selection is blaclisted . 
Gets the current selection parameters . 
Creates an selection from this override . 
Returns whether this override contains the specified track index . 
Sets whether the renderer at the specified index is disabled . 
Returns whether the renderer is disabled . 
Returns the extent to which a renderer can support playback of the tracks associated to it . 
Returns the extent to which the format of an individual track is supported by the renderer . 
Returns true if tracks of the specified type exist and have been associated with renderers , but are all unplayable . Returns false in all other cases . 
Creates a new selection . 
Returns the number of tracks in the selection . 
Returns the format of the track at a given index in the selection . 
Returns the index in the track group of the track at a given index in the selection . 
Returns the index in the selection of the track with the specified format . 
Returns the index in the selection of the track with the specified index in the track group . 
Returns the index in the track group of the individual selected track . 
Returns the index of the selected track . 
Returns the reason for the current track selection . 
Returns optional data associated with the current track selection . 
Returns the number of chunks that should be retained in the queue . 
Returns the selection at a given index . 
Returns the selections in a newly allocated array . 
Returns the current track selections . 
sets the aspect ratio that this view should satisfy . 
Returns the player currently being controlled by this view , or null if no player is sets . 
Sets the rewind increment in milliseconds . 
Sets the fast forward increment in milliseconds . 
Sets the duration to show the playback control in milliseconds . 
Returns whether the controller is currently visible . 
Returns the player currently sets on this view , or null if no player is sets . 
Sets the rewind increment in milliseconds . 
Sets the fast forward increment in milliseconds . 
Sets the duration to show the playback control in milliseconds . 
gets the view onto which video is rendered . 
Sets the cues to be displayed by the view . 
sets the text size to a given unit and value .  
Sets the text size to be a fraction of the view 's remaining height after its top and bottom padding have been subtracted . 
Sets the text size to be a fraction of the height of this view . 
Sets whether styling embedded within the cues should be applied . 
Sets the caption style . 
Returns the total number of bytes currently allocated . 
Returns the cached spans for a given cache key . 
Returns all keys in the cache . 
Returns the total disk space in bytes used by the cache . 
Sets the content length for the given key . Returns false if the length conflicts with the existing contents of the cache . 
Creates a cache span from an underlying cache file . 
Adds a cached span to the in-memory representation . 
Returns the total number of bytes that have been read or skipped . 
Returns the current connection , or null if the source is not currently opened . 
Sets the value of a request header field . 
Returns whether the load has been canceled . 
Returns the loaded object , or null if an object has not been loaded . 
Returns the number of bytes loaded . 
Returns whether the underlying libraries are available , loading them if necessary . 
Returns the value at a specified index . 
Returns the current size of the array . 
Returns the current media position in microseconds . 
Returns the number of bits yet to be read . 
Returns the current bit offset . 
Sets the current bit offset . 
Sets the position and limit to zero . 
Returns the number of bytes yet to be read . 
Returns the limit . 
Sets the limit . 
Returns the current offset in the array , in bytes . 
Returns the capacity of the array , which may be larger than the limit . 
Sets the reading offset in the array . 
Returns whether it is possible to read an Exp-Golomb-coded integer starting from the current offset . 
Adds a new weighted value . 
Removes dot segments from the path of a URI . 
Returns true if the URI is a path to a local file or a reference to a local file . 
Returns a normalized RFC 5646 language code . 
Returns a byte array containing values parsed from the hex string provided . 
Returns a hex string representation of the given byte array . 
Returns a string with comma delimited simple names of each object 's class . 
Returns a user agent string based on the given application name and the library version . 
Returns whether the current event is an end tag with the specified name . 
Returns whether the current event is an end tag . 
Returns whether the current event is a start tag with the specified name . 
Returns whether the current event is a start tag . 
Returns the value of an attribute of the current start tag . 
Returns a maximum input size for a given format . 
Returns whether the device is known to enable frame-rate conversion logic that negatively impacts ExoPlayer . 
Sets the next action . 
Returns the sum of the skipped , dropped and rendered buffers . 
Sets a schedule to be applied during the test . 
Sets the read and peek positions . 
sets this FlexboxLayouts ' width and height depending on the calculated size of main axis and cross axis . 
sets a drawable to be used as a divider between items . 
sets a drawable to be used as a horizontal divider between items . 
sets a drawable to be used as a vertical divider between items . 
sets how dividers should be shown between items in this layout . 
sets how horizontal dividers should be shown between items in this layout . 
Sets an id that will be logged with any of the logging calls . 
gets the animation duration of 1 loop . 
gets the number of frames for the animation . 
gets the loop count of the animation . 
Creates an animator update listener that will animate the drawable directly . 
Gets the original result of the decode . 
Gets the duration of the animation . 
Gets the number of frames in the animation . 
Gets the number of loops to run the animation for . 
Gets the width of the image . 
Gets the height of the image . 
Gets the rendered width of the image . 
Gets the rendered height of the image . 
Gets info about the specified frame . 
Gets the frame index for specified timestamp . 
Gets the timestamp relative to the first frame that this frame number starts at . 
Gets the duration of the specified frame . 
Gets the frame number to use for the preview frame . 
Gets a pre-decoded frame . 
Gets whether it has the decoded frame . 
Gets the bitmap for the specified frame number . 
Gets the bitmap for the preview frame . 
Creates a new builder . 
Gets whether all the rendered frames should be held in memory disregarding other constraints . 
Sets whether all the rendered frames should be held in memory disregarding other constraints . 
Gets whether the drawable can use worker threads to optimistically prefetch frames . 
Sets whether the drawable can use worker threads to optimistically prefetch frames . 
Gets the maximum bytes that the backend can use to cache image frames in memory . 
Sets the maximum bytes that the backend can use to cache image frames in memory . 
Gets whether to enable additional verbose debugging diagnostics . 
Sets whether to enable additional verbose debugging diagnostics . 
Gets the number of frames in the image . 
Gets the duration of the animated image . 
Gets the duration of each frame of the animated image . 
Gets the number of loops to run the animation for . 
Gets the frame info for the specified frame . 
Gets the duration of the frame . 
Gets the width of the frame . 
Gets the height of the frame . 
Gets the x-offset of the frame relative to the image canvas . 
Gets the y-offset of the frame relative to the image canvas . 
Gets the underlying image . 
Gets the frame that should be used for the preview image . 
Gets a decoded frame . 
Gets whether it has the decoded frame . 
Gets the bitmap for the preview frame . 
Gets the image for the result . 
Gets the preview bitmap . 
Sets a preview bitmap . 
Gets the frame that should be used for the preview image . 
Sets the frame that should be used for the preview image . 
Gets the decoded frames . 
Sets the decoded frames . 
Gets the image for the given frame index . 
Gets the image to be reused , or null if there is no such image . 
Returns whether the specified frame is needed for rendering the next frame .  
Gets the total duration of an image by summing up the duration of the frames . 
Gets the frame index for specified timestamp . 
Returns whether this instance is closed . 
Gets the bitmap frames . 
Gets the frame durations . 
Gets the first frame . 
Creates an animator update listener that will animate the drawable directly . 
Creates the mock for the AnimatedDrawableBackend with the number of frame @param frameCount The number of frame to mock 
Gets the controller id . 
Gets the analytic tag & caller context 
Gets retry manager . 
Sets retry manager . 
Gets gesture detector . 
Sets gesture detector . 
Sets whether to display last available image in case of failure . 
Gets accessibility content description . 
Sets accessibility content description . 
Adds controller listener . 
Removes controller listener . 
Gets controller listener for internal use . 
Sets the controller viewport visibility listener 
Sets the hierarchy . 
Sets the controller overlay 
Gets the controller overlay 
Returns whether the gesture should be handled by the controller 
Sets the caller context . 
Gets the caller context . 
Sets the image request . 
Gets the image request . 
Sets the low-res image request . 
Gets the low-res image request . 
Sets the array of first-available image requests that will be probed in order . 
Sets the array of first-available image requests that will be probed in order . 
Gets the array of first-available image requests . 
Sets the data source supplier to be used . 
Gets the data source supplier if sets . 
Sets whether tap-to-retry is enabled . 
Gets whether tap-to-retry is enabled . 
Sets whether to display last available image in case of failure . 
Gets whether to retain image on failure . 
Sets whether to auto play animations . 
Gets whether to auto play animations . 
Sets the controller listener . 
Gets the controller listener 
Sets the controller viewport visibility listener . 
Gets the controller viewport visibility listener . 
Sets the accessibility content description . 
Gets the accessibility content description . 
Sets the old controller to be reused if possible . 
Gets the old controller to be reused . 
Gets the top-level data source supplier to be used by a controller . 
Creates a data source supplier for the given image request . 
Creates a data source supplier for the given image request . 
Gets the context . 
Gets the number of layers . 
Gets the drawable at the specified index . 
Sets a new drawable at the specified index , and returns the previous drawable , if any . 
Creates a copy of the drawable . 
Sets the new child drawable . 
Gets the child drawable . 
Sets various paint properties on the drawable @param drawable Drawable on which to sets the properties @param properties wrapper around mValue values to sets on the drawable 
Sets callback to the drawable . 
Gets the opacity from a color . 
Sets the duration of the current transition in milliseconds . 
Gets the transition duration . 
Returns current time . 
Gets the transformed bounds of this drawable . 
Gets the current matrix . 
Sets the matrix . 
Sets the progress bar color . 
Gets the progress bar color . 
Sets the progress bar background color . 
Gets the progress bar background color . 
Sets the progress bar padding . 
Gets the progress bar padding . 
Sets the progress bar width . 
Gets the progress bar width . 
Sets whether the progress bar should be hidden when the progress is 0 . 
Gets whether the progress bar should be hidden when the progress is 0 . 
Creates a new RoundedBitmapDrawable from the given BitmapDrawable . 
Sets whether to round as circle . 
Returns whether or not this drawable rounds as circle . 
Gets the radii . 
Sets the border @param color of the border @param width of the border 
Gets the border color . 
Gets the border width . 
Sets the padding for the bitmap . 
Gets the padding . 
Creates a new instance of RoundedColorDrawable from the given ColorDrawable . 
Sets whether to round as circle . 
Returns whether or not this drawable rounds as circle . 
Sets the rounding radii . 
Gets the radii . 
Sets the rounding radius . 
Sets the color . 
Gets the color . 
Sets the border @param color of the border @param width of the border 
Gets the border color . 
Gets the border width . 
Gets the padding . 
Sets the drawable 's alpha value . 
Returns the drawable 's alpha value . 
Returns the opacity of the final color which would be used for drawing . 
Sets the type of rounding process @param type type of rounding process 
Sets whether to round as circle . 
Returns whether or not this drawable rounds as circle . 
Sets radius to be used for rounding @param radius corner radius in pixels 
Sets radii values to be used for rounding . 
Gets the radii . 
Sets the overlay color . 
Gets the overlay color . 
Sets the border @param color of the border @param width of the border 
Gets the border color . 
Gets the border width . 
Gets the padding . 
Gets the current scale type . 
Sets the scale type . 
Gets the focus point . 
Sets the focus point . 
Gets transformation matrix based on the scale type . 
Gets transformation based on the scale type . 
Returns the internal state . 
Sets the interpolating value . 
Gets the interpolating value . 
Sets a transform callback . 
Sets a visibility callback . 
Gets the lowest parent drawable for the layer at the specified index . 
Sets the drawable at the specified index while keeping the old scale type and rounding . 
Gets the ScaleTypeDrawable at the specified index . 
Returns whether the given layer has a scale type drawable . 
Sets the fade duration . 
Gets the fade duration . 
Sets the actual image focus point . 
Sets the actual image scale type . 
Sets the color filter to be applied on the actual image . 
Gets the non-cropped post-scaling bounds of the actual image . 
Sets a new placeholder drawable with old scale type . 
Sets a new placeholder drawable with scale type . 
Sets the placeholder image focus point . 
Sets a new placeholder drawable with old scale type . 
Sets a new placeholder drawable with scale type . 
Sets a new failure drawable with old scale type . 
Sets a new failure drawable with scale type . 
Sets a new failure drawable with old scale type . 
Sets a new failure drawable with scale type . 
Sets a new retry drawable with old scale type . 
Sets a new retry drawable with scale type . 
Sets a new retry drawable with old scale type . 
Sets a new retry drawable with scale type . 
Sets a new progress bar drawable with old scale type . 
Sets a new progress bar drawable with scale type . 
Sets a new progress bar drawable with old scale type . 
Sets a new progress bar drawable with scale type . 
Sets the background image if allowed . 
Sets a new overlay image at the specified index . 
Sets the overlay image if allowed . 
Sets the rounding params . 
Gets the rounding params . 
Sets the duration of the fade animation . 
Gets the duration of the fade animation . 
Sets the desired aspect ratio . 
Gets the desired aspect ratio . 
Sets the placeholder image . 
Sets the placeholder image . 
Gets the placeholder image . 
Sets the placeholder image scale type . 
Gets the placeholder image scale type . 
Sets the placeholder image and its scale type . 
Sets the placeholder image and its scale type . 
Sets the retry image . 
Sets the retry image . 
Gets the retry image . 
Sets the retry image scale type . 
Gets the retry image scale type . 
Sets the retry image and its scale type . 
Sets the retry image and its scale type . 
Sets the failure image . 
Sets the failure image . 
Gets the failure image . 
Sets the failure image scale type . 
Gets the failure image scale type . 
Sets the failure image and its scale type . 
Sets the failure image and its scale type . 
Sets the progress bar image . 
Sets the progress bar image . 
Gets the progress bar image . 
Sets the progress bar image scale type . 
Gets the progress bar image scale type . 
Sets the progress bar image and its scale type . 
Sets the progress bar image and its scale type . 
Sets the scale type for the actual image . 
Gets the scale type for the actual image . 
Sets the transformation matrix , and removes the scale type , for the actual image . 
Gets the matrix for the actual image . 
Sets the focus point for the actual image . 
Gets the focus point for the actual image . 
Sets the color filter for the actual image . 
Gets the color filter for the actual image . 
Sets the backgrounds . 
Sets a background . 
Gets the background . 
Sets the overlays . 
Sets a single overlay . 
Gets the overlays . 
Sets the overlay for pressed state . 
Gets the overlay for pressed state . 
Sets the rounding params . 
Gets the rounding params . 
Returns the scale type indicated in XML , or null if the special ` none ' value was found . 
Sets whether to round as circle . 
Gets whether to round as circle 
Sets the rounded corners radius . 
Sets the rounded corners radii . 
Sets the rounded corners radii . 
Gets the rounded corners radii . 
Sets the rounding method . 
Gets the rounding method . 
Gets the overlay color . 
Sets the border width @param width of the width 
Gets the border width 
Sets the border color @param color of the border 
Gets the border color 
Sets the border around the rounded drawable @param color of the border @param width of the width 
Sets the padding on rounded drawable . 
Gets the padding size 
Creates a new instance of this gesture detector . 
Sets the click listener . 
Returns whether the gesture capturing is in progress . 
Gets the hierarchy . 
Sets a new hierarchy . 
Sets the accessibility content description . 
Gets the accessibility content description . 
Returns the top level drawable in the corresponding hierarchy . 
Sets the caller context . 
Sets the uri . 
Sets the uri from a string . 
Sets the old controller to be reused if possible . 
Creates a new instance of DraweeHolder that detaches / attaches controller whenever context notifies it about activity 's onStop and onStart callbacks . 
Gets the controller ready to display the image . 
Sets the visibility callback to the current top-level-drawable . 
Sets a new controller . 
Gets the controller if sets , null otherwise . 
Sets the drawee hierarchy . 
Gets the drawee hierarchy if sets , throws NPE otherwise . 
Returns whether the hierarchy is sets or not . 
Gets the top-level drawable if hierarchy is sets , null otherwise . 
Sets the hierarchy . 
Gets the hierarchy if sets , throws NPE otherwise . 
Returns whether the hierarchy is sets or not . 
Gets the top-level drawable if hierarchy is sets , null otherwise . 
Sets the controller . 
Gets the controller if sets , null otherwise . 
Returns whether the controller is sets or not . 
Gets the controller ready to display the images . 
Returns true if the argument is a top-level Drawable in this holder . 
Creates a mock Drawable with some methods stubbed . 
Creates a mock BitmapDrawable with some methods stubbed . 
Creates a mock Drawable with some methods stubbed . 
Creates a mock DraweeController with some methods stubbed . 
Creates a mock GenericDraweeHierarchy with some methods stubbed . 
Creates a mock GenericDraweeHierarchy with some methods stubbed . 
Creates a mock GenericDraweeHierarchyBuilder that builds a new DH instance each time . 
Creates a mock GenericDraweeHierarchyBuilder with stubbed build . 
Returns true if the factory can creates a Drawable for the given image . 
creates a drawable for the given image . 
sets whether a debug overlay that displays image information , like dimensions and size should be drawn on top of a Drawee view . 
Gets the supplier of Fresco Drawee controller builders . 
Returns a new instance of Fresco Drawee controller builder . 
Gets the image pipeline instance . 
Returns true if Fresco has been initialized . 
Adds ActivityListener to the activity @param listener 
Removes ActivityListener from the activity @param listener 
Creates the specified directory , along with all parent paths if necessary @param directory directory to be created @throws CreateDirectoryException 
Returns the number of bytes written . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Returns a sets backed by the specified map . 
Sets the logging delegate that overrides the default delegate . 
Sets an application tag that is used for checking if a log line is loggable and also to prefix to all log lines . 
Sets a minimum log-level under which the logger will not log regardless of other checks . 
Gets a minimum log-level under which the logger will not log regardless of other checks . 
Gets whether the specified level is loggable . 
gets the recommended percentage by which to trim the cache on receiving this event . 
Returns null if the parameter is null . 
Returns the underlying Closeable if this reference is not closed yet . 
Returns a new CloseableReference to the same underlying SharedReference . 
Returns the cloned reference if valid , null otherwise . 
Returns null if the list is null . 
Adds it if it 's not being held . 
Removes it if it 's reference count has become 0 . 
gets the current referenced value . 
Returns value of mRefCount after decrementing 
Sets the handler . 
Gets the information about the available storage space either internal or external depends on the give input @param storageType Internal or external storage type @return available space in bytes , 0 if no information is available 
Returns a singleton instance of this clock . 
Gets the current time in milliseconds . 
Returns a singleton instance of this clock . 
gets the path of a file from the Uri . 
returns a URI for the given resource ID . 
Creates a new data source supplier with increasing-quality strategy . 
Sets the value as the last result .  
Sets the failure . 
Sets the progress . 
Gets data source from our mDataSourceSupplier and subscribes mDataSubscriber to it . 
Creates a bitmap of the specified width and height . 
Creates a bitmap of the specified width and height . 
Creates a bitmap of the specified width and height . 
Returns true if the key is in the in-memory key index . 
Removes the item from the disk cache and the staging area . 
Creates and starts the task to carry out a disk cache read , using whichever caches and keys are appropriate for this policy . 
Removes all items from the StagingArea . 
Removes item from the StagingArea . 
Removes key-value from the StagingArea . 
Returns a DataSource supplier that will on gets submit the request for execution and returns a DataSource representing the pending results of the task . 
Returns a DataSource supplier that will on gets submit the request for execution and returns a DataSource representing the pending results of the task . 
Returns whether the image is stored in the bitmap memory cache . 
Returns whether the image is stored in the bitmap memory cache . 
Returns whether the image is stored in the disk cache . 
Returns whether the image is stored in the disk cache . 
Returns whether the image is stored in the disk cache . 
Returns whether the image is stored in the disk cache . 
Returns a sequence that can be used for a request for an encoded image from either network or local files . 
Returns a sequence that can be used for a request for an encoded image from network . 
Returns a sequence that can be used for a request for an encoded image from a local file . 
Returns a sequence that can be used for a prefetch request for an encoded image . 
Returns a sequence that can be used for a request for a decoded image . 
Returns a sequence that can be used for a prefetch request for a decoded image . 
Creates a new fetch sequence that just needs the source producer . 
Creates a new fetch sequence that just needs the source producer . 
Sets the value of this data source . 
Sets the data source to having failed with the given exception . 
Sets the progress . 
Gets the result if any , null otherwise . 
adds a new decoding cabability for a new image format . 
Gets the next scan-number that should be decoded after the given scan-number . 
Gets the quality information for the given scan-number . 
Gets a new ` value ' from the pool , if available . 
Gets the bucketed size of the value @param value the value @return bucketed size of the value @throws InvalidSizeException , if the size of the value does n't match the pool 's constraints @throws InvalidValueException , if the value is invalid 
Gets the size in bytes for the given bucketed size @param bucketedSize the bucketed size @return size in bytes 
Gets the freelist for the specified bucket . creates the freelist if there is n't one @param bucketedSize the bucket size @return the freelist for the bucket 
adds a new item to the counter @param numBytes size of the item in bytes 
Gets the bucketed size of the value . 
Gets the size in bytes for the given bucketed size @param bucketedSize the bucketed size @return size in bytes 
Gets a free item if possible from the freelist . Returns null if the free list is empty Updates the bucket inUse count @return an item from the free list , if available 
Gets the smallest buffer size supported by the pool @return the smallest buffer size supported by the pool 
Gets the size in bytes for the given ` bucketed ' size @param bucketedSize the bucketed size @return size in bytes 
gets the ` bucketed ' size for the given request size . 
Gets the bucketed size of the value @param value the value @return just the length of the value 
gets the size of this memory chunk . 
Gets the smallest size supported by the pool @return the smallest size supported by the pool 
Gets the size in bytes for the given ` bucketed ' size @param bucketedSize the bucketed size @return size in bytes 
gets the ` bucketed ' size for the given request size . 
Gets the bucketed size of the value @param value the value @return just the length of the value 
Gets the size of the bytebuffer if it is valid . 
Creates a new NativePooledByteBuffer instance by reading in the entire contents of the input stream @param inputStream the input stream to read from @return an instance of the NativePooledByteBuffer @throws IOException 
Creates a new NativePooledByteBuffer instance by reading in the entire contents of the byte array @param bytes the byte array to read from @return an instance of the NativePooledByteBuffer 
Creates a new NativePooledByteBuffer instance with an initial capacity , and reading the entire contents of the input stream @param inputStream the input stream to read from @param initialCapacity initial allocation size for the PooledByteBuffer @return an instance of NativePooledByteBuffer @throws IOException 
Creates a new NativePooledByteBufferOutputStream instance with default initial capacity @return a new NativePooledByteBufferOutputStream 
Creates a new NativePooledByteBufferOutputStream instance with the specified initial capacity @param initialCapacity initial allocation size for the underlying output stream @return a new NativePooledByteBufferOutputStream 
Gets a PooledByteBuffer from the current contents . 
Returns the total number of bytes written to this stream so far . 
gets exclusive access to the byte array of size greater or equal to the passed one . 
Creates a bitmap from encoded bytes . 
Creates a bitmap from encoded JPEG bytes . 
Creates a bitmap from encoded bytes . 
Creates a bitmap from encoded JPEG bytes . 
Creates a bitmap from encoded bytes . 
Creates a bitmap from encoded JPEG bytes . 
Gets the queued time in milliseconds for the currently running job . 
Gets the correction angle based on the image 's orientation 
Creates a memory-backed encoded image from the stream . 
Gets an encoded image from the local resource . 
Gets whether the intermediate results should be propagated . 
Gets a map containing extra parameters to pass to the listeners . 
Adds callbacks to the sets of callbacks that are executed at various points during the processing of a request . 
sets whether the request is a prefetch request or not . 
sets whether intermediate result is expected or not @param isIntermediateResultExpected 
sets the priority of the request @param priority 
creates extra map for result 
creates extra map for exception 
creates extra map for cancellation 
Creates a new request builder instance . 
Creates a new request builder instance for a local resource image . 
Creates a new request builder instance with the same parameters as the imageRequest passed in . 
Gets the source Uri . 
Sets the lowest level that is permitted to request the image from . 
Gets the lowest permitted request level . 
Sets resize options in case resize should be performed . 
Gets the resize options if sets , null otherwise . 
Gets the rotation options if sets , null otherwise . 
Sets the cache option . 
Returns whether progressive loading is enabled . 
Returns whether the use of local thumbnails for previews is enabled . 
Returns whether the use of the disk cache is enabled , which is partly dependent on the URI . 
sets priority for the request . 
Returns the request priority . 
Sets the postprocessor . 
Gets postprocessor if sets , null otherwise . 
gets the unique ID for this piece of media . 
gets all known variants of this media . 
Creates a variant of unknown size . 
Creates a variant with its size . 
Creates a builder for a new MediaVariations . 
Returns the name of this postprocessor . 
gets via alloc + trim 
gets via alloc - exception on max size hard cap 
Returns the size of this source in bytes . 
gets the underlying byte array @return the underlying byte array of this resource 
Gets the cache key related to this event . 
Gets the resource ID for the cached item . 
Gets the size of the new resource in storage , in bytes . 
Gets the total size of the resources currently in storage , in bytes . 
Gets the current size limit for the cache , in bytes . 
Gets the exception which occurred to trigger a read or write exception event . 
Gets the reason for an item 's eviction in eviction events . 
gets a list of possible resourceIds from MultiCacheKey or gets single resourceId from CacheKey . 
gets the resourceId from the first key in MultiCacheKey or gets single resourceId from CacheKey . 
Creates a writer callback that writes some byte array to the target stream . 
Gets the directory to use to store the given key @param resourceId the id of the file we 're going to store @return the directory to store the file in 
Gets the directory to use to store the given key @param resourceId the id of the file we 're going to store @return the directory to store the file in 
Returns an immutable list of the entries . 
creates a new builder . 
Sets the version . 
Sets the name of the directory where the cache will be located . 
Sets the path to the base directory .  
gets the resource with the specified name @param resourceId id of the resource @param debugInfo helper object for debugging @return the resource with the specified name . 
Creates a temporary resource for writing content . 
gets all entries currently in the storage @return a collection of entries in storage @throws IOException 
removes the resource represented by the entry @param entry entry of the resource to delete @return size of deleted file if successfully deleted , -1 otherwise @throws IOException 
removes the resource with specified id @param resourceId @return size of deleted file if successfully deleted , -1 otherwise @throws IOException 
gets the storage 's name , which should be unique @return name of the this storage 
Creates a temp file for writing outside the session lock 
Gets a concrete disk-storage instance . 
Returns the binary resource cached with key . 
Returns true if the key is in the in-memory key index . 
Removes a resource by key from cache . 
gets all default formats supported by Fresco . 
gets the number of header bytes the format checker requires @return the number of header bytes needed 
gets the default file extension for the given image format . 
gets the currently used instance of the image format checker @return the image format checker to use 
Creates a bitmap of the specified width and height . 
Creates a bitmap of the specified width and height . 
Creates a bitmap of the specified width and height . 
Creates a bitmap of the specified width and height . 
Creates a bitmap from the specified source bitmap . 
Creates a bitmap from the specified source bitmap . 
Creates a bitmap from the specified subset of the source bitmap . 
Creates a bitmap from the specified subset of the source bitmap . 
Creates a bitmap from subset of the source bitmap , transformed by the optional matrix . 
Creates a bitmap from the specified source scaled to have the height and width as specified . 
Creates a bitmap from the specified source scaled to have the height and width as specified . 
Creates a bitmap from subset of the source bitmap , transformed by the optional matrix . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Creates a bitmap with the specified width and height . 
Returns suitable Bitmap Config for the new Bitmap based on the source Bitmap configurations . 
Creates a bitmap of the specified width and height . 
Gets the count of the elements in the map . 
Gets the total size in bytes of the elements in the map . 
Gets the key of the first element in the map . 
Gets the all matching elements . 
Returns whether the map contains an element with the given key . 
Gets the element from the map . 
Adds the element to the map , and removes the old element with the same key if any . 
Removes the element from the map . 
Removes all the matching elements from the map . 
Creates a new entry with the usage count of 0 . 
Gets the item with the given key , or null if there is no such item . 
Creates a new reference for the client . 
Adds the entry to the exclusively owned queue if it is viable for eviction . 
Gets the value with the given key to be reused , or null if there is no such value . 
Removes all the items from the cache whose key matches the specified predicate . 
Removes all the items from the cache . 
Removes the exclusively owned items until the cache constraints are met . 
Removes the exclusively owned items until there is at most count of them and they occupy no more than size bytes . 
Returns the value reference of the entry if it should be closed , null otherwise . 
Gets the total number of all currently cached items . 
Gets the total size in bytes of all currently cached items . 
Gets the number of the cached items that are used by at least one client . 
Gets the total size in bytes of the cached items that are used by at least one client . 
Gets the number of the exclusively owned items . 
Gets the total size in bytes of the exclusively owned items . 
Gets the item with the given key , or null if there is no such item . 
Removes all the items from the cache whose keys match the specified predicate . 
Find if any of the items from the cache whose keys match the specified predicate . 
Returns the size in bytes of the given value . 
Gets the default options . 
Creates a new builder . 
Sets the builder to be equivalent to the specified options . 
Sets the minimum decode interval . 
Gets the minimum decode interval . 
Sets whether to decode a preview frame for animated images . 
Gets whether to decode a preview frame for animated images . 
Gets whether to decode all the frames and store them in memory . 
Sets whether to decode all the frames and store them in memory . 
Sets whether to force animated image formats to be decoded as static , non-animated images . 
Gets whether to force animated image formats to be decoded as static , non-animated images . 
Gets the higher priority among the two . 
Creates a new sets of rotation options for JPEG images to use the rotation angle in the image metadata . 
Creates a new sets of rotation options for JPEG images to use the rotation angle in the image metadata . 
Creates a new sets of rotation options to use a specific rotation angle . 
Gets the explicit angle to rotate to , if one was sets . 
Gets the underlying bitmap . 
Returns whether this instance is closed . 
Returns quality information for the image . 
Returns whether this instance is closed . 
Gets the underlying bitmap . 
Returns quality information for the image . 
Returns the cloned encoded image if the parameter received is not null , null otherwise . 
Returns true if the internal buffer reference is valid or the InputStream Supplier is not null , false otherwise . 
Returns a cloned reference to the stored encoded bytes . 
Returns an InputStream from the internal InputStream Supplier if it 's not null . 
Sets the image format 
Sets the image height 
Sets the image width 
Sets the image rotation angle 
Sets the image sample size 
Sets the size of an image if backed by an InputStream Ignored if backed by a ByteBuffer 
Returns the image format if known , otherwise ImageFormat.UNKNOWN . 
Returns true if the image is a JPEG and its data is already complete at the specified length , false otherwise . 
Returns the size of the backing structure . 
Sets the encoded image meta data . 
Returns true if all the image information has loaded , false otherwise . 
gets the size of the byte buffer @return the size of the byte buffer 
Creates a new PooledByteBuffer instance of given size . 
Creates a new bytebuf instance by reading in the entire contents of the input stream @param inputStream the input stream to read from @return an instance of the PooledByteBuffer @throws IOException 
Creates a new bytebuf instance by reading in the entire contents of the byte array @param bytes the byte array to read from @return an instance of the PooledByteBuffer 
Creates a new PooledByteBuffer instance with an initial capacity , and reading the entire contents of the input stream @param inputStream the input stream to read from @param initialCapacity initial allocation size for the bytebuf @return an instance of PooledByteBuffer @throws IOException 
Creates a new PooledByteBufferOutputStream instance with default initial capacity @return a new PooledByteBufferOutputStream 
Creates a new PooledByteBufferOutputStream instance with the specified initial capacity @param initialCapacity initial allocation size for the underlying output stream @return a new PooledByteBufferOutputStream 
Returns the number of bytes still available to read 
Sets a mark position in this inputstream . 
Creates a PooledByteBuffer from the contents of the stream . 
Returns the total number of bytes written to this stream so far . 
Gets orientation information from jpeg byte array . Returns 0 if there is no valid orientation information . 
gets orientation information from jpeg input stream . Returns 0 if there is no valid orientation information . 
Gets whether the queue is empty . 
Gets whether there are items in the queue . 
Gets the next item in the queue without removing it . 
Gets the delay until the next item in the queue . 
Adds a node to the queue . 
Removes the specified element from the queue . 
Gets the number of items in the queue . 
Gets whether the queue is idle . 
Returns how much time left until next command . 
Adds a task to the queue that is ready to be executed . 
Adds a task to the queue that is to be executed to after the specified delay . 
Removes a task from the queue @param runnable The runnable to removes @return whether the element was removed 
Gets the count of queued runnables , regardless of whether they are ready to be run . 
Gets the underlying queue that backs the executor service . 
Creates config using android http stack as network backend . 
Creates config using OkHttp as network backed . 
Adds imageFormat to the sets of image formats you want to download . 
Sets the listener . 
Gets the index of the i-th pressed pointer . 
Gets whether there is a gesture in progress 
Gets the number of pointers after the current gesture 
Gets the number of pointers in the current gesture 
Gets the start X coordinates for the all pointers Mutable array is exposed for performance reasons and is not to be modified by the callers . 
Gets the start Y coordinates for the all pointers Mutable array is exposed for performance reasons and is not to be modified by the callers . 
Gets the current X coordinates for the all pointers Mutable array is exposed for performance reasons and is not to be modified by the callers . 
Gets the current Y coordinates for the all pointers Mutable array is exposed for performance reasons and is not to be modified by the callers . 
Sets the listener . 
Gets whether there is a gesture in progress 
Gets the number of pointers after the current gesture 
Gets the number of pointers in the current gesture 
Gets the X coordinate of the pivot point 
Gets the Y coordinate of the pivot point 
Gets the X component of the translation 
Gets the Y component of the translation 
Gets the rotation in radians 
Creates and returns a SimpleAdapter for Internal Photos @param context The Context @return The SimpleAdapter for local photo 
Creates and returns a SimpleAdapter for External Photos @param context The Context @return The SimpleAdapter for local photo 
Creates the Hierarchy using the information into the Config @param context The Context @param config The Config object @return The Hierarchy to use 
Returns true if the zoomable transform is identity matrix , and the controller is idle . 
Sets a new zoomable transformation and animates to it if desired . 
Sets the zoomable listener . 
Sets whether the controller is enabled or not . 
Gets whether the controller is enabled or not . 
Sets whether the rotation gesture is enabled or not . 
Gets whether the rotation gesture is enabled or not . 
Sets whether the scale gesture is enabled or not . 
Gets whether the scale gesture is enabled or not . 
Sets whether the translation gesture is enabled or not . 
Gets whether the translations gesture is enabled or not . 
Sets the minimum scale factor allowed . 
Gets the minimum scale factor allowed . 
Sets the maximum scale factor allowed . 
Gets the maximum scale factor allowed . 
Gets the current scale factor . 
Sets the image bounds , in view-absolute coordinates . 
Gets the non-transformed image bounds , in view-absolute coordinates . 
Gets the transformed image bounds , in view-absolute coordinates 
Sets the view bounds . 
Gets the view bounds . 
Returns true if the zoomable transform is identity matrix . 
Returns true if the transform was corrected during the last update . 
Gets the matrix that transforms image-absolute coordinates to view-absolute coordinates . 
Gets the matrix that transforms image-relative coordinates to view-absolute coordinates . 
Sets a new zoom transformation . 
Gets the gesture detector . 
Returns the offset necessary to make sure that : - the image is centered within the limit if the image is smaller than the limit - there is no empty space on left/right if the image is bigger than the limit 
Gets the scale factor for the given matrix . 
Returns whether the scroll can happen in all directions . 
Gets whether the controller is enabled . 
Sets the listener for the controller to call back when the matrix changes . 
Gets the current scale factor . 
Returns true if the zoomable transform is identity matrix , and the controller is idle . 
Returns true if the transform was corrected during the last update . 
Gets the current transform . 
Sets the bounds of the image post transform prior to application of the zoomable transformation . 
Sets the bounds of the view . 
Gets the original image bounds , in view-absolute coordinates . 
Gets the bounds used to limit the translation , in view-absolute coordinates . 
Sets a custom zoomable controller , instead of using the default one . 
Gets the zoomable controller . 
Sets the tap listener . 
Sets whether long-press tap detection is enabled . 
Sets the image controller . 
Sets the controllers for the normal and huge image . 
returns input stream for jpeg @return InputStream instance 
returns input stream for lossless webp @return InputStream instance 
Removes any existing animation put on the builder . 
Returns a directory with a default name in the private cache directory of the application to use to store retrieved media and thumbnails . 
Returns a directory with the given name in the private cache directory of the application to use to store retrieved media and thumbnails . 
gets the singleton . 
Returns the class of the data this fetcher will attempt to obtain . 
returns the length of the given array . 
Returns a non-null array of the given type with a length > = to the given size . 
Returns the current maximum size of the pool in bytes . 
gets the cache for the value at the given key . 
removes the key and value from the cache . 
gets a DiskCache in the given directory and size . 
Returns the sum of the sizes of all the contents of the cache in bytes . 
Returns the current maximum size in bytes of the cache . 
Removes the value for the given key and returns it if present or null otherwise . 
adds bitmap to the cache with the given key . 
sets the listener to be called when a bitmap is removed from the cache . 
Returns the recommended memory cache size for the device it is run on in bytes . 
Returns the recommended bitmap pool size for the device it is run on in bytes . 
Returns the recommended array pool size for the device it is run on in bytes . 
Returns true if this job will attempt to decode a resource from the disk cache , and false if it will always decode from source . 
Returns true if this request should cache the original unmodified data . 
Returns true if this request should cache the final transformed resource . 
Returns true if this request should attempt to decode cached resource data . 
Returns true if this request should attempt to decode cached source data . 
Returns a list of causes that are immediate children of this exception . 
Returns the list of root causes that are the leaf nodes of all children of this exception . 
Sets the weight to use to balance how many Bitmaps of this type are prefilled relative to the other requested types . 
Returns an instance of the wrapped resource . 
Returns the size in bytes of the wrapped resource to use to determine how much of the memory cache this resource uses . 
Adds all uniquely identifying information to the given digest . 
Returns a non-null map containing a sets of headers to apply to an http request . 
Adds a value for the given header and returns this builder . 
gets a value . 
adds a value . 
Removes all entries from the cache . 
Returns true if the given model is a of a recognized type that this loader can probably load . 
Returns a valid url http : / / or https : / / for the given model and dimensions as a string . 
Returns the headers for the given model and dimensions as a map of strings to sets of strings , or null if no headers should be added . 
Returns an estimated number of bytes that can be read or skipped without blocking for more input .  
Sets a mark position in this stream . 
Returns -1 if the end of the source string has been reached . 
Returns the number of bytes actually read or -1 if no bytes were read and the end of the stream was encountered . 
Sets the alpha of the Bitmap we 're going to re-use to the alpha of the Bitmap we 're going to transform . 
gets the # of degrees an image must be rotated to match the given exif orientation . 
Creates a bitmap from a source bitmap and rounds the corners . 
Returns the current frame index in the range 0 . . 
Returns a UnitTransformation for the given type . 
Returns a decoded resource from the given data or null if no resource could be decoded . 
Adds the given listener to the list of listeners to be notified on each lifecycle event . 
Adds the given listener to the sets of listeners managed by this Lifecycle implementation . 
Returns the sets of fragments that this RequestManagerFragment 's parent is a parent to . 
Sets a hint for which fragment is our parent which allows the fragment to returns correct information about its parents before pending fragment transactions have been executed . 
Returns true if the fragment is a descendant of our parent . 
Returns the sets of fragments that this RequestManagerFragment 's parent is a parent to . 
Sets a hint for which fragment is our parent which allows the fragment to returns correct information about its parents before pending fragment transactions have been executed . 
Returns true if the fragment is a descendant of our parent . 
Returns the multiplier that should be applied to the initial maximum size of Glide 's memory cache and bitmap pool . 
Sets the priority for this load . 
Sets a resource to display if a load fails . 
Sets some additional data to be mixed in to the memory and disk cache keys allowing the caller more control over when cached data is invalidated . 
Returns a copy of this request builder with all of the options put so far on this builder . 
Sets the time position of the frame to extract from a video . 
Returns true if this request is paused and may be restarted . 
Returns true if this request is running and has not completed or failed . 
Returns true if the request has completed successfully . 
Returns true if a non-placeholder resource is put . 
Returns true if the request has been cancelled . 
Returns true if the request has failed . 
Returns a PreloadTarget . 
Sets the current request for this target to retain , should not be called outside of Glide . 
Returns true if the request is either the request loading the full size image or if the request loading the full size image has not yet completed . 
Returns true if the request is the request loading the full size image and if neither the full nor the thumbnail image have completed successfully . 
Returns true if the full request is still running . 
Returns true if the full request is complete . 
Returns true if the full request has failed . 
Sets a RequestBuilder listener to monitor the resource load . 
Sets the specific model to load data for . 
Returns a request builder to load the given resource id .  
Returns a request to load the given byte array . 
Returns a copy of this request builder with all of the options put so far on this builder . 
sets the target the resource will be loaded into . 
Returns a future that can be used to do a blocking gets on a background thread . 
Returns a future that can be used to do a blocking gets on a background thread . 
Returns a future that can be used to do a blocking gets on a background thread . 
Removes any existing animation put on the builder . 
Returns the time elapsed since the given logTime in millis . 
Sets a size multiplier that will be applied to the size provided in the constructor to put the new size of the cache . 
Returns the size of a given item , defaulting to one . 
Returns the current maximum size of the cache in bytes . 
Returns the sum of the sizes of all items in the cache . 
Returns the item in the cache for the given key or null if no such item exists . 
Adds the given item to the cache with the given key and returns any previous entry for the given key that may have already been in the cache . 
Removes the item at the given key and returns the removed item if present , and null otherwise . 
Removes the least recently used items from the cache until the current size is less than the given size . 
Sets whether or not our object is recycled . 
Returns the hex string of the given byte array representing a SHA256 hash . 
Returns the allocated byte size of the given bitmap . 
Returns a copy of the given list that is safe to iterate over and perform actions that may modify the original list .  
Creates a Mockito argument matcher to be used in verify . 
Creates a Mockito mock object . 
Returns an InputStream for the given test class and sub-path . 
Returns a byte array used for decoding and generating the frame bitmap . 
Returns an int array used for decoding/generating the frame bitmaps . 
Returns the current status of the decoder .  
Gets display duration for specified frame . 
Gets display duration for the upcoming frame in ms. 
Gets the number of frames read from file . 
Gets the current index of the animation frame , or -1 if animation has n't not yet started . 
Gets the `` Netscape '' iteration count , if any . 
gets the next frame in the animation sequence . 
Sets the GIF frame disposal code for the last added frame and any subsequent frames . 
Sets the number of times the sets of GIF frames should be played . 
Sets the transparent color for the last added frame and any subsequent frames . 
Adds next GIF frame . 
Adds next GIF frame to the specified position .  
Sets frame rate in frames per second . 
Sets the fixed GIF frame size for all the frames . 
Sets current GIF frame size . 
Returns index of palette color closest to c 
Gets the SQLiteDatabase for custom database access . 
Returns the value of the primary key , if the entity has a single primary key , or , if not , null . Returns null if entity is null . 
Returns true if the entity is not null , and has a non-null key , which is also ! 
Returns true if the Entity class can be updated , e.g. for setting the PK after insert . 
Gets the SQLiteDatabase for custom database access . 
Gets the Database for custom database access . 
Creates an select for given columns with a trailing space 
Creates an `` LIKE '' condition for this property . 
Creates an `` BETWEEN ... AND ... '' condition for this property . 
Creates an `` IS NULL '' condition for this property . 
Creates an `` IS NOT NULL '' condition for this property . 
Sets the limit of the maximum number of results returned by this Query . 
Sets the offset for results returned by this Query . 
Adds the given conditions to the where clause using an logical AND . 
Adds the given conditions to the where clause using an logical OR . 
Creates a WhereCondition by combining the given conditions using OR . 
Creates a WhereCondition by combining the given conditions using AND . 
Adds the given conditions to the where clause using an logical AND . 
Adds the given conditions to the where clause using an logical OR . 
Creates a WhereCondition by combining the given conditions using OR . 
Creates a WhereCondition by combining the given conditions using AND . 
Adds the given properties to the ORDER BY section using ascending order . 
Adds the given properties to the ORDER BY section using descending order . 
Adds the given properties to the ORDER BY section using the given custom order . 
Adds the given raw SQL string to the ORDER BY section . 
Creates an insertable entity . 
Returns a prepared application with the onCreate method already called . 
Gets the previously created application . 
Adds a standard _ id column required by standard Android classes , e.g. list adapters . 
Adds a new index to the entity . 
Adds a new entity to the schema . 
Adds a new protocol buffers entity to the schema . 
Creates underlying database table using DAOs . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates underlying database table using DAOs . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates underlying database table using DAOs . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the underlying database table . 
Creates the same random sequence of strings . 
Creates the same random sequence of indexes . 
Returns an empty array of the specified type . 
Sets all supplied keys to the given unique value . 
Gets the Object mapped from the specified key , or null if no such mapping has been made . 
Gets the Object mapped from the specified key , or the specified Object if no such mapping has been made . 
Removes the mapping from the specified key , if there was any . 
Adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one . 
Returns the number of key-value mappings that this SparseArray currently stores . 
Removes all key-value mappings from this SparseArray . 
Returns a matcher that matches any character not matched by this matcher . 
Returns the number of matching characters found in a character sequence . 
Returns a string containing all non-matching characters of a character sequence , in order . 
Returns a string containing all matching characters of a character sequence , in order . 
Returns a string copy of the input character sequence , with each character that matches this matcher replaced by a given replacement character . 
Returns a string copy of the input character sequence , with each character that matches this matcher replaced by a given replacement sequence . 
Returns a substring of the input character sequence that omits all characters this matcher matches from the beginning and from the end of the string . 
Returns a substring of the input character sequence that omits all characters this matcher matches from the beginning of the string . 
Returns a substring of the input character sequence that omits all characters this matcher matches from the end of the string . 
Returns a string copy of the input character sequence , with each group of consecutive characters that match this matcher replaced by a single replacement character . 
Returns the Java Unicode escape sequence for the given character , in the form '' \ u12AB '' where `` 12AB '' is the four hexadecimal digits representing the 16 bits of the UTF-16 character . 
Returns a converter based on separate forward and backward functions . 
Returns a serializable converter that always converts or reverses an object to itself . 
Returns a string representation for this equivalence wrapper . 
Returns an equivalence over iterables based on the equivalence of their elements . 
Returns Finalizer.class or null if this loader should n't or ca n't load it . 
Gets URL for base of path containing Finalizer.class . 
Creates a class loader with the given base URL as its classpath . 
Returns a function which performs a map lookup .  
Returns a function which performs a map lookup with a default value .  
Returns the composition of two functions . 
Creates a function that returns the same boolean output as the given predicate for all inputs . 
Returns a string containing the string representation of each argument , using the previously configured separator between each . 
Returns a joiner with the same behavior as this joiner , except automatically skipping over any provided null elements . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Adds an unnamed value to the formatted output . 
Returns the contained instance , which must be present . 
Returns a hash code for this instance . 
Returns a string representation for this instance . 
Returns the composition of a function and a predicate . 
Returns an array size suitable for the backing array of a hash table that uses open addressing with linear probing in its implementation . 
Returns a splitter that uses the given single-character separator . 
Returns a splitter that uses the given fixed string as a separator . 
Returns a splitter that divides strings into pieces of the given length . 
Returns the key used to lookup this system property . 
Returns a string representation of this system property . 
Sets the elapsed time for this stopwatch to zero , and places it in a stopped state . 
Returns the current elapsed time shown on this stopwatch , expressed in the desired time unit , with any fraction rounded down . 
Returns a string representation of the current elapsed time . 
Returns the given string if it is non-null ; the empty string otherwise . 
Returns a string consisting of a specific number of concatenated copies of an input string . 
Returns a new supplier which is the composition of the provided function and supplier . 
Returns a supplier that caches the instance supplied by the delegate and removes the cached value after the specified time has passed .  
Returns the JavaLangAccess class that is present in all Sun JDKs . 
Returns the number of nanoseconds elapsed since this ticker 's fixed point of reference . 
Returns a snapshot of this counter 's values . 
Returns the approximate number of entries in this cache . 
Returns a current snapshot of this cache 's cumulative statistics , or a sets of default values if the cache is not recording statistics . 
Returns a view of the entries stored in this cache as a thread-safe map . 
Sets the minimum total size for the internal hash tables . 
Returns a string representation for this CacheBuilder instance . 
Creates a CacheBuilderSpec from a string . 
Returns a CacheBuilderSpec that will prevent caching . 
Returns a CacheBuilder configured according to this instance 's specification . 
Returns a string representation for this CacheBuilderSpec instance . 
Returns a cache loader based on an <i> existing </i> function instance . 
Returns a cache loader based on an <i> existing </i> supplier instance . 
Returns the ratio of cache requests which were hits . 
Returns the ratio of cache requests which were misses . 
Returns the ratio of cache loading attempts which threw exceptions . 
Returns the total number of nanoseconds the cache has spent loading new values . 
Returns the average time spent loading new values . 
Returns the number of times an entry has been evicted . 
Creates a reference for the given value according to this value strength . 
Returns the default equivalence strategy used to compare and hash keys or values referenced at this strength . 
Creates a new entry . 
Returns the value . 
Returns the weight of this entry . 
Creates a copy of this reference for the given entry . 
Returns true if a new value is currently loading , regardless of whether or not there is an existing value . 
Returns true if this reference contains an active value , meaning one that is still considered present in the cache . 
Returns the value reference from this entry . 
Sets the value reference for this entry . 
Returns the next entry in the chain . 
Returns the entry 's hash . 
Returns the key for this entry . 
Returns the time that this entry was last accessed , in ns . 
Sets the entry access time in ns . 
Returns the next entry in the access queue . 
Sets the next entry in the access queue . 
Returns the previous entry in the access queue . 
Sets the previous entry in the access queue . 
Returns the time that this entry was last written , in ns . 
Sets the entry write time in ns . 
Returns the next entry in the write queue . 
Sets the next entry in the write queue . 
Returns the previous entry in the write queue . 
Sets the previous entry in the write queue . 
Returns the segment that should be used for a key with the given hash . 
Gets the value from an entry . Returns null if the entry is invalid , partially-collected , loading , or expired . 
Returns true if the entry has expired . 
Sets a new value of an entry . Adds newly created entries at the end of the access queue . 
Returns first entry of bin for given hash . 
Gets the value from an entry . Returns null if the entry is invalid , partially-collected , loading , or expired . 
Removes an entry whose key has been garbage collected . 
Removes an entry whose value has been garbage collected . 
Returns the internal entry for the specified key . 
Returns true if an entry was found . 
Returns true if an entry was found . 
Returns true if the entry was valid , false if it should be skipped . 
Adds the given value . 
Returns the current sum . 
Returns the cause for which the entry was removed . 
Sets base and all cells to the given value . 
Returns a sun.misc.Unsafe . 
Returns the weight of a cache entry . 
Returns its input , or throws an exception if this is not a valid key . 
Returns its input , or throws an exception if this is not a valid value . 
Returns the element with the specified index . 
Returns the next element . 
Creates an unmodifiable , empty collection of values . 
Creates the collection of values for a single key . 
Creates the collection of values for an explicitly provided key . 
adds the delegate to the map . 
Removes all values for the provided key . 
Returns the hash code for this multimap . 
Returns a collection view of all values associated with a key . 
Removes all values associated with a given key . 
Returns a map view that associates each key with the corresponding values in the multimap . 
Returns , as an immutable list , the row keys provided when the table was constructed , including those that are mapped to null values only . 
Returns , as an immutable list , the column keys provided when the table was constructed , including those that are mapped to null values only . 
Returns the value corresponding to the specified row and column indices . 
Returns a two-dimensional array with the table contents . 
Returns an unmodifiable sets of all row key / column key / value triplets . 
Returns a view of all mappings that have the given column key . 
Returns an immutable sets of the valid column keys , including those that are associated with null values only . 
Returns a view of all mappings that have the given row key . 
Returns an immutable sets of the valid row keys , including those that are associated with null values only . 
Returns an unmodifiable collection of all values , which may contain duplicates . 
Returns the inverse view of this bimap , which maps each of this bimap 's values to its associated key . 
Returns the children of this node , in left-to-right order . 
Returns the bound type corresponding to a boolean value for inclusivity . 
Returns best-effort-sized StringBuilder based on the given collection size . 
Adds a number of occurrences of the specified element to this multiset . 
Returns the sets of values that are contained in both this sets and the other . 
Returns a range , closed on both ends , whose endpoints are the minimum and maximum values contained in this sets . 
Returns a new bimap with the same mappings as the specified map . 
Returns the associated key type . 
Returns the associated value type . 
Returns the associated key type . 
Returns the number of additional elements that this queue can accept without evicting ; zero if the queue is currently full . 
Adds the given element to this queue . 
Adds the given element to this queue . 
Returns a fluent iterable that combines two iterables . 
Returns a fluent iterable that combines three iterables .  
Returns a fluent iterable that combines four iterables .  
Returns a fluent iterable that combines several iterables . 
Returns a fluent iterable that combines several iterables .  
Returns a fluent iterable containing no elements . 
Returns a fluent iterable containing the specified elements in order . 
Returns the number of elements in this fluent iterable . 
Returns the elements from this fluent iterable that satisfy a predicate . 
Returns an array containing all of the elements from this fluent iterable in iteration order . 
Returns the backing delegate instance that methods are forwarded to . 
Returns the whole range relative to the specified comparator . 
Returns everything above the endpoint relative to the specified comparator , with the specified endpoint behavior . 
Returns everything below the endpoint relative to the specified comparator , with the specified endpoint behavior . 
Returns everything between the endpoints relative to the specified comparator , with the specified endpoint behavior . 
Returns the intersection of the two ranges , or an empty range if their intersection is empty . 
Returns the same range relative to the reversed comparator . 
Returns an immutable bimap containing a single entry . 
Returns an immutable map containing the given entries , in order . 
Returns an immutable map containing the given entries , in order . 
Returns an immutable map containing the given entries , in order . 
Returns an immutable map containing the given entries , in order . 
Returns a new builder . 
Adds all of the given entries to the built bimap . 
Returns a newly-created immutable bimap . 
Returns an immutable bimap containing the given entries . 
Returns an immutable sets of the values in this map . 
Returns a new builder . 
Returns a new immutable class-to-instance map containing the entries provided to this builder . 
Returns an unmodifiable iterator across the elements in this collection . 
Returns an immutable list containing a single element . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns an immutable list containing the given elements , in order . 
Returns this list instance . 
Returns a view of this immutable list in reverse order . 
Returns a new builder . 
Returns an immutable multimap containing a single entry . 
Returns an immutable multimap containing the given entries , in order . 
Returns an immutable multimap containing the given entries , in order . 
Returns an immutable multimap containing the given entries , in order . 
Returns an immutable multimap containing the given entries , in order . 
Returns a new builder . 
Returns a newly-created immutable list multimap . 
Returns an immutable multimap containing the specified entries . 
Returns an immutable list of the values for the given key . 
Returns the empty map . 
Returns an immutable map containing a single entry . 
Returns an immutable map containing the given entries , in order . 
Returns an immutable map containing the given entries , in order . 
Returns an immutable map containing the given entries , in order . 
Returns an immutable map containing the given entries , in order . 
Returns a new builder . 
Adds all of the given entries to the built map . 
Returns a newly-created immutable map . 
Returns an immutable map containing the specified entries . 
Returns an immutable sets of the mappings in this map . 
Returns an immutable sets of the keys in this map . 
Returns an immutable collection of the values in this map . 
Returns a multimap view of the map . 
Returns true if this entry has no bucket links and can safely be reused as a terminal entry in a bucket in another map . 
Returns an empty multimap . 
Returns an immutable multimap containing a single entry . 
Returns an immutable multimap containing the given entries , in order . 
Returns a new builder . 
Adds a key-value mapping to the built multimap . 
Adds an entry to the built multimap . 
Adds entries to the built multimap . 
Returns a newly-created immutable multimap . 
Returns an immutable multimap containing the specified entries . 
Returns an immutable collection of the values for the given key . 
Returns an immutable multimap which is the inverse of this one . 
Returns an immutable sets of the distinct keys in this multimap , in the same order as they appear in this multimap . 
Returns an immutable map that associates each key with its corresponding values in the multimap . 
Returns an immutable collection of all key-value pairs in the multimap . 
Returns an immutable collection of the values in this multimap . 
Returns the empty immutable multiset . 
Returns an immutable multiset containing a single element . 
Returns an immutable multiset containing the given elements , in order . 
Returns an immutable multiset containing the given elements , in the `` grouped iteration order '' described in the class documentation . 
Returns an immutable multiset containing the given elements , in the `` grouped iteration order '' described in the class documentation . 
Returns an immutable multiset containing the given elements , in the `` grouped iteration order '' described in the class documentation . 
Returns an immutable multiset containing the given elements , in the `` grouped iteration order '' described in the class documentation . 
Returns an immutable multiset containing the given elements , in the `` grouped iteration order '' described in the class documentation . 
Returns an immutable multiset containing the given elements , in the `` grouped iteration order '' described in the class documentation . 
Returns an immutable multiset containing the given elements , in the `` grouped iteration order '' described in the class documentation . 
Returns a new builder . 
Adds or removes the necessary occurrences of an element such that the element attains the desired count . 
Returns an empty immutable range map . 
Returns an immutable range map mapping a single range to a single value . 
Returns a new builder for an immutable range map . 
Returns an empty immutable range sets . 
Returns an immutable range sets containing the specified single range . 
Returns a view of the intersection of this range sets with the given range . 
Returns a new builder for an immutable range sets . 
adds the specified range to this builder . 
adds all ranges from the specified range sets to this builder . 
Returns the empty immutable sets . 
Returns an immutable sets containing the given elements , minus duplicates , in the order each was first specified . 
Returns an immutable sets containing the given elements , minus duplicates , in the order each was first specified . 
Returns an immutable sets containing the given elements , minus duplicates , in the order each was first specified . 
Returns an immutable sets containing the given elements , minus duplicates , in the order each was first specified . 
Returns an immutable sets containing the given elements , minus duplicates , in the order each was first specified . 
Returns an array size suitable for the backing array of a hash table that uses open addressing with linear probing in its implementation . 
Returns a new builder . 
Returns an immutable multimap containing a single entry . 
Returns an immutable multimap containing the given entries , in order . 
Returns an immutable multimap containing the given entries , in order . 
Returns an immutable multimap containing the given entries , in order . 
Returns an immutable multimap containing the given entries , in order . 
Adds a key-value mapping to the built multimap if it is not already present . 
Adds an entry to the built multimap if it is not already present . 
Returns a newly-created immutable sets multimap . 
Returns an immutable multimap containing the specified entries . 
Returns an immutable sets of the values for the given key . 
Returns an immutable collection of all key-value pairs in the multimap . 
Returns the empty sorted map . 
Returns an immutable map containing a single entry . 
Returns an immutable map containing a single entry . 
Returns an immutable sorted map containing the given entries , sorted by the natural ordering of their keys . 
Returns an immutable sorted map containing the given entries , sorted by the natural ordering of their keys . 
Returns an immutable sorted map containing the given entries , sorted by the natural ordering of their keys . 
Returns an immutable sorted map containing the given entries , sorted by the natural ordering of their keys . 
Returns an immutable map containing the given entries , with keys sorted by the provided comparator . 
Returns an immutable map containing the given entries , with keys sorted by the provided comparator . 
Returns an immutable map containing the same entries as the provided sorted map , with the same ordering . 
Returns a builder that creates immutable sorted maps whose keys are ordered by their natural ordering . 
Returns a builder that creates immutable sorted maps with an explicit comparator . 
Returns a builder that creates immutable sorted maps whose keys are ordered by the reverse of their natural ordering . 
Adds all the given entries to the built map . 
Returns a newly-created immutable sorted map . 
Returns an immutable sets of the mappings in this map , sorted by the key ordering . 
Returns an immutable sorted sets of the keys in this map . 
Returns an immutable collection of the values in this map , sorted by the ordering of the corresponding keys . 
Returns the empty immutable sorted multiset . 
Returns an immutable sorted multiset containing a single element . 
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering . 
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering . 
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering . 
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering . 
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering . 
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering . 
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering . 
Returns an immutable sorted multiset containing the given elements sorted by their natural ordering . 
Returns a builder that creates immutable sorted multisets with an explicit comparator . 
Returns a builder that creates immutable sorted multisets whose elements are ordered by the reverse of their natural ordering . 
Returns a builder that creates immutable sorted multisets whose elements are ordered by their natural ordering . 
Adds or removes the necessary occurrences of an element such that the element attains the desired count . 
Returns the empty immutable sorted sets . 
Returns an immutable sorted sets containing a single element . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns an immutable sorted sets containing the given elements sorted by their natural ordering . 
Returns a builder that creates immutable sorted sets with an explicit comparator . 
Returns a builder that creates immutable sorted sets whose elements are ordered by the reverse of their natural ordering . 
Returns a builder that creates immutable sorted sets whose elements are ordered by their natural ordering . 
Returns the position of an element within the sets , or -1 if not present . 
Returns an empty immutable table . 
Returns an immutable table containing a single cell . 
Returns an immutable copy of the provided table . 
Returns a new builder . 
Returns a newly-created immutable table . 
Creates the common serialized form for this table . 
Returns a new thread-safe interner which retains a strong reference to each instance it has interned , thus preventing these instances from being garbage-collected . 
Returns a new thread-safe interner which retains a weak reference to each instance it has interned , and so does not prevent these instances from being garbage-collected . 
Removes , from an iterable , every element that belongs to the provided collection . 
Removes , from an iterable , every element that does not belong to the provided collection . 
Removes , from an iterable , every element that satisfies the provided predicate . 
Returns the number of elements in the specified iterable that equal the specified object . 
Returns an iterable whose iterators cycle indefinitely over the provided elements . 
Returns the element at the specified position in an iterable . 
Returns the element at the specified position in an iterable or a default value otherwise . 
Returns the empty iterator . 
Removes every element that satisfies the provided predicate from the iterator . 
Returns the number of elements in the specified iterator that equal the specified object . 
Returns an iterator that cycles indefinitely over the provided elements . 
Returns a sets of all key-value pairs . 
Returns a view collection of all <i> distinct </i> keys contained in this multimap . 
Returns a collection of all values in the multimap . 
Removes the specified node from the linked list .  
Removes all nodes for the specified key . 
Returns an unmodifiable list containing the specified first element and backed by the specified array of additional elements . 
Returns an unmodifiable list containing the specified first and second element , and backed by the specified array of additional elements . 
Returns a reversed view of the specified list . 
Returns an unmodifiable map containing the entries from the left map whose keys are not present in the right map . 
Returns an unmodifiable map containing the entries from the right map whose keys are not present in the left map . 
Returns an unmodifiable map containing the entries that appear in both maps ; that is , the intersection of the two maps . 
Returns an unmodifiable map describing keys that appear in both maps , but with different values . 
Returns the hash code for this instance . 
Sets the minimum total size for the internal hash tables . 
Returns a MapMakerInternalMap for the benefit of internal callers that use features of that class not exposed through ConcurrentMap . 
Returns a string representation for this MapMaker instance . 
Returns the default equivalence strategy used to compare and hash keys or values referenced at this strength . 
Gets the next entry in the chain . 
Gets the entry 's hash . 
Gets the key for this entry . 
Gets the value for the entry . 
Gets the weak value reference held by entry . 
Returns the segment that should be used for a key with the given hash . 
Gets the value from an entry . 
Returns first entry of bin for given hash . 
Removes an entry from within a table . 
Removes an entry whose key has been garbage collected . 
Removes an entry whose value has been garbage collected . 
Gets the value from an entry . 
Returns the internal entry for the specified key . 
Returns an immutable map instance containing the given entries . 
Returns a view of the sorted sets as a map , mapping keys from the sets according to the specified function . 
Returns a view of the navigable sets as a map , mapping keys from the sets according to the specified function . 
Returns an immutable map entry with the specified key and value . 
Returns an unmodifiable view of the specified sets of entries . 
Returns an unmodifiable view of the specified map entry . 
Returns an unmodifiable view of the specified bimap . 
Returns a view of a map where each value is transformed by a function . 
Returns a view of a sorted map where each value is transformed by a function . 
Returns a view of a navigable map where each value is transformed by a function . 
Returns a view of a map whose values are derived from the original map 's entries . 
Returns a view of a sorted map whose values are derived from the original sorted map 's entries . 
Returns a view of a navigable map whose values are derived from the original navigable map 's entries . 
Returns a view of an entry transformed by the specified transformer . 
Returns an unmodifiable view of the specified navigable map . 
Returns a map from the ith element of list to i. 
Creates a new min-max priority queue with default settings : natural order , no maximum size , no initial contents , and an initial expected size of 11 . 
Creates a new min-max priority queue using natural order , no maximum size , and initially containing the given elements . 
Adds the given element to this queue . 
Adds the given element to this queue . 
Returns the index of the max element . 
Removes and returns the least element of this queue . 
Removes and returns the greatest element of this queue . 
Returns the minimum grand child or -1 if no grand child exists . 
Returns the new position of the element . 
Returns the conceptually correct last element of the heap . 
Returns the new position of the element . 
Returns an iterator over the elements contained in this collection , <i> in no particular order </i> . 
Returns the comparator used to order the elements in this queue . 
Returns ~ 2x the old capacity if small ; ~ 1.5 x otherwise . 
Returns the number of key-value pairs in this multimap .  
Returns a view collection of all <i> distinct </i> keys contained in this multimap . 
Returns a view collection containing the key from each key-value pair in this multimap , <i> without </i> collapsing duplicates . 
Returns the hash code for this multimap . 
Returns an unmodifiable view of the specified multimap . 
Returns an unmodifiable view of the specified collection of entries . 
Returns a multimap view of the specified map . 
Returns a view of a multimap where each value is transformed by a function . 
Returns a view of a multimap whose values are derived from the original multimap 's entries . 
Adds a number of occurrences of an element to this multiset . 
Removes a number of occurrences of the specified element from this multiset . 
Adds or removes the necessary occurrences of an element such that the element attains the desired count . 
Returns the sets of distinct elements contained in this multiset . 
Returns the multiset element corresponding to this entry . 
Returns the count of the associated element in the underlying multiset . 
Returns the canonical string representation of this entry , defined as follows . 
Returns the hash code for this multiset . 
Adds a single occurrence of the specified element to this multiset . 
Removes a <i> single </i> occurrence of the specified element from this multiset , if present . 
Returns an unmodifiable view of the specified multiset . 
Returns an unmodifiable view of the specified sorted multiset . 
Returns an immutable multiset entry with the specified element and count . 
Returns the expected number of distinct elements given the specified elements . 
Returns an unmodifiable view of the union of two multisets . 
Returns an unmodifiable view of the intersection of two multisets . 
Returns an unmodifiable view of the sum of two multisets . 
Returns an unmodifiable view of the difference of two multisets . 
Returns a string representation of this multiset entry . 
Returns a new array of the given length with the specified component type . 
Returns a new array of the given length with the same type as a reference array . 
Returns a new array that contains the concatenated contents of two arrays . 
Returns an array containing all of the elements in the specified collection ; the runtime type of the returned array is that of the specified array . 
Returns an array containing all of the elements in the specified collection . 
Returns a serializable ordering that uses the natural order of the values . 
Returns an ordering based on an <i> existing </i> comparator instance . 
Returns an ordering which treats all values as equal , indicating `` no ordering . '' 
Returns an ordering which tries each given comparator in order until a non-zero result is found , returning that result , and returning zero only if all comparators returns zero . 
Returns a new ordering which sorts iterables by comparing corresponding elements pairwise until a nonzero result is found ; imposes `` dictionary order '' . 
Returns the least of the specified values according to this ordering . 
Returns the least of the specified values according to this ordering . 
Returns the lesser of the two values according to this ordering . 
Returns the least of the specified values according to this ordering . 
Returns the greatest of the specified values according to this ordering . 
Returns the greatest of the specified values according to this ordering . 
Returns the greater of the two values according to this ordering . 
Returns the greatest of the specified values according to this ordering . 
Returns the next element in the iteration , without advancing the iteration . 
Returns a new array of the given length with the same type as a reference array . 
Returns the lower endpoint of this range . 
Returns the upper endpoint of this range . 
Returns the canonical form of this range in the given domain . 
Returns a hash code for this range . 
Returns a readable string representation of this range map . 
Returns a readable string representation of this range sets . 
Creates a RegularImmutableMap from the first n entries in entryArray . 
Creates a thread-safe sets backed by a hash map . 
Creates a thread-safe sets backed by a hash map and containing the given elements . 
Returns a sets backed by the specified map . 
Returns an immutable copy of the current contents of this sets view . 
Returns an unmodifiable <b> view </b> of the union of two sets . 
Returns an unmodifiable <b> view </b> of the intersection of two sets . 
Returns an unmodifiable <b> view </b> of the difference of two sets . 
Returns an unmodifiable <b> view </b> of the symmetric difference of two sets . 
Returns an unmodifiable view of the specified navigable sets . 
removes each element in an iterable from a sets . 
Returns a descending view of this multiset . 
Returns a collection view of all values associated with a key . 
Removes all values associated with a given key . 
Returns a map view that associates each key with the corresponding values in the multimap . 
removes a row key / column key / value mapping , if present . 
Creates an iterator that returns each column value with duplicates omitted . 
Returns the number of row key / column key / value mappings in the table . 
Returns the hash code for this table . 
Removes all mappings from the table . 
Removes the mapping , if any , associated with the given keys . 
Returns a view of all mappings that have the given row key . 
Returns a view of all mappings that have the given column key . 
Returns a sets of all row key / column key / value triplets . 
Returns a sets of row keys that have one or more values in the table . 
Returns a sets of column keys that have one or more values in the table . 
Returns a collection of all values , which may contain duplicates . 
Returns a view that associates each row key with the corresponding map from column keys to values . 
Returns a view that associates each column key with the corresponding map from row keys to values . 
Returns the row key of this cell . 
Returns the column key of this cell . 
Returns the value of this cell . 
Returns the hash code of this cell . 
Returns an immutable cell with the specified row key , column key , and value . 
Creates a transposed view of a given table that flips its row and column keys . 
Creates a table that uses the specified backing map and factory . 
Returns a view of a table where each value is transformed by a function . 
Returns an unmodifiable view of the specified table . 
Returns an unmodifiable view of the specified row-sorted table . 
Returns the comparator that orders the rows . 
Returns the comparator that orders the columns . 
Returns the comparator that orders the multimap keys . 
Creates a new , empty multiset , sorted according to the elements ' natural order . 
Creates a new , empty multiset , sorted according to the specified comparator . 
Creates an empty multiset containing the given initial elements , sorted according to the elements ' natural order . 
Returns the first node in the tree that is in range . 
Removes the minimum node from this subtree to be reused elsewhere 
Removes the maximum node from this subtree to be reused elsewhere 
Returns a tree traverser that uses the given function to navigate from a node to its children . 
Returns the children of the specified node . 
Returns an unmodifiable iterable over the nodes in a tree structure , using pre-order traversal . 
Returns an unmodifiable iterable over the nodes in a tree structure , using post-order traversal . 
Returns an unmodifiable iterable over the nodes in a tree structure , using breadth-first traversal . 
Returns a new ArrayBasedEscaperMap for creating ArrayBasedCharEscaper or ArrayBasedUnicodeEscaper instances . 
Returns the non-null array of replacements for fast lookup . 
Returns the escaped form of a given literal string . 
Returns the escaped form of a given literal string , starting at the given index .  
adds a new mapping from an index to an object to the escaping . 
adds multiple mappings at once for a particular index . 
Returns the escaped form of a given literal string . 
Returns a builder for creating simple , fast escapers . 
Sets the safe range of characters for the escaper . 
Sets the replacement string for any characters outside the ` safe ' range that have no explicit replacement . 
Adds a replacement string for the given input character . 
Returns a new escaper based on the current state of the builder . 
Returns a thread-local 1024-char array . 
Returns the escaped form of a given literal string . 
Returns the escaped form of a given literal string , starting at the given index .  
Returns the Unicode code point of the character at the given index . 
Returns the wrapped , ` dead ' event , which the system was unable to deliver to any registered subscriber . 
Returns a dispatcher that queues events that are posted reentrantly on a thread that is already dispatching an event , guaranteeing that all events posted on a single thread are dispatched to all subscribers in the order they are posted . 
Returns a dispatcher that queues events that are posted in a single global queue . 
Returns a dispatcher that dispatches events to subscribers immediately as they 're posted without using an intermediate queue to change the dispatch order . 
Returns the identifier for this event bus . 
Returns the default executor this event bus uses for dispatching events to subscribers . 
Gets the context for the given event . 
Gets an iterator representing an immutable snapshot of all subscribers to the given event at the time this method is called . 
Returns all subscribers for the given listener grouped by the type of event they subscribe to . 
Returns a string representation of this graph . 
Returns a string representation of this network . 
Returns a string representation of this graph . 
Returns an instance which specifies that no ordering is guaranteed . 
Returns an instance which specifies that insertion ordering is guaranteed . 
Returns an instance which specifies that the natural ordering of the elements is guaranteed . 
Returns the type of ordering used . 
Returns all edges in this graph . 
Returns true if the edges in this graph are directed . 
Returns the value previously associated with the edge connecting the two nodes . 
Returns the value previously associated with the edge connecting the two nodes . 
Returns true if the edges in this network are directed . 
Returns true if this network allows parallel edges . 
Returns the former predecessor node . 
Returns the former successor node . 
Returns whether any bits changed as a result of this operation . 
Returns the number of bits in the underlying bit array . 
Returns true if the bit changed value . 
Returns a funnel for integers . 
Returns a funnel for longs . 
Returns the number of bits in this hash code ; a positive multiple of 8 . 
Returns a general-purpose , <b> temporary-use </b> , non-cryptographic hash function . 
Returns a hash function implementing FarmHash 's Fingerprint64 , an open-source algorithm .  
Returns a hash code , having the same bit length as each of the input hash codes , that combines the information of these hash codes in an ordered fashion . 
Returns a hash code , having the same bit length as each of the input hash codes , that combines the information of these hash codes in an unordered fashion . 
Returns a hash function which computes its hash code by concatenating the hash codes of the underlying hash functions together . 
Returns a hash function which computes its hash code by concatenating the hash codes of the underlying hash functions together . 
Returns a sun.misc.Unsafe . 
Returns an encoding that behaves equivalently to this encoding , but uses an alternate character for padding . 
Returns an encoding that behaves equivalently to this encoding , but encodes and decodes with uppercase letters . 
Returns an encoding that behaves equivalently to this encoding , but encodes and decodes with lowercase letters . 
Returns the contents that have been written to this instance , as a byte array . 
returns the result of processing all the bytes . 
Returns whether the source has zero bytes . 
Returns the size of this source in bytes , if the size can be easily determined without actually opening the data stream . 
Returns the size of this source in bytes , even if doing so requires opening and traversing an entire stream .  
Returns SKIP_FAILED if the first call to skip threw , in which case skip may just not be supported . 
Returns the result produced by the processor . 
Creates a new byte array for buffering reads or writes . 
Returns the total number of bytes read . 
Returns the total number of bytes skipped . 
Returns the size of this source in chars , if the size can be easily determined without actually opening the data stream . 
Returns the length of this source in chars , even if doing so requires opening and traversing an entire stream .  
Returns whether the source has zero chars . 
Returns an iterable over the lines in the string . 
Returns the total number of chars read . 
Returns the number of bytes read . 
Returns the number of bytes written . 
Returns a buffered reader that reads from a file using the given character sets .  
Returns a buffered writer that writes to a file using the given character sets .  
Returns true if the files contains the same bytes . 
Creates an empty file or updates the last updated timestamp on the same as the unix command of the same name . 
Creates any necessary but nonexistent parent directories of the specified file . 
returns the result of processing all the lines . 
Returns a new CharBuffer identical to buf , except twice the capacity . 
Returns the number of elements between the limit and capacity . 
Returns the base 2 logarithm of a double value . 
Returns its argument if it is non-negative , zero if it is negative . 
Returns whether this is a vertical transformation . 
Returns whether this is a horizontal transformation . 
Returns the inverse linear transformation . 
Returns a b mod m. 
Returns a ^ 2 mod m. 
Returns a ^ p mod m. 
Returns true if n is a strong probable prime relative to the specified base . 
Returns the number of pairs in the dataset . 
Returns the population covariance of the values . 
Returns the sample covariance of the values . 
Gets a byte array representation of this instance . 
Adds the given pair of values to the dataset . 
Adds the given statistics to the dataset , as if the individual values used to compute the statistics had been added directly . 
Returns an immutable snapshot of the current statistics . 
Returns the number of pairs in the dataset . 
Returns the population covariance of the values . 
Returns the sample covariance of the values . 
Returns statistics over a dataset containing the given values . 
Returns statistics over a dataset containing the given values . 
Returns statistics over a dataset containing the given values . 
Returns statistics over a dataset containing the given values . 
Returns statistics over a dataset containing the given values . 
Returns the number of values . 
Returns the sum of the values . 
Returns the lowest value in the dataset . 
Returns the highest value in the dataset . 
Gets a byte array representation of this instance . 
Adds the given value to the dataset . 
Adds the given values to the dataset . 
Adds the given values to the dataset . 
Adds the given values to the dataset . 
Adds the given values to the dataset . 
Adds the given values to the dataset . 
Adds the given statistics to the dataset , as if the individual values used to compute the statistics had been added directly . 
Returns an immutable snapshot of the current statistics . 
Returns the number of values . 
Returns the sum of the values . 
Returns the lowest value in the dataset . 
Returns the highest value in the dataset . 
returns true if this instance has a defined port . 
gets the current port number , failing if no port is defined . 
Returns the current port number , with a default if no port is defined . 
returns true for valid port numbers . 
Returns a string representation of the host specifier suitable for inclusion in a URI . 
Returns an InetAddress representing the literal IPv4 or IPv6 host portion of a URL , encoded in the format specified by RFC 3986 section 3.2.2 . 
Returns the IPv4 address embedded in an IPv4 compatible address . 
Returns the IPv4 address embedded in a 6to4 address . 
Returns the Teredo information embedded in a Teredo address . 
Returns the IPv4 address embedded in an ISATAP address . 
Returns an integer representing an IPv4 address regardless of whether the supplied argument is an IPv4 address or not . 
Returns an Inet4Address having the integer value specified by the argument . 
Returns a new InetAddress that is one less than the passed in address . 
Returns a new InetAddress that is one more than the passed in address . 
Returns true if the InetAddress is either 255.255.255.255 for IPv4 or ffff : ffff : ffff : ffff : ffff : ffff : ffff : ffff for IPv6 . 
Returns the index of the leftmost part of the public suffix , or -1 if not found . 
Returns the individual components of this domain name , normalized to all lower case . 
Returns the portion of this domain name that is one level beneath the public suffix . 
Returns the domain name , normalized to all lower case . 
Returns the top-level media type . 
Returns the media subtype . 
Returns a multimap containing the parameters of this media type . 
Returns an optional charset for the value of the charset parameter if it is specified . 
Returns a new instance with the same type and subtype as this instance , but without any parameters . 
Returns true if either the type or subtype is the wildcard . 
Creates a new media type with the given type and subtype . 
Creates a media type with the `` application '' type and the given subtype . 
Creates a media type with the `` audio '' type and the given subtype . 
Creates a media type with the `` image '' type and the given subtype . 
Creates a media type with the `` text '' type and the given subtype . 
Creates a media type with the `` video '' type and the given subtype . 
Creates a boolean array with entries corresponding to the character values specified in safeChars sets to true . 
Returns the values from each provided array combined into a single array . 
Returns the values from each provided array combined into a single array . 
Returns the values from each provided array combined into a single array . 
Returns the values from each provided array combined into a single array . 
Returns the values from each provided array combined into a single array . 
Returns the values from each provided array combined into a single array . 
Returns the values from each provided array combined into a single array . 
Returns the values from each provided array combined into a single array . 
Returns the value of the given byte as an integer , when treated as unsigned . 
Returns a string representation of x , where x is treated as unsigned . 
Returns a sun.misc.Unsafe . 
Returns the Unsafe-using Comparator , or falls back to the pure-Java implementation if unable to do so . 
Returns dividend / divisor , where the dividend and divisor are treated as unsigned 32-bit quantities . 
Returns dividend % divisor , where the dividend and divisor are treated as unsigned 32-bit quantities . 
Returns a string representation of x , where x is treated as unsigned . 
Returns dividend / divisor , where the dividend and divisor are treated as unsigned 64-bit quantities . 
Returns dividend % divisor , where the dividend and divisor are treated as unsigned 64-bit quantities . 
Returns a string representation of x , where x is treated as unsigned . 
Returns all resources loadable from the current class path , including the class files of all loadable classes but excluding the `` META-INF/MANIFEST . 
Returns all classes loadable from the current class path . 
Returns all top level classes loadable from the current class path . 
Returns the url identifying the resource .  
Returns the fully qualified name of the resource . 
Returns the package name of the class , without attempting to load the class . 
Returns the simple name of the underlying class as given in the source code . 
Returns the fully qualified name of the class . 
Returns true if the element is public . 
Returns true if the element is protected . 
Returns true if the element is package-private . 
Returns true if the element is private . 
Returns true if the element is static . 
Returns true if the method is abstract . 
Returns true if the element is native . 
Returns true if the method is synchronized . 
Returns true if the field is volatile . 
Returns true if the field is transient . 
Returns an empty type to instance map . 
Returns a new builder . 
Returns a new immutable type-to-instance map containing the entries provided to this builder . 
Returns the type of the parameter . 
Returns the captured type . 
Returns the represented type . 
Returns the sets of interfaces and classes that this type is or is a subtype of . 
Returns the types that are interfaces implemented by this type . 
Returns the types that are classes . 
Returns the raw types of the types in this sets , in the same order . 
Returns the name of this service . 
Returns the name of this service . 
Returns the name of this service . 
Adds the chain to the seen sets , and returns whether all the chain was new to us . 
Gets the current value . 
Sets to the given value . 
Returns the String representation of the current value . 
Returns the length of the array . 
Returns the String representation of the current values of array . 
Removes all mappings from this map whose values are zero . 
Returns the sum of all values in this map . 
Returns true if this map contains a mapping for the specified key . 
Returns the number of key-value mappings in this map . 
Removes all of the mappings from this map . 
Creates a new factory with the specified policy . 
Returns a list of delegate futures that correspond to the futures received in the order that they complete . 
Returns the ClassValue-using validator , or falls back to the `` weak sets '' implementation if unable to do so . 
Returns whether this monitor is using a fair ordering policy . 
Returns whether this monitor is occupied by any thread . 
Returns the number of times the current thread has entered this monitor in excess of the number of times it has left . Returns 0 if the current thread is not occupying this monitor . 
Returns an estimate of the number of threads waiting to enter this monitor . 
Returns whether any threads are waiting to enter this monitor . 
Returns an estimate of the number of threads waiting for the given guard to become satisfied . 
Returns 0L if and only if the timeout has already elapsed . 
Returns the remaining nanos until the given timeout , or 0L if the timeout has already elapsed . 
Returns a default thread factory used to creates new threads . 
Adds a task to the queue and makes sure a worker thread is running , unless the queue has been suspended . 
Returns the lifecycle state of the service . 
Returns true if this state is terminal . 
Returns the service load times . 
Returns true if no transitions have been observed yet . 
Returns the number of microseconds during cool down that we have to wait to gets a new permit . 
Returns the stripe that corresponds to the passed key . 
Returns the stripe at the specified index . 
Returns the total number of stripes in this instance . 
Sets daemon or not for new threads created with this ThreadFactory . 
Sets the priority for new threads created with this ThreadFactory . 
Returns a new thread factory using the options supplied during the building process . 
Returns an exception handler that exits the system . 
Returns a PublicSuffixType of the right type according to the given code 
Returns a new target iterator each time it 's called . 
Returns the name of the test method invoked by this test instance . 
Returns the sets of features that are implied by this feature . 
gets the full sets of requirements for a tester class . 
gets the full sets of requirements for a tester class . 
Find all the tester annotations declared on a tester class or method . 
Find all the constraints explicitly or implicitly specified by a single tester annotation . 
Returns an array of four bogus elements that will always be too high or too low for the display . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns a collection that simulates concurrent modification by having its size method returns incorrect values . 
Returns a `` nefarious '' map entry with the specified key and value , meaning an entry that is suitable for testing that map entries can not be modified via a nefarious implementation of equals . 
Creates a new , empty instance of the class under test . 
Creates a new , non-empty instance of the class under test . 
Returns an iterable whose iterator returns the given elements in order . 
Returns an iterable whose iterator returns the given elements in order . 
creates a suite whose maps are descending views of other maps . 
creates a suite whose maps are descending views of other maps . 
Creates a runnable JUnit test suite based on the criteria already given . 
Creates a suite whose map has some elements filtered out of view . 
Creates a suite whose sets has some elements filtered out of view . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the sample elements that this generate populates its container with . 
Creates a new container containing the given elements . 
Returns the iteration ordering of elements , given the order in which they were added to the container . 
Returns the elements sorted in natural order . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Adds a group of objects that are supposed to be equivalent to each other and not equivalent to objects in any other equivalence group added to this tester . 
Sets the increment applied to the ticker whenever it is queried . 
Creates a garbage object that counts down the latch in its finalizer . 
Returns this object . 
Returns this object . 
Adds the most recently logged record to our list . 
Adds a number of occurrences of the specified element to this multiset . 
Removes a number of occurrences of the specified element from this multiset . 
Removes <b> all </b> occurrences of the specified element from this multiset . 
Returns the underlying implementation , useful for the Footprint benchmark . 
Returns the number of elements in this queue . 
Removes a single instance of the specified element from this queue , if it is present . 
Returns <tt> true </tt> if this queue contains the specified element . 
Returns an array containing all of the elements in this queue , in proper sequence . 
Returns an array containing all of the elements in this queue , in proper sequence ; the runtime type of the returned array is that of the specified array . 
Returns an iterator over the elements in this queue in proper sequence . 
Removes a single instance of the specified element from this queue , if it is present . 
Returns an array containing all of the elements in this queue . 
Returns an array containing all of the elements in this queue ; the runtime type of the returned array is that of the specified array . 
Returns an iterator over the elements in this queue . 
creates the FRQ in a method that goes out of scope so that we 're sure it will be reclaimed . 
Returns an array containing parameters for invoking a checkArgument , checkNotNull or checkState method reflectively @param firstParam The first parameter @param sig The method signature 
Returns an iterable containing all combinations of maximumSize , expireAfterAccess/Write , weakKeys and weak/softValues . 
Returns an iterable containing all combinations of maximumSize and expireAfterAccess/Write . 
Returns an iterable containing all combinations weakKeys and weak/softValues . 
Returns the entries that were added to the map , so they wo n't fall out of a map with weak or soft references until the caller drops the reference to the returned entries . 
Creates a table with the specified data . 
Returns string representation of a method . 
Returns a new iterable over the specified strings . 
Returns the seed used for the randomization . 
Creates and returns an instance of the graph to be tested . 
Creates and returns an instance of the graph to be tested . 
adds parameters : directed/undirected 
Creates a CharSequenceReader wrapping the given CharSequence and tests that the reader produces the same sequence when read using each type of read method it provides . 
Returns a root path for the file system . 
Returns the file with the given name under the testdata directory . 
Creates a new temp dir for testing . 
Gets a temp dir for testing . 
Returns a byte array of length size that has values 0 . . 
Returns a byte array of length size that has values offset . . 
Returns a Readable that is not a Reader . 
Returns the data to expect the source or sink to contain given the data that was used to creates the source or written to the sink . 
Creates a new source containing some or all of the given data . 
Creates a new sink . 
Gets the current content of the created sink . 
Returns whether or not a new stream was opened . 
Returns whether or not an open stream was closed . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
Returns the original element list , unchanged . 
gets and sets for out of bound indices throw IndexOutOfBoundsException 
gets returns the last value sets at index 
gets returns the last value lazySet at index by same thread 
gets returns the last value sets 
gets returns the last value lazySet in same thread 
Returns the shortest timed delay . 
Sets delays as multiples of SHORT_DELAY . 
Returns a timeout in milliseconds to be used in tests that verify that operations block or time out . 
Returns a new Date instance representing a time delayMillis milliseconds in the future . 
Returns a policy containing all the permissions we ever need . 
Returns a new started daemon Thread running the given runnable . 
Creates and starts the camera . 
Gets intercepted method that annotated with caching annotation . 
Gets all method parameters . 
Gets method name to be used to gets a key for request caching . 
Gets action that invokes cache key method , the result of execution is used as cache key .  
Gets execution type of cache key action . 
Returns an immutable sets of all Annotations on this method parameter , never null . 
Gets the parameter type as declared on the method . 
Gets the parameter value @return parameter value 
Gets index of the parameter in the original parameter array . 
Creates batch command . 
Gets command action . 
Gets fallback action . 
Gets collapsed requests . 
Gets exceptions types which should be ignored . 
Gets type of expected closure type . 
Creates closure in accordance with method returns type . 
Gets action name . 
Gets execution type for specified class type . 
Sets collapsed requests . 
Creates and sets Hystrix command properties . 
Creates and sets Hystrix thread pool properties . 
Creates and sets Hystrix collapser properties . 
Gets parameter types of the join point . 
Gets declared method from specified type by mame and parameters types . 
Gets fallback method for command method . 
Gets method by name and parameters types using reflection , if the given type does n't contain required method then continue applying this method for all super classes up to Object class . 
adds this method to enable a hook to notify Hystrix to shutdown . 
Returns true iff the t was caused by a java.lang.Error that is unrecoverable . 
gets the TryableSemaphore this HystrixCommand should use if a fallback occurs . 
gets the TryableSemaphore this HystrixCommand should use for execution if not running in a separate thread . 
gets the Throwable/Exception thrown that caused the failure . 
gets the Throwable/Exception emitted by this command instance prior to checking the fallback . 
sets an exception if a response is not yet received otherwise skip it @param e synthetic error to sets on initial command when no actual response is available 
sets an ISE if a response is not yet received otherwise skip it @param e A pre-generated exception . 
returns a ref-counted stream that will only do work when at least one subscriber is present 
Creates a new ExecutionResult by adding the defined ` event ' to the ones on the current instance . 
returns a new instance on each invocation .  
returns the number of currently-executing Hystrix threads @return number of currently-executing Hystrix threads 
returns a new instance on each invocation .  
returns the cached value only @return cached distribution mean 
returns the cached value if available . 
returns the stream of buckets @return stream of buckets 
returns a ref-counted stream that will only do work when at least one subscriber is present 
returns a ref-counted stream that will only do work when at least one subscriber is present 
gets the current value for this variable for the current request context . 
Sets the value of the HystrixRequestVariable for the current request context . 
Removes the value of the HystrixRequestVariable from the current request . 
gets the current value from the underlying DynamicProperty 
Returns an iterator on a copy of the internal array so that the iterator wo n't fail by buckets being added/removed concurrently . 
Adds the given value . 
Returns the current sum . 
Returns the current maximum . 
Sets base and all cells to the given value . 
Returns a sun.misc.Unsafe . 
Returns the degrees in clockwise . 
Returns an opaque token representing the current position in the stream . 
removes the cached bitmap , if it exists . 
adds this request to a group specified by groupKey . 
sets a placeholder on the ImageView while the request is loading @param drawable @return 
sets a placeholder on the ImageView while the request is loading @param resourceId @return 
sets an error image on the ImageView if the request fails to load @param drawable @return 
sets an error image on the ImageView if the request fails to load @param resourceId @return 
sets a HTTP header @param name Header name @param value Header value @return 
sets HTTP headers @param header @return 
sets whether this request will follow redirects 
adds an HTTP header @param name Header name @param value Header value @return 
adds multiple headers at once @param params @return 
adds a query parameter @param name @param value @return 
adds multiple query parameters at once @param params @return 
sets the user agent of this request . 
gets the default Ion object instance and begin building a request @param context @return 
gets the default Ion instance @param context @return 
gets the given Ion instance by name @param context @param name @return 
creates a ImageView bitmap request builder @param imageView @return 
creates a builder that can be used to build an network request @param imageView @return 
gets the application Context object in use by this Ion instance @return 
gets or put an item from the cache @return 
gets or put an item in the persistent store @return 
gets the Cookie middleware that is attached to the AsyncHttpClient instance . 
gets the AsyncHttpClient object in use by this Ion instance @return 
gets the AsyncServer reactor in use by this Ion instance @return 
gets the Gson object in use by this Ion instance . 
sets the log level for all requests made by Ion . 
sets the Gson object in use by this Ion instance . 
returns the bitmap cache used by this Ion instance @return 
returns a Future if this loader can handle a request otherwise it returns null , and Ion continues to the next loader . 
returns a future if the laoder can handle the request as a bitmap otherwise it returns null @param ion @param key @param uri @param resizeWidth @param resizeHeight @return 
returns whether this is a LiveStreamed session and whether it is happening right now . 
sets the activity title to be that of the selected tag name . 
returns the conference messages opt-in data . 
returns the wifi setup card data . 
returns card data representing a message to send to users before registering . 
returns card data representing a message to allow attendees to provide wifi feedback . 
returns card data for instructions on where to queue for the Keynote . 
returns card data for information about the After Hours party . 
returns whether a package is installed . 
adds a tagId to the sets of filters . 
Returns the path for the session feedback with the given session id , as used when communication with the wear app . 
Removes the Data Item that was used to creates a notification on the watch . 
Gets the class name of the intent service that will handle GCM messages . 
Sets whether the device was successfully registered in the server side . 
Creates a new instance depending of the form factor of the device . 
Returns null if there is no corresponding cache entry or it could not be loaded . 
Find and resolve time slot conflicts . 
returns video ID given URI . 
Returns a tuple of question marks . 
Adds or removes a single session to/from the specified Google Calendar . 
Removes all calendar entries associated with Google I/O 2013 . 
Returns the number of minutes , rounded down , since session has started , or 0 if not started yet . 
Returns the number of minutes , rounded up , until session stars , or 0 if already started . 
returns true if conference info cards are enabled , false if user has disabled them . 
sets a new value for the conference message cards enabled preference . 
Returns true if user already answered the conference info cards prompt , false if they have n't yet . 
Returns true if user has already seen the passed-in message card , false if they have n't yet . 
sets the dismissal state of one of the conference message cards . 
returns true if the user has indicated they want the schedule in local times , false if they want to use the conference time zone . 
returns true if the user has indicated they 're attending I/O in person . 
sets the attendee preference indicating whether they 'll be attending Google I/O on site . 
returns true if user has already declined WiFi setup , but false if they have n't yet . 
Returns true if user has already indicated whether they 're a local or remote I/O attendee , false if they have n't answered yet . 
returns true if the first-app-run-activities have already been executed . 
returns a long representing the last time a sync succeeded . 
returns true if analytics are enabled , false if user has disabled them . 
returns true if session reminders are enabled , false if user has disabled them . 
returns true if session feedback reminders are enabled , false if user has disabled them . 
returns a long representing the current data sync interval time . 
sets a new interval for the data sync time . 
returns true if calendar sync is enabled , false if disabled . 
Sets up listeners for social media panels . 
Adds listeners to a panel to open the G + and Twitter apps via an intent . 
Returns the content description for a social link . 
Returns the timestamp of the data we have in the content provider . 
Sets the timestamp of the data we have in the content provider . 
Returns the timestamp of the data downloaded from the server 
Returns the remote manifest file 's URL . 
Returns the cache file where we store our cache of the response of the given URL . 
Creates the cache directory , if it does n't exist yet 
Returns the cache key to be used to store the given URL . 
creates a copy of current pending actions and delegate the proper sync ` ing to the concrete subclass on the method syncImpl . 
Creates the correct content provider update operation depending on the type of the user action . 
Returns a JSON string representation of the given UserData object . 
Returns the JSON string representation of the given UserData object as a byte array . 
Creates a UserData object from the given List of user actions . 
Returns the User Data that 's on the device 's local DB . 
Returns the navigation drawer item that corresponds to this Activity . 
Sets up the navigation drawer as appropriate . 
Sets up the given navdrawer item 's appearance to the selected state . 
Sets up the account box . 
Returns true if a custom container View should be used for each groups . 
Returns a new custom View that will be used for each of the collection group headers . 
Returns a new custom View that will be used for each of the collection item . 
Returns the drawable used as the foreground of this FrameLayout . 
Sets the colors to be used for indicating the selected tab . 
sets the custom layout to be inflated for the tab views . 
Sets the associated view pager . 
creates a default view to be used for tabs . 
returns the accountName the app is using as the active Google Account . 
Sets up Analytics to be initialized when the user agrees to TOS . 
returns the current initialization state which indicates whether events can be logged . 
Sets this activity 's Android Beam message to one representing the given session . 
Returns the drawable Id of icon to use for a room type . 
Creates a marker for a session . 
Creates a new IconGenerator for labels on the map . 
Creates a marker for a label . 
Creates a marker for Moscone Center . 
Returns true if the given tile file exists as a local asset . 
returns selection string for current internal state . 
returns selection arguments for current internal state . 
Returns `` Today '' , `` Tomorrow '' , `` Yesterday '' , or a short date format . 
sets the current time only when the current build is a debug build . 
Returns whether we should or should not offer to sets up wifi . 
Sets the title of the activity depending on the year and topic filters . 
Returns the current year . 
gets the current fragment to display . 
gets all WelcomeFragments for the WelcomeActivity . 
gets a resource string . 
gets the text for the positive action button . 
gets the text for the negative action button . 
Gets the access key . 
Gets registered device count . 
Creates a persistent record with the devices to be notified using a multicast message . 
Gets a persistent record with the devices to be notified using a multicast message . 
creates or update a file in a GCC bucket , using the default ACL for the bucket . 
sets the Drag View after the view is inflated 
sets the color used to fade the pane covered by the sliding pane out when the pane will become fully covered in the expanded state . 
sets sliding enabled flag @param enabled flag value 
sets the collapsed panel height in pixels @param val A height in pixels 
sets the shadow height @param val A height in pixels 
sets parallax offset for the panel @param val A height in pixels 
Sets the minimum fling velocity for the panel @param val the new value 
Sets the panel slide listener @param listener 
sets the draggable view portion . 
sets the draggable view portion . 
sets an anchor point where the panel can stop during sliding @param anchorPoint A value between 0 and 1 , determining the position of the anchor point starting from the top of the layout . 
Gets the currently sets anchor point @return the currently sets anchor point 
Sets whether or not the panel overlays the content @param overlayed 
Sets whether or not the main content is clipped to the top of the panel @param overlayed 
sets if the drag view can have its own touch events . 
Returns the current state of the panel as an enum . 
returns the magnitude of a draggable child view 's horizontal range of motion in pixels . 
returns the magnitude of a draggable child view 's vertical range of motion in pixels . 
sets the minimum velocity that will be detected as having a magnitude greater than zero in pixels per second . 
returns the currently configured minimum velocity . 
returns the size of an edge . 
Find the topmost child under the given point within the parent view 's coordinate system . 
Adds to the headers that will be sent with each request from this client instance . 
Sets the logger to be used for each request . 
Sets the read timeout in ms , which begins after connection has been made . 
sets maximum number of retries to attempt , capped at 18 . 
Returns URL encoded data @return URL encoded String 
returns a URL encoded byte array in UTF-8 charset . 
Creates a new journal that omits redundant information . 
Returns the directory where this cache stores its data . 
Returns the maximum number of bytes that this cache should use to store its data . 
Returns the number of bytes currently being used to store the values in this cache . 
Returns true if this cache has been closed . 
Returns an editor for this snapshot 's entry , or null if either the entry has changed since this snapshot was created or if another edit is in progress . 
Returns an unbuffered input stream to read the last committed value , or null if no value has been committed . 
Returns the last committed value as a string , or null if no value has been committed . 
sets lengths using decimal numbers like `` 10123 '' . 
sets the limits of the SVG , which are the estimated bounds computed by the parser . 
gets the parsed SVG picture data . 
Gets the bounding rectangle for the SVG , if one was specified . 
Gets the bounding rectangle for the SVG that was computed upon parsing . 
Adds or replaces an entry to the cache . 
Removes an entry from the cache . 
Returns the current timeout . 
Returns the current retry count . 
Returns true if this policy has attempts remaining , false otherwise . 
returns the method for this request . 
sets a tag on this request . 
Returns this request 's tag . 
Sets the retry policy for this request . 
Adds an event to this request 's event log ; for debugging . 
Sets the sequence number of this request . 
Returns the sequence number of this request . 
Returns the URL of this request . 
Returns the cache key for this request . 
Returns the annotated cache entry , or null if there is n't one . 
Returns true if this request has been canceled . 
Returns a list of extra HTTP headers to go along with this request . 
Returns a Map of POST parameters to be used for this request , or null if a simple gets should be used . 
Returns the raw POST body to be sent . 
Returns a Map of parameters to be used for a POST or PUT request . 
Returns the raw POST or PUT body to be sent . 
sets whether or not responses to this request should be cached . 
Returns true if responses to this request should be cached . 
Returns the socket timeout in milliseconds per retry attempt . 
Returns the retry policy that should be used for this request . 
Returns true if this request has had a response delivered for it . 
Gets a sequence number . 
Adds a Request to the dispatch queue . 
Returns a successful response containing the parsed result . 
Returns a failed response containing the given error code and an optional localized message displayed to the user . 
Returns whether this response is considered successful . 
Returns the Account being used by this authenticator . 
Returns a buffer from the pool if one is available in the requested size , or allocates a new one if a pooled one is not available . 
Returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size . 
Removes buffers from the pool until it is under its size limit . 
Returns the cache entry with the specified key if it exists , null otherwise . 
Creates the root directory if necessary . 
Removes the specified key from the cache if it exists . 
Creates a pseudo-unique filename for the specified cache key . 
Returns a file object for the given cache key . 
Removes the entry identified by ` key ' from the cache . 
Creates a cache entry for the specified data . 
Creates the appropriate subclass of HttpUriRequest for passed in request . 
Returns a URL to use instead of the provided one , or null to indicate this URL should not be used at all . 
Returns an ImageContainer for the requested URL . 
Sets the amount of time to wait after the first response arrives before delivering all responses . 
Returns the bitmap associated with the request URL if it has been loaded , null otherwise . 
Returns the requested URL for this container . 
sets the error for this response 
gets the error for this response 
Adds another ImageContainer to the list of those interested in the results of the request . 
Creates a cache key for use with the L1 cache . 
Sets URL of the image that should be loaded into this view . 
Sets the default image resource ID to be used for this view until the attempt to load it completes . 
Sets the error image resource ID to be used for this view in the event that the image requested fails to load . 
Adds a marker to this log with the specified name . 
Returns the time difference between the first and last events in this log . 
Gets the value for the key @param key element key @return value or null 
Gets the stream of child documents @param key element key @param constructor constructor of child class @return child documents 
Creates a callable that lazily evaluates to given value with artificial delay . 
Creates a simple callback that logs the complete status of the async result . 
Returns immediately with async result . 
Returns immediately with async result . 
Gets the value of completed async task . 
Sets the value from successful execution and executes callback if available . 
Sets the exception from failed execution and executes callback if available . 
gets user account using read-through cache 
gets user account using write-through cache 
gets user account using write-around cache 
gets user account using read-through cache with write-back policy 
removes node from linked list . 
Returns cache data in list form . 
gets a description of the request @return A human readable description of the request 
Creates customers schema . 
gets all the items in the inventory @return All the items of the inventory , as an unmodifiable list 
gets the tested object @return The tested object , should never returns ` null ' 
Creates an instance of the given type . 
Returns if the welcome message to be displayed will be the enhanced version . 
Returns the contents of this Iterable as a List . 
Returns the next element of the Iterable . 
gets a read-only list of all the items on the top shelf @return The top shelf potions 
gets a read-only list of all the items on the bottom shelf @return The bottom shelf potions 
sets amount of funds for bank account 
gets amount of funds for bank account 
Find lottery ticket by id 
gets all lottery tickets 
gets all the lottery tickets submitted for lottery 
sets next filter in chain after this . 
gets next filter in chain after this . 
gets last filter in the chain . 
gets expression for string 
gets the first parameter @return The first parameter 
creates a new sets of test entries with the expected result @return The list of parameters used during this test 
creates a new sets of test entries with the expected result @return The list of parameters used during this test 
creates a new sets of test entries with the expected result @return The list of parameters used during this test 
creates a new sets of test entries with the expected result @return The list of parameters used during this test 
creates a list of all expected items in the chest . 
gets available cake toppings 
adds new cake layer 
gets available cake layers 
gets the internal state of the holder value @return The internal value 
Sets the path of the file to be loaded , to the given value . 
Returns the number of messages that were displayed to the user . 
Sets the presenter component , to the one given as parameter . 
Sets the file 's name , to the value given as parameter . 
Creates validator against given object @param t object to be validated @param <T> object 's type @return new instance of a validator 
Adds exception to main validation exception list when single step validation ends with failure . 
Returns the current owner of the Mutex , or null if available 
creates a new message from the given sender with the given message body @param sender The sender 's name @param message The message body @return The message instance 
returns a promise to provide the local absolute path of the file downloaded in background . 
Returns a new promise that , when this promise is fulfilled normally , is fulfilled with result of this promise as argument to the action provided . 
sets the exception handler on this promise . 
Returns a new promise that , when this promise is fulfilled normally , is fulfilled with result of this promise as argument to the function provided . 
Sets the sender address of this packet . 
Sets the intended receiver address . 
returns true when globalMutex hold the reference of writerLock 
returns true when globalMutex hold the reference of readerLock 
Returns the number of licenses managed by the Semaphore 
Returns the number of available licenses 
sets the id of this entity @param id The new id 
gets the name of this entity @return The name of the entity 
sets the name of this entity @param name The new name 
creates the current session factory instance , creates a new one when there is none yet . 
gets the service from the cache . 
returns a function which rethrows possible checked exceptions as runtime exception . 
returns a predicate which rethrows possible checked exceptions as runtime exception . 
returns a consumer which rethrows possible checked exceptions as runtime exception . 
Sets up the fixture . 
Returns '' ... '' in place of common prefix and '' ... '' in place of common suffix between expected and actual . 
Gets the actual string value @return the actual string value 
Gets the expected string value @return the expected string value 
Sets up the fixture , for example , open a network connection . 
Returns a string representation of the test case 
Gets the name of a TestCase @return the name of the TestCase 
Sets the name of a TestCase @param name the name to sets 
Gets the failed test . 
Gets the thrown exception . 
Returns a short description of the failure . 
Returns a String containing the stack trace of the error thrown by TestFailure . 
Returns a String containing the message from the thrown exception . 
Adds an error to the list of errors . 
Adds a failure to the list of failures . 
Returns a copy of the listeners . 
Gets the number of detected errors . 
Returns an Enumeration for the errors 
Gets the number of detected failures . 
Returns an Enumeration for the failures 
Gets the number of run tests . 
Returns whether the entire test was successful or not . 
Gets a constructor which takes a single String as its argument or a no arg constructor . 
Returns a test which will fail and log a warning message . 
Adds a test to the suite . 
Adds the tests from the given class to the suite 
Returns the name of the suite . 
Sets the name of the suite . 
Returns the test at the given index 
Returns the number of tests in this suite 
Returns the tests as an enumeration 
Returns the Test corresponding to the given suite . 
Returns the formatted string of the elapsed time . 
Sets the loading behaviour of the test runner 
Returns the loaded Class for a suite name . 
Returns a filtered stack trace 
Returns the formatted string of the elapsed time . 
Creates the TestResult to be used for the test run . 
Returns '' ... '' in place of common prefix and '' ... '' in place of common suffix between expected and actual . 
Returns the actual string value @return the actual string value 
Returns the expected string value @return the expected string value 
Returns string in the form <tt> '' -LSB- included categories -RSB- - -LSB- excluded categories -RSB- '' </tt> , where both sets have comma separated names of categories . 
creates a new MaxCore from a serialized file stored at storedResults 
Returns the number of failures in this result . 
Returns a matcher that verifies that the outer exception has a cause for which the supplied matcher evaluates to true . 
gets the annotations associated with given TestCase . 
Returns a new builder for building an instance . 
Returns all active threads belonging to a thread group . Returns an empty list if this can not be determined , e.g. because new threads are being created at an extremely fast rate . 
Returns the CPU time used by a thread , if possible . 
Returns the formatted string of the elapsed time . 
Returns the stacktrace of the given Throwable as a String . 
Adds a Throwable to the table . 
Gets the runtime for the test . 
Returns a new fresh file with the given name under the temporary folder . 
Returns a new fresh file with a random name under the temporary folder . 
Returns a new fresh folder with the given name under the temporary folder . 
Returns a new fresh folder with a random name under the temporary folder . 
Returns a new builder for building an instance . 
Gets the timeout configured for this rule , in the given units . 
Returns a new default computer , which runs tests in serial order 
creates a Description named name . 
creates a Description named name . 
creates a Description of a single test named name in the ` class ' named className . 
creates a Description of a single test named name in the class clazz . 
creates a Description of a single test named name in the class clazz . 
creates a Description of a single test named name in the class clazz . 
adds Description as a child of the receiver . 
Returns an empty list if there are no children . 
Returns filter specs parsed from command line . 
Returns test classes parsed from command line . 
adds a listener to be notified as the tests run . 
removes a listener . 
Returns a textual description of this Filter @return a textual description of this Filter 
removes tests that do n't pass the parameter filter . 
creates a Request that , when processed , will run a single test . 
creates a Request that , when processed , will run all the tests in a class . 
creates a Request that , when processed , will run all the tests in a class . 
creates a Request that , when processed , will run all the tests in a sets of classes . 
creates a Request that , when processed , will run all the tests in a sets of classes with the default Computer . 
Returns the methods that run tests . 
Returns a new fixture for running a test . 
Returns the model elements ' annotations . 
Returns true if this member is static , false if not . 
Returns true if this member is public , false if not . 
Returns the underlying Java method 
Returns the method 's name 
Returns the returns type of the method 
Returns the returns type of the method 
Returns the class where the method is actually declared 
Returns the annotations on this method 
Returns one or more Throwables that led to this initialization error . 
Returns , efficiently , all the non-overridden fields in this class and its superclasses that are annotated . 
Returns the underlying Java class . 
Returns the class 's name . 
Returns the annotations on this class 
Gets the time passed before the test was interrupted 
Gets the time unit for the timeout value 
Returns a list of objects that define the children of this Runner . 
Returns a name used to describe this Runner 
Sets a scheduler that determines the order and parallelization of children . 
Returns an empty suite . 
Adds a money to this money . 
Adds a simple Money to this money . 
Adds a MoneyBag to this money . 
Adds a money to this money . 
Sets up transitionsTable and maybe something else needed in a special case Behaviour may be changed by overriding processConstant 
Returns the current lexical state . 
Returns the text matched by the current regular expression . 
Returns the character at position <tt> pos </tt> from the matched text . 
Returns the length of the matched text region . 
Returns the current lexical state . 
Returns the text matched by the current regular expression . 
Returns the character at position <tt> pos </tt> from the matched text . 
Returns the length of the matched text region . 
Returns true if we should continue parse annotation 
Returns a sets of enum or sealed types of which supertypeOwner is an entry or a member 
returns true if there is an error 
Returns true if we can prove that ` type ' has equals method from ` Any ' base type 
returns this object if the current descriptor is original itself 
Creates and initializes descriptors for enum entry with the given name and its companion object @param enumMemberNames needed for fake overrides resolution 
Returns null if standalone closing brace is not found 
returns the source info associated with this object . 
sets the source info associated with this object . 
Gets the quasi-mythical root scope . 
Gets the top level scope . 
Creates or retrieves a JsStringLiteral from an interned object pool . 
Gets a name object associated with the specified identifier in this scope , creating it if necessary . 
Creates a new variable with an unique ident in this scope . 
Creates a temporary variable with an unique name in this scope . 
Returns the parent scope of this scope , or null if this is the root scope . 
Returns the character index into the original source file indicating where the source fragment corresponding to this node begins . 
Returns the length in characters of the original source file indicating where the source fragment corresponding to this node ends . 
Gets the name of this source . 
Gets a reader for the dart file 's source code . 
Gets the identifier for this source . 
returns the next binary digit from the number or -1 if done 
gets a context associated with the current thread , creating one if need be . 
gets a Context associated with the current thread , using the given Context if need be . 
gets the current Context . 
gets the current language version . 
sets the language version .  
gets the current error reporter . 
adds a child to the back of the given node . 
gets the exception value originally thrown . 
returns the string content . 
sets the string content . 
returns and pop the token from the stream if it matches ... otherwise returns null 
gets object value assigned with key . 
gets integer value assigned with key . 
gets integer value assigned with key . 
sets object value of the key . 
sets int value of the key . 
returns array of present keys 
Gets an expression to pass to a constructor of a closure function . 
Returns all Kotlin Javascript dependencies that this project has , including transitive ones . 
Returns the associated project , if any @return the associated project , if any 
Sets the associated project , if any @param project the associated project , if any 
Returns the associated location , if any @return the associated location , if any 
Sets the associated location , if any @param location the associated location , if any 
Creates a list of class entries from the given class path . 
Creates a list of class entries from the given class path and specific sets of files within it . 
Adds in all the . 
Adds in all the super classes found for the given class entries into the given map 
Returns false if the given issue has been disabled . 
Returns the severity for a given issue . 
Sets the severity to be used for this issue . 
Returns the list of issues that can be found by all known detectors . 
gets an approximate issue count for a given scope . 
Creates a list of detectors applicable to the given scope , and with the given configuration . 
Returns true if the given id represents a valid issue id @param id the id to be checked @return true if the given id is valid 
Returns true if the given category is a valid category @param name the category name to be checked @return true if the given string is a valid category 
Returns the available categories @return an iterator for all the categories , never null 
Returns the issue for the given id , or null if it 's not a valid id @param id the id to be checked @return the corresponding issue , or null 
Returns a configuration for use by the given project . 
Returns an optimal detector , if applicable . 
Returns the list of source folders for Java source files @param project the project to look up Java source file locations for @return a list of source folders to search for . 
Returns the list of output folders for class files @param project the project to look up class file locations for @return a list of output folders to search for . 
Returns the list of Java libraries @param project the project to look up jar dependencies for @return a list of jar dependencies containing . 
Returns the list of source folders for test source files @param project the project to look up test source file locations for @return a list of source folders to search for . 
Returns the resource folders . 
Returns a suitable location for storing cache files . 
Returns the File pointing to the user 's SDK install area . 
Returns true if this project is a Gradle-based Android project @param project the project to check @return true if this is a Gradle-based project 
Returns a project for the given directory .  
Returns the name of the given project @param project the project to look up @return the name of the project 
Returns the compile target to use for the given project @param project the project in question @return the compile target to use to build the given project 
Returns the highest known API level . 
Creates a super class map for the given project . 
Returns true if the given directory is a lint project directory . 
Returns whether lint should look for suppress comments . 
Adds in any custom lint rules and returns the result as a new issue registry , or the same one if no custom rules were found @param registry the main registry to adds rules to @return a new registry containing the passed in rules plus any custom rules , or the original registry if no custom rules were found 
Returns the project resources , if available @param includeDependencies if true , include merged view of all dependencies @return the project resources , or null if not available 
Returns the scope for the lint job @return the scope , never null 
Sets the scope for the lint job @param scope the scope to use 
Returns the lint client requesting the lint check . 
Returns the property previously stored with the given key , or null @param key the key @return the value or null if not found 
Returns the current phase number . 
Returns the project containing a given file , or null if not found . 
Sets whether lint should abbreviate output when appropriate . 
Returns whether lint should abbreviate output when appropriate . 
Sets whether lint has encountered files with fatal parser errors . 
Returns the projects being analyzed @return the projects being analyzed 
Returns true if the given class is a subclass of the given super class . 
Returns the outer class node of the given class node @param classNode the inner class node @return the outer class node 
Adds a listener to be notified of lint progress @param listener the listener to be added 
Removes a listener such that it is no longer notified of progress @param listener the listener to be removed 
Returns whether the given issue is suppressed in the given method . 
Returns whether the given issue is suppressed for the given field . 
Returns whether the given issue is suppressed in the given class . 
Returns whether the given issue is suppressed in the given parse tree node . 
Returns whether the given issue is suppressed in the given XML DOM node . 
Returns the folder version of the given file . 
Returns the lint client requesting the lint check @return the client , never null 
Returns the sets of files to check with lint . 
Sets the scope to use ; lint checks which require a wider scope sets will be ignored @return the scope to use , or null to use the default 
Sets the scope to use ; lint checks which require a wider scope sets will be ignored @param scope the scope @return this , for constructor chaining 
Sets the release mode . 
Gets the projects for the lint requests . 
Sets the projects for the lint requests . 
Returns the project to be used as the main project during analysis . 
Returns the fully qualified name of the parent view , or null if the view is the root android.view.View class . 
Returns the class name of the parent view , or null if the view is the root android.view.View class . 
Returns true if the given widget name is a layout @param tag the XML tag for the view @return true if the given tag corresponds to a layout 
Creates a light-weight handle to a location for the given node . 
Returns the parent category , or null if this is a top level category @return the parent category , or null if this is a top level category 
Returns the name of this category @return the name of this category 
Returns a full name for this category . 
Returns the raw bytecode data for this class file @return the byte array containing the bytecode data 
Returns the bytecode object model @return the bytecode object model , never null 
Returns the jar file , if any . 
Returns the source file for this class file , if possible . 
Returns the contents of the source file for this class file , if found . 
Returns the contents of the source file for this class file , if found . 
Returns a location for the given source line number in this class file 's source file , if available . 
Returns the scope for the lint job @return the scope , never null 
Returns the configuration for this project . 
Returns the project containing the file being checked @return the project , never null 
Returns the main project if this project is a library project , or self if this is not a library project . 
Returns the lint client requesting the lint check @return the client , never null 
Returns the driver running through the lint checks @return the driver 
Returns the contents of the file . 
Returns the value of the given named property , or null . 
Sets the value of the given named property . 
Gets the SDK info for the current project . 
Returns false if the given issue has been disabled . 
Returns the current phase number . 
Returns the comment marker used in Studio to suppress statements for language , if any 
Returns whether this file contains any suppress comment markers 
Returns true if the given issue is suppressed at the given character offset in the file 's contents 
Returns whether this detector applies to the given folder type . 
Returns the list of elements that this detector wants to analyze . 
Returns the list of attributes that this detector wants to analyze . 
Returns the sets of files this scanner wants to consider . 
Returns true if this detector applies to the given file @param context the context to check @param file the file in the context to check @return true if this detector applies to the given context and file 
Returns the expected speed of this detector @return the expected speed of this detector 
Returns the expected speed of this detector . 
Returns the class of the detector to use to find this issue @return the class of the detector to use to find this issue 
Returns the scope required to analyze the code to detect this issue . 
Returns true if the given scope is adequate for analyzing this issue .  
Creates a new issue .  
Returns the unique id of this issue . 
Returns a priority , in the range 1-10 , with 10 being the most severe and 1 the least @return a priority from 1 to 10 
Adds a more info URL string @param moreInfoUrl url string @return this , for constructor chaining 
Returns whether this issue should be enabled by default , unless the user has explicitly disabled it . 
Returns the implementation for the given issue @return the implementation for this issue 
Sets the implementation for the given issue . 
Sets whether this issue is enabled by default . 
Returns a location for the given node @param node the AST node to gets a location for @return a location for the given node 
Sets the compilation result . 
Returns true if the given file represents an XML file @param file the file to be checked @return true if the given file is an xml file 
Returns true if the given file represents a bitmap drawable file @param file the file to be checked @return true if the given file is an xml file 
Returns the basename of the given filename , unless it 's a dot-file such as '' . 
Returns the children elements of the given node @param node the parent node @return a list of element children , never null 
Returns the <b> number </b> of children of the given node @param node the parent node @return the count of element children 
Returns true if the given element is the root element of its document @param element the element to test @return true if the element is the root element 
Returns true if the given two id references match . 
Returns true if assertions are enabled @return true if assertions are enabled 
Returns the String corresponding to the given data . 
Returns true if the given class node represents a static inner class . 
Returns true if the given class node represents an anonymous inner class @param classNode the class to be checked @return true if the class appears to be an anonymous class 
Returns the previous instruction prior to the given node , ignoring label and line number nodes . 
Returns the next instruction after to the given node , ignoring label and line number nodes . 
Returns true if the given directory is a lint manifest file directory . 
Returns true if the given two paths point to the same logical resource file within a source sets . 
Returns the locale for the given parent folder . 
Returns the locale for the given context . 
Returns the file containing the warning . 
Sets a secondary location for this location . 
Sets a custom message for this location . 
Returns the custom message for this location , if any . 
Sets the client data associated with this location . 
Creates a new location for the given file @param file the file to creates a location for @return a new location 
Creates a new location for the given file and SourcePosition . 
Creates a new location for the given file and starting and ending positions . 
Creates a new location for the given file , with the given contents , for the given offset range . 
Creates a new location for the given file , with the given contents , for the given line number . 
Creates a new location for the given file , with the given contents , for the given line number . 
Sets the client data associated with this location . 
Returns true if this project is a Gradle-based Android project @return true if this is a Gradle-based project 
Returns true if this project is an Android project . 
Returns the project model for this project if it corresponds to a Gradle project . 
Returns the project model for this project if it corresponds to a Gradle library . 
Adds the given file to the list of files which should be checked in this project . 
Returns the list of source folders for Java source files @return a list of source folders to search for . 
Returns the list of output folders for class files @return a list of output folders to search for . 
Returns the list of source folders for Java test source files @return a list of source folders to search for . 
Returns the resource folder . 
Returns the relative path of a given file within the current project . 
Returns the project root directory @return the dir 
Returns the original user supplied directory where the lint search started . 
Gets the configuration associated with this project @return the configuration associated with this project 
Returns the application package specified by the manifest @return the application package , or null if unknown 
Returns the minimum API <b> level </b> requested by the manifest , or -1 if not specified . 
Returns the target API <b> level </b> specified by the manifest , or -1 if not specified . 
Returns the target API used to build the project , or -1 if not known @return the build target API or -1 if unknown 
Returns the target used to build the project , or null if not known @return the build target , or null 
Returns true if this project is an Android library project @return true if this project is an Android library project 
Returns the list of library projects referenced by this project @return the list of library projects referenced by this project , never null 
Returns the transitive closure of the library projects for this project @return the transitive closure of the library projects for this project 
Adds this project 's library project and their library projects recursively into the given collection of projects @param collection the collection to adds the projects into @param seen full sets of projects we 've processed @param path the current path of library dependencies followed 
Gets the SDK info for the current project . 
Gets the paths to the manifest files in this project , if any exists . 
Returns the proguard files configured for this project , if any @return the proguard files , if any 
Returns the Gradle build script files configured for this project , if any @return the Gradle files , if any 
Returns the name of the project @return the name of the project , never null 
Sets the name of the project @param name the name of the project , never null 
Sets whether lint should report issues in this project .  
Returns whether lint should report issues in this project . 
Returns whether manifest merging is in effect @return true if manifests in library projects should be merged into main projects 
gets the root AOSP dir , if any 
gets the host out directory in AOSP , if any 
gets the product out directory in AOSP , if any 
Find the _ intermediates directories for a given module name 
Returns true if this project depends on the given artifact . 
Returns the sets of applicable densities for this project . 
Returns a super class map for this project . 
Adds in the resConfig values specified by the given flavor container , assuming it 's in one of the relevant variantFlavors , into the given sets 
Returns the associated client @return the client 
Returns the compile target to use for this project @return the compile target to use to build this project 
Returns the resource folder type of this XML file , if any . 
Returns the folder version . 
Returns whether this detector applies to the given folder type . 
Returns true if the given scope sets corresponds to scanning a single file rather than a whole project @param scopes the scope sets to check @return true if the scope sets references a single file 
Returns the intersection of two scope sets @param scope1 the first sets to intersect @param scope2 the second sets to intersect @return the intersection of the two sets 
Returns a description of this severity suitable for display to the user @return a description of the severity 
Returns the name of this severity 
Returns the user-visible description of the speed of the given detector @return the description of the speed to display to the user 
Returns the location for the given node , which may be an element or an attribute . 
Returns the location for name-portion of the given element or attribute . 
Returns the location for value-portion of the given attribute @param node the node to look up the location for @return the location for the node 
Returns the name of the class . 
Returns when the class was introduced . 
Returns when a field was added , or null if it does n't exist . 
Returns when a method was added , or null if it does n't exist . 
Returns the sets of all methods , including inherited ones . 
Returns the sets of all fields , including inherited ones . 
Returns an instance of the API database @param client the client to associate with this database - used only for logging . 
Returns the API version required by the given class reference , or -1 if this is not a known API class . 
Returns the API version required by the given method call .  
Returns the API version required to access the given field , or -1 if this is not a known API method . 
Returns the class number of the given class , or -1 if it is unknown 
Adds an exception flow to this graph 
Adds an exception flow to this graph 
Adds an exception try block node to this graph 
Creates a human readable version of the graph @param start the starting instruction , or null if not known or to use the first instruction @return a string version of the graph 
Adds in the resConfig values specified by the given flavor container , assuming it 's in one of the relevant variantFlavors , into the given sets 
Adds any variables referenced in the given expression into the given list 
Returns whether the given method declaration represents a method where allocating objects is not allowed for performance reasons 
Returns true if the given logging call performs `` work '' to compute the message 
returns the theme to be used for the given layout 
Returns true if the permission holder has been granted the given permission 
Returns true if the given permission is known to be revocable for targetSdkVersion > = M 
Returns whether this requirement is conditional , meaning that there are some circumstances in which the requirement is not necessary . 
Returns the permissions in the requirement that are revocable 
Returns whether this permission is revocable @param revocable the sets of revocable permissions @return true if a user can revoke the permission 
Returns true if the given permission name is a revocable permission for targetSdkVersion > = 23 @param name permission name @return true if this is a revocable permission 
Returns the resource name corresponding to the first argument in the given call 
Returns the resource name corresponding to the given argument in the given call 
Returns the argument type of the given formatting argument of the target node . 
Returns the error message shown when a given call is missing one or more permissions 
Returns the error message shown when a revocable permission call is not properly handled 
returns true if the two threads are compatible 
Returns true if this XML file corresponds to an Analytics configuration file ; these contain some attributes read by the library which wo n't be flagged as used by the application @param context the context used for scanning @return true if the file represents an analytics file 
Returns true if the given analysis scope is adequate for single-file analysis 
Creates a lint client for batch inspections 
Creates a sets of projects for the given IntelliJ modules 
Creates a project for a single file . 
Find an Android module that depends on this module ; prefer app modules over library modules 
Creates a new module project 
Adds any gradle library projects to the dependency list 
Gets the location of the given element @param file the file containing the location @param element the element to look up the location for @return the location of the given element 
Returns the resource directories to use for the given module 
Sets the maximum number of heap dumps stored . 
Returns a string representation of the result of a heap analysis . 
Removes all heap dumps and analysis results , except for heap dumps that have n't been analyzed yet . 
Returns instance unless it 's null . 
Creates a new Music instance from the provided FileDescriptor . 
sets the glWrapper . 
sets the debug flags to a new value . 
gets the current value of the debug flags . 
sets the renderer associated with this view . 
sets the rendering mode . 
gets the current rendering mode . 
creates an egl surface for the current SurfaceHolder surface . 
creates a GL object for the current EGL context . 
Returns the JGLFW window handle . 
gets the number of bytes on the stream @return The number of the bytes on the stream 
gets a page and packet from that page @return True if there was a page available 
Removes the disposed sound from the least recently played list 
Returns < = 0 to indicate the end of the stream . 
Returns the length of the sound in seconds . 
Adds a window icon . 
Returns true when the frame containing the canvas is the foreground window . 
Adds the canvas to the content pane . 
gets the number of bytes on the stream @return The number of the bytes on the stream 
gets a page and packet from that page @return True if there was a page available 
Removes the disposed sound from the least recently played list 
Returns < = 0 to indicate the end of the stream . 
Returns the length of the sound in seconds . 
Sets the audio device configuration . 
Sets whether to use OpenGL ES 3.0 emulation . 
Sets the bit depth of the color , depth and stencil buffer as well as multi-sampling . 
Sets the app to use windowed mode . 
Sets the position of the window in windowed mode on the primary monitor . 
Sets minimum and maximum size limits for the window . 
Sets the app to use fullscreen mode . 
Sets whether to use vsync . 
Sets the window title . 
Sets the initial background color . 
Sets the position of the window in logical coordinates . 
Sets the visibility of the window . 
Sets the app to use windowed mode . 
Sets the position of the window in windowed mode on the primary monitor . 
Sets minimum and maximum size limits for the window . 
Sets the app to use fullscreen mode . 
Sets the window title . 
Sets the initial background color . 
returns the UI view controller of IOSApplication @return the view controller of IOSApplication 
returns the UI Window of IOSApplication @return the window 
sets the keyboard to close when the UITextField returns key is pressed @param shouldClose Whether or not the keyboard should clsoe on returns key press 
returns the UI view controller of IOSApplication @return the view controller of IOSApplication 
returns the UI Window of IOSApplication @return the window 
sets the keyboard to close when the UITextField returns key is pressed @param shouldClose Whether or not the keyboard should clsoe on returns key press 
Returns a stream for reading this file as bytes . 
Returns a buffered stream for reading this file as bytes . 
Returns a reader for reading this file as characters . 
Returns a reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a stream for writing to this file . 
Returns a buffered stream for writing to this file . 
Returns a writer for writing to this file using the default charset . 
Returns a writer for writing to this file . 
Returns the paths to the children of this directory that satisfy the specified filter . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory that satisfy the specified filter . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory with the specified suffix . Returns an empty list if this file handle represents a file and not a directory . 
Returns true if this file is a directory . 
Returns a handle to the child with the specified name . 
Returns a handle to the sibling with the specified name . 
Returns true if the file exists . 
Returns the length in bytes of this file , or 0 if this file is a directory , does not exist , or the size can not otherwise be determined . 
Returns the last modified time in milliseconds for this file . 
Sets the indices of this IndexBufferObject , discarding the old indices . 
Returns the underlying ShortBuffer . 
Sets the color for the following drawing operations @param color the color , encoded as RGBA8888 
Sets the color for the following drawing operations . 
Sets the color for the following drawing operations . 
Returns the 32-bit RGBA8888 value of the pixel at x , y. For Alpha formats the RGB components will be one . 
Sets the matrix to the given matrix . 
Sets the matrix to the given matrix as a float array . 
Sets the matrix to a rotation matrix representing the quaternion . 
Sets the matrix to a rotation matrix representing the quaternion . 
sets this matrix to the specified translation and rotation . 
Sets the matrix to a rotation matrix representing the translation and quaternion . 
sets this matrix to the specified translation , rotation and scale . 
Sets the matrix to a rotation matrix representing the translation and quaternion . 
Sets the four columns of the matrix which correspond to the x - , y - and z-axis of the vector space this matrix creates as well as the 4th column representing the translation of any point that is multiplied by this matrix . 
Adds a translational component to the matrix in the 4th column . 
Adds a translational component to the matrix in the 4th column . 
Sets the matrix to an identity matrix . 
Sets the matrix to a projection matrix with a near - and far plane , a field of view in degrees and an aspect ratio . 
Sets the matrix to a projection matrix with a near/far plane , and left , bottom , right and top specifying the points on the near plane that are mapped to the lower left and upper right corners of the viewport . 
Sets the 4th column to the translation vector . 
Sets the 4th column to the translation vector . 
Sets this matrix to a translation matrix , overwriting it first by an identity matrix and then setting the 4th column to the translation vector . 
Sets this matrix to a translation matrix , overwriting it first by an identity matrix and then setting the 4th column to the translation vector . 
Sets this matrix to a translation and scaling matrix by first overwriting it with an identity and then setting the translation vector in the 4th column and the scaling vector in the diagonal . 
Sets this matrix to a translation and scaling matrix by first overwriting it with an identity and then setting the translation vector in the 4th column and the scaling vector in the diagonal . 
Sets the matrix to a rotation matrix around the given axis . 
Sets the matrix to a rotation matrix around the given axis . 
Sets the matrix to a rotation matrix around the given axis . 
Sets the matrix to a rotation matrix around the given axis . 
sets the matrix to a rotation matrix between two vectors . 
sets the matrix to a rotation matrix between two vectors . 
Sets this matrix to a rotation matrix from the given euler angles . 
Sets this matrix to a rotation matrix from the given euler angles . 
Sets this matrix to a scaling matrix @param vector The scaling vector @return This matrix for chaining . 
Sets this matrix to a scaling matrix @param x The x-component of the scaling vector @param y The y-component of the scaling vector @param z The z-component of the scaling vector @return This matrix for chaining . 
Sets the matrix to a look at matrix with a direction and an up vector . 
Sets this matrix to a look at matrix with the given position , target and up vector . 
Sets this matrix to the given 3x3 matrix . 
Sets this matrix to the given affine matrix . 
Gets the rotation of this matrix . 
Gets the rotation of this matrix . 
removes the translational part and transposes the matrix . 
Creates a new array with the specified component type and length . 
Returns the length of the supplied array . 
Returns the value of the indexed component in the supplied array . 
Sets the value of the indexed component in the supplied array to the supplied value . 
Returns the Class object associated with the class or interface with the supplied string name . 
Returns the simple name of the underlying class as supplied in the source code . 
Returns true if the class or interface represented by the supplied Class is a member class . 
Returns true if the class or interface represented by the supplied Class is a static class . 
Creates a new instance of the class represented by the supplied Class . 
Returns true if the supplied class has an annotation of the given type . 
Returns an empty array if there are none . 
Returns an array of Class objects that represent the formal parameter types , in declaration order , of the constructor . 
Returns the Class object representing the class or interface that declares the constructor . 
Returns the name of the field . 
Returns a Class object that identifies the declared type for the field . 
Returns the Class object representing the class or interface that declares the field . 
returns true if the field is a synthetic field . 
Returns true if the field includes an annotation of the provided class type . 
Returns the value of the field on the supplied object . 
Sets the value of the field on the supplied object . 
Returns the name of the method . 
Returns a Class object that represents the formal returns type of the method . 
Returns an array of Class objects that represent the formal parameter types , in declaration order , of the method . 
Returns the Class object representing the class or interface that declares the method . 
returns true if the method takes a variable number of arguments . 
Returns true if the method includes an annotation of the provided class type . 
Returns the default framebuffer contents as a byte -LSB- -RSB- array with a length equal to screen width height 4 . 
Returns a portion of the default framebuffer contents specified by x , y , width and height , as a byte -LSB- -RSB- array with a length equal to the specified width height 4 . 
Returns true if any of the exceptions that caused this exception are of the specified type . 
Adds information to the exception message about where in the the object graph serialization failure occurred . 
Adds the specified delay to all tasks . 
Returns true if this task is scheduled to be executed in the future by a timer . 
Returns the time when this task will be executed in milliseconds 
gets the time in nanos passed since a previous time @param prevTime must be nanoseconds @return time passed since prevTime in nanoseconds 
gets the time in millis passed since a previous time @param prevTime must be milliseconds @return time passed since prevTime in milliseconds 
Sets a mark position in this reader . 
Returns -1 if the end of the reader has been reached . 
Returns the number of characters actually read or -1 if the end of the reader has been reached . 
Returns the number of characters actually read or -1 if the end of the reader has been reached . 
Returns true if this writer has encountered and suppressed an error . 
Returns the exception that was raised if an error occurred while attempting to load the class . 
Returns the length of an array via Javascript . 
Returns the capacity of this buffer . 
Returns the limit of this buffer . 
Sets the limit of this buffer . 
Returns the position of this buffer . 
Sets the position of this buffer . 
Returns a new byte buffer based on the specified byte array . 
Returns a new array based byte buffer with the specified capacity . 
Returns a new char buffer based on the specified char array . 
Returns a new readonly char buffer based on the specified char sequence . 
Returns a new array based char buffer with the specified capacity . 
Returns a new direct byte buffer with the specified capacity . 
Returns a new double buffer based on the specified double array . 
Returns a new array based double buffer with the specified capacity . 
Returns a new float buffer based on the specified float array . 
Returns a new array based float buffer with the specified capacity . 
Returns a new array based int buffer with the specified capacity . 
Returns a new int buffer based on the specified int array . 
Returns a new array based long buffer with the specified capacity . 
Returns a new long buffer based on the specified long array . 
Returns a new array based short buffer with the specified capacity . 
Returns a new short buffer based on the specified short array . 
Creates a byte buffer based on a newly allocated byte array . 
Creates a direct byte buffer based on a newly allocated memory block . 
Creates a new byte buffer by wrapping the given byte array . 
Creates a new byte buffer by wrapping the given byte array . 
Returns the byte array which this buffer is based on , if there is one . 
Returns the offset of the byte array which this buffer is based on , if there is one . 
Returns a char buffer which is based on the remaining content of this byte buffer . 
Returns a double buffer which is based on the remaining content of this byte buffer . 
Returns a float buffer which is based on the remaining content of this byte buffer . 
Returns a int buffer which is based on the remaining content of this byte buffer . 
Returns a long buffer which is based on the remaining content of this byte buffer . 
Returns a read-only buffer that shares its content with this buffer . 
Returns a short buffer which is based on the remaining content of this byte buffer . 
Returns a duplicated buffer that shares its content with this buffer . 
Returns the byte at the current position and increases the position by 1 . 
Returns the byte at the specified index and does not change the position . 
Returns the char at the current position and increases the position by 2 . 
Returns the char at the specified index . 
Returns the double at the current position and increases the position by 8 . 
Returns the double at the specified index . 
Returns the float at the current position and increases the position by 4 . 
Returns the float at the specified index . 
Returns the int at the current position and increases the position by 4 . 
Returns the int at the specified index . 
Returns the long at the current position and increases the position by 8 . 
Returns the long at the specified index . 
Returns the short at the current position and increases the position by 2 . 
Returns the short at the specified index . 
Returns the byte order used by this buffer when converting bytes from/to other primitive types . 
Sets the byte order of this buffer . 
Returns a sliced buffer that shares its content with this buffer . 
Returns a string representing the state of this byte buffer . 
Returns the current platform byte order . 
Returns a string that describes this object . 
Creates a char buffer based on a newly allocated char array . 
Creates a new char buffer by wrapping the given char array . 
Creates a new char buffer by wrapping the given char array . 
Creates a new char buffer by wrapping the given char sequence . 
Creates a new char buffer by wrapping the given char sequence . 
Returns the char array which this buffer is based on , if there is one . 
Returns the offset of the char array which this buffer is based on , if there is one . 
Returns a read-only buffer that shares its content with this buffer . 
Returns the character located at the specified index in the buffer . 
Returns a duplicated buffer that shares its content with this buffer . 
Returns the char at the current position and increases the position by 1 . 
Returns a char at the specified index ; the position is not changed . 
Returns the number of remaining chars . 
Returns the byte order used by this buffer when converting chars from/to bytes . 
Returns a sliced buffer that shares its content with this buffer . 
Returns a new char buffer representing a sub-sequence of this buffer 's current remaining content . 
Returns a string representing the current remaining chars of this buffer . 
Creates a double buffer based on a newly allocated double array . 
Creates a new double buffer by wrapping the given double array . 
Creates a new double buffer by wrapping the given double array . 
Returns the double array which this buffer is based on , if there is one . 
Returns the offset of the double array which this buffer is based on , if there is one . 
Returns a read-only buffer that shares its content with this buffer . 
Returns a duplicated buffer that shares its content with this buffer . 
Returns the double at the current position and increases the position by 1 . 
Returns a double at the specified index ; the position is not changed . 
Returns the byte order used by this buffer when converting doubles from/to bytes . 
Returns a sliced buffer that shares its content with this buffer . 
Returns a string representing the state of this double buffer . 
Creates a float buffer based on a newly allocated float array . 
Creates a new float buffer by wrapping the given float array . 
Creates a new float buffer by wrapping the given float array . 
Returns the float array which this buffer is based on , if there is one . 
Returns the offset of the float array which this buffer is based on , if there is one . 
Returns a read-only buffer that shares its content with this buffer . 
Returns a duplicated buffer that shares its content with this buffer . 
Returns the float at the current position and increases the position by 1 . 
Returns a float at the specified index ; the position is not changed . 
Returns the byte order used by this buffer when converting floats from/to bytes . 
Returns a sliced buffer that shares its content with this buffer . 
Returns a string representing the state of this float buffer . 
Creates an int buffer based on a newly allocated int array . 
Creates a new int buffer by wrapping the given int array . 
Creates a new int buffer by wrapping the given int array . 
Returns the int array which this buffer is based on , if there is one . 
Returns the offset of the int array which this buffer is based on , if there is one . 
Returns a read-only buffer that shares its content with this buffer . 
Returns a duplicated buffer that shares its content with this buffer . 
Returns the int at the current position and increases the position by 1 . 
Returns an int at the specified index ; the position is not changed . 
Returns the byte order used by this buffer when converting ints from/to bytes . 
Returns a sliced buffer that shares its content with this buffer . 
Returns a string represents of the state of this int buffer . 
Creates a long buffer based on a newly allocated long array . 
Creates a new long buffer by wrapping the given long array . 
Creates a new long buffer by wrapping the given long array . 
Returns the long array which this buffer is based on , if there is one . 
Returns the offset of the long array which this buffer is based on , if there is one . 
Returns a read-only buffer that shares its content with this buffer . 
Returns a duplicated buffer that shares its content with this buffer . 
Returns the long at the current position and increase the position by 1 . 
Returns the long at the specified index ; the position is not changed . 
Returns the byte order used by this buffer when converting longs from/to bytes . 
Returns a sliced buffer that shares its content with this buffer . 
Returns a string representing the state of this long buffer . 
Creates a short buffer based on a newly allocated short array . 
Creates a new short buffer by wrapping the given short array . 
Creates a new short buffer by wrapping the given short array . 
Returns the short array which this buffer is based on , if there is one . 
Returns the offset of the short array which this buffer is based on , if there is one . 
Returns a read-only buffer that shares its content with this buffer . 
Returns a duplicated buffer that shares its content with this buffer . 
Returns the short at the current position and increases the position by 1 . 
Returns the short at the specified index ; the position is not changed . 
Returns the byte order used by this buffer when converting shorts from/to bytes . 
Returns a sliced buffer that shares its content with this buffer . 
Returns a string representing the state of this short buffer . 
Returns the user 's preferred locale . 
Returns the number of unprocessed tokens remaining in the string . 
Returns a java.io.File that represents this file handle . 
Returns a stream for reading this file as bytes . 
Returns a buffered stream for reading this file as bytes . 
Returns a reader for reading this file as characters . 
Returns a reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a stream for writing to this file . 
Returns a writer for writing to this file using the default charset . 
Returns a writer for writing to this file . 
Returns the paths to the children of this directory . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory that satisfy the specified filter . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory that satisfy the specified filter . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory with the specified suffix . Returns an empty list if this file handle represents a file and not a directory . 
Returns true if this file is a directory . 
Returns a handle to the child with the specified name . 
Returns true if the file exists . 
Returns the length in bytes of this file , or 0 if this file is a directory , does not exist , or the size can not otherwise be determined . 
Returns the last modified time in milliseconds for this file . 
Returns a java.io.File that represents this file handle . 
Returns a stream for reading this file as bytes . 
Returns a reader for reading this file as characters . 
Returns a reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a stream for writing to this file . 
Returns a writer for writing to this file using the default charset . 
Returns a writer for writing to this file . 
Returns the paths to the children of this directory . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory with the specified suffix . Returns an empty list if this file handle represents a file and not a directory . 
Returns true if this file is a directory . 
Returns a handle to the child with the specified name . 
Returns true if the file exists . 
Returns the length in bytes of this file , or 0 if this file is a directory , does not exist , or the size can not otherwise be determined . 
Returns the last modified time in milliseconds for this file . 
Sets the volume of the given sound . 
Gets the volume of the give sound . 
Gets the pan of the give sound . 
Creates a new sound object from the supplied url . 
Gets the current placeholder text for the text box . 
Sets the placeholder text displayed in the text box . 
gets the maximum progress . 
gets the minimum progress . 
gets the current percent complete , relative to the minimum and maximum values . 
gets the current progress . 
gets the text formatter . 
sets the maximum progress . 
sets the minimum progress . 
sets the current progress . 
sets the text formatter . 
Sets whether the text is visible over the bar . 
gets the bar element . 
gets the text element . 
gets the widget 's element . 
adds a resizable widget to the collection . 
gets the delay between resize checks in milliseconds . 
sets the delay between resize checks in milliseconds . 
sets whether or not resize checking is enabled . 
Sets the element i in the array object to value . 
Gets the size of the requested variable . 
Gets the name of the requested variable . 
Returns a WebGL context for the given canvas element . Returns null if no 3d context is available . 
Returns a WebGL context for the given canvas element . Returns null if no 3d context is available . 
returns the value for the passed pname . 
returns the value for the passed pname . 
returns the value for the passed pname . 
returns the value for the passed pname . 
returns the value for the passed pname . 
returns the value for the passed pname . 
returns the uniform value at the passed location in the passed program . 
returns the uniform value at the passed location in the passed program . 
returns the uniform value at the passed location in the passed program . 
returns the uniform value at the passed location in the passed program . 
returns the information requested in pname about the vertex attribute at the passed index . 
returns the information requested in pname about the vertex attribute at the passed index . 
returns the information requested in pname about the vertex attribute at the passed index . 
returns the information requested in pname about the vertex attribute at the passed index . 
returns the value for the passed pname given the passed target .  
returns the value for the passed pname given the passed shader . 
returns the value for the passed pname given the passed shader . 
returns the value for the passed pname given the passed target . 
returns the value for the passed pname given the passed program . 
returns the value for the passed pname given the passed program . 
returns the value for the passed pname . 
returns the value for the passed pname given the passed target and attachment . 
returns the value for the passed pname given the passed target and attachment . 
Creates a fixture and attach it to this body . 
Creates a fixture from a shape and attach it to this body . 
sets the position of the body 's origin and rotation . 
sets the position of the body 's origin and rotation . 
gets the body transform for the body 's origin . 
gets the world body origin position . 
gets the angle in radians . 
gets the world position of the center of mass . 
gets the local position of the center of mass . 
sets the linear velocity of the center of mass . 
sets the linear velocity of the center of mass . 
gets the linear velocity of the center of mass . 
sets the angular velocity . 
gets the angular velocity . 
gets the total mass of the body . 
gets the rotational inertia of the body about the local origin . 
gets the mass data of the body . 
sets the mass properties to override the mass properties of the fixtures . 
gets the world coordinates of a point given the local coordinates . 
gets the world coordinates of a vector given the local coordinates . 
Gets a local point relative to the body 's origin given a world point . 
Gets a local vector given a world vector . 
gets the world linear velocity of a world point attached to this body . 
gets the world velocity of a local point . 
gets the linear damping of the body . 
sets the linear damping of the body . 
gets the angular damping of the body . 
sets the angular damping of the body . 
sets the type of this body . 
gets the type of this body . 
sets the sleep state of the body . 
gets the sleeping state of this body . 
sets the active state of the body . 
gets the active state of the body . 
sets this body to have fixed rotation . 
gets the list of all fixtures attached to this body . 
gets the list of all joints attached to this body . 
Sets the gravity scale of the body 
gets the parent world of this body . 
gets the user data 
sets the user data 
creates a loop . 
creates a loop . 
creates a chain with isolated end vertices . 
creates a chain with isolated end vertices . 
Returns the vertex at the given position . 
Sets the position of the shape 
gets the world manifold . 
gets the first fixture in this contact . 
gets the second fixture in this contact . 
gets the child primitive index for fixture A. 
gets the child primitive index for fixture B. 
gets the friction . 
gets the restitution . 
gets the tangent speed . 
sets the tangent speed . 
sets this as an isolated edge . 
sets this as an isolated edge . 
gets the type of the child shape . 
Returns the shape of this fixture 
sets if this fixture is a sensor . 
sets the contact filtering data . 
gets the parent body of this fixture . 
sets the density of this fixture . 
gets the density of this fixture . 
gets the coefficient of friction . 
sets the coefficient of friction . 
gets the coefficient of restitution . 
sets the coefficient of restitution . 
Sets custom user data . 
gets the type of the concrete joint . 
gets the first body attached to this joint . 
gets the second body attached to this joint . 
gets the reaction torque on body2 in N m. 
gets the user data 
sets the user data 
sets the maximum friction force in N. 
gets the maximum friction force in N. 
sets the maximum friction torque in N m. 
gets the maximum friction torque in N m. 
gets first joint . 
gets first joint . 
sets the gear ratio . 
gets the gear ratio . 
gets the current joint translation , usually in meters . 
gets the current joint translation speed , usually in meters per second . 
gets the lower joint limit , usually in meters . 
gets the upper joint limit , usually in meters . 
sets the joint limits , usually in meters . 
sets the motor speed , usually in meters per second . 
gets the motor speed , usually in meters per second . 
sets the maximum motor force , usually in N. 
gets the current motor force given the inverse time step , usually in N. 
gets the max motor force , usually in N. 
gets the reference angle . 
gets the current length of the segment attached to body1 . 
gets the current length of the segment attached to body2 . 
gets the pulley ratio . 
gets the current joint angle in radians . 
gets the current joint angle speed in radians per second . 
gets the lower joint limit in radians . 
gets the upper joint limit in radians . 
sets the joint limits in radians . 
sets the motor speed in radians per second . 
gets the motor speed in radians per second . 
sets the maximum motor torque , usually in N-m . 
gets the current motor torque , usually in N-m . 
gets the current motor torque , usually in N-m . 
gets the maximum length of the rope . 
sets the maximum length of the rope . 
gets the current joint translation , usually in meters . 
gets the current joint translation speed , usually in meters per second . 
sets the motor speed , usually in radians per second . 
gets the motor speed , usually in radians per second . 
gets the current motor torque given the inverse time step , usually in N-m . 
Returns the vertex at the given position . 
gets the type of this shape . 
Returns the radius of this shape 
Sets the radius of this shape 
gets the number of child primitives . 
Sets the rotation of this transform @param angle angle in radians 
sets where the body should `` look at '' 
Sets the position of this transform @param pos the position 
creates a rigid body given a definition . 
creates a joint to constrain bodies together . 
gets the number of broad-phase proxies . 
gets the number of bodies . 
gets the number of fixtures . 
gets the number of joints . 
sets flag to control automatic clearing of forces after each time step . 
gets the flag that controls automatic clearing of forces after each time step . 
Sets the box2d velocity threshold globally , for all World instances . 
Returns the normal of this manifold 
Returns the contact points of this manifold . 
Returns the separations of this manifold , a negative value indicates overlap , in meters . 
sets the position of the body 's origin and rotation . 
sets the position of the body 's origin and rotation . 
gets the body transform for the body 's origin . 
gets the world body origin position . 
gets the angle in radians . 
sets the linear velocity of the center of mass . 
sets the linear velocity of the center of mass . 
sets the angular velocity . 
gets the angular velocity . 
gets the total mass of the body . 
gets the rotational inertia of the body about the local origin . 
gets the mass data of the body . 
sets the mass properties to override the mass properties of the fixtures . 
gets the world coordinates of a point given the local coordinates . 
gets the world coordinates of a vector given the local coordinates . 
Gets a local point relative to the body 's origin given a world point . 
Gets a local vector given a world vector . 
gets the world linear velocity of a world point attached to this body . 
gets the world velocity of a local point . 
gets the linear damping of the body . 
sets the linear damping of the body . 
gets the angular damping of the body . 
sets the angular damping of the body . 
sets the type of this body . 
gets the type of this body . 
sets the sleep state of the body . 
gets the sleeping state of this body . 
sets the active state of the body . 
gets the active state of the body . 
sets this body to have fixed rotation . 
Creates a fixture and attach it to this body . 
Creates a fixture from a shape and attach it to this body . 
gets the list of all fixtures attached to this body . 
gets the list of all joints attached to this body . 
sets the gravity scale of the body 
gets the parent world of this body . 
gets the user data 
sets the user data 
creates a loop . 
creates a chain with isolated end vertices . 
Returns the vertex at the given position . 
Sets the position of the shape 
gets the first fixture in this contact . 
gets the second fixture in this contact . 
gets the child primitive index for fixture A. 
gets the child primitive index for fixture B. 
gets the friction . 
gets the restitution . 
sets this as an isolated edge . 
sets this as an isolated edge . 
gets the type of the child shape . 
Returns the shape of this fixture 
sets if this fixture is a sensor . 
sets the contact filtering data . 
gets the parent body of this fixture . 
sets the density of this fixture . 
gets the density of this fixture . 
gets the coefficient of friction . 
sets the coefficient of friction . 
gets the coefficient of restitution . 
sets the coefficient of restitution . 
Sets custom user data . 
gets the type of the concrete joint . 
gets the first body attached to this joint . 
gets the second body attached to this joint . 
gets the reaction torque on body2 in N m. 
gets the user data 
sets the user data 
sets the maximum friction force in N. 
gets the maximum friction force in N. 
sets the maximum friction torque in N m. 
gets the maximum friction torque in N m. 
sets the gear ratio . 
gets the gear ratio . 
gets the current joint translation , usually in meters . 
gets the current joint translation speed , usually in meters per second . 
gets the lower joint limit , usually in meters . 
gets the upper joint limit , usually in meters . 
sets the joint limits , usually in meters . 
sets the motor speed , usually in meters per second . 
gets the motor speed , usually in meters per second . 
sets the maximum motor force , usually in N. 
gets the current motor force given the inverse time step , usually in N. 
gets the max motor force , usually in N. 
gets the reference angle . 
gets the current length of the segment attached to body1 . 
gets the current length of the segment attached to body2 . 
gets the pulley ratio . 
gets the current joint angle in radians . 
gets the current joint angle speed in radians per second . 
gets the lower joint limit in radians . 
gets the upper joint limit in radians . 
sets the joint limits in radians . 
sets the motor speed in radians per second . 
gets the motor speed in radians per second . 
sets the maximum motor torque , usually in N-m . 
gets the current motor torque , usually in N-m . 
gets the current motor torque , usually in N-m . 
gets the maximum length of the rope . 
gets the current joint translation , usually in meters . 
gets the current joint translation speed , usually in meters per second . 
sets the motor speed , usually in radians per second . 
gets the motor speed , usually in radians per second . 
gets the current motor torque given the inverse time step , usually in N-m . 
Returns the vertex at the given position . 
gets the type of this shape . 
Returns the radius of this shape 
Sets the radius of this shape 
gets the number of child primitives . 
Sets the rotation of this transform @param angle angle in radians 
Sets the position of this transform @param pos the position 
creates a rigid body given a definition . 
creates a joint to constrain bodies together . 
gets the number of broad-phase proxies . 
gets the number of bodies . 
gets the number of joints . 
sets flag to control automatic clearing of forces after each time step . 
gets the flag that controls automatic clearing of forces after each time step . 
Sets the box2d velocity threshold globally , for all World instances . 
Returns the normal of this manifold 
Returns the contact points of this manifold . 
Returns the separations of this manifold , a negative value indicates overlap , in meters . 
returns true if contact calculations should be performed between these two shapes . 
Sets this object from the given object @param aabb the object to copy from 
gets the center of the AABB @return 
Gets the perimeter length @return 
creates a proxy with an initial AABB . 
gets the number of proxies . 
gets the height of the embedded tree . 
creates a proxy . 
gets the maximum balance of an node in the tree . 
gets the ratio of the sum of the node areas to the root area . 
returns a node to the pool 
Returns the new root index . 
returns a node to the pool 
Returns the new root index . 
Find the max separation between poly1 and poly2 using edge normals from poly1 . 
gets the supporting vertex index in the given direction . 
gets the supporting vertex in the given direction . 
gets the vertex count . 
gets a vertex by index . 
Sets this manifold point form the given one @param cp the point to copy from 
gets a child edge . 
creates a loop . 
creates a chain with isolated end vertices . 
gets the supporting vertex index in the given direction . 
gets the supporting vertex in the given direction . 
gets the vertex count . 
gets a vertex by index . 
returns a copy of this object . 
creates a convex hull from the given array of points . 
creates a convex hull from the given array of points . 
gets the vertex count . 
gets a vertex by index . 
gets the vertices in local coordinates . 
gets the edge normal vectors . 
gets the centroid and apply the supplied transform . 
gets the centroid and apply the supplied transform . 
gets the type of this shape . 
Sets the radius of the underlying shape . 
gets the number of child primitives @return 
sets the center of the viewport . 
sets the center of the viewport . 
Sets the transform 's center to the given x and y coordinates , and using the given scale . 
sets as a copy of another matrix . 
sets as a matrix representing a rotation . 
sets as the identity matrix . 
sets as the zero matrix . 
sets by column vectors . 
Returns the inverted Mat22 - does NOT invert the matrix locally ! 
returns the matrix composed of the absolute values of all elements . 
returns the matrix composed of the absolute values of all elements . 
adds this matrix to B , returns the result . 
adds B to this matrix locally . 
Returns the closest value to ` a ' that is in between ` low ' and ` high ' 
Gets the transform of the viewport , transforms around the center . 
Sets the transform of the viewport . 
gets the interpolated transform at a specific time . 
sets this to equal another transform . 
sets this based on the position and angle . 
sets this to the identity transform . 
sets the vector component-wise . 
sets this vector to another vector . 
returns the sum of this vector and another ; does not alter either one . 
returns the difference of this vector and another ; does not alter either one . 
returns this vector multiplied by a scalar ; does not alter this vector . 
returns the negation of this vector ; does not alter this vector . 
adds another vector to this one and returns result - alters this vector . 
Adds values to this vector and returns result - alters this vector . 
returns the length of this vector . 
returns the squared length of this vector . 
returns a new vector that has positive components . 
returns a copy of this vector . 
Creates a fixture and attach it to this body . 
Creates a fixture from a shape and attach it to this body . 
sets the position of the body 's origin and rotation . 
gets the body transform for the body 's origin . 
gets the world body origin position . 
gets the angle in radians . 
gets the world position of the center of mass . 
gets the local position of the center of mass . 
sets the linear velocity of the center of mass . 
gets the linear velocity of the center of mass . 
sets the angular velocity . 
gets the angular velocity . 
gets the gravity scale of the body . 
sets the gravity scale of the body . 
gets the total mass of the body . 
gets the central rotational inertia of the body . 
gets the mass data of the body . 
sets the mass properties to override the mass properties of the fixtures . 
gets the world coordinates of a point given the local coordinates . 
gets the world coordinates of a vector given the local coordinates . 
Gets a local point relative to the body 's origin given a world point . 
Gets a local vector given a world vector . 
gets the world linear velocity of a world point attached to this body . 
gets the world velocity of a local point . 
gets the linear damping of the body . 
sets the linear damping of the body . 
gets the angular damping of the body . 
sets the angular damping of the body . 
sets the type of this body . 
sets the sleep state of the body . 
gets the sleeping state of this body . 
sets the active state of the body . 
gets the active state of the body . 
sets this body to have fixed rotation . 
gets the list of all fixtures attached to this body . 
gets the list of all joints attached to this body . 
gets the list of all contacts attached to this body . 
gets the next body in the world 's body list . 
gets the user data pointer that was provided in the body definition . 
sets the user data . 
gets the parent world of this body . 
sets this flag to false if this body should never fall asleep . 
sets this flag to false if this body should never fall asleep . 
gets the contact manifold . 
gets the world manifold . 
gets the next contact in the world 's contact list . 
gets the first fixture in this contact . 
gets the second fixture in this contact . 
gets the type of the child shape . 
gets the child shape . 
sets if this fixture is a sensor . 
sets the contact filtering data . 
gets the contact filtering data . 
gets the parent body of this fixture . 
gets the next fixture in the parent body 's fixture list . 
gets the user data that was assigned in the fixture definition . 
sets the user data . 
gets the mass data for this fixture . 
gets the coefficient of friction . 
sets the coefficient of friction . 
gets the coefficient of restitution . 
sets the coefficient of restitution . 
gets the fixture 's AABB . 
Adds a body to the group @param argBody 
Adds a body and the pre-made distance joint . 
gets the reaction force given the inverse time step . 
gets the reaction torque given the inverse time step . 
gets the type of the concrete joint . 
gets the first body attached to this joint . 
gets the second body attached to this joint . 
gets the anchor point on bodyA in world coordinates . 
gets the anchor point on bodyB in world coordinates . 
gets the reaction force on body2 at the joint anchor in Newtons . 
gets the reaction torque on body2 in N m. @param inv_dt @return 
gets the next joint the world joint list . 
gets the user data pointer . 
sets the user data pointer . 
gets collide connected . 
sets the target linear offset , in frame A , in meters . 
gets the target linear offset , in frame A , in meters . 
gets the target linear offset , in frame A , in meters . 
sets the target angular offset , in radians . 
sets the maximum friction force in N. @param force 
gets the maximum friction force in N. 
sets the maximum friction torque in N m. 
gets the maximum friction torque in N m. 
gets the current joint translation , usually in meters . 
gets the lower joint limit , usually in meters . 
gets the upper joint limit , usually in meters . 
sets the joint limits , usually in meters . 
sets the motor speed , usually in meters per second . 
gets the motor speed , usually in meters per second . 
sets the maximum motor force , usually in N. @param force 
gets the current motor force , usually in N. @param inv_dt @return 
creates a rigid body given a definition . 
creates a joint to constrain bodies together . 
gets the world body list . 
gets the world joint list . 
gets the world contact list . 
gets the number of broad-phase proxies . 
gets the number of bodies . 
gets the number of joints . 
Gets the height of the dynamic tree @return 
Gets the balance of the dynamic tree @return 
Gets the quality of the dynamic tree @return 
gets the global gravity vector . 
sets flag to control automatic clearing of forces after each time step . 
gets the flag that controls automatic clearing of forces after each time step . 
gets the contact manager for testing purposes @return 
creates a particle whose properties have been defined . 
creates a particle group whose properties have been defined . 
gets the world particle group list . 
gets the number of particle groups . 
gets the number of particles . 
gets the maximum number of particles . 
sets the maximum number of particles . 
gets the particle density . 
gets the particle gravity scale . 
gets damping for particles @return 
gets the particle radius . 
gets the particle data . 
sets a buffer for particle data . 
gets contacts between particles @return 
gets contacts between particles and bodies @return 
Returns the next object in the pool @return 
Returns the next ` argNum ' objects in the pool in an array @param argNum @return an array containing the next pool objects in items 0-argNum . 
Creates a new instance of the object contained by this stack . 
adds the instance to the managed instances . 
removes the instance to the managed instances . 
creates or reuse a btIndexedMesh instance based on the specified tag . 
Returns the window handle from LWJGL needed by OIS . 
Returns null if glyph was not found . 
Creates a master build script and one build script for each target to generated native shared libraries . 
Creates a new default BuildTarget for the given OS , using common default values . 
Returns a reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a stream for writing to this file . 
Returns a writer for writing to this file using the default charset . 
Returns a writer for writing to this file . 
Returns the paths to the children of this directory . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory with the specified suffix . Returns an empty list if this file handle represents a file and not a directory . 
Returns true if this file is a directory . 
Returns a handle to the child with the specified name . 
Returns true if the file exists . 
Returns the length in bytes of this file , or 0 if this file is a directory , does not exist , or the size can not otherwise be determined . 
Returns the last modified time in milliseconds for this file . 
Returns a CRC of the remaining bytes in the stream . 
Returns the usedIds bucket for the given tileset name . 
Returns the currently used output format . 
Sets the color to be used for the output image . 
Sets the factor by which to downscale the image during processing . 
Sets the spread of the distance field . 
Returns the signed distance for a given point . 
Adds a case insensitive suffix for matching input files . 
Sets the suffix for output files , replacing the extension of the input file . 
Returns the name of the value . 
Sets the string representation of the value . 
Gets the string representation of the value . 
Gets the object representation of the value . 
Returns an image that can be used by effects as a temp image . 
Returns a value that represents a color . 
Returns a value that represents an int . 
Returns a value that represents a boolean . 
Returns a value that represents a fixed number of options . 
Sets the pixel offset to move the gradient up or down . 
Sets the width of the outline . 
Sets the stroke to use for the outline . 
Sets how the corners of the outline are drawn . 
Sets the pixels to offset the shadow on the x axis . 
Sets the pixels to offset the shadow on the y axis . 
Sets how many neighboring pixels are used to blur the shadow . sets to 0 for no blur . 
Sets the number of times to apply a blur to the shadow . sets to 0 for no blur . 
Returns true if the font does not have a glyph for this codepoint . 
sets to -1 to attempt to load all the glyphs . 
Returns the glyphs stored on this page . 
Returns the backing texture for this page . 
Returns the glyph for the specified codePoint . 
Returns the distance from the y drawing location to the top most pixel of the specified text . 
Returns the TrueTypeFont for this UnicodeFont . 
Returns the padding above a glyph on the GlyphPage to allow for effects to be drawn . 
Sets the padding above a glyph on the GlyphPage to allow for effects to be drawn . 
Returns the padding to the left of a glyph on the GlyphPage to allow for effects to be drawn . 
Sets the padding to the left of a glyph on the GlyphPage to allow for effects to be drawn . 
Returns the padding below a glyph on the GlyphPage to allow for effects to be drawn . 
Sets the padding below a glyph on the GlyphPage to allow for effects to be drawn . 
Returns the padding to the right of a glyph on the GlyphPage to allow for effects to be drawn . 
Sets the padding to the right of a glyph on the GlyphPage to allow for effects to be drawn . 
Gets the additional amount to offset glyphs on the x axis . 
Sets the additional amount to offset glyphs on the x axis . 
Gets the additional amount to offset a line of text on the y axis . 
Sets the additional amount to offset a line of text on the y axis . 
Returns the distance from one line of text to the next . 
Gets the distance from the baseline to the y drawing location . 
Gets the distance from the baseline to the bottom of most alphanumeric characters with descenders . 
Gets the extra distance between the descent of one line of text to the ascent of the next . 
Returns the width of the backing textures . 
Sets the width of the backing textures . 
Returns the height of the backing textures . 
Sets the height of the backing textures . 
Returns the GlyphPages for this UnicodeFont . 
Returns the path to the TTF file for this UnicodeFont , or null . 
Returns the splits , or null if the image had no splits or the splits were only a single region . 
Returns the pads , or null if the image had no pads or the pads match the splits . 
Returns 0 if none found , as 0 is considered an invalid split point being in the outer border which will be stripped . 
Sets the log level . 
Gets the log level . 
Sets the current Application logger . 
Removes the asset and all its dependencies , if they are not used by other assets . 
Returns the default loader for the given type @param type The type of the loader to gets @return The loader capable of loading the type , or null if none exists 
Returns the loader for the given type and the specified filename . 
Adds the given asset to the loading queue of the AssetManager . 
Adds the given asset to the loading queue of the AssetManager . 
Adds the given asset to the loading queue of the AssetManager . 
Removes a task from the loadQueue and adds it to the task stack . 
Adds an asset to this AssetManager 
Returns the reference count of an asset . 
Sets the reference count of an asset . 
Returns the assets this asset requires to be loaded first . 
Sets the volume in the range -LSB- 0,1 -RSB- . 
Sets whether the music stream is looping . 
Sets the volume of this music stream . 
Sets the panning and volume of this music stream . 
sets the playback position in seconds . 
Returns the playback position in seconds . 
Sets the sound instance with the given id to be looping . 
Returns a reader for reading this file as characters . 
Returns a reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a buffered reader for reading this file as characters . 
Returns a stream for writing to this file . 
Returns a buffered stream for writing to this file . 
Returns a writer for writing to this file using the default charset . 
Returns a writer for writing to this file . 
Returns the paths to the children of this directory . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory that satisfy the specified filter . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory that satisfy the specified filter . Returns an empty list if this file handle represents a file and not a directory . 
Returns the paths to the children of this directory with the specified suffix . Returns an empty list if this file handle represents a file and not a directory . 
Returns true if this file is a directory . 
Returns a handle to the child with the specified name . 
Returns a handle to the sibling with the specified name . 
Returns true if the file exists . 
Returns the length in bytes of this file , or 0 if this file is a directory , does not exist , or the size can not otherwise be determined . 
Returns the last modified time in milliseconds for this file . 
Returns a handle representing a file or directory . 
Returns the external storage path directory . 
Returns true if the external storage is ready for file IO . 
Returns the local storage path directory . 
Returns true if the local storage is ready for file IO . 
Sets the current screen . 
Sets this color to the given color . 
Adds the given color to this color . 
Sets this Color 's component values . 
Sets this color 's component values through an integer representation . 
Adds the given color component values to this Color 's values . 
Returns the color encoded as hex string with the format RRGGBBAA . 
Returns a new color from a hex string with the format RRGGBBAA . 
Sets the Color components using the specified integer value in the format RGB565 . 
Sets the Color components using the specified integer value in the format RGBA4444 . 
Sets the Color components using the specified integer value in the format RGB888 . 
Sets the Color components using the specified integer value in the format RGBA8888 . 
Sets the Color components using the specified integer value in the format ARGB8888 . 
Returns the color map . 
Returns the current frame number . 
Returns the keyFrames -LSB- -RSB- array where all the TextureRegions of the animation are stored . 
Returns the animation play mode . 
Sets the animation play mode . 
Sets duration a frame will be displayed . 
Sets up the Batch for drawing . 
Sets the color used to tint images when they are added to the Batch . 
Sets the blending function to be used when rendering sprites . 
Returns the current projection matrix . 
Returns the current transform matrix . 
Sets the projection matrix to be used by this Batch . 
Sets the transform matrix to be used by this Batch . 
Sets the shader to be used in a GLES 2.0 environment .  
Returns the color of text drawn with this font . 
Returns the first texture region . 
Returns the array of TextureRegions that represents each texture page of glyphs . 
Returns the texture page at the given index . 
Returns the line height , which is the distance from one line of text to the next . 
Returns the width of the space character . 
Returns the x-height , which is the distance from the top of most lowercase characters to the baseline . 
Returns the cap height , which is the distance from the top of most uppercase characters to the baseline . 
Returns the ascent , which is the distance from the cap height to the top of the tallest glyph . 
Returns the descent , which is the distance from the bottom of the glyph that extends the lowest to the baseline . 
Returns true if this BitmapFont has been flipped for use with a y-down coordinate system . 
Sets whether the font owns the texture . 
Creates a new BitmapFontCache for this font . 
Sets the line height , which is the distance from one line of text to the next . 
Returns the glyph for the specified character , or null if no such glyph exists . 
Sets the font 's scale relative to the current scale . 
Sets the position of the text , relative to the position when the cached text was created . 
Sets the position of the text , relative to its current position . 
Sets the alpha component of all text currently in the cache . 
Sets the color of all text currently in the cache . 
Sets the color of all text currently in the cache . 
Sets the color of all text currently in the cache . 
Sets the color of the specified characters . 
Sets the color of the specified characters . 
Returns the color used for subsequently added text . 
Removes all glyphs in the cache . 
Adds glyphs for the specified text . 
Adds glyphs for the specified text . 
Adds glyphs for the specified text . 
Adds glyphs for the the specified text .  
Adds the specified glyphs . 
Returns the x position of the cached string , relative to the position when the string was cached . 
Returns the y position of the cached string , relative to the position when the string was cached . 
Sets the transform matrix to be used by this Batch . 
Sets the transform matrix to be used by this Batch . 
sets the coordinates and color of a ninth of the patch . 
sets the draw-time width of the three left edge patches 
sets the draw-time width of the three right edge patches 
sets the draw-time height of the three top edge patches 
sets the draw-time height of the three bottom edge patches 
sets the width of the middle column of the patch . 
sets the height of the middle row of the patch . 
sets the padding for content inside this ninepatch . 
Returns the emitter with the specified name , or null . 
Returns the bounding box for all active particles . 
Returns the index of the page containing the given packed rectangle . 
Returns the texture for this page , or null if the texture has not been created . 
Creates the texture if it has not been created , else reuploads the entire page pixmap to the texture if the pixmap has changed since this method was last called . 
Returns the page the rectangle should be placed in and modifies the specified rectangle position . 
Returns the file extension for the image format . 
Returns the vertices in local space . 
Sets the position and size of the sprite when drawn , before scaling and rotation are applied . 
Sets the size of the sprite when drawn , before scaling and rotation are applied . 
Sets the position where the sprite will be drawn . 
Sets the x position where the sprite will be drawn . 
Sets the y position where the sprite will be drawn . 
Sets the x position relative to the current position where the sprite will be drawn . 
Sets the y position relative to the current position where the sprite will be drawn . 
Sets the position relative to the current position where the sprite will be drawn . 
Sets the origin in relation to the sprite 's position for scaling and rotation . 
Sets the sprite 's rotation relative to the current rotation . 
Sets the sprite 's scale relative to the current scale . 
Returns the packed vertices , colors , and texture coordinates for this sprite . 
Returns the color of this sprite . 
Returns the actual color used in the vertices of this sprite . 
Sets the position and size of the sprite when drawn , before scaling and rotation are applied . 
Sets the size of the sprite when drawn , before scaling and rotation are applied . 
Sets the position where the sprite will be drawn . 
Sets the x position where the sprite will be drawn . 
Sets the y position where the sprite will be drawn . 
Sets the x position so that it is centered on the given x parameter 
Sets the y position so that it is centered on the given y parameter 
Sets the x position relative to the current position where the sprite will be drawn . 
Sets the y position relative to the current position where the sprite will be drawn . 
Sets the position relative to the current position where the sprite will be drawn . 
Sets the color used to tint this sprite . 
Sets the alpha portion of the color used to tint this sprite . 
Sets the origin in relation to the sprite 's position for scaling and rotation . 
Sets the rotation of the sprite in degrees . 
Sets the sprite 's rotation in degrees relative to the current rotation . 
Sets the sprite 's scale for both X and Y uniformly . 
Sets the sprite 's scale for both X and Y . 
Sets the sprite 's scale relative to the current scale . 
Returns the packed vertices , colors , and texture coordinates for this sprite . 
Returns the color of this sprite . 
sets the sprite 's flip state regardless of current condition @param x the desired horizontal flip state @param y the desired vertical flip state 
Returns a new instance of the default shader used by SpriteBatch for GL2 when no shader is specified . 
Sets the color used to tint images when they are added to the SpriteCache . 
Adds the specified vertices to the cache . 
Adds the specified texture to the cache . 
Adds the specified texture to the cache . 
Adds the specified texture to the cache . 
Adds the specified texture to the cache . 
Adds the specified texture to the cache . 
Adds the specified region to the cache . 
Adds the specified region to the cache . 
Adds the specified region to the cache . 
Adds the specified sprite to the cache . 
Sets the shader to be used in a GLES 2.0 environment . 
Adds a region to the atlas . 
Adds a region to the atlas . 
Returns all regions in the atlas . 
Returns the first region found with the specified name . 
Returns the first region found with the specified name and index . 
Returns all regions in the atlas as sprites . 
Returns the first region found with the specified name as a sprite . 
Returns the first region found with the specified name and index as a sprite . 
Returns the packed width considering the rotate value , if it is true then it returns the packedHeight , otherwise it returns the packedWidth . 
Returns the packed height considering the rotate value , if it is true then it returns the packedWidth , otherwise it returns the packedHeight . 
Sets the texture and sets the coordinates to the size of the specified texture . 
Sets the texture and coordinates to the specified region . 
Sets the texture to that of the specified region and sets the coordinates relative to the specified region . 
Returns the region 's width . 
Returns the region 's height . 
gets multiple attributes at once . 
adds a attribute to this material . 
adds multiple attributes to this material . 
adds multiple attributes to this material . 
adds multiple attributes to this material . 
adds an array of attributes to this material . 
adds an array of attributes to this material . 
Sets the color of all four vertices to the specified color @param r Red component @param g Green component @param b Blue component @param a Alpha component 
Sets the color used to tint this decal . 
Sets the rotation on the local X axis to the specified angle @param angle Angle in degrees to sets rotation to 
Sets the rotation on the local Y axis to the specified angle @param angle Angle in degrees to sets rotation to 
Sets the rotation on the local Z axis to the specified angle @param angle Angle in degrees to sets rotation to 
Sets the rotation of this decal to the given angles on all axes . 
Sets the rotation of this decal based on the provided Quaternion @param q desired Rotation 
Returns the rotation . 
Sets the position on the x axis @param x Position to locate the decal at 
Sets the position on the y axis @param y Position to locate the decal at 
Sets the position on the z axis @param z Position to locate the decal at 
Sets the position to the given world coordinates @param x X position @param y Y Position @param z Z Position 
Returns the color of this decal . 
Returns the position of this decal . 
Sets scale along the x axis @param scale New scale along x axis 
Sets scale along the y axis @param scale New scale along y axis 
Sets scale along both the x and y axis @param scaleX Scale on the x axis @param scaleY Scale on the y axis 
Sets scale along both the x and y axis @param scale New scale 
Sets the width in world units @param width Width in world units 
Sets the height in world units @param height Height in world units 
Sets the width and height in world units @param width Width in world units @param height Height in world units 
Returns the vertices backing this sprite . 
Sets the texture region @param textureRegion Texture region to apply 
Sets the blending parameters for this decal @param srcBlendFactor Source blend factor used by glBlendFunc @param dstBlendFactor Destination blend factor used by glBlendFunc 
sets material @param material custom material 
Sets the rotation of the Decal to face the given point . 
Creates a decal assuming the dimensions of the texture region @param textureRegion Texture region to use @return Created decal 
Creates a decal using the region for texturing and the specified blending parameters for blending @param width Width of the decal in world units @param height Height of the decal in world units @param textureRegion TextureRegion to use @param srcBlendFactor Source blend used by glBlendFunc @param dstBlendFactor Destination blend used by glBlendFunc @return Created decal 
Creates a decal using the region for texturing and the specified blending parameters for blending @param width Width of the decal in world units @param height Height of the decal in world units @param textureRegion TextureRegion to use @param srcBlendFactor Source blend used by glBlendFunc @param dstBlendFactor Destination blend used by glBlendFunc @param material Custom decal material @return Created decal 
adds a decal to the batch , marking it for later rendering @param decal Decal to adds for rendering 
removes all decals from batch 
Returns the shader to be used for the group . 
sets the plug used for a specific group . 
removes a plug from the strategy @param group Group to removes the plug from @return removed plug , null if there was none for that group 
creates a copy of this material 
sets this MeshPart to be a copy of the other MeshPart @param other The MeshPart from which to copy the values @return this MeshPart , for chaining 
Removes this node from its current parent , if any . 
Adds the specified node as the currently last child of this node . 
Adds the specified nodes as the currently last child of this node . 
Removes the specified node as child of this node . 
Creates a nested copy of this Node , any child nodes are copied using this method as well . 
Sets vertex attributes and size 
Sets the current align mode . 
Sets the current align mode . 
Gets current emission mode . 
Sets emission mode . 
Adds and returns a channel described by the channel descriptor parameter . 
Adds and returns a channel described by the channel descriptor parameter . 
Removes the channel with the given id 
Adds an element considering the values in the same order as the current channels in the array . 
Removes the element at the given index and swaps it with the last available element 
Removes all the channels and sets size to 0 
Sets the capacity . 
Sets the delta used to step the simulation 
Sets the current transformation to the given one . 
Sets the current transformation . 
sets the given matrix to the current transformation matrix . 
Removes the Influencer of the given type . 
Sets the given transform matrix on each controller . 
Returns the controller with the specified name , or null . 
Removes all the effects added to the system 
Creates and adds a new SaveData object to the save data list 
Creates and adds a new and unique SaveData object to the save data map 
Gets called when an animation is completed . 
Gets called when an animation is looped . 
sets the active animation , replacing any current animation . 
sets the active animation , replacing any current animation . 
sets the active animation , replacing any current animation . 
sets the active animation , replacing any current animation . 
sets the active animation , replacing any current animation . 
sets the active animation , replacing any current animation . 
sets the active animation , replacing any current animation . 
sets the active animation , replacing any current animation . 
removes the specified animation , by marking the affected nodes as not animated . 
Sets the velocity in units per second for moving forward , backward and strafing left/right . 
Sets how many degrees to rotate per pixel the mouse moved . 
gets a copy of the vertices built so far . 
gets a copy of the indices built so far . 
sets the color used to tint the vertex color , defaults to white . 
sets the color used to tint the vertex color , defaults to white . 
sets range of texture coordinates from the specified TextureRegion . 
gets the current vertex transformation matrix . 
sets the current vertex transformation matrix and enables vertex transformation . 
Sets whether vertex transformation is enabled . 
adds one or more vertices , returns the index of the last vertex added . 
adds a vertex , returns the index . 
adds a vertex , returns the index . 
adds an index , MeshPartBuilder expects all meshes to be indexed . 
adds multiple indices , MeshPartBuilder expects all meshes to be indexed . 
adds multiple indices , MeshPartBuilder expects all meshes to be indexed . 
adds multiple indices , MeshPartBuilder expects all meshes to be indexed . 
adds multiple indices , MeshPartBuilder expects all meshes to be indexed . 
adds multiple indices , MeshPartBuilder expects all meshes to be indexed . 
adds a line by indices . 
adds a line . 
adds a line . 
adds a line . 
adds a line . 
adds a triangle by indices . 
adds a triangle . 
adds a triangle . 
adds a triangle . 
adds a rectangle by indices . 
adds a rectangle . 
adds a rectangle . 
adds a rectangle Requires GL_POINTS , GL_LINES or GL_TRIANGLES primitive type . 
adds a node to the model . 
Adds the nodes of the specified model to a new node of the model being build . 
Adds the specified MeshPart to the current Node . 
Adds the specified mesh part to the current node . 
Adds the specified mesh part to the current node . 
adds a box . 
adds a box . 
adds a box given the matrix . 
adds a box with the specified dimensions . 
adds a box at the specified location , with the specified dimensions 
returns middle point 's segment @param point0 First segment 's point @param point1 Second segment 's point @return the middle point 
returns center point 's rectangle @param point0 @param point1 @param point2 @return the center point 
Adds a PKM header in front of the compressed image data . 
gets the currently bound side . 
Sets viewport to the dimensions of framebuffer . 
Returns a new instance of the default shader used by SpriteBatch for GL2 when no shader is specified . 
Sets the indices of this IndexArray , discarding the old indices . 
Returns the underlying ShortBuffer . 
Sets the indices of this IndexBufferObject , discarding the old indices . 
Returns the underlying ShortBuffer . 
Sets the indices of this IndexBufferObject , discarding the old indices . 
Returns the underlying ShortBuffer . 
Sets the indices of this IndexBufferObject , discarding the old indices . 
Returns the underlying ShortBuffer . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the uniform matrix with the given name . 
Sets the uniform matrix with the given name . 
Sets the uniform matrix with the given name . 
Sets the uniform matrix with the given name . 
Sets an array of uniform matrices with the given name . 
Sets an array of uniform matrices with the given name . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the uniform with the given name . 
Sets the vertex attribute with the given name . 
Sets the vertex attribute with the given name . 
Sets the given attribute @param name the name of the attribute @param value1 the first value @param value2 the second value @param value3 the third value @param value4 the fourth value 
Sets the color to be used by the next shapes drawn . 
Sets the color to be used by the next shapes drawn . 
Sets the projection matrix to be used for rendering . 
Sets the transformation matrix to identity . 
Returns the current shape type . 
Returns the VBO handle @return the VBO handle 
Sets the vertices of this VertexData , discarding the old vertex data . 
Returns the underlying FloatBuffer and marks it as dirty , causing the buffer contents to be uploaded on the next call to bind . 
Sets the vertices of this Mesh . 
Sets the vertices of this Mesh . 
Sets the indices of this Mesh @param indices the indices @return the mesh for invocation chaining . 
Sets the indices of this Mesh . 
Sets the color for the following drawing operations @param color the color , encoded as RGBA8888 
Sets the color for the following drawing operations . 
Sets the color for the following drawing operations . 
Returns the 32-bit RGBA8888 value of the pixel at x , y. For Alpha formats the RGB components will be one . 
Returns the OpenGL ES format of this Pixmap . 
Returns the OpenGL ES format of this Pixmap . 
Returns the OpenGL ES type of this Pixmap . 
Returns the direct ByteBuffer holding the pixel data . 
Sets the deflate compression level . 
Returns the offset for the first VertexAttribute with the specified usage . 
Returns the offset for the first VertexAttribute with the specified usage . 
Returns the first VertexAttribute for the given usage . 
Returns whether OpenGL ES 3.0 is available . 
Returns the id of the current frame . 
Sets the window to full-screen mode . 
Sets the window to windowed mode . 
Sets the title of the window . 
Sets the window decoration as enabled or disabled . 
Sets whether or not the window should be resizable . 
Sets whether to render continuously .  
Returns the x coordinate in screen coordinates of the given pointer . 
Returns the y coordinate in screen coordinates of the given pointer . 
Returns whether the key is pressed . 
Returns whether the key has just been pressed . 
Sets the on-screen keyboard visible if available . 
Sets whether the BACK button on Android should be caught . 
Sets whether the MENU button on Android should be caught . 
gets the index of the layer having the specified name , or -1 if no such layer exists . 
gets the index of the layer in the collection , or -1 if no such layer exists . 
gets the index of the object having the specified name , or -1 if no such object exists . 
gets the index of the object in the collection , or -1 if no such object exists . 
Returns the object for the given key , casting it to clazz . 
Returns the object for the given key , casting it to clazz . 
Sets the projection matrix and viewbounds from the given camera . 
Sets the projection matrix for rendering , as well as the bounds of the map which should be rendered . 
Returns true if tiles are currently cached . 
Sets the percentage of the view that is cached in each direction . 
Sets the texture region used to render the tile 
sets the amount to offset the x position when rendering the tile 
sets the amount to offset the y position when rendering the tile 
Sets the tile to be used for this cell . 
Sets whether to flip the tile horizontally . 
Sets whether to flip the tile vertically . 
Sets the rotation of this cell , in degrees . 
Removes tileset at index @param index index at which to removes a tileset . 
Sets this matrix to the identity matrix @return This matrix for the purpose of chaining operations . 
Sets this matrix to a translation matrix . 
Sets this matrix to a translation matrix . 
Sets this matrix to a scaling matrix . 
Sets this matrix to a scaling matrix . 
Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis . 
Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis . 
Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis . 
Sets this matrix to a shearing matrix . 
Sets this matrix to a shearing matrix . 
Sets this matrix to a concatenation of translation , rotation and scale . 
Sets this matrix to a concatenation of translation , rotation and scale . 
Sets this matrix to a concatenation of translation , rotation and scale . 
Sets this matrix to a concatenation of translation , rotation and scale . 
Sets this matrix to a concatenation of translation and scale . 
Sets this matrix to a concatenation of translation and scale . 
Sets this matrix to the product of two matrices . 
gets the x-y translation component of the matrix . 
Sets a new location and radius for this circle . 
Sets a new location and radius for this circle . 
Sets a new location and radius for this circle , based upon another circle . 
Sets the x and y-coordinates of circle center from vector @param position The position vector 
Sets the x and y-coordinates of circle center @param x The x-coordinate @param y The y-coordinate 
Sets the x-coordinate of circle center @param x The x-coordinate 
Sets the y-coordinate of circle center @param y The y-coordinate 
Sets the radius of circle @param radius The radius 
Sets the given bounding box . 
Sets the given minimum and maximum vector . 
Sets the bounding box minimum and maximum vector from the given points . 
Sets the bounding box minimum and maximum vector from the given points . 
Sets the minimum and maximum vector to positive and negative infinity . 
Sets the minimum and maximum vector to zeros . 
Returns whether this bounding box is valid . 
Returns whether the given bounding box is contained in this bounding box . 
Returns whether the given vector is contained in this bounding box . 
Returns the endpoint given the distance . 
Sets the starting position and the direction of this ray . 
Sets this ray from the given starting position and direction . 
Sets the starting position and direction from the given ray @param ray The ray @return This ray for chaining 
Returns the convex hull polygon for the given point cloud . 
Returns > 0 if the points are a counterclockwise turn , < 0 if clockwise , and 0 if colinear . 
Adds a value with a given interval size to the distribution 
Adds a value with interval size equal to zero to the distribution 
sets the interval size on the passed in object . 
Sets the interval size for the value at the given index 
Removes all the values from the distribution 
Returns INSIDE if point xp , yp is inside the circumcircle made up of the points x1 , y1 , x2 , y2 , x3 , y3 . Returns COMPLETE if xp is to the right of the entire circumcircle . 
Removes all triangles with a centroid outside the specified hull , which may be concave . 
Sets a new position and size for this ellipse . 
Sets a new position and size for this ellipse based upon another ellipse . 
Sets the x and y-coordinates of ellipse center @param x The x-coordinate @param y The y-coordinate @return this ellipse for chaining 
Sets the width and height of this ellipse @param width The width @param height The height @return this ellipse for chaining 
adds a value and update all fields . 
Returns whether the point is in the frustum . 
Returns whether the point is in the frustum . 
Returns whether the given sphere is in the frustum . 
Returns whether the given sphere is in the frustum . 
Returns whether the given sphere is in the frustum not checking whether it is behind the near and far clipping plane . 
Returns whether the given sphere is in the frustum not checking whether it is behind the near and far clipping plane . 
Returns whether the given bounding box is in the frustum . 
Returns whether the given bounding box is in the frustum . 
Returns true if the barycentric coordinates are inside the triangle . 
Returns interpolated values given the barycentric coordinates of a point in a triangle and the values at each vertex . 
Returns an interpolated value given the barycentric coordinates of a point in a triangle and the values at each vertex . 
Returns the lowest positive root of the quadric equation given by a x x + b x + c = 0 . 
Returns the circumcenter of the triangle . 
Returns the centroid for the specified non-self-intersecting polygon . 
Sets the coordinates of this 2D grid point to that of another . 
Sets the coordinates of this 2D grid point . 
Adds another 2D grid point to this point . 
Adds another 2D grid point to this point . 
Sets the coordinates of this 3D grid point to that of another . 
Sets the coordinates of this GridPoint3D . 
Adds another 3D grid point to this point . 
Adds another 3D grid point to this point . 
Returns whether the given point is inside the triangle . 
Returns true if the given point is inside the triangle . 
Returns true if the given point is inside the triangle . 
Returns -1 if the point is on the left side of the line , 0 if the point is on the line and 1 if the point is on the right side of the line . 
Returns true if the specified point is in the polygon . 
Returns the distance between the given line and point . 
Returns the distance between the given segment and point . 
Returns the distance between the given segment and point . 
Returns a point on the segment nearest to the specified point . 
Returns a point on the segment nearest to the specified point . 
Returns whether the given line segment intersects the given circle . 
Returns the sine in radians from a lookup table . 
Returns the cosine in radians from a lookup table . 
Returns the sine in radians from a lookup table . 
Returns the cosine in radians from a lookup table . 
Returns atan2 in radians , faster but less accurate than Math.atan2 . 
Returns a random boolean value . 
Returns true if a random value between 0 and 1 is less than the specified value . 
Returns -1 or 1 , randomly . 
Returns the next power of two . Returns the specified value if the value is already a power of two . 
Returns the largest integer less than or equal to the specified float . 
Returns the largest integer less than or equal to the specified float . 
Returns the smallest integer greater than or equal to the specified float . 
Returns the smallest integer greater than or equal to the specified float . 
Returns the closest integer to the specified float . 
Returns the closest integer to the specified float . 
Returns true if the value is zero . 
Returns true if a is nearly equal to b . 
Returns true if a is nearly equal to b. @param a the first value . 
Sets this matrix to the identity matrix @return This matrix for the purpose of chaining operations . 
Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis . 
Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis . 
Sets this matrix to a translation matrix . 
Sets this matrix to a translation matrix . 
Sets this matrix to a scaling matrix . 
Sets this matrix to a scaling matrix . 
Sets this 3x3 matrix to the top left 3x3 corner of the provided 4x4 matrix . 
Sets the matrix to the given matrix as a float array . 
Adds a translational component to the matrix in the 3rd column . 
Adds a translational component to the matrix in the 3rd column . 
Adds a translational component to the matrix in the 3rd column . 
gets the values in this matrix . 
Sets the matrix to the given matrix . 
Sets the matrix to the given matrix as a float array . 
Sets the matrix to a rotation matrix representing the quaternion . 
Sets the matrix to a rotation matrix representing the quaternion . 
sets this matrix to the specified translation and rotation . 
Sets the matrix to a rotation matrix representing the translation and quaternion . 
sets this matrix to the specified translation , rotation and scale . 
Sets the matrix to a rotation matrix representing the translation and quaternion . 
Sets the four columns of the matrix which correspond to the x - , y - and z-axis of the vector space this matrix creates as well as the 4th column representing the translation of any point that is multiplied by this matrix . 
Adds a translational component to the matrix in the 4th column . 
Adds a translational component to the matrix in the 4th column . 
Sets the matrix to an identity matrix . 
Sets the matrix to a projection matrix with a near - and far plane , a field of view in degrees and an aspect ratio . 
Sets the matrix to a projection matrix with a near/far plane , and left , bottom , right and top specifying the points on the near plane that are mapped to the lower left and upper right corners of the viewport . 
Sets the 4th column to the translation vector . 
Sets the 4th column to the translation vector . 
Sets this matrix to a translation matrix , overwriting it first by an identity matrix and then setting the 4th column to the translation vector . 
Sets this matrix to a translation matrix , overwriting it first by an identity matrix and then setting the 4th column to the translation vector . 
Sets this matrix to a translation and scaling matrix by first overwriting it with an identity and then setting the translation vector in the 4th column and the scaling vector in the diagonal . 
Sets this matrix to a translation and scaling matrix by first overwriting it with an identity and then setting the translation vector in the 4th column and the scaling vector in the diagonal . 
Sets the matrix to a rotation matrix around the given axis . 
Sets the matrix to a rotation matrix around the given axis . 
Sets the matrix to a rotation matrix around the given axis . 
Sets the matrix to a rotation matrix around the given axis . 
sets the matrix to a rotation matrix between two vectors . 
sets the matrix to a rotation matrix between two vectors . 
Sets this matrix to a rotation matrix from the given euler angles . 
Sets this matrix to a rotation matrix from the given euler angles . 
Sets this matrix to a scaling matrix @param vector The scaling vector @return This matrix for chaining . 
Sets this matrix to a scaling matrix @param x The x-component of the scaling vector @param y The y-component of the scaling vector @param z The z-component of the scaling vector @return This matrix for chaining . 
Sets the matrix to a look at matrix with a direction and an up vector . 
Sets this matrix to a look at matrix with the given position , target and up vector . 
Sets this matrix to the given 3x3 matrix . 
Sets this matrix to the given affine matrix . 
Gets the rotation of this matrix . 
Gets the rotation of this matrix . 
removes the translational part and transposes the matrix . 
Sets the plane normal and distance to the origin based on the three given points which are considered to be on the plane . 
Sets the plane normal and distance @param nx normal x-component @param ny normal y-component @param nz normal z-component @param d distance to origin 
Returns on which side the given point lies relative to the plane and its normal . 
Returns on which side the given point lies relative to the plane and its normal . 
Returns whether the plane is facing the direction vector . 
Sets the plane to the given point and normal . 
Sets this plane from the given plane @param plane the plane 
Returns the polygon 's local vertices without scaling or rotation and without being offset by the polygon position . 
Sets the origin point to which all of the polygon 's local vertices are relative to . 
Sets the polygon 's position within the world . 
Sets the polygon 's local vertices relative to the origin point , without any scaling , rotating or translations being applied . 
Sets the polygon to be rotated by the supplied degrees . 
Sets the amount of scaling to be applied to the polygon . 
Returns the area contained within the polygon . 
Returns an axis-aligned bounding box of this polygon . 
Returns whether an x , y pair is contained within the polygon . 
Returns the x-coordinate of the polygon 's position within the world . 
Returns the y-coordinate of the polygon 's position within the world . 
Returns the x-coordinate of the polygon 's origin point . 
Returns the y-coordinate of the polygon 's origin point . 
Returns the total rotation applied to the polygon . 
Returns the total horizontal scaling applied to the polygon . 
Returns the total vertical scaling applied to the polygon . 
Returns vertices without scaling or rotation and without being offset by the polyline position . 
Returns vertices scaled , rotated , and offset by the polygon position . 
Returns the euclidean length of the polyline without scaling 
Returns the euclidean length of the polyline 
Sets the components of the quaternion @param x The x-component @param y The y-component @param z The z-component @param w The w-component @return This quaternion for chaining 
Sets the quaternion components from the given quaternion . 
Sets the quaternion components from the given axis and angle around that axis . 
Sets the quaternion to the given euler angles in degrees . 
Sets the quaternion to the given euler angles in radians . 
gets the pole of the gimbal lock , if any . 
gets the roll euler angle in radians , which is the rotation around the z axis . 
gets the roll euler angle in degrees , which is the rotation around the z axis . 
gets the pitch euler angle in radians , which is the rotation around the x axis . 
gets the pitch euler angle in degrees , which is the rotation around the x axis . 
gets the yaw euler angle in radians , which is the rotation around the y axis . 
gets the yaw euler angle in degrees , which is the rotation around the y axis . 
adds the x , y , z , w components of the passed in quaternion to the ones of this quaternion 
adds the x , y , z , w components of the passed in quaternion to the ones of this quaternion 
Sets the quaternion to an identity Quaternion @return this quaternion for chaining 
Sets the quaternion components from the given axis and angle around that axis . 
Sets the quaternion components from the given axis and angle around that axis . 
Sets the quaternion components from the given axis and angle around that axis . 
Sets the quaternion components from the given axis and angle around that axis . 
Sets the Quaternion from the given matrix , optionally removing any scaling . 
Sets the Quaternion from the given rotation matrix , which must not contain scaling . 
Sets the Quaternion from the given matrix , optionally removing any scaling . 
Sets the Quaternion from the given rotation matrix , which must not contain scaling . 
Sets the Quaternion from the given x - , y - and z-axis which have to be orthonormal .  
Sets the Quaternion from the given x - , y - and z-axis .  
sets this quaternion to the rotation between two vectors . 
sets this quaternion to the rotation between two vectors . 
gets the axis angle representation of the rotation in degrees . 
gets the axis-angle representation of the rotation in radians . 
gets the angle in radians of the rotation this quaternion represents . 
gets the angle in degrees of the rotation this quaternion represents . 
gets the swing rotation and twist rotation for the specified axis . 
gets the swing rotation and twist rotation for the specified axis . 
gets the angle in radians of the rotation around the specified axis . 
gets the angle in radians of the rotation around the specified axis . 
gets the angle in degrees of the rotation around the specified axis . 
gets the angle in degrees of the rotation around the specified axis . 
Sets the internal state of this generator . 
Returns the internal seeds to allow state saving . 
Sets the x-coordinate of the bottom left corner @param x The x-coordinate @return this rectangle for chaining 
Sets the y-coordinate of the bottom left corner @param y The y-coordinate @return this rectangle for chaining 
Sets the width of this rectangle @param width The width @return this rectangle for chaining 
Sets the height of this rectangle @param height The height @return this rectangle for chaining 
returns the Vector2 with coordinates of this rectangle @param position The Vector2 
Sets the x and y-coordinates of the bottom left corner from vector @param position The position vector @return this rectangle for chaining 
Sets the x and y-coordinates of the bottom left corner @param x The x-coordinate @param y The y-coordinate @return this rectangle for chaining 
Sets the width and height of this rectangle @param width The width @param height The height @return this rectangle for chaining 
Sets the squared size of this rectangle @param sizeXY The size @return this rectangle for chaining 
Sets the values of the given rectangle to this rectangle . 
Returns Float.NaN if height is 0 to avoid ArithmeticException 
Returns whether the given point is contained within the shape . 
Returns whether a point with the given coordinates is contained within the shape . 
Sets the length of this vector . 
Sets the length of this vector , based on the square of the desired length . 
Sets this vector from the given vector @param v The vector @return This vector for chaining 
Adds the given vector to this vector @param v The vector @return This vector for chaining 
Sets this vector to the unit vector with a random direction @return This vector for chaining 
Sets the components of this vector to 0 @return This vector for chaining 
Sets the components of this vector @param x The x-component @param y The y-component @return This vector for chaining 
Adds the given components to this vector @param x The x-component @param y The y-component @return This vector for chaining 
Sets the vector to the given components @param x The x-component @param y The y-component @param z The z-component @return this vector for chaining 
Sets the components from the array . 
Sets the components of the given vector and z-component @param vector The vector @param z The z-component @return This vector for chaining 
Sets the components from the given spherical coordinate @param azimuthalAngle The angle between x-axis in radians -LSB- 0 , 2pi -RSB- @param polarAngle The angle between z-axis in radians -LSB- 0 , pi -RSB- @return This vector for chaining 
Adds the given vector to this component @param x The x-component of the other vector @param y The y-component of the other vector @param z The z-component of the other vector @return This vector for chaining . 
Adds the given value to all three components of the vector . 
Returns the squared distance between this point and the given point @param x The x-component of the other point @param y The y-component of the other point @param z The z-component of the other point @return The squared distance 
Returns the dot product between this and the given vector . 
Sets this vector to the cross product between it and the other vector . 
Sets this vector to the cross product between it and the other vector . 
adds a new sample to this mean . 
returns the mean of the samples added to this instance . 
Returns the data of the HTTP response as a byte -LSB- -RSB- . 
Returns a Map of the headers .  
Sets the URL of the HTTP request . 
Sets the content to be used in the HTTP request . 
Sets the content as a stream to be used for a POST for example , to transmit custom data . 
Sets the time to wait for the HTTP request to be processed , use 0 block until it is done . 
Sets whether 301 and 302 redirects are followed . 
Sets whether a cross-origin request will include credentials . 
Sets the HTTP method of the HttpRequest . 
Returns the timeOut of the HTTP request . 
Returns the HTTP method of the HttpRequest . 
Returns the URL of the HTTP request . 
Returns the content string to be used for the HTTP request . 
Returns the content stream . 
Returns the content length in case content is a stream . 
Returns a Map < String , String > with the headers of the HTTP request . 
Returns whether 301 and 302 redirects are followed . 
Returns whether a cross-origin request will include credentials . 
Creates a new TCP client socket that connects to the given host and port . 
Returns a read only Map < String , Object > with all the key , objects of the preferences . 
Sets the state of the action so it can be run again . 
Sets the actor this action is attached to . 
Sets the actor this action will manipulate . 
Sets the pool that the action will be returned to when removed from the actor . 
Returns a new or pooled action of the specified type . 
Sets the actor 's color instantly . 
Sets the actor 's alpha instantly . 
Sets the color to modify . 
Sets the color to transition to . 
Gets the time spent waiting for the delay . 
Sets the time spent waiting for the delay . 
Sets the length of the delay in seconds . 
Sets the wrapped action . 
Gets the current float value . 
Sets the current float value . 
Sets the value to transition from . 
Sets the value to transition to . 
Gets the current int value . 
Sets the current int value . 
Sets the value to transition from . 
Sets the value to transition to . 
Sets the number of times to repeat . 
Gets the transition time so far . 
Sets the transition time so far . 
Sets the length of the transition in seconds . 
Removes this actor from its parent , if it has a parent . 
Adds a listener that is only notified during the capture phase . 
Returns true if the actor has one or more actions . 
Removes all actions on this actor . 
Removes all listeners on this actor . 
Removes all actions and listeners on this actor . 
Returns the stage that this actor is currently in , or null if not in a stage . 
Returns true if this actor is the same as or is the descendant of the specified actor . 
Returns true if this actor is the same as or is the ascendant of the specified actor . 
Returns true if the actor 's parent is not null . 
Returns the parent actor , or null if not in a group . 
Returns true if input events are processed by this actor . 
Returns an application specific object for convenience , or null . 
Sets an application specific object for convenience . 
Returns the X position of the actor 's left edge . 
Returns the Y position of the actor 's bottom edge . 
Sets the position of the actor 's bottom left corner . 
adds x and y to current position 
Returns y plus height . 
Returns x plus width . 
Sets the width and height . 
Adds the specified size to the current size . 
Adds the specified size to the current size . 
sets bounds the x , y , width , and height . 
Sets the origin position which is relative to the actor 's bottom left corner . 
Sets the scale for both X and Y 
Sets the scale X and scale Y. 
Adds the specified scale to the current scale . 
Adds the specified scale to the current scale . 
Adds the specified rotation to the current rotation . 
Returns the color the actor will be tinted when drawn . 
Sets the z-index of this actor . 
Returns the z-index of this actor . 
Returns the actor that the event originated from . 
Returns the actor that this listener is attached to . 
Returns the transform for this group 's coordinate system . 
Adds an actor as a child of this group . 
Adds an actor as a child of this group , at a specific index . 
Adds an actor as a child of this group , immediately before another child actor . 
Adds an actor as a child of this group , immediately after another child actor . 
Removes an actor from this group . 
Removes all actors from this group . 
Removes all children , actions , and listeners from this group . 
Returns the first actor found with the specified name . 
Returns false if the swap did not occur because the indexes were out of bounds . 
Returns false if the swap did not occur because the actors are not children of this group . 
Returns an ordered list of child actors in this group . 
Returns a description of the actor hierarchy , recursively . 
Sets actorCoords to this event 's coordinates relative to the specified actor . 
Adds the listener to be notified for all touchDragged and touchUp events for the specified pointer and button . 
Removes the listener from being notified for all touchDragged and touchUp events for the specified pointer and button . 
Adds an actor to the root of the stage . 
Adds an action to the root of the stage . 
Returns the root 's child actors . 
Adds a listener to the root . 
Removes a listener from the root . 
Adds a capture listener to the root . 
Removes a listener from the root . 
Removes the root 's children , actions , and listeners . 
Removes the touch , keyboard , and scroll focused actors . 
Removes the touch , keyboard , and scroll focus for the specified actor and any descendants . 
Sets the actor that will receive key events . 
Gets the actor that will receive key events . 
Sets the actor that will receive scroll events . 
Gets the actor that will receive scroll events . 
Returns the root group which holds all actors in the stage . 
Returns the button 's style . 
Sets the minimum number of buttons that must be checked . 
Sets the maximum number of buttons that can be checked . sets to -1 for no maximum . 
Sets the actor in this cell and adds the actor to the cell 's table . 
Removes the current actor for the cell , if any . 
Returns the actor for this cell , or null . 
Returns true if the cell 's actor is not null . 
Sets the minWidth , prefWidth , maxWidth , minHeight , prefHeight , and maxHeight to the specified value . 
Sets the minWidth , prefWidth , maxWidth , minHeight , prefHeight , and maxHeight to the specified values . 
Sets the minWidth , prefWidth , maxWidth , minHeight , prefHeight , and maxHeight to the specified value . 
Sets the minWidth , prefWidth , maxWidth , minHeight , prefHeight , and maxHeight to the specified values . 
Sets the minWidth , prefWidth , and maxWidth to the specified value . 
Sets the minWidth , prefWidth , and maxWidth to the specified value . 
Sets the minHeight , prefHeight , and maxHeight to the specified value . 
Sets the minHeight , prefHeight , and maxHeight to the specified value . 
Sets the minWidth and minHeight to the specified value . 
Sets the minWidth and minHeight to the specified values . 
Sets the minWidth and minHeight to the specified value . 
Sets the minWidth and minHeight to the specified values . 
Sets the prefWidth and prefHeight to the specified value . 
Sets the prefWidth and prefHeight to the specified values . 
Sets the prefWidth and prefHeight to the specified value . 
Sets the prefWidth and prefHeight to the specified values . 
Sets the maxWidth and maxHeight to the specified value . 
Sets the maxWidth and maxHeight to the specified values . 
Sets the maxWidth and maxHeight to the specified value . 
Sets the maxWidth and maxHeight to the specified values . 
Sets the spaceTop , spaceLeft , spaceBottom , and spaceRight to the specified value . 
Sets the spaceTop , spaceLeft , spaceBottom , and spaceRight to the specified value . 
Sets the padTop , padLeft , padBottom , and padRight to the specified value . 
Sets the padTop , padLeft , padBottom , and padRight to the specified value . 
Sets fillX and fillY to 1 . 
Sets fillX to 1 . 
Sets fillY to 1 . 
Sets fillX and fillY to 1 if true , 0 if false . 
Sets fillX and fillY to 1 if true , 0 if false . 
Sets the alignment of the actor within the cell . 
Sets expandX , expandY , fillX , and fillY to 1 . 
Sets expandX and fillX to 1 . 
Sets expandY and fillY to 1 . 
Sets expandX and expandY to 1 . 
Sets expandX to 1 . 
Sets expandY to 1 . 
Sets expandX and expandY to 1 if true , 0 if false . 
Sets uniformX and uniformY to true . 
Sets uniformX to true . 
Sets uniformY to true . 
Returns true if this cell is the last cell in the row . 
Sets all constraint fields to null . 
Returns the defaults to use for all cells . 
Returns the checkbox 's style . 
Sets the background drawable and adjusts the container 's padding to match the background . 
Sets the minWidth , prefWidth , maxWidth , minHeight , prefHeight , and maxHeight to the specified value . 
Sets the minWidth , prefWidth , maxWidth , minHeight , prefHeight , and maxHeight to the specified values . 
Sets the minWidth , prefWidth , maxWidth , minHeight , prefHeight , and maxHeight to the specified value . 
Sets the minWidth , prefWidth , maxWidth , minHeight , prefHeight , and maxHeight to the specified values . 
Sets the minWidth , prefWidth , and maxWidth to the specified value . 
Sets the minWidth , prefWidth , and maxWidth to the specified value . 
Sets the minHeight , prefHeight , and maxHeight to the specified value . 
Sets the minHeight , prefHeight , and maxHeight to the specified value . 
Sets the minWidth and minHeight to the specified value . 
Sets the minWidth and minHeight to the specified values . 
Sets the minWidth and minHeight to the specified value . 
Sets the minWidth and minHeight to the specified values . 
Sets the prefWidth and prefHeight to the specified value . 
Sets the prefWidth and prefHeight to the specified values . 
Sets the prefWidth and prefHeight to the specified value . 
Sets the prefWidth and prefHeight to the specified values . 
Sets the maxWidth and maxHeight to the specified value . 
Sets the maxWidth and maxHeight to the specified values . 
Sets the maxWidth and maxHeight to the specified value . 
Sets the maxWidth and maxHeight to the specified values . 
Sets the padTop , padLeft , padBottom , and padRight to the specified value . 
Sets the padTop , padLeft , padBottom , and padRight to the specified value . 
Sets fillX and fillY to 1 . 
Sets fillX to 1 . 
Sets fillY to 1 . 
Sets fillX and fillY to 1 if true , 0 if false . 
Sets fillX and fillY to 1 if true , 0 if false . 
Sets the alignment of the actor within the container . 
Adds a label to the content table . 
Adds a label to the content table . 
Adds the given Label to the content table 
Adds a text button to the button table . 
Adds a text button to the button table . 
Adds a text button to the button table . 
Adds the given button to the button table . 
Adds the given button to the button table . 
Sets the horizontal space between children . 
Sets the vertical space between rows when wrap is enabled . 
Sets the padTop , padLeft , padBottom , and padRight to the specified value . 
Sets the alignment of all widgets within the horizontal group . 
Returns the label 's style . 
Returns the list 's style . 
Returns the first selected item , or null . 
Sets the selection to only the passed item , if it is a possible choice . 
Sets the selection to only the selected index . 
Sets the items visible in the list , clearing the selection if it is no longer valid . 
Returns the internal items array . 
Returns the progress bar 's style . 
Returns progress bar visual position within the range . 
Sets the progress bar position , rounded to the nearest step size and clamped to the minimum and maximum values . 
Sets the range of this progress bar . 
Sets the interpolation to use for display . 
Returns the scroll pane 's style . 
Returns the actor embedded in this scroll pane , or null . 
Returns the amount to scroll horizontally when the mouse wheel is scrolled . 
Returns the amount to scroll vertically when the mouse wheel is scrolled . 
Returns the x scroll position in pixels , where 0 is the left of the scroll pane . 
Returns the y scroll position in pixels , where 0 is the top of the scroll pane . 
Sets the visual scroll amount equal to the scroll amount . 
Sets the scroll offset so the specified rectangle is fully in view , if possible . 
Sets the scroll offset so the specified rectangle is fully in view , and optionally centered vertically and/or horizontally , if possible . 
Returns the maximum scroll value in the x direction . 
Returns the maximum scroll value in the y direction . 
Returns the width of the scrolled viewport . 
Returns the height of the scrolled viewport . 
Returns true if the widget is larger than the scroll pane horizontally . 
Returns true if the widget is larger than the scroll pane vertically . 
Gets the flick scroll x velocity . 
Gets the flick scroll y velocity . 
sets the position of the vertical and horizontal scroll bars . 
sets the max number of items to display when the select box is opened . 
Returns the select box 's style . 
sets the backing Array that makes up the choices available in the SelectBox 
Sets the items visible in the select box . 
Returns the internal items array . 
gets the sets of selected items , useful when multiple items are selected @return a Selection object containing the selected elements 
Returns the first selected item , or null . 
Sets the selection to only the passed item , if it is a possible choice , else selects the first item . 
Sets the selection to only the selected index . 
Returns the list shown when the select box is open . 
Returns the scroll pane containing the list that is shown when the select box is open . 
Adds all resources in the specified skin JSON file . 
Adds all named texture regions from the atlas . 
Returns a resource named `` default '' for the specified type . 
Returns a named resource of the specified type . 
Returns a named resource of the specified type . 
Returns the name to resource mapping for the specified type , or null if no resources of that type exist . 
Returns a registered texture region . 
Returns a registered tiled drawable . 
Returns a registered ninepatch . 
Returns a registered sprite . 
Returns a registered drawable . 
Returns the name of the specified style object , or null if it is not in the skin . 
Returns a copy of the specified drawable . 
Sets the style on the actor to disabled or enabled . 
Returns the slider 's style . 
Returns a snapped value . 
Returns true if the slider is being dragged . 
Sets the inverse interpolation to use for display . 
Returns the split pane 's style . 
Sets the background drawable from the skin and adjusts the table 's padding to match the background . 
Adds a new cell to the table with the specified actor . 
Adds a new cell with a label . 
Adds a new cell with a label . 
Adds a new cell with a label . 
Adds a new cell with a label . 
Adds a cell without an actor . 
Removes all actors and cells from the table . 
Gets the cell values that will be used as the defaults for all cells in the specified column . 
Returns the cell for the specified actor in this table , or null . 
Returns the cells for this table . 
Sets the padTop , padLeft , padBottom , and padRight around the table to the specified value . 
Sets the padTop , padLeft , padBottom , and padRight around the table to the specified value . 
Returns the row index for the y coordinate , or -1 if there are no cells . 
Returns the height of the specified row . 
Returns the width of the specified column . 
Returns total number of lines that the text occupies 
Returns if there 's a new line at then end of the text 
Returns the text field 's style . 
Sets the text that will be drawn in the text field if no text has been entered . 
Sets the selected text . 
Sets the cursor position and clears any selection . 
Sets the password character for the text field . 
Returns the touchpad 's style . 
Returns the x-position of the knob relative to the center of the widget . 
Returns the y-position of the knob relative to the center of the widget . 
Returns the x-position of the knob as a percentage from the center of the touchpad to the edge of the circular movement area . 
Returns the y-position of the knob as a percentage from the center of the touchpad to the edge of the circular movement area . 
Removes all tree nodes . 
Sets the amount of horizontal space between the nodes and the left/right edges of the tree . 
Returns the amount of horizontal space for indentation level . 
Sets the amount of vertical space between nodes . 
Sets the amount of horizontal space between the node actors and icons . 
Returns the node with the specified object , or null . 
Returns the click listener the tree uses for clicking on nodes and the over node . 
Returns the tree this node is currently in , or null . 
Sets an icon that will be drawn to the left of the actor . 
Sets an application specific object for this node . 
Returns this node or the child node with the specified object , or null . 
Returns a value that is a percentage of the actor 's width . 
Returns a value that is a percentage of the actor 's height . 
Returns a value that is a percentage of the specified actor 's width . 
Returns a value that is a percentage of the specified actor 's height . 
Sets the vertical space between children . 
Sets the horizontal space between columns when wrap is enabled . 
Sets the padTop , padLeft , padBottom , and padRight to the specified value . 
Sets the alignment of all widgets within the vertical group . 
Sets the alignment of widgets within each column of the vertical group . 
Returns the window 's style . 
Removes objects from the selection that are no longer in the items array . 
Returns true if the specified position is over the specified actor or within the tap square . 
Returns true if a touch is within the tap square . 
Returns true if a touch is over the actor or within the tap square . 
Returns true if a touch is over the actor or within the tap square or has been very recently . 
Returns true if the mouse or touch is over the actor or pressed and within the tap square . 
Returns the number of taps within the tap count interval for the most recent click event . 
Sets the button to listen for , all other buttons are ignored . 
Removes all targets and sources . 
Sets the distance a touch must travel before being considered a drag . 
Sets the button to listen for , all other buttons are ignored . 
Sets an offset in stage coordinates from the touch position which is used to determine the drop location . 
Returns the current drag actor , or null . 
Returns true if a touch has been dragged outside the tap square . 
Returns the amount on the x axis that the touch has been dragged since the last drag event . 
Returns the amount on the y axis that the touch has been dragged since the last drag event . 
Sets the button to listen for , all other buttons are ignored . 
Creates a new drawable that renders the same as this drawable tinted the specified color . 
Returns the first selected item , or null . 
Sets the selection to only the specified item . 
Adds the item to the selection . 
Creates a new drawable that renders the same as this drawable tinted the specified color . 
Creates a new drawable that renders the same as this drawable tinted the specified color . 
Returns if this array contains value . 
Returns the index of first occurrence of value in the array , or -1 if no such value exists . 
Returns an index of last occurrence of value in array or -1 if no such value exists . 
Removes the first instance of the specified value in the array . 
Removes and returns the item at the specified index . 
Removes the items between the specified indices , inclusive . 
Removes from this array all of elements contained in the specified array . 
Removes and returns the last item . 
Returns the last item . 
Returns the first item . 
Sets the array size , leaving any values beyond the current size null . 
Creates a new backing array with the specified size containing the current items . 
Returns an iterator for the items in the array . removes is supported . 
Returns an iterable for the selected items in the array . 
Returns a random item from the array , or null if the array is empty . 
Returns the items as an array . 
Returns the value for the specified key . 
Returns the key for the specified value . 
Removes and returns the key/values pair at the specified index . 
Returns the last key . 
Returns the last value . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns the bit at the given index and clears it in one go . 
Returns the bit at the given index and sets it in one go . 
Returns the `` logical size '' of this bitset : the index of the highest sets bit in the bitset plus one . Returns zero if the bitset contains no sets bits . 
Returns the index of the first bit that is sets to true that occurs on or after the specified starting index . 
Returns the index of the first bit that is sets to false that occurs on or after the specified starting index . 
Returns true if the specified BitSet has any bits sets to true that are also sets to true in this BitSet . 
Returns true if this bit sets is a super sets of the specified sets , i.e. it has all bits sets to true that are also sets to true in the specified BitSet . 
Removes and returns the item at the specified index . 
Removes the items between the specified indices , inclusive . 
Removes from this array all of elements contained in the specified array . 
Removes and returns the last item . 
Returns the last item . 
Returns the first item . 
Sets the array size , leaving any values beyond the current size undefined . 
Returns a random item from the array , or false if the array is empty . 
Returns the address of the Buffer , it assumes it is an unsafe buffer . 
Removes and returns the item at the specified index . 
Removes the items between the specified indices , inclusive . 
Removes from this array all of elements contained in the specified array . 
Removes and returns the last item . 
Returns the last item . 
Returns the first item . 
Sets the array size , leaving any values beyond the current size undefined . 
Returns a random item from the array , or zero if the array is empty . 
Removes and returns the item at the specified index . 
Removes the items between the specified indices , inclusive . 
Removes from this array all of elements contained in the specified array . 
Removes and returns the last item . 
Returns the last item . 
Returns the first item . 
Sets the array size , leaving any values beyond the current size undefined . 
Returns a random item from the array , or zero if the array is empty . 
gets the current content of the clipboard if it contains text @return the clipboard content or null 
Sets the content of the system clipboard . 
Returns the minimum acceptable run length for an array of the specified length .  
Removes and returns the item at the specified index . 
Removes the items between the specified indices , inclusive . 
Removes from this array all of elements contained in the specified array . 
Removes and returns the last item . 
Returns the last item . 
Returns the first item . 
Sets the array size , leaving any values beyond the current size undefined . 
Returns a random item from the array , or zero if the array is empty . 
Sets the flag indicating whether to use the simplified message pattern . 
Creates a new bundle using the specified baseFileHandle , the default locale and the default encoding `` UTF-8 '' . 
Creates a new bundle using the specified baseFileHandle and locale ; the default encoding `` UTF-8 '' is used . 
Creates a new bundle using the specified baseFileHandle and encoding ; the default locale is used . 
Creates a new bundle using the specified baseFileHandle , locale and encoding . 
Returns a List of Locale s as candidate locales for the given locale . 
Returns a Locale to be used as a fallback locale for further bundle searches by the createBundle factory method . 
Returns the locale of this bundle . 
Sets the bundle locale . 
Gets a string for the given key from this bundle or one of its parents . 
Gets the string with the specified key from this bundle or one of its parent after replacing the given arguments if they occur . 
Returns true if the specified value is in the map . 
Returns the key for the specified value , or null if it is not in the map . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns a new array containing the remaining values . 
Adds the remaining values to the specified array . 
Returns a new array containing the remaining keys . 
Removes and returns the item at the specified index . 
Removes the items between the specified indices , inclusive . 
Removes from this array all of elements contained in the specified array . 
Removes and returns the last item . 
Returns the last item . 
Returns the first item . 
Sets the array size , leaving any values beyond the current size undefined . 
Returns a random item from the array , or zero if the array is empty . 
Returns the key 's current value and increments the stored value . 
Returns true if the specified value is in the map . 
Returns true if the specified value is in the map . 
Returns the key for the specified value , or null if it is not in the map . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns a new array containing the remaining values . 
Returns a new array containing the remaining keys . 
Returns the key 's current value and increments the stored value . 
Returns true if the specified value is in the map . 
Returns the key for the specified value , or null if it is not in the map . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns a new array containing the remaining values . 
Returns a new array containing the remaining keys . 
Returns true if the specified value is in the map . 
Returns the key for the specified value , or <tt> notFound </tt> if it is not in the map . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns a new array containing the remaining values . 
Returns a new array containing the remaining keys . 
Returns true if the key was not already in the sets . 
Returns true if the key was removed . 
Returns an iterator for the keys in the sets . removes is supported . 
Returns a new array containing the remaining keys . 
Sets a tag to use instead of the fully qualifier class name . 
Returns the class for the specified tag , or null . 
Returns the tag for the specified class , or null . 
Sets the name of the JSON field to store the Java class name or class tag when required to avoid ambiguity during deserialization . sets to null to never output this information , but be warned that deserialization may fail . 
Sets the type of elements in a collection . 
Sets the writer where JSON output will be written . 
Returns the child at the specified index .  
Returns the child with the specified name . 
Returns true if a child with the specified name exists . 
Returns the child at the specified index .  
Returns the child with the specified name . 
Removes the child with the specified index .  
Removes the child with the specified name . 
Returns this number of children in the array or object . 
Returns this value as a string . 
Returns this value as a float . 
Returns this value as a double . 
Returns this value as a long . 
Returns this value as an int . 
Returns this value as a boolean . 
Returns this value as a byte . 
Returns this value as a short . 
Returns this value as a char . 
Returns the children of this value as a newly allocated String array . 
Returns the children of this value as a newly allocated float array . 
Returns the children of this value as a newly allocated double array . 
Returns the children of this value as a newly allocated long array . 
Returns the children of this value as a newly allocated int array . 
Returns the children of this value as a newly allocated boolean array . 
Returns the children of this value as a newly allocated byte array . 
Returns the children of this value as a newly allocated short array . 
Returns the children of this value as a newly allocated char array . 
Returns true if a child with the specified name exists and has a child . 
Returns defaultValue if not found . 
Returns defaultValue if not found . 
Returns defaultValue if not found . 
Returns defaultValue if not found . 
Returns defaultValue if not found . 
Returns defaultValue if not found . 
Returns defaultValue if not found . 
Returns defaultValue if not found . 
Returns defaultValue if not found . 
Returns true if this is a double or long value . 
Returns true if this is not an array or object . 
Returns the name for this object value . 
Returns the parent for this value . 
Returns the first child for this object or array . 
Sets the name of the specified value and adds it after the last child . 
Adds the specified value after the last child . 
Returns the next sibling of this value . 
Returns the previous sibling of this value . 
Returns a human readable string representing the path from the root of the JSON object graph to this value . 
Sets the type of JSON output . 
Sets the log level . 
Removes and returns the item at the specified index . 
Removes the items between the specified indices , inclusive . 
Removes from this array all of elements contained in the specified array . 
Removes and returns the last item . 
Returns the last item . 
Returns the first item . 
Sets the array size , leaving any values beyond the current size undefined . 
Returns a random item from the array , or zero if the array is empty . 
Returns true if the specified value is in the map . 
Returns the key for the specified value , or <tt> notFound </tt> if it is not in the map . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns a new array containing the remaining values . 
Returns the key 's current value and increments the stored value . 
Returns true if the specified value is in the map . 
Returns the key for the specified value , or null if it is not in the map . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns a new array containing the remaining values . 
Returns a new array containing the remaining keys . 
Adds the remaining keys to the array . 
Returns the key 's current value and increments the stored value . 
Returns true if the specified value is in the map . 
Returns the key for the specified value , or null if it is not in the map . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns a new array containing the remaining values . 
Returns a new array containing the remaining keys . 
Adds the remaining keys to the array . 
Returns the old value associated with the specified key , or null . 
Returns the value for the specified key , or the default value if the key is not in the map . 
Returns true if the specified value is in the map . 
Returns the key for the specified value , or null if it is not in the map . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Returns a new array containing the remaining values . 
Adds the remaining values to the specified array . 
Returns a new array containing the remaining keys . 
Adds the remaining keys to the array . 
Returns true if the key was not already in the sets . 
Returns true if the key was removed . 
Returns an iterator for the keys in the sets . removes is supported . 
Adds the remaining values to the array . 
Returns a new array containing the remaining values . 
Returns an iterator for the entries in the map . removes is supported . 
Returns an iterator for the values in the map . removes is supported . 
Returns an iterator for the keys in the map . removes is supported . 
Creates a string in the form of `` name -LSB- time : value , load : value -RSB- '' 
Returns an object from this pool . 
Removes all free objects from this pool . 
Adds the specified object to the end of the list regardless of iteration status 
Returns the number of items in the list 
Gets the next item in the list @return the next item in the list or null if there are no more items 
Gets the previous item in the list @return the previous item in the list or null if there are no more items 
Removes the current list item based on the iterator position . 
Returns an iterator . 
removes the first item from the queue . 
removes the last item from the queue . 
Returns the index of first occurrence of value in the queue , or -1 if no such value exists . 
Removes the first instance of the specified value in the queue . 
Removes and returns the item at the specified index . 
Removes all values from this queue . 
Returns an iterator for the items in the queue . removes is supported . 
Creates a new array with the specified component type and length . 
Returns the length of the supplied array . 
Returns the value of the indexed component in the supplied array . 
Sets the value of the indexed component in the supplied array to the supplied value . 
Returns the Class object associated with the class or interface with the supplied string name . 
Returns the simple name of the underlying class as supplied in the source code . 
Returns true if the class or interface represented by the supplied Class is a member class . 
Returns true if the class or interface represented by the supplied Class is a static class . 
Creates a new instance of the class represented by the supplied Class . 
Returns true if the supplied class includes an annotation of the given type . 
Returns an empty array if there are none . 
Returns an array of Class objects that represent the formal parameter types , in declaration order , of the constructor . 
Returns the Class object representing the class or interface that declares the constructor . 
Returns the name of the field . 
Returns a Class object that identifies the declared type for the field . 
Returns the Class object representing the class or interface that declares the field . 
returns true if the field is a synthetic field . 
Returns true if the field includes an annotation of the provided class type . 
Returns the value of the field on the supplied object . 
Sets the value of the field on the supplied object . 
Returns the name of the method . 
Returns a Class object that represents the formal returns type of the method . 
Returns an array of Class objects that represent the formal parameter types , in declaration order , of the method . 
Returns the Class object representing the class or interface that declares the method . 
returns true if the method takes a variable number of arguments . 
Returns true if the method includes an annotation of the provided class type . 
Returns the size of the source scaled to the target . 
Returns the default framebuffer contents as a byte -LSB- -RSB- array with a length equal to screen width height 4 . 
Returns a portion of the default framebuffer contents specified by x , y , width and height , as a byte -LSB- -RSB- array with a length equal to the specified width height 4 . 
Returns true if any of the exceptions that caused this exception are of the specified type . 
Adds information to the exception message about where in the the object graph serialization failure occurred . 
Returns a CRC of the remaining bytes in the stream . 
Returns a path to a file that can be written . 
Returns true if the parent directories of the file can be created and the file can be written . 
Sets the library as loaded , for when application code wants to handle libary loading itself . 
Removes and returns the item at the specified index . 
Removes the items between the specified indices , inclusive . 
Removes from this array all of elements contained in the specified array . 
Removes and returns the last item . 
Returns the last item . 
Returns the first item . 
Sets the array size , leaving any values beyond the current size undefined . 
Returns a random item from the array , or zero if the array is empty . 
Returns a Sort instance for convenience . 
Returns an iterator to traverse the list . 
Returns the character array . 
Returns the number of characters that can be held without growing . 
Sets the current length to a new value . 
Returns the current String representation . 
Returns true if the timer has no tasks in the queue . 
Adds the specified delay to all tasks . 
Returns true if this task is scheduled to be executed in the future by a timer . 
Returns the time when this task will be executed in milliseconds 
gets the time in nanos passed since a previous time @param prevTime - must be nanoseconds @return - time passed since prevTime in nanoseconds 
gets the time in millis passed since a previous time @param prevTime - must be milliseconds @return - time passed since prevTime in milliseconds 
Returns the minimum acceptable run length for an array of the specified length .  
Sets the number of pixels for each world unit . 
Sets the viewport 's offset from the left edge of the screen . 
Sets the viewport 's offset from the bottom edge of the screen . 
Sets the viewport 's width in screen coordinates . 
Sets the viewport 's height in screen coordinates . 
Sets the viewport 's position in screen coordinates . 
Sets the viewport 's size in screen coordinates . 
Sets the viewport 's bounds in screen coordinates . 
Returns the attribute value with the specified name , or if no attribute is found , the text of a child with the name . 
Returns the attribute value with the specified name , or if no attribute is found , the text of a child with the name . 
Returns the attribute value with the specified name , or if no attribute is found , the text of a child with the name . 
Returns the attribute value with the specified name , or if no attribute is found , the text of a child with the name . 
Returns the attribute value with the specified name , or if no attribute is found , the text of a child with the name . 
Returns the attribute value with the specified name , or if no attribute is found , the text of a child with the name . 
Returns the attribute value with the specified name , or if no attribute is found , the text of a child with the name . 
Returns the attribute value with the specified name , or if no attribute is found , the text of a child with the name . 
Sets the projection matrix to be used for rendering . 
Adds an occluder entity of specified type @param type Type name @param rotationY Rotation on Y axis in degrees @param position The world position @return The added entity 
Adds an occludee entity of random type at a random place on the ground . 
gets the type name of a random occludee entity . 
Sets viewport to the dimensions of framebuffer . 
sets viewport according to allocator . 
returns number of pass @return int 
returns shaderProvider of the pass n @return ShaderProvider 
returns shaderProvider used for main rendering @return ShaderProvider 
adds spot light in shadow system @param spot SpotLight to adds in the ShadowSystem 
adds directional light in shadow system @param dir DirectionalLight to adds in the ShadowSystem 
adds point light in shadow system @param point PointLight to adds in the ShadowSystem 
adds point light in shadow system @param point PointLight to adds in the ShadowSystem @param sides sets of side 
removes light from the shadowSystem @param spot SpotLight to removes in the ShadowSystem 
removes light from the shadowSystem @param dir DirectionalLight to removes in the ShadowSystem 
removes light from the shadowSystem @param point PointLight to removes in the ShadowSystem 
returns true if light should be used for shadow computation . 
Find the next texture region for the current light @param light Current light @return ShadowMapRegion or null if no more space on texture 
returns shadow map width . 
returns shadow map height . 
Creates a mesh out of the chunk , returning the number of indices produced @return the number of vertices produced 
Sets whether this instance is wrapped by another instance of AnimationAdapter . 
Returns the Animators to apply to the views . 
Returns a Parcelable object containing the AnimationAdapter 's current dynamic state . 
gets the resource id of the animation to apply to the views . 
sets the starting position for which items should animate . 
sets the starting position for which items should animate as the first position which is n't currently visible on screen . 
Sets the value of the last animated position . 
Sets the delay in milliseconds before the first animation should start . 
Sets the delay in milliseconds before an animation of a view should start . 
Sets the duration of the animation in milliseconds . 
Returns the delay in milliseconds after which animation for View with position mLastAnimatedPosition + 1 should start . 
Returns a Parcelable object containing the AnimationAdapter 's current dynamic state . 
Returns the items . 
Adds the objects in the specified collection to the end of this List . 
Returns the position within the adapter 's dataset for the view , where view is an adapter item or a descendant of an adapter item . 
Returns the position within the adapter 's dataset for the view , where view is an adapter item or a descendant of an adapter item . 
Sets whether the list should animate downwards when items are added above the first visible item . 
sets the duration of the scrolldown animation <i> per item </i> for when items are inserted above the first visible item . 
sets the duration of the insertion animation . 
Returns a collection of currently active indexes . 
Returns a bitmap showing a screenshot of the view passed in . 
Sets the scroll speed when dragging an item . 
Sets the scroll speed when dragging an item . 
Sets the color of the dots . 
Sets the radius in pixels of the dots . 
Sets the number of horizontal dots . 
Returns the number of pixels between the original y coordinate of the view , and the current y coordinate . 
Sets the scroll speed when dragging an item . 
Sets the resource id of a child view that should be touched to engage swipe . 
Sets the minimum value of the alpha property swiping Views should have . 
sets the maximum number of items allowed to be expanded . 
gets a View that displays the <b> title of the data </b> at the specified position in the data sets . 
gets a View that displays the <b> content of the data </b> at the specified position in the data sets . 
returns the title view at the specified position . 
returns the content view at the specified position . 
returns the content parent at the specified position . 
Returns whether the item for given id and position can be dismissed . 
sets the minimum value of the alpha property swiping Views should have . 
Sets the resource id of a child view that should be touched to engage swipe . 
Returns whether the user is currently swiping an item . 
Returns whether flinging the item at given position in the current state would cause it to be removed from the data sets . 
Returns the number of active swipe animations . 
Sets the time in milliseconds after which an item in the undo state should automatically dismiss . 
Returns true if the string is null or 0-length . 
Returns true if a and b are equal , including if they are both null . 
creates the transition participants required during a activity transition while avoiding glitches with the system UI . 
Find the view touching the bottom of this ViewGroup . 
Sets the dialog RecyclerView 's adapter/layout manager , and it 's item click listener . 
Sets the fonts used in the dialog . 
Sets the fonts used in the dialog , by file names . 
Sets indices of items that are not clickable . 
Sets the gravity used for the text in stacked action buttons . 
Sets action button stacking behavior . 
Gets whether or not the positive , neutral , or negative action button is visible . 
Gets the number of visible action buttons . 
sets atributtes of XML to View 
sets color of background 
sets color of background 
sets atributtes of XML to View 
sets atributtes of XML to View 
sets atributtes of XML to View 
sets color of background 
sets atributtes of XML to View 
sets atributtes of XML to View 
sets color of background 
sets atributtes of XML to View 
sets color of background 
sets atributtes of XML to View 
sets color of background 
sets atributtes of XML to View 
sets atributtes of XML to View 
gets the Root view for the Header @return 
sets the drawer for the AccountHeader so we can use it for the select @param drawer 
Returns the header background view so the dev can sets everything on it @return 
sets the background for the header via the ImageHolder class @param imageHolder 
sets the background for the Header @param headerBackground 
sets the background for the Header as resource @param headerBackgroundRes 
returns if the selection list is currently shown @return 
sets this to define the first line in the selection area if there is no profile note this will block any values from profiles ! 
sets this to define the second line in the selection area if there is no profile note this will block any values from profiles ! 
returns the current list of profiles sets for this header @return 
sets a new list of profiles for the header @param profiles 
gets the current active profile @return 
adds new profiles to the existing list of profiles @param profiles 
adds a new profile at a specific position to the list @param profile @param position 
removes a profile from the given position @param position 
removes the profile with the given identifier @param identifier 
gets the position of a profile by it 's identifier @param identifier @return 
adds the values to the bundle for saveInstanceState @param savedInstanceState @return 
sets the height for the header @param heightPx @return 
sets the height for the header @param heightDp @return 
sets the height for the header by resource @param heightRes @return 
sets the background for the slider as color @param textColor @return 
sets the background for the slider as resource @param textColorRes @return 
sets this to define the first line in the selection area if there is no profile note this will block any values from profiles ! 
sets this to define the second line in the selection area if there is no profile note this will block any values from profiles ! 
sets this to false if you want no padding below the Header @param paddingBelowHeader @return 
sets this to false if you want no divider below the Header @param dividerBelowHeader @return 
sets or disable this if you use a translucent statusbar @param translucentStatusBar @return 
sets the background for the slider as color @param headerBackground @return 
sets the background for the header as resource @param headerBackgroundRes @return 
sets the background for the header via the ImageHolder class @param headerBackground @return 
sets click / longClick listener for the header images @param onAccountHeaderProfileImageListener @return 
sets a onSelection listener for the selection box @param onAccountHeaderSelectionViewClickListener @return 
sets the arrayList of DrawerItems for the drawer @param profiles @return 
adds single ore more DrawerItems to the Drawer @param profiles @return 
adds a listener for the accountHeader @param onAccountHeaderListener @return 
creates the drawer with the values of a savedInstance @param savedInstance @return 
gets the current selection @return 
gets the DrawerLayout of the current drawer @return 
Sets the toolbar which should be used in combination with the drawer This will handle the ActionBarDrawerToggle for you . 
Sets the toolbar which should be used in combination with the drawer This will handle the ActionBarDrawerToggle for you . 
adds a custom ActionBarDrawerToggle which will be used in combination with this drawer . 
gets the current state of the drawer . 
sets the insetsFrameLayout to display the content in fullscreen under the statusBar and navigationBar @param fullscreen 
gets the Materialize object used to beautify your activity @return 
gets the already generated MiniDrawer or creates a new one @return 
gets the slider layout of the current drawer . 
gets the container frameLayout of the current drawer @return 
gets the listView of the current drawer @return 
gets the FastAdapter of the current drawer @return 
gets the HeaderAdapter of the current drawer @return 
gets the ItemAdapter of the current drawer @return 
gets the FooterAdapter of the current drawer @return 
gets all drawerItems of the current drawer @return 
gets the Header View if sets else NULL @return 
gets the StickyHeader View if sets else NULL @return 
gets the Footer View if sets else NULL @return 
gets the StickyFooter View if sets else NULL @return 
gets the StickyFooter Shadow View if sets else NULL @return 
gets the ActionBarDrawerToggle @return 
sets the gravity for this drawer . 
returns the DrawerItem by the given identifier @param identifier @return 
returns the found drawerItem by the given tag @param tag @return 
gets the current position of the selected drawer element @return 
gets the current selected item identifier @return 
gets the current position of the selected sticky footer element @return 
sets the current selection in the drawer NOTE : This will trigger onDrawerItemSelected without a view ! 
sets the current selection in the drawer NOTE : This will trigger onDrawerItemSelected without a view if you pass fireOnClick = true ; @param identifier the identifier to search for @param fireOnClick true if the click listener should be called 
sets the current selection in the footer of the drawer NOTE : This will trigger onDrawerItemSelected without a view if you pass fireOnClick = true ; @param identifier the identifier to search for @param fireOnClick true if the click listener should be called 
sets the current selection in the drawer NOTE : This will trigger onDrawerItemSelected without a view ! 
sets the current selection in the drawer NOTE : This will trigger onDrawerItemSelected without a view ! 
sets the current selection in the drawer NOTE : this also deselects all other selections . 
sets the current selection in the footer of the drawer NOTE : This will trigger onDrawerItemSelected without a view ! 
sets the current selection in the footer of the drawer NOTE : This will trigger onDrawerItemSelected without a view if you pass fireOnClick = true ; @param position @param fireOnClick 
adds a drawerItem at the end @param drawerItem 
adds a drawerItem at a specific position @param drawerItem @param position 
sets a drawerItem at a specific position @param drawerItem @param position 
removes a drawerItem at a specific position @param position 
removes a drawerItem by the identifier @param identifier 
removes a list of drawerItems by ther identifiers @param identifiers 
Removes all items from drawer 
adds new Items to the current DrawerItem List @param drawerItems 
adds new items to the current DrawerItem list at a specific position @param position @param drawerItems 
adds a footerDrawerItem at the end @param drawerItem 
adds a footerDrawerItem at a specific position @param drawerItem @param position 
sets a footerDrawerItem at a specific position @param drawerItem @param position 
removes a footerDrawerItem at a specific position @param position 
Removes all footerItems from drawer 
gets the original list of drawerItems @return 
adds the values to the bundle for saveInstanceState @param savedInstanceState @return 
Sets the activity which will be generated for the generation The activity is required and will be used to inflate the content in . 
Sets the rootView which will host the DrawerLayout The content of this view will be extracted and added as the new content inside the drawerLayout @param rootView a view which will gets switched out by the DrawerLayout and added as its child 
Sets the rootView which will host the DrawerLayout The content of this view will be extracted and added as the new content inside the drawerLayout @param rootViewRes the id of a view which will gets switched out by the DrawerLayout and added as its child 
Sets that the slider of this Drawer should be displayed below the statusBar even with a translucentStatusBar @param displayBelowStatusBar sets wheter the slider of the drawer is displayed below the statusBar or not 
sets if the drawer should show an inner shadow or not @param innerShadow sets wheter the drawer should display an inner shadow or not @return 
Sets the toolbar which should be used in combination with the drawer This will handle the ActionBarDrawerToggle for you . 
sets to true if you use a translucent NavigationBar @param translucentNavigationBar @return 
sets this to true if you want a translucent navigation bar . 
sets to true if the used theme has a translucent statusBar and navigationBar and you want to manage the padding on your own . 
sets to true if you use your app in complete fullscreen mode with hidden statusBar and navigationBar @param systemUIHidden @return 
sets the background color for the Slider . 
sets the background color for the Slider from a Resource . 
sets the background drawable for the Slider . 
sets the background drawable for the Slider from a Resource . 
sets the DrawerBuilder width with a pixel value @param drawerWidthPx @return 
sets the DrawerBuilder width with a dp value @param drawerWidthDp @return 
sets the DrawerBuilder width with a dimension resource @param drawerWidthRes @return 
sets the gravity for the drawer . 
adds a AccountSwitcherHeader which will be used in this drawer instance . 
adds a AccountSwitcherHeader which will be used in this drawer instance . 
sets this to true if you want the ActionBarDrawerToggle to be animated . 
sets this to false if you do n't need the included ActionBarDrawerToggle @param actionBarDrawerToggleEnabled @return 
adds a custom ActionBarDrawerToggle which will be used in combination with this drawer . 
adds a header to the DrawerBuilder ListView . 
adds a header to the DrawerBuilder ListView defined by a resource . 
sets this to false if you do n't need the divider below the header @param headerDivider @return 
sets this to false if you do n't need the padding below the header @param headerPadding @return 
adds a sticky header below the DrawerBuilder ListView . 
adds a sticky header below the DrawerBuilder ListView defined by a resource . 
sets this to false if you do n't want the shadow below the sticky header @param stickyHeaderShadow @return 
adds a footer to the DrawerBuilder ListView . 
adds a footer to the DrawerBuilder ListView defined by a resource . 
sets this to true if you want the footer to be clickable @param footerClickable @return 
sets this to false if you do n't need the divider above the footer @param footerDivider @return 
adds a sticky footer below the DrawerBuilder ListView . 
adds a sticky footer below the DrawerBuilder ListView defined by a resource . 
sets this to true if you want the divider above the sticky footer @param stickyFooterDivider @return 
sets this to false if you do n't want the shadow on top of the sticky footer @param stickyFooterShadow @return 
sets this to true if you love to gets an initial onClick event after the build method is called @param fireOnInitialOnClick @return 
sets this to true if you want to enable multiSelect mode inside the drawer . 
sets this to the index of the item , you would love to select upon start @param selectedItemPosition @return 
sets this to the identifier of the item , you would love to select upon start @param selectedItemIdentifier @return 
sets the initial List of IDrawerItems for the Drawer @param drawerItems @return 
adds a initial DrawerItem or a DrawerItem Array for the Drawer @param drawerItems @return 
sets the initial List of IDrawerItems for the StickyDrawerFooter @param stickyDrawerItems @return 
adds a initial DrawerItem or a DrawerItem Array for the StickyDrawerFooter @param stickyDrawerItems @return 
sets this to false if the drawer should stay opened after an item was clicked @param closeOnClick @return this 
gets the drawerItem at a specific position @param position @return 
gets the drawerItem with the specific identifier from a drawerItem list @param drawerItems @param identifier @return 
gets the drawerItem by a defined tag from a drawerItem list @param drawerItems @param tag @return 
adds the shadow to the stickyFooter @param ctx @param footerView 
sets an existing image to the imageView @param imageView @param tag used to identify imageViews and define different placeholders @return true if an image was sets 
sets to true if you want to show the innerShadow on the MiniDrawer @param innerShadow @return 
sets to true if you want the MiniDrawer in RTL mode @param inRTL @return 
sets to true if you also want to display secondaryDrawerItems @param includeSecondaryDrawerItems @return 
sets to true if you want to display the background for the miniDrawerItem @param enableSelectedMiniDrawerItemBackground @return 
sets to false if you do not want the profile image to toggle to the normal drawers profile selection @param enableProfileClick @return this 
gets the RecyclerView of this MiniDrawer @return 
gets the FastAdapter of this MiniDrawer @return 
gets the ItemAdapter of this MiniDrawer @return 
gets the Drawer used to fill this MiniDrawer @return 
gets the AccountHeader used to fill the this MiniDrawer @return 
gets the Crossfader used for this MiniDrawer @return 
gets the type of a IDrawerItem @param drawerItem @return 
creates the items for the MiniDrawer 
returns always the original drawerItems and not the switched content @return 
sets the identifier of this item @param identifier @return 
returns the identifier of this item -1 is the default not sets state @return 
sets the tag of this item @param object @return 
sets if this item is enabled @param enabled true if this item is enabled @return 
sets if this item is selected @param selected true if this item is selected @return 
sets if this item is selectable @param selectable true if this item is selectable @return 
adds this listener and hook in if you want to modify a drawerItems view without creating a custom drawer item @param onPostBindViewListener @return 
Sets the color of the selector to be draw over the CircularImageView . 
adds the header on first position , else display the true adapter 's cells 
creates a color from -LSB- $ color -RSB- . 
sets the phases used for animations . 
Returns the bounding box of the specified Entry in the specified DataSet . Returns null if the Entry could not be found in the charts data . 
returns true if drawing values above bars is enabled , false if not @return 
Adds half of the bar width to each side of the x-axis range in order to allow the bars of the barchart to be fully displayed . 
Returns the Transformer class that contains all matrices and is responsible for transforming values into pixels on the screen and backwards . 
Sets the minimum scale factor value to which can be zoomed out . 
Returns the range of the specified axis . 
Sets the OnDrawListener @param drawListener 
Gets the OnDrawListener . 
Returns a recyclable MPPointF instance . 
sets this to true to allow highlighting per dragging over the chart surface when it is fully zoomed out . 
Returns true if dragging is enabled for the chart , false if not . 
sets this to true to enable zooming in by double-tap on the chart . 
Returns true if zooming via double-tap is enabled false if not . 
sets this to true to draw the grid background , false if not @param enabled 
Sets drawing the borders rectangle to true . 
Sets the width of the border lines in dp . 
Sets the color of the chart border lines . 
Returns true if keeping the position on rotation is enabled and false if not . 
Returns a recyclable MPPointD instance Transforms the given chart values into pixels . 
returns the Entry object displayed at the touched position of the chart @param x @param y @return 
returns the DataSet object displayed at the touched position of the chart @param x @param y @return 
Returns the range visible on the x-axis . 
returns the current x-scale factor 
returns the current y-scale factor 
Returns the left y-axis object . 
Returns the right y-axis object . 
Returns the y-axis object to the corresponding AxisDependency . 
returns true if pinch-zoom is enabled , false if not @return 
sets an offset in dp that allows the user to drag the chart over it 's bounds on the x-axis . 
sets an offset in dp that allows the user to drag the chart over it 's bounds on the y-axis . 
Sets a custom axis renderer for the left axis and overwrites the existing one . 
Sets a custom axis renderer for the right acis and overwrites the existing one . 
Returns true if either the left or the right or both axes are inverted . 
Sets a new data object for the chart . 
Sets the maximum distance in screen dp a touch can be away from an entry to cause it to gets highlighted . 
Returns the array of currently highlighted values . 
Returns true if values can be highlighted via tap gesture , false if not . 
sets this to false to prevent values from being highlighted by tap gesture . 
Returns true if there are values to highlight , false if there are no values to highlight . 
Sets the last highlighted value for the touchlistener . 
Returns an instance of the currently active touch listener . 
Returns the actual position in pixels of the MarkerView for the given Highlight object . 
Returns the animator responsible for animating chart values . 
Returns drag deceleration friction coefficient @return 
Returns the default IValueFormatter that has been determined by the chart considering the provided minimum and maximum values . 
sets a selection listener for the chart @param l 
Sets a gesture-listener for the chart for custom callbacks when executing gestures on the chart surface . 
Returns the custom gesture listener . 
returns the current y-max value across all DataSets @return 
returns the current y-min value across all DataSets @return 
Returns a recyclable MPPointF instance . 
Returns a recyclable MPPointF instance . Returns the center of the chart taking offsets under consideration . 
sets an extra offset to be appended to the viewport 's top 
sets an extra offset to be appended to the viewport 's right 
sets an extra offset to be appended to the viewport 's bottom 
sets an extra offset to be appended to the viewport 's left 
sets this to true to enable logcat outputs for the chart . 
Returns true if log-output is enabled for the chart , fals if not . 
Sets the text that informs the user that there is no data available with which to draw the chart . 
Sets the color of the no data text . 
Sets the typeface to be used for the no data text . 
sets this to false to disable all gestures and touches on the chart , default : true @param enabled 
sets the marker that is displayed when a value is clicked on the chart @param marker 
returns the marker that is sets as a marker view for the chart @return 
Sets a new Description object for the chart . 
Returns the Legend object of the chart . 
Returns the renderer object responsible for rendering / drawing the Legend . 
sets a new paint object for the specified parameter in the chart e.g. Chart.PAINT _ VALUES @param p the new paint object @param which Chart.PAINT _ VALUES , Chart.PAINT _ GRID , Chart.PAINT _ VALUES , ... 
Returns the paint object associated with the provided constant . 
Returns the ChartData object that has been sets for the chart . 
Returns the ViewPortHandler of the chart that is responsible for the content area of the chart and its offsets and dimensions . 
Returns the Renderer object the chart uses for drawing data . 
Sets a new DataRenderer object for the chart . 
Sets a custom highligher object for the chart that handles / processes all highlight touch events performed on the chart-view . 
Returns a recyclable MPPointF instance . 
Returns the bitmap that represents the chart . 
sets this to true to enable `` unbinding '' of drawables . 
Returns the currently sets draw order . 
Sets the order in which the provided data objects should be drawn . 
Returns a recyclable MPPointF instance . 
Returns the index of the DataSet this x-index belongs to . 
Returns true if the inner tips of the slices are visible behind the hole , false if not . 
sets this to true to draw the pie center empty @param enabled 
returns true if the hole in the center of the pie-chart is sets to be visible , false if not @return 
Sets the text String that is displayed in the center of the PieChart . 
returns the text that is drawn in the center of the pie-chart @return 
sets this to true to draw the text that is displayed in the center of the pie chart @param enabled 
returns true if drawing the center text is enabled @return 
returns the circlebox , the boundingbox of the pie-chart slices @return 
returns the center of the circlebox @return 
sets the typeface for the center-text paint @param t 
Sets the size of the center text of the PieChart in dp . 
Sets the size of the center text of the PieChart in pixels . 
Sets the offset the center text should have from it 's original position in dp . 
Returns the offset on the x - and y-axis the center text has in dp . 
Sets the color of the center text of the PieChart . 
Returns the size of the hole radius in percent of the total radius . 
Sets the color the transparent-circle should have . 
Sets the amount of transparency the transparent circle should have 0 = fully transparent , 255 = fully opaque . 
Returns true if drawing the entry labels is enabled , false if not . 
Sets the color the entry labels are drawn with . 
Sets a custom Typeface for the drawing of the entry labels . 
Sets the size of the entry labels in dp . 
Returns true if the chart is sets to draw each end of a pie-slice `` rounded '' . 
Returns true if using percentage values is enabled for the chart . 
Sets the max angle that is used for calculating the pie-circle . 
returns the angle relative to the chart center for the given point on the chart in degrees . 
Returns a recyclable MPPointF instance . 
Returns the distance of a certain point on the chart to the center of the chart . 
Returns the xIndex for the given angle around the center of the chart . Returns -1 if not found / outofbounds . 
sets an offset for the rotation of the RadarChart in degrees . 
gets the raw version of the current rotation angle of the pie chart the returned value could be any value , negative or positive , outside of the 360 degrees . 
gets a normalized version of the current rotation angle of the pie chart , which will always be between 0.0 < 360.0 @return 
sets this to true to enable the rotation / spinning of the chart by touch . sets it to false to disable it . 
Returns true if rotation of the chart by touch is enabled , false if not . 
returns the diameter of the pie - or radar-chart @return 
Returns the radius of the chart in pixels . 
Returns the required offset for the chart legend . 
Returns the base offset needed for the chart without calculating the legend size . 
Returns the factor that is needed to transform values into pixels . 
Returns the angle that each slice in the radar chart occupies . 
Returns the object that represents all y-labels of the RadarChart . 
Sets the width of the web lines that come from the center . 
Sets the width of the web lines that are in between the lines coming from the center . 
Returns the alpha value for all web lines . 
Sets the color for the web lines that come from the center . 
Sets the color for the web lines in between the lines that come from the center . 
Sets the number of web-lines that should be skipped on chart web before the next one is drawn . 
Returns the modulus that is used for skipping web-lines . 
Returns the maximum value this chart can display on it 's y-axis . 
Returns the minimum value this chart can display on it 's y-axis . 
Returns the range of y-values this chart can display . 
sets this to true to enable drawing the grid lines for this axis . 
Returns true if drawing grid lines is enabled for this axis . 
sets this to true if the line alongside the axis should be drawn or not . 
Returns true if the line alongside the axis should be drawn . 
Sets the width of the border surrounding the chart in dp . 
Sets the width of the grid lines that are drawn away from each axis label . 
Returns the width of the grid lines that are drawn away from each axis label . 
Sets the color of the border surrounding the chart . 
Returns true if drawing the labels is enabled for this axis . 
Sets the number of label entries for the y-axis max = 25 , min = 2 , default : 6 , be aware that this number is not fixed . 
Returns true if focing the y-label count is enabled . 
Returns the number of label entries the y-axis should have @return 
sets a minimum interval for the axis when zooming in . 
Adds a new LimitLine to this axis . 
Removes the specified LimitLine from the axis . 
Removes all LimitLines from the axis . 
Returns the LimitLines of this axis . 
Sets the formatter to be used for formatting the axis labels . 
Returns the formatter used for formatting the axis labels . 
Returns true if the grid dashed-line effect is enabled , false if not . 
returns the DashPathEffect that is sets for grid line @return 
Returns true if the axis dashed-line effect is enabled , false if not . 
returns the DashPathEffect that is sets for axis line @return 
sets a custom minimum value for this axis . 
sets a custom maximum value for this axis . 
Gets extra spacing for ` axisMinimum ` to be added to automatically calculated ` axisMinimum ` 
Sets extra spacing for ` axisMinimum ` to be added to automatically calculated ` axisMinimum ` 
Gets extra spacing for ` axisMaximum ` to be added to automatically calculated ` axisMaximum ` 
Sets extra spacing for ` axisMaximum ` to be added to automatically calculated ` axisMaximum ` 
Returns the used offset on the x-axis for drawing the axis or legend labels . 
Sets the used x-axis offset for the labels on this axis . 
Returns the used offset on the x-axis for drawing the axis labels . 
Sets the used y-axis offset for the labels on this axis . 
returns the Typeface used for the labels , returns null if none is sets @return 
sets a specific Typeface for the labels @param tf 
sets the size of the label text in density pixels min = 6f , max = 24f , default 10f @param size the text size , in DP 
returns the text size that is currently sets for the labels , in pixels @return 
Sets the text color to use for the labels . 
Returns the text color that is sets for the labels . 
Sets the text to be shown as the description . 
Returns the description text . 
Sets a custom position for the description text in pixels on the screen . 
Returns the customized position of the description , or null if none sets . 
Sets the text alignment of the description text . 
Returns the text alignment of the description . 
returns the maximum length in pixels across all legend labels + formsize + formtotextspace @param p the paint object used for rendering the text @return 
returns the maximum height in pixels across all legend labels @param p the paint object used for rendering the text @return 
Sets a custom legend 's entries array . 
Sets a custom legend 's entries array . 
returns the horizontal alignment of the legend @return 
sets the horizontal alignment of the legend @param value 
returns the vertical alignment of the legend @return 
sets the vertical alignment of the legend @param value 
returns the orientation of the legend @return 
sets the orientation of the legend @param value 
returns whether the legend will draw inside the chart or outside @return 
sets whether the legend will draw inside the chart or outside @param value 
returns the text direction of the legend @return 
sets the text direction of the legend @param pos 
returns the current form/shape that is sets for the legend @return 
sets the form/shape of the legend forms @param shape 
sets the size in dp of the legend forms , default 8f @param size 
returns the size in dp of the legend forms @return 
sets the line width in dp for forms that consist of lines , default 3f @param size 
returns the line width in dp for drawing forms that consist of lines @return 
Sets the line dash path effect used for shapes that consist of lines . 
returns the space between the legend entries on a horizontal axis in pixels @return 
sets the space between the legend entries on a horizontal axis in pixels , converts to dp internally @param space 
returns the space between the legend entries on a vertical axis in pixels @return 
sets the space between the legend entries on a vertical axis in pixels , converts to dp internally @param space 
returns the space between the form and the actual label/text @return 
sets the space between the form and the actual label/text , converts to dp internally @param space 
Returns the limit that is sets for this line . 
returns the width of limit line @return 
Sets the linecolor for this LimitLine . 
Returns the color that is used for this LimitLine @return 
Returns true if the dashed-line effect is enabled , false if not . 
returns the DashPathEffect that is sets for this LimitLine @return 
Sets the color of the value-text that is drawn next to the LimitLine . 
Returns the color of the value-text that is drawn next to the LimitLine . 
Sets the label that is drawn next to the limit line . 
Returns the label that is drawn next to the limit line . 
Sets the layout resource for a custom MarkerView . 
returns the position of the x-labels 
sets the position of the x-labels @param pos 
returns true if avoid-first-lastclipping is enabled , false if not @return 
returns the position of the y-labels 
sets the position of the y-labels @param pos 
returns true if drawing the top y-axis label entry is enabled @return 
sets this to true to enable drawing the top y-label entry . 
Sets the top axis space in percent of the full range . 
Returns the top axis space in percent of the full range . 
Sets the bottom axis space in percent of the full range . 
Returns the bottom axis space in percent of the full range . 
sets this to true to draw the zero-line regardless of weather other grid-lines are enabled or not . 
Sets the color of the zero line @param color 
Sets the width of the zero line in dp @param width 
Returns true if this axis needs horizontal offset , false if no offset is needed . 
returns the overall entry count , including counting each stack-value individually @return 
Sets the color used for drawing the bar-shadows . 
Sets the width used for drawing borders around the bars . 
Returns the width used for drawing borders around the bars . 
Sets the color drawing borders around the bars . 
Returns the color drawing borders around the bars . 
Sets labels for different values of bar-stacks , in case there are one . 
Returns an exact copy of the BarEntry . 
sets the array of values this BarEntry should represent . 
Returns the value of this BarEntry . 
Returns the ranges of the individual stack-entries . 
Sets the color that is used for drawing the highlight indicators . 
Sets the colors that should be used fore this DataSet . 
Sets the colors that should be used fore this DataSet . 
Sets the colors that should be used fore this DataSet . 
Adds a new color to the colors array of the DataSet . 
Sets the one and ONLY color that should be used for this DataSet . 
Sets a color with a specific alpha value . 
Sets colors with a specific alpha value . 
Returns the y value of this Entry . 
Sets the y-value for the Entry . 
Returns the data , additional information that this Entry represents , or null , if no data has been specified . 
Sets additional data this Entry should represent . 
Sets the width of the circle that surrounds the bubble when highlighted for all DataSet objects this data object contains , in dp . 
Sets the width of the candle-shadow-line in pixels . 
Sets whether the candle bars should show ? 
Sets the one and ONLY color that should be used for this DataSet when open == close . 
Sets the one and ONLY color that should be used for this DataSet when open < = close . 
Sets the one and ONLY color that should be used for this DataSet when open > close . 
Sets paint style when open < close @param paintStyle 
Sets paint style when open > close @param decreasingPaintStyle 
Sets shadow color for all entries @param shadowColor 
Sets shadow color to be the same color as the candle color @param shadowColorSameAsCandle 
Returns the center value of the candle . 
Returns the upper shadows highest value . 
Returns the lower shadows lowest value . 
Returns the bodys close value . 
Returns the bodys open value . 
returns the number of LineDataSets this object contains @return 
Returns the smallest y-value the data object contains . 
Returns the minimum y-value for the specified axis . 
Returns the greatest y-value the data object contains . 
Returns the maximum y-value for the specified axis . 
Returns the minimum x-value this data object contains . 
Returns the maximum x-value this data object contains . 
Returns all DataSet objects this ChartData object holds . 
Returns the labels of all DataSets as a string array . 
gets the Entry for a corresponding highlight object @param highlight @return the entry that is highlighted 
Returns the DataSet object with the given label . 
Adds a DataSet dynamically . 
Removes the given DataSet from this data object . Returns true if a DataSet was removed , false if no DataSet could be removed . 
Removes the DataSet at the given index in the DataSet array from the data object . Returns true if a DataSet was removed , false if no DataSet could be removed . 
Adds an Entry to the DataSet at the specified index . 
Removes the given Entry object from the DataSet at the specified index . 
Removes the Entry object closest to the given DataSet at the specified index . Returns true if an Entry was removed , false if no Entry was found that meets the specified requirements . 
Returns the DataSet that contains the provided Entry , or null , if no DataSet contains this Entry . 
Returns all colors used across all DataSet objects this object represents . 
Returns the index of the provided DataSet in the DataSet array of this data object , or -1 if it does not exist . 
Returns the first DataSet from the datasets-array that has it 's dependency on the left axis . Returns null if no DataSet with left dependency could be found . 
Returns the first DataSet from the datasets-array that has it 's dependency on the right axis . Returns null if no DataSet with right dependency could be found . 
Sets a custom IValueFormatter for all DataSets this data object contains . 
Sets the same list of value-colors for all DataSets this data object contains . 
Sets the Typeface for all value-labels for all DataSets this data object contains . 
Returns true if highlighting of all underlying values is enabled , false if not . 
Returns true if so , false if not . 
Returns the total entry count across all DataSet objects this data object contains . 
Returns the DataSet object with the maximum number of entries or null if there are no DataSets . 
Returns all data objects in row : line-bar-scatter-candle-bubble if not null . 
gets the Entry for a corresponding highlight object @param highlight @return the entry that is highlighted 
Returns the array of entries that this DataSet represents . 
Returns a simple string representation of the DataSet with the type and the number of Entries . 
Returns the x-value of this Entry object . 
Sets the x-value of this Entry object . 
returns an exact copy of the entry @return 
Returns true if entries are equal in those points , false if not . 
returns a string representation of the entry containing x-index and value 
Returns the drawing mode for this line dataset @return 
Returns the drawing mode for this LineDataSet @return 
Sets the radius of the drawn circles . 
Sets the hole radius of the drawn circles . 
sets this to true to enable the drawing of circle indicators for this DataSet , default true @param enabled 
returns all colors specified for the circles @return 
Sets the colors that should be used for the circles of this DataSet . 
Sets the colors that should be used for the circles of this DataSet . 
Sets the one and ONLY color that should be used for this DataSet . 
Sets the color of the inner circle of the line-circles . 
sets this to true to allow drawing a hole in each data circle . 
Sets a custom IFillFormatter to the chart that handles the position of the filled-line for each DataSet . sets this to null to use the default logic . 
Sets the color that is used for filling the area below the line . 
Sets the drawable to be used to fill the area below the line . 
Sets the width of the highlight line in dp . 
Returns true if the dashed-line effect is enabled for highlight lines , false if not . 
Sets the PieDataSet this data object should represent . 
Returns the DataSet this PieData object represents . 
Returns the sum of all values in this PieData object . 
Sets the space that is left out between the piechart-slices in dp . 
sets the distance the highlighted piechart-slice of this DataSet is `` shifted '' away from the center of the chart , default 12f @param shift 
Returns the value of the PieEntry . 
Sets the labels that should be drawn around the RadarChart at the end of each web line . 
Sets the labels that should be drawn around the RadarChart at the end of each web line . 
Returns the value of the RadarEntry . 
Returns the maximum shape-size across all DataSets . 
Sets the size in density pixels the drawn scattershape will have . 
Sets the ScatterShape this DataSet should be drawn with . 
Sets a new IShapeRenderer responsible for drawing this DataSet . 
Sets the color for the hole in the shape . 
Sets up the formatter with a given number of decimal digits . 
Returns the number of decimal digits this formatter uses . 
Returns the number of decimal digits this formatter uses or -1 , if unspecified . 
sets an appendix text to be added at the end of the formatted value . 
sets custom suffix to be appended after the values . 
Returns a recyclable MPPointD instance . Returns the corresponding xPos for a given touch-position in pixels . 
Returns the corresponding Highlight for a given xVal and x - and y-touch position in pixels . 
Returns a list of Highlight objects representing the entries closest to the given xVal . 
Returns the Highlight of the DataSet that contains the closest value on the y-axis . 
returns the x-value of the highlighted value @return 
returns the y-value of the highlighted value @return 
returns the x-position of the highlight in pixels 
returns the y-position of the highlight in pixels 
returns the index of the DataSet the highlighted value is in @return 
Returns the axis the highlighted value belongs to . 
Returns the x-position in pixels where this highlight object was last drawn . 
Returns the y-position in pixels where this highlight object was last drawn . 
Returns a Highlight object corresponding to the given x - and y - touch positions in pixels . 
Returns the closest Highlight object of the given objects based on the touch position inside the chart . 
Returns an array of Highlight objects for the given index . 
Returns the minimum x value of the chart , regardless of zoom or translation . 
Returns the maximum x value of the chart , regardless of zoom or translation . 
Returns the minimum y value of the chart , regardless of zoom or translation . 
Returns the maximum y value of the chart , regardless of zoom or translation . 
Returns the maximum distance in scren dp a touch can be away from an entry to cause it to gets highlighted . 
Returns the maximum number of bars that can be stacked upon another in this DataSet . 
Returns the color used for drawing the bar-shadows . 
Returns the width used for drawing borders around the bars . 
Returns the color drawing borders around the bars . 
Returns the labels used for the different value-stacks in the legend . 
Returns the color that is used for drawing the highlight indicators . 
Sets the width of the circle that surrounds the bubble when highlighted , in dp . 
Returns the width of the highlight-circle that surrounds the bubble @return 
Returns the space that is left out on the left and right side of each candle . 
Returns whether the candle bars should show ? 
Returns the width of the candle-shadow-line in pixels . 
Returns shadow color for all entries @return 
Returns paint style when open < close @return 
Returns paint style when open > close @return 
returns the minimum y-value this DataSet holds @return 
returns the maximum y-value this DataSet holds @return 
returns the minimum x-value this DataSet holds @return 
returns the maximum x-value this DataSet holds @return 
Returns the first Entry object found at the given x-value with binary search . 
Returns the first Entry object found at the given x-value with binary search . 
Returns all Entry objects found at the given x-value with binary search . 
Returns the first Entry index found at the given x-value with binary search . 
Returns the position of the provided entry in the DataSets Entry array . Returns -1 if does n't exist . 
Adds an Entry to the DataSet dynamically . 
Adds an Entry to the DataSet dynamically . 
Returns true if successful , false if not . 
Returns true if successful , false if not . 
Removes an Entry from the DataSets entries array . Returns true if an Entry was removed , false if no Entry could be removed . 
Removes the Entry object closest to the given x-value from the DataSet . Returns true if an Entry was removed , false if no Entry could be removed . 
Removes the Entry object at the given index in the values array from the DataSet . Returns true if an Entry was removed , false if no Entry could be removed . 
Returns true if so , false if not . 
Removes all values from this DataSet and does all necessary recalculations . 
Returns the label string that describes the DataSet . 
Sets the label string that describes the DataSet . 
Returns the axis this DataSet should be plotted against . 
returns all the colors that are sets for this DataSet @return 
Returns the color at the given index of the DataSet 's color array . 
returns true if highlighting of values is enabled , false if not @return 
Sets the formatter to be used for drawing the values inside the chart . 
Returns the formatter used for drawing the values inside the chart . 
Returns true if the valueFormatter object of this DataSet is null . 
Sets the color the value-labels of this DataSet should have . 
Sets a list of colors to be used as the colors for the drawn values . 
Sets a Typeface for the value-labels of this DataSet . 
Sets the text-size of the value-labels of this DataSet in dp . 
Returns only the first color of all colors that are sets to be used for the values . 
Returns the color at the specified index that is used for drawing the values inside the chart . 
Returns the typeface that is used for drawing the values inside the chart @return 
Returns the text size that is used for drawing the values inside the chart @return 
Returns true if y-value drawing is enabled , false if not @return 
sets the visibility of this DataSet . 
Returns true if this DataSet is visible inside the chart , or false if it is currently hidden . 
Returns the drawing mode for this line dataset @return 
Returns the size of the drawn circles . 
Returns the hole radius of the drawn circles . 
Returns the color at the given index of the DataSet 's circle-color array . 
Returns the number of colors in this DataSet 's circle-color array . 
Returns true if drawing circles for this DataSet is enabled , false if not @return 
Returns true if drawing the circle-holes is enabled , false if not . 
Returns the DashPathEffect that is used for drawing the lines . 
Returns true if the dashed-line effect is enabled , false if not . 
Returns the IFillFormatter that is sets for this DataSet . 
Returns the color that is used for filling the line surface area . 
Returns the drawable used for filling the area below the line . 
Returns the alpha value that is used for filling the line surface , default : 85 @return 
Returns the stroke-width of the drawn line @return 
Returns true if filled drawing is enabled , false if not @return 
Returns the line-width in which highlight lines are to be drawn . 
Returns the DashPathEffect that is used for highlighting . 
Returns the space that is sets to be between the piechart-slices of this DataSet , in pixels . 
Returns the distance a highlighted piechart slice is `` shifted '' away from the chart-center in dp . 
Returns the currently sets scatter shape size @return 
Returns radius of the hole in the shape @return 
Returns the color for the hole in the shape @return 
Returns the IShapeRenderer responsible for rendering this DataSet . 
returns the distance between two pointer touch points @param event @return 
Returns a recyclable MPPointF instance . returns the correct translation depending on the provided x and y touch points @param x @param y @return 
Returns true if the current touch situation should be interpreted as inverted , false if not . 
returns the matrix object the listener holds @return 
Sets the minimum distance that will be interpreted as a `` drag '' by the chart in dp . 
Sets the last value that was highlighted via touch . 
returns the touch mode the listener is currently in @return 
Returns the last gesture that has been performed on the chart . 
returns the distance between two points @param eventX @param startX @param eventY @param startY @return 
sets the starting angle of the rotation , this is only used by the touch listener , x and y is the touch position @param x @param y 
Sets the deceleration-angular-velocity to 0f 
Returns the Paint object that is used for drawing the grid-lines of the axis . 
Returns the Paint object that is used for drawing the axis-line that goes alongside the axis . 
Returns the Transformer object used for transforming the axis values . 
Sets up the axis values . 
Sets the drawing position of the highlight object based on the riven bar-rect . 
Returns true if the DataSet values should be drawn , false if not . 
Creates the renderers needed for this combined-renderer in the required order . 
Returns the sub-renderer object at the specified index . 
Returns all sub-renderers . 
Returns the Paint object this renderer uses for drawing highlight indicators . 
Returns the Paint object used for rendering . 
Returns the Paint object used for drawing the Legend labels . 
Returns the Paint object used for drawing the Legend forms . 
Sets the Bitmap.Config to be used by this renderer . 
Returns the Bitmap.Config that is used by this renderer . 
Sets up the cache , returns true if a change of cache was required . 
Returns the cached Bitmap at the given index . 
Returns the Android ICS holo blue light color . 
Sets the alpha component of the given color . 
returns a string representation of the object 
returns a new point from the data in the specified parcel . 
returns an array of rectangles of the specified size . 
sets the point 's coordinates from the data stored in the specified parcel . 
Returns the id of the given pool instance . 
Returns an ObjectPool instance , of a given starting capacity , that recycles instances of a given Poolable object . 
sets the percentage of the pool to replenish on empty . 
Returns an instance of Poolable . 
Returns the capacity of this object pool . 
Returns the number of objects remaining in the pool , for diagnostic purposes . 
Returns a recyclable MPPointD instance . 
Returns a recyclable MPPointD instance . 
Returns a recyclable FSize instance . 
Returns the appropriate number of decimals to be used for the provided number . 
Returns a recyclable MPPointF instance . 
returns an angle between 0 . 
Returns a recyclable FSize instance . 
Returns a recyclable FSize instance . 
Returns a recyclable FSize instance . 
Returns a recyclable FSize instance . 
Sets the scale factor to the specified values . 
Sets the scale factor to the specified values . 
Sets the minimum scale factor for the x-axis @param xScale 
Sets the maximum scale factor for the x-axis @param xScale 
Sets the minimum and maximum scale factors for the x-axis @param minScaleX @param maxScaleX 
Sets the minimum scale factor for the y-axis @param yScale 
Sets the maximum scale factor for the y-axis @param yScale 
Returns the charts-touch matrix used for translation and scale on touch . 
returns the current x-scale factor 
returns the current y-scale factor 
sets an offset in dp that allows the user to drag the chart over it 's bounds on the x-axis . 
sets an offset in dp that allows the user to drag the chart over it 's bounds on the y-axis . 
Returns true if the chart is not yet fully zoomed out on the x-axis @return 
Returns true if the chart is not yet fully zoomed in on the x-axis @return 
Returns true if the chart is not yet fully zoomed out on the y-axis @return 
Returns true if the chart is not yet fully zoomed in on the y-axis @return 
Returns the index with the needed adjustment . 
Returns the maximum allowed capacity of this buffer . 
returns the underlying buffer instance if this buffer is a wrapper of another buffer . 
Returns a read-only version of this buffer . 
Returns a copy of this buffer 's readable bytes . 
Returns a copy of this buffer 's sub-region . 
Returns a slice of this buffer 's readable bytes . 
Returns a retained slice of this buffer 's readable bytes . 
Returns a slice of this buffer 's sub-region . 
Returns a retained slice of this buffer 's sub-region . 
Returns a buffer which shares the whole region of this buffer . 
Returns a retained buffer which shares the whole region of this buffer . 
Returns the backing byte array of this buffer . 
Returns the offset of the first byte within the backing byte array of this buffer . 
Returns the low-level memory address that point to the first byte of ths backing data . 
Returns a hash code which was calculated from the content of this buffer . 
Returns the string representation of this buffer . 
Returns the number of read bytes by this stream so far . 
Returns the number of written bytes by this stream so far . 
Returns the buffer where this stream is writing data . 
Returns max bytes length of UTF8 character sequence . 
Returns a cached thread-local direct buffer , if available . 
returns the index for the given offset 
Returns the number of thread caches backed by this arena . 
Returns the number of tiny sub-pages for the arena . 
Returns the number of small sub-pages for the arena . 
Returns the number of chunk lists for the arena . 
returns the number of allocations done via the arena . 
returns the number of tiny allocations done via the arena . 
returns the number of small allocations done via the arena . 
returns the number of normal allocations done via the arena . 
returns the number of huge allocations done via the arena . 
returns the number of deallocations done via the arena . 
returns the number of tiny deallocations done via the arena . 
returns the number of small deallocations done via the arena . 
returns the number of normal deallocations done via the arena . 
returns the number of huge deallocations done via the arena . 
returns the number of currently active allocations . 
returns the number of currently active tiny allocations . 
returns the number of currently active small allocations . 
returns the number of currently active normal allocations . 
returns the number of currently active huge allocations . 
returns the number of active bytes that are currently allocated by the arena . 
creates / initialize a new PoolSubpage of normCapacity Any PoolSubpage created / initialized here is added to subpage pool in the PoolArena that owns this PoolChunk @param normCapacity normalized capacity @return index in memoryMap 
returns the minum usage of the chunk list before which chunks are promoted to the previous list . 
returns the minum usage of the chunk list after which chunks are promoted to the next list . 
returns the percentage of the current usage of the chunk . 
returns the size of the chunk in bytes , this is the maximum of bytes that can be served out of the chunk . 
returns the number of free bytes in the chunk . 
returns the number of heap arenas . 
returns the number of direct arenas . 
returns the size of the tiny cache . 
returns the size of the small cache . 
returns the size of the normal cache . 
Returns the bitmap index of the subpage allocation . 
returns the number of maximal elements that can be allocated out of the sub-page . 
returns the number of available elements to be allocated . 
adds to cache if not already full . 
Creates a new big-endian Java heap buffer with reasonably small initial capacity , which expands its capacity boundlessly on demand . 
Creates a new big-endian direct buffer with reasonably small initial capacity , which expands its capacity boundlessly on demand . 
Creates a new buffer which wraps the specified NIO buffer 's current slice . 
Creates a new buffer which wraps the specified memory address . 
Creates a new buffer which wraps the specified buffer 's readable bytes . 
Creates a new big-endian composite buffer which wraps the specified arrays without copying them . 
Creates a new big-endian composite buffer which wraps the readable bytes of the specified buffers without copying them . 
Creates a new big-endian composite buffer which wraps the slices of the specified NIO buffers without copying them . 
Creates a new big-endian composite buffer which wraps the specified arrays without copying them . 
Creates a new big-endian composite buffer which wraps the readable bytes of the specified buffers without copying them . 
Creates a new big-endian composite buffer which wraps the slices of the specified NIO buffers without copying them . 
Returns a new big-endian composite buffer with no components . 
Returns a new big-endian composite buffer with no components . 
Creates a new 4-byte big-endian buffer that holds the specified 32-bit integer . 
creates a big-endian buffer that holds a sequence of the specified 32-bit integers . 
Creates a new 2-byte big-endian buffer that holds the specified 16-bit integer . 
creates a new big-endian buffer that holds a sequence of the specified 16-bit integers . 
creates a new big-endian buffer that holds a sequence of the specified 16-bit integers . 
Creates a new 3-byte big-endian buffer that holds the specified 24-bit integer . 
creates a new big-endian buffer that holds a sequence of the specified 24-bit integers . 
Creates a new 8-byte big-endian buffer that holds the specified 64-bit integer . 
creates a new big-endian buffer that holds a sequence of the specified 64-bit integers . 
Creates a new single-byte big-endian buffer that holds the specified boolean value . 
creates a new big-endian buffer that holds a sequence of the specified boolean values . 
Creates a new 4-byte big-endian buffer that holds the specified 32-bit floating point number . 
creates a new big-endian buffer that holds a sequence of the specified 32-bit floating point numbers . 
Creates a new 8-byte big-endian buffer that holds the specified 64-bit floating point number . 
creates a new big-endian buffer that holds a sequence of the specified 64-bit floating point numbers . 
Returns the actual number of readable bytes in the internal cumulative buffer of this decoder . 
Returns the internal cumulative buffer of this decoder . 
Returns the element on the given index . 
Gets available size of the current block . 
Gets the CRC of the completed block . 
sets up the Inverse Burrows-Wheeler Transform merged pointer array . 
returns the random number at a specific index . 
Creates an appropriately sized hashtable for the given input size @param inputSize The size of our input , ie . 
Returns the result of decoding this object . 
Returns true if the delimiters are '' \ n '' and '' \ r \ n '' . 
Returns the number of bytes between the readerIndex of the haystack and the first needle found in the haystack . 
Returns the value of a header with the specified name . 
Returns the value of a header with the specified name . 
Returns the value of a header with the specified name and removes it from this object . 
Returns the value of a header with the specified name and removes it from this object . 
Returns all values for the header with the specified name . 
Returns all values for the header with the specified name and removes them from this object . 
Returns the value of a header with the specified name in milliseconds . 
Returns the value of a header with the specified name in milliseconds . 
Returns the number of headers in this object . 
Adds a new header . 
Adds a new header with the specified name and values . 
Adds a new header with the specified name and values . 
Adds a new header . 
Adds a new header . 
Adds a new header . 
Adds a new header . 
Adds a new header . 
Adds a new header . 
Adds a new header . 
Adds a new header . 
Adds a new header . 
Sets a header with the specified name and value . 
Sets a new header with the specified name and values . 
Sets a header with the specified name and values . 
Sets a new header . 
Sets a header with the specified name and values . 
Sets a header with the specified name and values . 
Removes all headers . 
Returns the index in the buffer of the end of line found . Returns -1 if no end of line was found in the buffer . 
Returns the maximum allowed length of the aggregated message in bytes . 
Returns the maximum number of components in the cumulation buffer . 
Sets the maximum number of components in the cumulation buffer . 
Returns the ` continue response ' for the specified start message if necessary . 
Creates a new aggregated message from the specified start message and the specified content . 
Returns the current state of this decoder . 
Sets the current state of this decoder . 
returns the string value of this line separator . 
Returns the number of records in this DNS message . 
Removes all the records in this DNS message . 
Returns the leftmost number of significant bits of ADDRESS to be used for the lookup . 
Returns the leftmost number of significant bits of ADDRESS that the response covers . 
Returns the hostname this PTR record resolves to . 
Returns the name of this resource record . 
Returns the type of this resource record . 
Returns the class of this resource record . 
Returns the time to live after reading for this resource record . 
Returns the name of this type , as seen in bind config files 
Returns the value of this DnsType as it appears in DNS protocol 
Returns the 4 bit returns code . 
Sets the response code for this message . 
Returns the byte value of this command . 
Returns the proxy protocol specification version in the buffer if the version is found . Returns -1 if no version was found in the buffer . 
Returns the index in the buffer of the end of header if found . Returns -1 if no end of header was found in the buffer . 
Returns the index in the buffer of the end of line found . Returns -1 if no end of line was found in the buffer . 
Returns the byte value of this version . 
Returns the byte value of this protocol and address family . 
Returns the byte value of this address family . 
Returns the byte value of this transport protocol . 
Returns the allowed origin . 
Returns the sets of allowed origins . 
Returns a sets of headers to be exposed to calling clients . 
Gets the maxAge setting . 
Returns the allowed sets of Request Methods . 
Returns the allowed sets of Request Headers . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Creates a Builder instance with it 's origin sets to ' ' . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Returns HTTP response headers that should be added to a CORS preflight response . 
Sets any protocol-specific headers required to the upgrade request . Returns the names of all headers that were added . 
Adds all upgrade request headers necessary for an upgrade to the supported protocols . 
Returns the expected content encoding of the decoded content . 
Returns the header value with the specified header name . 
Returns the header value with the specified header name . 
Sets a new header with the specified name and value . 
Sets a new header with the specified name and values . 
Adds a new header with the specified name and value . 
Removes the header with the specified name . 
Removes all headers from the specified message . 
Returns the integer header value with the specified header name . 
Returns the integer header value with the specified header name . 
Sets a new integer header with the specified name and value . 
Sets a new integer header with the specified name and values . 
Adds a new integer header with the specified name and value . 
Returns the date header value with the specified header name . 
Returns the date header value with the specified header name . 
Sets a new date header with the specified name and value . 
Sets a new date header with the specified name and values . 
Adds a new date header with the specified name and value . 
Returns the length of the content . 
Returns the length of the content . 
Returns the value of a header with the specified name . 
Returns the value of a header with the specified name . 
Returns the integer value of a header with the specified name . 
Returns the integer value of a header with the specified name . 
Returns the short value of a header with the specified name . 
Returns the short value of a header with the specified name . 
Returns the date value of a header with the specified name . 
Returns the date value of a header with the specified name . 
Returns the number of headers in this object . 
Adds a new header with the specified name and value . 
Adds a new header with the specified name and values . 
Sets a header with the specified name and value . 
Sets a header with the specified name and values . 
Removes the header with the specified name . 
Returns the headers of this message . 
Returns the name of this method . 
Returns the name of this method . 
Gets all protocol-specific headers required by this protocol for a successful upgrade . 
Gets the request that triggered the protocol upgrade . 
Creates the 101 Switching Protocols response message . 
Returns the class of the specified HTTP status code . 
Returns the default reason phrase of this HTTP status class . 
Returns the length of the content . 
Returns the length of the content . 
Returns the content length of the specified web socket message . 
Returns the value of this HttpData . 
Sets the value of this HttpData . 
sets the original filename 
sets the Content Type passed by the browser if defined @param contentType Content Type to sets - must be not null 
Returns the content type passed by the browser or null if not defined . 
sets the Content-Transfer-Encoding type from String as 7bit , 8bit or binary 
Returns the Content-Transfer-Encoding @return the Content-Transfer-Encoding 
Returns the maxSize for this HttpData . 
sets the maxSize for this HttpData . 
adds the content from the ChannelBuffer @param buffer must be not null except if last is sets to False @param last True of the buffer is the last one @exception IOException 
Returns the size in byte of the InterfaceHttpData @return the size of the InterfaceHttpData 
Returns the defined length of the HttpData . 
Returns the contents of the file item as an array of bytes . 
Returns the content of the file item as a ByteBuf @return the content of the file item as a ByteBuf @throws IOException 
Returns a ChannelBuffer for the content from the current position with at most length read bytes , increasing the current position of the Bytes read . 
Returns the contents of the file item as a String , using the default character encoding . 
Returns the contents of the file item as a String , using the specified charset . 
sets the Charset passed by the browser if defined @param charset Charset to sets - must be not null 
Returns the Charset passed by the browser or null if not defined . 
removes all InterfaceHttpData from virtual File storage from clean list for the request @param request associated request 
removes all InterfaceHttpData from virtual File storage from clean list for all requests 
Find the first non whitespace @return the rank of the first non whitespace 
Find the first whitespace @return the rank of the first whitespace 
Find the end of String @return the rank of the end of string 
sets from the request ContentType the multipartDataBoundary and the possible charset . 
sets the amount of bytes after which read bytes in the buffer should be discarded . 
returns the threshold in bytes after which read data in the buffer should be discarded . 
Returns the next available InterfaceHttpData or null if , at the time it is called , there is no more available InterfaceHttpData . 
Find the next Multipart Delimiter @param delimiter delimiter to find @param dispositionStatus the next getStatus if the delimiter is a start @param closeDelimiterStatus the next getStatus if the delimiter is a close delimiter @return the next InterfaceHttpData if any @throws ErrorDataDecoderException 
Find the next Disposition @return the next InterfaceHttpData if any @throws ErrorDataDecoderException 
removes the given FileUpload from the list of FileUploads to clean 
removes all Attributes that should be cleaned between two FileUpload in Mixed mode 
sets the Body HttpDatas list @throws NullPointerException for datas @throws ErrorDataEncoderException if the encoding is in error or if the finalize were already done 
adds a simple attribute in the body as Name = Value @param name name of the parameter @param value the value of the parameter @throws NullPointerException for name @throws ErrorDataEncoderException if the encoding is in error or if the finalize were already done 
adds the InterfaceHttpData to the Body list @throws NullPointerException for data @throws ErrorDataEncoderException if the encoding is in error or if the finalize were already done 
Returns the next available HttpChunk . 
Returns the next available HttpChunk . 
sets the amount of bytes after which read bytes in the buffer should be discarded . 
returns the threshold in bytes after which read data in the buffer should be discarded . 
Returns the next available InterfaceHttpData or null if , at the time it is called , there is no more available InterfaceHttpData . 
removes the given FileUpload from the list of FileUploads to clean 
Returns the name of this InterfaceHttpData . 
sets the amount of bytes after which read bytes in the buffer should be discarded . 
returns the threshold in bytes after which read data in the buffer should be discarded . 
Returns the next available InterfaceHttpData or null if , at the time it is called , there is no more available InterfaceHttpData . 
removes the given FileUpload from the list of FileUploads to clean 
Returns the decoded path string of the URI . 
Returns the decoded key-value parameter pairs of the URI . 
Adds a parameter with the specified name and value to this encoder . 
Returns the text data in this frame 
Sets the string for this frame @param text text to store 
returns extension configuration to submit to the server . 
returns an extension configuration to submit to the client as an acknowledge . 
Returns the text data in this frame 
Returns the URI to the web socket . 
Returns the max length for any frame 's payload 
Returns the subprotocol response sent by the server . 
Returns the decoder to use after handshake is complete . 
Returns the encoder to use after the handshake is complete . 
Creates a new handshaker . 
Creates a new handshaker . 
Creates a new handshaker . 
Returns the used handshaker 
Returns the URL of the web socket 
Returns the CSV of supported sub protocols 
Returns the version of the specification being supported 
Gets the maximum length for any frame 's payload . 
Returns the selected subprotocol .  
Returns the decoder to use after handshake is complete . 
Returns the encoder to use after the handshake is complete . 
returns that we need can not not support the web socket version 
returns that we need can not not support the web socket version 
Creates an arbitrary number of random bytes @param size the number of random bytes to creates @return An array of random bytes 
Returns the data payload of this frame . 
Returns the Last-good-stream-ID of this frame . 
Sets the Last-good-stream-ID of this frame . 
Returns the status of this frame . 
Sets the status of this frame . 
Returns the ID of this frame . 
Sets the ID of this frame . 
Returns the status of this frame . 
Sets the status of this frame . 
Returns the code of this status . 
Returns the status phrase of this status . 
Returns the value of the setting ID . Returns -1 if the setting ID is not sets . 
Sets the value of the setting ID . 
Sets the value of the setting ID . 
Removes the value of the setting ID . Removes all persistence information for the setting . 
Sets if this setting should be persisted . 
Sets if this setting is persisted . 
Sets if previously persisted settings should be cleared . 
Returns the Stream-ID of this frame . 
Sets the Stream-ID of this frame . 
Sets if this frame is the last frame to be transmitted on the stream . 
Returns the code of this status . 
Returns the status phrase of this status . 
Returns the Associated-To-Stream-ID of this frame . 
Sets the Associated-To-Stream-ID of this frame . 
Returns the priority of the stream . 
Sets the priority of the stream . 
Sets if the stream created with this frame is to be considered half-closed to the receiver . 
Returns the Stream-ID of this frame . 
Sets the Stream-ID of this frame . 
Returns the Delta-Window-Size of this frame . 
Sets the Delta-Window-Size of this frame . 
Returns the listener of inbound frames . 
Sets the listener of inbound frames . 
Returns the logger that is used for the encoder and decoder . 
Sets the logger that is used for the encoder and decoder . 
Returns if the encoder should queue frames if the maximum number of concurrent streams would otherwise be exceeded . 
Sets if the encoder should queue frames if the maximum number of concurrent streams would otherwise be exceeded . 
Returns whether reads should continue . 
Returns the maximum length of the message content . 
Returns the expected content encoding of the decoded content . 
Adds a child to this priority . 
Removes the child priority and moves any of its dependencies to being direct dependencies on this node . 
Returns the stream for which headers are currently being processed . 
Adds a fragment to the block . 
Returns the number of padding bytes that should be appended to the end of a frame . 
Gets the frame header buffer configured for the current frame . 
Returns the flow control window for the entire connection . 
adds a frame to be sent via flow control . 
Returns the expected content encoding of the decoded content . 
Returns a buffer filled with all zeros that is the appropriate length for a PING frame . 
Creates a buffer containing the error message from the given exception . 
Creates a stream initiated by this endpoint . 
Creates a stream initiated by this endpoint .  
Creates a push stream in the reserved state for this endpoint and notifies all listeners . 
Gets the ID of the stream last successfully created by this endpoint . 
Gets the flow controller for this endpoint . 
Sets the flow controller for this endpoint . 
Adds a listener of stream life-cycle events . 
Removes a listener of stream life-cycle events . 
Gets the stream if it exists . 
Sets the lifecycle manager . 
Gets the local settings for this endpoint of the HTTP/2 connection . 
Sets the lifecycle manager . 
Gets the local settings on the top of the queue that has been sent but not ACKed . 
Sets the settings for the remote endpoint of the HTTP/2 connection . 
Gets the code for this error used on the wire . 
gets the stream id associated with an exception . 
Gets the underlying flags value . 
Gets the number of bytes expected for the priority fields of the payload . 
Gets the length in bytes of the padding presence field expected in the payload . 
Gets the connection-wide initial flow control window size that is used as the basis for new stream flow control windows . 
gets the portion of the flow control window for the given stream that is currently available for sending/receiving frames which are subject to flow control . 
Returns the name of the HTTP/2 frame e.g. DATA , GOAWAY , etc. . 
Sets the maximum allowed frame size . 
Gets the maximum allowed frame size . 
Sets the number of IDs to reserve for the receiver to use while GOAWAY is in transit . 
Returns an iterator over all HTTP/2 headers . 
gets the initial flow control window size for the given stream . 
sets the active listener on the flow-controller . 
Creates an HTTP2-Settings header with the given payload . 
Adds the given setting key/value pair . 
Gets the unique identifier for this stream within the connection . 
Gets the state of this stream . 
Returns application-defined data if any was associated with this stream . 
Returns and removes application-defined data if any was associated with this stream . 
Returns weight assigned to the dependency with the parent . 
Returns the number of child streams directly dependent on this stream . 
Creates a new channel that will eventually map to a local/outbound HTTP/2 stream . 
Sets the channel handler that should be added to the channels 's pipeline . 
Sets the identifier of the stream this frame applies to . 
Returns the HTTP/2 stream identifier for this event . 
creates a new object to contain the request data .  
gets either the header or the trailing headers depending on which is valid to adds to @param msg The message containing the headers and trailing headers @return The headers object which can be appended to or modified 
adds all the HTTP headers into the HTTP/2 headers object @param httpHeaders The HTTP headers to translate to HTTP/2 @param http2Headers The target HTTP/2 headers 
sets the maximum table size . 
returns the maximum table size . 
returns the number of header fields in the dynamic table . 
returns the size of the dynamic table . 
returns the header field at the given index . 
returns the number of header fields in the dynamic table . 
returns the current size of the dynamic table . 
returns the maximum allowable size of the dynamic table . 
returns the header field at the given index . 
adds the header field to the dynamic table . 
removes and returns the oldest header field from the dynamic table . 
removes all entries from the dynamic table . 
sets the maximum size of the dynamic table . 
sets the maximum table size . 
returns the maximum table size . 
Removes the oldest entry from the dynamic table until sufficient space is available . 
returns the number of header fields in the dynamic table . 
returns the size of the dynamic table . 
returns the header field at the given index . 
Returns the header entry with the lowest index value for the header field . Returns null if header field is not in the dynamic table . 
Returns the lowest index value for the header field name in the dynamic table . Returns -1 if the header field name is not in the dynamic table . 
adds the header field to the dynamic table . 
removes and returns the oldest header field from the dynamic table . 
removes all entries from the dynamic table . 
Returns the index into the hash table for the hash code h. 
Removes this entry from the linked list . 
Returns the number of bytes required to Huffman encode the input string literal . 
returns the header field at the given index value . 
Returns the lowest index value for the given header field name in the static table . Returns -1 if the header field name is not in the static table . 
Returns the index value for the given header field in the static table . Returns -1 if the header field is not in the static table . 
creates a map CharSequenceMap header name to index value to allow quick lookup 
Gets the stream this state is associated with . 
gets the amount of bytes this stream has pending to send . 
Sets the minimum allocation chunk that will be allocated to each stream . 
Sets the amount of bytes that will be allocated to each stream . 
Returns a byte array filled with random data . 
Returns a byte array filled with random data . 
sets the extras length of the message . 
sets the key length of the message . 
Returns the magic byte for the message . 
Sets the magic byte . 
Returns the opcode for the message . 
Sets the opcode for the message . 
Returns the key length of the message . 
returns the extras length of the message . 
Returns the data type of the message . 
Sets the data type of the message . 
Returns the total body length . 
Sets the total body length . 
Returns the opaque value . 
Sets the opaque value . 
Returns the CAS identifier . 
Sets the CAS identifier . 
Returns the optional key of the document . 
Sets the key of the document . 
Sets the extras buffer on the message . 
Returns the reserved field value . 
Sets the reserved field value . 
Returns the status of the response . 
Sets the status of the response . 
gets length of this array object . 
gets children of this Arrays . 
returns the command name . 
Returns the response code . 
Returns the details if any . 
Returns username that needs to be authenticated @return username that needs to be authenticated 
Returns password that needs to be validated @return password that needs to be validated 
Returns socks request type @return socks request type 
Returns socks response type @return socks response type 
Returns the protocol version of this message . 
Returns the value of the version field , as defined in the protocol specification . 
Returns the type of this request . 
Returns the status of this response . 
Returns the type of this request . 
Returns the status of this response . 
Returns the list of desired authentication methods . 
Returns the username of this request . 
Returns the password of this request . 
Returns the status of this response . 
Returns command of this frame . 
Returns headers of this frame . 
returns defined or guessed XML encoding 
returns defined XML version or null 
returns standalonity of the document 
returns defined encoding or null 
Returns 0 if the strings contain the same characters in the same order . Returns a negative integer if the first non-equal character in this string has an ASCII value which is less than the ASCII value of the character at the same position in the specified string , or if this string is a prefix of the specified string . Returns a positive integer if the first non-equal character in this string has a ASCII value which is greater than the ASCII value of the character at the same position in the specified string , or if the specified string is a prefix of this string . 
Returns the case-insensitive hash code of the specified string . 
Returns the key of this attribute . 
Gets a boolean value . 
gets the executor used to notify listeners when this promise is complete . 
Returns a reference to itself . 
Returns the number of thread local variables bound to the current thread . 
Returns the current value for the current thread 
Returns the current value for the specified thread local map . 
sets the value for the current thread . 
sets the value for the specified thread local map . 
Returns the initial value for this thread-local variable . 
Returns the internal data structure that keeps the thread-local variables bound to this thread . 
Sets the internal data structure that keeps the thread-local variables bound to this thread . 
Returns the cause of the failed I/O operation if the I/O operation has failed . 
Adds the specified listener to this future . 
Adds the specified listeners to this future . 
Removes the first occurrence of the specified listener from this future . 
Removes the first occurrence for each of the listeners from this future . 
returns the result without blocking . 
returns the number of tasks that are pending for processing . 
Returns the amount of time left until the scheduled task with the closest dead line is executed . 
gets existing constant by name or creates new one if not exists . 
Creates constant by name or throws exception . 
Returns null if can not be split . 
Returns an estimate of the number of elements covered by this Spliterator . 
Returns a power of two table size for the given desired capacity .  
Returns x 's Class if it is of the form `` class C implements Comparable <C> '' , else null . 
Removes all of the mappings from this map . 
Returns a string representation of this map . 
Returns the value to which the specified key is mapped , or the given default value if this map contains no mapping for the key . 
Returns an enumeration of the keys in this table . 
Returns an enumeration of the values in this table . 
Returns the number of mappings . 
Adds to count , and if table is too small and not already resizing , initiates transfer .  
Returns a list on non-TreeNodes replacing those in given list . 
Returns matching node or null if none . 
Removes the given node , that must be present before this call . 
Sets our entry 's value and writes through to the map . 
Returns a non-null result from applying the given search function on each key , or null if none . 
Returns the result of accumulating all keys using the given reducer to combine values , or null if none . 
Returns the result of accumulating the given transformation of all keys using the given reducer to combine values , or null if none . 
Returns the result of accumulating the given transformation of all keys using the given reducer to combine values , and the given basis as an identity value . 
Returns the result of accumulating the given transformation of all keys using the given reducer to combine values , and the given basis as an identity value . 
Returns the result of accumulating the given transformation of all keys using the given reducer to combine values , and the given basis as an identity value . 
Returns a non-null result from applying the given search function on each value , or null if none . 
Returns the result of accumulating all values using the given reducer to combine values , or null if none . 
Returns the result of accumulating the given transformation of all values using the given reducer to combine values , or null if none . 
Returns the result of accumulating the given transformation of all values using the given reducer to combine values , and the given basis as an identity value . 
Returns the result of accumulating the given transformation of all values using the given reducer to combine values , and the given basis as an identity value . 
Returns the result of accumulating the given transformation of all values using the given reducer to combine values , and the given basis as an identity value . 
Returns a non-null result from applying the given search function on each entry , or null if none . 
Returns the result of accumulating all entries using the given reducer to combine values , or null if none . 
Returns the result of accumulating the given transformation of all entries using the given reducer to combine values , or null if none . 
Returns the result of accumulating the given transformation of all entries using the given reducer to combine values , and the given basis as an identity value . 
Returns the result of accumulating the given transformation of all entries using the given reducer to combine values , and the given basis as an identity value . 
Returns the result of accumulating the given transformation of all entries using the given reducer to combine values , and the given basis as an identity value . 
Returns the map backing this view . 
Removes all of the elements from this view , by removing all the mappings from the map backing this view . 
Returns a string representation of this collection . 
Adds the specified key to this sets view by mapping the key to the default mapped value in the backing map , if defined . 
Returns a sun.misc.Unsafe . 
Returns the current pending count . 
Sets the pending count to the given value . 
Returns the root of the current computation ; i.e. , this task if it has no completer , else its completer 's root . 
Returns the result of the computation . 
Returns a sun.misc.Unsafe . 
Returns a new worker thread operating in the given pool . 
Returns the approximate number of tasks in the queue . 
Returns next task , if one exists , in order specified by mode . 
Removes and cancels all known tasks , ignoring any exceptions . 
Returns true if owned and not known to be blocked . 
Returns the next sequence number . 
Removes record of worker from array , and adjusts counts . 
Gets and removes a local or stolen task for the given worker . 
Returns a cheap heuristic guide for task partitioning when programmers , frameworks , tools , or languages have little or no idea about task granularity . 
Returns common pool queue for a thread that has submitted at least one task . 
Returns the common pool instance . 
Returns the factory used for constructing new workers . 
Returns the handler for internal worker threads that terminate due to unrecoverable errors encountered while executing tasks . 
Returns the targeted parallelism level of this pool . 
Returns the targeted parallelism level of the common pool . 
Returns the number of worker threads that have started but not yet terminated . 
Returns an estimate of the number of worker threads that are not blocked waiting to join tasks or for other managed synchronization . 
Returns an estimate of the number of threads that are currently stealing or executing tasks . 
Returns an estimate of the total number of tasks stolen from one thread 's work queue by another . 
Returns an estimate of the number of tasks submitted to this pool that have not yet begun executing . 
Removes and returns the next unexecuted submission if one is available . 
Removes all available unexecuted submitted and forked tasks from scheduling queues and adds them to the given collection , without altering their execution status . 
Returns a string identifying this pool , as well as its state , including indications of run state , parallelism level , and worker and task counts . 
Creates and returns the common pool , respecting user settings specified via system properties . 
Returns a sun.misc.Unsafe . 
Removes exception node and clears status . 
Returns a rethrowable exception for the given task , if available . 
Returns the pool hosting the current task execution , or null if this task is executing outside of any ForkJoinPool . 
Returns an estimate of the number of tasks that have been forked by the current worker thread but not yet executed . 
Returns an estimate of how many more locally queued tasks are held by the current worker thread than there are other worker threads that might steal them , or zero if this thread is not operating in a ForkJoinPool . 
Returns , but does not unschedule or execute , a task queued by the current thread but not yet executed , if one is immediately available . 
Returns the tag for this task . 
Returns a sun.misc.Unsafe . 
Returns the pool hosting this thread . 
Returns the unique index number of this thread in its pool . 
Adds the given value . 
Returns the current sum . 
Sets base and all cells to the given value . 
Returns a sun.misc.Unsafe . 
Returns the default factory . 
Creates a new logger instance with the name of the specified class . 
Creates a new logger instance with the specified name . 
Creates a new logger instance with the specified name . 
returns the version of Java under which this library is used . 
Returns the maximum memory reserved for direct buffer allocation . 
Returns the temporary directory . 
returns the address size of the OS . 
Gets the stack trace from a Throwable as a String . 
Gets a result . 
Returns mapped value of the specified input . 
Creates an byte -LSB- -RSB- based on an ipAddressString . 
Returns the reference count of this object . 
Sets the resource leak detection level . 
Returns the current resource leak detection level . 
gets the singleton instance of this factory class . 
sets the factory 's singleton instance . 
Returns a human-readable message that potentially enables easier resource leak tracking . 
Sets the Date header for the HTTP response @param response HTTP response 
Sets the Date and Cache headers for the HTTP Response @param response HTTP response @param fileToCache file to extract content type 
Sets the content type header for the HTTP Response @param response HTTP response @param file file to extract content type 
Returns the name of the negotiated application-level protocol . 
gets which application level protocol negotiation to use . 
gets the desired behavior for the peer who selects the application protocol . 
gets the desired behavior for the peer who is notified of the selected protocol . 
Returns all the available OpenSSL cipher suites . 
gets the desired behavior for the peer who selects the application protocol . 
gets the desired behavior for the peer who is notified of the selected protocol . 
Sets the SSL session ticket keys of this context . 
Sets the SSL session ticket keys of this context . 
Returns the stats of this context . 
Returns the current number of sessions in the internal session cache . 
Returns the number of started SSL/TLS handshakes in client mode . 
Returns the number of successfully established SSL/TLS sessions in client mode . 
Returns the number of start renegotiations in client mode . 
Returns the number of started SSL/TLS handshakes in server mode . 
Returns the number of successfully established SSL/TLS sessions in server mode . 
Returns the number of start renegotiations in server mode . 
Returns the number of successfully reused sessions . 
Returns the number of successfully retrieved sessions from the external session cache in server mode . 
Returns the number of sessions proposed by clients that were not found in the internal session cache in server mode . 
Returns the number of sessions proposed by clients and either found in the internal or external session cache in server mode , but that were invalid due to timeout . 
Returns the number of sessions that were removed because the maximum session cache size was exceeded . 
Returns the number of times a client presented a ticket that did not match any key in the list . 
Returns the number of times a client did not present a ticket and we issued a new one 
Returns the number of times a client presented a ticket derived from an older key , and we upgraded to the primary key . 
Returns the number of times a client presented a ticket derived from the primary key . 
gets HMAC key . 
gets AES Key . 
Gets the supported key types for client certificates .  
Returns the stats of this context . 
Sets the SSL session ticket keys of this context . 
Returns the default server-side implementation provider currently in use . 
Returns the default client-side implementation provider currently in use . 
Returns the list of enabled cipher suites , in the order of preference . 
Returns the size of the cache used for storing SSL session objects . 
Returns the timeout for the cached SSL session objects , in seconds . 
Returns the object responsible for negotiating application layer protocols for the TLS NPN/ALPN extensions . 
sets the size of the cache used for storing SSL session objects . 
sets the timeout for the cached SSL session objects , in seconds . 
Sets the client authentication mode . 
Returns the name of the current application-level protocol . 
returns how much bytes can be read out of the encrypted data . 
Returns the generated X. 509 certificate file in PEM format . 
Returns the generated RSA private key file in PEM format . 
Returns the generated X. 509 certificate . 
Returns the generated RSA private key . 
Returns one trust manager for each type of trust material . 
Returns the offset in the file where the transfer began . 
Returns the offset in the file where the transfer will end . 
Returns the offset in the file where the transfer is happening currently . 
Returns the length of the input . 
Returns current transfer progress . 
Returns the offset in the file where the transfer began . 
Returns the offset in the file where the transfer will end . 
Returns the offset in the file where the transfer is happening currently . 
Returns the number of transferred bytes . 
Returns the idle state . 
returns the readerIdleTime that was given when instance this class in milliseconds . 
returns the writerIdleTime that was given when instance this class in milliseconds . 
returns the allIdleTime that was given when instance this class in milliseconds . 
sets if necessary setUserDefinedWritability status . 
creates the global TrafficCounter 
creates the global TrafficCounter . 
Returns the name of the proxy protocol in use . 
Returns the name of the authentication scheme in use . 
Returns the address of the proxy server . 
Returns the address of the destination . 
Returns the name of the proxy protocol in use . 
Returns the name of the authentication scheme in use . 
Returns the address of the proxy server . 
Returns the address of the destination to connect to via the proxy server . 
Returns the connect timeout in millis . 
Sets the connect timeout in millis . 
Adds the codec handlers required to communicate with the proxy server . 
Returns a new message that is sent at first time when the connection to the proxy server has been established . 
gets the event loop that should be shared with JMH to execute the benchmark . 
Creates a number of random headers with the given name/value lengths . 
Gets headers for the given size and whether the key/values should be limited to ASCII . 
returns the cached entries for the given hostname . 
Returns the resolution cache . 
Returns the maximum allowed number of DNS queries to send when resolving a host name . 
Returns if this resolver should generate the detailed trace information in an exception message so that it is easier to understand the cause of resolution failure . 
Returns the automatic inclusion of a optional records that tries to give the remote DNS server a hint about how much data the resolver can read per response is enabled . 
Returns the component that tries to resolve hostnames against the hosts file prior to asking to remotes DNS servers . 
Sets the addresses of the DNS server . 
Sets the cache for resolution results . 
Sets the list of the protocol families of the address resolved . 
Sets the list of the protocol families of the address resolved . 
Sets the maximum allowed number of DNS queries to send when resolving a host name . 
Sets if this resolver should generate the detailed trace information in an exception message so that it is easier to understand the cause of resolution failure . 
sets the list of search domains of the resolver . 
sets the number of dots which must appear in a name before an initial absolute query is made . 
Returns the list of the system DNS server addresses . 
returns a free port which can be used to bind to @return port 
Returns the method name of the current test . 
Returns a deep clone of this bootstrap which has the identical configuration . 
Returns a copy of the configured options . 
Returns a copy of the configured attributes . 
Creates a new channel . 
Returns a copy of the configured options which will be used for the child channels . 
Returns a copy of the configured attributes which will be used for the child channels . 
Returns the ID of this channel . 
Returns the message wrapped by this envelope message . 
Returns the address of the sender of this message . 
Returns the address of the recipient of this message . 
Returns the parent of this channel . 
Returns the configuration of this channel . 
Returns the local address where this channel is bound to . 
Returns the remote address where this channel is connected to . 
Returns an <em> internal-use-only </em> object that provides unsafe operations . 
Sets a configuration property with the specified name and value . 
Returns the connect timeout of the channel in milliseconds . 
Sets the connect timeout of the channel in milliseconds . 
Returns the high water mark of the write buffer . 
Sets the high water mark of the write buffer . 
Returns the low water mark of the write buffer . 
Sets the low water mark of the write buffer . 
Creates a new channel . 
Returns a channel where the I/O operation associated with this future takes place . 
Gets called if an user event was triggered . 
Removes the fully written entries and update the reader index of the partially written entry . 
Sets a user-defined writability flag at the specified index . 
returns a special ChannelPromise which can be reused for different operations . 
adds a buffer to the end of the queue . 
adds a buffer to the end of the queue and associate a promise with it that should be completed when all the buffers bytes have been consumed from the queue and written . 
adds a buffer to the end of the queue and associate a listener with it that should be completed when all the buffers bytes have been consumed from the queue and written . 
Returns the offset in the file where the transfer began . 
Returns the bytes which was transfered already . 
Returns the bytes which was transfered already . 
Returns the number of bytes to transfer . 
Returns the name of this group . 
Returns the ID of this address . 
Returns the maximum number of bytes to read per read loop . 
Sets the maximum number of bytes to read per read loop . 
Returns the maximum number of bytes to read per individual read operation . 
Sets the maximum number of bytes to read per individual read operation . 
Sets the maximum number of bytes to read for a read loop and per individual read operation .  
Returns the maximum number of messages to read per read loop . 
Sets the maximum number of messages to read per read loop . 
Creates a new handle . 
Returns the percentage of the desired amount of time spent for I/O in the event loop . 
Sets the percentage of the desired amount of time spent for I/O in the event loop . 
Sets the percentage of the desired amount of time spent for I/O in the child event loops . 
returns the number of bytes ready to read from the underlying Socket . 
Returns the number of pending write operations . 
Returns the total number of bytes that are pending because of pending messages . 
Adds the channel back to the pool only if the channel is healty . 
Creates a new handle . 
Creates a new receive buffer whose capacity is probably large enough to read all inbound data and small enough not to waste its space . 
sets the bytes that have been read for the last read operation . 
gets the amount of bytes for the previous read operation . 
Gets the address of the network interface used for multicast packets . 
Sets the address of the network interface used for multicast packets . 
Returns the address type of this protocol family . 
Sets the maximal time a operation on the underlying socket may block . 
Returns the maximal time a operation on the underlying socket may block . 
Sets the maximal time a operation on the underlying socket may block . 
Returns the maximal time a operation on the underlying socket may block . 
Gets the backlog value to specify when the channel binds to a local address . 
Sets the backlog value to specify when the channel binds to a local address . 
Sets whether the channel should not close itself when its remote peer shuts down output to make the connection half-closed . 
Returns the low water mark for the write buffer . 
Returns the high water mark for the write buffer . 
sets the SO_REUSEPORT option on the underlying Channel . 
Returns the percentage of the desired amount of time spent for I/O in the event loop . 
Sets the percentage of the desired amount of time spent for I/O in the event loop . 
Sets the percentage of the desired amount of time spent for I/O in the child event loops . 
Returns threshold value of number of pending for fast open connect . 
sets the SO_REUSEPORT option on the underlying Channel . 
Returns the number if iov entries . 
Returns the size in bytes 
returns the int value of the filedescriptor . 
Sets the number of stop bits to include at the end of every character to aid the serial device in synchronising with the data . 
Sets the number of data bits to use to make up each character sent to the serial device . 
Sets the type of parity bit to be used when communicating with the serial device . 
Sets whether the serial device supports the Data Terminal Ready signal , used for flow control @param dtr true if DTR is supported , false otherwise 
Sets whether the serial device supports the Request To Send signal , used for flow control @param rts true if RTS is supported , false otherwise 
Sets the time to wait after opening the serial port and before sending it any configuration information or data . 
Returns the underlying SCTP association . 
returns all local addresses of the SCTP channel . 
returns all remote addresses of the SCTP server channel . 
returns the unordered flag 
returns all local addresses of the SCTP server channel . 
Gets the backlog value to specify when the channel binds to a local address . 
Sets the backlog value to specify when the channel binds to a local address . 
Find named address on local host . 
sets this certificate 's name . 
sets the certificate that signs this certificate . 
Returns an SSL client for this host 's localhost address . 
adds a certificate authority that this client trusts . 
Returns an early guess of the next response , used for policy on how an incoming request should be received . 
Returns the HTTP response line , such as `` HTTP/1 .1 200 OK '' . 
Returns the HTTP headers , such as `` Content-Length : 0 '' . 
Removes all HTTP headers including any `` Content-Length '' and `` Transfer-encoding '' headers that were added by default . 
Adds a new header with the name and value . 
Adds a new header with the name and value . 
Returns a copy of the raw HTTP payload . 
Returns the streams the server will push with this response . 
Returns a URL for connecting to this server . 
Sets the number of bytes of the POST body to keep in memory to the given limit . 
Sets whether ALPN is used on incoming HTTPS connections to negotiate a protocol like HTTP/1 .1 or HTTP/2 . 
Returns the number of HTTP requests received thus far by this server . 
Sets the dispatcher used to match incoming requests to mock responses . 
Returns all headers . 
Returns the sizes of the chunks of this request 's body , or an empty list if the request 's body was empty or unchunked . 
Returns the body of this POST request . 
Returns the index of this request on its HTTP connection . 
Returns the connection 's TLS version or null if the connection does n't use SSL . 
Returns a URL with the hostname and port of the origin server . 
Returns the service that will be used to resolve IP addresses for hostnames . 
Returns the socket factory for new connections . 
Returns the client 's proxy authenticator . 
Returns the protocols the client supports . 
Returns this address 's proxy selector . 
Returns the SSL socket factory , or null if this is not an HTTPS address . 
Returns the hostname verifier , or null if this is not an HTTPS address . 
Returns this address 's certificate pinner , or null if this is not an HTTPS address . 
Returns null if the challenge can not be satisfied . 
Returns an iterator over the URLs in this cache . 
Sets the maximum age of a cached response . 
Sets the minimum number of seconds that a response will continue to be fresh for . 
Returns the original request that initiated this call . 
creates a new , identical call to this one which can be enqueued or executed even if this call has already been . 
Returns list of matching certificates ' pins for the hostname . Returns an empty list if the hostname does not have pinned certificates . 
Returns the protection space . 
Returns the Java name of this cipher suite . 
Returns the route used by this connection . 
Returns the socket that this connection is using . 
Returns the TLS handshake used to establish this connection , or null if the connection is not HTTPS . 
Returns the number of idle connections in the pool . 
Returns total number of connections in the pool . 
Returns true if the connection has been removed from the pool and should be closed . 
Returns the duration in nanos to sleep until the next scheduled call to this method . Returns -1 if no further cleanups are required . 
Returns the cipher suites to use for a connection . 
Returns the TLS versions to use when negotiating a connection . 
Returns a non-empty string with this cookie 's name . 
Returns a possibly-empty string with this cookie 's value . 
Returns true if this cookie does not expire at the end of the current session . 
Returns true if this cookie 's domain should be interpreted as a single host name , or false if it should be interpreted as a pattern . 
Returns the cookie 's domain . 
Returns this cookie 's path . 
Returns true if this cookie should be limited to only HTTP APIs . 
Returns true if this cookie should be limited to only HTTPS requests . 
Returns all of the cookies from a sets of HTTP response headers . 
sets the domain pattern for this cookie . 
sets the host-only domain for this cookie . 
Returns an auth credential for the Basic scheme . 
sets the maximum number of requests to execute concurrently . 
sets the maximum number of requests for each host to execute concurrently . 
Returns a snapshot of the calls currently awaiting execution . 
Returns a snapshot of the calls currently being executed . 
Returns the TLS version used for this connection . 
Returns the cipher suite used for the connection . 
Returns a possibly-empty list of certificates that identify the remote peer . 
Returns the remote peer 's principle , or null if that peer is anonymous . 
Returns a possibly-empty list of certificates that identify this peer . 
Returns the local principle , or null if this peer is anonymous . 
Returns the last value corresponding to the specified field , or null . 
Returns the last value corresponding to the specified field parsed as an HTTP date , or null if either the field is absent or can not be parsed as a date . 
Returns the number of field values . 
Returns an immutable case-insensitive sets of header names . 
Returns headers for the alternating header names and values . 
adds a header line without any validation . 
adds an header line containing a field name , a literal colon , and a value . 
adds a field with the specified value . 
adds a field with the specified value without any validation . 
sets a field with the specified value . 
Returns either `` http '' or `` https '' . 
Returns the username , or an empty string if none is sets . 
Returns the decoded username , or an empty string if none is present . 
Returns the password , or an empty string if none is sets . 
Returns the decoded password , or an empty string if none is present . 
Returns the explicitly-specified port if one was provided , or the default port for this URL 's scheme . 
Returns the number of segments in this URL 's path . 
Returns the entire path of this URL encoded for use in HTTP resource resolution . 
Returns the query of this URL , encoded for use in HTTP resource resolution . 
Returns the HttpUrl with the username , password , path , query , and fragment stripped . 
Adds the pre-encoded query parameter to this URL 's query string . 
Returns a strategy to use assuming the request can use the network . 
Returns the number of milliseconds that the response was fresh for , starting from the served date . 
Returns the current age of the response , in milliseconds . 
Returns true if computeFreshnessLifetime used a heuristic . 
Returns true if the request contains conditions that save the server from sending a response that the client has locally . 
Creates a new journal that omits redundant information . 
Returns the directory where this cache stores its data . 
Returns the maximum number of bytes that this cache should use to store its data . 
Returns the number of bytes currently being used to store the values in this cache . 
Returns true if this cache has been closed . 
Returns an iterator over the cache 's current entries . 
Returns an editor for this snapshot 's entry , or null if either the entry has changed since this snapshot was created or if another edit is in progress . 
Returns an unbuffered input stream to read the last committed value , or null if no value has been committed . 
sets lengths using decimal numbers like `` 10123 '' . 
Returns a snapshot of this entry .  
Returns a new source that returns the same bytes as upstream . Returns null if this relay has been closed and no further sources are possible . 
Returns a request that creates a TLS tunnel via an HTTP proxy . 
Returns true if this connection is ready to host new streams . 
Returns true if this is an HTTP/2 connection . 
Returns true if there 's another route to attempt . 
Returns true if there 's another proxy to try . 
Returns the next proxy to try . 
Returns true if there 's another socket address to try . 
Returns the next socket address to try . 
Returns true if there is another postponed route to try . 
Returns the next postponed route to try . 
Returns a connection to host a new stream . 
removes this allocation from the connection 's list of allocations . 
Returns an output stream where the request body can be streamed . 
Returns a stream that reads the response body . 
Returns null if the value could n't be parsed . 
Returns true if a Vary header contains an asterisk . 
Returns true if a Vary header contains an asterisk . 
Returns the names of the request headers that need to be checked for equality when caching . 
Returns the input length if none of the requested characters can be found . 
Returns the request status line , like `` gets / HTTP/1 .1 '' . 
Returns the path to request , like the ' / ' in ` gets / HTTP/1 .1 ' . 
Returns true if this connection is closed . 
Returns bytes of a request header for sending on an HTTP transport . 
Returns the count of entries evicted . 
Returns human-readable representation of HTTP/2 frame headers . 
Returns headers for a name value block containing an HTTP/2 response . 
Returns a new server-initiated stream . 
Returns a new locally-initiated stream . 
creates or update incoming headers , creating the corresponding streams if necessary . 
Returns true if this stream is open . 
Returns true if this stream was created by this peer . 
Returns the stream 's response headers , blocking if necessary if they have not been received yet . 
Returns the reason why this stream was closed , or null if it closed normally or has not yet been closed . 
Returns a source that reads data from the peer . 
Returns a sink that can be used to write data to the peer . 
Returns true if this stream was closed . 
Returns once the source is either readable or finished . 
Returns the round trip time for this ping in nanoseconds , waiting for the response to arrive if necessary . Returns -1 if the response was canceled . 
Returns the round trip time for this ping in nanoseconds , or -1 if the response was canceled , or -2 if the timeout elapsed before the round trip completed . 
Returns the number of settings that have values assigned . 
Returns -1 if unset . 
Creates parent directories if necessary . 
Creates parent directories if necessary . 
Returns the negotiated protocol , or null if no protocol was negotiated . 
Returns an object that holds a stack trace created at the moment this method is executed . 
Returns the concatenation of 8-bit , length prefixed protocol names . 
Returns true if two possibly-null objects are equal . 
Returns limit if there is no such character . 
Returns limit if there is no such character . 
Returns false when no more messages can be read . 
Returns the high-level media type , such as `` text '' , `` image '' , `` audio '' , `` video '' , or `` application '' . 
Returns a specific media subtype , such as `` plain '' or `` png '' , `` mpeg '' , `` mp4 '' or `` xml '' . 
Returns the charset of this media type , or null if this media type does n't specify a charset . 
Returns the encoded media type , like `` text/plain ; charset = utf-8 '' , appropriate for use in a Content-Type header . 
sets the MIME type . 
adds a part to the body . 
adds a part to the body . 
adds a form data part to the body . 
adds a form data part to the body . 
adds a part to the body . 
Returns an immutable list of interceptors that observe a single network request and response . 
Sets the default connect timeout for new connections . 
Sets the default read timeout for new connections . 
Sets the default write timeout for new connections . 
Sets the HTTP proxy that will be used by connections created by this client . 
Sets the handler that can accept cookies from incoming HTTP responses and provides cookies to outgoing HTTP requests . 
Sets the response cache to be used to read and write cached responses . 
Sets the DNS service used to lookup IP addresses for hostnames . 
Sets the socket factory used to creates connections . 
Sets the socket factory used to secure HTTPS connections . 
Sets the socket factory and trust manager used to secure HTTPS connections . 
Sets the verifier used to confirm that response certificates apply to requested hostnames for HTTPS connections . 
Sets the certificate pinner that constrains which certificates are trusted . 
Sets the authenticator used to respond to challenges from origin servers . 
Sets the authenticator used to respond to challenges from proxy servers . 
Sets the connection pool used to recycle HTTP and HTTPS connections . 
Sets the dispatcher used to sets policy and execute asynchronous requests . 
Returns a modifiable list of interceptors that observe a single network request and response . 
Returns the string used to identify this protocol for ALPN , like `` http/1 .1 '' , `` spdy/3 .1 '' or `` h2 '' . 
Returns a string that describes this call . 
Returns the cache control directives for this response . 
Sets the URL target of this request . 
Sets the URL target of this request . 
Returns the Content-Type header for this body . 
Returns the HTTP status code . 
Returns true if the code is in -LSB- 200 . 
Returns the HTTP status message or null if it is unknown . 
Returns the TLS handshake of the connection that carried this response , or null if the response was received without TLS . 
Returns true if this response redirects to another resource . 
Returns the raw response received from the network . 
Returns the raw response received from the cache . 
Returns the response for the HTTP redirect or authorization challenge that triggered this response , or null if this response was n't triggered by an automatic retry . 
Returns the authorization challenges appropriate for this response 's code . 
Returns the cache control directives for this response . 
Returns the response as a byte array . 
Returns the response as a character stream decoded with the charset of the Content-Type header . 
Returns the response as a string decoded with the charset of the Content-Type header . 
Returns true if this route tunnels HTTPS through an HTTP proxy .  
Returns the original request that initiated this call . 
creates a new , identical call to this one which can be enqueued even if this call has already been . 
Sets the response cache to be used to read and write cached responses . 
Returns the number of bytes currently being used to store the values in this cache . 
Returns the maximum number of bytes that this cache should use to store its data . 
Returns the number of HTTP requests that required the network to either supply a response or validate a locally cached response . 
Returns the number of HTTP requests whose response was provided by the cache . 
Returns the total number of HTTP requests that were made . 
Creates an OkHttp Response.Body containing the supplied information . 
Creates an OkHttp Response.Body containing the supplied information . 
Creates a new HTTP response cache and sets it as the system default cache . 
Returns the number of bytes currently being used to store the values in this cache . 
Returns the maximum number of bytes that this cache should use to store its data . 
Returns the number of HTTP requests that required the network to either supply a response or validate a locally cached response . 
Returns the number of HTTP requests whose response was provided by the cache . 
Returns the total number of HTTP requests that were made . 
Returns true if the body in question probably contains human readable text . 
Sets the addresses to be returned by this fake DNS service . 
Sets the service to throw when a hostname is requested . 
Returns a chain starting at the leaf certificate and progressing to the root . 
Returns a callable that reads all of source , closes it , and returns the bytes . 
Returns an address that 's without an SSL socket factory or hostname verifier . 
Returns true when all work currently in progress by the watchdog have completed . 
creates a sufficiently large header sets to overflow INITIAL_MAX_FRAME_SIZE bytes . 
Sets a delegate for handling the next callback to this listener . 
Returns a new response body that refuses to be read once it has been closed . 
Returns an OkHttpClient for all tests to use as a starting point . 
Returns true if either : <ul> <li> A specific proxy was explicitly configured for this connection . 
Returns an immutable map containing each field to its list of values . 
Returns an input stream containing one or more certificate PEM files . 
Returns true if the PhotoView is sets to allow zooming of Photos . 
Gets the Display Rectangle of the currently displayed Drawable . 
Sets the Display Matrix of the currently displayed Drawable . 
Returns the current scale value @return float - current scale value 
returns the current scale type in use by the ImageView . 
Sets the minimum scale level . 
Sets the medium scale level . 
Sets the maximum scale level . 
Sets custom double tap listener , to intercept default given functions . 
sets 's the ImageView 's ScaleType to Matrix . 
sets the zoom interpolator @param interpolator the zoom interpolator 
gets the display matrix @param matrix target matrix to copy to 
gets the current support matrix 
Creates the Uri string with embedded expansion codes . 
Returns true if ParcelUuid is present in uuidArray @param uuidArray - Array of ParcelUuids @param uuid 
Returns true if there any common ParcelUuids in uuidA and uuidB . 
Returns true if all the ParcelUuids in ParcelUuidB are present in ParcelUuidA @param uuidA - Array of ParcelUuidsA @param uuidB - Array of ParcelUuidsB 
Returns the advertising flags indicating the discoverable mode and capability of the device . Returns -1 if the flag field is not sets . 
Returns a list of service UUIDs within the advertisement that are used to identify the bluetooth GATT services . 
Returns a sparse array of manufacturer identifier and its corresponding manufacturer specific data . 
Returns the manufacturer specific data associated with the manufacturer id . 
Returns a map of service UUID and its corresponding service data . 
Returns the transmission power level of the packet in dBm . 
Returns the local name of the BLE device . 
Returns raw bytes of scan record . 
creates a new sets of notifications or update those existing . 
creates or update a notification with the given id for the beacon with the given address . 
creates or update the a single notification that is a collapsed version of the top two beacon notifications . 
creates the big view for the summary notification . 
gets sets of Blocked hosts . 
gets favorites from shared preferences . 
Gets whether the user has optedIn from SharedPreferences . 
gets the default PWS Endpoint formatted for SharedPreferences . 
Sets the client 's endpoint to the currently selected endpoint . 
Sets the client 's endpoint to the currently selected endpoint . 
Sets the client 's endpoint to the Google endpoint . 
gets the Google API key if available . 
Gets the saved settings for the custom PWS . 
gets the saved setting for enabling Fatbeacon . 
gets the saved setting for enabling mDNS folder . 
gets the saved setting for enabling Wifi direct . 
gets the saved setting for debug View . 
gets the saved setting for enabling mDNS folder . 
creates an intent for opening a URL . 
Gets the top ranked PwPair with the given groupId . 
gets the scan time for a device if available . 
Gets if the device is a FatBeacon . 
Gets if the device is Wifi Direct . 
Gets if the device is SSDP . 
Gets the device RSSI if it is Bluetooth Low Energy . 
Gets the device TX power if it is Bluetooth Low Energy . 
Gets the UrlDevice Title . 
Gets the UrlDevice Description . 
Gets the UrlDevice MAC address . 
Gets the UrlDevice port . 
Gets the amount of time in milliseconds to gets the result from the PWS if available . 
Gets the groupId for the result . 
Gets the smoothed RSSI for device from the region resolver . 
Gets the distance for device from the region resolver . 
Gets the region string for device from the region resolver . 
sets the device type . 
sets the public key to false . 
sets the public key to true . 
sets the title . 
sets the description . 
sets wifi-direct MAC address . 
sets wifi-direct port . 
adds 1 PwPair to list 2 . adds site used for PwPair to favorites 4 . 
adds 1 PwPair to list 2 . adds site used for PwPair to favorites 4 . 
adds a UrlDevice to the collection . 
removes a UrlDevice from the collection . 
adds URL metadata to the collection . 
adds an Icon to the collection . 
gets an Icon from the collection . 
Gets all UrlDevices stored in the collection . 
creates a JSON object that represents this data structure . 
returns a list of PwPairs sorted by rank in descending order . 
returns a list of PwPairs sorted by rank in descending order , including only the top-ranked pair from each group . 
returns a list of all pairs of valid URL devices and corresponding URL metadata . 
returns the top-ranked PwPair for a given group ID . 
sets the URL , the API version , the API Key for making PWS requests . 
sets the URL , the API version , the API Key for making PWS requests . 
gets the UrlDevice represented in the pair . 
gets the PwsResult represented in the pair . 
sets the URL , the API version , the API Key for making PWS requests . 
sets the URL , the API version , the API Key for making PWS requests . 
Sets a group ID . 
Sets a group ID . 
Sets a description . 
Sets a group ID . 
Sets a JSONObject to be the base extra data . 
Creates a PWSResult from data provided to the builder . 
gets extra boolean value . 
gets extra boolean value . 
gets extra boolean value . 
gets extra int value . 
gets extra int value . 
gets extra int value . 
gets extra long value . 
gets extra long value . 
gets extra long value . 
gets extra double value . 
gets extra double value . 
gets extra double value . 
gets extra String value . 
gets extra String value . 
gets extra String value . 
gets extra JSONArray value . 
gets extra JSONArray value . 
gets extra JSONObject value . 
gets extra JSONObject value . 
creates a JSON object that represents this data structure . 
Sets a JSONObject to be the base extra data . 
Creates a UrlDevice from data provided to the builder . 
gets extra boolean value . 
gets extra boolean value . 
gets extra boolean value . 
gets extra int value . 
gets extra int value . 
gets extra int value . 
gets extra long value . 
gets extra long value . 
gets extra long value . 
gets extra double value . 
gets extra double value . 
gets extra double value . 
gets extra String value . 
gets extra String value . 
gets extra String value . 
gets extra JSONArray value . 
gets extra JSONArray value . 
gets extra JSONObject value . 
gets extra JSONObject value . 
creates a JSON object that represents this data structure . 
returns a hash code for this SimpleUrlDevice . 
Gets the group ID for this group . 
adds a PwPair to this group . 
gets the top-ranked PwPair in this group . 
Returns the current size of the cache in bytes . 
Returns the maximum size in bytes that the cache can hold . 
Returns the number of values that have been evicted . 
Returns an opaque token representing the current position in the stream . 
sets the target image Uri . 
sets the target image resource ID . 
sets the stable key to be used instead of the URI or resource ID when caching . 
adds a custom transformation to be applied to the image . 
adds a list of custom transformations to be applied to the image . 
Sets the stable key for this request to be used instead of the URI or resource ID when caching . 
sets the priority of this request . 
adds a list of custom transformations to be applied to the image . 
sets inPurgeable and inInputShareable when decoding . 
creates the request optionally passing it through the request transformer . 
Returns a unique key for the transformation , used for caching purposes . 
adds a new comment and returns the adapter position that it was inserted at . 
Adds a new data source to the list of filters . 
Sets the radius that reveals start from . 
Sets the radius that conceals end at . 
Returns the drawable used as the foreground of this view . 
Returns the drawable used as the foreground of this layout . 
Returns the drawable used as the foreground of this view . 
sets the value indicating the current scroll value . 
sets the title to display @param text 
Creates or retrieves an exiting CustomTabsSession @return a CustomTabsSession 
Creates an approximated cubic gradient using a multi-stop linear gradient .  
sets or reset `` raw mode '' . 
Returns the name of the sub command @return 
Returns a one-liner of the function of this command @return 
Returns a detailed explanation of the command usage Usage may have multiple lines , indentation of 4 spaces recommended . 
adds test classes from a potentially comma separated list @param classes 
adds test classes from jars passed on the command line . 
gets command line parameters . 
Returns the node 's bounds clipped to the size of the display @param node @param width pixel width of the display @param height pixel height of the display @return null if node is null , else a Rect containing visible bounds 
Sets the timeout for waiting for the user interface to go into an idle state before starting a uiautomator action .  
Gets the current timeout used for waiting for the user interface to go into an idle state .  
Sets the timeout for waiting for a widget to become visible in the user interface so that it can be matched by a selector . 
Gets the current timeout for waiting for a widget to become visible in the user interface so that it can be matched by a selector . 
Sets the timeout for waiting for an acknowledgement of an uiautomtor scroll swipe action .  
Gets the timeout for waiting for an acknowledgement of an uiautomtor scroll swipe action .  
Sets the timeout for waiting for an acknowledgment of generic uiautomator actions , such as clicks , text setting , and menu presses .  
Gets the current timeout for waiting for an acknowledgment of generic uiautomator actions , such as clicks , text setting , and menu presses .  
Sets a delay between key presses when injecting text input .  
Gets the current delay between key presses when injecting text input .  
Returns the last text selection reported by accessibility event TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY . 
Returns 0 for all other cases . 
Gets the root node from accessibility and if it fails to gets one it will retry every 250ms for up to 1000ms . 
Returns a reference to an instance of the tracer . 
Sets where the trace output will go . 
Sets the name of the log file where tracing output will be written if the tracer is sets to write to a file . 
Gets the width of the display , in pixels . 
Gets the height of the display , in pixels . 
Creates a new UiObject for a child view that is under the present UiObject . 
Creates a new UiObject for a sibling view or a child of the sibling view , relative to the present UiObject . 
Sets the text in an editable field , after clearing the field 's content . 
Returns the visible bounds of the view . 
Returns the view 's bounds property .  
sets the direction of swipes to be vertical when performing scroll actions . 
sets the direction of swipes to be horizontal when performing scroll actions . 
Sets the maximum number of scrolls allowed when performing a scroll action in search of a child element .  
Gets the maximum number of scrolls allowed when performing a scroll action in search of a child element .  
Returns the percentage of a widget 's size that 's considered as a no-touch zone when swiping . 
Sets the percentage of a widget 's size that 's considered as no-touch zone when swiping . 
sets the search criteria to match the visible text displayed in a layout element , using a regular expression . 
sets the search criteria to match visible text in a widget that is prefixed by the text parameter . 
sets the search criteria to match the visible text in a widget where the visible text must contain the string in your input argument . 
sets the search criteria to match the class property for a widget , using a regular expression . 
sets the search criteria to match the content-description property for a widget . 
sets the search criteria to match the content-description property for a widget . 
sets the search criteria to match the content-description property for a widget . 
sets the search criteria to match the content-description property for a widget . 
sets the search criteria to match the given resource ID . 
sets the search criteria to match the resource ID of the widget , using a regular expression . 
sets the search criteria to match the widget by its node index in the layout hierarchy . 
sets the search criteria to match the widget by its instance number . 
sets the search criteria to match widgets that are enabled . 
sets the search criteria to match widgets that have focus . 
sets the search criteria to match widgets that are focusable . 
sets the search criteria to match widgets that are scrollable . 
sets the search criteria to match widgets that are currently selected . 
sets the search criteria to match widgets that are clickable . 
sets the search criteria to match widgets that are checkable . 
sets the search criteria to match widgets that are long-clickable . 
Adds a child UiSelector criteria to this selector . 
Adds a child UiSelector criteria to this selector which is used to start search from the parent widget . 
sets the search criteria to match the package name of the application that contains the widget . 
sets the search criteria to match the package name of the application that contains the widget . 
Returns the deepest selector in the chain of possible sub selectors . 
Adds class to test by providing class name in string . 
gets command line parameters . 
Returns an object which determines if the class and its methods should be accepted into the test suite . 
Gets the windows on the screen . 
Gets the root node in the currently active window if this service can retrieve window content . 
Returns the magnification controller , which may be used to query and modify the state of display magnification .  
Adds the specified change listener to the list of magnification change listeners . 
Adds the specified change listener to the list of magnification change listeners . 
Removes all instances of the specified change listener from the list of magnification change listeners . 
Returns the current magnification scale . 
Returns the unscaled screen-relative X coordinate of the focal center of the magnified region . 
Returns the unscaled screen-relative Y coordinate of the focal center of the magnified region . 
Returns the region of the screen currently active for magnification . 
Sets the magnification scale . 
Sets the center of the magnified viewport . 
Returns the soft keyboard controller , which may be used to query and modify the soft keyboard show mode . 
Adds the specified change listener to the list of show mode change listeners . 
Adds the specified change listener to the list of soft keyboard show mode change listeners . 
Removes all instances of the specified change listener from the list of magnification change listeners . 
Returns the show mode of the soft keyboard . 
Sets the soft keyboard show mode . 
Find the view that has the specified focus type . 
Returns the bit mask of capabilities this accessibility service has such as being able to retrieve the active window content , etc. . 
Sets the bit mask of capabilities this accessibility service has such as being able to retrieve the active window content , etc. . 
Gets the non-localized description of the accessibility service . 
Returns the string representation of a feedback type . 
Returns the string representation of a flag . 
Returns the string representation of a capability . 
gets the upper limit for the number of strokes a gesture may contain . 
gets the upper limit on a gesture 's duration . 
gets the number of stroke in the gesture . 
gets the points that correspond to a particular moment in time . 
adds a stroke to the gesture description . 
gets the stroke 's start time @return the start time for this stroke . 
gets the stroke 's duration @return the duration for this stroke 
Returns a Bundle that contains the Intent of the activity that can be used to edit the properties . 
Adds an account of the specified accountType . 
Gets an authtoken for an account . 
Returns a Bundle that contains whatever is required to clone the account on a different user . 
Creates an account based on credentials provided by the authenticator instance of another user on the device , who has chosen to share the account with this user . 
sets the result that is to be sent as the result of the request that caused this Activity to be launched . 
Gets an AccountManager instance associated with a Context . 
Gets the saved password associated with the account .  
Gets the user data named by `` key '' associated with the account .  
Returns the list of accounts that the calling package is authorized to use , particularly for shared accounts . 
Returns the accounts visible to the specified package , in an environment where some apps are not authorized to view all accounts . 
gets the user-friendly label associated with an authenticator 's auth token . 
Adds an account directly to the AccountManager .  
Removes an account from the AccountManager .  
Removes an account from the AccountManager .  
Removes an account directly .  
Removes an auth token from the AccountManager 's cache .  
Gets an auth token from the AccountManager 's cache .  
Sets or forgets a saved password .  
Sets one userdata key for an account .  
Adds an auth token to the AccountManager cache for an account .   
Gets an auth token of the specified type for a particular account , prompting the user for credentials if necessary .  
Gets an auth token of the specified type for a particular account , optionally raising a notification if the user must enter credentials . 
Gets an auth token of the specified type for a particular account , optionally raising a notification if the user must enter credentials .  
Adds shared accounts from a parent user to a secondary user . 
Removes the shared account . 
Returns <tt> true </tt> if this task was cancelled before it completed normally . 
Returns <tt> true </tt> if this task completed . 
Returns the hashcode of the type only . 
returns the result and finish this activity . 
sets a theme which does not show label , which effectively makes the activity invisible . 
creates a list of Account objects for each account that is acceptable . 
returns a sets of account types specified by the intent as well as supported by the AccountManager . 
Returns a sets of whitelisted accounts given by the intent or null if none specified by the intent . 
Removes the given callback from the list , so it will no longer be called for frame related timing . 
removes the callbacks from mDelayedCallbackStartTime once they have passed the initial delay so that they can start getting frame callbacks . 
returns the number of callbacks that have registered for frame callbacks . 
Returns whether this animator is currently in a paused state . 
Sets the duration of the animation . 
Gets the duration of the animation . 
Gets the total duration of the animation , accounting for animation sequences , start delay , and repeating . 
Returns the timing interpolator that this animation uses . 
Returns whether this Animator has been started and not yet ended . 
Adds a listener to the sets of listeners that are sent events through the life of an animation , such as start , repeat , and end . 
Removes a listener from the sets listening to this animation . 
Adds a pause listener to this animator . 
Removes a pause listener from the sets listening to this animation . 
returns a mask of the configuration parameters for which this animator may change , requiring that it should be re-created from Resources . 
sets a mask of the configuration parameters for which this animator may change , requiring that it be re-created from resource . 
Sets the changing configurations value to the union of the current changing configurations and the provided configs .  
Sets the target object whose property will be animated by this animation . 
Creates a new animation whose parameters come from the specified context and attributes sets . 
Sets up this AnimatorSet to play all of the supplied animations at the same time . 
Sets up this AnimatorSet to play all of the supplied animations at the same time . 
Sets up this AnimatorSet to play each of the supplied animations when the previous animation ends . 
Sets up this AnimatorSet to play each of the supplied animations when the previous animation ends . 
Returns the current list of child Animator objects controlled by this AnimatorSet . 
Returns true if any of the child animations of this AnimatorSet have been started and have not yet ended . 
Gets the length of each of the child animations of this AnimatorSet . 
Sets the length of each of the current child animations of this AnimatorSet . 
Returns the inverse of this converter , where the from and to classes are reversed . 
Gets the value for this Keyframe . 
Sets the value for this Keyframe . 
Gets the time for this keyframe , as a fraction of the overall animation duration . 
Sets the time for this keyframe , as a fraction of the overall animation duration . 
Gets the optional interpolator for this Keyframe . 
Sets the optional interpolator for this Keyframe . 
Gets the type of keyframe . 
Sets the TypeEvaluator to be used when calculating animated values . 
Sets the TypeEvaluator to be used when calculating animated values . 
Sets the duration to be used by all animations of this transition object . 
Returns whether the specified transitionType is enabled for this LayoutTransition object . 
Sets the start delay on one of the animation objects used by this transition . 
Gets the start delay on one of the animation objects used by this transition . 
Sets the duration on one of the animation objects used by this transition . 
Gets the duration on one of the animation objects used by this transition . 
Sets the length of time to delay between starting each animation during one of the change animations . 
Gets the length of time to delay between starting each animation during one of the change animations . 
Sets the interpolator on one of the animation objects used by this transition . 
Gets the interpolator on one of the animation objects used by this transition . 
Sets the animation used during one of the transition types that may run . 
Gets the animation used during one of the transition types that may run . 
Returns true if animations are running which animate layout-related properties . 
Returns true if any of the animations in this transition are currently running . 
adds a listener that will be called when the bounds of the view change due to layout processing . 
removes a listener for layout changes . 
Gets the current list of listeners for layout changes . 
Sets the name of the property that will be animated . 
Sets the property that will be animated . 
Gets the name of the property that will be animated . 
Sets the length of the animation . 
Returns a FloatKeyframes for the X component of the Path . 
Returns a FloatKeyframes for the Y component of the Path . 
Returns an IntKeyframes for the X component of the Path . 
Returns an IntKeyframeSet for the Y component of the Path . 
sets the animated values for this object to this sets of ints . 
sets the animated values for this object to this sets of floats . 
sets the animated values for this object to this sets of Keyframes . 
sets the animated values for this object to this sets of Objects . 
Sets the converter to convert from the values type to the setter 's parameter type . 
Returns the setter or getter requested . 
Sets the name of the property that will be animated . 
Sets the property that will be animated . 
Gets the name of the property that will be animated . 
returns a mask of the configuration parameters for which this animator may change , requiring that it be re-created . 
sets a mask of the configuration parameters for which this animator may change , requiring that it should be recreated from resources instead of being cloned . 
Sets the changing configurations value to the union of the current changing configurations and the provided configs .  
Sets a listener that is sent update events throughout the life of an animation . 
Returns the target converted type . 
Returns the source conversion type . 
Sets int values that will be animated between . 
Sets float values that will be animated between . 
Sets the values to animate between for this animation . 
Sets the values , per property , being animated between . 
Returns the values that this ValueAnimator animates between . 
Sets the length of the animation . 
Gets the length of the animation . 
Sets the position of the animation to the specified point in time . 
Sets the position of the animation to the specified fraction . 
Gets the current position of the animation in time , which is equal to the current time minus the time that the animation started . 
Sets how many times the animation should be repeated . 
Adds a listener to the sets of listeners that are sent update events through the life of an animation . 
Removes all listeners from the sets listening to frame updates for this animation . 
Removes a listener from the sets listening to frame updates for this animation . 
Returns the timing interpolator that this ValueAnimator uses . 
Returns the name of this animator for debugging purposes . 
Returns the current animation fraction , which is the elapsed/interpolated fraction used in the most recent frame update on the animation . 
returns the number of animations currently running .  
sets the action bar into custom navigation mode , supplying a view for custom navigation . 
sets the action bar into custom navigation mode , supplying a view for custom navigation . 
sets the action bar into custom navigation mode , supplying a view for custom navigation . 
sets the icon to display in the ` home ' section of the action bar . 
sets the icon to display in the ` home ' section of the action bar . 
sets the logo to display in the ` home ' section of the action bar . 
sets the logo to display in the ` home ' section of the action bar . 
sets the adapter and navigation callback for list navigation mode . 
sets the selected navigation item in list or tabbed navigation modes . 
gets the position of the selected navigation item in list or tabbed navigation modes . 
gets the number of navigation items present in the current navigation mode . 
sets the action bar 's title . 
sets the action bar 's title . 
sets the action bar 's subtitle . sets to null to disable the subtitle entirely . 
sets the action bar 's subtitle . 
sets display options .  
sets selected display options .  
sets whether to display the activity logo rather than the activity icon .  
sets whether to include the application home affordance in the action bar .  
sets whether home should be displayed as an `` up '' affordance . sets this to true if selecting `` home '' returns up by a single level in your UI rather than back to the top level or front page .  
sets whether an activity title/subtitle should be displayed .  
sets whether a custom view should be displayed , if sets .  
sets the ActionBar 's background . 
sets the ActionBar 's stacked background . 
sets the ActionBar 's split background . 
Returns the current ActionBar title in standard mode . 
Returns the current ActionBar subtitle in standard mode . 
Returns the current navigation mode . 
sets the current navigation mode . 
adds a tab for use in tabbed navigation mode . 
adds a tab for use in tabbed navigation mode . 
adds a tab for use in tabbed navigation mode . 
adds a tab for use in tabbed navigation mode . 
removes a tab from the action bar . 
removes a tab from the action bar . 
removes all tabs from the action bar and deselect the current tab . 
Returns the currently selected tab if in tabbed navigation mode and there is at least one tab present . 
Returns the tab at the specified index . 
Returns the number of tabs currently registered with the action bar . 
adds a listener that will respond to menu visibility change events . 
removes a menu visibility listener . 
Returns true if the Title field has been truncated during layout for lack of available space . 
sets an alternate description for the Home/Up action , when enabled .  
sets an alternate description for the Home/Up action , when enabled .  
returns the current vertical offset of the action bar . 
sets the current hide offset of the action bar . 
sets the Z-axis elevation of the action bar in pixels . 
gets the Z-axis elevation of the action bar in pixels . 
returns the current position of this tab in the action bar . 
returns the icon associated with this tab . 
returns the text of this tab . 
sets the icon displayed on this tab . 
sets the icon displayed on this tab . 
sets the text displayed on this tab . 
sets the text displayed on this tab . 
sets a custom view to be used for this tab . 
sets a custom view to be used for this tab . 
sets a description of this tab 's content for use in accessibility support . 
sets a description of this tab 's content for use in accessibility support . 
Gets a brief description of this tab 's content for use in accessibility support . 
returns the intent that started this activity . 
returns the application that owns this activity . 
returns the parent activity if this view is an embedded child . 
returns the LoaderManager for this activity , creating it if needed . 
Returns true if the activity is currently in multi-window mode . 
Returns true if the activity is currently in picture-in-picture mode . 
returns the FragmentManager for interacting with fragments associated with this activity . 
Creates a new ActionBar , locates the inflated ActionBarView , initializes the ActionBar with the view , and sets mActionBar . 
sets the activity content from a layout resource . 
sets the activity content to an explicit view . 
sets the activity content to an explicit view . 
adds an additional content view to the activity . 
Sets whether this activity is finished when touched outside its window 's bounds . 
Returns true if this activity 's <em> main </em> window currently has window focus . 
Returns the current stack Id for the window .  
Creates an exception to throw if a user passed in a dialog id that is unexpected . 
Removes any internal references to a dialog managed by this Activity . 
Gets whether you should show UI with rationale for requesting a permission . 
returns information about who launched this activity . 
returns the name of the package that invoked this activity . 
returns the name of the activity that invoked this activity . 
returns the current requested orientation of the activity . 
returns the identifier of the task this activity is in . 
returns whether this activity is the root of a task . 
Returns class name for this activity with the package prefix removed . 
Returns complete component name of this activity . 
Sets information describing the task with this activity for presentation inside the Recents System UI . 
Sets the visibility of the progress bar in the title . 
Sets the visibility of the indeterminate progress bar in the title . 
Sets the progress for the progress bars in the title . 
Sets the secondary progress for the progress bar in the title . 
Gets the suggested audio stream whose volume should be changed by the hardware volume controls . 
Gets the controller which should be receiving media key and volume events while this activity is in the foreground . 
Returns true if the app should recreate the task when navigating ` up ' from this activity by using targetIntent . 
sets whether the caption should displayed directly on the content rather than push it down .  
Returns a HashMap mapping from child activity ids to the returns values from calls to their onRetainNonConfigurationInstance methods . 
Returns true if the activities contained in the input stack display a shadow around their border . 
Returns true if the activities contained in the input stack display a decor view . 
Returns true if the tasks contained in the stack can be resized independently of the stack . 
Returns true if the task bounds should persist across power cycles . 
Returns true if dynamic stacks are allowed to be visible behind the input stack . 
Returns true if we try to maintain focus in the current stack when the top activity finishes . 
Returns true if Stack size is affected by the docked stack changing size . 
Returns true if the size of tasks in the input stack are affected by the docked stack changing size . 
Returns true if the windows of tasks being moved to the target stack from the source stack should be replaced , meaning that window manager will keep the old window around until the new is ready . 
returns whether a stackId is a stack containing floating windows . 
Returns true if animation specs should be constructed for app transition that moves the task to the specified stack . 
Returns true if the windows in the stack can receive input keys . 
Returns true if the stack can be visible above lockscreen . 
Returns true if the top task in the task is allowed to returns home when finished and there are other tasks in the stack . 
Returns true if any visible windows belonging to apps in this stack should be kept on screen when the app is killed due to something like the low memory killer . 
Returns true if the backdrop on the client side should match the frame of the window . Returns false , if the backdrop should be fullscreen . 
Returns true if the input stack id should only be present on a device that supports multi-window mode . 
Returns true if this stack may be scaled without resizing , and windows within may need to be configured as such . 
Returns true if windows in this stack should be given move animations by default . 
returns the approximate per-application memory class of the current device . 
returns the approximate per-application memory class of the current device when an application is running with a large heap . 
Returns true if this is a low-RAM device . 
returns the maximum number of recents entries that we will maintain and show .  
returns the default limit on the number of recents that an app can make .  
returns the maximum limit on the number of recents that an app can make .  
Returns true if the system supports at least one form of multi-window .  
Sets the label for this task description .  
Sets the primary color for this task description .  
Sets the background color for this task description .  
Sets the icon for this task description .  
returns a list of the tasks that the user has recently launched , with the most recent being first and older ones after in order .  
gets the list of tasks associated with the calling application . 
returns a list of the tasks that are currently running , with the most recent being first and older ones after in order . 
returns a list of the services that are currently running . 
Returns a PendingIntent you can start to show a control panel for the given running service . 
returns general information about the memory state of the system .  
Returns a list of any processes that are currently in an error condition . 
Returns a list of application processes installed on external media that are running on the device .  
Sets the memory trim mode for a process and schedules a memory trim operation .  
Returns a list of application processes that are running on the device . 
returns the importance of a given package name , based on the processes that are currently running .  
returns global memory state information for the calling process . 
returns information about the memory usage of one or more processes . 
gets the device configuration attributes . 
gets the preferred density of icons for the launcher . 
gets the preferred launcher icon size . 
Returns `` true '' if the user interface is currently being messed with by a monkey . 
Returns `` true '' if device is running in a test harness . 
Gets the userId of the current foreground user .  
returns whether the given user is actively running .  
returns whether currently in lock task mode . 
returns the current state of task locking . 
gets the RecentTaskInfo associated with this task . 
Returns home activity for the specified user . 
Returns the top activity from each of the currently visible stacks . 
creates an ActivityOptions specifying a custom animation to run when the activity is displayed . 
creates an ActivityOptions specifying a custom animation to run when the activity is displayed .  
Creates an ActivityOptions specifying a custom animation to run in place on an existing activity .  
creates an ActivityOptions specifying an animation where the new activity is scaled from a small originating area of the screen to its final full representation . 
creates an ActivityOptions specifying an animation where the new activity is revealed from a small originating area of the screen to its final full representation . 
creates an ActivityOptions specifying an animation where a thumbnail is scaled from a given position to the new activity window that is being started . 
creates an ActivityOptions specifying an animation where a thumbnail is scaled from a given position to the new activity window that is being started .  
creates an ActivityOptions specifying an animation where an activity window is scaled from a given position to a thumbnail at a specified location .  
creates an ActivityOptions specifying an animation where the new activity window and a thumbnail is aspect-scaled to a new location .  
creates an ActivityOptions specifying an animation where the new activity window and a thumbnail is aspect-scaled to a new location .  
creates an ActivityOptions to transition between Activities using cross-Activity scene animations . 
creates an ActivityOptions to transition between Activities using cross-Activity scene animations . 
creates a basic ActivityOptions that has no special animation associated with it . 
sets to null explicitly for fullscreen . 
Returns the bounds that should be used to launch the activity . 
Sets the task the activity will be launched in .  
sets 's whether the activity launched with this option should be a task overlay .  
returns the filtered options only meant to be seen by the target activity itself 
Creates the top level resources for the given package . 
returns the Intent that 's currently being handled by a BroadcastReceiver on this thread , or null if none .  
Creates a new Configuration only if override would modify base . 
Returns the correct library directory for the current ABI . 
Returns true when view is nested in any of the values of sharedElements . 
Sets the transition epicenter to the position of the first shared element . 
sets the callback to use to report certain state changes . 
returns the class name of the receiver component that implements this device admin . 
returns the raw information about the receiver implementing this device admin . 
returns the component of the receiver that implements this device admin . 
Returns whether this device admin would like to be visible to the user , even when it is not enabled . 
returns true if the device admin has requested that it be able to use the given policy control . 
returns the XML tag name for the given policy identifier . 
returns true if the given administrator component is currently being removed for the user .  
returns a list of all currently active device administrators ' component names . 
removes a current administration component . 
Returns true if an administrator has been granted a particular device policy . 
Returns true if the Profile Challenge is available to use for the given profile user .  
gets the password expiration timeout for the given admin . 
gets the current password expiration time for a particular admin or all admins that sets retrictions on this user and its participating profiles . 
returns the maximum password length that the device supports for a particular password quality . 
Returns the profile with the smallest maximum failed passwords for wipe , for the given user . 
Returns 0 if there are no restrictions . 
Returns maximum time to lock that applied by all profiles in this user .  
sets a network-independent global HTTP proxy . 
Returns the component name setting the global proxy .  
Returns all CA certificates that are currently trusted , excluding system CA certificates . 
Returns whether this certificate is installed as a trusted CA . 
Sets the given package as the device owner . 
Sets the given package as the device owner . 
Returns the device owner package name , only if it 's running on the calling user .  
Returns the device owner name .  
Sets the given component as the profile owner of the given user profile . 
Sets the device owner information to be shown on the lock screen . 
Sets the enabled state of the profile . 
Sets the name of the profile . 
Sets the application restrictions for a given target application running in the calling user . 
Sets a list of configuration features to enable for a TrustAgent component . 
Returns the list of permitted accessibility services sets by this device or profile owner . 
Returns the list of accessibility services permitted by the device or profiles owners of this user .  
Returns the list of permitted input methods sets by this device or profile owner . 
Returns the list of input methods permitted by the device or profiles owners of the current user .  
Gets the array of accounts for which account management is disabled by the profile owner . 
Sets which packages may enter lock task mode . 
Returns the current runtime permission policy sets by the device or profile owner . 
Sets the grant state of a runtime permission for a specific application . 
Returns the current grant state of a runtime permission for a specific application . 
Returns if provisioning a managed profile or device is possible or not . 
returns if this user is a managed profile of another user . 
returns if this user is a system-only user . 
returns whether security logging is enabled or not by the device owner . 
Sets the color used for customization . 
Returns whether this user/profile is affiliated with the device .  
removes a test admin synchronously without sending it a broadcast about being removed .  
Gets the packages whose widget providers are white-listed to be available in the parent user . 
Adds a listener for changes in the white-listed packages to show cross-profile app widgets . 
Creates an intent to show the admin support dialog to let the user know that the package is suspended by the admin . 
Returns if security logging is enabled .  
Returns the timestamp in nano seconds when this event was logged . 
Returns the tag of this log entry , which specifies entry 's semantics . 
Returns the payload contained in this log . 
creates a policy object and sets it to install update automatically as soon as one is available . 
creates a policy object and sets it to : new system update will only be installed automatically when the system clock is inside a daily maintenance window . 
creates a policy object and sets it to block installation for a maximum period of 30 days . 
Returns the type of system update policy . 
gets the start of the maintenance window . 
gets the end of the maintenance window . 
returns if this object represents a valid policy .  
sets the system wall clock time . 
Sets the system 's persistent default time zone . 
Gets information about the next alarm clock currently scheduled . 
Gets information about the next alarm clock currently scheduled . 
Returns the time at which the alarm is going to trigger . 
Returns an intent that can be used to show or edit details of the alarm clock in the application that scheduled it .  
Gets one of the buttons used in the dialog . 
Gets the list view used in the dialog . 
sets the view to display in that dialog . 
sets the view to display in that dialog , specifying the spacing to appear around that view . 
sets a message to be sent when a button is pressed . 
sets a listener to be invoked when the positive button of the dialog is pressed . 
sets a listener to be invoked when button 1 of the dialog is pressed . 
sets a listener to be invoked when button 2 of the dialog is pressed . 
sets a listener to be invoked when button 3 of the dialog is pressed . 
sets resId to 0 if you do n't want an icon . 
sets an icon as supplied by a theme attribute . 
sets the title using the given resource id . 
sets the message to display using the given resource id . 
sets the message to display . 
sets an icon as supplied by a theme attribute . 
sets a listener to be invoked when the positive button of the dialog is pressed . 
sets a listener to be invoked when the positive button of the dialog is pressed . 
sets a listener to be invoked when the negative button of the dialog is pressed . 
sets a listener to be invoked when the negative button of the dialog is pressed . 
sets a listener to be invoked when the neutral button of the dialog is pressed . 
sets a listener to be invoked when the neutral button of the dialog is pressed . 
Sets whether the dialog is cancelable or not . 
Sets the callback that will be called if the dialog is canceled .  
Sets the callback that will be called when the dialog is dismissed for any reason . 
Sets the callback that will be called if a key is dispatched to the dialog . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
sets a list of items to be displayed in the dialog as the content , you will be notified of the selected item via the supplied listener . 
Sets a listener to be invoked when an item in the list is selected . 
sets a custom view resource to be the contents of the Dialog . 
Sets a custom view to be the contents of the alert dialog . 
Sets a custom view to be the contents of the alert dialog and specifies additional padding around that view . 
Sets the alert dialog to use the inverse background , regardless of what the contents is . 
returns the first Application object made in the process . 
returns the package name of the first . 
returns the raw interface to the package manager . 
Gets the value of an integer core setting . 
returns activity in receiverPackage that handles ACTION_APP_ERROR . 
Adds a new path the classpath of the given loader . 
Sets given app op in the specified mode for app ops in the UID .  
Sets given app op in the specified mode for app ops in the UID .  
sets a non-persisted restriction on an audio operation at a stream-level .  
Gets the app op name associated with a given permission . 
Sets the Intent associated with the content , describing the current top-level context of the activity . 
Sets optional structured data regarding the content being viewed . 
sets a web URI associated with the current data being shown to the user . 
returns Bundle for extra vendor-specific data that can be modified and examined . 
Returns the left edge of the window , in pixels , relative to the left edge of the screen . 
Returns the top edge of the window , in pixels , relative to the top edge of the screen . 
Returns the total width of the window in pixels . 
Returns the total height of the window in pixels . 
Returns the title associated with the window , if it has one . 
Returns the left edge of this view , in pixels , relative to the left edge of its parent . 
Returns the top edge of this view , in pixels , relative to the top edge of its parent . 
Returns the width of this view , in pixels . 
Returns the height of this view , in pixels . 
Returns the transformation that has been applied to this view , such as a translation or scaling . Returns null if there is no transformation applied to the view . 
Returns true if assist data has been blocked starting at this node in the hierarchy . 
Returns true if this node is in an enabled state . 
Returns true if this node is clickable by the user . 
Returns true if this node can take input focus . 
Returns true if this node currently had input focus at the time that the structure was collected . 
Returns true if this node currently had accessibility focus at the time that the structure was collected . 
Returns true if this node represents something that is checkable by the user . 
Returns true if this node is currently in a checked state . 
Returns true if this node has currently been selected by the user . 
Returns true if this node has currently been activated by the user . 
Returns true if this node is something the user can perform a long click/press on . 
Returns true if this node is something the user can perform a context click on . 
Returns the class name of the node 's implementation , indicating its behavior . 
Returns any content description associated with the node , which semantically describes its purpose for accessibility and other uses . 
Returns any text associated with the node that is displayed to the user , or null if there is none . 
returns additional hint text associated with the node ; this is typically used with a node that takes user input , describing to the user what the input means . 
returns a Bundle containing optional vendor-specific extension information . 
returns the number of children this node has . 
returns the activity this AssistStructure came from . 
returns the number of window contents that have been collected in this assist data . 
returns one of the windows in the assist data . 
Returns the representation of the state that causes this rule to become active . 
Returns the interruption filter that is applied when this rule is active . 
Returns the name of this rule . 
Returns whether this rule is enabled . 
Returns the time this rule was created , represented as milliseconds since the epoch . 
Sets the representation of the state that causes this rule to become active . 
Sets the interruption filter that is applied when this rule is active . 
Sets the name of this rule . 
adds a helper for a given data subset to the agent 's configuration . 
gets the sets of all backups currently available over this transport . 
gets the identifying token of the backup sets currently being stored from this device . 
gets the package name of the next application with data in the backup store , plus a description of the structure of the restored archive : either TYPE_KEY_VALUE for an original-API key/value dataset , or TYPE_FULL_STREAM for a tarball-type archive stream . 
Returns null if inflation failed 
sets a duration for which the system should temporary place an application on the power whitelist when this broadcast is being delivered to it . 
sets the minimum target API level of receivers of the broadcast .  
sets the maximum target API level of receivers of the broadcast .  
Sets the listener to call when the user sets the date . 
Sets the current date . 
Sets the Activity that owns this dialog . 
Returns the Activity that owns this Dialog . 
sets the screen content from a layout resource . 
sets the screen content to an explicit view . 
sets the screen content to an explicit view . 
adds an additional content view to the screen . 
sets the title text for this dialog 's window . 
sets the title text for this dialog 's window . 
Sets whether this dialog is canceled when touched outside the window 's bounds . 
sets a listener to be invoked when the dialog is canceled . 
sets a message to be sent when the dialog is canceled . 
sets a listener to be invoked when the dialog is dismissed . 
Sets a listener to be invoked when the dialog is shown . 
sets a message to be sent when the dialog is dismissed . 
Sets the callback that will be called if a key is dispatched to the dialog . 
sets the local destination for the downloaded file . 
adds an HTTP header to be included with the download request . 
sets the MIME content type of this download . 
sets whether this download may proceed over a roaming connection . 
sets whether this download may proceed over a metered network connection . 
sets whether this download should be displayed in the system 's Downloads UI . 
Returns the media type of the given downloaded file id , if the file was downloaded successfully . 
Returns recommended maximum size , in bytes , of downloads that may go over a mobile connection ; or null if there 's no recommended limit . 
gets the DownloadProvider URI for the download with the given ID .  
gets a parameterized SQL WHERE clause to select a bunch of IDs . 
gets the activity 's expandable list view widget . 
gets the ExpandableListAdapter associated with this activity 's ExpandableListView . 
Gets the ID of the currently selected group or child . 
Sets the selection to the specified child . 
Sets the selection to the specified group . 
creates a new instance of a Fragment with the given class name . 
returns the identifier this fragment is known by . 
gets the tag name of the fragment , if specified . 
returns the Activity this fragment is currently associated with . 
returns the host object of this fragment . 
returns a localized , styled CharSequence from the application 's package 's default string table . 
returns a localized string from the application 's package 's default string table . 
returns the FragmentManager for interacting with fragments associated with this fragment 's activity . 
returns a private FragmentManager for placing and managing Fragments inside of this Fragment . 
Returns the parent Fragment containing this Fragment . 
returns true if the fragment is currently added to its activity . 
returns true if the fragment has been explicitly detached from the UI . 
returns true if this fragment is currently being removed from its activity . 
returns true if the layout is included as part of an activity view hierarchy via the < fragment > tag . 
returns true if the fragment is in the resumed state . 
returns true if the fragment is currently visible to the user . 
returns true if the fragment has been hidden . 
sets a hint for whether this fragment 's menu should be visible .  
sets a hint to the system about whether this fragment 's UI is currently visible to the user . 
returns the LoaderManager for this fragment , creating it if needed . 
Gets whether you should show UI with rationale for requesting a permission . 
Sets the Transition that will be used to move Views into the initial scene . 
Returns the Transition that will be used to move Views into the initial scene . 
Sets the Transition that will be used to move Views out of the scene when the Fragment is preparing to be removed , hidden , or detached because of popping the back stack . 
Returns the Transition that will be used to move Views out of the scene when the Fragment is preparing to be removed , hidden , or detached because of popping the back stack . 
Sets the Transition that will be used to move Views out of the scene when the fragment is removed , hidden , or detached when not popping the back stack . 
Returns the Transition that will be used to move Views out of the scene when the fragment is removed , hidden , or detached when not popping the back stack . 
Sets the Transition that will be used to move Views in to the scene when returning due to popping a back stack . 
Returns the Transition that will be used to move Views in to the scene when returning due to popping a back stack . 
Sets the Transition that will be used for shared elements transferred into the content Scene . 
Returns the Transition that will be used for shared elements transferred into the content Scene . 
Sets the Transition that will be used for shared elements transferred back during a pop of the back stack . 
returns the Transition that will be used for shared elements transferred back during a pop of the back stack . 
Sets whether the the exit transition and enter transition overlap or not . 
Returns whether the the exit transition and enter transition overlap or not . 
Sets whether the the returns transition and reenter transition overlap or not . 
Returns whether the the returns transition and reenter transition overlap or not . 
Sets a listener for clicks on the bread crumbs . 
sets a custom title for the bread crumbs . 
Returns the number of entries before the backstack , including the title of the current fragment and any custom parent title that was sets . 
Returns the pre-entry corresponding to the index . Returns null if the specified index does n't exist or is null . 
returns the view with the given resource ID . 
Returns a fragment with the given identifier . 
Returns a list of Fragments that have opted to retain their instance across configuration changes . 
Returns a nested tree of Fragments that have opted to retain their instance across configuration changes . 
Returns a list of LoaderManagers that have opted to retain their instance across configuration changes . 
returns the object that 's currently hosting the fragment . 
returns the window animations . 
returns the unique identifier for the entry . 
returns the full bread crumb title resource identifier for the entry , or 0 if it does not have one . 
returns the short bread crumb title resource identifier for the entry , or 0 if it does not have one . 
returns the full bread crumb title for the entry , or null if it does not have one . 
returns the short bread crumb title for the entry , or null if it does not have one . 
returns the number of entries currently in the back stack . 
returns the BackStackEntry at index <var> index </var> in the back stack ; where the item on the bottom of the stack has index 0 . 
adds a new listener for changes to the fragment back stack . 
Sets the to be animated view on hardware layer during the animation . 
Adds an action to the queue of pending actions . 
adds a fragment to the activity state . 
removes an existing fragment . 
sets specific animation resources to run for the fragments that are entering and exiting in this transaction . 
sets specific animation resources to run for the fragments that are entering and exiting in this transaction . 
sets a custom style resource that will be used for resolving transit animations . 
adds this transaction to the back stack . 
Returns true if this FragmentTransaction is allowed to be added to the back stack . 
gets memory information about the calling process . 
creates and start a new thread in which to run instrumentation . 
returns the Context of this instrumentation 's package .  
Returns complete component name of this instrumentation . 
returns a Context for the target application being instrumented .  
Returns a bundle with the current results from the allocation counting . 
Returns a bundle with the counts for various binder counts for this process . 
Sets intent redelivery preferences . 
Returns null if there are none required . 
sets for a job that does not recur periodically , to specify a delay after which the job will be eligible for execution . 
sets to the interval between occurrences of this job . 
returns the Uri this trigger was created for . 
returns the flags supplied for the trigger . 
sets optional extras . 
sets some description of the kind of network type your job needs to have .  
sets deadline which is the maximum scheduling latency . 
sets up the back-off/retry policy .  
sets whether or not to persist this job across device reboots . 
returns whether the keyguard is currently locked . 
returns whether the keyguard is secured by a PIN , pattern or password or a SIM card is currently locked .  
Returns whether the device is currently locked and requires a PIN , pattern or password to unlock . 
Returns whether the device is secured with a PIN , pattern or password .  
Returns a Drawable representing the thumbnail of the specified Drawable . 
sets the currently selected list item to the specified position with the adapter 's data @param position 
gets the position of the currently selected list item . 
gets the cursor row ID of the currently selected list item . 
gets the activity 's list view widget . 
gets the ListAdapter associated with this activity 's ListView . 
sets the currently selected list item to the specified position with the adapter 's data @param position 
gets the position of the currently selected list item . 
gets the cursor row ID of the currently selected list item . 
gets the fragment 's list view widget . 
gets the ListAdapter associated with this fragment 's ListView . 
Sets application info about the system package . 
Gets the array of shared libraries that are listed as used by the given package . 
returns the Loader with the given id or null if no matching Loader is found . 
returns the most recent Loader object associated with the given ID . 
returns the Activity object associated with a string ID . 
Sets the types of routes that will be shown in the media route chooser dialog launched by this button . 
Gets the media route types for filtering the routes that the user can select using the media route chooser dialog . 
Sets the types of routes that will be shown in the media route chooser dialog launched by this button . 
Sets whether to enable showing a toast with the content descriptor of the button when the button is long pressed . 
gets the key used to group this notification into a cluster or stack with other notifications on devices which support such rendering . 
gets a sort key that orders this notification among other notifications from the same package .  
returns an icon representing the action . 
gets additional metadata carried around with this Action . 
gets the list of inputs to be collected from the user when this action is sent . 
gets the metadata Bundle used by this Builder . 
adds an input to be collected from the user when this action is sent . 
sets whether this action is available when the wearable device is not connected to a companion device . 
gets whether this action is available when the wearable device is not connected to a companion device . 
sets a label to display while the wearable is preparing to automatically execute the action . 
gets the label to display while the wearable is preparing to automatically execute the action . 
sets a label to display to confirm that the action should be executed . 
gets the label to display to confirm that the action should be executed . 
sets a label to display to cancel the action . 
gets the label to display to cancel the action . 
Removes heavyweight parts of the Notification object for archival or for sending to listeners when the full contents are not necessary .  
Sets the Chronometer to count down instead of counting up . 
sets the small icon resource , which will be used to represent the notification in the status bar . 
sets the first line of text in the platform notification template . 
sets the second line of text in the platform notification template . 
sets the remote input history . 
sets the large number at the right-hand side of the notification . 
sets the progress this notification represents . 
sets the `` ticker '' text which is sent to accessibility services . 
adds a large icon to the notification content view . 
adds a large icon to the notification content view . 
sets the sound to play . 
sets the sound to play , along with a specific stream on which to play it .  
sets the vibration pattern to use .  
sets whether this is an `` ongoing '' notification . 
sets this flag if you would only like the sound , vibrate and ticker to be played if the notification is not already showing . 
sets whether or not this notification should not bridge to other devices . 
sets which notification properties will be inherited from system defaults . 
sets the priority of this notification . 
sets the notification category . 
adds a person that is relevant to this notification . 
sets this notification to be part of a group of notifications sharing the same key . 
sets this notification to be the group summary for a group of notifications . 
sets a sort key that orders this notification among other notifications from the same package .  
sets metadata for this notification . 
gets the current metadata Bundle used by this notification Builder . 
adds an action to this notification . 
adds an action to this notification . 
adds a rich notification style to be applied at build time . 
Creates a Builder from an existing notification so further changes can be made . 
sets the first line of text after the detail section in the big form of the template . 
Returns the name to be displayed for any replies sent by the user 
Sets the title to be displayed on this conversation . 
returns the title to be displayed on this conversation . 
Adds a message for display by this notification . 
Sets a binary blob of data and an associated MIME type for a message .   
gets the text to be used for this message , or the fallback text if a type and content Uri have been sets 
gets the time at which this message arrived 
gets the text used to display the contact 's name in the messaging experience 
gets the MIME type of the data pointed to by the Uri 
gets the the Uri pointing to the content of the message . 
adds a wearable action to this notification . 
Adds wearable actions to this notification . 
gets the wearable actions present on this notification . 
sets an intent to launch inside of an activity view when displaying this notification . 
gets the intent to launch inside of an activity view when displaying this notification . 
adds an additional page of content to display with this notification . 
adds additional pages of content to display with this notification . 
gets the array of additional pages of content for displaying this notification . 
sets a background image to be displayed behind the notification content . 
gets a background image to be displayed behind the notification content . 
sets an icon that goes with the content of this notification . 
gets an icon that goes with the content of this notification . 
sets the gravity that the content icon should have within the notification display . 
gets the gravity that the content icon should have within the notification display . 
sets an action from this notification 's actions to be clickable with the content of this notification . 
gets the index of the notification action , if any , that was specified as being clickable with the content of this notification . 
sets the gravity that this notification should have within the available viewport space . 
gets the gravity that this notification should have within the available viewport space . 
sets the custom height in pixels for the display of this notification 's content .  
gets the custom height in pixels for the display of this notification 's content .  
sets whether the scrolling position for the contents of this notification should start at the bottom of the contents instead of the top when the contents are too long to display within the screen . 
gets whether the scrolling position for the contents of this notification should start at the bottom of the contents instead of the top when the contents are too long to display within the screen . 
sets whether the content intent is available when the wearable device is not connected to a companion device . 
gets whether the content intent is available when the wearable device is not connected to a companion device . 
sets a hint that this notification 's icon should not be displayed . 
gets a hint that this notification 's icon should not be displayed . 
sets a visual hint that only the background image of this notification should be displayed , and other semantic content should be hidden . 
gets a visual hint that only the background image of this notification should be displayed , and other semantic content should be hidden . 
sets a hint that this notification 's background should not be clipped if possible , and should instead be resized to fully display on the screen , retaining the aspect ratio of the image . 
gets a hint that this notification 's background should not be clipped if possible , and should instead be resized to fully display on the screen , retaining the aspect ratio of the image . 
sets a hint that the screen should remain on for at least this duration when this notification is displayed on the screen . 
gets the duration , in milliseconds , that the screen should remain on for when this notification is displayed . 
Returns the dismissal id of the notification . 
Sets the accent color to use when Android Auto presents the notification . 
Gets the accent color . 
Sets the large icon of the car notification . 
Gets the large icon used in this car notification , or null if no icon has been sets . 
Sets the unread conversation in a message notification . 
Returns the unread conversation conveyed by this notification . 
Gets the list of messages conveyed by this notification . 
Gets the remote input that will be used to convey the response to a message list , or null if no such remote input exists . 
Gets the pending intent that will be triggered when the user replies to this notification . 
Gets the pending intent that Android Auto will send after it reads aloud all messages in this object 's message list . 
Gets the participants in the conversation . 
Gets the firs participant in the conversation . 
Gets the timestamp of the conversation . 
Sets the pending intent and remote input which will convey the reply to this notification . 
Sets the pending intent that will be sent once the messages in this notification are read . 
Sets the timestamp of the most recent message in an unread conversation . 
gets an array of Notification objects from a parcelable array bundle field . 
Returns AutomaticZenRules owned by the caller .  
Returns the AutomaticZenRule with the given id , if it exists and the caller has access .  Returns null if there are no zen rules that match the given id , or if the calling package does n't own the matching rule .  
Creates the given zen rule .  
Returns the user specified importance for notifications from the calling package . 
Returns whether notifications from the calling package are blocked . 
Returns true if the calling package can read/modify notification policy . 
Gets the current notification policy .  
Sets the current notification policy .  
Gets the current notification interruption filter . 
Sets the current notification interruption filter .  
returns the package name of the application that created this PendingIntent , that is the identity under which you will actually be sending the Intent . 
returns the uid of the application that created this PendingIntent , that is the identity under which you will actually be sending the Intent . 
returns the user handle of the application that created this PendingIntent , that is the user under which you will actually be sending the Intent .  
returns the Intent of this PendingIntent . 
returns descriptive tag for this PendingIntent . 
Returns a single-thread Executor shared by the entire process , creating it if necessary . 
Returns true if there is pending work to be done . 
gets the label to display to users when collecting this input . 
gets possible input choices . 
gets whether or not users can provide an arbitrary value for input . 
gets additional metadata carried around with this remote input . 
sets a label to be displayed to the user when collecting this input . 
gets the metadata Bundle used by this Builder . 
gets the remote input results bundle from an intent . 
Creates an AssetManager from the paths within the ResourcesKey . 
Find the ResourcesKey that this ResourcesImpl object is associated with . 
Gets an existing Resources object tied to this Activity , or creates one if it does n't exist or the class loader is different . 
Gets an existing Resources object if the class loader and ResourcesImpl are the same , otherwise creates a new Resources object . 
Creates base resources for an Activity . 
Gets an existing Resources object sets with a ResourcesImpl object matching the given key , or creates one if it does n't exist . 
Gets or creates a new Resources object associated with the IBinder token . 
Gets the search suggestion content provider authority . 
Gets the component name of the searchable activity . 
Gets the content provider path for obtaining search suggestions . 
Gets the selection for obtaining search suggestions . 
Gets the optional intent action for use with these suggestions . 
Gets the optional intent data for use with these suggestions . 
Gets the suggestion threshold . 
gets the context for the searchable activity . 
Creates a context for another activity . 
gets the context for the suggestions provider . 
Gets the key code that this action key info is for . 
Gets the action message to use for queries . 
Gets the action message to use for suggestions . 
Gets the name of the column to gets the suggestion action message from . 
Gets search information for the given activity . 
gets the metadata for a given activity @param context runtime context @param xml XML parser for reading attributes @param cName The component name of the searchable activity @result A completely constructed SearchableInfo , or null if insufficient XML data for it 
Gets the resource id of the hint text . 
Gets the icon id specified by the Searchable_icon meta-data entry . 
Gets the resource id of the voice search language model string . 
Gets the resource id of the voice prompt text string . 
Gets the resource id of the spoken language to recognize in voice search . 
Gets the resource id of replacement text for the `` Search '' button . 
Gets the input type as specified in the searchable attributes . 
Gets the input method options specified in the searchable attributes . 
creates the search dialog and any resources that are used for the entire lifetime of the dialog . 
sets up the search dialog @return true if search dialog launched , false if not 
Sets up the search dialog and shows it . 
Sets the search dialog to the ` working ' state , which shows a working spinner in the right hand size of the text field . 
Sets the list item selection in the AutoCompleteTextView 's ListView . 
Sets the text in the query box , updating the suggestions . 
Returns a list of installed apps that handle the global search intent .  
Gets the name of the global search activity . 
Gets the name of the web search activity .  
sets or clear the callback that will be invoked whenever the search UI is dismissed . 
sets or clear the callback that will be invoked whenever the search UI is canceled . 
Gets information about a searchable activity . 
Gets a cursor with search suggestions . 
Gets a cursor with search suggestions . 
Returns a list of the searchable activities that can be included in global search . 
Gets an intent for launching installed assistant activity , or null if not available .  
returns the application that owns this service . 
returns the communication channel to the service . 
removes this service from foreground state , allowing it to be killed if more memory is needed . 
Returns true if any changes were made 
Creates an array which is used to cache per-Context service instances . 
Gets a system service from a given context . 
Gets the name of the system-level service that is represented by the specified class . 
Sets the default tab that is the first tab highlighted . 
Sets the default tab that is the first tab highlighted . 
returns a new TaskStackBuilder for launching a fresh task stack consisting of a series of activities . 
adds a new Intent to the task stack . 
adds a new Intent with the resolved chain of parents for the target activity to the task stack . 
returns the intent at the specified index for modification . 
returns an array containing the intents added to this builder . 
Sets the current time . 
gets the flags used to connect the service . 
Find the view that has the specified focus type . 
Gets the windows on the screen . 
Sets the device rotation . 
Sets whether this UiAutomation to run in a `` monkey '' mode . 
Gets the frame statistics for a given window . 
Gets the window animation frame statistics . 
returns the current running mode type . 
Sets the night mode . 
Returns the currently configured night mode . 
Returns whether night mode is locked or not . 
gets the last time this configuration was active , measured in milliseconds since the epoch .  
gets the total time this configuration was active , measured in milliseconds . 
gets the number of times this configuration was active . 
gets the last time this package was used , measured in milliseconds since the epoch .  
gets the total time this package spent in the foreground , measured in milliseconds . 
Gets application usage stats for the given time range , aggregated by the specified interval . 
Gets the hardware configurations the device was in for the given time range , aggregated by the specified interval . 
Returns whether the specified app is currently considered inactive . 
Returns true if the app has not been used for a certain amount of time . 
Returns all of the uids for a given user where all packages associating with that uid are in the app idle state -- there are no associated apps that are not idle . 
Sets up a listener for changes to packages being accessed . 
Removes a listener that was previously added for package usage state changes . 
adds a synonym term to the option to indicate an alternative way the content may be matched . 
returns the index that was supplied in the constructor . 
sets optional extra information associated with this option . 
returns any optional extras information associated with this option , or null if there is none . 
Returns a prompt to use for voice interactions . 
Returns the number of different voice prompts . 
Returns the prompt to use for visual display . 
returns all currently active requests . 
returns any currently active request that was submitted with the given name . 
returns the class name of the service component that implements this wallpaper . 
returns the raw information about the Service implementing this wallpaper . 
returns the component of the service that implements this wallpaper . 
returns a brief summary of this wallpaper 's behavior . 
returns the class name of an activity that provides a settings UI for the wallpaper . 
Returns a drawable for the system built-in static wallpaper . 
Returns a drawable for the built-in static wallpaper of the specified type . 
gets an open , readable file descriptor to the given wallpaper image file . 
removes all internal references to the last loaded wallpaper . 
gets the ID of the current wallpaper of the given kind . 
gets the ID of the given user 's current wallpaper of the given kind .  
Gets an Intent that will launch an activity that crops the given image and sets the device 's wallpaper . 
returns whether any users are currently sets to use the wallpaper with the given resource ID . 
Returns the desired minimum width for the wallpaper . 
Returns the desired minimum height for the wallpaper . 
sets the live wallpaper .  
sets the display position of the current wallpaper within any larger space , when that wallpaper is visible behind the given window . 
Returns whether wallpapers are supported for the calling user . 
Returns whether the calling package is allowed to sets the wallpaper for the calling user . 
removes any currently sets system wallpaper , reverting to the system 's built-in wallpaper . 
removes one or more currently sets wallpapers , reverting to the system default display for each one . 
gets a appWidgetId for a host in the calling process . 
Gets a list of all the appWidgetIds that are bound to the current host 
removes all records about this host from the AppWidget manager . 
removes all records about all hosts for your package . 
creates the AppWidgetHostView for the given widget . 
sets the AppWidget that will be displayed by this view . 
Sets an executor which can be used for asynchronously inflating and applying the remoteviews .  
sets the RemoteViews to use for the specified appWidgetIds .  
gets the extras associated with a given widget instance . 
sets the RemoteViews to use for the specified appWidgetId .  
sets the RemoteViews to use for all AppWidget instances for the supplied AppWidget provider . 
Gets the AppWidget providers for the given user profile . 
returns a list of the AppWidget providers that are currently installed . 
Gets the AppWidget providers for the current user .  
Gets the AppWidget providers for the given user profile .  
gets the available info about the AppWidget . 
sets the component for a given appWidgetId .  
sets the component for a given appWidgetId .  
sets the component for a given appWidgetId . 
sets the component for a given appWidgetId .  
sets the provider for a given appWidgetId if the caller has a permission . 
gets the list of appWidgetIds that have been bound to the given AppWidget provider . 
Gets the user profile in which the provider resides . 
sets priority of the profile The device should already be paired . 
gets the priority of the profile . 
sets priority of the profile The device should already be paired . 
gets the priority of the profile . 
gets a handle to the default local Bluetooth adapter . 
returns true if Bluetooth is currently enabled and ready for use . 
gets the current state of the local Bluetooth adapter . 
Returns the hardware address of the local Bluetooth adapter . 
gets the friendly Bluetooth name of the local Bluetooth adapter . 
gets the UUIDs supported by the local Bluetooth adapter .  
sets the friendly Bluetooth name of the local Bluetooth adapter . 
gets the current Bluetooth scan mode of the local Bluetooth adapter . 
sets the Bluetooth scan mode of the local Bluetooth adapter . 
returns true if the local Bluetooth adapter is currently in the device discovery process . 
returns true if the multi advertisement is supported by the chipset @return true if Multiple Advertisement feature is supported 
Returns whether peripheral mode is supported .  
returns true if offloaded filters are supported @return true if chipset supports on-chip filtering 
returns true if offloaded scan batching is supported @return true if chipset supports on-chip scan batching 
returns true if hardware has entries available for matching beacons @return true if there are hw entries available for matching beacons 
gets the current connection state of the local Bluetooth adapter . 
gets the current connection state of a profile . 
creates a listening , secure RFCOMM Bluetooth socket .  
creates a listening , secure RFCOMM Bluetooth socket .  
creates a listening , secure RFCOMM Bluetooth socket with Service Record . 
creates a listening , insecure RFCOMM Bluetooth socket with Service Record . 
creates a listening , encrypted , RFCOMM Bluetooth socket with Service Record .  
gets the profile proxy object associated with the profile . 
Returns the sample rate in samples per second @return sample rate 
Gets the player application settings . 
Gets the metadata for the current track . 
Gets the playback state for current track . 
Sets the player app setting for current player . returns true in case setting is supported by remote , false otherwise 
gets the supported settings . 
adds a setting value . 
gets a setting value . 
Returns a string representation of this BluetoothDevice . 
Returns the hardware address of this BluetoothDevice . 
gets the friendly Bluetooth name of the remote device . 
gets the Bluetooth device type of the remote device . 
gets the Bluetooth alias of the remote device . 
sets the Bluetooth alias of the remote device . 
gets the Bluetooth alias of the remote device . 
sets the Out Of Band data for a remote device to be used later in the pairing mechanism . 
gets the bond state of the remote device . 
Returns whether there is an open connection to this device .  
Returns whether there is an open connection to this device that has been encrypted .  
gets the Bluetooth class of the remote device . 
Sets whether the phonebook access is allowed to this device .  
Sets whether the message access is allowed to this device .  
Sets whether the Sim access is allowed to this device .  
returns the remote bluetooth device this GATT client targets to @return remote bluetooth device 
Returns a list of GATT services offered by the remote device . Returns an empty list if service discovery has not yet been performed . 
Returns the desired key size .  
Adds a descriptor to this characteristic . 
Returns the service this characteristic belongs to . 
Returns the UUID of this characteristic @return UUID of this characteristic 
Returns the instance ID for this characteristic . 
Returns the properties of this characteristic . 
Returns the permissions for this characteristic . 
Gets the write type for this characteristic . 
sets the desired key size .  
Returns a list of descriptors for this characteristic . 
Returns a descriptor with a given UUID out of the list of descriptors for this characteristic . 
gets the stored value for this characteristic . 
returns the stored value of this characteristic . 
returns the stored value of this characteristic .  
returns the stored value of this characteristic .  
sets the locally stored value of this characteristic .  
sets the locally stored value of this characteristic .  
sets the locally stored value of this characteristic .  
Returns the size of a give value type . 
Returns the characteristic this descriptor belongs to . 
Returns the UUID of this descriptor . 
Returns the instance ID for this descriptor . 
Returns the permissions for this descriptor . 
Returns the UUID of this service @return UUID of this service 
adds a service to the list of services to be hosted . 
Removes a service from the list of services to be provided . 
removes all services from the list of provided services . 
Returns a list of GATT services offered by this device . Returns an empty list if no services have been added yet . 
adds an included service to this service . 
adds a characteristic to this service . 
adds an included service to the internal map .  
Returns the UUID of this service @return UUID of this service 
gets the list of included GATT services for this service . 
Returns a list of characteristics included in this service . 
Returns a characteristic with a given UUID out of the list of characteristics offered by this service . 
Returns whether the uuid of the service should be advertised .  
sets whether the service uuid should be advertised .  
sets priority of the profile The device should already be paired . 
gets the priority of the profile . 
gets battery usage hint for Bluetooth Headset service . 
gets the current audio state of the Headset . 
Sets whether audio routing is allowed .  
Returns whether audio routing is allowed .  
returns the list of connected remote devices @return list of connected devices ; empty list if nothing is connected . 
Returns list of remote devices in a particular state @param states collection of states @return list of devices that state matches the states listed in states ; empty list if nothing matches the states 
Returns state of the device @param device a remote device @return the state of connection of the device 
sets priority of the profile The device should already be paired . 
gets the priority of the profile . 
Returns list of all calls in any state . 
Returns list of current values of AG indicators . 
gets a number corresponding to last voice tag recorded on AG . 
Returns current audio state of Audio Gateway . 
Sets whether audio routing is allowed . 
Returns whether audio routing is allowed . 
gets Audio Gateway features @param device remote device @return bundle of AG features ; null if no service or AG not connected 
Sets call 's state . 
Sets call 's number . 
Sets this call as multi party call . 
Gets call 's device . 
Gets call 's Id . 
Gets call 's UUID . 
Gets call 's current state . 
Gets call 's number . 
gets the file descriptor of the main channel associated with the remote device and application configuration . 
gets the current connection state of the profile . 
gets connected devices for the health profile . 
gets a list of devices that match any of the given connection states . 
returns the data type associated with this application configuration . 
returns the name of the application configuration . 
returns the role associated with this application configuration . 
returns the channel type associated with this application configuration .  
sets priority of the profile The device should already be paired . 
gets the priority of the profile . 
returns number of bytes available before this stream will block . 
Returns -1 if the end of the stream has been reached . 
gets the default BLUETOOTH Adapter for this device . 
gets the current connection state of the profile to the remote device . 
gets connected devices for the specified profile . 
gets a list of devices that match any of the given connection states . 
gets the current state of the BluetoothMap service . 
Returns true if the specified Bluetooth device is connected . Returns false if not connected , or if this proxy object is not currently connected to the Map service . 
gets the list of connected devices . 
gets the list of devices matching specified states . 
gets connection state of device @return device connection state 
sets priority of the profile The device should already be paired . 
gets the priority of the profile . 
gets the current state of the BluetoothPbap service . 
Returns false if not connected , or if this proxy object is not currently connected to the Pbap service . 
Returns false if this proxy object is not currently connected to the Pbap service . 
gets the list of connected devices . 
gets the list of devices matching specified states . 
gets connection state of device @return device connection state 
sets priority of the profile The device should already be paired . 
gets the priority of the profile . 
gets connected devices for this specific profile . 
gets a list of devices that match any of the given connection states . 
gets the current state of the BluetoothSap service .  
Returns true if the specified Bluetooth device is connected . Returns false if not connected , or if this proxy object is not currently connected to the Sap service .  
gets the list of connected devices . 
gets the list of devices matching specified states . 
gets connection state of device @return device connection state 
sets priority of the profile The device should already be paired . 
gets the priority of the profile . 
Returns the channel on which this socket is bound .  
gets the remote device this socket is connecting , or connected , to . 
gets the input stream associated with this socket . 
gets the output stream associated with this socket . 
gets the connection status of this socket , ie , whether there is an active connection with remote device . 
gets the maximum supported Transmit packet size for the underlying transport . 
gets the maximum supported Receive packet size for the underlying transport . 
gets the type of the underlying connection . 
Returns true if ParcelUuid is present in uuidArray @param uuidArray - Array of ParcelUuids @param uuid 
Returns true if there any common ParcelUuids in uuidA and uuidB . 
Returns true if all the ParcelUuids in ParcelUuidB are present in ParcelUuidA @param uuidA - Array of ParcelUuidsA @param uuidB - Array of ParcelUuidsB 
Returns a list of service UUIDs within the advertisement that are used to identify the Bluetooth GATT services . 
Returns an array of manufacturer Id and the corresponding manufacturer specific data . 
Returns a map of 16-bit UUID and its corresponding service data . 
adds a service UUID to advertise data . 
adds service data to advertise data . 
adds manufacturer specific data . 
sets whether the device name should be included in advertise packet . 
Returns the advertise mode . 
Returns the TX power level for advertising . 
Returns whether the advertisement will indicate connectable . 
Returns the advertising time limit in milliseconds . 
sets advertise mode to control the advertising power and latency . 
sets advertise TX power level to control the transmission power level for the advertising . 
sets whether the advertisement type should be connectable or non-connectable . 
Returns the filter sets the device name field of Bluetooth advertisement data . 
Returns the filter sets on the service uuid . 
Returns the manufacturer id . 
sets filter on device name . 
sets filter on device address . 
sets filter on service uuid . 
sets filter on partial service uuid . 
sets filtering on service data . 
sets partial filter on service data . 
sets filter on on manufacturerData . 
sets filter on partial manufacture data . 
Returns the advertising flags indicating the discoverable mode and capability of the device . Returns -1 if the flag field is not sets . 
Returns a list of service UUIDs within the advertisement that are used to identify the bluetooth GATT services . 
Returns a sparse array of manufacturer identifier and its corresponding manufacturer specific data . 
Returns the manufacturer specific data associated with the manufacturer id . 
Returns a map of service UUID and its corresponding service data . 
Returns the transmission power level of the packet in dBm . 
Returns the local name of the BLE device . 
Returns raw bytes of scan record . 
Returns the remote bluetooth device identified by the bluetooth device address . 
Returns the scan record , which is a combination of advertisement and scan response . 
Returns the received signal strength in dBm . 
Returns timestamp since boot when the scan record was observed . 
Returns report delay timestamp based on the device clock . 
sets scan mode for Bluetooth LE scan . 
sets callback type for Bluetooth LE scan . 
Returns true if the callbackType is valid . 
sets scan result type for Bluetooth LE scan .  
sets report delay timestamp for Bluetooth LE scan . sets to 0 to be notified of results immediately . 
Returns the scan filter . 
Returns a list of descriptor for scan result storage . 
Sets the Temporary Key value to be used by the LE Security Manager during LE pairing .  
sets amount to throttle updates by . 
Returns immediately if there is no load operation running .  
Returns the flag indicating whether or not this receiver should abort the current broadcast . 
Returns true if the receiver is currently processing an ordered broadcast . 
Returns true if the receiver is currently processing the initial value of a sticky broadcast -- that is , the value that was last broadcast and is currently held in the sticky cache , so this is not directly the result of a broadcast right now . 
Sets the current primary clip on the clipboard . 
Returns the current primary clip on the clipboard . 
Returns a description of the current primary clip on the clipboard but not a copy of its data . 
Returns true if there is currently a primary clip on the clipboard . 
creates a new ClipData holding a URI . 
adds a new Item to the overall ClipData container . 
returns the number of items in the clip data . 
returns a single item inside of the clip data . 
returns the label for this clip . 
Returns all MIME types in the clip that match the given MIME type . 
returns the number of MIME types the clip is available in . 
returns one of the possible clip MIME types . 
adds extended data to the clip description . 
creates a new component identifier where the class name may be specified as either absolute or relative to the containing package . 
creates a new component identifier where the class name may be specified as either absolute or relative to the containing package . 
returns the package name of this component . 
returns the class name of this component . 
returns a String that unambiguously describes both the package and class names contained in the ComponentName . 
returns string representation of this class without the class 's name as a prefix . 
returns the package name of the caller that initiated the request being processed on the current thread . 
returns the name of the permission required for read-only access to this content provider . 
returns the name of the permission required for read/write access to this content provider . 
returns the path-based permissions required for read and/or write access to this content provider . 
Returns true if this instance is a temporary content provider . 
Returns the Binder object for this provider . 
Removes userId part from authority string . 
Gets the name of the content provider . 
Gets the Uri for the target of the operation . 
Returns true if the operation allows yielding the database to other transactions if the database is contended . 
Returns true if the operation represents an insertion . 
Returns true if the operation represents a deletion . 
Returns true if the operation represents an update . 
Returns true if the operation represents an assert query . 
Returns true if the operation represents an insertion , deletion , or update . 
Returns true if the operation represents an assert query . 
returns the string representation of the requested back reference . 
adds a ContentValues back reference . 
adds a back references as a selection arg . 
returns the MIME type of the given content URL . 
Returns the content provider for the given content URI .  
Returns the content provider for the given content URI if the process already has a reference on it .  
Returns the content provider for the given content URI .  
Returns null if there is no provider associated wih the uri . 
Returns null if there is no provider associated wih the uri . 
returns list of all URI permission grants that have been persisted by the calling app . 
returns list of all persisted URI permission grants that are hosted by the calling app . 
gets information about the SyncAdapters that are known to the system . 
Returns the package names of syncadapters that match a given user and authority . 
sets whether or not the provider is synced when it receives a network tickle . 
removes a periodic sync . 
removes the specified sync . 
gets the list of information about the periodic syncs for the given account and authority . 
sets whether this account/provider is syncable . 
Gets the master auto-sync setting that applies to all the providers and accounts . 
Sets the master auto-sync setting that applies to all the providers and accounts . 
Returns true if there is currently a sync operation for the given account or authority actively being processed . 
Returns a list with information about all the active syncs . 
Returns the status that matches the authority . 
returns true if the pending status is true of any matching authorities . 
removes a previously registered status change listener . 
Returns sampling percentage for a given duration . 
Adds a value to the sets . 
Adds all values from the passed in ContentValues . 
Adds a value to the sets . 
Adds a value to the sets . 
Adds a value to the sets . 
Adds a value to the sets . 
Adds a value to the sets . 
Adds a value to the sets . 
Adds a value to the sets . 
Adds a value to the sets . 
Adds a null value to the sets . 
Returns the number of values . 
removes a single value . 
Removes all values . 
Returns true if this object has the named value . 
Gets a value . 
Gets a value and converts it to a String . 
Gets a value and converts it to a Long . 
Gets a value and converts it to an Integer . 
Gets a value and converts it to a Short . 
Gets a value and converts it to a Byte . 
Gets a value and converts it to a Double . 
Gets a value and converts it to a Float . 
Gets a value and converts it to a Boolean . 
Gets a value that is a byte array . 
Returns a sets of all of the keys and values @return a sets of all of the keys and values 
Returns a sets of all of the keys @return a sets of all of the keys 
Returns a string containing a concise , human-readable description of this object . 
Returns an AssetManager instance for the application 's package . 
Returns a Resources instance for the application 's package . 
returns PackageManager instance to find global package information . 
returns a ContentResolver instance for your application 's package . 
returns the Looper for the main thread of the current process . 
returns the context of the single , global Application object of the current process . 
returns a localized , styled CharSequence from the application 's package 's default string table . 
Returns a localized string from the application 's package 's default string table . 
Returns a color associated with a particular resource ID and styled for the current theme . 
Returns a drawable object associated with a particular resource ID and styled for the current theme . 
Returns a color state list associated with a particular resource ID and styled for the current theme . 
sets the base theme for this context . 
returns the Theme object associated with this Context . 
returns a class loader you can use to retrieve classes in this package . 
returns the name of this application 's package . 
returns the name of the base context this context is derived from . 
returns the package name that should be used for app ops calls from this context . 
returns the full application info for this context 's package . 
returns the full path to this context 's primary Android package . 
returns the full path to this context 's primary Android package . 
Creates the file if it does n't already exist . 
Returns the absolute path to the directory on the filesystem where all private files belonging to this app are stored . 
Returns the absolute path to the directory on the primary shared/external storage device where the application can place persistent files it owns . 
Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place persistent files it owns . 
Returns the absolute path to the application specific cache directory on the filesystem . 
Returns the absolute path to the application specific cache directory on the filesystem designed for storing cached code . 
Returns absolute path to application-specific directory on the primary shared/external storage device where the application can place cache files it owns . 
Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place cache files it owns . 
Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place media files . 
Returns an array of strings naming the private files associated with this Context 's application package . 
creates the database file if it does n't exist . 
Creates the database file if it does n't exist . 
Returns an array of strings naming the private databases associated with this Context 's application package . 
returns the handle to a system-level service by name . 
returns the handle to a system-level service by class . 
Gets the name of the system-level service that is represented by the specified class . 
returns a new Context object for the given application name .  
gets the userId associated with this context @return user id 
returns a new Context object for the current Context but whose resources are adjusted to match the given Configuration . 
returns a new Context object for the current Context but whose resources are adjusted to match the metrics of the given Display .  
returns a new Context object for the current Context but whose storage APIs are backed by device-protected storage . 
returns a new Context object for the current Context but whose storage APIs are backed by credential-protected storage . 
Gets the display adjustments holder for this context .  
sets the base context for this ContextWrapper . 
Returns the entity that the cursor is currently pointing to . 
Returns whether there are more elements to iterate , i.e. whether the iterator is positioned in front of an element . 
Returns the next object in the iteration , i.e. returns the element in front of the iterator and advances the iterator by one position . 
Creates a new ShortcutIconResource for the specified context and resource identifier . 
creates an intent from a URI . 
returns the scheme portion of the intent 's data . 
returns the MIME data type of this intent . 
returns the MIME data type of this intent . 
returns the MIME data type of this intent , only if it will be needed for intent resolution . 
returns the sets of all categories in the intent . 
returns the specific selector associated with this Intent .  
Sets the ClassLoader that will be used when unmarshalling any Parcelable values from the extras of this Intent . 
Returns true if an extra value is associated with the given name . 
Returns true if the Intent 's extras contain a parcelled file descriptor . 
gets the bounds of the sender of this intent , in screen coordinates . 
returns the Activity component that should be used to handle this intent . 
Returns null if there are no matches .  
sets the general action to be performed . 
sets the data this intent is operating on . 
sets an explicit MIME data type . 
adds a new category to the intent . 
removes a category from an intent . 
sets a selector for this Intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds extended data to the intent . 
adds a sets of extended data to the intent . 
removes extended data from the intent . 
sets special flags controlling how this intent is handled .  
sets the bounds of the sender of this intent , in screen coordinates . 
returns the Intent that this FilterComparison represents . 
creates a new IntentFilter instance with a specified action and MIME type , where you know the MIME type is correctly formatted . 
returns the priority of this filter . 
sets whether this filter will needs to be automatically verified against its data URIs or not . 
returns if this filter will needs to be automatically verified again its data URIs or not . 
returns if this filter handle all HTTP or HTTPS data URI or not .  
returns if this filter handles HTTP or HTTPS data URIs .  
returns if this filter needs to be automatically verified again its data URIs or not . 
returns if this filter has been verified @return true if the filter has been verified or if autoVerify is false .  
sets if this filter has been verified @param verified true if this filter has been verified .  
adds a new Intent action to match against . 
returns the number of actions in the filter . 
returns an action in the filter . 
returns an iterator over the filter 's actions . 
adds a new Intent data type to match against . 
returns the number of data types in the filter . 
returns a data type in the filter . 
returns an iterator over the filter 's data types . 
adds a new Intent data scheme to match against . 
returns the number of data schemes in the filter . 
returns a data scheme in the filter . 
returns an iterator over the filter 's data schemes . 
adds a new Intent data `` scheme specific part '' to match against . 
returns the number of data scheme specific parts in the filter . 
returns a data scheme specific part in the filter . 
returns an iterator over the filter 's data scheme specific parts . 
adds a new Intent data authority to match against . 
returns the number of data authorities in the filter . 
returns a data authority in the filter . 
returns an iterator over the filter 's data authorities . 
adds a new Intent data path to match against . 
returns the number of data paths in the filter . 
returns a data path in the filter . 
returns an iterator over the filter 's data paths . 
adds a new Intent category to match against . 
returns the number of categories in the filter . 
returns a category in the filter . 
returns an iterator over the filter 's categories . 
returns the package name of the application that created this IntentSender , that is the identity under which you will actually be sending the Intent . 
returns the uid of the application that created this PendingIntent , that is the identity under which you will actually be sending the Intent . 
returns the user handle of the application that created this PendingIntent , that is the user under which you will actually be sending the Intent .  
returns whether this load has been started . 
returns whether this loader has been abandoned . 
returns whether this load has been reset . 
returns the theme resource identifier to use for this activity . 
Returns true if the activity 's orientation is fixed .  
returns a List of all packages that satisfy a specified criteria . 
returns whether this component and its enclosing application are enabled . 
returns the icon resource identifier to use for this component . 
returns the logo resource identifier to use for this component . 
returns the banner resource identifier to use for this component . 
creates a KeySet from a Parcel @param in The parcel containing the KeySet 
creates an array of null KeySets 
returns the name of the package holding label and icon resources . 
returns any resource identifier that has been given for the label text . 
returns any concrete text that has been given for the label text . 
returns any resource identifier that has been given for the label icon . 
Returns the component name of this activity . 
Returns the user handle of the user profile that this activity belongs to . 
Returns the icon for this activity , without any badging for the profile . 
Returns the application flags from the ApplicationInfo of the activity . 
Returns the application info for the appliction this activity belongs to . 
Returns the time at which the package was first installed . 
Returns the name for the acitivty from android : name in the manifest . 
Returns the activity icon with badging appropriate for the profile . 
sets query options . 
Returns the activity info for a given intent and user handle , if it resolves . 
Returns whether the caller can access the shortcut information .  
creates a new session using the given parameters , returning a unique ID that represents the session . 
returns details for a specific session . 
returns list of all known install sessions , regardless of the installer . 
returns list of all known install sessions owned by the calling app . 
sets current progress of staging this session . 
returns all APK names contained in this session . 
Removes a split . 
Sets the UID that initiated package installation . 
Sets which runtime permissions to be granted to the package at installation .  
returns the ID for this session . 
returns the package name of the app that owns this session . 
returns current overall progress of this session , between 0 and 1 . 
returns if this session is currently active . 
returns the package name this session is working with . 
returns an icon representing the app being installed . 
returns a label representing the app being installed . 
returns an Intent that can be started to view details about this install session . 
gets the ApplicationInfo for the application to which this item belongs , if available , otherwise returns null .  
Returns a `` good '' intent to launch a front-door activity in a package . Returns null if neither are found . Returns null if the package does not contain such an activity , or if <em> packageName </em> is not recognized . 
returns a `` good '' intent to launch a front-door Leanback activity in a package , for use for example to implement an `` open '' button when browsing through packages . 
returns an array of all of the POSIX secondary group IDs that have been assigned to the given package . 
returns an array of all of the POSIX secondary group IDs that have been assigned to the given package . 
returns the UID associated with the given package name . 
returns the UID associated with the given package name .  
returns the UID associated with the given package name .  
returns a List of all packages that are installed on the device . 
returns a List of all installed packages that are currently holding any of the given permissions . 
returns a List of all packages that are installed on the device , for a specific user . 
Gets the package name of the component controlling runtime permissions .  
adds a new dynamic permission to the system . 
Gets the state flags associated with a permission .  
Gets whether you should show UI with rationale for requesting a permission .  
returns the user id associated with a shared user name .  
returns a List of all application packages that are installed on the device . 
Gets the ephemeral applications the user recently used .  
Gets the icon for an ephemeral application .  
Gets whether the caller is an ephemeral app . 
Gets the maximum size in bytes of the cookie data an ephemeral app can store on the device . 
Gets the ephemeral application cookie for this app . 
Sets the ephemeral application cookie for the calling app . 
gets a list of shared libraries that are available on the system . 
gets the name of the package hosting the services shared library .  
gets the name of the package hosting the shared components shared library .  
gets a list of features that are available on the system . 
Returns null if no matching activity was found . 
Returns null if no matching activity was found . 
Returns null if no matching service was found . 
Find a single content provider by its base path name . 
Find a single content provider by its base path name . 
Returns null if an image could not be found for any reason . 
returns the generic icon for an activity that is used when no specific icon is defined . 
Returns a managed-user-style badged copy of the given drawable allowing the user to distinguish it from the original drawable .  
Returns null if the text could not be found for any reason . 
Returns null if the xml resource could not be found for any reason . 
returns the label to use for this application . 
gets the status of a Domain Verification Result for an IntentFilter . 
gets the list of IntentFilterVerificationInfo for a specific package and User .  
gets the list of IntentFilter for a specific package .  
gets the default Browser package name for a specific user .  
sets the default Browser package name for a specific user .  
adds a new preferred activity mapping to the system . 
sets the enabled setting for an application This setting will override any enabled state which may have been sets by the application in its manifest . 
returns the enabled setting for an application . 
Returns the hidden state of a package . 
returns whether the device has been booted into safe mode . 
Adds a listener for permission changes for installed packages .  
Returns the device identity that verifiers can use to associate their scheme to a particular device . 
Returns true if the device is upgrading , such as first boot after OTA .  
returns interface that offers the ability to install , upgrade , and removes applications on the device . 
Gets the packages for a given user . 
Gets the sync adapter packages for given authority and user . 
Sets the location provider packages provider . 
Sets the voice interaction packages provider . 
Sets the SMS packages provider . 
Sets the dialer packages provider . 
Sets the sim call manager packages provider . 
Sets the sync adapter packages provider . 
Sets a list of apps to keep in PM 's internal data structures and as APKs even if no user has currently installed it . 
Gets whether some of the permissions used by this package require a user review before any of the app components can run . 
Gets all of the information we know about a particular package . 
Returns true if the package is installed and not hidden , or if the caller explicitly wanted all uninstalled and hidden packages as well . 
Gets the permission label . 
Gets the singleton runtime permission presenter . 
Gets the runtime permissions for an app . 
Gets the system apps that use runtime permissions . 
returns the icon resource identifier to use for this match . 
returns the icon resource identifier to use for this match . 
Sets the ID of the shortcut . 
Sets the title of a shortcut . 
Sets the text of a shortcut . 
Sets categories for a shortcut . 
Sets the intent of a shortcut .  
returns the ID of the shortcut . 
returns the package name of the creator application . 
returns the target activity , which may be null , in which case the shortcut is not associated with a specific activity . 
returns the shortcut title . 
returns the shortcut text . 
returns the categories . 
returns the intent .  
returns `` raw '' intent , which is the original intent without the extras .  
returns the weight of a shortcut , which will be used by Launcher for sorting . 
returns whether a shortcut is dynamic . 
returns whether a shortcut is pinned . 
returns whether a shortcut 's icon is a resource in the owning package . 
returns whether a shortcut 's icon is stored as a file . 
returns whether a shortcut only contains `` key '' information only or not . 
returns a string representation , intended for logging . 
returns all dynamic shortcuts from the caller application . 
returns all pinned shortcuts from the caller application . 
returns the max number of dynamic shortcuts that each application can have at a time . 
returns the number of times the caller application can call the rate-limited APIs before the rate limit counter is reset . 
returns when the rate limit count will be reset next time , in milliseconds since the epoch . 
returns the max width and height for icons , in pixels . 
Returns the public key for this signature .  
Returns true if the user is a split system user . 
Returns true if the given user is a split system user . 
returns NO_UID if not available 
Returns the FileDescriptor that can be used to read the data in the file . 
Returns the byte offset where this asset entry 's data starts . 
Returns any additional details that can be used to interpret the underlying file descriptor . 
Returns the total number of bytes of this asset entry 's data . 
returns the actual number of bytes that were declared when the AssetFileDescriptor was constructed . 
creates and returns a new auto-close input stream for this asset . 
creates and returns a new auto-close output stream for this asset . 
returns a String array of all the assets at the given path . 
adds an additional sets of assets to the asset manager . Returns the cookie of the added asset , or 0 on failure . 
adds an application assets to the asset manager and loading it as shared library . Returns the cookie of the added asset , or 0 on failure . 
adds multiple sets of assets to the asset manager at once .  Returns array of cookies for each added asset with 0 indicating failure , or null if the input array of paths is null . 
gets the locales that this asset manager contains data for . 
Returns true if the resource was found , filling in mRetStringBlock and mRetData . 
Returns true if the resource was found , filling in mRetStringBlock and mRetData . 
Creates a ColorStateList from an XML document . 
creates from inside an XML document . 
Returns whether a theme can be applied to this color state list , which usually indicates that the color state list has unresolved theme attributes . 
Returns an appropriately themed color state list . 
Returns a mask of the configuration parameters for which this color state list may change , requiring that it be re-created . 
Returns whether the specified state is referenced in any of the state specs contained within this ColorStateList . 
Returns the translator which translates the coordinates in compatibility mode . 
Returns a mask of the configuration parameters for which this color may change , requiring that it be re-created . 
sets this object to the system defaults . 
returns a bit mask of the differences between this Configuration object and the given one . 
returns true if the sequence of ` other ' is better than this . 
gets the locale list . 
sets the locale list . 
sets the locale list to a list of just one locale .  
returns the layout direction . 
sets the layout direction from a Locale . 
returns whether the screen has a round shape . 
creates a new instance without supplying resources the caller is running in . 
creates a new instance from its constant state . 
creates a new instance from its constant state . 
sets the default to clamp mode . 
creates from inside an XML document . 
Returns an appropriately themed gradient color . 
Returns a mask of the configuration parameters for which this gradient may change , requiring that it be re-created . 
Returns whether a theme can be applied to this gradient color , which usually indicates that the gradient color has unresolved theme attributes . 
Returns the most appropriate default theme for the specified target SDK version . 
returns the string value associated with a particular resource ID . 
Returns the character sequence necessary for grammatically correct pluralization of the given resource ID for the given quantity .  
returns the string value associated with a particular resource ID . 
Returns the string necessary for grammatically correct pluralization of the given resource ID for the given quantity .  
returns the string value associated with a particular resource ID . 
returns the styled text array associated with a particular resource ID . 
returns the string array associated with a particular resource ID . 
returns the int array associated with a particular resource ID . 
returns an array of heterogeneous values . 
returns a drawable object associated with a particular resource ID . 
returns a drawable object associated with a particular resource ID and styled for the specified theme . 
returns a drawable object associated with a particular resource ID for the given screen density in DPI . 
returns a drawable object associated with a particular resource ID for the given screen density in DPI and styled for the specified theme . 
returns a movie object associated with the particular resource ID . 
Returns a color integer associated with a particular resource ID . 
Returns a themed color integer associated with a particular resource ID . 
Returns a color state list associated with a particular resource ID . 
Returns a themed color state list associated with a particular resource ID . 
returns a boolean associated with a particular resource ID . 
returns an integer associated with a particular resource ID . 
returns an XmlResourceParser through which you can read a view layout description for the given resource ID . 
returns an XmlResourceParser through which you can read an animation description for the given resource ID . 
returns an XmlResourceParser through which you can read a generic XML resource for the given resource ID . 
Returns a TypedValue suitable for temporary use . 
Returns a TypedValue to the pool . 
returns the raw data associated with a particular resource ID . 
gets the raw value associated with a resource with associated density . 
returns the raw data associated with a particular resource ID .  
sets this theme to hold the same contents as the theme <var> other </var> . 
returns a TypedArray holding the values defined by <var> Theme </var> which are listed in <var> attrs </var> . 
returns a TypedArray holding the values defined by the style resource <var> resid </var> which are listed in <var> attrs </var> . 
returns a TypedArray holding the attribute values in <var> sets </var> that are listed in <var> attrs </var> . 
Returns the resources to which this theme belongs . 
returns a drawable object associated with a particular resource ID and styled for the Theme . 
Sets up this key as a deep copy of another key . 
returns the current display metrics that are in effect for this resource object . 
returns the current configuration that is in effect for this resource object . 
returns the compatibility mode information for the application .  
returns a resource identifier for the given resource name . Returns 0 if no such resource was found . 
returns true if given resource identifier includes a package .  
returns the full name for a given resource identifier . 
returns the package name for a given resource identifier . 
returns the type name for a given resource identifier . 
returns the entry name for a given resource identifier . 
Creates a new ThemeImpl which is already sets to the given Resources.ThemeKey . 
Returns a span for the specified color string representation . 
Adds a new theme-dependent entry to the cache . 
Adds a new entry to the cache . 
Returns an entry from the cache . 
Returns whether a cached entry has been invalidated by a configuration change . 
Returns the cached data for the specified theme , optionally creating a new entry if one does not already exist . 
Returns the theme-agnostic cached data . 
Returns the number of values in this array . 
returns the number of indices in the array that actually have data . 
Returns an index in the array that has data . 
Returns the Resources object this array was loaded from . 
Returns the type of attribute at the specified index . 
Returns a message about the parser state suitable for printing error messages . 
Removes the entries from the typed array so that subsequent calls to typed getters will returns the default value without crashing .  
returns a mask of the configuration parameters for which the values in this typed array may change . 
Sets the type for this restriction . 
Returns the type for this restriction . 
Returns the currently selected string value . 
Returns the list of currently selected values . 
Sets the string value to use as the selected value for this restriction . 
Sets a list of string values that can be selected by the user . 
Returns array of possible restriction entries that this entry may contain . 
Sets an array of possible restriction entries , that this entry may contain . 
Returns the list of possible string values sets earlier . 
Sets a list of strings that will be presented as choices to the user . 
Sets a list of strings that will be presented as choices to the user . 
Returns the list of strings , sets earlier , that will be presented as choices to the user . 
Returns the provided user-visible description of the entry , if any . 
Sets the user-visible description of the entry , as a possible sub-text for the title . 
Returns the user-visible title for the entry , if any . 
Sets the user-visible title for the entry . 
Returns any available sets of application-specific restrictions applicable to this application . Returns null if there are no restrictions . 
creates a new Editor for these preferences , through which you can make modifications to the data in the preferences and atomically commit those changes back to the SharedPreferences object . 
Creates a SyncInfo object with an unusable Account . 
sets the maximum number of undo states that will be retained . 
returns the current maximum number of undo states . 
Returns true if we are currently inside of an undo/redo operation .  
returns the number of undo states on the undo stack . 
returns the number of redo states on the undo stack . 
returns the user-visible label for the top undo state on the stack . 
returns the user-visible label for the top redo state on the stack . 
adds a new UndoOperation to the current update . 
returns true if this undo operation is a member of the given owner . 
returns true if this operation actually contains modification data . 
returns true if this operation can be merged with a later operation . 
returns the unique tag name identifying this owner . 
returns the actual data object of the owner . 
adds a URI to match , and the code to returns when this URI is matched . 
returns the Uri this permission pertains to . 
Returns if this permission offers read access . 
Returns if this permission offers write access . 
returns the time when this permission was first persisted , in milliseconds since January 1 , 1970 00:00:00.0 UTC . 
Sets a new cursor window for the cursor to use . 
Returns true if the cursor has an associated cursor window . 
Gets a SelfDataChangeOberserver that can be sent to a remote process to receive change notifications over IPC . 
Gets access to the binder transport object . 
Gets access to the binder transport object , and unlinks the transport object from the ContentObserver . 
Returns true if this observer is interested receiving self-change notifications . 
Returns a pre-filled window that contains the data within this cursor . 
Returns the numbers of rows in the cursor . 
Returns the current position of the cursor in the row sets . 
Returns whether the cursor is pointing to the first row . 
Returns whether the cursor is pointing to the last row . 
Returns whether the cursor is pointing to the position before the first row . 
Returns whether the cursor is pointing to the position after the last row . 
Returns the zero-based index for the given column name , or -1 if the column does n't exist . 
Returns the column name at the given zero-based column index . 
Returns a string array holding the names of all of the columns in the result sets in the order in which they were listed in the result . 
returns total number of columns @return number of columns 
Returns the value of the requested column as a byte array . 
Returns the value of the requested column as a String . 
Returns the value of the requested column as a short . 
Returns the value of the requested column as an int . 
Returns the value of the requested column as a long . 
Returns the value of the requested column as a float . 
Returns the value of the requested column as a double . 
Returns data type of the given column 's value . 
Returns true if the value in the indicated column is null . 
returns true if the cursor is closed @return true if the cursor is closed . 
Returns a bundle of extra values . 
Returns the comparison result of the next row from each cursor . 
Returns an object that contains sufficient metadata to reconstruct the cursor remotely . 
creates a ContentObserver from the observer and register it as an observer on the underlying cursor . 
Gets the name of this cursor window , never null .  
Gets the start position of this cursor window . 
Sets the start position of this cursor window . 
Gets the number of rows in this window . 
Sets the number of columns in this window . 
Returns the type of the field at the specified row and column index . 
Gets the value of the field at the specified row and column index as a byte array . 
Gets the value of the field at the specified row and column index as a string . 
Gets the value of the field at the specified row and column index as a long . 
Gets the value of the field at the specified row and column index as a double . 
Gets the value of the field at the specified row and column index as a short . 
Gets the value of the field at the specified row and column index as an int . 
Gets the value of the field at the specified row and column index as a float . 
Gets the underlying cursor that is wrapped by this instance . 
Returns data type of the given object 's value . 
returns the collation key @param name @return the collation key 
returns the collation key in hex format @param name @return the collation key in hex format 
Adds nothing to the ContentValues if the column is n't present or if its value is null . 
Adds nothing to the ContentValues if the column is n't present or if its value is null . 
Adds nothing to the ContentValues if the column is n't present or if its value is null . 
Adds nothing to the ContentValues if the column is n't present or if its value is null . 
Adds nothing to the ContentValues if the column is n't present or if its value is null . 
Adds nothing to the ContentValues if the column is n't present or if its value is null . 
Returns the index of the specified column . 
Creates a db and populates it with the sql statements in sqlStatements . 
Returns one of the following which represent the type of the given SQL statement . 
Returns column index of '' _ id '' column , or -1 if not found .  
Gets a cursor window that contains the specified position . 
Gets value at the given column for the current row . 
Adds a new row to the end and returns a builder for that row . 
Adds a new row to the end with the given column values . 
Adds a new row to the end with the given column values . 
Sets the next column value in this row . 
Adds an observer to the list . 
Removes a previously registered observer . 
removes all registered observers . 
Returns true if the prepared statement cache contains the specified SQL . 
Gets the unique id of this connection . 
Returns true if this is the primary database connection . 
Returns the number of rows that were counted during query execution . 
gets the database that this cursor is associated with . 
sets new bind arguments . 
Gets a label to use when describing the database in log messages . 
Gets default connection flags that are appropriate for this thread , taking into account whether the thread is acting on behalf of the UI . 
Returns true if the current thread has a transaction pending . 
Returns true if the current thread is holding an active connection to the database . 
Sets the locale of the database to the the system 's current locale . 
Sets the locale of the database to the the system 's current locale . 
creates a memory backed SQLite database . Sets the locale of the database to the the system 's current locale . 
Gets the database version . 
Sets the database version . 
Returns the maximum size the database may grow to . 
Sets the maximum size the database will grow to . 
Returns the current database page size , in bytes . 
Sets the database page size . 
Returns true if the database is opened as read only . 
Returns true if the database is in-memory db .  
Returns true if the database is currently open . 
Returns true if the new version code is greater than the current database version . 
Gets the path to the database file . 
Sets the locale for this database . 
Sets the maximum size of the prepared-statement cache for this database . 
Sets whether foreign key constraints are enabled for the database .  
Returns true if write-ahead logging has been enabled for this database . 
Returns list of full pathnames of all attached databases including the main database by executing ` pragma database_list ' on the database . 
Returns true if the database is in-memory . 
returns all pager and database stats for the current process . 
Gets the default page size to use when creating a database . 
Gets the default journal mode when WAL is not in use . 
Gets the journal size limit in bytes . 
Gets the default database synchronization mode when WAL is not in use . 
Gets the database synchronization mode when in WAL mode . 
Gets the WAL auto-checkpoint integer in database pages . 
Gets the connection pool size when in WAL mode . 
returns the name of the SQLite database being opened , as given to the constructor . 
creates and/or open a database that will be used for reading and writing . 
creates and/or open a database . 
Returns the list of tables being queried @return the list of tables being queried 
Sets the list of tables to query . 
Sets the projection map for the query . 
Sets the cursor factory to be used for the query . 
adds the names that are non-null in columns to s , separating them with commas . 
Returns true if the session has a transaction in progress . 
Returns true if the session has a nested transaction in progress . 
Returns true if the session has an active database connection . 
Returns the number of rows that were counted during query execution . 
sets the application name . 
Returns the list of windows owned by this client . 
Returns the view hierarchy and/or view properties starting at the provided view . 
Returns a buffer with region details & bitmap of every single view . 
Returns the Theme dump of the provided view . 
Returns the display lists corresponding to the provided view . 
Adds a stroke to the gesture . 
Sets the id of the gesture . 
Creates a bitmap of the gesture with a transparent background . 
Creates a bitmap of the gesture with a transparent background . 
gets all the gesture entry names in the library @return a sets of strings 
adds a gesture for the entry @param entryName entry name @param gesture 
removes a gesture from the library . 
removes a entry of gestures @param entryName the entry name 
gets all the gestures of an entry @param entryName @return the list of gestures that is under this name 
creates a learning instance for a single stroke gesture @param gesture @param label @return the instance 
adds an instance to the learner @param instance 
removes an instance based on its id @param id 
removes all the instances of a category @param name the category name 
Returns the number of physical cameras available on this device . 
Returns the information about a particular camera . 
Creates a new Camera object to access a particular hardware camera . 
Creates a new Camera object to access the first back-facing camera on the device . 
Creates a new Camera object to access a particular hardware camera with given hal API version . 
returns current preview state . 
Adds a pre-allocated buffer to the preview callback buffer queue . 
Adds a pre-allocated buffer to the raw image callback buffer queue . 
Sets camera auto-focus move callback . 
sets the clockwise rotation of preview display in degrees .  
Returns the current settings for this Camera service . 
Creates a single string with all the parameters sets in this Parameters object . 
Sets a String parameter . 
Sets an integer parameter . 
Returns the value of a String parameter . 
Returns the value of an integer parameter . 
Sets the dimensions for preview pictures . 
Returns the dimensions setting for preview pictures . 
Gets the supported preview sizes . 
Gets the supported video frame sizes that can be used by MediaRecorder . 
Sets the dimensions for EXIF thumbnail in Jpeg picture .  
Returns the dimensions for EXIF thumbnail in Jpeg picture . 
Gets the supported jpeg thumbnail sizes . 
Sets the quality of the EXIF thumbnail in Jpeg picture . 
Returns the quality setting for the EXIF thumbnail in Jpeg picture . 
Sets Jpeg quality of captured picture . 
Returns the quality setting for the JPEG picture . 
Sets the rate at which preview frames are received . 
Returns the setting for the rate at which preview frames are received . 
Gets the supported preview frame rates . 
Sets the minimum and maximum preview fps . 
Returns the current minimum and maximum preview fps . 
Sets the image format for preview pictures . 
Gets the supported preview formats . 
Sets the dimensions for pictures .  
Returns the dimension setting for pictures . 
Gets the supported picture sizes . 
Sets the image format for pictures . 
Returns the image format for pictures . 
Gets the supported picture formats . 
Sets the clockwise rotation angle in degrees relative to the orientation of the camera .  
Sets GPS latitude coordinate . 
Sets GPS longitude coordinate . 
Sets GPS altitude . 
Sets GPS timestamp . 
Sets GPS processing method . 
Removes GPS latitude , longitude , altitude , and timestamp from the parameters . 
Gets the current white balance setting . 
Sets the white balance . 
Gets the supported white balance . 
Gets the current color effect setting . 
Sets the current color effect setting . 
Gets the supported color effects . 
Gets the current antibanding setting . 
Sets the antibanding . 
Gets the supported antibanding values . 
Gets the current scene mode setting . 
Sets the scene mode . 
Gets the supported scene modes . 
Gets the current flash mode setting . 
Sets the flash mode . 
Gets the supported flash modes . 
Gets the current focus mode setting . 
Sets the focus mode . 
Gets the supported focus modes . 
Gets the horizontal angle of view in degrees . 
Gets the vertical angle of view in degrees . 
Gets the current exposure compensation index . 
Sets the exposure compensation index . 
Gets the maximum exposure compensation index . 
Gets the minimum exposure compensation index . 
Gets the exposure compensation step . 
Sets the auto-exposure lock state . 
Gets the state of the auto-exposure lock .  Returns true if auto-exposure is currently locked , and false otherwise . 
Returns true if auto-exposure locking is supported .  
Sets the auto-white balance lock state . 
Gets the state of the auto-white balance lock .  Returns true if auto-white balance is currently locked , and false otherwise . 
Returns true if auto-white balance locking is supported .  
Gets current zoom value . 
Sets current zoom value . 
Returns true if zoom is supported . 
Gets the maximum zoom value allowed for snapshot . 
Gets the zoom ratios of all zoom values . 
Returns true if smooth zoom is supported . 
Gets the distances from the camera to where an object appears to be in focus . 
Gets the maximum number of focus areas supported . 
Gets the current focus areas . 
Sets focus areas .  
Gets the maximum number of metering areas supported . 
Gets the current metering areas . 
Sets metering areas .  
Gets the maximum number of detected faces supported . 
Sets recording mode hint . 
Returns true if video snapshot is supported . 
gets the current state of video stabilization .  
Returns true if video stabilization is supported .  
returns null if the passing string is null or the size is 0 . 
returns null if the passing string is null or the size is 0 . 
Returns the value of a float parameter . 
Returns the value of a integer parameter . 
returns null if the passing string is null or the size is 0 . 
returns null if the passing string is null . 
gets the camera device that this session is created for . 
returns if the application can submit reprocess capture requests with this camera capture session . 
gets the input Surface associated with a reprocessable capture session . 
gets a camera characteristics field value . 
creates a unmodifiable list of requests that is suitable for constrained high speed capture session streaming . 
gets the ID of this camera device . 
creates a new camera capture session by providing the target output sets of Surfaces to the camera device . 
creates a new camera capture session by providing the target output sets of Surfaces and its corresponding surface configuration to the camera device . 
creates a new reprocessable camera capture session by providing the desired reprocessing input Surface configuration and the target output sets of Surfaces to the camera device . 
creates a new constrained high speed capture session .  
returns the list of currently connected camera devices by identifier , including cameras that may be in use by other camera API clients . 
removes a previously-added callback ; the callback will no longer receive connection and disconnection callbacks . 
removes a previously-added callback ; the callback will no longer receive torch mode status callbacks . 
sets the flash unit 's torch mode of the camera of the given ID without opening the camera device . 
returns or creates the list of currently connected camera devices . 
returns a best-effort ICameraService . 
Sets mCameraService to a valid pointer or null if the connection does not succeed . 
removes a previously-added callback ; the callback will no longer receive connection and disconnection callbacks , and is no longer referenced by the global listener singleton . 
gets a camera metadata field value .  
Returns a list of the keys contained in this map . 
gets the request associated with this failed capture . 
gets the frame number associated with this failed capture . 
gets a capture request field value . 
gets the reprocessable session ID this reprocess capture request is associated with .  
removes a surface from the list of targets for this request . 
sets a capture request field to a value . 
gets a capture request field value . 
sets a tag for this request . 
gets a capture result field value . 
gets the request associated with this result . 
gets the frame number associated with this result . 
sets the orientation value to write . 
sets the thumbnail image . 
sets the thumbnail image . 
sets image location metadata . 
sets the user description string to write . 
creates an internal state callback , to be invoked on the mDeviceHandler It has a few behaviors : <ul> <li> Convert device state changes into session state changes . 
creates an internal state callback , to be invoked on the mDeviceHandler It has a few behaviors : <ul> <li> Convert device state changes into session state changes . 
sets remote device , which triggers initial onOpened/onUnconfigured callbacks This function may post onDisconnected and throw CAMERA_DISCONNECTED if remoteDevice dies during setup .  
returns the last regular frame number . returns CaptureCallback.NO _ FRAMES_CAPTURED if it contains no regular request . 
returns the last reprocess frame number . returns CaptureCallback.NO _ FRAMES_CAPTURED if it contains no reprocess request . 
returns the last frame number overall . 
returns the request ID . 
gets the tag corresponding to this key . 
sets the global client-side vendor tag descriptor to allow use of vendor tags in camera applications . 
sets the global client-side vendor tag descriptor to allow use of vendor tags in camera applications . 
sets a camera metadata field to a value . 
returns a list containing keys of the given key class for all defined vendor tags .  
gets the underlying native type for a tag .  
Returns a byte -LSB- -RSB- of data corresponding to this tag .   
sets the value in the given metadata . 
gets the id of this request . 
returns true if this repeating . 
returns the number of requests in this burst sequence . 
sets the result for a capture . 
sets repeating request error . 
sets the listener for state transition callbacks . 
gets the underlying surface to produce frames from . 
returns the stall duration for a given output jpeg size in nanoseconds . 
Returns null if the anti-banding mode enum is not supported . 
Returns the largest supported picture size , as compared by its area . 
Returns true if the Gl timing methods will work , false otherwise . 
adds a timestamp to a timing measurement . 
gets the next available GPU timing measurement . 
Returns the number of measurements so far that returned a valid duration measurement . 
creates a native performance measurement context . 
gets the next available GL duration measurement , in nanoseconds . 
Returns true if the given surface requires jpeg buffers . 
Returns true if the given surface requires non-jpeg buffer types . 
Returns the number of surfaces targeted by the request that require jpeg buffers . 
Returns the number of surfaces targeted by the request that require non-jpeg buffers . 
Returns true if the contained request is repeating . 
returns the subsequence id for this request . 
Returns the frame number for this request . 
Returns the contained request . 
Returns a read-only collection of the surfaces targeted by the contained request . 
Returns true if any of the surfaces targeted by the contained request require jpeg buffers . 
Returns true if any of the surfaces targeted by the contained request require a non-jpeg buffer type . 
returns the number of jpeg-type surfaces targeted by this request . 
returns the number of non-jpeg-type surfaces targeted by this request . 
Returns true if the given surface requires jpeg buffers . 
returns if any of this request 's output surface is abandoned . 
returns and removes the next burst on the queue . 
adds a the given burst to the queue . 
returns the surface texture to draw to - this is the texture use to when producing output surface buffers . 
gets the numeric value from an enum . 
gets the size in bytes for the native camera metadata type . 
creates a marshaler between the selected managed and native type . 
returns the color channel offset for a given index into the array of raw pixel values . 
gets an element of this matrix by its row and column . 
returns the color space transform as a string representation . 
returns the color space transform as a compact string representation . 
returns the width of the high speed video configuration . 
returns the height of the high speed video configuration . 
returns the minimum frame per second of the high speed video configuration . 
returns the maximum frame per second of the high speed video configuration . 
gets the width of this input configration . 
gets the height of this input configration . 
gets the format of this input configration . 
gets the number of rows in this map . 
gets the number of columns in this map . 
gets the total number of gain factors in this map . 
gets a single color channel gain factor from this lens shading map by its row and column . 
gets a gain factor vector from this lens shading map by its row and column . 
returns the LensShadingMap as a string representation . 
returns the X coordinate of the left side of the rectangle . 
returns the Y coordinate of the upper side of the rectangle . 
returns the width of the rectangle . 
returns the height of the rectangle . 
returns the metering weight of the rectangle . 
gets a list of all input image formats that can be used to reprocess an input stream into an output stream . 
gets the red component . 
gets the blue component . 
gets the component by the color channel index . 
returns the RggbChannelVector as a string representation . 
returns the RggbChannelVector as a string in compact form . 
returns the width of the stream configuration . 
returns the height of the stream configuration . 
returns the width of the stream configuration duration . 
returns the height of the stream configuration duration @return height > 0 
gets the supported input sizes for this input format . 
gets a list of supported high speed video recording sizes . 
gets a list of supported high speed video recording FPS ranges . 
gets the supported video sizes for an input high speed FPS range .  
gets a list of supported high resolution sizes , which can not operate at full BURST_CAPTURE rate . 
gets the list of publically visible output formats ; does not include IMPL_DEFINED 
gets the format - > size count map for either output or input formats 
gets the number of points stored in this tonemap curve for the specified color channel . 
gets the point for a color channel at a specified index . 
returns the TonemapCurve as a string representation . 
gets the read-only list of partial results that compose this total result . 
gets the ID of the session where the capture request of this result was submitted . 
returns the request ID for the submitted capture request/burst . 
returns the last frame number for the submitted capture request/burst . 
gets the Surface size . 
gets the Surface format . 
gets the Surface dataspace . 
returns true is the consumer is one of the consumers that can accept producer overrides of the default dimensions and format . 
creates a specialized type reference from a dynamic class instance , bypassing the standard compile-time checks . 
Returns the raw type of T. <ul> <li> If T is a Class itself , T itself is returned . 
Gets information about a logical display . 
Gets all currently valid logical displays . 
Gets all currently valid logical displays of the specified category . 
Gets the current Wifi display status .  
Creates a virtual display . 
Creates a virtual display . 
Gets an instance of the display manager global singleton . 
gets information about a particular logical display . 
Gets all currently valid logical display ids . 
Gets information about a logical display . 
Gets information about a logical display without applying any compatibility metrics . 
Returns true if the proximity sensor screen-off function is available . 
Returns information about the specified logical display . 
Gets the virtual display . 
Gets the surface that backs the virtual display . 
Sets the surface that backs the virtual display . 
Gets the MAC address of the Wifi display device . 
Gets the name of the Wifi display device . 
Gets the user-specified alias of the Wifi display device , or null if none .  
Returns true if device is available , false otherwise . 
Returns true if device has been remembered , false otherwise . 
Gets the name to show in the UI . 
Returns true if the other display is not null and has the same address as this one . 
Returns the state of the Wifi display feature on this device .  
Returns the current state of the Wifi display scan . 
gets the state of the currently active display . 
Gets the Wifi display that is currently active . 
Gets the human-readable name for the given fingerprint . 
Gets the device-specific finger id . 
Gets the group id specified when the fingerprint was enrolled .  
Sets the active user . 
removes given fingerprint template from fingerprint hardware and/or protected storage .  
Returns the active source information . 
Sets a listener used to receive incoming vendor-specific command . 
Gets an object that represents an HDMI-CEC logical device of a specified type .  
Gets an object that represents an HDMI-CEC logical device of type playback on the system . 
Gets an object that represents an HDMI-CEC logical device of type TV on the system . 
Returns the id of the device . 
Returns the id to be used for CEC device . 
Returns the id to be used for MHL device . 
Returns the id to be used for hardware port . 
Returns the CEC logical address of the device . 
Returns the physical address of the device . 
Returns the port ID . 
Returns CEC type of the device . 
Returns device 's power status . 
Returns MHL device id . returns -1 for non-MHL device . 
Returns MHL adopter id . returns -1 for non-MHL device . 
Returns vendor id of the device . 
Returns the port number for which the event occurred . 
Returns the connection status associated with this event @return true if the device gets connected ; otherwise false 
Gets the status of display device connected through HDMI bus . 
Returns the port id . 
Returns the port type . 
Returns the port address . 
Sets the listener used to gets informed of the input change event . 
Returns all the CEC devices connected to TV . 
Sets system audio mode . 
Sets system audio volume . 
Sets system audio mute status . 
Sets record listener . 
Gets an instance of the input manager .  
Gets information about the input device with the specified id . 
Gets information about the input device with the specified descriptor .  
Gets the ids of all input devices in the system . 
Gets information about all supported keyboard layouts .  
Gets information about all supported keyboard layouts appropriate for a specific input device .  
Gets the keyboard layout with the specified descriptor .  
Gets the current keyboard layout descriptor for the specified input device .  
Sets the current keyboard layout descriptor for the specified input device .  
Gets all keyboard layout descriptors that are enabled for the specified input device .  
Adds the keyboard layout descriptor for the specified input device .  
Removes the keyboard layout descriptor for the specified input device .  
Gets the keyboard layout for the specified input device and IME subtype .  
Sets the keyboard layout for the specified input device and IME subtype pair . 
Gets the TouchCalibration applied to the specified input device 's coordinates .  
Sets the TouchCalibration to apply to the specified input device 's coordinates . 
Gets the mouse pointer speed .  
Sets the mouse pointer speed .  
Gets a vibrator service associated with an input device , assuming it has one .  
Gets the keyboard layout descriptive label to show in the user interface . 
Gets the name of the collection to which the keyboard layout belongs . 
Gets the locales that this keyboard layout is intended for . 
Gets the vendor ID of the hardware device this keyboard layout is intended for . Returns -1 if this is not specific to any piece of hardware . 
Gets the product ID of the hardware device this keyboard layout is intended for . Returns -1 if this is not specific to any piece of hardware . 
returns the maximum number of bytes that can be sent per message to the hub @return int - maximum bytes that can be transmitted in a single packet 
sets the context hub unique identifer @param bytes - Maximum number of bytes per message 
gets the context hub unique identifer @return int - unique system wide identifier 
sets the context hub unique identifer @param id - unique system wide identifier for the hub 
gets a string as a hub name @return String - a name for the hub 
sets a string as the hub name @param name - the name for the hub 
gets a string as the vendor name @return String - a name for the vendor 
sets a string as the vendor name @param vendor - a name for the vendor 
gets tool chain string @return String - description of the tool chain 
sets tool chain string @param toolchain - description of the tool chain 
gets platform version @return int - platform version number 
sets platform version @param platformVersion - platform version number 
gets static platform version number @return int - platform version number 
sets platform software version @param staticSwVersion - platform static s/w version number 
gets the tool chain version @return int - the tool chain version 
sets the tool chain version number @param toolchainVersion - tool chain version number 
gets the peak processing mips the hub can support @return float - peak MIPS that this hub can deliver 
sets the peak mips that this hub can support @param peakMips - peak mips this hub can deliver 
gets the stopped power draw in milliwatts This assumes that the hub enter a stopped state - which is different from the sleep state . 
sets the power consumed by the hub in stopped state @param stoppedPowerDrawMw - stopped power in milli watts 
gets the power draw of the hub in sleep mode . 
sets the sleep power draw in milliwatts @param sleepPowerDrawMw - sleep power draw in milliwatts .  
gets the peak powe draw of the hub . 
sets the peak power draw of the hub @param peakPowerDrawMw - peak power draw of the hub in milliwatts .  
sets the supported sensors on this hub @param supportedSensors - supported sensors on this hub 
gets a handle to all the context hubs in the system @return array of context hub handles 
gets more information about a specific hub . 
gets information about the nano app instance @param nanoAppHandle handle of the nanoAppInstance @return NanoAppInstanceInfo Information about the nano app instance . 
gets the message type @return int - message type 
gets message version @return int - message version 
gets message data @return byte -LSB- -RSB- - message data buffer 
sets message type @param msgType - message type 
sets message version @param version - message version 
sets message data @param data - message buffer 
Returns current status of a hardware geofence monitoring system . 
Creates a circular geofence which is monitored by subsystems in the hardware . 
Returns the type of the monitoring system that has a change on its state . 
Returns the new status associated with the monitoring system . 
Returns the source technologies that the status is associated to . 
Returns the last known location according to the monitoring system . 
creates a circular geofence . 
sets the last known transition of the geofence . 
sets the unknown timer for this geofence . 
sets the transitions to be monitored . 
sets the notification responsiveness of the geofence . 
sets the source technologies to use while tracking the geofence . 
Returns the latitude of this geofence . 
Returns the longitude of this geofence . 
Returns the radius of this geofence . 
Returns transitions monitored for this geofence . 
Returns the unknownTimer of this geofence . 
Returns the notification responsiveness of this geofence . 
Returns the last transition of this geofence . 
Returns the source technologies to track this geofence . 
Returns the id of this request . 
Returns the latitude of this geofence . 
Returns the longitude of this geofence . 
Returns the radius of this geofence . 
Returns transitions monitored for this geofence . 
Returns the unknownTimer of this geofence . 
Returns the notification responsiveness of this geofence . 
Returns the last transition of this geofence . 
Returns the type of the geofence for the current request . 
Returns the source technologies to track this geofence . 
gets the capacity of the memory region in bytes @return int - the memory capacity in bytes 
gets the free capacity of the memory region in bytes @return int - free bytes 
sets the publisher name @param publisher name of the publisher of this nano app 
sets the name of the app @param name name of the app 
sets the app identifier @param appId adds identifier 
sets the app version @param appVersion app version 
sets memory needed as read only @param neededReadMemBytes read only memory needed in bytes 
sets writable memory needed in bytes @param neededWriteMemBytes writable memory needed in bytes 
sets executable memory needed @param neededExecMemBytes executable memory needed in bytes 
sets the sensors needed for this app @param neededSensors needed Sensors 
sets output events returned by the nano app @param appBinary generated events 
gets the publisher name @return publisher name 
gets the name of the app @return app name 
gets the identifier of the app @return identifier for this app 
gets the app version @return app version 
gets the ammount of readable memory needed by this app @return readable memory needed in bytes 
gets the ammount og writable memory needed in bytes @return writable memory needed in bytes 
gets the sensors needed by this app @return sensors needed 
gets the events generated by this app @return generated events 
gets the binary for this app @return app binary 
gets the publisher of this app @return String - name of the publisher 
sets the publisher name for the app @param publisher - name of the publisher 
gets the name of the app @return String - name of the app 
sets the name of the app @param name - name of the app 
gets the application identifier @return int - application identifier 
sets the application identifier @param appId - application identifier 
sets the application version @return int - version of the app 
sets the application version @param appVersion - version of the app 
gets the read memory needed by the app @return int - readable memory needed in bytes 
sets the read memory needed by the app @param neededReadMemBytes - readable Memory needed in bytes 
gets writable memory needed by the app @return int - writable memory needed by the app 
sets writable memory needed by the app @param neededWriteMemBytes - writable memory needed by the app 
gets executable memory needed by the app @return int - executable memory needed by the app 
sets executable memory needed by the app @param neededExecMemBytes - executable memory needed by the app 
gets the sensors needed by this app @return int -LSB- -RSB- all the required sensors needed by this app 
sets the sensors needed by this app @param neededSensors - all the sensors needed by this app 
gets the events generated by this app @return all the events that can be generated by this app 
sets the output events that can be generated by this app @param outputEvents - the events that may be generated by this app 
gets the context hub identifier @return int - system unique hub identifier 
sets the context hub identifier @param contexthubId - system wide unique identifier 
gets a handle to the nano app instance @return int - handle to this instance 
sets the handle for an app instance @param handle - handle to this instance 
gets stereo enable state @return the enable state . 
gets Traffic announcement enable state @return the enable state . 
gets Alternate Frequency Switching enable state @return the enable state . 
gets Emergency announcement enable state @return the enable state . 
sets stereo enable state @param state The new enable state . 
sets Traffic announcement enable state @param state The new enable state . 
sets Alternate Frequency Switching enable state @param state The new enable state . 
sets Emergency Announcement enable state @param state The new enable state . 
Returns a list of descriptors for all broadcast radio modules present on the device . 
Returns the text value associated with the given key as a String , or null if the key is not found in the meta data . 
Returns the value associated with the given key , or 0 if the key is not found in the meta data . 
Returns the number of fields in this meta data . 
Returns a sets containing the Strings used as keys in this meta data . 
sets the active band configuration for this module . 
gets current configuration . 
sets mute state . 
gets mute state . 
gets current station information . 
gets current antenna connection state for current configuration . 
returns value of 0 means this sensor does not support this function ; returns value of -1 means this sensor can be uniquely identified in system by combination of its type and name . 
Returns true if the sensor is a wake-up sensor .  
Returns true if the sensor is a dynamic sensor . 
Returns true if the sensor supports data injection when the HAL is sets to data injection mode .  
Sets the Type associated with the sensor . 
Sets the ID associated with the sensor . 
Gets the full list of sensors that are available .  
Gets the full list of dynamic sensors that are available .  
returns a Sensor with the given type and wakeUp properties . 
Returns a string array containing the names of available serial ports @return names of available serial ports 
Returns the name of the serial port @return the serial port 's name 
Returns an intent to launch an activity that manages the given keyphrase for the locale . 
Returns a list of descriptors for all hardware modules loaded . 
gets an interface on a hardware module to control sound models and recognition on this module . 
Find the difference of two List <Sensor> assuming List are sorted by handle of sensor , assuming the input list is already sorted by handle . 
Returns the manufacturer name of the accessory . 
Returns the model name of the accessory . 
Returns a user visible description of the accessory . 
Returns the version of the accessory . 
Returns the URI for the accessory . 
Returns the unique serial number for the accessory . 
Returns the configuration 's ID field . 
Returns the configuration 's name . 
Returns the self-powered attribute value configuration 's attributes field . 
Returns the remote-wakeup attribute value configuration 's attributes field . 
Returns the configuration 's max power consumption , in milliamps . 
Returns the name of the device . 
Returns the manufacturer name of the device . 
Returns the product name of the device . 
Returns the version number of the device . 
Returns the serial number of the device . 
Returns a unique integer ID for the device . 
Returns a vendor ID for the device . 
Returns a product ID for the device . 
Returns the devices 's class field . 
Returns the device 's subclass field . 
Returns the device 's protocol field . 
Returns the native file descriptor for the device , or -1 if the device is not opened . 
Returns the raw USB descriptors for the device . 
Returns the serial number for the device . 
Returns the endpoint 's address field . 
Returns the endpoint 's direction . 
Returns the endpoint 's attributes field . 
Returns the endpoint 's type . 
Returns the endpoint 's maximum packet size . 
Returns the endpoint 's interval field . 
Returns the interface 's bInterfaceNumber field . 
Returns the interface 's bAlternateSetting field . 
Returns the interface 's name . 
Returns the interface 's class field . 
Returns the interface 's subclass field . 
Returns the interface 's protocol field . 
Returns a HashMap containing all USB devices currently attached . 
Returns a list of currently attached USB accessories . 
Returns true if the caller has permission to access the device . 
Returns true if the caller has permission to access the accessory . 
Returns true if the specified USB function is currently enabled when in device mode . 
Sets the current USB function when in device mode . 
Returns a list of physical USB ports on the device .  
Gets the status of the specified USB port .  
Sets the desired role combination of the port .  
Gets the unique id of the port . 
Gets the supported modes of the port . 
Returns true if there is anything connected to the port . 
Gets the current mode of the port . 
Gets the current power role of the port . 
Gets the current data role of the port . 
Returns true if the specified power and data role combination is supported given what is currently connected to the port . 
Returns the endpoint for the request , or null if the request is not opened . 
Returns the client data for the request . 
Sets the client data for the request . 
returns true if the edit text is currently showing a scroll bar . 
returns the maximum width , in pixels , available the input method . 
returns the currently active InputBinding for the input method , or null if there is none . 
returns whether the input method is <em> currently </em> running in fullscreen mode . 
returns whether the fullscreen extract view is shown . 
Returns true if we have been asked to show our input view . 
returns whether the soft input view is <em> currently </em> shown to the user . 
creates and returns the view hierarchy used to show candidates . 
Returns null if there is no action requested . 
Returns the square of the distance between the center of the key and the given point . 
Returns the drawable state for the key , based on the current state and type of the key . 
Returns the total height of the keyboard @return the total height of the keyboard 
Returns the indices of the keys that are closest to the given point . 
Returns the current keyboard being displayed by this view . 
Sets the state of the shift key of the keyboard , if any . 
Returns the state of the shift key of the keyboard , if any . 
Returns the enabled state of the key feedback popup . 
Returns true if proximity correction is enabled . 
sets which boundary of the screen the DockWindow sticks to .  
Returns a non-localized string representing a given network type . 
Returns details about the currently active default data network . 
Returns the package name of the currently sets always-on VPN application .  
Returns details about the currently active default data network for a given uid . 
Returns connection status information about a particular network type . 
Returns connection status information about a particular Network . 
Returns connection status information about all network types supported by the device . 
Returns the IP information for the current default network . 
Returns the IP information for a given network type . 
Gets the URL that should be used for resolving whether a captive portal is present .  
Returns the value of the setting for background data usage . 
Sets the value of the setting for background data usage . 
returns whether the data network is currently active . 
gets the sets of tetherable , available interfaces . 
gets the sets of tethered interfaces . 
gets the sets of interface names which attempted to tether but failed . 
gets the sets of tethered dhcp ranges . 
gets the list of regular expressions that define any tetherable USB network interfaces . 
gets the list of regular expressions that define any tetherable Wifi network interfaces . 
gets the list of regular expressions that define any tetherable Bluetooth network interfaces . 
gets a more detailed error code after a Tethering or Untethering request asynchronously failed . 
sets a network-independent global http proxy .  
gets the current default HTTP proxy settings . 
Returns true if the hardware supports the given network type else it returns false . 
Returns if the currently active data network is metered . 
gets the mobile provisioning url . 
gets Ethernet configuration . 
sets Ethernet configuration . 
Adds a listener . 
Removes a listener . 
Creates a new HTTP response cache and sets it as the system default cache . 
Returns the number of bytes currently being used to store the values in this cache . 
Returns the maximum number of bytes that this cache should use to store its data . 
Returns the number of HTTP requests that required the network to either supply a response or validate a locally cached response . 
Returns the number of HTTP requests whose response was provided by the cache . 
Returns the total number of HTTP requests that were made . 
Creates an SslError object from a chromium error code . 
Gets the SSL certificate associated with this object . 
Gets the URL associated with this object . 
Adds the supplied SSL error to the sets . 
Gets the most severe SSL error in this object 's sets of errors . Returns -1 if the sets is empty . 
Returns a string representation of this object . 
sets flags to mark interface as up . 
sets flags to mark interface as down . 
sets flags so that no changes will be made to the up/down status . 
Gets the hashcode of the represented IP prefix . 
Returns a copy of the first IP address in the prefix . 
Returns a string representation of this address , such as `` 192.0.2.1 / 24 '' or `` 2001 : db8 : :1 / 64 '' . 
Returns a hashcode for this address . 
Sets the interface name for this link .  
Gets the interface name for this link . 
Returns all the addresses on this link .  
Returns all the addresses on this link and all the links stacked above it .  
Returns all the addresses on this link and all the links stacked above it .  
Sets the DNS domain search path used on this link .  
gets the DNS domains search path sets for this link . 
Sets the Maximum Transmission Unit size to use on this link .  
Gets any non-default MTU size sets for this link .  
Sets the tcp buffers sizes to be used when this link is the system default .  
Gets the tcp buffer sizes .  
Returns all the routes on this link and all the links stacked above it .  
Adds a stacked link .  
Removes a stacked link .  
Returns all the links stacked on top of this link .  
Returns true if this link has an IPv4 address .  
Returns true if this link or any of its stacked interfaces has an IPv4 address . 
Returns true if this link has a global preferred IPv6 address .  
Returns true if this link has an IPv4 default route .  
Returns true if this link has an IPv6 default route .  
Returns true if this link has an IPv4 DNS server .  
Returns true if this link has an IPv6 DNS server .  
Returns true if this link is provisioned for global IPv4 connectivity .  
Returns true if this link is provisioned for global IPv6 connectivity .  
Returns true if this link is provisioned for global connectivity , for at least one Internet Protocol family .  
Returns file descriptor or null if not yet open/already closed @return fd or null 
Returns the namespace used by this address . 
Creates a socket in the underlying OS . 
Returns the number of bytes available for reading without blocking . 
Removes the NET_CAPABILITY_NOT_RESTRICTED capability if all the capabilities it provides are typically provided by restricted networks .  
Sets the upstream bandwidth for this network in Kbps .  
Sets the downstream bandwidth for this network in Kbps .  
Sets the optional bearer specific network specifier .  
Gets the optional bearer specific network specifier .   
Sets the signal strength .  
returns a network-type-specific integer describing the subtype of the network . 
returns a human-readable name describe the type of the network , for example `` WIFI '' or `` MOBILE '' . 
returns a human-readable name describing the subtype of the network . 
Sets if the network is available , ie , if the connectivity is possible .  
sets the failover boolean .  
Returns if this network is metered .  
Sets the fine-grained state of the network .  
sets the extraInfo field .  
sets policy flags for specific UID . 
adds policy flags for specific UID . 
adds the given capability requirement to this builder .  
Adds the given transport requirement to this builder .  
Sets the optional bearer specific network specifier . 
Sets the signal strength .  
sets the active scorer to a new package and clear existing scores .  
Returns the list of available scorer apps . 
gets the application to use for scoring networks . 
sets the specified package as the default scorer application . 
returns specific stats entry . 
Find first stats index that matches the requested parameters . 
Find first stats index that matches the requested parameters , starting search around the hinted index as an optimization . 
returns list of unique interfaces known by this data structure . 
returns list of unique UIDs known by this data structure . 
returns total of all fields represented by this snapshot object . 
returns all rows except those attributed to the requested UID ; does n't mutate the original structure . 
returns total bytes represented by this history . 
returns index of bucket that contains or is immediately before the requested time . 
returns index of bucket that contains or is immediately after the requested time . 
returns specific stats entry . 
removes buckets older than requested cutoff . 
returns interpolated data usage across the requested range . 
returns interpolated data usage across the requested range . 
creates an InetAddress from a string where the string must be a standard representation of a V4 or V6 address . 
Returns null if the address that was written was null or if the data is invalid . 
gets InetAddress masked with prefixLength . 
Returns the implicit netmask of an IPv4 address , as was the custom before 1993 . 
creates a string array of host addresses from a collection of InetAddresses @param addrs a Collection of InetAddresses @return an array of Strings containing their host addresses 
sets a key/value pair . 
gets a value for a key @param key @return The value associated with the key 
removes a key/value pair . 
returns the count of keys 
returns true if key is present , false if not . 
Gets the size in bytes 
Gets the raw data in bytes 
returns a key in the TXT record by zero-based index . Returns null if index exceeds the total number of keys . 
Returns null if index exceeds the total number of keys . Returns null if the key is present with no value . 
returns a string representation . 
gets a reference to NetworkService handler . 
gets the service name 
sets the service name 
gets the service type 
sets the service type 
gets the host address . 
sets the host address 
gets port number . 
adds a service attribute as a key/value pair . 
removes an attribute by key 
returns the proxy object to be used for the URL given as parameter . 
returns the proxy host sets by the user . 
returns the proxy port sets by the user . 
returns the default proxy host specified by the carrier . 
returns the default proxy port specified by the carrier . 
Returns the URL of the current PAC script or null if there is no PAC script . 
Gets the PSK identity hint to report to the client to help agree on the PSK for the provided socket . 
Gets the PSK identity hint to report to the client to help agree on the PSK for the provided engine . 
Gets the PSK identity to report to the server to help agree on the PSK for the provided socket . 
Gets the PSK identity to report to the server to help agree on the PSK for the provided engine . 
Gets the PSK to use for the provided socket . 
Gets the PSK to use for the provided engine . 
Find the route from a Collection of routes that best matches a given address . 
Returns a human-readable description of this object . 
Returns a hashcode for this RouteInfo object . 
Returns the time computed from the NTP transaction . 
Returns the round trip time of the NTP transaction @return round trip time in milliseconds . 
Returns a new socket factory instance with an optional handshake timeout . 
Returns a new socket factory instance with an optional handshake timeout and SSL session cache . 
Returns a new instance of a socket factory with all SSL security checks disabled , using an optional handshake timeout and SSL session cache . 
Returns an array containing the concatenation of length-prefixed byte strings . 
Sets the private key to be used for TLS Channel ID by connections made by this factory .  
Sets this socket 's SO_SNDTIMEO write timeout in milliseconds .  
Creates a new socket which is not connected to any remote host . 
Returns the network routes specified by this object . 
Returns a LinkProperties object expressing the data in this object . 
returns number of packets transmitted across mobile networks since device boot . 
returns number of packets received across mobile networks since device boot . 
returns number of bytes transmitted across mobile networks since device boot . 
returns number of bytes received across mobile networks since device boot . 
returns number of packets transmitted since device boot . 
returns number of packets received since device boot . 
returns number of bytes transmitted since device boot . 
returns number of bytes received since device boot . 
returns number of bytes transmitted by the given UID since device boot . 
returns number of bytes received by the given UID since device boot . 
returns number of packets transmitted by the given UID since device boot . 
returns number of packets received by the given UID since device boot . 
returns sets of any ifaces associated with mobile networks since boot . 
Returns true if this URI is opaque like `` mailto:nobody@google.com '' . 
Returns true if this URI is relative , i.e. if it does n't contain an explicit scheme . 
Returns true if this URI is absolute , i.e. if it contains an explicit scheme . 
Gets the scheme of this URI . 
Gets the scheme-specific part of this URI , i.e. everything between the scheme separator ' : ' and the fragment separator ' # ' . 
Gets the scheme-specific part of this URI , i.e. everything between the scheme separator ' : ' and the fragment separator ' # ' . 
Gets the decoded authority part of this URI . 
Gets the encoded authority part of this URI . 
Gets the decoded user information from the authority . 
Gets the encoded user information from the authority . 
Gets the encoded host from the authority for this URI . 
Gets the port from the authority for this URI . 
Gets the decoded path . 
Gets the encoded path . 
Gets the decoded query component from this URI . 
Gets the encoded query component from this URI . 
Gets the decoded fragment part of this URI , everything after the ' # ' . 
Gets the encoded fragment part of this URI , everything after the ' # ' . 
Gets the decoded path segments . 
Gets the decoded last segment in the path . 
Returns true if the encoded string representations of this Uri and the given Uri are equal . 
Returns the encoded string representation of this URI . 
returns a string representation of the URI that is safe to print to logs and other places where PII should be avoided .  
Creates a Uri which parses the given encoded URI string . 
Creates a Uri from a file . 
Returns -1 if none found . 
Returns -1 if none found . 
Creates an opaque Uri from the given components . 
Creates the encoded scheme-specific part from its sub parts . 
Sets the scheme . 
Sets the previously encoded opaque scheme-specific-part . 
Sets the previously encoded authority . 
Sets the path . 
Sets the previously encoded path . 
Sets the previously encoded query . 
Sets the previously encoded fragment . 
Returns a sets of the unique names of all query parameters . 
returns an equivalent URI with a lowercase scheme component . 
Returns true if the given character is allowed . 
Creates a part from the encoded string . 
Creates a part from the decoded string . 
Creates a part from the encoded and decoded strings . 
Gets the individual path segments . 
Creates a path from the encoded string . 
Creates a path from the decoded string . 
Creates a path from the encoded and decoded strings . 
Creates a new Uri by appending an already-encoded path segment to a base Uri . 
gets the current value sanitizer used when processing unregistered parameter values . 
sets the value sanitizer used when processing unregistered parameter values . 
returns a value sanitizer that does not allow any special characters , and also does not allow script URLs . 
returns a value sanitizer that allows all the characters used by encoded URLs . 
returns a value sanitizer that allows all the characters used by encoded URLs and allows spaces , which are not technically legal in encoded URLs , but commonly appear anyway . 
gets a sets of all of the parameters found in the sanitized query . 
gets the value for a parameter in the current sanitized query . Returns null if the parameter does not exit . 
sets whether or not unregistered parameters are allowed . 
gets whether or not unregistered parameters are allowed . 
sets whether or not the first occurrence of a repeated parameter is preferred . 
gets whether or not the first occurrence of a repeated parameter is preferred . 
gets the value sanitizer for a parameter . Returns null if there is no value sanitizer registered for the parameter . 
gets the effective value sanitizer for a parameter . 
Adds a network address to the VPN interface . 
Removes a network address from the VPN interface .  
Sets the underlying networks used by the VPN for its upstream connections .  
returns the communication interface to the service . 
sets the name of this session . 
adds a network address to the VPN interface . 
adds a network route to the VPN interface . 
adds a DNS server to the VPN connection . 
adds a search domain to the DNS resolver . 
Adds an application that 's allowed to access the VPN connection . 
Adds an application that 's denied access to the VPN connection . 
Sets the VPN interface 's file descriptor to be in blocking/non-blocking mode . 
Sets the underlying networks used by the VPN for its upstream connections . 
creates a VPN interface using the parameters supplied to this builder .  
Returns a consolidated list of AIDs from the AID groups registered by this service . 
Returns the registered AID group for this category . 
Returns a consolidated list of AID groups registered by this service . 
Returns the category to which this service has attributed the AID that is passed in , or null if we do n't know this AID . 
Returns whether the user has allowed AIDs registered in the specified category to be handled by a service that is preferred by the foreground application , instead of by a pre-configured default . 
Returns the service selection mode for the passed in category . 
Removes a previously registered list of AIDs for the specified category for the service provided . 
Removes a registered System Code for the specified service . 
sets a NFCID2 for the specified service . 
gets the NDEF Records inside this NDEF Message . 
returns this NDEF Message as raw bytes . 
Returns true if the specified NDEF Message contains identical NDEF Records . 
creates a new NDEF Record containing a URI . 
creates a new NDEF Record containing a URI . 
creates a new NDEF Record containing MIME data . 
creates a new NDEF record containing UTF-8 text data . 
Returns the 3-bit TNF . 
Returns the variable length Type field . Returns an empty byte array if this record does not have a type field . 
Returns the variable length ID . Returns an empty byte array if this record does not have an id field . 
Returns the variable length payload . Returns an empty byte array if this record does not have a payload field . 
returns this NDEF Record as a byte array . 
gets byte length of serialized record . 
Returns true if the specified NDEF Record contains identical tnf , type , id and payload fields . 
find activity state from mActivities 
find or creates activity state from mActivities 
Returns the NfcAdapter for application context , or throws if NFC is not available .  
gets handle to NFC service interface 
Returns the binder interface to the service .  
Returns the binder interface to the tag service .  
Returns the binder interface to the card emulation service .  
Returns the binder interface to the NFC-F card emulation service .  
returns true if this NFC Adapter has any features enabled . 
returns the state of this NFC Adapter . 
Removes a previously registered unlock handler .  
gets the default NFC Adapter for this device . 
gets the technologies available in this tag , as fully qualified class names .  
returns the type of this MIFARE Classic compatible tag . 
returns true if the tag is emulated , determined at discovery time .  
returns the number of MIFARE Classic sectors . 
returns the total number of MIFARE Classic blocks . 
returns the number of blocks in the given sector . 
returns the sector that contains a given block . 
returns the first block of a given sector . 
returns the MIFARE Ultralight type of the tag . 
gets the NDEF tag type . 
gets the maximum NDEF message size in bytes . 
returns the ATQA/SENS _ RES bytes from tag discovery . 
returns the SAK/SEL _ RES bytes from tag discovery . 
returns the Application Data bytes from ATQB/SENSB _ RES at tag discovery . 
returns the Protocol Info bytes from ATQB/SENSB _ RES at tag discovery . 
Returns the NFC Barcode tag type . 
Returns the barcode of an NfcBarcode tag .  
returns the System Code bytes from tag discovery . 
returns the Manufacturer bytes from tag discovery . 
returns the Response Flag bytes from tag discovery . 
returns the DSF ID bytes from tag discovery . 
Returns the current status of this task . 
Returns <tt> true </tt> if this task was cancelled before it completed normally . 
sets global variable indicating that any Bundles parsed in this process should be `` defused . ''  
returns the ClassLoader currently associated with this Bundle . 
Returns the number of mappings contained in this Bundle . 
Returns true if the mapping of this Bundle is empty , false otherwise . 
Removes all elements from the mapping of this Bundle . 
Returns true if the given key is contained in the mapping of this Bundle . 
Returns the entry with the given key as an object . 
Removes any entry with the given key from the mapping of this Bundle . 
Returns a sets containing the Strings used as keys in this Bundle . 
Returns the value associated with the given key , or false if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or 0 if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or 0L if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or 0.0 f if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or 0.0 if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associated with the given key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associated with the given key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
returns true if the battery is currently considered to be charging . 
Returns the requested value , or Long.MIN _ VALUE if property not supported on this system or on other error . 
returns the value of a battery property of integer type . 
returns the value of a battery property of long type If the platform does not provide the property queried , this value will be Long.MIN _ VALUE . 
Returns true if the device is plugged into any of the specified plug types . 
Returns the current plug type . 
Returns battery level as a percentage . 
Returns whether we currently consider the battery level to be low . 
Returns a non-zero value if an unsupported charger is attached . 
Returns the count associated with this Counter for the selected type of statistics . 
Returns the count associated with this Timer for the selected type of statistics . 
Returns the total time in microseconds associated with this Timer for the selected type of statistics . 
Returns the total time in microseconds associated with this Timer since the ` mark ' was last sets . 
Returns a mapping containing wakelock statistics . 
Returns a mapping containing sync statistics . 
Returns a mapping containing scheduled job statistics . 
Returns a mapping containing sensor statistics . 
Returns a mapping containing active process data . 
Returns a mapping containing process statistics . 
Returns a mapping containing package statistics . 
Returns true if this process is still active in the battery stats . 
Returns the number of times the process has been started . 
Returns the number of times the process has crashed . 
Returns the number of times the process has ANRed . 
Returns information about all wakeup alarms that have been triggered for this package . 
Returns a mapping containing service statistics . 
Returns the amount of time spent started . 
Returns the total number times the service has been launched . 
returns whether the command code is a delta data update . 
returns the base time offset for the battery history . 
Returns the number of times the device has been started . 
Returns the time in microseconds that the screen has been on while the device was running on battery . 
Returns the number of times the screen was turned on . 
Returns the time in microseconds that power save mode has been enabled while the device was running on battery . 
Returns the number of times that power save mode was enabled . 
Returns the time in microseconds that device has been in idle mode while running on battery . 
Returns the number of times that the devie has gone in to idle mode . 
Returns the time in microseconds that device has been in idling while on battery . 
Returns the number of times that the devie has started idling . 
Returns the number of times that connectivity state changed . 
Returns the time in microseconds that the phone has been on while the device was running on battery . 
Returns the number of times a phone call was activated . 
Returns the time in microseconds that the phone has been running with the given signal strength . 
Returns the time in microseconds that the phone has been trying to acquire a signal . 
Returns the number of times the phone has entered the given signal strength . 
Returns the number of times that the mobile network has transitioned to the active state . 
Returns the time in microseconds that is the difference between the mobile radio time we saw based on the elapsed timestamp when going down vs. the given time stamp from the radio . 
returns count of number of times radio was up that could not be blamed on apps . 
Returns the time in microseconds that the phone has been running with the given data connection . 
Returns the number of times the phone has entered the given data connection type . 
Returns the time in microseconds that wifi has been on while the device was running on battery . 
Returns the time in microseconds that wifi has been on and the driver has been in the running state while the device was running on battery . 
Returns the time in microseconds that WiFi has been running in the given state . 
Returns the number of times that WiFi has entered the given state . 
Returns the time in microseconds that the wifi supplicant has been in a given state . 
Returns the number of times that the wifi supplicant has transitioned to a given state . 
Returns the time in microseconds that WIFI has been running with the given signal strength . 
Returns the number of times WIFI has entered the given signal strength . 
Returns the time in microseconds that the flashlight has been on while the device was running on battery . 
Returns the number of times that the flashlight has been turned on while the device was running on battery . 
Returns the time in microseconds that the camera has been on while the device was running on battery . 
Returns the time in microseconds that bluetooth scans were running while the device was on battery . 
Returns true if the BatteryStats object has detailed WiFi power reports . 
Returns true if the BatteryStats object has detailed bluetooth power reports . 
Returns true if the BatteryStats object has detailed modem power reports . 
returns the wall clock time when battery stats data collection started . 
returns platform version tag that we were running in when the battery stats started . 
returns platform version tag that we were running in when the battery stats ended . 
returns the internal version code of the parcelled format . 
returns whether we are currently running on battery . 
Returns a SparseArray containing the statistics for each uid . 
Returns the current battery uptime in microseconds . 
Returns the current battery realtime in microseconds . 
Returns the battery percentage level at the last time the device was unplugged from power , or the last time it booted on battery power . 
Returns the current battery percentage level if we are in a discharge cycle , otherwise returns the level at the last plug event . 
gets the amount the battery has discharged since the stats were last reset after charging , as a lower-end approximation . 
gets the amount the battery has discharged since the stats were last reset after charging , as an upper-end approximation . 
gets the amount the battery has discharged while the screen was on , since the last time power was unplugged . 
gets the amount the battery has discharged while the screen was on , since the last time the device was charged . 
gets the amount the battery has discharged while the screen was off , since the last time power was unplugged . 
gets the amount the battery has discharged while the screen was off , since the last time the device was charged . 
Returns the total , last , or current battery uptime in microseconds . 
Returns the total , last , or current battery realtime in microseconds . 
Returns the total , last , or current battery screen off uptime in microseconds . 
Returns the total , last , or current battery screen off realtime in microseconds . 
Returns the total , last , or current uptime in microseconds . 
Returns the total , last , or current realtime in microseconds . 
Returns -1 if no time can be computed : either there is not enough current data to make a decision , or the battery is currently charging . 
returns the counter keeping track of the amount of battery discharge while the screen was off , measured in micro-Ampere-hours . 
returns the counter keeping track of the amount of battery discharge measured in micro-Ampere-hours . 
Returns the estimated real battery capacity , which may be less than the capacity declared by the PowerProfile . 
returns the array of discharge step durations . 
returns the array of daily discharge step durations . 
Returns -1 if no time can be computed : either there is not enough current data to make a decision , or the battery is currently discharging . 
returns the array of charge step durations . 
returns the array of daily charge step durations . 
gets the binder transaction tracker for this process .  
returns the ID of the process that sent you the current transaction that is being processed . 
returns the Linux uid assigned to the process that sent you the current transaction that is being processed . 
returns the UserHandle assigned to the process that sent you the current transaction that is being processed . 
Sets the native thread-local StrictMode policy mask . 
Gets the current native thread-local StrictMode policy mask . 
adds the calling thread to the IPC thread pool . 
Returns true if the specified interface is a proxy .  
Returns the version string for the radio firmware . 
returns the ClassLoader currently associated with this Bundle . 
Removes all elements from the mapping of this Bundle . 
Removes any entry with the given key from the mapping of this Bundle . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or 0.0 f if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associatd with the given key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns true if the operation has been canceled . 
Sets the cancellation listener to be called when canceled . 
Sets the remote transport .  
Creates a transport that can be returned back to the caller of a Binder function and subsequently used to dispatch a cancellation signal .  
Gets the common clock 's current time . 
Gets the current estimation of common clock 's synchronization accuracy from the common time service . 
Gets the ID of the timeline the common time service is currently synchronizing its clock to . 
Gets the current state of this clock 's common time service in the the master election algorithm . 
Gets the IP address and UDP port of the current timeline master . 
Gets the current priority of the common time service used in the master election protocol . 
Sets the current priority of the common time service used in the master election protocol . 
Gets the IP endpoint used by the time service to participate in the master election protocol . 
Sets the IP endpoint used by the common time service to participate in the master election protocol . 
Gets the current group ID used by the common time service in the master election protocol . 
Sets the current group ID used by the common time service in the master election protocol . 
Gets the name of the network interface which the common time service attempts to bind to . 
Sets the name of the network interface which the common time service should attempt to bind to . 
Gets the amount of time the common time service will wait between master announcements when it is the timeline master . 
Sets the amount of time the common time service will wait between master announcements when it is the timeline master . 
Gets the amount of time the common time service will wait between time synchronization requests when it is the client of another common time service on the network . 
Sets the amount of time the common time service will wait between time synchronization requests when it is the client of another common time service on the network . 
Gets the panic threshold for the estimated error level of the common time service . 
Sets the panic threshold for the estimated error level of the common time service . 
Gets the current state of the common time service 's auto disable flag . 
Sets the current state of the common time service 's auto disable flag . 
Gets the active time in milliseconds since the system last booted . 
Gets the total time in milliseconds that the CPU has been enabled since the system last booted . 
returns total PSS memory usage in kB . 
returns total PSS memory usage in kB . 
returns total PSS memory usage in kB mapping a file of one of the following extension : . 
returns total private dirty memory usage in kB . 
returns total shared dirty memory usage in kB . 
returns total shared clean memory usage in kB . 
returns total shared clean memory usage in kB . 
returns total swapped out memory in kB .  
returns total swapped out memory in kB , proportional .  
Returns `` true '' if one or more threads is waiting for a debugger to attach . 
Returns an array of strings that identify VM features .  
gets an indication of thread CPU usage . 
Returns the size of the native heap . 
Returns the amount of allocated memory in the native heap . 
Returns the amount of free memory in the native heap . 
gets the number of loaded classes . 
Returns a count of the extant instances of a class .  
Returns the number of sent transactions from this process . 
Returns the number of received transactions from the binder driver . 
Returns the number of active local Binder objects that exist in the current process . 
Returns the number of references to remote proxy Binder objects that exist in the current process . 
Returns the number of death notification links to Binder objects that exist in the current process . 
returns the total number of method-invocation instructions executed globally . 
Returns true if the type of the field matches the specified class . 
gets a debugging dump of a system service by name . 
gets description of unreachable native memory .  
returns a String describing the calling method and location at a particular stack depth . 
returns a string consisting of methods and locations at multiple call stack levels . 
returns a string consisting of methods and locations at multiple call stack levels . 
Gets the next entry from the drop box <em> after </em> the specified time . 
returns root of the `` system '' partition holding the core Android OS . 
returns root directory of the `` oem '' partition holding OEM customizations , if any .  
returns root directory of the `` odm '' partition holding ODM customizations , if any .  
returns root directory of the `` vendor '' partition that holds vendor-provided software that should persist across simple reflashing of the `` system '' partition .  
returns the system directory for a user .  
Returns the config directory for a user .  
returns the user data directory . 
Returns the base directory for per-user system directory , device encrypted . 
Returns the base directory for per-user system directory , credential encrypted . 
returns the primary shared/external storage directory . 
gets a top-level shared/external storage directory for placing files of a particular type . 
Returns the path for android-specific data on the SD card .  
returns the download/cache content directory . 
Returns the current state of the primary shared/external storage media . 
Returns the current state of the shared/external storage media at the given path . 
Returns whether the primary shared/external storage media is physically removable . 
Returns whether the shared/external storage media at the given path is physically removable . 
Returns whether the primary shared/external storage media is emulated . 
Returns whether the shared/external storage media at the given path is emulated . 
Returns original path if given path does n't meet these criteria .  
Gets the current factory test mode . 
sets owner and mode of of given path . 
returns owning UID of given path , otherwise -1 . 
returns true if succeed , returns false if failed . 
Returns a string representing the name of the specified message . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
removes any pending posts of Runnable r that are in the message queue . 
removes any pending posts of Runnable <var> r </var> with Object <var> token </var> that are in the message queue . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
removes any pending posts of messages with code ` what ' that are in the message queue . 
removes any pending posts of messages with code ` what ' and whose obj is ` object ' that are in the message queue . 
removes any pending posts of callbacks and sent messages whose <var> obj </var> is <var> token </var> . 
Returns the identifier of this thread .  
returns an array of device temperatures in Celsius . 
returns an array of CPU usage info for each core . 
returns an array of fan speeds in RPM . 
gets a string representation of this class . 
returns how many keys there are for the given field type . 
returns the index for the given type and key combination in the array of field keys or values . 
gets the array of keys for the given field type . 
adds a value . 
gets the array of values that have been added , with the values in numerically increasing order . 
gets a name representing the contents of this object . 
returns whether this object contains a TimerStat for the supplied key . 
returns a TimerStat object for the given key . 
gets the count for the timer for the given key . 
gets the time for the timer for the given key , in milliseconds . 
gets the number of timer values in this object . 
gets the key for the timer at the given index . 
returns whether this object contains a measurement for the supplied key . 
gets the measurement for the given key . 
gets the number of measurement values in this object . 
gets the key for the measurement at the given index . 
returns whether this object contains a HealthStats map for the supplied key . 
gets the HealthStats map for the given key . 
gets the number of HealthStat map values in this object . 
gets the key for the timer at the given index . 
returns whether this object contains a timers map for the supplied key . 
gets the TimerStat map for the given key . 
gets the number of timer map values in this object . 
gets the key for the timer map at the given index . 
returns whether this object contains a measurements map for the supplied key . 
gets the measurements map for the given key . 
gets the number of measurement map values in this object . 
gets the key for the measurement map at the given index . 
gets the index in keys of key . 
creates an ArrayMap < String , HealthStats > from the given Parcel . 
creates an ArrayMap < String , T extends Parcelable > from the given Parcel using the given Parcelable.Creator . 
creates an ArrayMap < String , Long > from the given Parcel . 
adds a timer for the given key . 
adds a measurement for the given key . 
adds a recursive HealthStats object for the given key and string name . 
adds a TimerStat for the given key and string name . 
adds a measurement for the given key and string name . 
sets the count for this timer . 
gets the count for this timer . 
sets the time for this timer in milliseconds . 
gets the time for this timer in milliseconds . 
Returns address of the `` freeFunction '' . 
gets the canonical name of the interface supported by this binder . 
removes a previously registered death notification . 
returns a list of all currently running services . 
Returns the first match in the locale list given an unordered array of supported locales in BCP 47 format . 
Returns true if the collection of locale tags only contains empty locales and pseudolocales . 
Returns the default locale list , adjusted by moving the default locale to its first position . 
Returns the application 's main looper , which lives in the main thread of the application . 
returns the Looper object associated with the current thread . Returns null if the calling thread is not associated with a Looper . 
Returns true if the current thread is this looper 's thread . 
Gets the Thread associated with this Looper . 
Gets this looper 's message queue . 
returns memory address for ashmem region 
Returns the length of the memory file . 
Creates a new InputStream for reading from the memory file . 
Creates a new OutputStream for writing to the memory file . 
Gets a FileDescriptor for the memory file .  
Returns the size of the memory file that the file descriptor refers to , or -1 if the file descriptor does not refer to a memory file .  
returns a new Message instance from the global pool . 
returns a Message instance to the global pool .  
returns the targeted delivery time of this message , in milliseconds . 
Sets a Bundle of arbitrary data values . 
Returns true if the looper has no pending messages which are due to be processed . 
Returns whether this looper 's thread is currently polling for more work to do .  
Adds a file descriptor listener to receive notification when file descriptor related events occur . 
Removes a file descriptor listener . 
Removes a synchronization barrier .  
returns true to keep your idle handler active , false to have it removed . 
Returns the total amount of data contained in the parcel . 
Returns the amount of data remaining to be read from the parcel . 
Returns the current position in the parcel data . 
Returns the total amount of space in the parcel . 
Returns the raw bytes of the parcel . 
sets the bytes in data to be the raw bytes of this Parcel . 
Returns null if the previously written map object was null . 
Returns null if the previously written Bundle object was null . 
Returns null if the previously written Bundle object was null . 
Returns null if the previously written Bundle object was null . 
Returns null if the previously written Bundle object was null . 
Returns null if the previously written list object was null . 
Returns null if the previously written array was null . 
Returns null if the previously written list object was null . 
Returns null if the previously written list object was null . 
Returns null if the previously written list object was null . 
Returns null if the previously written list object was null . 
Returns null if the previously written list object was null . 
Returns null if the previously written array was null . 
Returns null if the previous written object was null . 
creates a new array of the Parcelable class . 
creates a new ParcelFileDescriptor accessing a given file . 
creates a new ParcelFileDescriptor accessing a given file . 
creates a new ParcelFileDescriptor that is a dup of an existing FileDescriptor . 
creates a new ParcelFileDescriptor that is a dup of the existing FileDescriptor . 
creates a new ParcelFileDescriptor from a raw native fd . 
creates a new ParcelFileDescriptor from the specified Socket . 
creates a new ParcelFileDescriptor from the specified DatagramSocket . 
creates two ParcelFileDescriptors structured as a data pipe . 
creates two ParcelFileDescriptors structured as a data pipe . 
creates two ParcelFileDescriptors structured as a pair of sockets connected to each other . 
creates two ParcelFileDescriptors structured as a pair of sockets connected to each other . 
Gets a file descriptor for a read-only copy of the given data . 
Returns -1 if the fd is not a file . 
returns the native fd int for this ParcelFileDescriptor . 
returns the native fd int for this ParcelFileDescriptor and detach it from the object here . 
Returns a string representation of the ParcelUuid For example : 0000110B-0000-1000-8000-00805F9B34FB will be the returns value . 
Returns collected data in a Bundle object . 
adds a measured segment , and start measuring the next segment . Returns collected data in a Bundle object . 
adds an integer type measurement to the collector . 
adds a float type measurement to the collector . 
adds a string field to the collector . 
Returns a bundle with the current results from the allocation counting . 
Returns a bundle with the counts for various binder counts for this process . 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Gets the minimum supported screen brightness setting .  
Gets the maximum supported screen brightness setting .  
Gets the default screen brightness setting .  
Returns true if the twilight service should be used to adjust screen brightness policy .  
Creates a new wake lock with the specified level and flags . 
Returns true if the specified wake lock level is supported . 
Returns true if the device is in an interactive state . 
Returns true if the device is in an interactive state . 
Returns true if the device is currently in power save mode . 
sets the current power save mode . 
Returns true if the device is currently in idle mode . 
Returns true if the device is currently in light idle mode .  
returns whether the given application package name is on the device 's power whitelist . 
Sets whether this WakeLock is reference counted . 
Returns true if the wake lock has been acquired but not yet released . 
Sets the work source associated with the wake lock . 
Returns elapsed milliseconds of the time this process has run . 
Returns true if the current process is a 64-bit runtime . 
Returns the identifier of this process ' parent .  
Returns the identifier of this process 's uid . 
Returns this process 's user handle . 
Returns whether the given uid belongs to an application . 
Returns whether the current process is in an isolated sandbox .  
Returns the UID assigned to a particular user name , or -1 if there is none . 
Returns the GID assigned to a particular user name , or -1 if there is none . 
Returns a uid for a currently running process . 
Returns the parent process id for a currently running process .  
Returns the thread group leader id for a currently running thread .  
sets the priority of a thread , based on Linux priorities . 
Sets the scheduling group for a thread . 
Sets the scheduling group for a process and all child threads @param pid The identifier of the process to change . 
returns the scheduling group of requested process .  
sets the priority of the calling thread , based on Linux priorities .  
returns the current priority of a thread , based on Linux priorities . 
sets the scheduling policy and priority of a thread , based on Linux . 
Gets the total Pss value for a given process , in bytes . 
removes all process groups .  
adds a new callback to the list .  
Returns false if the given callback was not found on the list . 
Returns the number of registered callbacks . 
Sets the security context for newly created file objects . 
gets the security context of a file object . 
gets the security context of a peer socket . 
Gets the security context of the current process . 
Gets the security context of a given process id . 
Returns a reference to a service with the given name . 
returns a list of all currently running services . 
returns the next option on the command line -- that is an argument that starts with ' - ' . 
returns the next argument on the command line , whatever it is ; if there are no arguments left , returns null . 
returns the next argument on the command line , whatever it is ; if there are no arguments left , throws an IllegalArgumentException to report this to the user . 
Returns true if a USB mass storage host is connected 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns an array of pids with open files on the specified path . 
Gets the state of a volume via its mountpoint . 
Creates a secure container with the specified parameters . Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns true if the specified container is mounted 
Returns an int consistent with MountServiceResultCode 
Returns the filesystem path of a mounted secure container . 
Gets an Array of currently known secure container IDs 
Returns whether the external storage is emulated . 
Returns the filesystem path of a mounted secure container . 
Returns an int consistent with MountServiceResultCode 
Creates a secure container with the specified parameters . Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Gets an Array of currently known secure container IDs 
Returns the filesystem path of a mounted secure container . 
Returns an array of pids with open files on the specified path . 
Gets the state of a volume via its mountpoint . 
Returns true if the specified container is mounted 
Returns true if a USB mass storage host is connected 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns an int consistent with MountServiceResultCode 
Returns whether or not the external storage is emulated . 
Returns list of all mountable volumes . 
Gets the path on the filesystem for the ASEC container itself . 
Returns an int consistent with MountServiceResultCode 
gets password from vold @return password or empty string 
sets a field in the crypto header . 
Gets a field from the crypto header . 
returns from an OBB action result . 
returns from an OBB action result . 
Gets the external storage mount mode for the given uid . 
Gets whether external storage should be reported to the given UID . 
Adds a policy for determining how external storage is mounted and reported . 
Gets the mount mode to use for a given UID as determined by consultin all policies . 
Gets the state of a volume via its mountpoint .  
returns the list of shared/external storage volumes available to the current user . 
returns the primary shared/external storage volume available to the current user . 
Returns list of paths for all mountable volumes .  
returns the number of available bytes until the given path is considered running low on storage .  
returns the number of available bytes at which the given path is considered running low on storage .  
returns the number of available bytes at which the given path is considered full .  
returns if data stored at or under the given path will be encrypted while at rest . 
Returns the mount path for the volume . 
Returns a user-visible description of the volume . 
Returns true if the volume is removable . 
Returns true if the volume is emulated . 
Returns the MTP storage ID for the volume . 
Returns true if this volume can be shared via USB mass storage . 
Returns maximum file size for the volume , or zero if it is unbounded . 
Gets the volume UUID , if any . 
Returns the current state of the volume . 
sets an upper bound on how many instances of a class can be in memory at once . 
Sets the policy for what actions on the current thread should be detected , as well as the penalty if such actions occur . 
Sets up CloseGuard in Dalvik/libcore 
Returns the bitmask of the current thread 's policy . 
Returns the current thread 's policy . 
Gets the current VM policy . 
Returns an object that is used to track instances of activites .  
Sets the current wall time , in milliseconds . 
Returns milliseconds since boot , not counting time spent in deep sleep . 
Returns milliseconds since boot , including time spent in sleep . 
Returns nanoseconds since boot , including time spent in sleep . 
Returns milliseconds running in the current thread . 
Returns microseconds running in the current thread . 
Returns current wall time in microseconds . 
gets the value for the given key . 
gets the value for the given key . 
gets the value for the given key , and returns as an integer . 
gets the value for the given key , and returns as a long . 
gets the value for the given key , returned as a boolean . 
sets the value for the given key . 
returns current state of given service . 
Returns true if a trace tag is enabled .  
sets whether application tracing is allowed for this process .  
sets whether tracing is enabled in this process .  
Removes every key/value pair where value = observer from mObservers 
Returns the user for a given uid . 
Returns the user id for a given uid .  
Returns the uid that is composed from the userId and the appId .  
Returns the gid shared between all apps with this userId .  
Returns the shared app gid for a given uid or appId .  
Returns the app id for a given shared app gid . Returns -1 if the ID is invalid .  
Returns the user id of the current process @return user id of the current process 
Returns true if this UserHandle refers to the owner user ; false otherwise . 
Returns the userId stored in this UserHandle .  
Returns whether this device supports multiple users with their own login and customizable space . 
Returns whether switching users is currently allowed . 
Returns the user handle for the user that this process is running under .  
Returns the user name of the user making this call . 
Returns whether the caller is running as an admin user . 
Returns whether the provided user is an admin user . 
Returns whether the specified user is ephemeral .  
returns whether the given user is actively running . 
returns whether the given user is actively running <em> or </em> stopping . 
returns whether the calling user is running in an `` unlocked '' state . 
returns whether the given user is running in an `` unlocked '' state . 
Returns the UserInfo object describing a specific user .  
Returns who sets a user restriction on a user . 
Returns the user-wide restrictions imposed on this user . 
Returns the user-wide restrictions imposed on the user specified by userHandle . 
Returns whether the given user has been disallowed from performing certain actions or setting certain settings through UserManager . 
Sets the value of a specific restriction . 
Sets the value of a specific restriction on a specific user . 
Returns whether the current user has been disallowed from performing certain actions or setting certain settings . 
Returns whether the given user has been disallowed from performing certain actions or setting certain settings . 
returns the serial number for a user . 
Creates a user with the specified name and options .  
Creates a guest user and configures it . 
Creates a user with the specified name and options as a profile of another user .  
Creates a restricted profile with the specified name .  
Returns an intent to creates a user for the provided name and account name . 
Returns the preferred account name for user creation . 
Returns the preferred account type for user creation . 
Returns the preferred account 's options bundle for user creation . 
Sets the user as enabled , if such an user exists . 
returns the number of users currently created on the device . 
Returns information for all users on this device , including ones marked for deletion .  
Returns serial numbers of all users on this device .  
sets account name for the given user .  
Returns information for Primary user .  
Returns list of the profiles of userHandle including userHandle itself .   
Returns list of the profiles of userHandle including userHandle itself .  
Returns a list of UserHandles for profiles associated with the user that the calling process is running on , including the user itself . 
Returns a list of ids for profiles associated with the specified user including the user itself .  
Returns the device credential owner id of the profile from which this method is called , or userHandle if called from a user that is not a profile .  
Returns the parent of the profile which this method is called from or null if called from a user that is not a profile .  
sets quiet mode of a managed profile .  
Returns whether the given profile is in quiet mode or not . 
Returns information for all users on this device .  
Removes a user and all associated data .  
Sets the user 's photo .  
Returns a file descriptor for the user 's photo .  
Returns the maximum number of users that can be created on this device . 
Returns true if the user switcher should be shown , this will be if device supports multi-user and there are at least 2 users available that are not managed profiles . 
Returns a serial number on this device for a given userHandle .  
Returns a userHandle on this device for a given user serial number .  
Sets a new challenge PIN for restrictions . 
sets restrictions that should apply to any future guest user that 's created . 
Gets the default guest restrictions . 
Returns creation time of the user or of a managed profile associated with the calling user . 
Returns the `` base '' user restrictions . 
returns a user restriction . 
Adds a listener to user restriction changes . 
returns whether the given user is running 
sets user 's running state 
removes user 's running state 
Returns 0 if equal , negative if ` this ' is before ` other ' , positive if ` this ' is after ` other ' . 
Gets the runtime permissions for an app . 
Gets the apps that use runtime permissions . 
Sets the title of the dialog . 
Returns the title to be shown on subsequent dialogs . 
Sets the message of the dialog . 
Returns the message to be shown on subsequent dialogs . 
Sets the icon of the dialog . 
Returns the icon to be shown on subsequent dialogs . 
Sets the text of the positive button of the dialog . 
Returns the text of the positive button to be shown on subsequent dialogs . 
Sets the text of the negative button of the dialog . 
Returns the text of the negative button to be shown on subsequent dialogs . 
Returns the layout resource that is used as the content View for subsequent dialogs . 
Returns whether the preference needs to display a soft input method when the dialog is displayed .  
Sets the required flags on the dialog window to enable input method window to show up . 
Gets the dialog that is shown by this preference . 
Adds the EditText widget of this preference to the dialog 's view . 
returns null for the default behavior . 
creates a copy of the existing inflater object , with the copy pointing to a different Context than the original . 
Sets the default package that will be searched for classes to construct for tag names that have no explicit package . 
Returns the default package , or null if it is not sets . 
returns the context we are running in , for access to resources , class loader , etc. . 
Sets the human-readable entries to be shown in the list . 
Returns the array of values to be saved for the preference . 
Sets the value of the key . 
Returns the summary of this ListPreference . 
Sets the summary for this Preference with a CharSequence . 
Sets the value to the given index from the entry values . 
Returns the value of the key . 
Returns the entry corresponding to the current value . 
Sets the human-readable entries to be shown in the list . 
Returns the array of values to be saved for the preference . 
gets the boolean state of a given value . 
sets the boolean state of a given value . 
Sets the current values . 
Returns the summary of this ListPreference . 
Sets the summary for this Preference with a CharSequence . 
Returns the currently selected values . 
Sets the human-readable entries to be shown in the list . 
Returns the array of values to be saved for the preference . 
Sets the value of the key . 
Sets the class name of a fragment to be shown when this Preference is clicked . 
returns the fragment class name associated with this Preference . 
returns the extras Bundle object associated with this preference , creating a new Bundle if there currently is n't one . 
returns the extras Bundle object associated with this preference , returning null if there is not currently one . 
Sets the layout for the controllable widget portion of this Preference . 
Gets the layout resource for the controllable widget portion of this Preference . 
Sets the order of this Preference with respect to other Preference objects on the same level . 
Gets the order of this Preference with respect to other Preference objects on the same level . 
Sets the title for this Preference with a CharSequence . 
Sets the title for this Preference with a resource ID . 
Returns the title resource ID of this Preference . 
Returns the title of this Preference . 
Sets the icon for this Preference with a Drawable . 
Sets the icon for this Preference with a resource ID . 
Returns the icon of this Preference . 
Returns the summary of this Preference . 
Sets the summary for this Preference with a CharSequence . 
Sets the summary for this Preference with a resource ID . 
Sets whether this Preference is enabled . 
Sets whether this Preference is selectable . 
Sets whether this Preference should disable its view when it gets disabled . 
Returns a unique ID for this Preference . 
Gets the key for this Preference , which is also the key used for storing values into SharedPreferences . 
Sets whether this Preference is persistent . 
Sets the callback to be invoked when this Preference is clicked . 
Returns the callback to be invoked when this Preference is clicked . 
Returns false by default .  
Sets the internal change listener . 
Adds a dependent Preference on this Preference so we can notify it . 
Removes a dependent Preference on this Preference . 
Sets the key of a Preference that this Preference will depend on . 
Returns the key of the dependency on this Preference . 
Sets the default value for this Preference , which will be sets either if persistence is off or persistence is on and the preference is not found in the persistent storage . 
Returns the text that will be used to filter this Preference depending on user input . 
returns the currently sets title . 
returns the currently sets summary . 
returns the currently sets bread crumb title . 
returns the currently sets bread crumb short title . 
Returns true if this activity is currently showing the header list . 
Returns the Header list 
Returns true if this activity is showing multiple panes -- the headers and a preference fragment . 
sets a footer that should be shown at the bottom of the header list . 
Sets the root of the preference hierarchy that this activity is showing . 
Gets the root of the preference hierarchy that this activity is showing . 
Sets the root of the preference hierarchy that this fragment is showing . 
Gets the root of the preference hierarchy that this fragment is showing . 
Creates a string that includes the preference name , layout id and widget layout id . 
Sets the owning preference fragment 
Returns the owning preference fragment , if any . 
Returns the current name of the SharedPreferences file that preferences managed by this will use . 
Sets the name of the SharedPreferences file that preferences managed by this will use . 
Returns the current mode of the SharedPreferences file that preferences managed by this will use . 
Sets the mode of the SharedPreferences file that preferences managed by this will use . 
Gets a SharedPreferences instance that preferences managed by this will use . 
Gets a SharedPreferences instance that points to the default file that is used by the preference framework in the given context . 
Returns the name used for storing default shared preferences . 
Returns the root of the preference hierarchy managed by this class . 
Sets the root of the preference hierarchy . 
Returns an editor to use when modifying the shared preferences . 
Returns the activity that shows the preferences . 
Returns the context . 
Returns a request code that is unique for the activity . 
Creates the root adapter . 
Returns whether to a show an item for the default sound/ringtone . 
Sets whether to show an item for the default sound/ringtone . 
Returns whether to a show an item for ` Silent ' . 
Sets whether to show an item for ` Silent ' . 
sets the text displayed on the switch widget in the on state . 
sets the text displayed on the switch widget in the off state . 
sets the text displayed on the switch widget in the on state . 
sets the text displayed on the switch widget in the off state . 
Returns the checked state . 
Sets the summary to be shown when checked . 
Returns the summary to be shown when checked . 
Sets the summary to be shown when unchecked . 
Returns the summary to be shown when unchecked . 
Gets whether a page range contains a a given page .  
gets the size of this range which is the number of pages it contains .  
Gets the page width . 
Gets the page height . 
Gets the content rectangle . 
Gets the media size . 
Sets the media size .  
Gets the resolution . 
Sets the resolution .  
Gets the minimal margins . 
Sets the minimal margins .  
Gets the color mode . 
Sets the color mode . 
Gets whether this print attributes are in portrait orientation , which is the media size is in portrait and all orientation dependent attributes such as resolution and margins are properly adjusted .  
Gets the duplex mode . 
Sets the duplex mode . 
Gets a new print attributes instance which is in portrait orientation , which is the media size is in portrait and all orientation dependent attributes such as resolution and margins are properly adjusted .  
Gets a new print attributes instance which is in landscape orientation , which is the media size is in landscape and all orientation dependent attributes such as resolution and margins are properly adjusted .  
Gets the unique media size id . 
Gets the human readable media size label . 
Gets whether this media size is in portrait which is the height is greater or equal to the width . 
Returns a new media size instance in a portrait orientation , which is the height is the greater dimension . 
Returns a new media size instance in a landscape orientation , which is the height is the lesser dimension . 
Gets a standard media size given its id .  
Gets the unique resolution id . 
Gets the resolution human readable label . 
Sets the media size . 
Sets the resolution . 
Sets the minimal margins . 
Sets the color mode . 
Sets the duplex mode . 
Gets the document name . 
Gets the total number of pages . 
Gets the content type . 
Gets the document data size in bytes . 
Sets the document data size in bytes .  
Sets the total number of pages . 
Sets the content type . 
Gets the supported media sizes . 
Gets the supported resolutions . 
Gets the minimal margins . 
Gets the bit mask of supported color modes . 
Gets the bit mask of supported duplex modes . 
Gets the default print attributes . 
Adds a supported media size . 
Adds a supported resolution . 
Sets the minimal margins . 
Sets the color modes . 
Sets the duplex modes . 
Gets the id of this printer which is unique in the context of the print service that manages it . 
gets the globally unique printer id . 
gets the icon to be used for this printer .  
gets the printer name . 
Gets the printer status . 
Gets the printer description . 
Gets the printer capabilities . 
Sets the printer status . 
sets a drawable resource as icon for this printer . 
Sets the localized printer name which is shown to the user @param name The name . 
Sets the localized printer description which is shown to the user @param description The description . 
Sets the printer capabilities . 
Gets the unique print job id . 
Gets whether this print job is queued . 
Gets whether this print job is started . 
Gets whether this print job is blocked . 
Gets whether this print job is completed . 
Gets whether this print job is failed . 
Gets whether this print job is cancelled . 
Gets the unique print job id . 
Sets the unique print job id .  
Gets the human readable job label . 
Sets the human readable job label .  
Gets the unique target printer id . 
Sets the unique target printer id .  
Gets the name of the target printer .  
Sets the name of the target printer .  
Gets the current job state . 
Sets the current job state .  
Sets the progress of the print job . 
Sets the status of the print job . 
Sets the status of the print job . 
Sets the owning application id .  
Sets the owning application id .  
Gets the optional tag assigned by a print service .  
Sets the optional tag assigned by a print service .  
Gets the wall time in millisecond when this print job was created . 
Sets the wall time in milliseconds when this print job was created .  
Gets the number of copies . 
Sets the number of copies .  
Gets the included pages . 
Sets the included pages .  
Gets the print job attributes . 
Sets the print job attributes .  
Gets the info describing the printed document .  
Sets the info describing the printed document .  
Gets whether this print is being cancelled .  
Sets whether this print is being cancelled .  
Gets the advanced options .  
Sets the advanced options .  
gets the progress that has been made printing this job . 
gets the status of this job . 
Sets the number of copies . 
Sets the print job attributes . 
Sets the included pages . 
Sets the progress of the print job . 
Sets the status of the print job . 
Creates an instance that can access all print jobs .  
Adds a listener for observing the state of print jobs .  
Removes a listener for observing the state of print jobs .  
Gets a print job given its id . 
gets the custom icon for a printer . 
Gets the print jobs for this application . 
Gets the list of print services , but does not register for updates . 
Gets the list of print service recommendations , but does not register for updates . 
Gets the data associated with this document . 
Gets the printers reported in this session . 
Adds discovered printers . 
Removes added printers . 
Gets the printers that should be tracked . 
Gets whether the session is destroyed . 
Gets whether printer discovery is started . 
Gets the unique print job id . 
Gets the printed document . 
Gets whether this print job is queued . 
Gets whether this print job is started . 
Gets whether this print job is blocked . 
Gets whether this print job is completed . 
Gets whether this print job is failed . 
Gets whether this print job is cancelled . 
Sets the progress of this print job as a fraction of 1 . 
Sets the status of this print job . 
Sets the status of this print job as a string resource . 
Gets the print job tag . 
Gets the active print jobs for the printers managed by this service . 
returns the component name for this print service . 
Creates a new instance . 
Returns whether a given number is in the blocked list . 
Returns the current status of block suppression . 
Find an application to handle the given string and , if found , invoke it with the given string as a parameter . 
returns a cursor pointing to a list of all the bookmarks . 
returns a cursor pointing to a list of all visited site urls . 
Returns all the URLs in the history . 
Returns whether there is any history to clear . 
removes a specific url from the history database . 
adds a search string to the searches database . 
removes all searches from the search database . 
Returns true if bookmark sync is enabled 
Sets the bookmark sync enabled setting . 
Creates an entity iterator for the given cursor . 
Creates a new iterator for events @param cursor An event query @param resolver For performing additional queries @return an EntityIterator containing one entity per event in the cursor 
Creates a new iterator for events @param cursor An event query @param provider For performing additional queries @return an EntityIterator containing one entity per event in the cursor 
Adds a call to the call log . 
Adds a call to the call log . 
Adds a call to the call log . 
Adds a person to the My Contacts group .  
Adds a person to a group referred to by name .  
Adds a person to a group .  
Creates a new contacts and adds it to the `` My Contacts '' group .  
sets the photo for this person .  
adds a longitude and latitude location to a postal address .  
Gets the resource ID for the proper presence icon .  
returns TRUE if it is a remote stored directory . 
returns TRUE if it is a remote stored directory .  
returns TRUE if a directory ID is from the contacts provider on the enterprise profile . 
Returns null if unable to construct a valid lookup URI from the provided parameters . 
 Returns null if the contact can not be found . 
returns TRUE if a contact ID is from the contacts provider on the enterprise profile . 
adds a name to be used when searching for aggregation suggestions . 
Sets the Maximum number of suggested aggregations that should be returned . 
Gets the resource ID for the proper presence icon . 
Returns the precedence of the status code the higher number being the higher precedence . 
returns thumbnail representing the document at the given URI . 
creates a new document with given MIME type and display name . 
Removes the given document from a parent directory . 
Removes the requested document or a document tree . 
returns all roots currently provided . 
returns recently modified documents under the requested root . 
returns metadata for the single requested document . 
returns the children documents contained in the requested directory . 
returns documents that match the given query under the requested root . 
returns concrete MIME type of the requested document . 
gets the content : / / style URI for the files table on the given volume . 
gets the content : / / style URI for a single row in the files table on the given volume . 
gets the content : / / style URI for the image media table on the given volume . 
gets the content : / / style URI for the audio media table on the given volume . 
gets the content : / / style URI for the audio genres table on the given volume . 
gets the content : / / style URI for querying the genres of an audio file . 
gets the content : / / style URI for the audio playlists table on the given volume . 
gets the content : / / style URI for the artists table on the given volume . 
gets the content : / / style URI for the albums table on the given volume . 
gets the content : / / style URI for the video media table on the given volume . 
gets the media provider 's version . 
adds a query to the recent queries list . Returns immediately , performing the save in the background . 
gets the key that retrieves a bluetooth headset 's priority .  
gets the key that retrieves a bluetooth a2dp sink 's priority .  
gets the key that retrieves a bluetooth a2dp src 's priority .  
gets the key that retrieves a bluetooth Input Device 's priority .  
gets the key that retrieves a bluetooth map priority .  
gets the key that retrieves a bluetooth pbap client priority .  
gets the key that retrieves a bluetooth map priority .  
adds a new bookmark to the system . 
returns the folder name as it should be displayed to the user . 
returns the title as it should be displayed to the user . 
Returns the device ID that we should use when connecting to the mobile gtalk server .  
gets the sync state that is associated with the account or null . 
Creates and returns a ContentProviderOperation that assigns the data array as the sync state for the given account . 
Creates and returns a ContentProviderOperation that assigns the data array as the sync state for the given account . 
Adds a word to the dictionary , with the given frequency and the specified specified locale type . 
Adds a word to the dictionary , with the given frequency and the specified locale type . 
Returns all values of the specified repeating enum tag . 
Returns all values of the specified repeating unsigned 64-bit long tag . 
Adds an enum tag with the provided value . 
Adds a repeated enum tag with the provided values . 
Returns all values of the specified repeating enum tag . 
Adds an unsigned 32-bit int tag with the provided value . 
Adds an unsigned 64-bit long tag with the provided value . 
Returns all values of the specified repeating unsigned 64-bit long tag . 
Adds the provided boolean tag . 
Adds a bytes tag with the provided value . 
Adds a date tag with the provided value . 
Gets the policy for this process . 
Sets whether cleartext network traffic is permitted for this process .  
gets the mobile country code . 
gets the mobile network code . 
gets the service provider name . 
gets the international mobile subscriber identity . 
gets the group identifier level 1 . 
gets the group identifier level 2 . 
Returns the send status of the just-sent MMS . 
Returns the SendConf PDU , which confirms that the message was sent . 
Returns the message reference of the just-sent SMS . 
Returns the send status of the just-sent SMS . 
Returns the message references of the just-sent multipart SMS . 
sets this value to true to begin showing alternative UI and false to stop . 
Returns the contents of a possibly multi-part SMS . 
Returns the title of this target for display to a user . 
Returns the icon representing this target for display to a user . 
Returns the ranking score supplied by the creator of this ChooserTarget . 
Returns the ComponentName of the Activity that should be launched for this ChooserTarget . 
Returns the Bundle of extras to be added to an intent launched to this target . 
Sets a view to be the content view for this Dream . 
Sets a view to be the content view for this Dream . 
Adds a view to the Dream 's window , leaving other content views in place . 
Returns whether or not this dream is interactive . 
Sets View.SYSTEM _ UI_FLAG_LOW_PROFILE on the content view . 
Returns whether or not this dream is in low profile mode . 
Returns whether or not this dream is in fullscreen mode . 
Returns whether or not this dream keeps the screen bright while dreaming . 
Returns whether or not this dream is windowless .  
Returns true if this dream is allowed to doze . 
Returns true if the dream will allow the system to enter a low-power state while it is running without actually turning off the screen . 
Gets the screen state to use while dozing . 
Sets the screen state to use while dozing . 
Gets the screen brightness to use while dozing . 
Sets the screen brightness to use while dozing . 
Returns true if the specified dock app intent should be started . 
Gets the sets of hints representing current state . 
Gets the current notification interruption filter active on the host . 
Returns current ranking information . 
Returns the key of the notification this Ranking applies to . 
Returns the rank of the notification . 
Returns whether the notification is an ambient notification , that is a notification that does n't require the user 's immediate attention . 
Returns whether the notification matches the user 's interruption filter . 
Returns true if this notification is part of a group . 
Returns true if application asked that this notification be part of a group .  
Returns a userHandle for the instance of the app that posted this notification . 
Sets the override group key . 
Returns the override group key . 
Returns the number of bytes written or -1 on error . 
Returns the data block stored on the persistent partition . 
returns -1 on error . 
Returns -1 on error . 
Returns whether or not `` OEM unlock '' is enabled or disabled on this device . 
Sets the current state for the tile . 
Gets the current icon for the tile . 
Sets the current icon for the tile . 
Gets the current label for the tile . 
Sets the current label for the tile . 
Gets the current content description for the tile . 
Sets the current content description for the tile . 
Sets an icon to be shown in the status bar . 
gets suggestions for specified text in TextInfo . 
gets sentence suggestions for specified texts in an array of TextInfo . 
Gets the raw audio that triggered the keyphrase . 
Gets the session ID to start a capture from the DSP .  
Gets the recognition modes supported by the associated keyphrase . 
Creates an intent to start the enrollment for the associated keyphrase . 
Creates an intent to start the un-enrollment for the associated keyphrase . 
Creates an intent to start the re-enrollment for the associated keyphrase . 
Returns whether the currently selected voice interaction service supports local voice interaction for launching from an Activity . 
sets contextual options you would always like to have disabled when a session is shown . 
returns the uid of the application that initiated the request . 
returns the package name of the application that initiated the request . 
returns any additional extra information that was supplied as part of the request . 
Returns true if the request is still active . 
returns which show context flags have been disabled by the user through the system settings UI , so the session will never gets this data . 
sets whether this session will keep the device awake while it is running a voice activity . 
Returns true if this engine is running in preview mode -- that is , it is being shown to the user before they select it as the actual wallpaper . 
returns the Linux uid assigned to the process that sent you the current transaction that is being processed . 
Sets the listener that will receive all the callbacks . 
gets status code for a `` stop '' . 
removes all messages that originate from a given calling app . 
Returns a formatted locale string from the synthesis params of the form lang-country-variant . 
Gets the text which should be synthesized . 
Gets the text which should be synthesized . 
Gets the name of the voice to use . 
Gets the ISO 3-letter language code for the language to use . 
Gets the ISO 3-letter country code for the language to use . 
Gets the language variant to use . 
Gets the speech rate to use . 
Gets the pitch to use . 
Gets the additional params , if any . 
Gets the request caller Uid . 
Sets the locale for the request . 
Sets the voice name for the request . 
Sets the speech rate . 
Sets the pitch . 
Adds a mapping between a string of text and a sound resource in a package .  
Adds a mapping between a string of text and a sound file .  
Adds a mapping between a string of text and a sound resource in a package .  
Adds a mapping between a string of text and a sound file .  
Adds a mapping between a string of text and a sound file .  
Sets the speech rate . 
Sets the speech pitch for the TextToSpeech engine . 
Sets the audio attributes to be used when speaking text or playing back a file . 
Returns a Locale instance describing the language currently being used as the default Text-to-speech language . 
Sets the text-to-speech language .  
Returns a Locale instance describing the language currently being used for synthesis requests sent to the TextToSpeech engine . 
Sets the text-to-speech voice . 
Returns a Voice instance describing the voice currently being used for synthesis requests sent to the TextToSpeech engine . 
Returns a Voice instance of the voice with the given voice name . 
Returns a Voice instance that 's the default voice for the default Text-to-speech language . 
Sets the listener that will be notified when synthesis of an utterance completes . 
Sets the listener that will be notified of various events related to the synthesis of a given utterance .  
Sets the TTS engine to use . 
Gets the package name of the default speech synthesis engine . 
Gets a list of all installed TTS engines . 
Returns the language , country and variant currently being used by the TTS engine . 
returns a name of the default voice for a given locale . 
Adds a speech item to the queue . 
Returns the engine info for a given engine name . 
Gets a list of all installed TTS engines . 
Returns the default locale for a given TTS engine . 
Returns the default locale for a given TTS engine from given settings string . 
returns the old-style string form of the locale . 
Returns null if the list is empty , malformed or if there is no engine specific preference in the list . 
Returns the sets of features it supports for a given voice . 
sets up to begin performance tests . 
Returns run direction information for a line within a paragraph . 
Returns the instance of AutoText . 
Returns null if no correction can be found . 
Returns the size of the auto text dictionary . 
Returns the size of the dictionary . 
Returns the directionality of the last character with strong directionality in the string , or DIR_UNKNOWN if none was encountered . 
Returns the directionality of the first character with strong directionality in the string , or DIR_UNKNOWN if none was encountered . 
Returns the directionality of the first character with strong directionality in the string , or DIR_UNKNOWN if none was encountered . 
Returns the directionality of the last character with strong directionality in the string , or DIR_UNKNOWN if none was encountered . 
Returns the Character.DIRECTIONALITY _ ... value of the next codepoint and advances charIndex . 
Returns the Character.DIRECTIONALITY _ ... value of the preceding codepoint and advances charIndex backwards . 
Returns a BoringLayout for the specified text , potentially reusing this one if it is already suitable . 
Returns a BoringLayout for the specified text , potentially reusing this one if it is already suitable . 
Returns null if not boring ; the width , ascent , and descent if boring . 
Returns null if not boring ; the width , ascent , and descent if boring .  
Returns the text on the clipboard . 
Sets the contents of the clipboard to the specified text . 
Returns true if the clipboard contains text ; false otherwise . 
creates the initial block structure , cutting the text into blocks of at least BLOCK_MINIMUM_CHARACTER_SIZE characters , aligned on the ends of paragraphs . 
creates a new block , ending at the specified character offset . 
Sets the series of filters that will be called in succession whenever the text of this Editable is changed , each of which has the opportunity to limit or transform the text that is being inserted . 
Returns the array of input filters that are currently applied to changes to this Editable . 
Returns the standard Editable Factory . 
Returns a new SpannedStringBuilder from the specified CharSequence . 
Returns true if the given code point is regional indicator symbol . 
Returns true if the given code point is emoji modifier . 
Returns true if the given code point is emoji modifier base . 
Returns true if the character has Emoji property . 
Returns true if the character can be a base character of COMBINING ENCLOSING KEYCAP . 
Returns true if user preference is sets to 24-hour format . 
Returns true if user preference with the given user handle is sets to 24-hour format .  
Returns the best possible localized form of the given skeleton for the given locale . 
Returns a String pattern that can be used to format the time according to the current locale and the user 's 12 - / 24-hour clock preference . 
Returns a String pattern that can be used to format the time according to the current locale and the user 's 12 - / 24-hour clock preference . 
Gets the current date format stored as a char array . 
returns a string for the day of the week . 
returns a localized string for AM or PM . 
returns a localized string for the month of the year . 
Returns a string describing the elapsed time since startTime . 
Returns a string describing ` time ' as a time relative to ` now ' . 
Returns a string describing ` time ' as a time relative to ` now ' . 
returns string describing the elapsed time since startTime formatted like '' -LSB- relative time/date -RSB- , -LSB- time -RSB- '' . 
returns given duration in a human-friendly format . Returns only largest meaningful unit of time , from seconds up to hours .  
Returns a string in the canonical IPv4 format ### . 
Returns elapsed time for the given millis , in the following format : 1 day 5 hrs ; will include at most two units , can go down to seconds precision . 
Returns elapsed time for the given millis , in the following format : 1 day 5 hrs ; will include at most two units , can go down to minutes precision . 
returns the maximum possible value for the given field given the value of the other fields . 
Sets isDst to a negative value to mean `` unknown '' . 
returns the current time in YYYYMMDDTHHMMSS <tz> format 
Returns true if the resulting time value is in UTC time . 
Returns the timezone string that is currently sets for the device . 
Sets the time of the given Time object to the current time . 
Sets the fields in this Time object given the UTC milliseconds . 
Sets the fields . Sets weekDay , yearDay and gmtoff to 0 , and isDst to -1 . 
Sets the date from the given fields . Sets weekDay , yearDay and gmtoff to 0 , and isDst to -1 . 
Returns true if the time represented by this Time object occurs before the given time .  
Returns true if the time represented by this Time object occurs after the given time .  
returns a string in the RFC 3339 format . 
Sets the time from the given Julian day number , which must be based on the same timezone that is sets in this Time object . 
Returns displayable styled text from the provided HTML string . 
Returns displayable styled text from the provided HTML string . 
Returns an HTML representation of the provided Spanned text . 
Returns an HTML escaped representation of the given plain text . 
Returns the minimum number of newline characters needed before and after a given block-level element . 
returns the CharSequence that you would like to have placed there instead , including an empty string if appropriate , or null to accept the original replacement . 
returns how wide a layout must be in order to display the specified text with one line per paragraph . 
returns how wide a layout must be in order to display the specified text slice with one line per paragraph . 
returns the start position of the line , given the left and right bounds of the margins . 
returns the text that is displayed by this Layout . 
returns the base Paint properties for this layout . 
returns the width of this layout . 
returns the total height of this layout . 
returns the base alignment of this layout . 
returns what the text height is multiplied by to gets the line height . 
returns the number of units of leading that are added to each line . 
returns the heuristic used to determine paragraph text direction .  
returns the number of lines of text in this layout . 
Returns whether the specified line contains one or more characters that need to be handled specially , like tabs . 
Returns the directional run information for the specified line . 
Returns the number of extra pixels of descent padding in the bottom line of the Layout . 
Returns the hyphen edit for a line .  
Returns the left indent for a line .  
Returns the range of the run that the character at offset belongs to . 
gets the primary horizontal position for the specified text offset . 
gets the primary horizontal position for the specified text offset , but optionally clamp it so that it does n't exceed the width of the layout .  
gets the secondary horizontal position for the specified text offset . 
gets the secondary horizontal position for the specified text offset , but optionally clamp it so that it does n't exceed the width of the layout .  
gets the leftmost position that should be exposed for horizontal scrolling on the specified line . 
gets the rightmost position that should be exposed for horizontal scrolling on the specified line . 
Gets the unsigned horizontal extent of the specified line , including leading margin indent , but excluding trailing whitespace . 
Gets the unsigned horizontal extent of the specified line , including leading margin indent and trailing whitespace . 
Returns the signed horizontal extent of the specified line , excluding leading margin . 
gets the line number on which the specified text offset appears . 
gets the character offset on the specified line whose position is closest to the specified horizontal position . 
gets the character offset on the specified line whose position is closest to the specified horizontal position . 
returns the text offset after the last character on the specified line . 
returns the vertical position of the bottom of the specified line . 
returns the vertical position of the baseline of the specified line . 
gets the ascent of the text on the specified line . 
gets the alignment of the specified paragraph , taking into account markup attached to it . 
gets the left edge of the specified paragraph , inset by left margins . 
gets the right edge of the specified paragraph , inset by right margins . 
returns the offset of the first character to be ellipsized away , relative to the start of the line . 
Returns the number of characters to be ellipsized away , or 0 if no ellipsis is to take place . 
Returns the CharSequence that we want placed there instead , including an empty string if appropriate , or null to accept the original replacement . 
Returns whether or not we allow character c. Subclasses must override this method . 
Returns true if the given code point is a variation selector . 
Returns the start offset to be deleted by a backspace key from the given offset . 
Returns the end offset to be deleted by a forward delete key from the given offset . 
Gets the meta state used for movement using the modifiers tracked by the text buffer as well as those present in the key event . 
Returns a DigitsKeyListener that accepts the digits 0 through 9 . 
Returns a DigitsKeyListener that accepts only the characters that appear in the specified String . 
removes the given shift states from the edited text . 
Gets the state of the meta keys . 
Gets the state of the meta keys for a specific key event . 
Gets the state of a particular meta key . 
Gets the state of a particular meta key to use with a particular key event . 
Returns true if this object is one that this class would use to keep track of any meta state in the specified text . 
Returns true if this object is one that this class would use to keep track of the selecting meta state in the specified text . 
Gets the state of the meta keys . 
Gets the state of a particular meta key . 
Returns a new or existing instance with the specified capitalization and correction properties . 
Returns a new or existing instance with the specified capitalization and correction properties . 
Gets an instance of the listener suitable for use with full keyboards . 
Returns the list of characters that are to be replaced by other characters when displayed . 
Returns a parallel array of replacement characters for the ones that are to be replaced . 
Returns a new or existing instance with the specified capitalization and correction properties . 
Returns a new or existing instance with no automatic capitalization or correction . 
Returns whether it makes sense to automatically capitalize at the specified position in the specified text , with the specified rules . 
Returns a CharSequence that is a transformation of the source text -- for example , replacing each character with a dot in a password field . 
Returns the position of next boundary after the given offset . 
Returns BreakIterator.DONE if there is no previous boundary . 
Returns BreakIterator.DONE if there is no next boundary . 
Returns BreakIterator.DONE if there is no previous boundary . 
Returns BreakIterator.DONE if there is no next boundary . 
Returns the value at the specified row and column . 
Sets the value at the specified row and column . 
Sets the value at the specified row and column . 
Returns the number of rows in the PackedIntVector . 
Returns the width of the PackedIntVector . 
returns a special type identifier for this span class . 
returns the offset of the selection anchor or cursor , or -1 if there is no selection or cursor . 
returns the offset of the selection edge or cursor , or -1 if there is no selection or cursor . 
sets the selection anchor to start and the selection edge to stop . 
removes the selection or cursor , if any , from the text . 
removes the specified object from the range of text to which it was attached , if any . 
Returns the standard Spannable Factory . 
Returns a new SpannableString from the specified CharSequence . 
returns the char at the specified offset within the buffer . 
returns the number of chars in the buffer . 
removes the specified markup object from the buffer . 
returns externally visible offset given offset into gapped buffer . 
returns the buffer offset of the beginning of the specified markup object , or -1 if it is not attached to this buffer . 
returns the buffer offset of the end of the specified markup object , or -1 if it is not attached to this buffer . 
returns the flags of the end of the specified markup object , or 0 if it is not attached to this buffer . 
returns an array of the spans of the specified type that overlap the specified range of the buffer . 
returns an array of the spans of the specified type that overlap the specified range of the buffer .  
returns the next offset after start but less than or equal to limit where a span of the specified type begins or ends . 
returns a new CharSequence containing a copy of the specified range of this buffer , including the overlapping spans . 
returns a String containing a copy of the chars in this buffer . 
returns a String containing a copy of the chars in this buffer , limited to the -LSB- start , end -LSB- range .  
Returns the depth of TextWatcher callbacks . Returns 0 when the object is not handling TextWatchers . 
Returns the next cursor position in the run . 
returns an array of the markup objects attached to the specified slice of this CharSequence and whose type is the specified type or a subclass of it . 
returns the beginning of the range of text to which the specified markup object is attached , or -1 if the object is not attached . 
returns the end of the range of text to which the specified markup object is attached , or -1 if the object is not attached . 
returns the first offset greater than start where a markup object of class type begins or ends , or limit if there are no starts or ends greater than start but less than limit . 
Returns true if there are spans intersecting the given interval . 
Removes all internal references to the spans to avoid memory leaks . 
sets the text . 
sets the paint . 
sets the width . 
sets the alignment . 
sets the text direction heuristic . 
sets line spacing parameters . 
sets the width as used for ellipsizing purposes , if it differs from the normal layout width . 
sets ellipsizing on the layout .  
sets maximum number of lines . 
sets break strategy , useful for selecting high quality or balanced paragraph layout options . 
sets hyphenation frequency , to control the amount of automatic hyphenation used . 
sets up paragraph text and settings ; done as one big method to minimize jni crossings 
Returns the CharacterStyle underlying this one , or the one underlying it if it too is a Passthrough . 
Returns the source string that was saved during construction . 
Returns the amount by which to adjust the leading margin . 
Returns the number of lines of the paragraph to which this object is attached that the `` first line '' margin will apply to . 
Returns the MetricAffectingSpan underlying this one , or the one underlying it if it too is a Passthrough . 
Returns the width of the span . 
Returns the offset of the tab stop from the leading margin of the line . 
Returns the typeface family specified by this span , or null if it does not specify one . 
Returns the text color specified by this span , or null if it does not specify one . 
Returns the link color specified by this span , or null if it does not specify one . 
Returns the text size specified by this span , or -1 if it does not specify one . 
Returns the text style specified by this span , or 0 if it does not specify one . 
Returns the type . 
Returns a bundle of the arguments sets . 
Returns a TtsSpan built from the parameters sets by the setter methods . 
Sets an argument to a string value . 
Sets an argument to an int value . 
Sets an argument to a long value . 
Sets the gender information for this instance . 
Sets the animacy information for this instance . 
Sets the multiplicity information for this instance . 
Sets the grammatical case information for this instance . 
Returns the font family name . 
Returns STATE_TRUE for strong RTL characters , STATE_FALSE for strong LTR characters , and STATE_UNKNOWN for everything else . 
returns true if the default text direction is rtl . 
Returns whether the range of text is RTL according to the algorithm . 
Returns a new TextLine from the shared pool . 
Returns metrics information for the entire line . 
Returns information about a position on the line . 
Returns the next valid offset within this directional run , skipping conjuncts and zero-width characters . 
Returns the next tab position . 
creates a new String object containing the given range of characters from the source string . 
Returns a string containing the tokens joined by delimiters . 
Returns a string containing the tokens joined by delimiters . 
Sets the string to split @param string the string to split 
Returns true if the string is null or 0-length . 
Returns true if a and b are equal , including if they are both null . 
returns a new CharSequence in which each of the source strings is replaced by the corresponding element of the destinations . 
Returns the original text if it fits in the specified width given the properties of the specified Paint , or , if it does not fit , a truncated copy with ellipsis character added at the specified edge or center . 
Returns the original text if it fits in the specified width given the properties of the specified Paint , or , if it does not fit , a copy with ellipsis character added at the specified edge or center . 
Returns the original text if it fits in the specified width given the properties of the specified Paint , or , if it does not fit , a copy with ellipsis character added at the specified edge or center .  
Returns a CharSequence concatenating the specified CharSequences , retaining their spans if any . 
Returns whether the given CharSequence contains any printable characters . 
Returns whether this character is a printable character . 
Returns whether the given CharSequence contains only digits . 
Removes empty spans from the spans array . 
returns the layout direction for a given Locale @param locale the Locale for which we want the layout direction . 
returns localized string representing the given number of selected items .  
Returns the name part . 
Returns the address part . 
Returns the comment part . 
Returns the name , conservatively quoting it if there are any characters that are likely to cause trouble outside of a quoted string , or returning it literally if it seems safe . 
Returns the name , with internal backslashes and quotation marks preceded by backslashes . 
Sets the minimum arc along the circle between two points aligned near horizontally . 
Returns the minimum arc along the circle between two points aligned near horizontally . 
Sets the minimum arc along the circle between two points aligned near vertically . 
Returns the minimum arc along the circle between two points aligned near vertically . 
Sets the maximum arc along the circle between two points . 
Returns the maximum arc along the circle between two points . 
Returns true when the ChangeBounds will resize by changing the clip bounds during the view animation or false when bounds are changed . 
Returns the type of changing animation that will be run . 
Returns whether changes to parent should use an overlay or not . 
Sets whether changes to parent should use an overlay or not . 
Returns whether parent changes will be tracked by the ChangeTransform . 
Sets whether parent changes will be tracked by the ChangeTransform . 
Sets the speed at which transition propagation happens , relative to the duration of the Transition . 
Returns the fading behavior of the animation . 
Returns the resizing behavior of the animation . 
Returns the Path defining a pattern of motion between two coordinates . 
Sets the Path defining a pattern of motion between two coordinates . 
Returns a Scene described by the resource file associated with the given layoutId parameter . 
Gets the root of the scene , which is the root of the view hierarchy affected by changes due to this scene , and which will be animated when this scene is entered . 
sets the scene that the given view is in . 
Sets the side that is used to calculate the transition propagation . 
Sets the speed at which transition propagation happens , relative to the duration of the Transition . 
Returns the translation value for view when it goes out of the scene 
Returns the translation value for view when it goes out of the scene 
Returns the edge that Views appear and disappear from . 
Sets the duration of this transition . 
Returns the duration sets on this transition . 
Sets the startDelay of this transition . 
Returns the startDelay sets on this transition . 
Sets the interpolator of this transition . 
Returns the interpolator sets on this transition . 
Sets the order in which Transition matches View start and end values . 
Adds matched values to mStartValuesList and mEndValuesList and removes them from unmatchedStart and unmatchedEnd . 
Adds matched values to mStartValuesList and mEndValuesList and removes them from unmatchedStart and unmatchedEnd , using startItemIds and endItemIds as a guide for which Views have unique item IDs . 
Adds matched values to mStartValuesList and mEndValuesList and removes them from unmatchedStart and unmatchedEnd , using startIds and endIds as a guide for which Views have unique IDs . 
Adds matched values to mStartValuesList and mEndValuesList and removes them from unmatchedStart and unmatchedEnd , using startNames and endNames as a guide for which Views have unique transitionNames . 
Adds all values from unmatchedStart and unmatchedEnd to mStartValuesList and mEndValuesList , assuming that there is no match between values in the list . 
Adds the id of a target view that this Transition is interested in animating . 
Adds the transitionName of a target view that this Transition is interested in animating . 
Adds the Class of a target view that this Transition is interested in animating . 
Removes the given targetId from the list of ids that this Transition is interested in animating . 
Removes the given targetName from the list of transitionNames that this Transition is interested in animating . 
Sets the target view instances that this Transition is interested in animating . 
Removes the given target from the list of targets that this Transition is interested in animating . 
Removes the given target from the list of targets that this Transition is interested in animating . 
Returns the list of target IDs that this transition limits itself to tracking and animating . 
Returns the list of target views that this transition limits itself to tracking and animating . 
Returns the list of target transitionNames that this transition limits itself to tracking and animating . 
Returns the list of target transitionNames that this transition limits itself to tracking and animating . 
Find the matched start or end value for a given View . 
Adds a listener to the sets of listeners that are sent events through the life of an animation , such as start , repeat , and end . 
Removes a listener from the sets listening to this animation . 
Sets the callback to use to find the epicenter of a Transition . 
Returns the callback used to find the epicenter of the Transition . 
Sets the algorithm used to calculate two-dimensional interpolation . 
Returns the algorithm object used to interpolate along two dimensions . 
Sets the method for determining Animator start delays . 
Sets the shared element names -- a mapping from a name at the start state to a different name at the end state .  
Returns the name of this Transition . 
adds the specified item to the list , returning the resulting list . 
removes the specified item from the list , returning the resulting list . 
Sets the transition to be used for any scene change for which no other transition is explicitly sets . 
Gets the current default transition . 
Sets a specific transition to occur when the given scene is entered . 
Sets a specific transition to occur when the given pair of scenes is exited/entered . 
Returns the Transition for the given scene being entered . 
Sets the play order of this sets 's child transitions . 
Returns the ordering of this TransitionSet . 
Adds child transition to this sets . 
Returns the number of child transitions in the TransitionSet . 
Returns the child Transition at the specified position in the TransitionSet . 
Removes the specified child transition from this sets . 
Sets up listeners for each of the child transitions . 
Creates a View using the bitmap copy of view . 
gets a copy of bitmap of given drawable , returns null if intrinsic size is zero 
Creates a Bitmap of the given view , using the Matrix matrix to transform to the local coordinates . 
Creates an animator that can be used for x and/or y translations . 
Returns whether appearing and/or disappearing Views are supported . Returns whether appearing and/or disappearing Views are supported . 
Returns whether the view is ` visible ' according to the given values object . 
Returns the View 's center x coordinate , relative to the screen , at the time the values were captured . 
Returns the View 's center y coordinate , relative to the screen , at the time the values were captured . 
Returns the APK Signature Scheme v2 block contained in the provided APK file and the additional information relevant for verifying the block against the file . 
Returns the ZIP End of Central Directory record of the provided ZIP file . 
Returns the ZIP End of Central Directory record of the provided ZIP file . 
Returns the offset of the start of the ZIP Central Directory in the archive . 
Sets the offset of the start of the ZIP Central Directory in the archive . 
Returns the index of a key in the sets . 
returns the key at the given index in the array . 
returns the value at the given index in the array . 
sets the value at a given index in the array . 
returns true if the array map contains no items . 
adds a new value to the array map . 
removes an existing key from the array map . 
removes the key/value mapping at the given index . 
returns the number of items in this array map . 
removes all keys in the array map that exist in the given collection . 
removes all keys in the array map that do <b> not </b> exist in the given collection . 
Returns the index of a value in the sets . 
returns the value at the given index in the array . 
returns true if the array map contains no items . 
Adds the specified object to this sets . 
Removes the specified object from this sets . 
removes the key/value mapping at the given index . 
returns the number of items in this array map . 
removes all values in the array sets that exist in the given collection . 
removes all values in the array sets that do <b> not </b> exist in the given collection . 
returns the path to the base file . 
Gets the last modified time of the atomic file . 
Returns the number of attributes available in the sets . 
Returns the name of the specified attribute . 
Returns the value of the specified attribute as a string representation . 
Returns the value of the specified attribute as a string representation . 
Returns a description of the current position of the attribute sets . 
returns the resource ID associated with the given attribute name . Returns 0 if there is no resource associated with this attribute . 
returns the index of the value of ` attribute ' in the list ` options ' . 
returns the boolean value of ` attribute ' . 
returns the value of ` attribute ' as a resource identifier . 
returns the integer value of ` attribute ' . 
returns the boolean value of ` attribute ' that is formatted as an unsigned value . 
returns the float value of ` attribute ' . 
returns the index of the value of attribute at ` index ' in the list ` options ' . 
returns the boolean value of attribute at ` index ' . 
returns the value of attribute at ` index ' as a resource identifier . 
returns the integer value of attribute at ` index ' . 
returns the integer value of attribute at ` index ' that is formatted as an unsigned value . 
returns the float value of attribute at ` index ' . 
returns the value of the `` id '' attribute or null if there is not one . 
returns the value of the `` class '' attribute or null if there is not one . 
returns the integer value of the `` id '' attribute or defaultValue if there is none . 
returns the value of the `` style '' attribute or 0 if there is not one . 
Returns true if these display metrics equal the other display metrics . 
Returns true if the physical aspects of the two display metrics are equal .  
gets the name associated with an event type tag code . 
gets the event type tag code associated with an event name . 
Returns the closest float approximation of the sine of the argument . 
Returns the closest float approximation of the cosine of the argument . 
Returns the closest float approximation of the square root of the argument . 
Returns the closest float approximation of the raising `` e '' to the power of the argument . 
Adds the values in the specified array to this array . 
Removes all values from this array . 
Returns the value at the specified position in this array . 
Returns the index of the first occurrence of the specified value in this array , or -1 if this array does not contain the value . 
Removes the value at the specified index from this array . 
Returns the number of values in this array . 
Returns a new array with the contents of this IntArray . 
Returns the hash code for this instance . 
Returns certificates listed in the PKCS7 block . 
Returns a boolean indication of whether or not the associated jar file is signed . 
Returns true if this parser is liberal in what it accepts . 
Returns true if the current array or object has another element . 
Returns the type of the next token without consuming it . 
Sets the indentation string to be repeated for each level of indentation in the encoded document . 
Returns true if this writer has relaxed syntax rules . 
Returns the value on the top of the stack . 
gets the value for key as an int . 
gets the value for key as a long . 
gets the value for key as a float . 
gets the value for key as a string . 
Sets the terrible failure handler , for testing . 
returns the maximum payload the log daemon accepts without truncation . 
Adds the values in the specified array to this array . 
Removes all values from this array . 
Returns the value at the specified position in this array . 
Returns the index of the first occurrence of the specified value in this array , or -1 if this array does not contain the value . 
Removes the value at the specified index from this array . 
Returns the number of values in this array . 
Gets the Object mapped from the specified key , or null if no such mapping has been made . 
Gets the Object mapped from the specified key , or the specified Object if no such mapping has been made . 
Removes the mapping from the specified key , if there was any . 
Removes the mapping at the specified index . 
Adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one . 
Returns the number of key-value mappings that this LongSparseArray currently stores . 
Removes all key-value mappings from this LongSparseArray . 
Gets the long mapped from the specified key , or 0 if no such mapping has been made . 
Gets the long mapped from the specified key , or the specified value if no such mapping has been made . 
Removes the mapping from the specified key , if there was any . 
Removes the mapping at the given index . 
Adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one . 
Returns the number of key-value mappings that this SparseIntArray currently stores . 
Removes all key-value mappings from this SparseIntArray . 
Sets the size of the cache . 
removes the eldest entries until the total of remaining entries is at or below the requested size . 
Returns the computed value or null if no value can be computed . 
Returns the number of values that have been evicted . 
Returns a copy of the current contents of the cache , ordered from least recently accessed to most recently accessed . 
Returns an interpolated angle in degrees between a sets of start and end angles . 
Returns the sum of the two parameters , or throws an exception if the resulting sum would cause an overflow or underflow . 
Gets the value at a given index . 
Sets the value at a given index . 
Gets the array size . 
Creates a new PrefixPrinter . 
Sets the value on object which this property represents . 
Returns the current value that this property represents on the given object . 
Returns the name for this property . 
Returns the type for this property . 
creates a new immutable range , with the argument types inferred . 
gets the lower endpoint . 
gets the upper endpoint . 
Gets the numerator of the rational . 
Returns false if there is no setter or public field underlying this Property . 
Gets the Object mapped from the specified key , or null if no such mapping has been made . 
Gets the Object mapped from the specified key , or the specified Object if no such mapping has been made . 
Removes the mapping from the specified key , if there was any . 
Removes the mapping from the specified key , if there was any , returning the old value . 
Removes the mapping at the specified index . 
removes a range of mappings as a batch . 
Adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one . 
Returns the number of key-value mappings that this SparseArray currently stores . 
Removes all key-value mappings from this SparseArray . 
Gets the boolean mapped from the specified key , or false if no such mapping has been made . 
Gets the boolean mapped from the specified key , or the specified value if no such mapping has been made . 
Removes the mapping from the specified key , if there was any . 
Adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one . 
Returns the number of key-value mappings that this SparseBooleanArray currently stores . 
Removes all key-value mappings from this SparseBooleanArray . 
Gets the int mapped from the specified key , or 0 if no such mapping has been made . 
Gets the int mapped from the specified key , or the specified value if no such mapping has been made . 
Removes the mapping from the specified key , if there was any . 
Removes the mapping at the given index . 
Adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one . 
Returns the number of key-value mappings that this SparseIntArray currently stores . 
Removes all key-value mappings from this SparseIntArray . 
Gets the long mapped from the specified key , or 0 if no such mapping has been made . 
Gets the long mapped from the specified key , or the specified value if no such mapping has been made . 
Removes the mapping from the specified key , if there was any . 
Removes the mapping at the given index . 
Adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one . 
Returns the number of key-value mappings that this SparseIntArray currently stores . 
Removes all key-value mappings from this SparseIntArray . 
Creates an appropriate spline based on the properties of the control points . 
Creates a monotone cubic spline from a given sets of control points . 
Creates a linear spline from a given sets of control points . 
returns whether the stateSetOrSpec is matched by all StateSets . 
returns whether the stateSet matches the desired stateSpec . 
returns whether the state matches the desired stateSpec . 
Returns null if no suitable zone could be found . 
returns list of unique time zones for the country .  
Returns the time zones for the country , which is the code attribute of the timezone element in time_zones_by_country.xml .  
Returns a String indicating the version of the time zone database currently in use . 
adds a split for the current time , labeled with splitLabel . 
returns the data for this value as a float . 
returns the complex unit type for this value . 
returns the data for this value as a dimension . 
returns the data for this value as a fraction . 
Returns a new pull parser with namespace support . 
Creates a new xml serializer . 
returns an AttributeSet interface for use with the given XmlPullParser . 
Sets if this instance is sealed .  
Gets the number of records contained in the event . 
Gets the record at a given index . 
Gets the event type . 
Sets the event type . 
Gets the time in which this event was sent . 
Sets the time in which this event was sent . 
Gets the package name of the source . 
Sets the package name of the source . 
Sets the movement granularity that was traversed . 
Gets the movement granularity that was traversed . 
Sets the performed action that triggered this event . 
Gets the performed action that triggered this event . 
Returns a cached instance if such is available or a new one is instantiated with its type property sets . 
Returns a cached instance if such is available or a new one is created . 
Returns a cached instance if such is available or a new one is instantiated . 
Returns the string representation of an event type . 
Sets the message to be processed if the interacted view hierarchy and the interacting client are running in the same thread . 
Gets the info for a window . 
Gets the info for all windows . 
Gets the result of a request to perform an accessibility action . 
Gets the message stored if the interacted and interacting threads are the same . 
Gets a cached accessibility service connection . 
Adds a cached accessibility service connection . 
Removes a cached accessibility service connection . 
Returns if the accessibility in the system is enabled . 
Returns if the touch exploration in the system is enabled . 
Returns if the high text contrast in the system is enabled .  
Sets the current state and notifies listeners , if necessary . 
Adds an accessibility interaction connection interface for a given window .  
Gets the accessibility view id which identifies a View in the view three .  
Gets the virtual descendant id which identifies an imaginary view in a containing View .  
Sets the source . 
Sets the source to be a virtual descendant of the given root . 
Find the view that has the specified focus type . 
Gets the id of the window from which the info comes from . 
Returns the array containing the IDs of this node 's children .  
Returns the id of the child at the specified index . 
Gets the number of children . 
gets the child at given index . 
Adds a child . 
Removes a child . 
Adds a virtual child which is a descendant of the given root . 
Removes a virtual child which is a descendant of the given root . 
Gets the actions that can be performed on the node . 
Gets the actions that can be performed on the node . 
Adds an action that can be performed on the node . 
Adds an action that can be performed on the node . 
Removes an action that can be performed on the node . 
Removes an action that can be performed on the node . 
Gets the node before which this one is visited during traversal . 
Sets the view before whose node this one should be visited during traversal . 
Sets the node before which this one is visited during traversal . 
Gets the node after which this one is visited in accessibility traversal . 
Sets the view whose node is visited after this one in accessibility traversal . 
Sets the node after which this one is visited in accessibility traversal . 
Sets the maximum text length , or -1 for no limit . 
Returns the maximum text length for this node . 
Sets the movement granularities for traversing the text of this node . 
Gets the movement granularities for traversing the text of this node . 
Gets the window to which this node belongs . 
Gets the parent . 
Sets the parent . 
Sets the parent to be a virtual descendant of the given root . 
Gets the node bounds in parent coordinates . 
Sets the node bounds in parent coordinates . 
Gets the node bounds in screen coordinates . 
Returns the actual rect containing the node bounds in screen coordinates . 
Sets the node bounds in screen coordinates . 
Gets whether this node is checkable . 
Sets whether this node is checkable . 
Gets whether this node is checked . 
Sets whether this node is checked . 
Gets whether this node is focusable . 
Sets whether this node is focusable . 
Gets whether this node is focused . 
Sets whether this node is focused . 
Gets whether this node is visible to the user . 
Sets whether this node is visible to the user . 
Gets whether this node is accessibility focused . 
Sets whether this node is accessibility focused . 
Gets whether this node is selected . 
Sets whether this node is selected . 
Gets whether this node is clickable . 
Sets whether this node is clickable . 
Gets whether this node is long clickable . 
Sets whether this node is long clickable . 
Gets whether this node is enabled . 
Sets whether this node is enabled . 
Gets whether this node is a password . 
Sets whether this node is a password . 
Gets if the node is scrollable . 
Sets if the node is scrollable . 
Gets if the node is editable . 
Sets whether this node is editable . 
gets the drawing order of the view corresponding it this node . 
sets the drawing order of the view corresponding it this node . 
Gets the collection info if the node is a collection . 
Sets the collection info if the node is a collection . 
Gets the collection item info if the node is a collection item . 
Sets the collection item info if the node is a collection item .  
Gets the range info if this node is a range . 
Sets the range info if this node is a range . 
Gets if the content of this node is invalid . 
Sets if the content of this node is invalid . 
Gets whether this node is context clickable . 
Sets whether this node is context clickable . 
Gets the node 's live region mode . 
Sets the node 's live region mode . 
Gets if the node is a multi line editable text . 
Sets if the node is a multi line editable text . 
Gets if this node opens a popup or a dialog . 
Sets if this node opens a popup or a dialog . 
Gets if the node can be dismissed . 
Sets if the node can be dismissed . 
Returns whether the node originates from a view considered important for accessibility . 
Sets whether the node is considered important for accessibility . 
Gets the package this node comes from . 
Sets the package this node comes from . 
Gets the class this node comes from . 
Sets the class this node comes from . 
Gets the text of this node . 
Sets the text of this node . 
Sets the error text of this node . 
Gets the error text of this node . 
Gets the content description of this node . 
Sets the content description of this node . 
Sets the view for which the view represented by this info serves as a label for accessibility purposes . 
Sets the view for which the view represented by this info serves as a label for accessibility purposes . 
Gets the node info for which the view represented by this info serves as a label for accessibility purposes . 
Sets the view which serves as the label of the view represented by this info for accessibility purposes . 
Sets the view which serves as the label of the view represented by this info for accessibility purposes . 
Gets the node info which serves as the label of the view represented by this info for accessibility purposes . 
Sets the fully qualified resource name of the source view 's id . 
Gets the fully qualified resource name of the source view 's id . 
Gets the text selection start or the cursor position . 
Gets the text selection end if text is selected . 
Sets the text selection start and end . 
Gets an optional bundle with extra data . 
Gets the value of a boolean property . 
Sets a boolean property . 
Sets the unique id of the IAccessibilityServiceConnection over which this instance can send requests to the system .  
Gets the id of the source node .  
Sets if this instance is sealed .  
Gets if this instance is sealed .  
Returns a cached instance if such is available otherwise a new one and sets the source . 
Returns a cached instance if such is available otherwise a new one and sets the source . 
Returns a cached instance if such is available otherwise a new one . 
Returns a cached instance if such is available or a new one is creates . 
returns an instance back to be reused . 
Gets the human readable action symbolic name . 
Gets the human readable movement granularity symbolic name . 
Gets the id for this action . 
Gets the label for this action . 
Gets the range type . 
Gets the min value . 
Gets the max value . 
Gets the current value . 
Gets the number of rows . 
Gets the number of columns . 
Gets if the collection is a hierarchically ordered . 
Gets the collection 's selection mode . 
Gets the column index at which the item is located . 
Gets the row index at which the item is located . 
Gets the number of columns the item spans . 
Gets the number of rows the item spans . 
Gets if the collection item is a heading . 
Gets if the collection item is selected . 
Find the virtual view , i.e. a descendant of the host View , that has the specified focus type . 
Sets the event source . 
Sets the source to be a virtual descendant of the given root . 
Sets the window id .  
Gets the id of the window from which the event comes from . 
Gets if the source is checked . 
Sets if the source is checked . 
Gets if the source is enabled . 
Sets if the source is enabled . 
Gets if the source is a password field . 
Sets if the source is a password field . 
Gets if the source is taking the entire screen . 
Sets if the source is taking the entire screen . 
Gets if the source is scrollable . 
Sets if the source is scrollable . 
Gets if the source is important for accessibility .  
Gets the number of items that can be visited . 
Sets the number of items that can be visited . 
Gets the index of the source in the list of items the can be visited . 
Sets the index of the source in the list of items that can be visited . 
Gets the index of the first character of the changed sequence , or the beginning of a text selection or the index of the first visible item when scrolling . 
Sets the index of the first character of the changed sequence or the beginning of a text selection or the index of the first visible item when scrolling . 
Gets the index of text selection end or the index of the last visible item when scrolling . 
Sets the index of text selection end or the index of the last visible item when scrolling . 
Gets the scroll offset of the source left edge in pixels . 
Sets the scroll offset of the source left edge in pixels . 
Gets the scroll offset of the source top edge in pixels . 
Sets the scroll offset of the source top edge in pixels . 
Gets the max scroll offset of the source left edge in pixels . 
Sets the max scroll offset of the source left edge in pixels . 
Gets the max scroll offset of the source top edge in pixels . 
Sets the max scroll offset of the source top edge in pixels . 
Gets the number of added characters . 
Sets the number of added characters . 
Gets the number of removed characters . 
Sets the number of removed characters . 
Gets the class name of the source . 
Sets the class name of the source . 
Gets the text of the event . 
Sets the text before a change . 
Sets the text before a change . 
Gets the description of the source . 
Sets the description of the source . 
Gets the id of the source node .  
Sets the unique id of the IAccessibilityServiceConnection over which this instance can send requests to the system .  
Sets if this instance is sealed .  
Gets if this instance is sealed . 
Gets the value of a boolean property . 
Sets a boolean property . 
Returns a cached instance if such is available or a new one is instantiated . 
Returns a cached instance if such is available or a new one is instantiated . 
returns an instance back to be reused . 
Gets the title of the window . 
Sets the title of the window .  
Gets the type of the window . 
Sets the type of the window . 
Gets the layer which determines the Z-order of the window . 
Sets the layer which determines the Z-order of the window .  
Gets the root node in the window 's hierarchy . 
Sets the anchor node 's ID .  
Gets the node that anchors this window to another . 
Gets the parent window . 
Sets the parent window id .  
Gets the unique window id . 
Sets the unique window id .  
Sets the unique id of the IAccessibilityServiceConnection over which this instance can send requests to the system .  
Gets the bounds of this window in the screen . 
Sets the bounds of this window in the screen .  
Gets if this window is active . 
Sets if this window is active , which is this is the window the user is currently touching or the window has input focus and the user is not touching any window .  
Gets if this window has input focus . 
Sets if this window has input focus .  
Gets if this window has accessibility focus . 
Sets if this window has accessibility focus .  
Gets the number of child windows . 
Gets the child window at a given index . 
Adds a child window .  
Returns a cached instance if such is available or a new one is created . 
Returns a cached instance if such is available or a new one is created . 
returns an instance back to be reused . 
Gets the value of a boolean property . 
Sets a boolean property . 
Adds a listener for changes in the user 's preferred captioning enabled state and visual properties . 
Returns whether a packed color indicates a non-default value . 
sets a tag object associated with this ActionMode . 
sets the title of the action mode . 
sets the title of the action mode . 
sets the subtitle of the action mode . 
sets the subtitle of the action mode . 
sets whether or not the title/subtitle display for this action mode is optional . 
sets a custom view for this action mode . 
sets a type for this action mode . 
Returns the type for this action mode . 
Returns the menu of actions that this action mode presents . 
Returns the current title of this action mode . 
Returns the current subtitle of this action mode . 
Returns the current custom view for this action mode . 
Returns whether the UI presenting this action mode can take focus or not . 
sets a listener to be notified when this ActionProvider 's overridden visibility changes . 
Sets the handler used to invoke listeners .  
Sets the acceleration curve for this animation . 
Sets the acceleration curve for this animation . 
Sets how many times the animation should be repeated . 
sets the Z ordering mode to use while running the animation . 
sets background behind animation . 
Gets the acceleration curve type for this animation . 
Returns the background color behind the animation . 
Gets the transformation to apply at a specified point in time . 
Gets the transformation to apply at a specified point in time . 
returns true if this animation changes the view 's alpha property .  
Sets the duration of every child animation . 
adds a child animation to this animation sets . 
Returns the current animation time in milliseconds . 
Returns the delay by which the children 's animation are offset from one column to the other . 
Sets the delay , as a fraction of the animation duration , by which the children 's animations are offset from one column to the other . 
Returns the delay by which the children 's animation are offset from one row to the other . 
Sets the delay , as a fraction of the animation duration , by which the children 's animations are offset from one row to the other . 
Returns the direction of the animation . 
Sets the direction of the animation . 
Returns the direction priority for the animation . 
Returns the order used to compute the delay of each child 's animation . 
Sets the order used to compute the delay of each child 's animation . 
Sets the animation to be run on each child of the view group on which this layout animation controller is . 
Sets the animation to be run on each child of the view group on which this layout animation controller is . 
Returns the animation applied to each child of the view group on which this controller is sets . 
Sets the interpolator used to interpolate the delays between the children . 
Sets the interpolator used to interpolate the delays between the children . 
Returns the interpolator used to interpolate the delays between the children . 
Returns the delay by which the children 's animation are offset . 
Sets the delay , as a fraction of the animation duration , by which the children 's animations are offset . 
Returns the animation to be applied to the specified view . 
Returns the amount of milliseconds by which the specified view 's animation must be delayed or offset . 
Sets the transformation type . 
Sets the degree of transparency @param alpha 1.0 means fully opaqe and 0.0 means fully transparent 
Sets the current Transform 's clip rect 
Sets the current Transform 's clip rect 
Returns the current Transform 's clip rect 
Returns whether the current Transform 's clip rect is sets 
returns a string representation of the transformation in a compact form . 
Gets the choreographer for the calling thread . 
Removes callbacks that have the specified action and token . 
Removes a previously posted frame callback . 
Gets the time when the current frame started .  
Sets the context menu header 's title to the title given in <var> titleRes </var> resource identifier . 
Sets the context menu header 's title to the title given in <var> title </var> . 
Sets the context menu header 's icon to the icon given in <var> iconRes </var> resource id . 
Gets the display id .  
Returns true if this display is still valid , false if the display has been removed . 
Gets a full copy of the display information .  
Gets the display 's layer stack .  
Returns a combination of flags that describe the capabilities of the display . 
Gets the display type . 
Gets the display address , or null if none .  
Gets the UID of the application that owns this display , or zero if it is owned by the system .  
Gets the package name of the application that owns this display , or null if it is owned by the system .  
Gets the compatibility info used by this display instance .  
Gets the name of the display . 
Gets the size of the display , in pixels . 
Gets the size of the display as a rectangle , in pixels . 
returns the range of display sizes an application can expect to encounter under normal operation , as long as there is no physical change in screen size .  
returns the maximum screen size dimension that will happen .  
returns a rectangle defining the insets of the overscan region of the display . 
Returns the rotation of the screen from its `` natural '' orientation . 
Gets the pixel format of the display . 
Gets the refresh rate of this display in frames per second . 
gets the supported refresh rates of this display in frames per second . 
Returns the active mode of the display . 
Gets the supported modes of this display . 
Returns the active color transform of this display 
Returns the default color transform of this display 
Returns the display 's HDR capabilities . 
Gets the supported color transforms of this device .  
Gets the app VSYNC offset , in nanoseconds . 
Gets display metrics that describe the size and density of this display . 
Gets the real size of the display without subtracting any window decor or applying any compatibility scale factors . 
Gets display metrics based on the real size of this display . 
Gets the state of the display , such as whether it is on or off . 
Returns true if the specified UID has access to this display .  
Returns true if the display is a public presentation display .  
Returns true if display updates may be suspended while in the specified display power state .  
Returns this mode 's id . 
Returns the physical width of the display in pixels when configured in this mode 's resolution . 
Returns the physical height of the display in pixels when configured in this mode 's resolution . 
Returns the refresh rate in frames per second . 
Gets the supported HDR types of this display . Returns empty array if HDR is not supported by the display . 
Returns the desired content max luminance data in cd/m2 for this display . 
Returns the desired content max frame-average luminance data in cd/m2 for this display . 
Returns the desired content min luminance data in cd/m2 for this display . 
Returns the list of supported refresh rates in the default mode . 
Returns true if the specified UID has access to this display . 
Gets the X coordinate of the drag point . 
Gets the Y coordinate of the drag point . 
Returns an indication of the result of the drag and drop operation . 
Returns a string containing a concise , human-readable representation of this DragEvent object . 
gets the focus finder for this thread . 
Find the next view to take focus in root 's descendants , starting from the view that currently is focused . 
Find the next view to take focus in root 's descendants , searching from a particular rectangle in root 's coordinates . 
Find the distance on the minor axis w.r.t the direction to the nearest edge of the destination rectangle . 
Find the nearest touchable view to the specified view . 
Gets the number of frames for which there is data . 
Gets the start time of the interval for which these statistics apply . 
Gets the end time of the interval for which these statistics apply . 
gets the time a frame at a given index was presented . 
Sets the listener which will be called for double-tap and related gestures . 
Sets the listener which will be called for context clicks . 
sets whether longpress is enabled , if this is enabled when a user presses and holds down you gets a longpress event and nothing further . 
Find the index into the overlay to insert the GhostView based on the order that the views should be drawn . 
Returns true if view is a GhostView 's FrameLayout wrapper . 
Returns true if viewParents is from a View that is on top of the comparedWith 's view . 
Adds all the parents , grandparents , etc. of view to parents . 
Returns true if view would be drawn on top of comparedWith or false otherwise . 
Creates new GraphicBuffer instance . 
Returns the width of this buffer in pixels . 
Returns the height of this buffer in pixels . 
Returns the pixel format of this buffer . 
Returns the usage hint sets on this buffer . 
Sets an optional transform on this layer . 
Creates a new input channel pair . 
Gets the name of the input channel . 
Gets information about the input device with the specified id . 
Gets the ids of all input devices in the system . 
Gets the input device id . 
Gets a generation number for this input device .  
Gets the vendor id for the given device , if available . 
Gets the product id for the given device , if available . 
Gets the input device descriptor , which is a stable identifier for an input device . 
Returns true if the device is a full keyboard .  
Gets the name of this input device . 
Gets the input sources supported by this input device as a combined bitfield . 
Gets the keyboard type . 
Gets the key character map associated with this input device . 
Gets whether the device is capable of producing the list of keycodes . 
Returns information about the first axis found for any source . 
Gets the ranges for all axes supported by the device . 
Gets the vibrator service associated with the device , if there is one . 
Sets the current pointer type .  
Gets the axis id . 
Gets the source for which the axis is defined . 
Gets the inclusive minimum value for the axis . 
Gets the inclusive maximum value for the axis . 
Gets the extent of the center flat position with respect to this axis . 
Gets the error tolerance for input device measurements with respect to this axis . 
Gets the resolution for input device measurements with respect to this axis . 
Gets the id for the device that this event came from . 
Gets the device that this event came from . 
Gets the source of the event . 
Gets a private flag that indicates when the system has detected that this input event may be inconsistent with respect to the sequence of previously delivered input events , such as when a key up event is sent but the key was not down or when a pointer move event is sent but the pointer is not down .  
Sets a private flag that indicates when the system has detected that this input event may be inconsistent with respect to the sequence of previously delivered input events , such as when a key up event is sent but the key was not down or when a pointer move event is sent but the pointer is not down .  
Gets the unique sequence number of this event .  
returns the target of edit operations . 
returns the abstract identifier for this completion , typically corresponding to the id associated with it in the original adapter . 
returns the original position of this completion , typically corresponding to its position in the original adapter . 
returns the actual text associated with this completion . 
returns the user-visible label for the completion , or null if the plain text should be shown . 
returns the offset position of this correction in the text . 
returns the text that has actually been typed by the user , and which has been corrected . 
returns the new text that corrects what was typed by the user . 
Sets the text range of the selection . 
Sets the text range of the composing text . 
Adds the bounding box of the character specified with the index .  
Sets the matrix that transforms local coordinates into screen coordinates . 
Returns the index where the selection starts . 
Returns the index where the selection ends . 
Returns the index where the composing text starts . 
Returns the entire composing text . 
Returns the flag of the insertion marker . 
Returns the flags associated with the character bounds specified with the index . 
returns the connection for interacting back with the application . 
returns the token for the connection back to the application . 
returns the user id of the client associated with this binding . 
returns the process id where this binding came from . 
gets <var> n </var> characters of text before the current cursor position . 
gets <var> n </var> characters of text after the current cursor position . 
Gets the selected text , if any . 
sets the selection of the text editor . 
returns a unique ID for this input method . 
returns the class name of the service component that implements this input method . 
returns the raw information about the Service implementing this input method . 
returns the component of the service that implements this input method . 
returns the class name of an activity that provides a settings UI for the input method . 
returns the count of the subtypes of Input Method . 
returns the Input Method 's subtype at the specified index . 
returns the resource identifier of a resource inside of this input method 's . 
returns whether or not this ime is a default ime or not .  
Returns a list of enabled input method subtypes for the specified input method info . 
returns true if it is fullscreen , entirely covering your UI , else returns false . 
returns true if the given view is the currently active view for the input method . 
returns true if any view is currently active in the input method . 
returns true if the currently served view is accepting full text edits . 
returns true if the current input method wants to watch the location of the input editor 's cursor in its window . 
returns true if the current input method wants to be notified when cursor/anchor location is changed .  
Returns the current input method subtype . 
Returns a map of all shortcut input method info and their subtypes . 
sets additional input method subtypes . 
Returns an empty string when no Language Tag is specified . 
Returns a display name for this subtype . 
Returns the label to be used to describe this group . 
Returns the list of items included in this group . 
Adds an item to the existing list . 
Returns the label to be used to describe this shortcut . 
Returns the icon to be used to describe this shortcut .  
Returns the base keycode that , combined with the modifiers , triggers this shortcut . 
Returns the base character that , combined with the modifiers , triggers this shortcut . 
Returns the sets of modifiers that , combined with the key , trigger this shortcut . 
Gets the Unicode character generated by the specified key and meta key state combination .  Returns 0 if the key is not one that is used to type Unicode characters .  
Gets the fallback action to perform if the application does not handle the specified key .  
Gets the number or symbol associated with the key . 
Gets the first character in the character array that can be generated by the specified key code . 
Gets the first character in the character array that can be generated by the specified key code . 
Gets the primary character for this key . 
gets the character conversion data for a given key code . 
gets an array of KeyEvent objects that if put into the input stream could plausibly generate the provided sequence of characters . 
Returns true if the specified key produces a glyph . 
Gets the keyboard type . 
Returns the maximum keycode . 
creates a new key event that is the same as the given one , but whose event time and repeat count are replaced with the given value . 
creates a new key event that is the same as the given one , but whose event time and repeat count are replaced with the given value . 
creates a new key event that is the same as the given one , but whose action is replaced with the given value . 
creates a new key event that is the same as the given one , but whose flags are replaced with the given value . 
Returns true if the specified keycode is a gamepad button . 
Returns the state of the meta keys . 
Returns the state of the modifier keys . 
Returns the flags for this key event . 
Gets a mask that includes all valid modifier key meta state bits . 
Returns true if this key code is a modifier key . 
Returns true if no modifiers keys are pressed according to the specified meta state . 
Returns true if only the specified modifier keys are pressed according to the specified meta state . Returns false if a different combination of modifier keys are pressed . 
Returns true if no modifier keys are pressed . 
Returns true if only the specified modifiers keys are pressed . Returns false if a different combination of modifier keys are pressed . 
Returns the pressed state of the ALT meta key . 
Returns the pressed state of the SHIFT meta key . 
Returns the pressed state of the SYM meta key . 
Returns the pressed state of the CTRL meta key . 
Returns the pressed state of the META meta key . 
Returns the pressed state of the FUNCTION meta key . 
Returns the locked state of the CAPS LOCK meta key . 
Returns the locked state of the NUM LOCK meta key . 
Returns the locked state of the SCROLL LOCK meta key . 
Gets the primary character for this key . 
Gets the Unicode character generated by the specified key and meta key state combination .  Returns 0 if the key is not one that is used to type Unicode characters .  
Gets the Unicode character generated by the specified key and meta key state combination .  Returns 0 if the key is not one that is used to type Unicode characters .  
gets the character conversion data for a given key code . 
Gets the first character in the character array that can be generated by the specified key code . 
Gets the first character in the character array that can be generated by the specified key code . 
Gets the number or symbol associated with the key . 
Returns true if this key produces a glyph . 
returns true if the key event is for a key code that is currently being tracked by the dispatcher . 
Returns a string that represents the symbolic name of the specified action such as `` ACTION_DOWN '' , or an equivalent numeric constant such as `` 35 '' if unknown .  
Returns a string that represents the symbolic name of the specified keycode such as `` KEYCODE_A '' , `` KEYCODE_DPAD_UP '' , or an equivalent numeric constant such as `` 1001 '' if unknown . 
Gets a keycode by its symbolic name such as `` KEYCODE_A '' or an equivalent numeric constant such as `` 1001 '' . 
Returns a string that represents the symbolic name of the specified combined meta key modifier state flags such as `` 0 '' , `` META_SHIFT_ON '' , `` META_ALT_ON | META_SHIFT_ON '' or an equivalent numeric constant such as `` 0x10000000 '' if unknown .  
returns null for the default behavior . 
returns null for the default behavior . 
creates a copy of the existing LayoutInflater object , with the copy pointing to a different Context than the original . 
returns the context we are running in , for access to resources , class loader , etc. . 
Creates a view from a tag name using the supplied attribute sets . 
adds a new item to the menu . 
adds a new item to the menu . 
adds a new item to the menu .  
adds a new sub-menu to the menu . 
adds a new sub-menu to the menu . 
adds a new sub-menu to the menu .  
adds a group of menu items corresponding to actions that can be performed for a particular Intent .   
removes the item with the given identifier . 
removes all items in the given group . 
removes all existing items from the menu , leaving it empty as if it had just been created . 
returns whether the menu currently has item items that are visible . 
returns the menu item with a particular identifier . 
gets the number of items in the menu . 
Gets the menu item at the given index . 
returns the identifier for this menu item . 
returns the group identifier that this menu item is part of . 
returns the category and order within the category of this item .  
returns the Intent associated with this item . 
returns the char for this menu item 's alphabetic shortcut . 
returns whether the item can currently display a check mark . 
returns whether the item is currently displaying a check mark . 
Sets the visibility of the menu item . 
returns the visibility of the menu item . 
Sets whether the menu item is enabled . 
returns the enabled state of the menu item . 
gets the sub-menu to be invoked when this item is selected , if it has one .  
sets a custom listener for invocation of this menu item . 
Gets the extra information linked to this menu item . 
Sets how this item should display in the presence of an Action Bar . 
Sets how this item should display in the presence of an Action Bar . 
sets an action view for this menu item . 
sets an action view for this menu item . 
Returns the currently sets action view for this menu item . 
Returns true if this menu item 's action view has been expanded . 
creates a new MotionEvent , filling in all of the basic values that define the motion . 
creates a new MotionEvent , filling in all of the basic values that define the motion . 
creates a new MotionEvent , filling in all of the basic values that define the motion . 
creates a new MotionEvent , filling in all of the basic values that define the motion . 
creates a new MotionEvent , filling in a subset of the basic motion values . 
creates a new MotionEvent , copying from an existing one . 
creates a new MotionEvent , copying from an existing one , but not including any historical point information . 
returns the kind of action being performed . 
returns the masked action being performed , without pointer index information . 
Returns true if this motion event is a touch event .  
Gets the motion event flags . 
returns the pointer identifier associated with a particular pointer data index in this event . 
Gets the tool type of a pointer for the given pointer index . 
Returns the state of any meta / modifier keys that were in effect when the event was generated . 
Gets the state of all buttons that are pressed such as a mouse or stylus button . 
Sets the bitfield indicating which buttons are pressed . 
Gets which button has been modified during a press or release action . 
Sets the action button for the event . 
Returns the original raw X coordinate of this event . 
Returns the original raw Y coordinate of this event . 
returns the precision of the X coordinates being reported . 
returns the precision of the Y coordinates being reported . 
Returns the number of historical points in this event . 
Returns a bitfield indicating which edges , if any , were touched by this MotionEvent . 
Sets the bitfield indicating which edges , if any , were touched by this MotionEvent . 
Sets this event 's action . 
sets this event 's location . 
adds a new movement to the batch of movements in this event . 
adds a new movement to the batch of movements in this event . 
Adds all of the movement samples of the specified event to this one if it is compatible .  
Returns true if all points in the motion event are completely within the specified bounds .  
Returns a new motion events whose points have been clamped to the specified bounds .  
Gets an integer where each pointer id present in the event is marked as a bit .  
Returns a string that represents the symbolic name of the specified axis such as `` AXIS_X '' or an equivalent numeric constant such as `` 42 '' if unknown . 
Gets an axis by its symbolic name such as `` AXIS_X '' or an equivalent numeric constant such as `` 42 '' . 
Returns a string that represents the symbolic name of the specified combined button state flags such as `` 0 '' , `` BUTTON_PRIMARY '' , `` BUTTON_PRIMARY | BUTTON_SECONDARY '' or an equivalent numeric constant such as `` 0x10000000 '' if unknown .  
Returns a string that represents the symbolic name of the specified tool type such as `` TOOL_TYPE_FINGER '' or an equivalent numeric constant such as `` 42 '' if unknown .  
Gets the value associated with the specified axis . 
Sets the value associated with the specified axis . 
Returns true if sensor is enabled and false otherwise 
Gets a special pointer icon that has no bitmap . 
Gets the default pointer icon .  
Gets a system pointer icon for the given type . 
Creates a custom pointer icon from the given bitmap and hotspot information . 
Creates a new RenderNode that can be used to record batches of drawing operations , and store / apply render properties when drawn . 
Returns whether the RenderNode 's display list content is currently usable . 
sets whether the Render node should clip itself to its bounds . 
Sets whether the display list should be drawn immediately after the closest ancestor display list containing a projection receiver . 
Sets whether the display list is a projection receiver - that its parent DisplayList should draw any descendent DisplayLists with ProjectBackwards = true directly on top of it . 
Sets the outline , defining the shape that casts a shadow , and the path to be clipped if setClipToOutline is sets . 
sets the static matrix on the display list . 
sets the Animation matrix on the display list . 
Sets the translucency level for the display list . 
Returns the translucency level of this display list . 
Sets whether the display list renders content which overlaps . 
Sets the translation value for the display list on the X axis . 
Returns the translation value for this display list on the X axis , in pixels . 
Sets the translation value for the display list on the Y axis . 
Returns the translation value for this display list on the Y axis , in pixels . 
Sets the translation value for the display list on the Z axis . 
Returns the translation value for this display list on the Z axis . 
Sets the rotation value for the display list around the Z axis . 
Returns the rotation value for this display list around the Z axis , in degrees . 
Sets the rotation value for the display list around the X axis . 
Returns the rotation value for this display list around the X axis , in degrees . 
Sets the rotation value for the display list around the Y axis . 
Returns the rotation value for this display list around the Y axis , in degrees . 
Sets the scale value for the display list on the X axis . 
Returns the scale value for this display list on the X axis . 
Sets the scale value for the display list on the Y axis . 
Returns the scale value for this display list on the Y axis . 
Returns the pivot value for this display list on the X axis , in pixels . 
Returns the pivot value for this display list on the Y axis , in pixels . 
Sets the camera distance for the display list . 
Returns the distance in Z of the camera of the display list . 
Sets the left position for the display list . 
Sets the top position for the display list . 
Sets the right position for the display list . 
Sets the bottom position for the display list . 
Gets the size of the DisplayList for debug purposes . 
returns whether the quick scale gesture , in which the user performs a double tap followed by a swipe , should perform scaling . 
returns whether the stylus scale gesture , in which the user uses a stylus and presses the button , should perform scaling . 
gets the X coordinate of the current gesture 's focal point . 
gets the Y coordinate of the current gesture 's focal point . 
returns the average distance between each of the pointers forming the gesture in progress through the focal point . 
returns the average X distance between each of the pointers forming the gesture in progress through the focal point . 
returns the average Y distance between each of the pointers forming the gesture in progress through the focal point . 
returns the previous average distance between each of the pointers forming the gesture in progress through the focal point . 
returns the previous average X distance between each of the pointers forming the gesture in progress through the focal point . 
returns the previous average Y distance between each of the pointers forming the gesture in progress through the focal point . 
returns the scaling factor from the previous scale event to the current event . 
returns the time difference in milliseconds between the previous accepted scaling event and the current scaling event . 
returns the event time of the current event being processed . 
gets the sonification constant for the focus directions . 
Sets the submenu header 's title to the title given in <var> titleRes </var> resource identifier . 
Sets the submenu header 's title to the title given in <var> title </var> . 
Sets the submenu header 's icon to the icon given in <var> iconRes </var> resource id . 
Returns true if this object holds a valid surface . 
Gets the generation number of this surface , incremented each time the native surface contained within this object changes .  
Returns the next frame number which will be dequeued for rendering .  
Returns true if the consumer of this Surface is running behind the producer .  
Sets the translator used to scale canvas 's width/height in compatibility mode . 
sets the scaling mode to be used for this surfaces buffers 
Returns a human readable representation of a rotation .  
Sets an alpha value for the entire Surface . 
Sets the opacity of the surface . 
Sets the security of the surface . 
adds a Callback interface for this holder . 
Removes a previously added Callback interface from this holder . 
Sets the surface 's type . 
sets the desired PixelFormat of the surface . 
returns the SurfaceHolder providing access and control over this SurfaceView 's underlying surface . 
returns a unique ID for this spell checker . 
returns the component of the service that implements . 
returns the raw information about the Service implementing this spell checker . 
returns the class name of an activity that provides a settings UI . 
returns the count of the subtypes . 
returns the subtype at the specified index . 
gets the spell checker service info this spell checker session has . 
gets suggestions from the specified sentences @param textInfos an array of text metadata for a spell checker @param suggestionsLimit the maximum number of suggestions that will be returned 
gets candidate strings for a substring of the specified text . 
Returns an empty string when no Language Tag is specified . 
sets the cookie and the sequence of SuggestionsInfo which are sets to TextInfo from a client application @param cookie the cookie of an input TextInfo @param sequence the cookie of an input TextInfo 
Returns the language component of a given locale string . 
gets a spell checker session for the specified spell checker @param locale the locale for the spell checker . 
Sets the transform to associate with this texture view . 
Returns the transform associated with this texture view . 
Sets the directory to use as a persistent storage for hardware rendering resources . 
Creates a hardware renderer using OpenGL . 
Sets up the renderer for drawing . 
Gets the current width of the surface . 
Gets the current height of the surface . 
Adds a rendernode to the renderer which can be drawn and changed asynchronously to the rendernode of the UI thread . 
Creates a new hardware layer . 
returns a VelocityTracker object back to be re-used by others . 
adds a user 's movement to the tracker . 
gets an estimator for the movements of a pointer using past movements of the pointer to predict future movements . 
Gets an estimate of the X position of the pointer at the specified time point . 
Gets an estimate of the Y position of the pointer at the specified time point . 
Gets the X coefficient with the specified index . 
Gets the Y coefficient with the specified index . 
Returns the size of the vertical faded edges used to indicate that more content in this view is visible . 
sets the size of the faded edge used to indicate that more content in this view is available . 
Returns the size of the horizontal faded edges used to indicate that more content in this view is visible . 
Returns the width of the vertical scrollbar . 
Returns the height of the horizontal scrollbar . 
sets the position of the vertical scroll bar . 
Sets the state of all scroll indicators .  
Sets the state of the scroll indicators specified by the mask .  
Returns a bitmask representing the enabled scroll indicators . 
adds a listener that will be called when the bounds of the view change due to layout processing . 
removes a listener for layout changes . 
adds a listener for attach state changes . 
removes a listener for attach state changes . 
Returns the focus-change callback registered for this view . 
returns whether this view has an attached OnClickListener . Returns true if there is a listener , false if there is none . 
sets an observer to collect stats for each frame rendered for this view .  
removes observer configured to collect frame stats for this view .  
Returns true if this view has focus itself , or is the ancestor of the view that has focus . 
Gets the location of this view in screen coordinates . 
Gets the location of this view in screen coordinates .  
returns the class name of this object to be used for accessibility purposes . 
Returns the delegate for implementing accessibility support via composition .   
Gets the unique identifier of this view on the screen for accessibility purposes .  
Gets the unique identifier of the window in which this View reseides .  
Sets the id of a view before which this one is visited in accessibility traversal . 
Gets the id of a view before which this one is visited in accessibility traversal . 
Sets the id of a view after which this one is visited in accessibility traversal . 
Gets the id of a view after which this one is visited in accessibility traversal . 
Gets the id of a view for which this view serves as a label for accessibility purposes . 
Sets the id of a view for which this view serves as a label for accessibility purposes . 
Returns true if this view has focus @return True if this view has focus , false otherwise . 
Find the view in the hierarchy rooted at this view that currently has focus . 
Returns the quality of the drawing cache . 
sets the drawing cache quality of this view . 
Returns the outsets , which areas of the device that are n't a surface , but we would like to treat them as such .  
Returns the visibility status for this view . 
sets the enabled state of this view . 
Returns the enabled status for this view . 
sets the enabled state of this view . 
sets whether this view can receive the focus . 
sets whether this view can receive focus while in touch mode . 
sets whether this view should have sound effects enabled for events such as clicking and touching . 
sets whether this view should have haptic feedback for events such as long presses . 
Returns the layout direction for this view . 
sets the layout direction for this view . 
Returns the resolved layout direction for this view . 
sets whether this view is currently tracking transient state that the framework should attempt to preserve when possible . 
Returns true if this view is currently attached to a window . 
Returns true if this view has been through at least one layout since it was last attached to or detached from a window . 
Returns whether or not this View draws on its own . 
Returns whether or not this View can cache its drawing or not . 
Sets the pressed state for this view and provides a touch coordinate for animation hinting . 
Sets the pressed state for this view . 
Gets whether the framework should discard touches when the view 's window is obscured by another visible window . 
Sets whether the framework should discard touches when the view 's window is obscured by another visible window . 
Returns whether this View is able to take focus . 
Find the nearest view in the specified direction that can take focus . 
Find and returns all focusable views that are descendants of this view , possibly including this view if it is focusable itself . 
Find and returns all touchable views that are descendants of this view , possibly including this view if it is touchable itself . 
Returns whether this View is accessibility focused . 
sets to AccessibilityNodeInfo #ACTION _ ACCESSIBILITY_FOCUS to specify that focus is moving within the window . 
Gets the mode for determining whether this View is important for accessibility which is if it fires accessibility events and if it is reported to accessibility services that query the screen . 
Sets the live region mode for this view . 
Gets the live region mode for this View . 
Sets how to determine whether this view is important for accessibility which is if it fires accessibility events and if it is reported to accessibility services that query the screen . 
Returns the view within this view 's hierarchy that is hosting accessibility focus . 
Gets the parent for accessibility purposes . 
Adds the children of this View relevant for accessibility to the given list as output . 
Returns whether the View is considered actionable from accessibility perspective .  
Returns whether the View has registered callbacks which makes it important for accessibility . 
Gets the text reported for accessibility purposes .  
Gets whether accessibility selection can be extended .  
Returns null if the view is not currently attached to the window . 
Returns true if this view is in a window that currently has window focus . 
Returns whether the device is currently in touch mode . 
Returns the context the view is running in , through which it can access the current theme , resources , etc. . 
creates a new InputConnection for an InputMethod to interact with the view . 
Returns true if the view is currently hovered . 
Sets whether the view is currently hovered . 
removes the longpress detection timer . 
removes the pending click action 
removes the prepress detection timer . 
removes the tap detection timer . 
Sets the TouchDelegate for this View . 
Gets the TouchDelegate for this View . 
sets flags controlling behavior of this view . 
Gets the parent of this view . 
sets the horizontal scrolled position of your view . 
sets the vertical scrolled position of your view . 
returns the scrolled left position of this view . 
returns the scrolled top position of this view . 
returns the width of the your view . 
returns the height of your view . 
returns the visible drawing bounds of your view . 
Returns true if the transform matrix is the identity matrix . 
Gets the distance along the Z axis from the camera to this view . 
Sets the degrees that the view is rotated around the pivot point . 
Sets the degrees that the view is rotated around the vertical axis through the pivot point . 
Sets the degrees that the view is rotated around the horizontal axis through the pivot point . 
Sets the amount that the view is scaled in x around the pivot point , as a proportion of the view 's unscaled width . 
Sets the amount that the view is scaled in Y around the pivot point , as a proportion of the view 's unscaled width . 
Returns the value for overlapping rendering that is used internally . 
Returns whether this View has content which overlaps . 
Sets the opacity of the view to a value from 0 to 1 , where 0 means the view is completely transparent and 1 means the view is completely opaque . 
Sets the top position of this view relative to its parent . 
Sets the bottom position of this view relative to its parent . 
Sets the left position of this view relative to its parent . 
Sets the right position of this view relative to its parent . 
Sets the visual x position of this view , in pixels . 
Sets the visual y position of this view , in pixels . 
Sets the visual z position of this view , in pixels . 
Sets the base elevation of this view , in pixels . 
Returns the current StateListAnimator if exists . 
Returns whether the Outline should be used to clip the contents of the View . 
Sets whether the View 's Outline should be used to clip the contents of the View . 
gets the LayoutParams associated with this view . 
sets the layout parameters associated with this view . 
sets the scrolled position of your view . 
Returns the queue of runnable for this view . 
Gets the view root associated with the View .  
Returns false on failure , usually because the looper processing the message queue is exiting . 
Returns false on failure , usually because the looper processing the message queue is exiting . 
Removes the specified Runnable from the message queue . 
Returns the strength , or intensity , of the top faded edge . 
Returns the strength , or intensity , of the bottom faded edge . 
Returns the strength , or intensity , of the left faded edge . 
Returns the strength , or intensity , of the right faded edge . 
Returns true if scrollbars will fade when this view is not scrolling @return true if scrollbar fading is enabled @attr ref android.R.styleable #View _ fadeScrollbars 
Returns the delay before scrollbars fade . 
Returns the scrollbar fade duration . 
Returns the scrollbar size . 
Returns the current scrollbar style . 
returns true if the application tag in the AndroidManifest has sets `` supportRtl '' to true 
returns if padding has been resolved 
Gets the logical display to which the view 's window has been attached . 
returns the visibility value of the least visible component passed . 
returns the time at which the drawing of the view hierarchy started . 
Returns the bitmap in which this view drawing is cached . 
creates a snapshot of the view into a bitmap .  
Sets a rectangular area on this view to which the view will be clipped when it is drawn . 
Sets the correct background bounds and rebuilds the outline , if needed . 
Creates a new display list or updates the existing display list for the specified Drawable . 
Returns the overlay for this view , creating it if it does not yet exist . 
returns true if o is a ViewGroup that is laying out using optical bounds .  
Returns the resources associated with this view . 
returns true if it is one you are displaying , else returns the result of calling through to the super class . 
returns an array of resource IDs of the drawable states representing the current state of the view . 
Sets the background color for this view . 
sets the background to a given resource . 
sets the background to a given Drawable , or removes the background . 
Gets the background drawable @return The drawable used as the background for this view , if any . 
returns the tint applied to the background drawable , if specified . 
returns the blending mode used to apply the tint to the background drawable , if specified . 
Returns the drawable used as the foreground of this View . 
returns the tint applied to the foreground drawable , if specified . 
returns the blending mode used to apply the tint to the foreground drawable , if specified . 
Sets the padding . 
Sets the relative padding . 
Returns the top padding of this view . 
Returns the bottom padding of this view . 
Returns the left padding of this view . 
Returns the start padding of this view depending on its resolved layout direction . 
Returns the right padding of this view . 
Returns the end padding of this view depending on its resolved layout direction . 
sets this view 's optical insets .  
Returns the ViewTreeObserver for this view 's hierarchy . 
Sets the identifier for this view . 
Returns this view 's identifier . 
Returns this view 's tag . 
Sets the tag associated with this view . 
Returns the tag associated with this view and the specified key . 
Sets a tag associated with this view and a key .  
Creates a string of whitespaces used for indentation . 
returns the offset of the widget 's text baseline from the widget 's top boundary . 
Returns whether the view hierarchy is currently undergoing a layout pass . 
Sets the measured dimension without extra processing for things like optical bounds . 
Returns the suggested minimum height that the view should use . 
Returns the suggested minimum width that the view should use . 
Returns the minimum height of the view . 
Sets the minimum height of the view . 
Returns the minimum width of the view . 
Sets the minimum width of the view . 
gets the animation currently associated with this view . 
Sets the next animation to play for this view . 
Returns the current system UI visibility that is currently sets for the entire window . 
sets a listener to receive callbacks when the visibility of the system bar changes . 
Returns the over-scroll mode for this view . 
sets the over-scroll mode for this view . 
Returns true if nested scrolling is enabled for this view . 
Returns true if this view has a nested scrolling parent . 
sets the text direction . 
returns the resolved text direction . 
sets the text alignment . 
returns the resolved text alignment . 
Gets the Views in the hierarchy affected by entering and exiting Activity Scene transitions .  
Returns the pointer icon for the motion event , or null if it does n't specify the icon . 
sets the pointer icon for the current view . 
Gets the pointer icon for the current view . 
Creates a measure specification based on the supplied size and mode . 
Returns a String representation of the specified measure specification . 
Sets the name of the View to be used to identify Views in Transitions . 
Returns the name of the View to be used to identify Views in Transitions . 
Returns an Animator which can animate a clipping circle . 
Returns a configuration for the specified context . 
Returns a View to enable grabbing screenshots from custom children returned in dumpViewHierarchyWithProperties . 
Returns the number of instanciated Views .  
Returns the number of instanciated ViewAncestors .  
Returns an object equal to the result of the method invocation , null if the method is declared to returns void @throws Exception if the method invocation caused any exception 
Gets the descendant focusability of this view group . 
sets the descendant focusability of this view group . 
Find the nearest view in the specified direction that wants to take focus . 
Returns the focused child of this view , if any . 
Returns true if this view has or contains focus @return true if this view has or contains focus 
sets whether this ViewGroup should ignore focus requests for itself and its children . 
Returns a MotionEvent that 's been transformed into the child 's local coordinates . 
Returns true if the flag was previously sets . 
Gets the touch target for specified child view . Returns null if not found . 
Adds a touch target for specified child to the beginning of the list . 
Removes the pointer ids from consideration . 
Returns true if a child view can receive pointer events .  
Returns true if a child view contains the specified point when transformed into its coordinate space .  
Returns true if MotionEvents dispatched to this ViewGroup can be split to multiple children . 
Returns true if this ViewGroup should be considered as a single entity for removal when executing an Activity transition . 
returns true if this ViewGroup is laying out using optical bounds . 
Returns the ViewGroupOverlay for this view group , creating it if it does not yet exist . 
Returns the index of the child to draw for this iteration . 
Returns whether this group 's children are clipped to their bounds before drawing . 
Sets t to be the static transformation of the child , if sets , returning a boolean to indicate whether a static transform was sets . 
Removes a view from the list of transient views in this container . 
Returns the number of transient views in this container . 
Adds a child view . 
Adds a child view . 
Adds a child view with this ViewGroup 's default layout parameters and the specified width and height . 
Adds a child view with the specified layout parameters . 
Adds a child view with the specified layout parameters . 
Adds a view during layout . 
Adds a view during layout . 
Removes a view during layout . 
Removes a range of views during layout . 
Removes the view at the specified position in the group . 
Removes the specified range of views from the group . 
Sets the LayoutTransition object for this ViewGroup . 
Gets the LayoutTransition object for this ViewGroup . 
Sets the layout animation controller used to animate the group 's children after the first layout . 
Returns the layout animation controller used to animate the group 's children . 
Returns an integer indicating what types of drawing caches are kept in memory . 
Sets the basis of alignment during the layout of this ViewGroup . 
Returns a new sets of layout parameters based on the supplied attributes sets . 
Returns a safe sets of layout parameters based on the supplied layout params . 
Returns a sets of default layout parameters . 
Returns the position in the group of the specified child view . 
Returns the number of children in the group . 
Returns the view at the specified position in the group . 
Removes any pending animations for views that have been removed . 
adds a view which is removed from mChildren but still needs animation @param v View to adds 
Returns the animation listener to which layout animation events are sent . 
Sets whether this ViewGroup 's drawable states also include its children 's drawable states . 
Returns whether this ViewGroup 's drawable states also include its children 's drawable states . 
returns true if the pressed state should be delayed for children or descendants of this ViewGroup . 
returns the current axes of nested scrolling for this ViewGroup . 
Returns a String representation of this sets of layout parameters . 
Sets the margins , in pixels . 
Sets the relative margins , in pixels . 
Sets the relative start margin . 
Returns the start margin in pixels . 
Sets the relative end margin . 
Returns the end margin in pixels . 
sets the layout direction @param layoutDirection the layout direction . 
Removes all content from the overlay . 
Returns the parent if it exists , or null . 
Returns the clipped visible part of the rectangle r , defined in the child 's local coordinate system . 
Find the nearest view in the specified direction that wants to take focus @param v The view that currently has focus @param direction One of FOCUS_UP , FOCUS_DOWN , FOCUS_LEFT , and FOCUS_RIGHT 
Gets the parent of a given View for accessibility . 
returns this view parent layout direction .  
returns this view parent text direction .  
returns this view parent text alignment .  
Removes the given property from being animated as a part of this PropertyBundle . 
Sets the duration for the underlying animator that animates the requested properties . 
Returns the current duration of property animations . 
Returns the current startDelay of property animations . 
Sets the startDelay for the underlying animator that animates the requested properties . 
Sets the interpolator for the underlying animator that animates the requested properties . 
Returns the timing interpolator that this animation uses . 
Sets a listener for events in the underlying Animators that run the property animations . 
Sets a listener for update events in the underlying ValueAnimator that runs the property animations . 
adds LayoutTransition to the list of transitions to be started in the next traversal .  
Find an ancestor of focused that wants focus after its descendants and is focusable in touch mode . 
adds trackball movement into the state .  
Returns true if the key is used for keyboard navigation . 
Returns true if the key is used for typing . 
sets the identifier for this view . 
sets the basic dimensions of this view . 
sets the text that is associated with this view . 
sets optional hint text associated with this view ; this is for example the text that is shown by an EditText when it is empty to indicate to the user the kind of text to input . 
gets extra data associated with this view structure ; the returned Bundle is mutable , allowing you to view and modify its contents . 
adds to this view 's child count . 
Returns the id taken by the inflated view . 
removes a previously installed window attach callback . 
removes a previously installed window focus change callback . 
removes a previously installed focus change callback . 
removes a previously installed pre-draw callback . 
Returns whether there are listeners for on pre-draw events . 
Returns whether there are listeners for computing internal insets . 
Returns the current stack Id for the window . 
returns the Context this window policy is running in , for retrieving resources and other information . 
sets the container for this window . 
returns the container for this Window . 
sets the window manager for use by this Window to , for example , display panels . 
sets the window manager for use by this Window to , for example , display panels . 
returns the window manager allowing this Window to display its own windows . 
sets the Callback interface for this window , used to intercept key events and other dynamic operations in the window . 
returns the current Callback interface for this window . 
sets an observer to collect frame stats for each frame rendererd in this window . 
removes observer and stop listening to frame stats for this window . 
sets a callback for changes of area where caption will draw its content . 
sets the width and height layout parameters of the window . 
sets the gravity of the window , as per the Gravity constants . 
sets the type of the window , as per the WindowManager.LayoutParams types .  
sets the format of window , as per the PixelFormat types .  
Sets the Sustained Performance requirement for the calling window . 
sets the screen content to an explicit view . 
removes the view that was used as the screen content .  
returns the view in this Window that currently has focus , or null if there are none . 
Sets the window elevation . 
Gets the window elevation .  
Sets whether window content should be clipped to the outline of the window background . 
sets the value for a drawable feature of this window , from a resource identifier . 
sets the value for a drawable feature of this window , from a URI . 
sets an explicit Drawable value for feature of this window . 
sets a custom alpha value for the given drawable feature , controlling how much the background is visible through it . 
sets the integer value for a feature . 
returns the feature bits that are enabled . 
returns the feature bits sets by default on a window . 
returns the feature bits that are being implemented by this Window . 
sets the default format of window , as per the PixelFormat types .  
sets extra options that will influence the UI for this window . 
sets extra options that will influence the UI for this window . 
sets the primary icon for this window . 
sets the default icon for this window .  
sets the logo for this window . 
sets the default logo for this window .  
sets focus locally . 
Sets the Transition that will be used to move Views into the initial scene . 
Sets the Transition that will be used to move Views out of the scene when starting a new Activity . 
Sets the Transition that will be used to move Views in to the scene when returning from a previously-started Activity . 
Returns the transition used to move Views into the initial scene . 
Returns the Transition that will be used to move Views out of the scene when starting a new Activity . 
Returns the Transition that will be used to move Views in to the scene when returning from a previously-started Activity . 
Sets the Transition that will be used for shared elements transferred into the content Scene . 
Sets the Transition that will be used for shared elements transferred back to a calling Activity . 
Returns the Transition that will be used for shared elements transferred into the content Scene . 
Returns the Transition that will be used for shared elements transferred back to a calling Activity . 
Sets the Transition that will be used for shared elements after starting a new Activity before the shared elements are transferred to the called Activity . 
Sets the Transition that will be used for shared elements reentering from a started Activity after it has returned the shared element to it start location . 
Returns the Transition to use for shared elements in the launching Window prior to transferring to the launched Activity 's Window . 
Returns the Transition that will be used for shared elements reentering from a started Activity after it has returned the shared element to it start location . 
Returns the duration , in milliseconds , of the window background fade when transitioning into or away from an Activity when called with an Activity Transition . 
Sets the duration , in milliseconds , of the window background fade when transitioning into or away from an Activity when called with an Activity Transition . 
Returns true when shared elements should use an Overlay during shared element transitions or false when they should animate as part of the normal View hierarchy . 
Sets whether or not shared elements should use an Overlay during shared element transitions . 
sets what color should the caption controls be . 
sets the drawable that is drawn underneath the caption during the resizing . 
Returns true if a draw should be requested after the next content draw . 
gets the time a frame at a given index was ready for presentation . 
Returns the left system window inset in pixels . 
Returns the top system window inset in pixels . 
Returns the right system window inset in pixels . 
Returns the bottom system window inset in pixels . 
Returns the left window decor inset in pixels . 
Returns the top window decor inset in pixels . 
Returns the right window decor inset in pixels . 
Returns the bottom window decor inset in pixels . 
Returns true if this WindowInsets has nonzero system window insets . 
Returns true if this WindowInsets has nonzero window decor insets . 
Returns true if this WindowInsets has any nonzero insets . 
Returns true if the associated window has a round shape . 
Returns a copy of this WindowInsets with the system window insets fully consumed . 
Returns a copy of this WindowInsets with selected system window insets fully consumed . 
Returns a copy of this WindowInsets with selected system window insets replaced with new values . 
Returns a copy of this WindowInsets with selected system window insets replaced with new values . 
Returns the top stable inset in pixels . 
Returns the left stable inset in pixels . 
Returns the right stable inset in pixels . 
Returns the bottom stable inset in pixels . 
Returns true if this WindowInsets has nonzero stable insets . 
Returns a copy of this WindowInsets with the stable insets fully consumed . 
removes all roots with specified token . 
removes all roots with specified token , except maybe one view . 
Sets the window token to assign when none is specified by the client or available from the parent window . 
sets by the accessibility layer to observe changes in the magnified region , rotation , and other window transformations related to display magnification as the window manager is responsible for doing the actual magnification and has access to the raw window data while the accessibility layer serves as a controller . 
sets by the accessibility layer to specify the magnification and panning to be applied to all windows that should be magnified . 
Gets the magnification and translation applied to a window given its token . 
Sets a callback for observing which windows are touchable for the purposes of accessibility . 
Sets a filter for manipulating the input event stream . 
Gets the token of the window that has input focus . 
Gets the frame of a window given its token . 
Adds a window token for a given window type . 
Removes a window token . 
Returns true when the hardware keyboard is available . 
Sets the callback listener for hardware keyboard status changes . 
Returns true if the stack with the input Id is currently visible . 
returns the uid of the app that owns this window . 
returns the package name of the app that owns this window . 
Returns true if this window is waiting to receive its given internal insets from the client app , and so should not impact the layout of other windows . 
returns whether this window needs the menu key shown . 
gets the layer at which this window 's surface will be Z-ordered . 
returns true if this window is participating in voice interaction . 
returns true if , at any point , the application token associated with this window has actually displayed any windows . 
Returns true if the window has a surface that it has drawn a complete UI in to . 
Returns true if this window has been shown on screen at some time in the past . 
Returns true if the window is current in multi-windowing mode . 
removes the input consumer from the window manager . 
adds a input consumer which will consume all input events going to any window below it . 
Returns a code that describes the current state of the lid switch . 
Returns a code that descripbes whether the camera lens is covered or not . 
returns the window manager lock needed to correctly call `` Lw '' methods . 
returns how to Z-order sub-windows in relation to the window they are attached to . returns positive to have them ordered in front , negative for behind . 
returns the display width available after excluding any screen decorations that could never be removed in Honeycomb . 
returns the display height available after excluding any screen decorations that could never be removed in Honeycomb . 
returns the available screen width that we should report for the configuration . 
returns the available screen height that we should report for the configuration . 
returns whether the given window is forcibly hiding all windows except windows with FLAG_SHOW_WHEN_LOCKED sets . 
returns the window that is hiding the keyguard , if such a thing exists . 
returns a non-0 number to force the animation to a specific resource ID , or 0 to use the default animation . 
creates and returns an animation to re-display a force hidden window . 
creates and returns an animation to let the wallpaper disappear after being shown on a force hiding window . 
Returns the bottom-most layer of the system decor , above which no policy decor should be applied . 
returns the rectangle of the screen that is available for applications to run in . 
returns the insets for the areas covered by system windows .  
returns true if it is okay to perform animations for an app transition that is about to occur . 
returns whether the default display is on and not blocked by a black surface . 
returns whether the keyguard is on . 
Gets the current user rotation mode . 
sets the last used input method window state .  
Returns whether a given window type can be magnified . 
Returns whether a given window type is considered a top level one . 
Gets the status code of this cache entry . 
Gets the content length of this cache entry . 
Gets the path of the file used to store the content of this cache entry , relative to the base directory of the cache .  
Gets the expiry date of this cache entry , expressed in milliseconds since midnight , January 1 , 1970 UTC . 
Gets the expiry date of this cache entry , expressed as a string . 
Gets the date at which this cache entry was last modified , expressed as a string . 
Gets the entity tag of this cache entry . 
Gets the MIME type of this cache entry . 
Gets the value of the HTTP ` Location ' header with which this cache entry was received . 
Gets the encoding of this cache entry . 
Gets the value of the HTTP ` Content-Disposition ' header with which this cache entry was received . 
Gets the input stream to the content of this cache entry , to allow content to be read .  
Sets an input stream to the content of this cache entry . 
Sets the encoding of this cache entry . 
Gets the base directory in which the files used to store the contents of cache entries are placed .  
Gets whether the HTTP cache is disabled . 
Returns true if this is the only running transaction . 
Gets the cache entry for the specified URL , or null if none is found . 
Adds a cache entry to the HTTP cache for the specicifed URL . 
Returns the host name of the server requesting the certificate . 
Returns the port number of the server requesting the certificate . 
Gets the singleton CookieManager instance . 
Sets a cookie for the given URL . 
Sets a cookie for the given URL . 
Gets the cookies for the given URL . 
Removes all session cookies , which are cookies without an expiration date . 
Removes all session cookies , which are cookies without an expiration date . 
Removes all cookies . 
Removes all cookies . 
Gets whether there are stored cookies . 
Removes all expired cookies . 
creates a singleton CookieSyncManager within a context @param context @return CookieSyncManager 
removes any SYNC_MESSAGE in the queue to break the sync loop @deprecated Calling stopSync is no longer useful as the WebView automatically syncs cookies . 
sets the WebView to search . 
Sets the Geolocation permission state for the supplied origin . 
Gets the singleton instance of this class . 
Gets the Geolocation permission state for the specified origin . 
Gets whether the prompt dialog should be suppressed . 
gets the localized error message resource for the given error code . 
gets the localized error message resource for the given error code . 
Returns the file extension or an empty string iff there is no extension . 
returns true if the given MIME type has an entry in the map . 
returns the MIME type for the given extension . 
returns true if the given extension has a registered MIME type . 
returns the registered extension for the given MIME type . 
gets the singleton instance of MimeTypeMap . 
Returns the input stream that contains the plugin content . 
Returns the length of the plugin content . 
Returns the HTTP response headers associated with the plugin content . 
Returns the HTTP status code for the response . 
Returns the list of plugins as a java.util.List . 
Adds a plugin to the list . 
Removes a plugin from the list . 
returns a custom embedded view to draw the plugin . 
returns a custom full-screen view to be displayed when the user requests a plugin display as full-screen . 
Returns the default ServiceWorkerController instance . 
Gets the settings for all service workers . 
Sets the client to capture service worker related callbacks . 
Gets the current setting for overriding the cache mode . 
Gets whether Service Workers support content URL access . 
Gets whether Service Workers support file access . 
Gets whether Service Workers are prohibited from loading any resources from the network . 
Returns the default TokenBinding service instance . 
sets the flag to control whether url intercept is enabled or disabled @param disabled true to disable the cache @deprecated This class was intended to be used by Gears . 
gets the state of the url intercept , enabled or disabled @return returns if it is disabled @deprecated This class was intended to be used by Gears . 
returns the current history item . 
gets the index of the current history item . 
gets the history item at the given index . 
gets the total size of the back/forward list . 
Returns file chooser mode . 
Returns an array of acceptable MIME types . 
Returns the title to use for this file selector , or null . 
Creates an intent that would start a file picker for file selection . 
returns an identifier for this history item . 
returns the url of this history item .  
returns the original url of this history item . 
returns the document title of this history item . 
returns the favicon of this history item or null if no favicon was found . 
Removes all the icons in the database . 
gets the global instance of WebIconDatabase . 
Returns the data of the message . 
Returns the ports that are sent with the message , or null if no port is sent . 
Sets a callback to receive message events on the main thread . 
Sets a callback to receive message events on the handler that is provided by the application . 
Gets the error code of the error . 
Gets the string describing the error . 
Gets the URL for which the resource request was made . 
Gets whether the request was made for the main frame . 
Gets whether the request was a result of a server-side redirect . 
Gets the method associated with the request , for example `` gets '' . 
Gets the headers associated with the request . 
Sets the resource response 's MIME type , for example `` text/html '' . 
Gets the resource response 's MIME type . 
Sets the resource response 's encoding , for example `` UTF-8 '' . 
Gets the resource response 's encoding . 
Sets the resource response 's status code and reason phrase . 
Gets the resource response 's status code . 
Gets the description of the resource response 's status code . 
Sets the headers for the resource response . 
Gets the headers for the resource response . 
Sets the input stream that provides the resource response 's data . 
Gets the input stream that provides the resource response 's data . 
Gets whether dumping the navigation cache is enabled . 
Sets whether the WebView should support zooming using its on-screen zoom controls and gestures . 
Gets whether the WebView supports zoom . 
Sets whether the WebView requires a user gesture to play media . 
Gets whether the WebView requires a user gesture to play media . 
Gets whether the zoom mechanisms built into WebView are being used . 
Sets whether the WebView should display on-screen zoom controls when using the built-in zoom mechanisms .  
Gets whether the WebView displays on-screen zoom controls when using the built-in zoom mechanisms . 
Gets whether this WebView supports file access . 
Gets whether this WebView supports content URL access . 
Sets whether the WebView loads pages in overview mode , that is , zooms out the content to fit on screen by width . 
Gets whether this WebView loads pages in overview mode . 
Sets whether the WebView will enable smooth transition while panning or zooming or while the window hosting the WebView does not have focus . 
Gets whether the WebView enables smooth transition while panning or zooming . 
Sets whether the WebView uses its background for over scroll background . 
Gets whether this WebView uses WebView 's background instead of internal pattern for over scroll background . 
Sets whether the WebView should save form data . 
Gets whether the WebView saves form data . 
Sets whether the WebView should save passwords . 
Gets whether the WebView saves passwords . 
Sets the text zoom of the page in percent . 
Gets the text zoom of the page in percent . 
Sets policy for third party cookies . 
Gets policy for third party cookies . 
Sets the text size of the page . 
Gets the text size of the page . 
Sets the default zoom density of the page .  
Gets the default zoom density of the page . 
Gets whether light touches are enabled . 
Sets the user-agent string using an integer code . 
Gets the user-agent as an integer code . 
Sets whether the WebView should enable support for the `` viewport '' HTML meta tag or should use a wide viewport . 
Gets whether the WebView supports the `` viewport '' HTML meta tag or will use a wide viewport . 
Sets whether the WebView whether supports multiple windows . 
Gets whether the WebView supports multiple windows . 
Sets the underlying layout algorithm . 
Gets the current layout algorithm . 
Sets the standard font family name . 
Gets the standard font family name . 
Sets the fixed font family name . 
Gets the fixed font family name . 
Sets the sans-serif font family name . 
Gets the sans-serif font family name . 
Sets the serif font family name . 
Gets the serif font family name . 
Sets the cursive font family name . 
Gets the cursive font family name . 
Sets the fantasy font family name . 
Gets the fantasy font family name . 
Sets the minimum font size . 
Gets the minimum font size . 
Sets the minimum logical font size . 
Gets the minimum logical font size . 
Sets the default font size . 
Gets the default font size . 
Sets the default fixed font size . 
Gets the default fixed font size . 
Sets whether the WebView should load image resources . 
Gets whether the WebView loads image resources . 
Gets whether the WebView does not load image resources from the network . 
Sets whether the WebView should not load resources from the network . 
Gets whether the WebView does not load any resources from the network . 
Sets whether JavaScript running in the context of a file scheme URL should be allowed to access content from any origin .  
Sets whether JavaScript running in the context of a file scheme URL should be allowed to access content from other file scheme URLs . 
Sets whether the WebView should enable plugins . 
Sets a custom path to plugins used by the WebView . 
Sets the path to where database storage API databases should be saved . 
Sets the path where the Geolocation databases should be saved . 
Sets whether the Application Caches API should be enabled . 
Sets the path to the Application Caches files . 
Sets the maximum size for the Application Cache content . 
Sets whether the database storage API is enabled .  
Sets whether the DOM storage API is enabled . 
Gets whether the DOM Storage APIs are enabled . 
Gets the path to where database storage API databases are saved . 
Gets whether the database storage API is enabled . 
Sets whether Geolocation is enabled .  
Gets whether JavaScript is enabled . 
Gets whether JavaScript running in the context of a file scheme URL can access content from any origin . 
Gets whether JavaScript running in the context of a file scheme URL can access content from other file scheme URLs . 
Gets whether plugins are enabled . 
Gets the current state regarding whether plugins are enabled . 
Gets the directory that contains the plugin libraries . 
Gets whether JavaScript can open windows automatically . 
Sets the default text encoding name to use when decoding html pages . 
Gets the default text encoding name . 
Sets the WebView 's user-agent string . 
Gets the WebView 's user-agent string . 
Returns the default User-Agent used by a WebView . 
Sets the priority of the Render thread . 
Gets the current setting for overriding the cache mode . 
Gets the current behavior of the WebView with regard to loading insecure content from a secure origin . 
Sets whether to use a video overlay for embedded encrypted video .  
Gets whether a video overlay will be used for embedded encrypted video . 
Sets whether this WebView should raster tiles when it is offscreen but attached to a window . 
Gets whether this WebView should raster tiles when it is offscreen but attached to a window . 
Gets the action mode menu items that are disabled , expressed in an integer field flag . 
Gets the quota for this origin , for the Web SQL Database API , in bytes . 
Gets the total amount of storage currently being used by this origin , for all JavaScript storage APIs , in bytes . 
Gets the origins currently using either the Application Cache or Web SQL Database APIs . 
Gets the amount of storage currently being used by both the Application Cache and Web SQL Database APIs by the given origin . 
Gets the storage quota for the Web SQL Database API for the given origin . 
Sets the storage quota for the Web SQL Database API for the given origin . 
Gets the singleton instance of this class . 
removes any SYNC_MESSAGE in the queue to break the sync loop 
Sets the WebView to the transportation object . 
Gets the WebView object . 
Gets the type of the hit test result .  
Gets additional type-dependant information about the result .  
Gets whether horizontal scrollbar has overlay style . 
Gets whether vertical scrollbar has overlay style . 
Sets the SSL certificate for the main top-level page . 
Sets a username and password pair for the specified host . 
Gets whether this WebView has a back history item . 
Gets whether this WebView has a forward history item . 
Gets whether the page can go back or forward the given number of steps . 
Gets whether private browsing is enabled in this WebView . 
Gets a new picture that captures the current contents of this WebView . 
Creates a PrintDocumentAdapter that provides the content of this Webview for printing .   
Gets the current scale of this WebView . 
Sets the initial scale for this WebView . 
Gets a HitTestResult based on the current cursor node . 
Gets the URL for the current page . 
Gets the original URL for the current page . 
Gets the title for the current page . 
Gets the favicon for the current page . 
Gets the touch icon URL for the apple-touch-icon <link> element , or a URL on this site 's server pointing to the standard location of a touch icon .  
Gets the progress for the current page . 
Gets the height of the HTML content . 
Gets the width of the HTML content . 
Removes the autocomplete popup from the currently focused form field , if present . 
Gets the WebBackForwardList for this WebView . 
Gets the first substring consisting of the address of a physical location . 
Sets the WebViewClient that will receive various notifications and requests . 
Sets the chrome handler . 
Sets the Picture listener . 
Removes a previously injected Java object from this WebView .  
Creates a message channel to communicate with JS and returns the message ports that represent the endpoints of this message channel . 
Gets the WebSettings object used to control the settings for this WebView . 
Gets the list of currently loaded plugins .  
Gets the zoom controls for this WebView , as a separate View . 
Gets whether this WebView can be zoomed in . 
Gets whether this WebView can be zoomed out . 
Gets the WebViewProvider . 
Gets whether there are any saved username/password pairs for web forms . 
Gets whether there are any saved credentials for HTTP authentication . 
Gets whether there is any saved data for web forms . 
Returns true if the WebView trace tag is enabled and false otherwise . 
Returns the application which is embedding the WebView . 
Returns true if the signatures match , false otherwise 
Gets the singleton GeolocationPermissions instance for this WebView implementation . 
Gets the singleton CookieManager instance for this WebView implementation . 
Gets the TokenBindingService instance for this WebView implementation . 
Gets the ServiceWorkerController instance for this WebView implementation . 
Gets the singleton WebIconDatabase instance for this WebView implementation . 
Gets the singleton WebStorage instance for this WebView implementation . 
Gets the singleton WebViewDatabase instance for this WebView implementation . 
Creates and returns the WebView . 
Gets the WebView . 
Returns the number of items currently selected . 
Returns the checked state of the specified position . 
Returns the currently checked item . 
Returns the sets of checked items in the list . 
Returns the sets of checked items ids . 
Sets the checked state of the specified position . 
sets whether or not the fast scroller should always be shown in place of the standard scroll bars . 
Returns true if the fast scroller is sets to always show on this view . 
Returns true if the fast scroller is enabled . 
Returns the current state of the fast scroll feature . 
sets the listener that will receive notifications every time the list scrolls . 
Sets the initial value for the text filter . 
Returns the list 's text filter , if available . 
gets a view and have it show the data associated with the specified position . 
sets a Drawable that should be used to highlight the currently selected item . 
Sets a scale factor for the fling velocity . 
Returns the number of header views in the list . 
Returns the number of footer views in the list . 
Find the row closest to y . 
Find the row closest to y . 
Removes the filter window 
returns an InputConnection for editing of the filter text . 
Creates the window for the text filter and populates it with an EditText field ; @param animateEntrance true if the window should appear with an animation 
Returns if the ListView currently has a text filter . 
Returns the current transcript mode . 
Sets up this AbsListView to use a remote views adapter which connects to a RemoteViewsService through the specified intent . 
Sets up the onClickHandler to be used by the RemoteViewsAdapter when inflating RemoteViews @param handler The OnClickHandler to use when inflating RemoteViews .  
Sets the recycler listener to be notified whenever a View is sets aside in the recycler for later reuse . 
gets the view corresponding to the specified position . 
Removes cached transient state views that no longer have transient state . 
Returns the height of the view for the specified position . 
Sets the selected item and positions the selection y pixels from the top edge of the ListView . 
Sets the thumb that will be drawn at the end of the progress meter within the SeekBar . 
returns the drawable used to represent the scroll thumb - the component that the user can drag back and forth indicating the current value by its position . 
Returns the tint applied to the thumb drawable , if specified . 
Returns the blending mode used to apply the tint to the thumb drawable , if specified . 
Sets the thumb offset that allows the thumb to extend out of the range of the track . 
Returns whether the track should be split by the thumb . 
Sets the drawable displayed at each progress position , e.g. at each possible thumb position . 
Returns the tint applied to the tick mark drawable , if specified . 
Returns the blending mode used to apply the tint to the tick mark drawable , if specified . 
Sets the amount of progress changed via the arrow keys . 
Returns the amount of progress changed via the arrow keys . 
Sets the expandable and cellsUsed fields of LayoutParams . 
sets the icon to use for the overflow button . 
returns the current drawable used as the overflow icon . 
Returns the Menu object that this ActionMenuView is currently presenting . 
Returns the current menu or null if one has not yet been configured . 
Gets the data model backed by the contents of the provided file with historical data . 
Sets an intent for which to choose a activity . 
Gets the intent for which a activity is being chosen . 
Gets the number of activities that can handle the intent . 
Gets an activity at a given index . 
Gets the index of a the given activity . 
Sets the listener for choosing an activity . 
Gets the default activity , The default activity is defined as the one with highest rank i.e. the first one in the list of activities that can handle the intent . 
Sets the default activity . 
Sets the sorter for ordering activities based on historical data and an intent . 
Sets the maximal size of the historical data . 
Gets the history max size . 
Gets the history size . 
Adds a historical record . 
Sets the background for the button that expands the activity overflow list . 
Sets the content description for the button that expands the activity overflow list . 
sets the provider hosting this view , if applicable . 
Gets whether the popup window with activities is shown . 
Sets a listener to receive a callback when the popup is dismissed . 
Sets the initial count of items shown in the activities popup i.e. the items before the popup is expanded . 
Sets a content description of the default action button . 
Gets the list popup window which is lazily initialized . 
gets the data item associated with the specified position in the data sets . 
gets the row id associated with the specified position in the list . 
gets a View that displays the data at the specified position in the data sets .  
Returns the adapter currently associated with this widget . 
Sets the adapter that provides the data and the views to represent the data in this widget . 
Returns the position within the adapter 's data sets for the view , where view is a an adapter item or a descendant of an adapter item . 
Returns the position within the adapter 's data sets for the first item displayed on screen . 
Returns the position within the adapter 's data sets for the last item displayed on screen . 
Sets the currently selected item . 
Sets the view to show if the adapter is empty 
Gets the data associated with the specified position in the list . 
Sets which child view will be displayed . 
Returns the index of the currently displayed child view . 
gets the view at this index relative to the current window 's start @param relativeIndex Position relative to the current window 's start @return View at this index , null if the index is outside the bounds 
Returns the View corresponding to the currently displayed child . 
Returns the current animation used to animate a View that enters the screen . 
Returns the current animation used to animate a View that exits the screen . 
Sets up this AdapterViewAnimator to use a remote views adapter which connects to a RemoteViewsService through the specified intent . 
Sets up the onClickHandler to be used by the RemoteViewsAdapter when inflating RemoteViews @param handler The OnClickHandler to use when inflating RemoteViews .  
Returns the flip interval , in milliseconds . 
Returns true if the child views are flipping . 
Returns the section array constructed from the alphabet provided in the constructor . 
Sets a new cursor as the data sets and resets the cache of indices . 
Returns the section index for a given position in the list by querying the item and comparing it with all items in the section array . 
Adds the specified object at the end of the array . 
Adds the specified Collection at the end of the array . 
Adds the specified items at the end of the array . 
Removes the specified object from the array . 
removes all elements from the list . 
Returns the context associated with this array adapter . 
Returns the position of the specified item in the array . 
Sets the layout resource to creates the drop down views . 
Creates a new ArrayAdapter from external resources . 
Sets the optional hint text that is displayed at the bottom of the the matching list . 
Gets the optional hint text displayed at the bottom of the the matching list . 
Returns the current width for the auto-complete drop down list . 
Sets the current width for the auto-complete drop down list . 
Returns the current height for the auto-complete drop down list . 
Sets the current height for the auto-complete drop down list . 
Returns the id for the view that the auto-complete drop down list is anchored to . 
Sets the view to which the auto-complete drop down list should anchor . 
Gets the background of the auto-complete drop-down list . 
Sets the background of the auto-complete drop-down list . 
Sets the background of the auto-complete drop-down list . 
Sets the vertical offset used for the auto-complete drop-down list . 
Gets the vertical offset used for the auto-complete drop-down list . 
Sets the horizontal offset used for the auto-complete drop-down list . 
Gets the horizontal offset used for the auto-complete drop-down list . 
Sets the animation style of the auto-complete drop-down list . sets to -1 for the default animation , 0 for no animation , or a resource identifier for an explicit animation . 
Returns the animation style that is used when the drop-down list appears and disappears @return the animation style that is used when the drop-down list appears and disappears Pending API council approval 
Sets whether the drop-down is dismissed when a suggestion is clicked . 
Returns the number of characters the user must type before the drop down list is shown . 
Sets the listener that will be notified when the user clicks an item in the drop down list . 
Sets the listener that will be notified when the user selects an item in the drop down list . 
Returns the listener that is notified whenever the user clicks an item in the drop down list . 
Returns the listener that is notified whenever the user selects an item in the drop down list . 
Returns the listener that is notified whenever the user clicks an item in the drop down list . 
Returns the listener that is notified whenever the user selects an item in the drop down list . 
sets a listener that will be invoked whenever the AutoCompleteTextView 's list of completions is dismissed . 
Returns a filterable list adapter used for auto completion . 
sets the position of the dropdown view selection . 
gets the position of the dropdown view selection , if there is one . 
Sets the validator used to perform text validation . 
Sets the number of weeks to be shown . 
Gets the number of weeks to be shown . 
Sets the background color for the selected week . 
Gets the background color for the selected week . 
Sets the color for the dates of the focused month . 
Gets the color for the dates in the focused month . 
Sets the color for the dates of a not focused month . 
Gets the color for the dates in a not focused month . 
Sets the color for the week numbers . 
Gets the color for the week numbers . 
Sets the color for the separator line between weeks . 
Gets the color for the separator line between weeks . 
Sets the drawable for the vertical bar shown at the beginning and at the end of the selected date . 
Sets the drawable for the vertical bar shown at the beginning and at the end of the selected date . 
Gets the drawable for the vertical bar shown at the beginning and at the end of the selected date . 
Sets the text appearance for the week day abbreviation of the calendar header . 
Gets the text appearance for the week day abbreviation of the calendar header . 
Sets the text appearance for the calendar dates . 
Gets the text appearance for the calendar dates . 
Sets whether to show the week number . 
Gets whether to show the week number . 
Gets the first day of week . 
Sets the first day of week . 
Sets the listener to be notified upon selected date change . 
Sets the current locale . 
Gets a calendar for locale bootstrapped with the value of a given calendar . 
Creates a new adapter if necessary and sets up its parameters . 
Sets up the strings to be used by the header . 
Sets all the required fields for the list view . 
Sets the month displayed at the top of this view based on time . 
Sets up the runnable with a short delay in case the scroll state immediately changes again . 
sets up the gesture detector and selected time 
Returns the month of the first day in this week . 
Returns the month of the last day in this week @return The month the last day of this view is in 
Returns the first day in this view . 
Sets the checked state of this view . 
Sets the check mark to the drawable with the specified resource ID . 
sets the check mark to the specified drawable . 
Returns the tint applied to the check mark drawable , if specified . 
Returns the blending mode used to apply the tint to the check mark drawable , if specified . 
Gets the checkmark drawable @return The drawable use to represent the checkmark , if any . 
sets this view to count down to the base instead of counting up from it . 
sets the time that the count-up timer is in reference to . 
Sets the format string used for display . 
Sets the listener to be called when the chronometer changes . 
Sets a drawable as the compound button image given its resource identifier . 
Sets a drawable as the compound button image . 
Returns the cursor . 
Returns the query filter provider used for filtering . 
Sets the query filter provider used to filter the current Cursor . 
Gets the cursor helper for the children in the given group . 
Gets the Cursor for the children at the given group . 
Sets the group Cursor . 
Sets the children Cursor for a particular group . 
Sets the callback that indicates the current date is valid . 
Sets the first day of week . 
Gets the first day of week . 
Returns whether the spinners are shown . 
Sets whether the spinners are shown . 
Sets the current locale . 
Gets a calendar for locale bootstrapped with the value of a given calendar . 
Sets the IME options for a spinner based on its ordering . 
returns the date difference for the two times in a given timezone . 
Sets the first day of the week . 
Sets the selected day . 
Sets the listener to call when the user selects a day . 
Sets the currently selected date to the specified timestamp . 
Sets the currently selected date to the specified timestamp . 
Sets the listener to call when the user selects a day . 
Gets the position of the view that is most prominently displayed within the list view . 
Returns the focus state in the drop down . 
Returns the focus state in the drop down . 
Returns the focus state in the drop down . 
sets the size of this edge effect in pixels . 
sets the color of this edge effect in argb . 
returns the color of this edge effect in argb . 
Returns the X offset to make the pointy top of the error point at the middle of the error icon . 
Returns the Y offset to make the pointy top of the error point at the bottom of the error icon . 
creates new SpellCheckSpans on the modified region . 
returns true if the operation was successfully performed . 
returns true if the operation was successfully performed . 
gets the minimum range of paragraphs that contains startOffset and endOffset . 
Returns false when the position is in the empty space of left/right of text . 
returns clamped position for the drawable . 
Returns the suggestion spans that cover the current cursor position . 
Gets the SuggestionInfo list that contains suggestion information at the current cursor position . 
returns the clamped horizontal position for the first cursor . 
Returns true iff the edit was handled , either because it should be ignored or because this function created an undo operation for it . 
Adds `` PROCESS_TEXT '' menu items to the specified menu . 
Adds `` PROCESS_TEXT '' accessibility actions to the specified accessibility node info . 
Gets the number of groups . 
Gets the number of children in a specified group . 
Gets the data associated with the given group . 
Gets the data associated with the given child within the given group . 
Gets the ID for the group at the given position .  
Gets the ID for the given child within the given group .  
Gets a View that displays the given group . 
Gets a View that displays the data for the given child within the given group . 
sets the maximum number of groups that can be expanded at any given time 
returns true if the application tag in the AndroidManifest has sets `` supportRtl '' to true 
Gets the indicator for the item at the given position . 
Sets the drawable that will be drawn adjacent to every child in the list . 
Sets the adapter that provides data to this view . 
Gets the adapter that provides data to this view . 
Gets the ID of the currently selected group or child . 
Sets the selection to the specified group . 
Sets the selection to the specified child . 
Gets the type of a packed position .  
Gets the group position from a packed position .  
Returns the packed position representation of a child 's position . 
Returns the packed position representation of a group 's position .  
Gets the ID of the group or child at the given position . 
Sets the indicator to be drawn next to a child . 
Sets the drawing bounds for the child indicator . 
Sets the relative drawing bounds for the child indicator . 
Sets the indicator to be drawn next to a group . 
Removes this FastScroller overlay from the host view . 
Creates a view into which preview text can be placed . 
Returns whether a coordinate is inside the scroller 's activation area . 
Returns an animator for the view 's scaleX value . 
Returns an animator for the view 's alpha value . 
Returns an animator for the view 's bounds . 
Returns a filter that can be used to constrain data with a filtering pattern . 
Returns the popup to which this listener is forwarding events . 
Sets whether to consider all children , or just those in the VISIBLE or INVISIBLE state , when measuring . 
Sets how long the transition animation should run when a child view changes position . 
Sets the spacing between items in a Gallery @param spacing The spacing in pixels between items in the Gallery @attr ref android.R.styleable #Gallery _ spacing 
Sets the alpha of items that are not selected in the Gallery . 
Creates and positions all views for this Gallery . 
Returns the current orientation . 
Returns the current number of rows . 
Returns the current number of columns . 
Returns whether or not this GridLayout will allocate default margins when no corresponding layout parameters are defined . 
Returns the alignment mode . 
Sets the alignment mode to be used for all of the alignments between the children of this container . 
Returns whether or not row boundaries are ordered by their grid indices . 
Returns whether or not column boundaries are ordered by their grid indices . 
returns the printer that will log diagnostics from this layout . 
sets the printer that will log diagnostics from this layout . 
adds values computed by alignment - taking the max of all alignments in each span 
creates a compact array of keys or values using the supplied index . 
Returns an alignment value . 
Returns the size of the view specified by this alignment . 
Sets up this AbsListView to use a remote views adapter which connects to a RemoteViewsService through the specified intent . 
Sets the data behind this GridView . 
sets the gravity for this grid . 
Returns the amount of horizontal spacing currently used between each item in the grid . 
Returns the requested amount of horizontal spacing between each item in the grid . 
Returns the amount of vertical spacing between each item in the grid . 
sets the width of columns in the grid . 
returns the width of a column in the grid . 
returns the requested width of a column in the grid . 
sets the number of columns in the grid @param numColumns The desired number of columns . 
gets the number of columns in the grid . 
sets whether arrow scrolling will animate its transition . 
sets this to true if you want the ImageView to adjust its bounds to preserve the aspect ratio of its drawable . 
returns the view 's drawable , or null if no drawable has been assigned . 
Sets a drawable as the content of this ImageView . 
Sets the content of this ImageView to the specified Uri . 
Sets a drawable as the content of this ImageView . 
Sets the content of this ImageView to the specified Icon . 
Sets a Bitmap as the content of this ImageView . 
returns the current scale type in use by this ImageView . 
returns the view 's optional matrix . 
returns whether this ImageView crops to padding . 
Sets whether this ImageView will crop to padding . 
returns the offset of the widget 's text baseline from the widget 's top boundary . 
sets the offset of the widget 's text baseline from the widget 's top boundary . 
sets whether to sets the baseline of this view to the bottom of the view . 
returns whether this view 's baseline will be considered the bottom of the view . 
sets a tinting option for the image . 
sets a tinting option for the image . 
Returns the active color filter for this ImageView . 
Returns the alpha that will be applied to the drawable of this ImageView . 
Sets the alpha value that should be applied to the image . 
Sets the alpha value that should be applied to the image . 
sets a drawable to be used as a divider between items . 
sets padding displayed on both ends of dividers . 
gets the width of the current divider drawable . 
Returns the view at the specified index . 
Returns the virtual number of children . 
Returns the desired weights sum . 
Returns the number of children to skip after measuring/laying out the specified child . 
returns the location offset of the specified child . 
returns the size offset of the next sibling of the specified child . 
Returns the current orientation . 
Returns the current gravity .  
Returns true if the item at the specified position is not a separator . 
Sets the adapter that provides the data and the views to represent the data in this popup window . 
sets where the optional prompt view should appear . 
sets whether this window should be modal when shown . 
Returns whether the popup window will be modal when shown . 
Sets whether the drop-down should remain visible under certain conditions . 
Sets the operating mode for the soft input area .  
Sets a drawable to use as the list item selector . 
Sets a drawable to be the background for the popup window . 
sets an animation style to use when the popup window is shown or dismissed . 
Returns the animation style that will be used when the popup window is shown or dismissed . 
Returns the view that will be used to anchor this popup . 
Sets the popup 's anchor view . 
sets the horizontal offset of this popup from its anchor view in pixels . 
sets the vertical offset of this popup from its anchor view in pixels . 
sets the gravity of the dropdown list . 
Sets the width of the popup window in pixels . 
Sets the width of the popup window by the size of its content . 
Sets the height of the popup window in pixels . 
sets the layout type for this popup window .  
Sets a listener to receive events when a list item is clicked . 
Sets a listener to receive events when a list item is selected . 
sets a view to act as a user prompt for this popup window . 
sets a listener to receive a callback when the popup is dismissed . 
sets the selected position of the list . 
Returns -1 when the content already exists . 
adds a fixed view to appear at the top of the list . 
adds a fixed view to appear at the top of the list . 
Removes a previously-added header view . 
adds a fixed view to appear at the bottom of the list . 
adds a fixed view to appear at the bottom of the list . 
Removes a previously-added footer view . 
Returns the adapter currently in use in this ListView . 
Sets up this AbsListView to use a remote views adapter which connects to a RemoteViewsService through the specified intent . 
Sets the data behind this ListView . 
Sets the currently selected item . 
Returns the drawable that will be drawn between each item in the list . 
Sets the drawable that will be drawn between each item in the list . 
Sets the height of the divider that will be drawn between each item in the list . 
Sets the drawable that will be drawn above all other list content . 
Sets the drawable that will be drawn below all other list content . 
Returns the sets of checked items ids . 
sets the view that acts as the anchor for the control view . 
creates the view that holds the widgets that control playback . 
removes the controller from the screen . 
gets the audio session id for the player used by this VideoView . 
sets whether this window is touch modal or if outside touches will be sent to other windows behind it . 
Sets the Tokenizer that will be used to determine the relevant range of the text where the user is typing . 
Returns the start of the token that ends at offset cursor within text . 
Sets the listener to be notified on change of the current value . 
sets listener to be notified for scroll state changes . 
sets the formatter to be used for formatting the current value . 
sets the current value for the number picker . 
Gets whether the selector wheel wraps when reaching the min/max value . 
Sets the speed at which the numbers be incremented and decremented when the up and down buttons are long pressed respectively . 
Returns the value of the picker . 
Returns the min value of the picker . 
Sets the min value of the picker . 
Returns the max value of the picker . 
Sets the max value of the picker . 
Gets the values to be displayed instead of string values . 
Sets the values to be displayed . 
Sets the current value of this NumberPicker . 
Removes the command for changing the current value by one . 
Removes the command for beginning an edit of the current value via IME . 
Removes all pending callback from the message queue . 
Returns whether the scroller has finished scrolling . 
Returns the current X offset in the scroll . 
Returns the current Y offset in the scroll . 
Returns the absolute value of the current velocity . 
Returns the start X offset in the scroll . 
Returns the start Y offset in the scroll . 
Returns where the scroll will end . 
Returns where the scroll will end . 
Returns how long the scroll event will take , in milliseconds . 
Returns whether the current Scroller is currently returning to a valid position . 
Returns the time elapsed since the beginning of the scrolling .  
gets a signed deceleration that will reduce the velocity . 
Returns the duration , expressed in milliseconds 
Returns true if update has been done and false if animation duration has been reached . 
Sets the gravity used to align the popup window to its anchor view . 
Sets a listener that will be notified when the user selects an item from the menu . 
Sets a listener that will be notified when this menu is dismissed . 
Sets the enter transition to be used when the popup window is shown . 
Returns the enter transition to be used when the popup window is shown . 
Sets the exit transition to be used when the popup window is dismissed . 
Returns the exit transition to be used when the popup window is dismissed . 
Sets the bounds used as the epicenter of the enter and exit transitions .  
returns the drawable used as the popup window 's background . 
returns the animation style to use the popup appears and disappears @return the animation style to use the popup appears and disappears 
sets the flag on popup to ignore cheek press events ; by default this flag is sets to false which means the popup will not ignore cheek press dispatch events . 
sets to -1 for the default animation , 0 for no animation , or a resource identifier for an explicit animation . 
returns the view used as the content of the popup window . 
sets a callback for all touch events being dispatched to the popup window . 
Sets the operating mode for the soft input area .  
sets the layout type for this window .  
Returns the layout type for this window . 
sets whether this window is touch modal or if outside touches will be sent to other windows behind it .  
Returns the popup 's requested height . 
Sets the popup 's requested height . 
Returns the popup 's requested width . 
Sets the popup 's requested width . 
Sets whether the popup window should overlap its anchor view when displayed as a drop-down . 
Returns whether the popup window should overlap its anchor view when displayed as a drop-down . 
Returns the maximum height that is available for the popup to be completely shown . 
Returns the maximum height that is available for the popup to be completely shown . 
Returns the maximum height that is available for the popup to be completely shown , optionally ignoring any bottom decorations such as the input method . 
Returns the window-relative epicenter bounds to be used by enter and exit transitions . 
Removes the popup from the window manager and tears down the supporting view hierarchy , if necessary . 
Sets the listener to be called when the window is dismissed . 
gets the drawable used to draw the progress bar in indeterminate mode . 
Returns the blending mode used to apply the tint to the indeterminate drawable , if specified . 
gets the drawable used to draw the progress bar in progress mode . 
Returns the tint applied to the progress drawable , if specified . 
Returns the blending mode used to apply the tint to the progress drawable , if specified . 
Returns the tint applied to the progress background , if specified . 
Returns the tint applied to the secondary progress drawable , if specified . 
Returns the blending mode used to apply the tint to the secondary progress drawable , if specified . 
Returns the drawable to which a tint or tint mode should be applied . 
Sets the visual state of a progress indicator . 
Sets the current progress to the specified value . 
Sets the current progress to the specified value , optionally animating the visual position between the current and target values . 
sets the current secondary progress to the specified value . 
gets the progress bar 's current level of progress . returns 0 when the progress bar is in indeterminate mode . 
gets the progress bar 's current level of secondary progress . returns 0 when the progress bar is in indeterminate mode . 
returns the upper limit of this progress bar 's range . 
sets the range of the progress bar to 0 ... <tt> max </tt> . 
Sets the acceleration curve for the indeterminate animation . 
Sets the acceleration curve for the indeterminate animation . 
Gets the acceleration curve type for the indeterminate animation . 
sets which mimetype should be prioritized in the QuickContacts UI . 
sets a list of specific MIME-types to exclude and not display . 
Sets the current hour in 24-hour time . 
Sets the current hour . 
Returns the current hour in 24-hour time . 
Returns minutes in 0-59 range 
Sets whether the picker is showing AM or PM hours . 
Returns the difference in degrees between two values along a circle . 
Sets the selection to the radio button whose identifier is passed in parameter . 
Returns the identifier of the selected radio button in this group . 
Sets the listener to be called when the rating changes . 
Sets the number of stars to show . 
Returns the number of stars shown . 
Gets the step size of this rating bar . 
gets a measure spec that accounts for all of the constraints on this view . 
Adds a layout rule to be interpreted by the RelativeLayout . 
Adds a layout rule to be interpreted by the RelativeLayout . 
Removes a layout rule to be interpreted by the RelativeLayout . 
Returns the layout rule associated with a specific verb . 
Adds a view to the graph . 
Returns the layout id of the root layout associated with this RemoteViews . 
adds an action to be executed on the remote side when apply is called . 
Creates a simple Adapter for the viewId specified .      
Returns the number of actions in this RemoteViews .  
Adds a new reference to a RemoteViewsFrameLayout returned by the adapter . 
Removes all references to all RemoteViewsFrameLayouts returned by the adapter . 
Creates a default loading view . 
Returns the next index to load 
Returns a sorted array of all integers between lower and upper . 
Sets the layout resource of the item views . 
Sets the layout resource of the drop down views . 
Returns whether the scroller has finished scrolling . 
Returns how long the scroll event will take , in milliseconds . 
Returns the current X offset in the scroll . 
Returns the current Y offset in the scroll . 
Returns the current velocity . 
Returns the start X offset in the scroll . 
Returns the start Y offset in the scroll . 
Returns where the scroll will end . 
Returns where the scroll will end . 
Returns the time elapsed since the beginning of the scrolling . 
sets whether arrow scrolling will animate its transition . 
returns false otherwise . 
Sets the SearchableInfo for this SearchView . 
Sets the APP_DATA for legacy SearchDialog use . 
Sets the IME options on the query text field . 
Returns the IME options sets on the query text field . 
Sets the input type on the query text field . 
Returns the input type sets on the query text field . 
Sets a listener for user actions within the SearchView . 
Sets a listener to inform when the user closes the SearchView . 
Sets a listener to inform when the focus of the query text field changes . 
Sets a listener to inform when a suggestion is focused or clicked . 
Sets a listener to inform when the search button is pressed . 
Returns the query string currently in the text field . 
Sets a query string in the text field and optionally submits the query as well . 
Sets the hint text to display in the query text field . 
Returns the hint text that will be displayed in the query text field . 
Sets the default or resting state of the search field . 
Returns the default iconified state of the search field . 
Returns the current iconified state of the SearchView . 
Returns whether the submit button is enabled when necessary or never displayed . 
Returns whether query refinement is enabled for all items or only specific ones . 
Returns the adapter used for suggestions , if any . 
Gets the specified maximum width in pixels , if sets . Returns zero if no maximum width was specified . 
Sets the text in the query box , without updating the suggestions . 
creates and returns an Intent that can launch the voice search activity for web search . 
creates and returns an Intent that can launch the voice search activity , perform a specific voice transcription , and forward the results to the searchable activity . 
Returns true if the text field is empty , or contains only whitespace . 
gets minimum width of the search view text entry area . 
Returns an array of objects representing sections of the list . 
Sets a listener to receive notifications of changes to the SeekBar 's progress level . 
Sets a listener to be notified when a share target has been selected . 
Sets the file name of a file for persisting the share history which history will be used for ordering share targets . sets to null if share history should not be persisted between sessions . 
Sets an intent with information about the share action . 
sets the activity chooser policy of the model backed by the current share history file if needed which is if there is a registered callback . 
Sets the layout resource to creates the drop down views . 
Sets the binder used to bind data to views . 
Sets the binder used to bind data to views . 
returns the index of the column used to gets a String representation of the Cursor . 
Returns the converter used to convert the filtering Cursor into a String . 
Sets the converter used to convert the filtering Cursor into a String . 
Returns a CharSequence representation of the specified Cursor as defined by the current CursorToStringConverter . 
creates a map from an array of strings to an array of column-id integers in cursor c. If c is null , the array will be discarded . 
Returns a CharSequence representing the specified Cursor . 
Sets the binder used to bind data to views . 
Sets up the text and style properties for painting . 
Sets the selected day . 
Sets the first day of the week . 
Sets all the parameters for displaying this week . 
Returns the day of the month or -1 if the position was n't in a valid day . 
Sets the listener that receives a notification when the drawer becomes open . 
Sets the listener that receives a notification when the drawer becomes close . 
Sets the listener that receives a notification when the drawer starts or ends a scroll . 
Returns the handle of the drawer . 
Returns the content of the drawer . 
Returns false if not , for instance when spell checking has been disabled in settings . 
sets the background drawable for the spinner 's popup window of choices . 
sets the background drawable for the spinner 's popup window of choices . 
gets the background drawable for the spinner 's popup window of choices . 
sets a vertical offset in pixels for the spinner 's popup window of choices . 
gets the configured vertical offset in pixels for the spinner 's popup window of choices . 
sets a horizontal offset in pixels for the spinner 's popup window of choices . 
gets the configured horizontal offset in pixels for the spinner 's popup window of choices . 
sets the width of the spinner 's popup window of choices in pixels . 
gets the configured width of the spinner 's popup window of choices in pixels . 
Creates and positions all views for this Spinner . 
Sets the prompt to display when the dialog is shown . 
Sets the prompt to display when the dialog is shown . 
sets hint text to be displayed to the user . 
Returns the current query refinement preference . 
Sets the drawable in an image view , makes sure the view is only visible if there is a drawable . 
Gets the text to show in the query field when a suggestion is selected . 
Gets a drawable given a value provided by a suggestion provider . 
Gets a drawable by URI , without using the cache . 
Gets the left-hand side icon that will be used for the current suggestion if the suggestion contains an icon column but no icon or a broken icon . 
Gets the activity or application icon for an activity . 
Gets the activity or application icon for an activity . 
Gets the value of a string column by name . 
Sets the switch text color , size , style , hint color , and highlight color from the specified TextAppearance resource . 
Sets the typeface and style in which the text should be displayed on the switch , and turns on the fake bold and italic bits in the Paint if the Typeface that you provided does not have all the bits in the style that you specified . 
Sets the typeface in which the text should be displayed on the switch . 
sets the amount of horizontal padding between the switch and the associated text . 
gets the amount of horizontal padding between the switch and the associated text . 
sets the minimum width of the switch in pixels . 
gets the minimum width of the switch in pixels . 
sets the horizontal padding around the text drawn on the switch itself . 
gets the horizontal padding around the text drawn on the switch itself . 
sets the drawable used for the track that the switch slides within . 
sets the drawable used for the track that the switch slides within . 
gets the drawable used for the track that the switch slides within . 
sets the drawable used for the switch `` thumb '' - the piece that the user can physically touch and drag along the track . 
sets the drawable used for the switch `` thumb '' - the piece that the user can physically touch and drag along the track . 
gets the drawable used for the switch `` thumb '' - the piece that the user can physically touch and drag along the track . 
Returns whether the track should be split by the thumb . 
Returns the text displayed when the button is in the checked state . 
Sets the text displayed when the button is in the checked state . 
Returns the text displayed when the button is not in the checked state . 
Sets the text displayed when the button is not in the checked state . 
Sets whether the on/off text should be displayed . 
adds a tab . 
Removes all tabs from the tab widget associated with this tab host . 
gets the FrameLayout which holds tab content 
gets the location of the TabWidget . 
returns the view for the indicator . 
returns the content view . 
Returns the collapsed state of the specified column . 
Returns whether the specified column is stretchable or not . 
Returns whether the specified column is shrinkable or not . 
Sets the width of all of the columns in this row . 
Returns the tab indicator view at the given index . 
Returns the number of tab indicator views . 
Sets the drawable to use as a divider between the tab indicators . 
Sets the drawable to use as a divider between the tab indicators . 
Sets the drawable to use as the left part of the strip below the tab indicators . 
Sets the drawable to use as the left part of the strip below the tab indicators . 
Sets the drawable to use as the right part of the strip below the tab indicators . 
Sets the drawable to use as the right part of the strip below the tab indicators . 
Sets the current tab . 
Sets the current tab and focuses the UI on it . 
Returns the formatting pattern used to display the date and/or time in 12-hour mode . 
Returns the formatting pattern used to display the date and/or time in 24-hour mode . 
Sets whether this clock should always track the current user and not the user of the current process .  
Sets the specified time zone to use in this clock . 
Returns the current format string .  
Returns a if not null , else returns b if not null , else returns c. 
Sets the text of the next view and switches to the next view . 
Sets the text of the text view that is currently showing . 
Sets the typeface and style in which the text should be displayed , and turns on the fake bold and italic bits in the Paint if the Typeface that you provided does not have all the bits in the style that you specified . 
returns the text the TextView is displaying . 
Returns the length , in characters , of the text managed by this TextView 
returns the text the TextView is displaying as an Editable object . 
Sets the key listener to be used with this TextView .  
Sets the transformation that is applied to the text that this TextView is displaying . 
Returns the top padding of the view , plus space for the top Drawable if any . 
Returns the bottom padding of the view , plus space for the bottom Drawable if any . 
Returns the left padding of the view , plus space for the left Drawable if any . 
Returns the right padding of the view , plus space for the right Drawable if any . 
Returns the start padding of the view , plus space for the start Drawable if any . 
Returns the end padding of the view , plus space for the end Drawable if any . 
Returns the extended top padding of the view , including both the top Drawable if any and any extra space to keep more than maxLines of text from showing . 
Returns the extended bottom padding of the view , including both the bottom Drawable if any and any extra space to keep more than maxLines of text from showing . 
Returns the total left padding of the view , including the left Drawable if any . 
Returns the total right padding of the view , including the right Drawable if any . 
Returns the total start padding of the view , including the start Drawable if any . 
Returns the total end padding of the view , including the end Drawable if any . 
Returns the total top padding of the view , including the top Drawable if any , the extra space to keep more than maxLines from showing , and the vertical offset for gravity , if any . 
Returns the total bottom padding of the view , including the bottom Drawable if any , the extra space to keep more than maxLines from showing , and the vertical offset for gravity , if any . 
Returns drawables for the left , top , right , and bottom borders . 
Returns drawables for the start , top , end , and bottom borders . 
Sets the size of the padding between the compound drawables and the text . 
Returns the padding between the compound drawables and the text . 
Returns the blending mode used to apply the tint to the compound drawables , if specified . 
Gets the autolink mask of the text .  
Sets the text appearance from the specified style resource .  
Sets the text color , size , style , hint color , and highlight color from the specified TextAppearance resource . 
sets the default text size to the given value , interpreted as `` scaled pixel '' units . 
sets the default text size to a given unit and value .  
Sets the extent by which text should be stretched horizontally . 
Sets the typeface and style in which the text should be displayed . 
sets the TextView 's elegant height metrics flag . 
Sets text letter-spacing . 
Returns the font feature settings . 
Sets the break strategy for breaking paragraphs into lines . 
Sets the hyphenation frequency . 
Sets font feature settings . 
Sets the text color . 
returns the current color selected for normal text . 
Sets the color used to display the selection highlight . 
Sets whether the soft input method will be made visible when this TextView gets focused . 
Returns whether the soft input method will be made visible when this TextView gets focused . 
Gets the radius of the shadow layer . 
Sets the autolink mask of the text .  
Sets the color of the hint text . 
returns the current color selected to paint the hint text . 
Sets the color of links in the text . 
Sets the color of links in the text . 
Sets the horizontal alignment of the text and the vertical gravity that will be used when there is extra space in the TextView beyond what is required for the text itself . 
Returns the horizontal and vertical alignment of this TextView . 
Sets flags on the Paint being used to display the text and reflows the text if they are different from the old flags . 
Sets whether the text should be allowed to be wider than the View is . 
Returns whether the text is allowed to be wider than the View is . 
Sets line spacing for this TextView . 
Gets the line spacing multiplier @return the value by which each line 's height is multiplied to gets its actual height . 
Gets the line spacing extra space @return the extra space that is added to the height of each lines of this TextView . 
returns whether this text view is including its entire text contents in frozen icicles . 
Sets the Factory used to creates new Editables . 
Sets the Factory used to creates new Spannables . 
Sets the string value of the TextView .  
Sets the TextView to display the specified slice of the specified char array . 
Sets the text to be displayed when the text of the TextView is empty . 
Sets the text to be displayed when the text of the TextView is empty , from a resource . 
Returns the hint that is displayed when the text of the TextView is empty . 
Removes the suggestion spans . 
gets the type of the editable content . 
gets the type of the IME editor . 
sets a special listener to be called when an action is performed on the text view . 
gets the private type of the content . 
Sets the right-hand compound drawable of the TextView to the `` error '' icon and sets an error message that will be displayed in a popup when the TextView has focus . 
Sets the right-hand compound drawable of the TextView to the specified icon and sets an error message that will be displayed in a popup when the TextView has focus . 
Sets the list of input filters that will be used if the buffer is Editable . 
Sets the list of input filters on the specified Editable , and includes mInput in the list if it is an InputFilter . 
Returns the current list of input filters . 
Sets whether the content of this view is selectable by the user . 
returns the number of lines of text , or 0 if the internal Layout has not been built . 
Returns true if pressing ENTER in this field advances focus instead of inserting the character . 
Returns true if pressing TAB in this field advances focus instead of inserting the character . 
sets whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent . 
Gets whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent . 
Returns true if anything changed . 
Returns true if anything changed . 
returns true iff there is a selection inside this text view . 
Sets the properties of this field to transform input to ALL CAPS display . 
Adds or removes the EditorInfo.TYPE _ TEXT_FLAG_MULTI_LINE on the mInputType . 
Sets how many times to repeat the marquee animation . sets to -1 to repeat indefinitely . 
Gets the number of times the marquee animation is repeated . 
Returns where , if anywhere , words that are longer than the view is wide should be ellipsized . 
sets the TextView so that when it takes focus , all the text is selected . 
sets whether the cursor is visible . 
Adds a TextWatcher to the list of those whose methods are called whenever this TextView 's text changes . 
Removes the specified TextWatcher from the list of those whose methods are called whenever this TextView 's text changes . 
Removes all spans that are inside or actually overlap the start . . 
Returns true , only while processing a touch gesture , if the initial touch down event caused focus to move to the text view and as a result its selection changed . 
Returns the TextView_textColor attribute from the TypedArray , if sets , or the TextAppearance_textColor from the TextView_textAppearance attribute , if TextView_textColor was not sets directly . 
Returns the default color from the TextView_textColor attribute from the AttributeSet , if sets , or the default color from the TextAppearance_textColor from the TextView_textAppearance attribute , if TextView_textColor was not sets directly . 
Returns the text that should be exposed to accessibility services . 
Returns whether this text view is a current input method target . 
returns whether or not suggestions are enabled on this TextView . 
gets the character offset closest to the specified absolute position . Returns -1 if there is no layout . 
Sets a span on the specified range of text 
Sets the currently selected hour using 24-hour time . 
Returns the currently selected hour using 24-hour time . 
Sets the currently selected minute . . 
Returns the currently selected minute . 
Sets the current hour . 
Sets whether this widget displays time in 24-hour mode or 12-hour mode with an AM/PM picker . 
sets the callback that indicates the time has been adjusted by the user . 
sets the current hour . 
Sets whether time is displayed in 24-hour mode or 12-hour mode with AM/PM indicators . 
sets the view to show . 
returns the view . 
sets how long to show the view for . 
returns the duration . 
sets the margins of the view . 
returns the horizontal margin . 
returns the vertical margin . 
sets the location at which the notification should appear on the screen . 
gets the location at which the notification should appear on the screen . 
returns the X offset in pixels to apply to the gravity 's location . 
returns the Y offset in pixels to apply to the gravity 's location . 
Gets the LayoutParams for the Toast window .  
Returns the text for when the button is in the checked state . 
Sets the text for when the button is in the checked state . 
Returns the text for when the button is not in the checked state . 
Sets the text for when the button is not in the checked state . 
Sets the title margin . 
Sets the starting title margin in pixels . 
Sets the top title margin in pixels . 
Sets the ending title margin in pixels . 
Sets the bottom title margin in pixels . 
sets a logo drawable from a resource id . 
sets a logo drawable . 
returns the current logo drawable . 
sets a description of the toolbar 's logo . 
sets a description of the toolbar 's logo . 
returns the description of the toolbar 's logo . 
Returns the title of this toolbar . 
sets the title of this toolbar . 
sets the title of this toolbar . 
returns the subtitle of this toolbar . 
sets the subtitle of this toolbar . 
sets the subtitle of this toolbar . 
Sets the text color , size , style , hint color , and highlight color from the specified TextAppearance resource . 
Sets the text color , size , style , hint color , and highlight color from the specified TextAppearance resource . 
Sets the text color of the title , if present . 
Sets the text color of the subtitle , if present . 
sets a content description for the navigation button if one is present . 
sets a content description for the navigation button if one is present . 
sets the icon to use for the toolbar 's navigation button . 
sets the icon to use for the toolbar 's navigation button . 
returns the current drawable used as the navigation icon . 
sets a listener to respond to navigation events . 
returns the Menu shown in the toolbar . 
sets the icon to use for the overflow button . 
returns the current drawable used as the overflow icon . 
sets a listener to respond to menu item click events . 
Sets the content insets for this toolbar relative to layout direction . 
Gets the starting content inset for this toolbar . 
Gets the ending content inset for this toolbar . 
Sets the content insets for this toolbar . 
Gets the left content inset for this toolbar . 
Gets the right content inset for this toolbar . 
Gets the start content inset to use when a navigation button is present . 
Sets the start content inset to use when a navigation button is present . 
Gets the end content inset to use when action buttons are present . 
Sets the start content inset to use when action buttons are present . 
Gets the content inset that will be used on the starting side of the bar in the current toolbar configuration . 
Gets the content inset that will be used on the ending side of the bar in the current toolbar configuration . 
Gets the content inset that will be used on the left side of the bar in the current toolbar configuration . 
Gets the content inset that will be used on the right side of the bar in the current toolbar configuration . 
Returns the width + uncollapsed margins 
Returns true if the Toolbar is collapsible and has no child views with a measured size > 0 . 
Returns a handle to the item with ID text1 . 
Returns a handle to the item with ID text2 . 
Sets video path . 
Sets video URI . 
Sets video URI using specific headers . 
Sets which child view will be displayed . 
Returns the index of the currently displayed child view . 
Returns the View corresponding to the currently displayed child . 
Returns the current animation used to animate a View that enters the screen . 
Returns the current animation used to animate a View that exits the screen . 
Returns whether the current View should be animated the first time the ViewAnimator is displayed . 
Returns true if the child views are flipping . 
Returns the next view to be displayed . 
Sets the factory used to creates the two views between which the ViewSwitcher will flip . 
Returns the adapter wrapped by this list adapter . 
Sets the currently selected year . 
Sets the delay between zoom callbacks as the user holds a zoom button . 
Sets whether the zoom controls should be focusable . 
Sets whether the zoom controls will be automatically dismissed after showing . 
Sets whether the zoom controls should be visible to the user . 
Gets the container that is the parent of the zoom controls . 
Gets the view for the zoom controls . 
Returns the View that should receive a touch at the given coordinates . 
Sets how fast you gets zoom events when the user holds down the zoom in/out buttons . 
returns -1 if none found 
Sets up the alert , including applying the parameters to the alert model , and installing the alert 's content . 
sets the view resource to display in the dialog . 
sets the view to display in the dialog . 
sets the view to display in the dialog along with the spacing around that view 
Sets a hint for the best button panel layout . 
Sets a click listener or a message to be sent when the button is clicked . 
Removes the default panel if a custom panel should be used . 
sets to true to reveal all service targets at once . 
Returns the userId of the managed profile for this device or UserHandle.USER _ NULL if there is no managed profile . 
Returns the userId of the profile parent or UserHandle.USER _ NULL if there is no parent . 
Returns the locale localized for display in the provided locale . 
Returns the locale localized for display in the default locale . 
Returns a locale 's country localized for display in the provided locale . 
Returns a locale 's country localized for display in the default locale . 
Returns the locale list localized for display in the provided locale . 
Adds the likely subtags for a provided locale ID . 
gets the locale list . 
Sets the listener and initializes the locale list . Returns true if we need to show the list , false if not . 
Returns the name of the locale in the language of the UI . 
Returns a list of locales for language or region selection . 
Gets the media route types for filtering the routes that the user can select using the media route chooser dialog . 
Sets the types of routes that will be shown in the media route chooser dialog launched by this button . 
Returns true if the route should be included in the list . 
Gets the route that this dialog is controlling . 
Sets whether to enable the volume slider and volume control using the volume keys when the route supports it .  
Returns whether to enable the volume slider and volume control using the volume keys when the route supports it . 
adds all of the durations from the other table into this one . 
adds the value into the value stored for the state . 
gets the value for the given key and offset from that key . 
gets the value for the given key and offset from that key . 
sets the value for the given id at offset 0 from that id . 
sets the value for the given id and index offset from that id . 
returns the raw storage long -LSB- -RSB- for the given key . 
sets the value for the given key and offset from that key . 
sets the value for the given key and offset from that key . 
returns the number of keys that have been added to this Table . 
gets the key at the given index in our table . 
returns a string for debugging . 
Gets the index of the array in the list of arrays . 
Gets the index of a value in a long -LSB- -RSB- . 
returns a long -LSB- -RSB- containing the merge of all of the usage in this table . 
gets the string resource to be used as a label for the link to the resolver activity for an action . 
Returns true if the activity is finishing and creation should halt 
gets the resolved intent that represents this target . 
gets the resolved component name that represents this target . 
returns the ResolveInfo about how and why this target matched the original query for available targets . 
returns the human-readable text label for this target . 
returns any extended info for this target . 
removes the native binaries of a given package . 
returns selection string for current internal state . 
returns selection arguments for current internal state . 
Returns the language component of a given locale string . 
Returns the index of the specified input method and subtype in the given list . 
Returns the language component of a given locale string . 
Returns true if a package name belongs to a UID . 
adds an integer value to the monotonically increasing counter with the given name . 
gets an event from the pool . 
returns events to a pool so they can be reused . 
adds an event to the scheduler . 
returns the next available event or wait until there is an event ready to be processed . 
Returns true if this command can be used for running status 
Returns true if this command cancels running status 
creates an event that contains the message . 
returns events to a pool so they can be reused . 
returns the next option on the command line -- that is an argument that starts with ' - ' . 
returns the next argument on the command line , whatever it is ; if there are no arguments left , returns null . 
returns the next argument on the command line , whatever it is ; if there are no arguments left , throws an IllegalArgumentException to report this to the user . 
Gets a list of packages associated with the current user 
adds stats from other to this BatterySipper . 
Returns true if the timer is inactive so can be completely dropped . 
Adds deltaTime and deltaCount to the current sample . 
sets the mark so that we can query later for the total time the timer has accumulated since this point . 
gets the wakeup reason counter , and creates a new one if one does n't already exist . 
gets the KernelWakelockTimer associated with name , and creates a new one if one does n't already exist . 
Returns true if the uid is completely inactive so can be dropped . 
returns a new Timer , or null . 
removes this Serv as a listener from the time base . 
removes the statistics object for a particular uid . 
adds the calling thread to the IPC thread pool . 
returns the global `` context object '' of the system . 
Removes the UID from the kernel module and from internal accounting data . 
creates a PathClassLoader and initialize a linker-namespace for it .  
Returns the average current in mA consumed by the subsystem , or the given default value if the subsystem has no recorded value . 
Returns the average current in mA consumed by the subsystem @param type the subsystem type @return the average current in milliAmps . 
Returns the average current in mA consumed by the subsystem for the given level . 
Returns the battery capacity , if available , in milli Amp Hours . 
sets the object identifying this application/process , for reporting VM errors . 
returns estimated power per Wi-Fi packet in mAh/packet where 1 packet = 2 KB . 
Returns the file descriptor of the associated socket . 
Returns a boolean status value indicating whether an end-of-file on the command socket has been encountered . 
Creates a PathClassLoader for the system server . 
Gets the bit array representation of the provided list of POSIX capabilities . 
Returns the color used to fill areas the app has not rendered content to yet when the user is resizing the window of an activity in multi-window mode . 
Returns the Id of the stack which contains this window . 
returns a LayoutInflater instance that can be used to inflate XML view layout resources for use in this Window . 
Gets a panel 's state based on its feature ID . 
Gets a panel 's state based on its feature ID . 
Sets the value of this preference , and saves it to the persistent store if required . 
Gets the value of this preference . 
returns a new NotificationVisibility instance from the global pool . 
returns a NotificationVisibility instance to the global pool .  
Returns an empty array of the specified type . 
Adds value to given array if not already present , providing set-like behavior . 
Removes value from given array if present , providing set-like behavior . 
Adds value to given array if not already present , providing set-like behavior . 
Removes value from given array if present , providing set-like behavior . 
Removes value from given array if present , providing set-like behavior . 
Adds value to given array if not already present , providing set-like behavior . 
Removes value from given array if present , providing set-like behavior . 
Returns true if the two ArrayLists are equal with respect to the objects they contain . 
Removes elements that match the predicate in an efficient way that alters the order of elements in the collection . 
Returns true if successfully binded to destination messenger ; false otherwise . 
creates the service 's handler returning AsyncServiceInfo . 
Returns the Messenger 's binder . 
returns the number of bit still available for reading . 
returns byte array containing accumulated data , sized to just fit . 
adds a callback to be notified . 
Returns true if the callback at index has been marked for removal . 
Removes callbacks from startIndex to startIndex + Long.SIZE , based on the bits sets in removed . 
removes a callback . 
Returns true if there are no registered callbacks or false otherwise . 
Removes all callbacks from the list . 
Sets the error state of the stream to false . 
Sets the error flag of this writer to true . 
returns the currently active file , which may not exist yet . 
Returns the file for you to read . 
Returns a file for you to write . 
Returns a Predicate that evaluates to true iff each of its components evaluates to true . 
Returns a Predicate that evaluates to true iff each of its components evaluates to true . 
Returns a Predicate that evaluates to true iff any one of its components evaluates to true . 
Returns a Predicate that evaluates to true iff any one of its components evaluates to true . 
Returns a Predicate that evaluates to true iff the given Predicate evaluates to false . 
Find buffer index of next token delimiter , usually space or newline . 
adds given listener to watch for progress events . 
sets the progress of the currently active segment . 
sets the progress of the currently active segment . 
sets the fractional progress of the currently active segment . 
sets the fractional progress of the currently active segment . 
adds a new item to the ring buffer . 
returns the current size of the ring buffer . 
returns the bottom pixel window outset of a window given its style attributes . 
sets size of messages to maintain and clears all current records . 
adds a processed message . 
adds a new state to the state machine . 
adds a new state to the state machine @param state the state to adds @param parent the parent of state 
adds a new state to the state machine , parent will be null @param state to adds 
sets the initial state . 
sets number of log records to maintain and clears all current records . 
adds the string to LogRecords . 
returns a string to be logged by LogRec , default is an empty string . 
gets a message and sets Message.target state machine handler . 
gets a message and sets Message.target state machine handler , what . 
gets a message and sets Message.target state machine handler , what and obj . 
gets a message and sets Message.target state machine handler , what , arg1 and arg2 Note : The handler can be null if the state machine has quit , which means target will be null and may cause a AndroidRuntimeException in MessageQueue #enqueMessage if sent directly or if sent using StateMachine #sendMessage the message will just be ignored . 
gets a message and sets Message.target state machine handler , what , arg1 and arg2 Note : The handler can be null if the state machine has quit , which means target will be null and may cause a AndroidRuntimeException in MessageQueue #enqueMessage if sent directly or if sent using StateMachine #sendMessage the message will just be ignored . 
gets a message and sets Message.target state machine handler , what , arg1 , arg2 and obj Note : The handler can be null if the state machine has quit , which means target will be null and may cause a AndroidRuntimeException in MessageQueue #enqueMessage if sent directly or if sent using StateMachine #sendMessage the message will just be ignored . 
Removes a message from the message queue . 
Removes a message from the deferred messages queue . 
sets debug enable/disabled . 
Returns the value of a boolean property , or the default if the property has not been defined . 
Returns the value of a byte property , or the default if the property has not been defined . 
Returns the value of a short property , or the default if the property has not been defined . 
Returns the value of an integer property , or the default if the property has not been defined . 
Returns the value of a long property , or the default if the property has not been defined . 
Returns the value of a float property , or the default if the property has not been defined . 
Returns the value of a double property , or the default if the property has not been defined . 
Returns the value of a string property , or the default if the property has not been defined . 
Returns the value of a boolean property , or false if the property has not been defined . 
Returns the value of a byte property , or 0 if the property has not been defined . 
Returns the value of a short property , or 0 if the property has not been defined . 
Returns the value of an integer property , or 0 if the property has not been defined . 
Returns the value of a long property , or 0 if the property has not been defined . 
Returns the value of a float property , or 0.0 if the property has not been defined . 
Returns the value of a double property , or 0.0 if the property has not been defined . 
Returns the value of a String property , or '' '' if the property has not been defined . 
Returns a default user icon for the given user . 
Returns the maximum number of action buttons that should be permitted within an action bar/action mode . 
Returns an InputContextCallback object that is guaranteed not to be in use by any other thread . 
adds an item view at the given index . 
creates a new item view that can be re-bound to other item data later . 
Returns the menu item within the specified parent menu that owns specified submenu . 
Creates the item view for the ` More ' button which is used to switch to the expanded menu view . 
Returns the number of items per row .  
Returns the number of rows in the layout .  
Sets the shortcut caption mode for IconMenuView . 
adds a presenter to this menu . 
adds a presenter to this menu that uses an alternate context for inflating menu items . 
removes a presenter from this menu . 
Adds an item to the menu . 
removes the item at the given index and optionally forces menu views to update . 
Returns the ordering across all items . 
Sets whether the shortcuts should be visible on menus . 
Sets the header 's title . 
Sets the header 's title . 
Sets the header 's icon . 
Sets the header 's icon . 
Sets the header 's view . 
Adds the given menu to the popup , if it is capable of displaying submenus within itself . 
sets a listener to receive a callback when the popup is dismissed . 
Returns whether icon spacing needs to be preserved for the given menu , based on whether any of its items contains an icon . 
Sets the view to which the popup window is anchored . 
Sets whether the popup menu 's adapter is forced to show icons in the menu item views . 
Sets the alignment of the popup window relative to the anchor view . 
Creates the popup and assigns cached properties . 
sets a callback object that will be notified of menu events related to this specific presentation . 
Returns an ID for determining how to save/restore instance state . 
Returns a Parcelable describing the current state of the presenter . 
Returns the default animations to be used for this menu when entering/exiting . 
Gets the item data that this view is displaying . 
Sets the title of the item view . 
Sets the enabled state of the item view . 
Sets the shortcut for the item . 
sets the icon of this item view . 
Gets whether the device supports rotation . 
Returns true if the rotation-lock toggle should be shown in system UI . 
Returns true if rotation lock is enabled . 
Sets whether the bar should be split right now , no questions asked . 
Sets whether the bar should split if we enter a narrow screen configuration . 
sets the action bar into a `` transitioning '' state . 
sets the window callback used to invoke menu items ; used for dispatching home button presses . 
sets the action bar title . 
sets the window title . 
Sets whether the scroll helper is enabled and should respond to touch events . 
Sets the absolute maximum scrolling velocity . 
Sets the absolute minimum scrolling velocity . 
Sets the target scrolling velocity relative to the host view 's dimensions . 
Sets the activation edge size relative to the host view 's dimensions . 
Sets the absolute maximum edge size . 
Sets the delay after entering an activation edge before activation of auto-scrolling . 
Sets the amount of time after activation of auto-scrolling that is takes to reach target velocity for the current touch position . 
Sets the amount of time after de-activation of auto-scrolling that is takes to slow to a stop . 
Returns the interpolated position of a touch point relative to an edge defined by its relative inset , its maximum absolute inset , and the edge interpolator . 
Sets the target velocity for this scroller . 
Adds an animation that interpolates given property from its current value to the given value . 
Adds the given animation to the list of animations for this object . 
Sets the currently hovered item , sending hover accessibility events as necessary to maintain the correct state . 
Returns whether this virtual view is accessibility focused . 
Sets the menu to be shown in this floating toolbar . 
Sets the custom listener for invocation of menu items in this floating toolbar . 
Sets the content rectangle . 
Sets the suggested width of this floating toolbar . 
Returns true if this floating toolbar is currently showing the specified menu items . 
Returns the visible and enabled menu items in the specified menu . 
Gets rid of this popup . 
Sets the touchable region of this popup to be zero . 
Sets the touchable region of this popup to be the area occupied by its content . 
Creates and returns a menu button for the specified menu item . 
Creates an `` appear '' animation for the specified view . 
Creates a `` disappear '' animation for the specified view . 
Returns a re-themed context with controlled look and feel for views . 
Gets the device policy password mode . 
returns true if the user has ever chosen a pattern . 
Sets the device owner information . 
Returns the maximum length of a sequential characters . 
sets whether the visible pattern is enabled . 
sets whether the visible password is enabled for cryptkeeper screen . 
sets and store the lockout deadline , meaning the user ca n't attempt his/her unlock pattern until the deadline has passed . 
sets whether the view is in stealth mode . 
sets whether the view will use tactile feedback . 
sets the call back for pattern detection . 
sets the display mode of the current pattern . 
Sets how many lines should be indented to avoid a floating image . 
sets id of the child that 's also visible in the contracted layout . 
gets id of the child that 's also visible in the contracted layout . 
Sets the currently displayed value . 
Returns the currently displayed value . 
Sets whether this view shows leading zeroes .  
returns the number of views available . 
creates the page for the given position . 
removes a page for the given position . 
creates the page for the given position . 
removes a page for the given position . 
Sets shift mode and turns on icon for shift key . 
Sets and enables vibrate pattern . 
Sets the left handle icon to a given resource . 
Sets the right handle icon to a given resource . 
Sets the current grabbed state , and dispatches a grabbed state change event to our listener . 
gets the measured tab width . 
gets the measured tab width . 
Sets the left handle icon to a given resource . 
Sets the left handle hint text to a given resource string . 
Sets the right handle icon to a given resource . 
Sets the left handle hint text to a given resource string . 
Sets the current grabbed state , and dispatches a grabbed state change event to our listener . 
Sets the text size in pixels . 
sets a PagerAdapter that will supply views for this pager as needed . 
sets the currently selected page . 
sets the currently selected page . 
sets a listener that will be invoked whenever the page changes or is incrementally scrolled .  
sets a separate OnPageChangeListener for internal use by the support library . 
Returns the number of pages that will be retained to either side of the current page in the view hierarchy in an idle state . 
sets the number of pages that should be retained to either side of the current page in the view hierarchy in an idle state . 
sets the margin between pages . 
returns the margin between pages . 
sets a drawable that will be used to fill the margin between pages . 
sets a drawable that will be used to fill the margin between pages . 
Returns a local service instance that implements the specified interface . 
Adds a service instance of the specified interface to the global registry of local services . 
removes a service instance , must be only used in tests . 
Returns a copy of this object 's LinkProperties . 
Sets the DNS servers of the provided LinkProperties object to the current servers . 
gets the known sets of URL schemes . 
gets the possible values for the last part of a domain name . 
gets the smileys accepted by the parser . 
gets the acronyms accepted by the parser . 
Returns the raw text being parsed . 
returns the number of parts . 
returns the part at the given index . 
returns the list of parts from the parsed text 
gets a the appropriate Token for a given URL @param text the anchor text @param url the url 
Returns the last part in the list . 
Adds the appropriate token for the given URL . 
Returns the class for the character at the given index . 
Returns a Video object if the given url is to a video . 
Returns the URL for the RSS description of the given video . 
Returns a Photo object if the given url is to a photo or album . 
Returns the URL for the RSS description of the user 's albums . 
Returns the URL for an album . 
Returns the URL for a particular photo . 
Returns a FlickrPhoto object if the given url is to a photo or Flickr user . 
Returns the URL for the RSS description . 
Returns the URL for a particular tag . 
Returns the URL to the user 's Flickr homepage . 
Returns the URL for a user tag photo sets . 
Returns the URL for user sets . 
Adds the given token to the parsed output . 
Returns the reverse of the given string . 
Adds the given string into the trie . 
Returns the longest substring of the given string , starting at the given index , that exists in the trie . 
Returns the longest substring of the given string , starting at the given index , that exists in the trie , with a special tokenizing case for smileys if specified . 
Adds the given token to this part . 
Returns the original text of this part . 
Returns the tokens in this part . 
Returns a socket connected to the given host that is layered over an existing socket . 
Creates a new , unconnected socket . 
Returns null if there are n't any . 
Gets an singleton instance of the SSLProtocolSocketFactory . 
Returns linger-on-close timeout . 
Returns linger-on-close timeout . 
Returns the timeout until a connection is etablished . 
Sets the timeout until a connection is etablished . 
Creates a copy of these parameters . 
Removes the parameter with the specified name . 
removes file if it exists . 
Creates the Download string for the test server . 
sets the state transition criteria @param networkType @param initState @param transitionDir @param targetState 
removes configured networks and disable wifi 
sets airplane mode on device , caller is responsible to ensuring correct state . 
adds quotes around the string . 
returns true if device is currently connected to mobile network 
returns true if device is currently connected to Wifi 
removes configured networks and disable wifi 
gets the security type from a string . 
gets the EAP method from a string . 
gets the phase 2 method from a string . 
gets the prefix length from an int . 
creates an AnimatorSet with all the animators running sequentially 
Sets up the fields used by each test . 
Sets up the fields used by each test . 
Gets the list of download IDs . 
Gets the current state of WiFi . 
Sets the MIME type of file that will be served from the mock server @param type The MIME type to returns from the server 
Gets the MIME content string for a given type @param type The MIME type to returns @return the String representation of that MIME content type 
Gets the Uri that should be used to access the mock server @param filename The name of the file to try to retrieve from the mock server @return the Uri to use for access the file on the mock server 
Gets the Uri that should be used to access the mock server @param filename The name of the file to try to retrieve from the mock server @return the Uri to use for access the file on the mock server 
creates a mock PrintDocumentAdapter . 
creates mock print service callbacks . 
creates a IPrintJobStateChangeListener object . 
creates a IPrintServicesChangeListener object . 
creates a IPrintServiceRecommendationsChangeListener object . 
creates a IPrinterDiscoveryObserver object . 
sets up a filter cursor and then scan it for specific results . 
Returns true if the code point is ASCII and graph . 
Returns the encoded string . 
sets the number of items in the grid . 
sets the position that starts selected . 
sets the factor that determines how tall each item is in relation to the screen height . 
Sets the stacking direction @param stackFromBottom @return 
Sets whether the sum of the height of the grid items must be at least the height of the grid view . 
Sets the individual width of each column . 
Sets the number of columns in the grid . 
Sets the stretch mode . 
Sets the spacing between rows in the grid 
creates a view for a grid item . 
creates a view with a button at the top and bottom , with filler in between . 
creates a button ready to be a list item . 
creates a text view ready to be a list item . 
creates a text view ready to be a list item . 
sets the number of items in the list . 
sets whether the items are focusable . 
sets the position that starts selected . 
sets the factor that determines how tall each item is in relation to the screen height . 
Sets the stacking direction @param stackFromBottom @return 
Sets whether the sum of the height of the list items must be at least the height of the list view . 
sets the factor for the fading edge length . 
sets the number of header views to appear within the list 
sets whether the headers should be focusable . 
sets the number of footer views to appear within the list 
Returns the LinearLayout containing the ListView in this scenario . 
Sets an adapter on a ListView . 
creates a view for a list item . 
returns an item type for the specified position in the adapter . 
returns the number of types created by the adapter . 
sets the selected position of the list view . 
gets the top of the list . 
gets the bottom of the list . 
adds a text view . 
adds multiple text views . 
adds a button . 
adds multiple buttons . 
adds a sublayout of buttons as a single child of the scroll view . 
gets the child contained within the vertical linear layout of the scroll view . 
sets the autocomplete data to an adapter containing 0 . . 
Returns an action that clicks on text at an index on the TextView . 
Returns an action that clicks by mouse on text at an index on the TextView . 
Returns an action that clicks by mouse on text at an index on the TextView . 
Returns an action that double-clicks on text at an index on the TextView . 
Returns an action that double-clicks by mouse on text at an index on the TextView . 
Returns an action that long presses on text at an index on the TextView . 
Returns an action that long click by mouse on text at an index on the TextView . 
Returns an action that triple-clicks by mouse on text at an index on the TextView . 
Returns an action that long presses then drags on text from startIndex to endIndex on the TextView . 
Returns an action that double taps then drags on text from startIndex to endIndex on the TextView . 
Returns an action that click then drags by mouse on text from startIndex to endIndex on the TextView . 
Returns an action that double click then drags by mouse on text from startIndex to endIndex on the TextView . 
Returns an action that long click then drags by mouse on text from startIndex to endIndex on the TextView . 
Returns an action that triple click then drags by mouse on text from startIndex to endIndex on the TextView . 
Returns an action that tap then drags on the handle from the current position to endIndex on the TextView . 
Returns an action that tap then drags on the handle from the current position to endIndex on the TextView . 
gets the currently selected view . 
gets the screen height . 
adds a skinny button that takes up just less than half of the screen horizontally . 
Sets the text to display in this label @param text The text to display . 
Sets the text size for this label @param size Font size 
Sets the text color for this label @param color ARGB value for the text 
gets the child of a list item . 
gets the child of a list item . 
sets up basic columns and cursor for the tests 
Gets the current state of WiFi . 
Returns the handler for this thread . 
Gets the external URL of the file to download @return the Uri of the external file to download 
Gets the path to the file that flags that a download has started . 
Sets up the test . 
Adds optional information as key-value pairs to this object . 
Returns null if the key can not be found . 
Returns whether this instance is valid or not @return true if valid false if invalid 
Adds optional information as key-value pairs to this object . 
Returns null if the key can not be found . 
Returns whether this instance is valid or not @return true if valid false if invalid 
Removes the rights associated with the given rights-protected content . 
Removes the rights associated with the given rights-protected content . 
Adds the specified MIME type to the list of MIME types this DRM plug-in supports . 
Adds the specified file suffix to the list of file suffixes this DRM plug-in supports . 
Returns null if the key is not found . 
Returns the subscription ID associated with this object . 
Returns true if the remaining space defined by freeWidth and freeHeight should be split horizontally . 
returns the pointer to the native object . 
Returns the density for this bitmap . 
Sets the nine patch chunk . 
Returns true if this bitmap has been recycled . 
Returns the generation ID of this bitmap . 
Creates a new immutable bitmap backed by ashmem which can efficiently be passed between processes .  
Creates a new immutable bitmap backed by ashmem which can efficiently be passed between processes .  
Creates a new bitmap , scaled from an existing bitmap , when possible . 
Returns an immutable bitmap from the source bitmap . 
Returns an immutable bitmap from the specified subset of the source bitmap . 
Returns an immutable bitmap from subset of the source bitmap , transformed by the optional matrix . 
Returns a mutable bitmap with the specified width and height . 
Returns a mutable bitmap with the specified width and height . 
Returns a mutable bitmap with the specified width and height . 
Returns a mutable bitmap with the specified width and height . 
Returns a immutable bitmap with the specified width and height , with each pixel value sets to the corresponding value in the colors array . 
Returns a immutable bitmap with the specified width and height , with each pixel value sets to the corresponding value in the colors array . 
Returns a immutable bitmap with the specified width and height , with each pixel value sets to the corresponding value in the colors array . 
Returns a immutable bitmap with the specified width and height , with each pixel value sets to the corresponding value in the colors array . 
Returns an optional array of private data , used by the UI system for some bitmaps . 
Sets whether the bitmap should treat its data as pre-multiplied . 
Returns the bitmap 's width 
Returns the bitmap 's height 
returns the number of bytes between rows in the bitmap 's pixels .  
Returns the minimum number of bytes that can be used to store this bitmap 's pixels .  
Returns the size of the allocated memory used to store this bitmap 's pixels .  
Returns true if the bitmap 's config supports per-pixel alpha , and if the pixels may contain non-opaque alpha values . 
sets a hint for the renderer responsible for drawing this bitmap indicating that it should attempt to use mipmaps when this bitmap is drawn scaled down . 
Returns in pixels -LSB- -RSB- a copy of the data in the bitmap . 
Returns a new bitmap that captures the alpha values of the original . 
Returns a new bitmap that captures the alpha values of the original . 
returns true on success 
returns a new bitmap built from the native bitmap 's alpha , and the paint 
sets the newly decoded bitmap 's density based on the Options . 
creates a BitmapRegionDecoder from the specified byte array . 
creates a BitmapRegionDecoder from the file descriptor . 
creates a BitmapRegionDecoder from an input stream . 
creates a BitmapRegionDecoder from a file path . 
Returns the original image 's width 
Returns the original image 's height 
Returns true if this region decoder has been recycled . 
Gets the x location of the camera . 
Gets the y location of the camera . 
Gets the z location of the camera . 
Sets the location of the camera . 
Returns the width of the current drawing layer @return the width of the current drawing layer 
Returns the height of the current drawing layer @return the height of the current drawing layer 
Returns the target density of the canvas . 
Returns the maximum allowed width for bitmaps drawn with this canvas . 
Returns the maximum allowed height for bitmaps drawn with this canvas . 
Returns the number of matrix/clip states on the Canvas ' private stack . 
returns , in ctm , the current transformation matrix . 
returns a new matrix with a copy of the canvas ' current transformation matrix . 
returns true if the specified rectangle , after being transformed by the current matrix , would lie completely outside of the current clip . 
returns true if the specified path , after being transformed by the current matrix , would lie completely outside of the current clip . 
returns true if the specified rectangle , after being transformed by the current matrix , would lie completely outside of the current clip . 
returns the alpha component of a color int . 
returns the red component of a color int . 
returns the green component of a color int . 
returns the blue component of a color int . 
returns a color-int from red , green , blue components . 
returns a color-int from alpha , red , green , blue components . 
Returns the relative luminance of a color . 
returns the array of floats representing this colormatrix . 
sets this colormatrix to identity : <pre> -LSB- 1 0 0 0 0 - red vector 0 1 0 0 0 - green vector 0 0 1 0 0 - blue vector 0 0 0 1 0 -RSB- - alpha vector </pre> 
sets this colormatrix to scale by the specified values . 
sets the rotation on a color axis by the specified values . 
sets this colormatrix to the concatenation of the two specified colormatrices , such that the resulting colormatrix has the same effect as applying matB and then applying matA .  
sets the matrix to affect the saturation of colors . 
sets the matrix to convert RGB to YUV 
sets the matrix to convert from YUV to RGB 
Adds a callback to listen to the animation events . 
Removes the specified animation callback . 
Removes all existing animation callbacks . 
adds a new drawable to the sets of keyframes . 
Adds a new transition between keyframes . 
Sets whether this AnimationDrawable is visible . 
Sets whether the animation should play once or repeat . 
Adds a frame to the animation @param frame The frame to adds @param duration How long in milliseconds the frame should appear 
Returns the paint used to render this drawable . 
Returns the bitmap used by this drawable to render . 
sets the density scale at which this drawable will be rendered . 
sets the density scale at which this drawable will be rendered . 
sets the density at which this drawable will be rendered . 
gets the gravity used to position/stretch the bitmap within its bounds .  
sets the gravity used to position/stretch the bitmap within its bounds .  
Sets the repeat behavior of this drawable on the X axis . 
Sets the repeat behavior of this drawable on the Y axis . 
Sets the repeat behavior of this drawable on both axis . 
Gets the drawable 's color value . 
Sets the drawable 's color value . 
Returns the alpha value of this drawable 's color . 
Sets the color 's alpha value . 
Sets the color filter applied to this color . 
returns a copy of the drawable 's bounds in a new Rect . 
returns the drawable 's bounds Rect . 
returns the drawable 's dirty bounds Rect . 
sets a mask of the configuration parameters for which this drawable may change , requiring that it be re-created . 
returns a mask of the configuration parameters for which this drawable may change , requiring that it be re-created . 
sets to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component . 
sets to true to have the drawable filter its bitmaps with bilinear sampling when they are scaled or rotated . 
Returns the resolved layout direction for this Drawable . 
sets the layout direction for this drawable . 
Gets the current alpha value for the drawable . 
Removes the color filter for this drawable . 
Sets the bounds to which the hotspot is constrained , if they should be different from the drawable bounds . 
sets whether this Drawable is visible . 
returns the opacity/transparency of this Drawable . 
returns the appropriate opacity value for two source opacities . 
Returns a Region representing the part of the Drawable that is completely transparent . 
Returns the drawable 's intrinsic width . 
Returns the drawable 's intrinsic height . 
Returns the minimum width suggested by this Drawable . 
Returns the minimum height suggested by this Drawable . 
returns in padding the insets suggested by this Drawable for placing content inside the drawable 's bounds . 
returns in insets the layout insets suggested by this Drawable for use with alignment operations during layout .  
creates a drawable from an inputstream 
creates a drawable from an inputstream , using the given resources and value to determine density information . 
creates a drawable from an inputstream , using the given resources and value to determine density information . 
creates a drawable from an XML document .  
creates from inside an XML document . Returns null if the tag is not a valid drawable . 
creates a drawable from file path name . 
Creates a new Drawable instance from its constant state . 
Creates a new Drawable instance from its constant state using the specified resources . 
Creates a new Drawable instance from its constant state using the specified resources and theme . 
returns whether this constant state can have a theme applied . 
Sets the currently displayed drawable by index . 
Adds the drawable to the end of the list of contained drawables . 
Sets the wrapped drawable . 
Sets the constant state density . 
Returns the radii for each of the 4 corners . 
Returns the radius for the corners of the gradient . 
sets the stroke width and color for the drawable . 
sets the stroke width and color state list for the drawable . 
sets the stroke width and color for the drawable . 
sets the stroke width and color state list for the drawable . 
Sets the size of the shape drawn by this drawable . 
Sets the type of shape used to draw the gradient . 
Sets the type of gradient used by this drawable . 
Sets the center location in pixels of the gradient . 
Returns the center X location of this gradient in pixels . 
Returns the center Y location of this gradient in pixels . 
Sets the radius of the gradient . 
Returns the radius of the gradient in pixels . 
Returns the orientation of the gradient defined in this drawable . 
Sets the orientation of the gradient defined in this drawable . 
Sets the colors used to draw the gradient . 
Sets the constant state density . 
Returns a Drawable that can be used to draw the image inside this Icon , constructing it if necessary . 
creates an Icon from the specified stream .  
creates an Icon pointing to a drawable resource . 
creates an Icon pointing to a drawable resource . 
creates an Icon pointing to a bitmap in memory . 
creates an Icon pointing to a compressed bitmap stored in a byte array .  
creates an Icon pointing to an image file specified by URI . 
creates an Icon pointing to an image file specified by URI . 
creates an Icon pointing to an image file specified by path . 
Adds a new layer at the end of list of layers and returns its index . 
adds a new layer to this drawable . 
Sets the ID of a layer . 
Returns the ID of the specified layer . 
Returns the number of layers contained within this layer drawable . 
Sets the drawable for the layer at the specified index . 
Returns the drawable for the layer at the specified index . 
Sets an explicit size for the specified layer .  
Sets the gravity used to position or stretch the specified layer within its container .   
Sets the absolute padding .  
Sets the relative padding .  
Returns the left padding in pixels .  
Returns the right padding in pixels .  
Returns the start padding in pixels .  
Returns the end padding in pixels .  
Returns the top padding in pixels .  
Returns the bottom padding in pixels .  
Sets the opacity of this drawable directly instead of collecting the states from the layers . 
sets the density scale at which this drawable will be rendered . 
sets the density scale at which this drawable will be rendered . 
sets the density at which this drawable will be rendered . 
returns the picture associated with the drawable . 
Sets the ripple color . 
Sets the radius in pixels of the fully expanded ripple . 
Creates an active hotspot at the specified location . 
Sets whether to disable RenderThread animations for this ripple . 
Returns the maximum bounds of the ripple relative to the ripple center . 
Sets the start angle for rotation . 
Sets the end angle for rotation . 
Sets the X position around which the drawable is rotated . 
Sets whether the X pivot value represents a fraction of the drawable width or an absolute value in pixels . 
Sets the Y position around which the drawable is rotated . 
Sets whether the Y pivot value represents a fraction of the drawable height or an absolute value in pixels . 
Returns the Shape of this ShapeDrawable . 
Sets the Shape of this ShapeDrawable . 
Returns the Paint used to draw the shape . 
Sets padding for the shape . 
Sets padding for this shape , defined by a Rect object . 
sets the alpha level for this drawable -LSB- 0 . 
Returns the Shader to be drawn when a Drawable is drawn . 
Returns the RectF that defines this rectangle 's bounds . 
Returns the width of the Shape . 
Returns the height of the Shape . 
adds a new image/string ID to the sets of images . 
Gets the number of states contained in this drawable . 
Gets the state sets at an index . 
Gets the drawable at an index . 
Gets the index of the drawable with the provided state sets . 
returns true if alpha has changed . 
returns an Insets instance with the appropriate values . 
returns an Insets instance with the appropriate values . 
Returns the original image 's width 
Returns the original image 's height 
Returns true if this large bitmap has been recycled . 
Returns the RGB color used to multiply the source color when the color filter is applied . 
Returns the RGB color that will be added to the source color when the color filter is applied . 
Returns true if the matrix is identity . 
Gets whether this matrix is affine . 
Returns true if will map a rectangle to another rectangle . 
Returns true iff obj is a Matrix and its values equal our values . 
sets the matrix to identity 
sets the matrix to scale by sx and sy . 
sets the matrix to rotate by the specified sine and cosine values . 
sets the matrix to skew by sx and sy . 
sets the matrix to the concatenation of the two specified matrices and returns true . 
sets the matrix to the scale and translate values that map the source rectangle to the destination rectangle , returning true if the the result can be represented . 
sets the matrix such that the specified src points would map to the specified dst points . 
returns the mean radius of a circle after it has been mapped by this matrix . 
Returns the name of this NinePatch object if one was specified when calling the constructor . 
Returns the paint used to draw this NinePatch . 
Sets the paint to use when drawing the NinePatch . 
Returns the bitmap used to draw this NinePatch . 
Returns the intrinsic width , in pixels , of this NinePatch . 
Returns the intrinsic height , in pixels , of this NinePatch . 
Sets the outline to be empty . 
Returns whether the Outline is empty . 
Returns whether the outline can be used to clip a View . 
Sets the alpha represented by the Outline - the degree to which the producer is guaranteed to be opaque over the Outline 's shape . 
Returns the alpha represented by the Outline . 
Sets the Outline to the rounded rect defined by the input rect , and corner radius . 
Sets the Outline to the rounded rect defined by the input rect , and corner radius . 
Sets the outline to the oval defined by input rect . 
returns the pointer to the native object while ensuring that any mutable objects that are attached to the paint are also up-to-date .  
returns the bidi flags on the paint . 
sets the bidi flags on the paint .  
returns the paint 's flags .  
sets the paint 's flags . 
returns the paint 's hinting mode . 
sets the paint 's hinting mode . 
returns the paint 's color .  
sets the paint 's color .  
returns the width for stroking . 
sets the width for stroking . 
returns the paint 's stroke miter value . 
sets the paint 's stroke miter value . 
returns the paint 's Cap , controlling how the start and end of stroked lines and paths are treated . 
sets the paint 's Cap . 
returns the paint 's stroke join type . 
sets the paint 's Join . 
gets the paint 's shader object . 
sets or clear the shader object . 
sets or clear the paint 's colorfilter , returning the parameter . 
gets the paint 's xfermode object . 
sets or clear the xfermode object . 
gets the paint 's patheffect object . 
sets or clear the patheffect object . 
gets the paint 's maskfilter object . 
sets or clear the maskfilter object . 
gets the paint 's typeface object . 
sets or clear the typeface object . 
sets or clear the rasterizer object . 
returns the paint 's Align value for drawing text . 
sets the paint 's text alignment . 
gets the text 's primary Locale . 
gets the text locale list . 
sets the text locale list to a one-member list consisting of just the locale .  
sets the text locale list . 
gets the elegant metrics flag . 
sets the paint 's elegant height metrics flag . 
returns the paint 's text size . 
sets the paint 's text size . 
returns the paint 's horizontal scale factor for text . 
sets the paint 's horizontal scale factor for text . 
returns the paint 's horizontal skew factor for text . 
sets the paint 's horizontal skew factor for text . 
returns the paint 's letter-spacing for text . 
sets the paint 's letter-spacing for text . 
Returns the font feature settings . 
sets font feature settings . 
gets the current value of hyphen edit . 
returns the font 's recommended interline spacing , given the Paint 's settings for typeface , textSize , etc. . 
returns the font 's interline spacing , given the Paint 's settings for typeface , textSize , etc. . 
returns the recommend line spacing based on the current typeface and text size . 
returns the width of the text . 
returns the width of the text . 
returns the width of the text . 
returns the width of the text . 
returns the number of chars that were measured , and if measuredWidth is not null , returns in it the actual width measured . 
returns the number of chars that were measured , and if measuredWidth is not null , returns in it the actual width measured . 
returns the number of chars that were measured , and if measuredWidth is not null , returns in it the actual width measured . 
returns the advance widths for the characters in the string . 
returns the advance widths for the characters in the string . 
returns the advance widths for the characters in the string . 
returns the advance widths for the characters in the string . 
Returns the next cursor position in the run . 
Returns the next cursor position in the run . 
Returns the next cursor position in the run . 
gets the character offset within the string whose position is closest to the specified horizontal position . 
sets this path to the result of applying the Op to this path and the specified path . 
sets this path to the result of applying the Op to the two specified paths . 
Returns the path 's convexity , as defined by the content of the path . 
returns the path 's fill type . 
sets the path 's fill type . 
Returns true if the filltype is one of the INVERSE variants @return true if the filltype is one of the INVERSE variants 
Returns true if the path specifies a rectangle . 
sets the beginning of the next contour relative to the last point on the previous contour . 
adds a closed rectangle contour to the path @param rect The rectangle to adds as a closed contour to the path @param dir The direction to wind the rectangle 's contour 
adds a closed rectangle contour to the path @param left The left side of a rectangle to adds to the path @param top The top of a rectangle to adds to the path @param right The right side of a rectangle to adds to the path @param bottom The bottom of a rectangle to adds to the path @param dir The direction to wind the rectangle 's contour 
adds a closed oval contour to the path @param oval The bounds of the oval to adds as a closed contour to the path @param dir The direction to wind the oval 's contour 
adds a closed oval contour to the path @param dir The direction to wind the oval 's contour 
adds a closed circle contour to the path @param x The x-coordinate of the center of a circle to adds to the path @param y The y-coordinate of the center of a circle to adds to the path @param radius The radius of a circle to adds to the path @param dir The direction to wind the circle 's contour 
adds the specified arc to the path as a new contour . 
adds the specified arc to the path as a new contour . 
adds a closed round-rectangle contour to the path @param rect The bounds of a round-rectangle to adds to the path @param rx The x-radius of the rounded corners on the round-rectangle @param ry The y-radius of the rounded corners on the round-rectangle @param dir The direction to wind the round-rectangle 's contour 
adds a closed round-rectangle contour to the path @param rx The x-radius of the rounded corners on the round-rectangle @param ry The y-radius of the rounded corners on the round-rectangle @param dir The direction to wind the round-rectangle 's contour 
adds a closed round-rectangle contour to the path . 
adds a closed round-rectangle contour to the path . 
adds a copy of src to the path @param src The path that is appended to the current path 
adds a copy of src to the path , transformed by matrix @param src The path to adds as a new contour 
Sets the last point of the path . 
returns the total length of the current contour , or 0 if no path is associated with this measure object . 
Returns false if there is no path , or a zero-length path was specified , in which case position and tangent are unchanged . 
Returns false if there is no path , or a zero-length path was specified , in which case matrix is unchanged . 
returns true if one exists , or false if we 're done with the path . 
Gets the pages of the document . 
Gets the page number . 
Gets the number of pages in the document . 
Removes the page with a given index . 
Sets a transformation and clip for a given page . 
Gets whether the document prefers to be scaled for printing . 
Gets the number of pages in the document . 
Gets whether the document prefers to be scaled for printing . 
Gets the page index . 
gets the width of the picture as passed to beginRecording . 
gets the height of the picture as passed to beginRecording . 
returns empty picture if src is 0 , or a copy of the native src 
sets the point 's x and y coordinates 
returns a new point from the data in the specified parcel . 
returns an array of rectangles of the specified size . 
sets the point 's coordinates from the data stored in the specified parcel . 
sets the point 's x and y coordinates 
sets the point 's x and y coordinates to the coordinates of p 
returns a new point from the data in the specified parcel . 
returns an array of rectangles of the specified size . 
sets the point 's coordinates from the data stored in the specified parcel . 
Returns the ARGB color used to tint the source pixels when this filter is applied . 
Returns the Porter-Duff mode used to composite this color filter 's color with the source pixel when this filter is applied . 
returns a string representation of the rectangle in a compact form . 
returns a string representation of the rectangle in a compact form .  
returns a string representation of the rectangle in a well-defined format . 
sets the rectangle 's coordinates to the specified values . 
Returns true iff the 4 specified sides of a rectangle are inside or equal to this rectangle . 
Returns true iff the specified rectangle r is inside or equal to this rectangle . 
Returns true if this rectangle intersects the specified rectangle .  
Returns true iff the two specified rectangles intersect . 
returns a new rectangle from the data in the specified parcel . 
returns an array of rectangles of the specified size . 
sets the rectangle 's coordinates from the data stored in the specified parcel . 
returns a string representation of the rectangle in a compact form . 
returns a string representation of the rectangle in a compact form .  
sets the rectangle 's coordinates to the specified values . 
Returns true iff the 4 specified sides of a rectangle are inside or equal to this rectangle . 
Returns true iff the specified rectangle r is inside or equal to this rectangle . 
Returns true if this rectangle intersects the specified rectangle .  
Returns true iff the two specified rectangles intersect . 
sets the dst integer Rect by rounding this rectangle 's coordinates to their nearest integer values . 
sets the dst integer Rect by rounding `` out '' this rectangle , choosing the floor of top and left , and the ceiling of right and bottom . 
returns a new rectangle from the data in the specified parcel . 
returns an array of rectangles of the specified size . 
sets the rectangle 's coordinates from the data stored in the specified parcel . 
sets the region to the empty region 
sets the region to the specified region . 
sets the region to the specified rectangle 
sets the region to the specified rectangle 
sets the region to the area described by the path and clip . returns true if the resulting region is non-empty . 
returns true if this region is empty 
returns true if the region contains a single rectangle 
returns true if the region contains more than one rectangle 
returns a new Rect sets to the bounds of the region . 
sets the Rect to the bounds of the region . 
returns the boundary of the region as a new Path . 
sets the path to the boundary of the region . 
returns true if the region contains the specified point 
returns true if the region is empty , or if the specified rectangle does not intersect the region . 
returns true if the region is empty , or if the specified rectangle does not intersect the region . 
returns true if the region is empty , or if the specified region does not intersect the region . 
sets the dst region to the result of translating this region by -LSB- dx , dy -RSB- . 
sets the dst region to the result of scaling this region by the given scale amount .  
returns true if the result of the op is not empty . 
returns true if the result of the op is not empty . 
returns true if the result of the op is not empty . 
sets this region to the result of performing the Op on the specified rect and region . returns true if the result is not empty . 
sets this region to the result of performing the Op on the specified regions . returns true if the result is not empty . 
returns the next rectangle in the region . 
returns true if the shader has a non-identity local matrix . 
sets the shader 's local matrix . 
sets the default size of the image buffers .  
Returns true if the SurfaceTexture was released 
Returns the typeface 's intrinsic style attributes 
creates a typeface object given a family name , and option style information . 
creates a typeface object that best matches the specified existing typeface and the specified Style . 
Returns one of the default typeface objects , based on the specified style @return the default typeface that corresponds to the style 
creates a new typeface from the specified font data . 
Creates a unique id for a given AssetManager and asset path . 
creates a new typeface from the specified font file . 
creates a new typeface from the specified font file . 
creates a new typeface from an array of font families . 
creates a new typeface from an array of font families , including also the font families in the fallback list . 
Gets the Android context used for operations with this instance . 
Returns the key size specified by this parameter . 
Sets the key size for the keypair to be created . 
Sets the algorithm-specific key generation parameters . 
Sets the subject used for the self-signed certificate of the generated key pair . 
Sets the serial number used for the self-signed certificate of the generated key pair . 
Sets the start of the validity period for the self-signed certificate of the generated key pair . 
Sets the end of the validity period for the self-signed certificate of the generated key pair . 
Creates a streamer which sends plaintext/ciphertext into the provided KeyStore and receives the corresponding ciphertext/plaintext from the KeyStore . 
Creates a streamer which sends the message to be signed/verified into the provided KeyStore This implementation returns a working streamer . 
Returns the UID which will own the key .  
Returns the requested key size . 
Returns the attestation challenge value that will be placed in attestation certificate for this key pair .  
Sets the UID which will own the key .  
Sets the algorithm-specific key generation parameters . 
Sets the subject used for the self-signed certificate of the generated key pair . 
Sets the serial number used for the self-signed certificate of the generated key pair . 
Sets the start of the validity period for the self-signed certificate of the generated key pair . 
Sets the end of the validity period for the self-signed certificate of the generated key pair . 
Sets the time instant before which the key is not yet valid . 
Sets the time instant after which the key is no longer valid . 
Sets the time instant after which the key is no longer valid for encryption and signing . 
Sets the time instant after which the key is no longer valid for decryption and verification . 
Sets whether encryption using this key must be sufficiently randomized to produce different ciphertexts for the same plaintext every time .  
Sets whether this key is authorized to be used only if the user has been authenticated .   
Sets whether an attestation certificate will be generated for this key pair , and what challenge value will be placed in the certificate .  
Sets whether to include a temporary unique ID field in the attestation certificate . 
Sets whether this key should be invalidated on fingerprint enrollment .  
Gets the origin of the key .  
Gets the size of the key in bits . 
Gets the time instant before which the key is not yet valid . 
Gets the time instant after which the key is no long valid for decryption and verification . 
Gets the time instant after which the key is no long valid for encryption and signing . 
Adds keymaster arguments to express the key 's authorization policy supported by user authentication . 
Gets the time instant before which the key is not yet valid . 
Gets the time instant after which the key is no long valid for decryption and verification . 
Gets the time instant after which the key is no long valid for encryption and signing . 
Sets the time instant before which the key is not yet valid . 
Sets the time instant after which the key is no longer valid . 
Sets the time instant after which the key is no longer valid for encryption and signing . 
Sets the time instant after which the key is no longer valid for decryption and verification . 
Sets whether encryption using this key must be sufficiently randomized to produce different ciphertexts for the same plaintext every time .  
Sets whether this key is authorized to be used only if the user has been authenticated .   
Sets whether this key should be invalidated on fingerprint enrollment .  
Gets the KeyStore operation handle of this crypto operation . 
Returns the requested number of random bytes to mix into keystore/keymaster RNG . 
Returns the last modification time of the key in milliseconds since the epoch . 
adds an authentication record to the keystore authorization table . 
Returns the manufacturer of the accessory . 
Returns the model name of the accessory . 
Returns a user visible description of the accessory . 
Returns the version of the accessory . 
Returns the URI for the accessory . 
Returns the unique serial number for the accessory . 
Returns a new instance of this class . 
Returns a list of currently attached USB accessories . 
Returns true if the caller has permission to access the accessory . 
Returns the Locale associated with this address . 
Returns the largest index currently in use to specify an address line . 
Returns the feature name of the address , for example , `` Golden Gate Bridge '' , or null if it is unknown 
Sets the feature name of the address to the given String , which may be null 
Returns the administrative area name of the address , for example , `` CA '' , or null if it is unknown 
Sets the administrative area name of the address to the given String , which may be null 
Returns the sub-administrative area name of the address , for example , `` Santa Clara County '' , or null if it is unknown 
Sets the sub-administrative area name of the address to the given String , which may be null 
Returns the locality of the address , for example `` Mountain View '' , or null if it is unknown . 
Sets the locality of the address to the given String , which may be null . 
Returns the sub-locality of the address , or null if it is unknown . 
Sets the sub-locality of the address to the given String , which may be null . 
Returns the thoroughfare name of the address , for example , `` 1600 Ampitheater Parkway '' , which may be null 
Sets the thoroughfare name of the address , which may be null . 
Returns the sub-thoroughfare name of the address , which may be null . 
Sets the sub-thoroughfare name of the address , which may be null . 
Returns the premises of the address , or null if it is unknown . 
Sets the premises of the address to the given String , which may be null . 
Returns the postal code of the address , for example `` 94110 '' , or null if it is unknown . 
Sets the postal code of the address to the given String , which may be null . 
Returns the country code of the address , for example `` US '' , or null if it is unknown . 
Sets the country code of the address to the given String , which may be null . 
Returns the localized country name of the address , for example `` Iceland '' , or null if it is unknown . 
Sets the country name of the address to the given String , which may be null . 
Returns true if a latitude has been assigned to this Address , false otherwise . 
Returns the latitude of the address if known . 
Sets the latitude associated with this address . 
Removes any latitude associated with this address . 
Returns true if a longitude has been assigned to this Address , false otherwise . 
Returns the longitude of the address if known . 
Sets the longitude associated with this address . 
Removes any longitude associated with this address . 
Returns the phone number of the address if known , or null if it is unknown . 
Sets the phone number associated with this address . 
Returns the public URL for the address if known , or null if it is unknown . 
Sets the public URL associated with this address . 
Returns additional provider-specific information about the address as a Bundle . 
Sets the extra information associated with this fix to the given Bundle . 
Returns false otherwise . 
adds a listener to receive the notification when the country is detected or changed . 
Returns a constant indicating the desired bearing accuracy . 
Returns a constant indicating the desired power requirement . 
Returns whether the provider is allowed to incur monetary cost . 
Returns whether the provider must provide altitude information . 
Returns whether the provider must provide speed information . 
Returns whether the provider must provide bearing information . 
Returns true if the Geocoder methods getFromLocation and getFromLocationName are implemented . 
Returns an array of Addresses that are known to describe the area immediately surrounding the given latitude and longitude . Returns null or empty list if no matches were found or there is no backend service available . 
Returns an array of Addresses that are known to describe the named location , which may be a place name such as `` Dalvik , Iceland '' , an address such as `` 1600 Amphitheatre Parkway , Mountain View , CA '' , an airport code such as `` SFO '' , etc. . Returns null or empty list if no matches were found or there is no backend service available . 
Returns an array of Addresses that are known to describe the named location , which may be a place name such as `` Dalvik , Iceland '' , an address such as `` 1600 Amphitheatre Parkway , Mountain View , CA '' , an airport code such as `` SFO '' , etc. . Returns null or empty list if no matches were found or there is no backend service available . 
returns the Geocoder 's locale 
returns the package name of the Geocoder 's client 
Sets all contents to the values stored in the provided object .  
Gets the leap second associated with the clock 's time . 
Sets the leap second associated with the clock 's time .  
Gets the GNSS receiver internal hardware clock value in nanoseconds .  
Sets the GNSS receiver internal clock in nanoseconds .  
Sets the full bias in nanoseconds .  
Gets the clock 's sub-nanosecond bias .  
Sets the sub-nanosecond bias .  
Gets the clock 's Drift in nanoseconds per second . 
Sets the clock 's Drift in nanoseconds per second .  
Gets count of hardware clock discontinuities . 
Sets count of last hardware clock discontinuity .  
Sets all contents to the values stored in the provided object .  
Gets the satellite ID .  
Sets the Satellite ID .  
Gets the constellation type . 
Sets the constellation type .  
Gets the time offset at which the measurement was taken in nanoseconds . 
Sets the time offset at which the measurement was taken in nanoseconds .  
Gets per-satellite sync state . 
Sets the sync state .  
Gets a string representation of the ` sync state ' . 
Gets the received GNSS satellite time , at the measurement time , in nanoseconds . 
Sets the received GNSS time in nanoseconds .  
Gets the Carrier-to-noise density in dB-Hz . 
Sets the carrier-to-noise density in dB-Hz .  
Gets the Pseudorange rate at the timestamp in m/s . 
Sets the pseudorange rate at the timestamp in m/s .  
Gets ` Accumulated Delta Range ' state . 
Sets the ` Accumulated Delta Range ' state .  
Gets a string representation of the ` Accumulated Delta Range state ' . 
Gets the accumulated delta range since the last channel reset , in meters . 
Sets the accumulated delta range in meters .  
Gets the carrier frequency at which codes and messages are modulated . 
Sets the number of full carrier cycles between the satellite and the receiver .  
Gets the RF phase detected by the receiver . 
Sets the RF phase detected by the receiver .  
Gets a value indicating the ` multipath ' state of the event . 
Sets the ` multi-path ' indicator .  
Gets a string representation of the ` multi-path indicator ' . 
Gets the GNSS receiver clock information associated with the measurements for the current event . 
Gets a read-only collection of measurements associated with the current event . 
Returns the latest collected GNSS Navigation Message . 
Returns the latest status of the GNSS Navigation Messages sub-system . 
Sets all contents to the values stored in the provided object .  
Gets the type of the navigation message contained in the object . 
Sets the type of the navigation message .  
Gets a string representation of the ` type ' . 
Gets the satellite ID .  
Sets the satellite ID .  
Gets the Message identifier .  
Sets the Message Identifier .  
Sets the Sub-message identifier .  
Gets the data of the reported GPS message . 
Sets the data associated with the Navigation Message .  
Gets the Status of the navigation message contained in the object . 
Sets the status of the navigation message .  
Gets a string representation of the ` status ' . 
Returns the latest collected GNSS Navigation Message . 
Returns the latest status of the GNSS Navigation Messages sub-system . 
Gets the total number of satellites in satellite list . 
Gets the identification number for the satellite at the specific index . 
Sets all contents to the values stored in the provided object . 
Sets the type of time reported . 
Gets a string representation of the ` type ' . 
Gets the leap second associated with the clock 's time . 
Sets the leap second associated with the clock 's time . 
Gets the GPS receiver internal clock value in nanoseconds . 
Sets the GPS receiver internal clock in nanoseconds . 
Sets the full bias in nanoseconds . 
Gets the clock 's sub-nanosecond bias . 
Sets the sub-nanosecond bias . 
Gets the clock 's Drift in nanoseconds per second . 
Sets the clock 's Drift in nanoseconds per second . 
Sets all contents to the values stored in the provided object . 
Gets the time offset at which the measurement was taken in nanoseconds . 
Sets the time offset at which the measurement was taken in nanoseconds . 
Gets per-satellite sync state . 
Sets the sync state . 
Gets a string representation of the ` sync state ' . 
Gets the received GPS Time-of-Week at the measurement time , in nanoseconds . 
Sets the received GPS time-of-week in nanoseconds . 
Gets the Carrier-to-noise density in dB-Hz . 
Sets the carrier-to-noise density in dB-Hz . 
Gets the Pseudorange rate at the timestamp in m/s . 
Sets the pseudorange rate at the timestamp in m/s . 
Gets ` Accumulated Delta Range ' state . 
Sets the ` Accumulated Delta Range ' state . 
Gets a string representation of the ` Accumulated Delta Range state ' . 
Gets the accumulated delta range since the last channel reset , in meters . 
Sets the accumulated delta range in meters . 
Gets the best derived pseudorange by the chipset , in meters . 
Sets the Pseudo-range in meters . 
Gets the fraction of the current C/A code cycle . 
Sets the Code-phase in chips . 
Gets the carrier frequency at which codes and messages are modulated , it can be L1 or L2 . 
Sets the number of full carrier cycles between the satellite and the receiver . 
Gets the RF phase detected by the receiver . 
Sets the RF phase detected by the receiver . 
Gets a value indicating the ` loss of lock ' state of the event . 
Sets the ` loss of lock ' status . 
Gets a string representation of the ` loss of lock ' . 
Sets the bit number within the broadcast frame . 
Gets the elapsed time since the last received bit in milliseconds . 
Sets the elapsed time since the last received bit in milliseconds . 
Gets the Doppler Shift in Hz . 
Sets the Doppler shift in Hz . 
Gets a value indicating the ` multipath ' state of the event . 
Sets the ` multi-path ' indicator . 
Gets a string representation of the ` multi-path indicator ' . 
Gets the Elevation in degrees . 
Sets the Elevation in degrees . 
Gets the azimuth in degrees . 
Sets the Azimuth in degrees . 
Gets a flag indicating whether the GPS represented by the measurement was used for computing the most recent fix . 
Sets the Used-in-Fix flag . 
Returns the latest collected GPS Measurements . 
Returns the latest status of the GPS Measurements sub-system . 
Gets a read-only collection of measurements associated with the current event . 
Sets all contents to the values stored in the provided object . 
Gets the type of the navigation message contained in the object . 
Sets the type of the navigation message . 
Gets a string representation of the ` type ' . 
Gets the Pseudo-random number . 
Sets the Pseud-random number . 
Gets the Message Identifier . 
Sets the Message Identifier . 
Gets the Sub-message Identifier . 
Sets the Sub-message identifier . 
Gets the data associated with the Navigation Message . 
Sets the data associated with the Navigation Message . 
Gets the Status of the navigation message contained in the object . 
Sets the status of the navigation message . 
Gets a string representation of the ` status ' . 
Returns the latest collected GPS Navigation Message . 
Returns the latest status of the GPS Navigation Messages sub-system . 
Returns the signal to noise ratio for the satellite . 
Returns the elevation of the satellite in degrees . 
Returns the azimuth of the satellite in degrees . 
Returns true if the GPS engine has ephemeris data for the satellite . 
Returns true if the GPS engine has almanac data for the satellite . 
Returns true if the satellite was used by the GPS engine when calculating the most recent GPS fix . 
Returns the time required to receive the first fix since the most recent restart of the GPS engine . 
Sets the contents of the location to the values from the given location . 
Returns the approximate distance in meters between this location and the given location . 
Returns the approximate initial bearing in degrees East of true North when traveling along the shortest path between this location and the given location . 
Returns the name of the provider that generated this fix . 
Sets the name of the provider that generated this fix . 
returns the UTC time of this fix , in milliseconds since January 1 , 1970 . 
sets the UTC time of this fix , in milliseconds since January 1 , 1970 . 
returns the time of this fix , in elapsed real-time since system boot . 
sets the time of this fix , in elapsed real-time since system boot . 
gets the latitude , in degrees . 
sets the latitude , in degrees . 
gets the longitude , in degrees . 
sets the longitude , in degrees . 
gets the altitude if available , in meters above the WGS 84 reference ellipsoid . 
sets the altitude , in meters above the WGS 84 reference ellipsoid . 
removes the altitude from this location . 
gets the speed if it is available , in meters/second over ground . 
sets the speed , in meters/second over ground . 
removes the speed from this location . 
gets the bearing , in degrees . 
sets the bearing , in degrees . 
removes the bearing from this location . 
gets the estimated accuracy of this location , in meters . 
sets the estimated accuracy of this location , meters .  
removes the accuracy from this location . 
returns true if this Location object is complete . 
Returns additional provider-specific information about the location fix as a Bundle . 
Sets the extra information associated with this fix to the given Bundle . 
Returns true if the Location came from a mock provider . 
Returns a list of the names of all known location providers . 
Returns a list of the names of location providers . 
Returns the information associated with the location provider of the given name , or null if no provider exists by that name . 
Returns a list of the names of LocationProviders that satisfy the given criteria , or null if none do . 
Returns the name of the provider that best meets the given criteria . 
Removes all location updates for the specified LocationListener . 
Removes all location updates for the specified pending intent . 
adds a geofence with the specified LocationRequest quality of service . 
Removes the proximity alert with the given PendingIntent . 
removes a single geofence . 
removes all geofences registered to the specified pending intent . 
Returns the current enabled/disabled status of the given provider . 
gets the last known location . 
Returns a Location indicating the data from the last known location fix obtained from the given provider . 
Creates a mock location provider and adds it to the sets of active providers . 
Removes the mock location provider with the given name . 
Sets a mock location for the given provider . 
Removes any mock location associated with the given provider . 
Sets a mock enabled value for the given provider . 
Removes any mock enabled value associated with the given provider . 
Sets mock status values for the given provider . 
Removes any mock status values associated with the given provider . 
Adds a GPS status listener . 
Removes a GPS status listener . 
Removes a GNSS status listener . 
Removes a GNSS status listener . 
Adds an NMEA listener . 
Removes an NMEA listener . 
Adds an NMEA listener . 
Adds an NMEA listener . 
Removes an NMEA listener . 
Adds an NMEA listener . 
Adds an NMEA listener . 
Removes an NMEA listener . 
Returns the system information of the GPS hardware .  
Returns the name of this provider . 
Returns true if this provider meets the given criteria , false otherwise . 
Returns true if the use of this provider may result in a monetary charge to the user , false if use is free . 
Returns true if the provider is able to provide altitude information , false otherwise . 
Returns true if the provider is able to provide speed information , false otherwise . 
Returns true if the provider is able to provide bearing information , false otherwise . 
Returns the power requirement for this provider . 
Returns a constant describing horizontal accuracy of this provider . 
creates a location request with default parameters . 
sets the quality of the request . 
gets the quality of the request . 
sets the desired interval for active location updates , in milliseconds . 
gets the desired interval of this request , in milliseconds . 
gets the fastest interval of this request , in milliseconds . 
sets the duration of this request , in milliseconds . 
sets the request expiration time , in millisecond since boot . 
gets the request expiration time , in milliseconds since boot . 
sets the number of location updates . 
gets the number of updates requested . 
Sets the WorkSource to use for power blaming of this location request .  
Sets whether or not this location request should be hidden from AppOps . 
Sets the NI notification . 
Gets the binder needed to interact with proxy provider in the platform . 
Gets the binder needed to interact with proxy provider in the platform . 
Returns the version of the FLP HAL . 
Gets the Binder associated with the provider . 
Sets the FusedLocationHardware instance in the provider . . 
Returns the Binder interface for the geocode provider . 
Returns the Binder interface for the geofence provider . 
Returns a information on the status of this provider . 
Returns the time at which the status was last updated . 
gets the desired interval of this request , in milliseconds . 
gets the fastest interval of this request , in milliseconds . 
gets the quality of the request . 
gets the minimum distance between location updates , in meters . 
returns the content type . 
returns the usage . 
returns the capture preset . 
returns the flags . 
returns all the flags , even the non-public ones . 
returns the Bundle of data . 
returns the sets of tags . 
Sets the attribute describing what is the intended use of the the audio signal , such as alarm or ringtone . 
Sets the attribute describing the content type of the audio signal , such as speech , or music . 
Sets the combination of flags . 
Adds a Bundle of data @param bundle a non-null Bundle @return the same builder instance 
adds a custom tag stored as a string @param tag @return the same Builder instance . 
Sets attributes as inferred from the legacy stream types . 
Sets the capture preset . 
gets the device address . 
Returns the audio device port this AudioDevicePortConfig is issued from . 
returns the input channel mask corresponding to an output channel mask . 
returns the number of channels from an input channel mask @param mask a combination of the CHANNEL_IN _ definitions , even CHANNEL_IN_DEFAULT @return number of channels for the mask 
returns the number of channels from an output channel mask @param mask a combination of the CHANNEL_OUT _ definitions , but not CHANNEL_OUT_DEFAULT @return number of channels for the mask 
returns a channel mask ready to be used by native code @param mask a combination of the CHANNEL_OUT _ definitions , but not CHANNEL_OUT_DEFAULT @return a native channel mask 
returns a java output channel mask @param mask a native channel mask @return a combination of the CHANNEL_OUT _ definitions 
Returns an array of public encoding values extracted from an array of encoding values .  
returns the encoding .  
returns the sample rate . 
returns the channel mask .  
returns the channel index mask .  
returns the channel count . 
Sets the data encoding format . 
Sets the channel position mask .  
Sets the channel index mask .  
Sets the sample rate . 
Creates an AcousticEchoCanceler and attaches it to the AudioRecord on the audio session specified . 
gets the effect descriptor . 
sets effect parameter . 
sets effect parameter . 
sets effect parameter . 
sets effect parameter . 
sets effect parameter . 
sets effect parameter . 
sets effect parameter . 
gets effect parameter . 
gets effect parameter . 
gets effect parameter .  
gets effect parameter .  
gets effect parameter .  
gets effect parameter .  
gets effect parameter . 
Returns effect unique identifier . 
Returns effect enabled state @return true if the effect is enabled , false otherwise . 
Sets the listener AudioEffect notifies when the effect engine is enabled or disabled . 
Sets the listener AudioEffect notifies when the effect engine control is taken or returned . 
Sets the listener AudioEffect notifies when a parameter is changed . 
Creates an AutomaticGainControl and attaches it to the AudioRecord on the audio session specified . 
Sets the strength of the bass boost effect . 
Gets the current strength of the effect . 
Gets the bass boost properties . 
Sets the bass boost properties . 
Sets the master volume level of the environmental reverb effect . 
Gets the master volume level of the environmental reverb effect . 
Sets the volume level at 5 kHz relative to the volume level at low frequencies of the overall reverb effect . 
Gets the room HF level . 
Sets the time taken for the level of reverberation to decay by 60 dB . 
Gets the decay time . 
Sets the volume level of the early reflections . 
Gets the volume level of the early reflections . 
Sets the delay time for the early reflections . 
Gets the reflections delay . 
Sets the volume level of the late reverberation . 
Gets the reverb level . 
Sets the time between the first reflection and the reverberation . 
Gets the reverb delay . 
Sets the echo density in the late reverberation decay . 
Gets diffusion level .  
Gets the density level .  
Gets the environmental reverb properties . 
Sets the environmental reverb properties . 
Gets the number of frequency bands supported by the Equalizer engine . 
Sets the given equalizer band to the given gain value . 
Gets the gain sets for the given equalizer band . 
Gets the center frequency of the given band . 
Gets the frequency range of the given frequency band . 
Gets the band that has the most effect on the given frequency . 
Gets current preset . 
Sets the equalizer according to the given preset . 
Gets the total number of presets the equalizer supports . 
Gets the preset name based on the index . 
Gets the equalizer properties . 
Sets the equalizer properties . 
sets the target gain for the audio effect . 
returns the target gain . 
Gets the LoudnessEnhancer properties . 
Sets the LoudnessEnhancer properties . 
Creates a NoiseSuppressor and attaches it to the AudioRecord on the audio session specified . 
Gets current reverb preset . 
Gets the preset reverb properties . 
Sets the preset reverb properties . 
Sets the strength of the virtualizer effect . 
Gets the current strength of the effect . 
returns the virtualization mode being used , if any . 
Gets the virtualizer properties . 
Sets the virtualizer properties . 
gets current activation state of the visualizer . 
Returns the capture size range . 
Returns the maximum capture rate for the callback capture method . 
Returns current capture size . 
sets the type of scaling applied on the captured visualization data .  
Returns the current scaling mode on the captured visualization data .  
Sets the combination of measurement modes to be performed by this audio effect . 
Returns the sampling rate of the captured audio . 
Returns a waveform capture of currently playing audio content . 
Returns a frequency capture of currently playing audio content . 
gets the index of the parent gain . 
Returns the current ringtone mode . 
Returns the maximum volume index for a particular stream . 
Returns the minimum volume index for a particular stream . 
Returns the current volume index for a particular stream . 
gets last audible volume before stream was muted .  
gets the stream type whose volume is driving the UI sounds volume .  
Sets the ringer mode .  
Sets the volume index for a particular stream .   
Returns the current mute state for a particular stream . 
gets master mute state .  
Returns whether a particular type should vibrate according to user settings and the current ringer mode . 
Returns whether the user 's vibrate setting for a vibrate type .  
Sets the setting for when the vibrate type should vibrate . 
Sets the speakerphone on or off . 
Sets audio routing to the wired headset on or off . 
Sets the microphone mute on or off . 
Sets the audio mode . 
Returns the current audio mode . Returns the current current audio state from the HAL . 
Sets the audio routing for a specified mode @param mode audio mode to change route . sets bits indicate that route should be on @param mask bit vector of routes to change , created from one or more of ROUTE_xxx types . 
Returns the current audio routing bit vector for a specified mode . 
returns a new audio session identifier not associated with any player or effect . 
Sets a variable number of parameter values to audio hardware . 
Gets a variable number of parameter values from audio hardware . 
Returns the current active audio recording configurations of the device . 
returns true if the device code corresponds to an output device .  
returns true if the device code corresponds to an input device .  
returns the enabled devices for the specified output stream type . 
Returns the value of the property with the specified key . 
Returns the estimated latency for the given stream type in milliseconds .  
sets Hdmi Cec system audio mode .  
Returns true if Hdmi Cec system audio mode is supported .  
Returns a list of descriptors for all audio ports managed by the audio framework .   
Returns a list of descriptors for all audio ports managed by the audio framework as it was before the last update calback .  
creates a connection between two or more devices . 
sets the gain on the specified AudioPort . 
Returns the audio mix port this AudioMixPortConfig is issued from . 
gets the system unique patch ID . 
Sets the routing behavior for the mix . 
Sets the audio device used for playback . 
adds a rule for the selection of which streams are mixed together . 
adds a rule by exclusion for the selection of which streams are mixed together . 
adds a rule for the selection of which streams are mixed together .  
adds a rule by exclusion for the selection of which streams are mixed together .  
adds or exclude a rule for the selection of which streams are mixed together . 
adds or exclude a rule on AudioAttributes or integer property for the selection of which streams are mixed together . 
Sets the audio focus listener for the policy . 
Sets the audio policy status listener . 
Returns the current behavior for audio focus-related ducking . 
Sets the behavior for audio focus-related ducking . 
gets the system unique device ID . 
gets the audio port role 
gets the human-readable name of this port . 
gets the list of supported sampling rates Empty array if sampling rate is not relevant for this audio port 
gets the list of gain descriptors Empty array if this port does not have gain control 
gets the gain descriptor at a given index 
gets currently active configuration of this audio port . 
Returns the audio port this AudioPortConfig is issued from . 
Sets the format of the audio data to be captured . 
Returns the configured audio sink sample rate in Hz . 
Returns the audio recording source . 
Returns the configured audio data encoding .  
Returns the configured channel position mask .  
Returns the configured AudioRecord format . 
Returns the configured number of channels . 
Returns the state of the AudioRecord instance . 
Returns the recording state of the AudioRecord instance . 
Returns the frame count of the native AudioRecord buffer . 
Returns the notification marker position expressed in frames . 
Returns the notification update period expressed in frames . 
Returns the minimum buffer size required for the successful creation of an AudioRecord object , in byte units .    
Returns the audio session ID . 
Sets the listener the AudioRecord notifies when a previously sets marker is reached or for each periodic record head position update . 
Sets the listener the AudioRecord notifies when a previously sets marker is reached or for each periodic record head position update . 
Returns the audio source being used for the recording . 
Returns the audio format at which audio is recorded on this Android device .  
Returns the audio format at which the client application is recording audio .  
Returns information about the audio input device used for this recording . 
Sets the microphone mute on or off .  
returns true if any track playing on this stream is active . 
returns true if any track playing on this stream is active on a remote device . 
returns true if any recorder using this source is currently recording 
Returns a new unused audio session ID 
Sets a group generic audio configuration parameters .  
Gets a group generic audio configuration parameters .  
returns true if master mono is enabled . 
returns the platform type that this is running on . 
Returns the minimum gain value , which is the constant 0.0 . 
Returns the maximum gain value , which is greater than or equal to 1.0 . 
Returns the configured audio source sample rate in Hz . 
Returns the current playback sample rate rate in Hz . 
Returns the current playback parameters .  
Returns the configured audio data encoding .  
Returns the type of audio stream this AudioTrack is configured for . 
Returns the configured channel position mask . 
Returns the configured AudioTrack format . 
Returns the configured number of channels . 
Returns the state of the AudioTrack instance . 
Returns the playback state of the AudioTrack instance . 
Returns the effective size of the AudioTrack buffer that the application writes to .  
Returns the maximum size of the AudioTrack buffer in frames .  
Returns the frame count of the native AudioTrack buffer . 
Returns marker position expressed in frames . 
Returns the notification update period expressed in frames . 
Returns the playback head position expressed in frames . 
Returns this track 's estimated latency in milliseconds .  
Returns the number of underrun occurrences in the application-level write buffer since the AudioTrack was created . 
Returns the output sample rate in Hz for the specified stream type . 
Returns the audio session ID . 
Sets the listener the AudioTrack notifies when a previously sets marker is reached or for each periodic playback head position update . 
Sets the listener the AudioTrack notifies when a previously sets marker is reached or for each periodic playback head position update . 
Sets the specified left and right output gain values on the AudioTrack .  
Sets the specified output gain value on all channels of this track .  
Sets the playback sample rate for this track .  
Sets the playback parameters .   
Sets the position of the notification marker .  
Sets the period for the periodic notification event .  
Sets the playback head position within the static buffer .  
Sets the loop points and the loop count .  
Sets the initialization state of the instance . 
Sets the playback head position within the static buffer to zero , that is it rewinds to start of static buffer .  
Returns whether the browser is connected to the service . 
Gets the service component that the media browser is connected to . 
Gets the root id . 
Gets any extras for the media service . 
Gets the media session token associated with the media browser . 
Gets the flags of the item . 
Returns whether this item is browsable . 
Returns whether this item is playable . 
Returns the description of the media . 
Returns the media id for this item . 
returns true if this is the current ServiceConnection . 
Returns the camcorder profile for the first back-facing camera on the device at the given quality level . 
Returns the camcorder profile for the given camera at the given quality level . 
Returns true if camcorder profile exists for the first back-facing camera at the given quality level . 
Returns true if camcorder profile exists for the given camera at the given quality level . 
Returns the array of supported output file formats . 
Returns the capabilities of the supported video encoders . 
Returns the capabilities of the supported audio encoders . 
Returns the integer value of the specified tag . 
Returns the double value of the tag that is specified as rational or contains a double-formatted value . 
sets the value of the specified tag . 
removes any values of the specified tag . 
Returns true if the image file has a thumbnail . 
Returns false if the Exif tags are not available . 
returns the altitude in meters . 
Returns number of milliseconds since Jan. 1 , 1970 , midnight local time . Returns -1 if the date time information if not available .  
Returns number of milliseconds since Jan. 1 , 1970 , midnight UTC . Returns -1 if the date time information if not available .  
Gets the corresponding IFD group index of the given tag number for writing Exif Tags . 
Returns a confidence factor between 0 and 1 . 
Sets the position of the mid-point between the eyes . 
Returns the distance between the eyes . 
Returns the face 's pose . 
gets the format for this image . 
gets the timestamp associated with this frame .   
sets the timestamp associated with this frame .  
gets the crop rectangle associated with this frame . 
sets the crop rectangle associated with this frame . 
gets the array of pixel planes for this Image . 
creates a new reader for images of the desired size and format . 
returns the frame to the ImageReader for reuse . 
removes the ownership of this image from the ImageReader . 
returns the estimated native allocation size in bytes based on width , height , format , and number of images . 
creates a new ImageWriter . 
gets the ImageWriter format . 
creates the SurfacePlane object and fill the information 
Returns the maximum number of simultaneous MIDI tracks supported by JetPlayer 
sets to 0 for normal playback . 
sets to 0 for normal playback . 
Sets the listener JetPlayer notifies when a JET event is generated by the rendering and playback engine . 
Sets the listener JetPlayer notifies when a JET event is generated by the rendering and playback engine . 
creates a persistent input surface that can be used with codecs that normally have an input surface , such as video encoders . 
Returns true if the codec can not proceed further , but can be recovered by stopping , configuring , and starting again . 
sets the number of blocks to encrypt and skip in a sample encryption pattern . 
returns the number of blocks to skip in a sample encryption pattern . 
returns the number of blocks to encrypt in a sample encryption pattern . 
Returns the index of an input buffer to be filled with valid data or -1 if no such buffer is currently available . 
Returns the index of an output buffer that has been successfully decoded or one of the INFO _ constants . 
Returns the output format for a specific output buffer . 
Returns a writable Image object for a dequeued input buffer index to contain the raw input video frame . 
Returns a read-only ByteBuffer for a dequeued output buffer index . 
Returns a read-only Image object for a dequeued output buffer index that contains the raw video frame . 
gets the component name . 
Sets an asynchronous callback for actionable MediaCodec events . 
Sets an asynchronous callback for actionable MediaCodec events on the default looper . 
gets the codec info . 
sets the crop rectangle associated with this frame . 
Returns a MediaFormat object with default values for configurations that have defaults . 
Returns the mime type for which this codec-capability object was created . 
Returns the max number of the supported concurrent codec instances . 
Returns the range of supported bitrates in bits/second . 
Returns the array of supported sample rates if the codec supports only discrete values . 
Returns the array of supported sample rate ranges . 
Returns the maximum number of input channels supported . 
Returns the range of supported video widths . 
Returns the range of supported video heights . 
returns the upper limit on the smaller dimension of width or height .  
Returns the range of supported frame rates . 
Returns the range of supported video widths for a video height . 
Returns the range of supported video heights for a video width @param width the width of the video 
Returns the range of supported video frame rates for a video size . 
Returns the range of achievable video frame rates for a video size . 
Returns the supported range of quality values .  
Returns the supported range of encoder complexity values . 
Returns the media id or null .  
Returns a title suitable for display or null . 
Returns a subtitle suitable for display or null . 
Returns a description suitable for display or null . 
Returns a bitmap icon suitable for display or null . 
Returns a Uri for an icon suitable for display or null . 
Returns any extras that were added to the description . 
Returns a Uri representing this content or null . 
Sets the media id . 
Sets the title . 
Sets the subtitle . 
Sets the description . 
Sets the icon . 
Sets the icon uri . 
Sets a bundle of extras . 
Sets the media uri . 
Returns the id for the key 
gets the opaque message data 
gets the default URL to use when sending the key request message to a server , if known . 
removes the current keys from a session . 
gets the default URL to use when sending the provision request message to a server , if known . 
removes all secure stops without requiring interaction with the server . 
sets a DRM engine plugin String property value . 
sets a DRM engine plugin byte array property value . 
returns true if the signatures match , false if they do no . 
gets the default URL to use when sending the certificate request message to a server , if known . 
gets the wrapped private key data 
gets the PEM-encoded certificate chain 
Sets the data source as a content Uri . 
gets the PSSH info if present . 
gets the track format at the specified index . 
Returns the current sample 's presentation time in microseconds . 
Returns the current sample 's flags . 
Returns an estimate of how much data is presently cached in memory expressed in microseconds . 
Returns true iff a key of the given name exists in the format . 
Returns the value of an integer key . 
Returns the value of an integer key , or the default value if the key is missing or is for another type value .  
Returns the value of a long key . 
Returns the value of a float key . 
Returns the value of a string key . 
Returns the value of a ByteBuffer key . 
Sets the value of an integer key . 
Sets the value of a long key . 
Sets the value of a float key . 
Sets the value of a string key . 
Sets the value of a ByteBuffer key . 
Creates a minimal audio format . 
Creates a minimal subtitle format . 
Creates a minimal video format . 
returns true iff header is internal 
Returns true if the given key is contained in the metadata @param key a String key @return true if the key exists in this metadata , false otherwise 
Returns the value associated with the given key , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the text value associated with the given key as a String , or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key . 
Returns the value associated with the given key , or 0L if no long exists for the given key . 
Returns the number of fields in this metadata . 
Returns a sets containing the Strings used as keys in this metadata . 
Returns a simple description of this metadata for display purposes . 
Adds textual information . 
Adds numerical information . 
Adds information stored as an instance . 
Returns the long value for the key . 
Sets the data source as a content Uri . 
Sets the orientation hint for output video playback . 
Adds a track with the specified format . 
Sets video scaling mode . 
Sets the data source as a content Uri . 
Sets the data source as a content Uri . 
sets the low-level power management behavior for this MediaPlayer . 
Returns the width of the video . 
Returns the height of the video . 
Sets playback rate and audio mode .  
Gets the playback params , containing the current playback rate . 
Sets A/V sync mode . 
Gets the A/V sync mode . 
Gets the current playback position . 
Gets the duration of the file . 
Gets the media metadata .   
sets a filter for the metadata update notification and update retrieval . 
Sets the audio stream type for this MediaPlayer .  
Sets the parameter indicated by key . 
Sets the audio attributes for this MediaPlayer .  
Sets the player to be looping or non-looping . 
Sets the audio session ID . 
Returns the audio session ID . 
Sets the send level of the player to the attached auxiliary effect .  
Gets the track type . 
Gets the language code of the track . 
Returns an array of track information . 
Adds an external timed text source file .  
Sets the target UDP re-transmit endpoint for the low level player . 
Gets the surface to record from when using SURFACE video source . 
Sets the audio source to be used for recording . 
Gets the maximum value for audio sources . 
Sets the video source to be used for recording . 
sets video frame capture rate . 
Sets the orientation hint for output video playback . 
Sets the format of the output file produced during recording . 
Sets the width and height of the video to be captured . 
Sets the frame rate of the video to be captured . 
Sets the audio encoder to be used for recording . 
Sets the video encoder to be used for recording . 
Sets the audio sampling rate for recording . 
Sets the number of audio channels for recording . 
Sets the audio encoding bit rate for recording . 
Sets the video encoding bit rate for recording . 
Sets the path of the output file to be produced . 
Returns the maximum absolute amplitude that was sampled since the last call to this method . 
Gets the default route for playing media content on the system . 
returns the currently selected route for any of the given types @param type route types @return the selected route 
Returns true if there is a route that matches the specified types . 
adds a callback to listen to events about specific kinds of media routes . 
adds a callback to listen to events about specific kinds of media routes . 
removes the specified callback . 
adds an app-specified route for media to the MediaRouter . 
removes an app-specified route for media from the MediaRouter . 
removes all app-specified routes from the MediaRouter . 
returns the route at the specified index . 
creates a new user route that may be modified and registered for use by the application . 
creates a new route category . 
creates a new route category . 
Gets the user-visible name of the route . 
returns the properly localized/resource user-visible name of this route . 
Gets the user-visible description of the route . 
sets this route 's status by predetermined status code . 
Gets the type of the receiver device associated with this route . 
gets the icon representing this route . 
sets an application-specific tag object for this route . 
returns the current volume for this route . 
Returns true if this route is enabled and may be selected . 
Returns true if the route is in the process of connecting and is not yet ready for use . 
sets the user-visible name of this route . 
sets the user-visible name of this route . 
sets the user-visible description of this route . 
sets the current user-visible status for this route . 
sets the RemoteControlClient responsible for reporting playback info for this user route . 
sets an icon that will be used to represent this route . 
sets an icon that will be used to represent this route . 
sets a callback to be notified of volume update requests @param vcb 
adds a route to this group . 
adds a route to this group before the specified index . 
removes a route from this group . 
removes the route at the specified index from this group . 
returns the route in this group at the specified index @param index Index to fetch @return The route at index 
sets an icon that will be used to represent this group . 
sets an icon that will be used to represent this group . 
returns the properly localized/configuration dependent name of this RouteCategory . 
returns the current list of routes in this category that have been added to the MediaRouter . 
returns whether or not this category supports grouping . 
returns the number of matching file/directory names , starting from the right 
Returns whether we are connected to the media scanner service @return true if we are connected , false otherwise 
Sets an asynchronous callback for actionable MediaSync events . 
Sets an asynchronous callback for error events . 
Sets the output surface for MediaSync . 
Sets the audio track for MediaSync . 
Sets A/V sync mode . 
Gets the A/V sync mode . 
gets current playback position . 
Creates a synchronization event of the sepcified type . 
Sets the event source audio session ID . 
Gets the synchronization event type . 
Gets the synchronization event audio session ID . 
gets the current presentation time . 
gets the media time of the anchor in microseconds . 
gets the rate of the media clock in relation to the system time . 
gets the boolean value indicated by key 
Returns the port number of the port @return the port number 
Returns the name of the port , or empty string if the port has no name @return the port name 
Returns the type of the device . 
Returns the ID of the device . 
Returns the device 's number of input ports . 
Returns the device 's number of output ports . 
Returns information about the device 's ports . 
Returns true if the device is private . 
Returns true if an input port is open . 
Returns the number of clients currently connected to the specified output port . 
Returns the port number of this port @return the port 's port number 
Gets the list of all connected MIDI devices . 
Returns the port number of this port @return the port 's port number 
Returns the maximum size of a message this receiver can receive . 
Returns 0 if the magic is not available . 
Sets the audio fallback mode . 
Sets the audio stretch mode . 
Sets the pitch factor . 
Sets the speed factor . 
Creates an AudioRecord to capture audio played back by the system .  
gets the underlying IMediaProjection .  
removes a MediaProjection monitoring callback .  
returns a Rating instance with no rating . creates and returns a new Rating instance with no rating known for the given rating style . 
returns a Rating instance with a heart-based rating . 
returns a Rating instance with a thumb-based rating . 
returns a Rating instance with a star-based rating . creates and returns a new Rating instance with one of the star-base rating styles and the given integer or fractional number of stars . 
returns a Rating instance with a percentage-based rating . 
returns whether there is a rating value available . 
returns the rating style . 
returns whether the rating is `` heart selected '' . 
returns whether the rating is `` thumb up '' . 
returns the star-based rating value . 
returns the percentage-based rating value . 
Adds textual information to be displayed . 
Adds numerical information to be displayed . 
Sets the album / artwork picture to be displayed on the remote control . 
Sets the current playback state . 
Sets the current playback state and the matching media position for the current playback speed . 
Sets the flags for the media transport control buttons that this client supports . 
Sets the listener to be called whenever the metadata is updated . 
Sets the listener to be called whenever the media playback position is requested to be updated . 
Sets the listener to be called whenever the media current playback position is needed . 
Returns whether , for the given playback state , the playback position is expected to be changing . 
returns the estimated playback position of the current media track or a negative value if not available . 
Sets the new playback position . 
sets the maximum artwork image dimensions to be received in the metadata . 
sets the playback position synchronization mode . 
Sets the stream type where this ringtone will be played .  
Gets the stream type where this ringtone will be played .   
Sets the player to be looping or non-looping . 
Sets the volume on this player . 
Returns a human-presentable title for ringtone . 
Returns whether DRM ringtones will be included . 
Sets whether to include DRM ringtones . 
Returns a valid ringtone URI . 
gets the current playback state for this session . 
gets the current metadata for this session . 
gets the current play queue for this session if one is sets . 
gets the queue title for this session . 
gets the extras for this session . 
gets the rating type supported by the session . 
gets the flags for this session . 
gets the current playback info for this session . 
gets an intent for launching UI associated with this session if one exists . 
gets the token for the session this is connected to . 
sets the volume of the output this session is playing on . 
gets the session owner 's package name . 
gets the session 's tag for debugging purposes .  
gets the type of playback which affects volume handling . 
gets the audio attributes for this session . 
gets the type of volume control that can be used . 
gets the maximum volume that may be sets for this session . 
gets the current volume for this session . 
sets the callback to receive updates for the MediaSession . sets the callback to null to stop receiving updates . 
sets the callback to receive updates for the MediaSession . sets the callback to null to stop receiving updates . 
sets an intent for launching UI for this Session . 
sets a pending intent for your media button receiver to allow restarting playback after the session has been stopped . 
sets any flags for the session . 
sets the attributes for this session 's audio . 
sets if this session is currently active and ready to receive commands . 
gets the current active state of this session . 
gets a controller for this session . 
sets the title of the play queue . 
sets the style of rating used by this session . 
Returns the name of the package that sent the last media button , transport control , or command from controllers and the system .  
returns true if this is considered an active playback state .  
gets the description for this item . 
gets the queue id for this item . 
creates a new session in the system and gets the binder for it . 
gets a list of controllers for all ongoing sessions . 
gets active sessions for a specific user .  
adds a listener to be notified when the list of active sessions changes.This requires the android.Manifest.permission.MEDIA _ CONTENT_CONTROL permission be held by the calling app . 
adds a listener to be notified when the list of active sessions changes.This requires the android.Manifest.permission.MEDIA _ CONTENT_CONTROL permission be held by the calling app . 
adds a listener to be notified when the list of active sessions changes.This requires the android.Manifest.permission.MEDIA _ CONTENT_CONTROL permission be held by the calling app .  
sets the remote volume controller to receive volume updates on .  
gets the current state of playback . 
gets the current playback position in ms. 
gets the current buffered position in ms. This is the farthest playback point that can be reached from the current position using only buffered content . 
gets the current playback speed as a multiple of normal playback . 
gets the current actions available on this session . 
gets the list of custom actions . 
gets a user readable error message . 
gets the elapsed real time at which position was last updated . 
gets the id of the currently active item in the queue . 
gets any custom extras that were sets on this playback state . 
Returns the display name of this action . 
Returns extras which provide additional application-specific information about the action , or null if none . 
sets the current state of playback . 
sets the current state of playback . 
sets the current actions available on this session . 
adds a custom action to the playback state . 
adds a custom action to the playback state . 
sets the current buffered position in ms. This is the farthest playback point that can be reached from the current position using only buffered content . 
sets the active item in the play queue by specifying its id . 
sets a user readable error message . 
sets any custom extras to be included with the playback state . 
Returns true if the sound is successfully unloaded , false if the sound was already unloaded . 
Returns a non-zero streamID if successful , zero if it fails . 
sets stream volume . Sets the volume on the stream specified by the streamID . 
sets loop mode . 
Sets the callback hook for the OnLoadCompleteListener . 
Sets the maximum of number of simultaneous streams that can be played simultaneously . 
Gets the raw audio that triggered the keyphrase . 
Gets the session ID to start a capture from the DSP .  
Returns the sound trigger model represented by the given UUID . 
Adds a new , external subtitle track to the manager . 
Sets the widget 's callback , which is used to send updates when the rendered data has changed . 
Sets the widget 's size . 
Sets whether the widget should draw subtitles . 
Sets the audio adjust mode . 
Sets the sync source . 
Sets the tolerance . 
Sets the video frame rate hint to be used . 
creates a video thumbnail for a video . 
Creates a centered bitmap of the desired size . 
Creates a centered bitmap of the desired size . 
Creates a bitmap by either downsampling from the thumbnail in EXIF or the full image . 
gets the characters in the timed text . 
gets the rectangle area or region for rendering the timed text as specified by a Rect object . 
Returns the audio session ID . 
Returns the timed text for the given time period . 
Returns a TTML fragment string for the given time period . 
Returns the adapter ID of DVB device , in terms of enumerating the DVB device adapters installed in the system . 
Returns the device ID of DVB device , in terms of enumerating the DVB devices attached to the same device adapter . 
Creates a TvContentRatingSystemInfo object with given resource ID and receiver info . 
Returns the URI to the XML resource that defines the TV content rating system . 
creates a new instance of the TvInputInfo class , instantiating it from the given Context , ResolveInfo , and HdmiDeviceInfo .  
creates a new instance of the TvInputInfo class , instantiating it from the given Context , ResolveInfo , and HdmiDeviceInfo . 
creates a new instance of the TvInputInfo class , instantiating it from the given Context , ResolveInfo , and TvInputHardwareInfo .  
creates a new instance of the TvInputInfo class , instantiating it from the given Context , ResolveInfo , and TvInputHardwareInfo . 
Returns a unique ID for this TV input . 
Returns the parent input ID . 
Returns the information of the service that implements this TV input . 
Returns the component of the service that implements this TV input .  
Returns an intent to start the setup activity for this TV input . 
Returns an intent to start the settings activity for this TV input . 
Returns the type of this TV input . 
Returns the number of tuners this TV input has . 
Returns domain-specific extras associated with this TV input . 
Returns the HDMI device information of this TV input .  
Sets the icon .  
Sets the icon for a given input state .  
Sets the label .  
Sets the label .  
Sets the HdmiDeviceInfo .  
Sets the parent ID .  
Sets the TvInputHardwareInfo .  
Sets the tuner count . 
Sets whether this TV input can record TV programs or not . 
Sets domain-specific extras associated with this TV input . 
Returns a sets of TV input IDs which are marked as hidden by user in the settings . 
Returns a map of TV input ID/custom label pairs sets by the user in the settings . 
Returns the complete list of TV inputs on the system . 
Returns the state of a given TV input . 
Returns the user 's parental controls enabled state . 
Sets the user 's parental controls enabled state . 
Returns the list of blocked content ratings .  
Adds a user blocked content rating . 
Removes a user blocked content rating . 
Returns the list of all TV content rating systems defined .  
Returns the TvStreamConfig list of the given TV input .  
Returns true if there is only a single TV input session .  
Returns a list of TvInputHardwareInfo objects representing available hardware .  
Returns the list of currently available DVB devices on the system .  
Sets this as the main session . 
Sets the relative stream volume of this session to handle a change of audio focus . 
Returns the list of tracks for a given type . 
Returns the selected track for a given type . 
Returns true if there is an update . 
Returns true if there is an update . 
Returns the new/updated video track that contains new video size information . Returns null if there is no video track to notify . 
Creates an overlay view . 
Removes the current overlay view . 
Sets the current session as the main session . 
Sets the relative stream volume of the current TV input session . 
Returns the start position for time shifting , in milliseconds since the epoch . 
Returns the current position for time shifting , in milliseconds since the epoch . 
Creates an overlay view . 
Removes the current overlay view . 
Returns the hardware TV input ID the external device is connected to . 
Returns the type of the track . 
Returns the ID of the track . 
Returns the language information encoded by either ISO 639-1 or ISO 639-2 / T . 
Returns a user readable description for the current track . 
Returns the audio channel count . 
Returns the audio sample rate , in the unit of Hz . 
Returns the width of the video , in the unit of pixels . 
Returns the height of the video , in the unit of pixels . 
Returns the extra information about the current track . 
Sets the language information of the current track . 
Sets a user readable description for the current track . 
Sets the audio channel count . 
Sets the audio sample rate , in the unit of Hz . 
Sets the width of the video , in the unit of pixels . 
Sets the height of the video , in the unit of pixels . 
Sets the extra information about the current track . 
Sets the callback to be invoked when an event is dispatched to this TvView . 
Sets the relative stream volume of this TvView . 
Returns the list of tracks . 
Returns the ID of the selected track for a given type . 
Sets the callback to be invoked when the time shift position is changed . 
Returns the intersection of two sets of non-intersecting ranges @param one a sorted sets of non-intersecting ranges in ascending order @param another another sorted sets of non-intersecting ranges in ascending order @return the intersection of the two sets , sorted in ascending order 
Returns the index of the range that contains a value in a sorted array of distinct ranges . 
Returns greatest common divisor 
Returns least common multiple 
gets the volume control type that this volume provider uses . 
gets the maximum volume this provider allows . 
Gets the current volume . 
Sets a callback to receive volume changes .  
removes inactive cues and regions . 
removes all inactive tracks from this region . 
Sets the order of this cue in the list of active cues . 
returns true if we have no special subdirectories 
returns true if we have no special subdirectories 
returns true if the path is in the storage root 
Returns the USB ID of the USB device . 
Returns the list of object handles for all objects on the given storage unit , with the given format and parent . 
Returns the data for an object as a byte array . 
Returns the thumbnail data for an object as a byte array . 
Returns object size in 64-bit integer .  
Returns the manufacturer 's name for the MTP device @return the manufacturer name 
Returns the model name for the MTP device @return the model name 
Returns the version string the MTP device @return the device version 
Returns the unique serial number for the MTP device @return the serial number 
Returns operation code supported by the device . 
Returns event code supported by the device . 
Returns if the given operation is supported by the device or not . 
Returns if the given event is supported by the device or not . 
Returns if the code sets contains code .  
Returns event code of MTP event .  
Returns the object handle for the MTP object @return the object handle 
Returns the storage ID for the MTP object 's storage unit @return the storage ID 
Returns the format code for the MTP object @return the format code 
Returns the size of the MTP object @return the object size 
Returns the size of the MTP object @return the object size 
Returns the format code for the MTP object 's thumbnail Will be zero for objects with no thumbnail @return the thumbnail format code 
Returns the size of the MTP object 's thumbnail Will be zero for objects with no thumbnail @return the thumbnail size 
Returns the size of the MTP object 's thumbnail Will be zero for objects with no thumbnail @return the thumbnail size 
Returns the width of the MTP object 's thumbnail in pixels Will be zero for objects with no thumbnail @return the thumbnail width 
Returns the width of the MTP object 's thumbnail in pixels Will be zero for objects with no thumbnail @return the thumbnail width 
Returns the height of the MTP object 's thumbnail in pixels Will be zero for objects with no thumbnail @return the thumbnail height 
Returns the height of the MTP object 's thumbnail in pixels Will be zero for objects with no thumbnail @return the thumbnail height 
Returns the width of the MTP object in pixels Will be zero for non-image objects @return the image width 
Returns the width of the MTP object in pixels Will be zero for non-image objects @return the image width 
Returns the height of the MTP object in pixels Will be zero for non-image objects @return the image height 
Returns the height of the MTP object in pixels Will be zero for non-image objects @return the image height 
Returns the depth of the MTP object in bits per pixel Will be zero for non-image objects @return the image depth 
Returns the depth of the MTP object in bits per pixel Will be zero for non-image objects @return the image depth 
Returns the object handle for the object 's parent Will be zero for the root directory of a storage unit @return the object 's parent 
Returns the sequence number for the MTP object This field is typically not used for MTP devices , but is sometimes used to define a sequence of photos on PTP cameras . 
Returns the sequence number for the MTP object This field is typically not used for MTP devices , but is sometimes used to define a sequence of photos on PTP cameras . 
Returns the name of the MTP object @return the object 's name 
Returns the creation date of the MTP object The value is represented as milliseconds since January 1 , 1970 @return the object 's creation date 
Returns the modification date of the MTP object The value is represented as milliseconds since January 1 , 1970 @return the object 's modification date 
Returns a comma separated list of keywords for the MTP object @return the object 's keyword list 
Returns the storage ID for the storage unit @return the storage ID 
Returns the file path for the storage unit 's storage in the file system @return the storage file path 
Returns the description string for the storage unit @return the storage unit description 
Returns the amount of space to reserve on the storage file system . 
Returns true if the storage is removable . 
Returns maximum file size for the storage , or zero if it is unbounded . 
Returns the storage ID for the storage unit . 
Returns the maximum storage capacity for the storage unit in bytes @return the maximum capacity 
Returns the amount of free space in the storage unit in bytes @return the amount of free space 
Returns the description string for the storage unit . 
Returns the volume identifier for the storage unit @return the storage volume identifier 
Gets the session token , or null if it has not yet been created or if it has been destroyed . 
returns whether the given package is one of the ones that is owned by the uid . 
removes the subscription . 
Gets the root id for browsing . 
Gets any extras about the browser service . 
Gets the context of the remote display provider . 
Gets the Binder associated with the provider . 
Gets the current discovery mode . 
Gets the current collection of displays . 
Adds the specified remote display and notifies the system . 
Removes the specified remote display and tells the system about it . 
Gets a pending intent to launch the remote display settings activity . 
gets the opaque message data 
gets the default URL to use when sending the certificate request message to a server , if known . 
gets the wrapped private key data 
gets the PEM-encoded public certificate chain 
Gets the context of the remote service provider . 
Gets the Binder associated with the provider . 
sets a sink for sending events to framework service . 
gets the effect name . Returns the unique name of the effect , which matches the name used for instantiating this effect by the EffectFactory . 
sets a filter parameter . 
sets an effect listener . 
Creates a context within the current GL context . 
Returns the EffectFactory for this context . 
gets the effect name . Returns the unique name of the effect , which matches the name used for instantiating this effect by the EffectFactory . 
Returns the active filter context for this effect . 
Sets the graph to be run . 
Adds an input port to the filter . 
Adds an input port to the filter . 
Adds an output port to the filter with a fixed output format . 
Adds an output port to the filter . 
Adds a new Java library to the list to be scanned for filters . 
Returns false , if the GL environment was already active . 
Returns the last exception that happened during an asynchronous run . Returns null if there is nothing to report . 
Returns the native frame 's Object value . 
creates a new FilterFunction from a specific filter class . 
Returns the used graph reader . 
adds graph references to resolve during graph reading . 
adds a graph to the environment . 
gets a GraphRunner instance for the graph with the specified ID . 
Returns the environment 's filter-context . 
sets the environment 's GL environment to the specified environment . 
creates and activate a new GL environment for use in this filter context . 
Creates a media player , sets it up , and calls prepare 
Returns the data for an object as a byte array . 
Returns the thumbnail data for an object as a byte array . 
gets the max preview size that supports the given fpsRange . 
gets current AF mode . 
creates request builder , sets the af regions . 
sets AF regions , fall back to default region if afRegions is null . 
sets default AF region to full active array size . 
Adds an unconditional error to the table . 
Adds a Throwable to the table . 
sets the camera id to this error collector object for logging purpose . 
removes sub directories and their contents , but not given directory . 
creates an ImageWriter and hook up the ImageListener . 
gets an image from the image reader . 
gets the available output sizes for the given class . 
gets sorted size list in descending order . removes the sizes larger than the bound . 
gets a sorted list of sizes from a given size list . 
removes the sizes larger than the bound . 
gets supported video size list for a given camera device .  
gets max supported preview size for a camera device . 
gets max preview size for a camera device in the supported sizes that are no larger than the bound . 
gets max depth size for a camera device . 
gets the largest size by area . 
gets object array from byte array . 
gets object array from int array . 
gets object array from float array . 
gets object array from double array . 
creates a Mockito-ready mocked StateCallback . 
gets a crop region for a given zoom factor and center position . 
sets jpeg related keys in a capture request builder . 
gets the degree of an EXIF orientation . 
returns the closest value in an array of floats . 
returns if two Location 's GPS field are the same . 
gets the CameraCharacteristics associated with this StaticMetadata . 
gets the maximum number of frames to wait for a request settings being applied @return CameraMetadata.SYNC _ MAX_LATENCY_UNKNOWN for unknown latency CameraMetadata.SYNC _ MAX_LATENCY_PER_FRAME_CONTROL for per frame control a positive int otherwise 
gets the maximum number of partial result a request can expect @return 1 if partial result is not supported . 
gets the exposure time value and clamp to the range if needed . 
gets minimum focus distance . 
gets max AE regions and do sanity check . 
gets max AWB regions and do sanity check . 
gets max AF regions and do sanity check . 
gets the available anti-banding modes . 
gets available thumbnail sizes and do the sanity check . 
gets available focal lengths and do the sanity check . 
gets available apertures and do the sanity check . 
gets and check the available hot pixel map modes . 
gets and check available face detection modes . 
gets and check max face detected count . 
gets and check the available tone map modes . 
gets and check max tonemap curve point . 
gets and check pixel array size . 
gets and check pre-correction active array size . 
gets and check active array size . 
gets the dimensions to use for RAW16 buffers . 
gets the sensitivity value and clamp to the range if needed . 
gets maxAnalogSensitivity for a camera device . 
gets hyperfocalDistance and do the sanity check . 
gets the minimum value for a sensitivity range from android.sensor.info.sensitivityRange . 
gets the minimum value for a sensitivity range from android.sensor.info.sensitivityRange . 
gets the maximum value for a sensitivity range from android.sensor.info.sensitivityRange . 
gets the maximum value for a sensitivity range from android.sensor.info.sensitivityRange . 
gets the minimum value for an exposure range from android.sensor.info.exposureTimeRange . 
gets the minimum value for an exposure range from android.sensor.info.exposureTimeRange . 
gets the maximum value for an exposure range from android.sensor.info.exposureTimeRange . 
gets the maximum value for an exposure range from android.sensor.info.exposureTimeRange . 
gets android.control.availableModes and do the sanity check . 
gets aeAvailableModes and do the sanity check . 
gets available AWB modes and do the sanity check . 
gets available AF modes and do the sanity check . 
gets supported raw output sizes and do the check . 
gets supported jpeg output sizes and do the check . 
gets available formats for a given direction . 
gets valid output formats for a given input format . 
gets available sizes for given format and direction . 
gets available sizes for given format and direction , and whether to limit to slow or fast resolutions . 
gets available AE target fps ranges . 
gets the highest supported target FPS range . 
gets max frame duration . 
gets available minimal frame durations for a given format . 
gets value of key android.control.aeCompensationStep and do the sanity check . 
gets value of key android.control.aeCompensationRange and do the sanity check . 
gets availableVideoStabilizationModes and do the sanity check . 
gets availableOpticalStabilization and do the sanity check . 
gets and check the available color aberration modes @return the available color aberration modes 
gets max pipeline depth and do the sanity check . 
gets available lens shading modes . 
gets available lens shading map modes . 
gets available capabilities and do the sanity check . 
gets max number of output raw streams and do the basic sanity check . 
gets max number of output processed streams and do the basic sanity check . 
gets max number of output stalling processed streams and do the basic sanity check . 
gets the value in index for a fixed-size array from a given key . 
Gets the key , logging warnings for null values . 
gets the exposure time array that contains multiple exposure time steps in the exposure time range . 
gets the sensitivity array that contains multiple sensitivity steps in the sensitivity range .  
gets high speed FPS from CamcorderProfiles for a given size . 
returns the estimated number of frames dropped during video snapshot 
gets the ImageReader for reprocess output . 
sets up a reprocessable session and creates an ImageWriter with the sessoin 's input surface . 
sets the raw native value of the available stream configurations ; ensure that the read-out managed value is consistent with what we write in . 
returns null when there is nothing in the image queue . 
returns the last image from the image queue , close up the rest . 
returns the last image from the image queue , close up the rest . 
returns the last image from the image queue , close up the rest . 
returns null if gets a IllegalStateException with no images in the queue . 
gets an empty string . 
gets a string when a NULL value was in the parcel 
gets a string when an integer is actually present 
Sets the state of the MediaPlayer object to the specified one . 
Sets the error value of the corresponding state to the given error . 
Sets the state of the MediaRecorder object to the specified one . 
Sets the error value of the corresponding state to the given error . 
gets the routing state of this NFC EE . 
sets the routing state of this NFC EE . 
Returns the name of this adapter 's driver . 
Returns the type of content that the resource connected to is providing . 
Returns the length of the content which is being provided . 
Returns the headers that have been received during the operation . 
sets request to active . 
Sets flag for special `` value '' of NAME header which should be empty . 
Gets flag for special `` value '' of NAME header which should be empty .  
Sets the value of the header identifier to the value provided . 
Sets the authentication challenge header . 
Returns the response code received from the server . 
Creates the header part of OBEX packet based on the header provided . 
returns the maximum allowed OBEX packet to transmit . 
returns the maximum allowed OBEX packet to receive - used in OBEX connect . 
creates a complete OBEX packet by reading data from an InputStream . 
Returns the headers that have been received during the operation . 
Returns the response code received from the server . 
Returns the headers that have been received during the operation . 
Returns the type of content that the resource connected to is providing . 
Returns the length of the content which is being provided . 
Sets the connection ID header to include in the reply packets . 
Returns the native handle of the wrapped EGL object . 
gets the width of the texture in pixels . 
gets the height of the texture in pixels . 
gets the compressed data of the texture . 
creates a new ETC1Texture from an input stream containing a PKM formatted compressed texture . 
sets the glWrapper . 
sets the debug flags to a new value . 
gets the current value of the debug flags . 
sets the renderer associated with this view . 
sets the rendering mode . 
gets the current rendering mode . 
creates an egl surface for the current SurfaceHolder surface . 
creates a GL object for the current EGL context . 
returns an error string from a GL or GLU error code . 
sets up a 2D orthographic projection matrix @param gl @param left @param right @param bottom @param top 
sets up a perspective projection matrix @param gl a GL10 interface @param fovy specifies the field of view angle , in degrees , in the Y direction . 
returns the internal format as defined by OpenGL ES of the supplied bitmap . 
returns the type as defined by OpenGL ES of the supplied bitmap , if there is one . 
returns a string for the EGL error code , or the hex representation if the error is unknown . 
Sets matrix m to the identity matrix . 
Find WebView 's proxy BroadcastReceiver and prompt it to read proxy system properties . 
Creates a new container and copies package there . 
Returns true if a directory can be created in the current location . 
gets the default directory to be presented after starting the activity . 
sets internal storage visible based on explicit user action . 
sets file size visible based on explicit user action . 
sets state sort order based on explicit user action . 
sets mode based on explicit user action . 
Returns true if the list of files can be copied to destination . 
Gets the model ID for a given RecyclerView item . 
Returns a list of model IDs of items currently in the adapter .  
Returns a class that yields the span size for a particular element . 
Removes title highlights from the given view . 
Sets the current display mode .  
Gets a mime icon or package icon for a file . 
Returns a Selection object that provides a live view on the current selection . 
Sets the selected state of the specified items .  
Returns an unordered array of selected positions . 
Sets the provisional selection , which is a temporary selection that can be saved , canceled , or adjusted at a later time . 
Creates the dialog UI . 
Returns the position of an item in the delegate , adjusting values that are greater than the break position . 
Returns the position of an item in the view , adjusting values that are greater than the break position . 
Returns the screen width in raw pixels . 
Returns logical density of the display . 
Returns action bar height in raw pixels . 
Returns a list of Documents as decoded from Clipboard primary clipdata . 
Returns a list of Documents as decoded in clipData . 
Returns ClipData representing the list of docs , or null if docs is empty , or docs can not be converted . 
Adds a listener that is invoked after collapsing the action view . 
Returns true if event was triggered by a mouse . 
Returns true if event was triggered by a finger or stylus touch . 
Returns true if event was triggered by a mouse . 
Returns true if event was triggered by a finger or stylus touch . 
Returns true if event was triggered by a finger or stylus touch . 
Returns true if event was triggered by a finger or stylus touch . 
Returns true if the shift is pressed . 
Returns true if the `` SHIFT '' bit is sets . 
Returns true if the action is the initial press of a mouse or touch . 
Returns true if the action is the final release of a mouse or touch . 
Returns true if the there is an item under the finger/cursor . 
Returns the adapter position of the item under the finger/cursor . 
Creates an instance of a MessageBar . 
Sets the info message . 
Sets the error message . 
Returns a list of roots for the specified authority . 
Returns the default root for the specified state . 
sets given document as target for in-place writing if user hits save without changing the filename . 
Sets search view into the searching state . 
Returns the job id . 
Returns the job id . 
Creates a new job . 
Creates an intent for navigating back to the destination directory . 
Returns true if app is running in `` productivity mode '' . 
Returns true if `` Documents '' root should be shown . 
Returns true if device root should be shown . 
Returns true if device root should be shown . 
Returns the root that will be opened within the activity . returns null if you want to open activity 's default root . 
Returns the authority of the testing provider begin used . 
Returns the current selection area as a Rect . 
Returns a Context configured with test provider for authority . 
Creates a job with a stack consisting to the default source and destination . 
Creates a job with a stack consisting to the default src directory . 
Gets the version of the library . 
adds emergencyCallMessage to carrier string only if phone supports emergency calls . 
Sets an action to run when keyguard finishes . 
removes the given observer 's callback . 
Find the next SubscriptionId for a SIM in the given state , favoring lower slot numbers first . 
Returns file size for the given inode . 
Returns file bytes for the give inode . 
Returns a cursor that traverses the child document of the parent document handled by the task . 
Returns a state of the task . 
Returns the parent identifier from parent document ID if the parent ID is found in the database . 
Returns operations for mapping . 
Returns document IDs of storages under the given device document . 
Adds new document under the parent . 
Gets identifier from document ID . 
Removes metadata except for data used by outgoingPersistedUriPermissions . 
Creates empty cursor with specific error message . 
adds an SP sub-tree . 
sets the re-authentication hold off time for the current network @param holdoff hold off time in milliseconds @param ess sets if the hold off pertains to an ESS rather than a BSS 
gets the configuration for a vendor . 
gets all known vendor configurations . 
gets the current number of printers reported by the stub . 
returns the file name to be used for the icon of a printer @param printerId the id of the printer @return The file to be used for the icon of the printer 
removes old icons so that only between numFilesToKeep and twice as many icons are left . 
creates a notification for a print job . 
sets the progress for a print job . 
sets the status for a print job . 
sets the status for a print job . 
gets the custom icon for a printer . 
Find the sub adapter and the position in the sub-adapter the position in the combined adapter refers to . 
gets the intent used to launch the adds printers activity . 
gets a reference to the current location . 
adds printer to dest , or if updatedPrinters adds the updated printer . 
removes a printer from the holders if it is marked as removed . 
Gets the default media size for the current locale . 
Gets whether page ranges contains a given page . 
Gets the number of pages in a normalized range array . 
Returns true if a given header line has to be removed from the original request . 
Gets an icon associated with a particular account type . 
Gets the label associated with a particular account type . 
Gets the package associated with a particular account type . 
Gets the resource id of the label associated with a particular account type . 
Creates a new list of app entries with the given filter and comparator . 
sets profile manager after construction due to circular dependency 
returns true if user initiated pairing on this device . 
gets the singleton instance of the LocalBluetoothAdapter . 
Returns true if the state changed ; false otherwise . 
Returns true if the user can initiate a connection , false otherwise . 
Returns true if the user can enable auto connection for this profile . 
Returns the string resource ID for the localized name for this profile . 
Returns the string resource ID for the summary text for this profile for the specified device , e.g. `` Use for media audio '' or `` Connected to media audio '' . 
Returns the long name for the timezone for the given locale at the time specified . 
Returns the default density for the specified display . 
Gets the system default managed-user badge as a drawable @param context @return drawable containing just the badge 
Gets the preferred list-item size of this drawable . 
Sets global padding of icon/frame . 
Adds two query parameters into the Uri , namely the language code and the version code of the app 's package as gotten via the context . 
Creates a Request entry for the given PackageOps . 
sets the menu item as disabled by admin by adding a restricted padlock at the end of the text and sets the click listener which will send an intent to show the admin support details dialog . 
sets the user restriction that is used to disable this preference . 
Find all pre-installed input methods that are marked as default and adds them to an exclusion list so that they are n't presented to the user for toggling . 
adds system apps that match an intent to the list , excluding any packages in the exclude list . 
returns string resource that best describes combination of tethering options available on this device . 
Returns a label for the user , in the form of `` User : user name '' or `` Work profile '' . 
Returns a circular icon for a user . 
Returns the visibility status of the WifiConfiguration . 
returns whether this is the active connection . 
Gets the current list of access points . 
Sets the property via a call to the appropriate API , if any , and returns whether or not the setting should be saved to the database as well . 
Sets the ringtone of type specified by the name . 
Sets the locale specified . 
Adds the user-provided info into the bugreport zip file . 
Sets its internal state and displays the dialog . 
Gets the name for next screenshot file . 
Gets the extras from the custom intent , blocking until it 's received . 
Gets the notification button used to take a screenshot . 
sets focus on the name field so it can be validated once focus is lost . 
Gets an object that might not yet be available in current UI . 
Gets an object that might not yet be available in current UI . 
Gets an object which is guaranteed to be present in the current UI . 
Gets an object which is guaranteed to be present in the current UI . 
Creates a DirectStatementService with the dependencies passed in for easy testing . 
Returns a JSON string representation of this asset . 
Creates a new Asset from its JSON string representation . 
Returns true if this AssetMatcher matches the asset . 
Creates a new AssetMatcher from its JSON string representation . 
Creates a new StatementRetriever that directly retrieves statements from the asset . 
Creates a new AndroidAppAsset . 
Returns an ASCII-sorted copy of the list of certs with all duplicates removed . 
Returns the Sha-256 fingerprints of all certificates from the specified package as a list of upper case HEX Strings with bytes separated by colons . 
Returns all statements that the specified package makes in its AndroidManifest.xml . 
Returns the string representation of the constructed json . 
Returns the relation 's kind . 
Returns the relation 's detail . 
Creates a new Relation object from its string representation . 
Returns a string representation of this relation . 
Returns the source asset of the statement . 
Returns the target asset of the statement . 
Returns the relation of the statement . 
Creates a new Statement object for the specified target asset and relation . 
Returns the normalized sha-256 fingerprints of a given package according to the Android package manager . 
Returns true if there is at least one common string between the two lists of string . 
Returns the expiration time of the content as specified in the HTTP header . 
Returns content of the HTTP message body . 
Removes a previously scheduled runnable . 
Sets individual pages to listening or not . 
Adds or removes a listening client for the tile . 
removes the period from the network name 
gets the correct accessibility string based on the state @param locked Whether or not rotation is locked . 
Returns the reference counted trigger that coordinates the animations for this event . 
Adds a callback that is guaranteed to be called after the state has changed regardless of whether an actual animation took place . 
removes all EventHandlers pointing to the specified subscriber . 
Adds a new message . 
Returns whether this subscriber is currently registered . 
Returns whether we are dozing or not . 
Returns whether the trigger has fired at least once . 
Returns the arclength of the path we are interpolating . 
Returns the next name . 
Adds a runnable to the last-decrement runnables list . 
Returns the current ref count 
Returns a list of the recents tasks . 
Returns the top running task . 
Returns whether the recents activity is currently visible . 
Returns whether the recents activity is currently visible . 
Returns whether this device has freeform workspaces . 
Returns whether this device is in the safe mode . 
Returns whether the given stack id is the home stack id . 
Returns whether the given stack id is the pinned stack id . 
Returns whether the given stack id is the docked stack id . 
Returns whether the given stack id is the freeform workspace stack id . 
Returns whether there is a soft nav bar . 
Returns the top task thumbnail for the given task id 
Returns a task thumbnail from the activity manager 
Returns the activity info for a given component name . 
Returns the activity info for a given component name . 
Returns the activity label , badging if necessary . 
Returns the application label , badging if necessary . 
Returns the content description for a given task , badging it if necessary . 
Returns the activity icon for the ActivityInfo for a user , badging if necessary . 
Returns the application icon for the ApplicationInfo for a user , badging if necessary . 
Returns the task description icon , loading and badging it if it necessary . 
Returns the given icon for a user , badging if necessary . 
Returns a banner used on TV for the specified Activity . 
Returns a logo used on TV for the specified Activity . 
Returns the given label for a user , badging if necessary . 
Returns the package name of the home activity . 
Returns the current user id . 
Returns the processes user id . 
Returns whether touch exploration is currently enabled . 
Returns whether the current task is in screen-pinning mode . 
Returns a global setting . 
Returns a system setting . 
Returns a system property . 
Returns the smallest width/height . 
Returns the current display rect in the current display orientation . 
Returns the window rect for the RecentsActivity , based on the dimensions of the home stack . 
Returns the base color overlaid with another overlay color with a specified alpha . 
Returns a view stub for the given view id . 
Returns a view stub for the given view id . 
Adds a trace event for debugging . 
Returns whether this view , or one of its descendants have accessibility focus . 
Returns the application configuration , which is independent of the activity 's current configuration in multiwindow . 
Returns a lightweight dump of a rect . 
Adds a new task to the load queue 
Removes a task from the load queue 
Returns whether the load queue is empty 
Returns the size of the app icon cache . 
Returns the size of the thumbnail cache . 
Creates a new plan for loading the recent tasks . 
Returns the cached task label if the task key is not expired , updating the cache if it is . 
Returns the cached task content description if the task key is not expired , updating the cache if it is . 
Returns the cached task icon if the task key is not expired , updating the cache if it is . 
Returns the cached thumbnail if the task key is not expired , updating the cache if it is . 
Returns the task 's primary color if possible , defaulting to the default color if there is no specified primary color . 
Returns the task 's background color if possible . 
Returns the activity info for the given task key , retrieving one from the system if the task key is expired . 
Returns the TaskStack from the preloaded list of recent tasks . 
Returns whether there are any tasks in any stacks . 
Returns whether this task is too old to be shown . 
adds a callback . 
removes a callback . 
Returns whether this task is on the freeform task stack . 
Returns whether this task is affiliated with another task . 
Returns the top activity component . 
Adds a new task to this group . 
Removes a task from this group . 
Returns the key of the next task in the group . 
Returns the key of the previous task in the group . 
Gets the front task 
Returns whether a task is in this grouping . 
Returns whether one task is above another in the group . 
Returns the number of tasks in this group . 
Gets a specific entry in the cache with the specified key , regardless of whether the cached value is valid or not . 
Removes a cache entry for a specific key . 
Removes all the entries in the cache . 
Returns whether the filter accepts the specified task 
Sets the task filter , saving the current touch state 
Removes the task filter and returns the previous touch state 
Adds a new task to the task list 
Sets the list of tasks 
Removes a task from the base list only if it is in the filtered list 
Returns the index of this task in the list of filtered tasks 
Returns the size of the list of filtered tasks 
Returns whether the filtered list contains this task 
Returns whether this task list is filtered 
Returns the list of filtered tasks 
Creates a new bounds and alpha animation . 
Sets the callbacks for this task stack . 
Removes all tasks from the stack . 
Sets a few tasks in one go , without calling any callbacks . 
Gets the front-most task in the stack . 
Gets the task keys 
Returns the sets of `` freeform '' tasks in the stack . 
Returns the number of stack and freeform tasks . 
Returns the number of stack tasks . 
Returns the number of freeform tasks . 
Returns the task in stack tasks which is the launch target . 
Returns the index of this task in this current task stack 
Adds a group to the sets 
Returns the group with the specified affiliation . 
Returns the callbacks interface that non-system users can call . 
Returns the task to focus given the current launch state . 
Returns the activity launch state . 
Returns the preloaded load plan and invalidates it . 
Creates the activity options for a unknown state - > recents transition . 
Creates the activity options for a home - > recents transition . 
Creates the activity options for an app - > recents transition . 
Returns the transition rect for the given task id . 
Sets the initial values Recents enter animation when Recents is started from the Launcher . 
Sets the initial values Recents enter animation when Recents is started from an app . 
Creates the activity options for an app - > recents transition on TV . 
Returns the last known system insets . 
Sets the view outline alpha . 
Sets the top clip . 
Returns the top clip . 
Sets the bottom clip . 
Returns the bottom clip . 
Sets a start delay for a specific property . 
Sets a initial play time for a specific property . 
Returns the start delay for a specific property . 
Sets a duration for a specific property . 
Returns the duration for a specific property . 
Sets an interpolator for a specific property . 
Returns the interpolator for a specific property , falling back to the general interpolator if there is no specific property interpolator . 
Returns the initial play time for a specific property , falling back to the general initial play time if there is no specific property interpolator . 
Sets an animator listener for this animation . 
Returns the animator listener for this animation . 
Returns whether this animation has any duration . 
Returns whether this target can accept this drop . 
Returns whether the transform is available for the given task . 
Returns the transform for the given task . 
Creates a future which will later be queried for animation specs for this current transition . 
Returns the current TaskStack . 
Returns the window background scrim . 
Returns whether the last task launched was in the freeform stack or not . 
Returns the preferred dock states for the current orientation . 
Returns the sets of visible dock states for this current drag . 
Returns x normalized to the range 0 to 1 such that 0 = min , 0.5 = origin and 1 = max @param x is an absolute value in the same domain as origin 
Returns whether a value at an absolute x would be within range . 
Sets the system insets . 
Sets the focused state . 
Gets the focused state . 
Creates task overrides to ensure the initial stack layout if necessary . 
Adds and override task progress for the given task when transitioning from focused to unfocused state . 
Adds and override task progress for the given task when transitioning from focused to unfocused state . 
Returns the default focus state . 
Returns the TaskViewTransform that would put the task just off the back of the stack . 
Returns the TaskViewTransform that would put the task just off the front of the stack . 
Returns the current stack state . 
Returns whether this stack layout has been initialized . 
Returns the transform for the given task . 
Returns the untransformed task view bounds . 
Returns the scroll progress to scroll to such that the top of the task is at the top of the stack . 
Returns the original scroll progress to scroll to such that the top of the task is at the top of the stack . 
Returns the task stack bounds in the current orientation . 
Creates a new path for the focused curve . 
Creates a new path for the unfocused curve . 
Creates a new path for the focused dim curve . 
Creates a new path for the unfocused dim curve . 
Sets the stack tasks of this TaskStackView from the given TaskStack . 
Returns the task stack . 
Gets the list of task views 
Returns the front most task view . 
Returns the stack algorithm for this task stack . 
Returns the touch handler for this task stack . 
Adds a task to the ignored sets . 
Removes a task from the ignored sets . 
Returns the scroller . 
Sets the focused task relative to the currently focused task . 
Sets the focused task relative to the currently focused task . 
Returns the focused task . 
Returns the accessibility focused task . 
Returns the insert index for the task in the current sets of task views . 
Gets the current stack scroll 
Sets the current stack scroll immediately . 
Sets the current stack scroll immediately , and returns the difference between the target scroll and the actual scroll after accounting for the effect on the focus state . 
Sets the current stack scroll , but indicates to the callback the preferred animation to update to this new scroll . 
Sets the current stack scroll to the initial state when you first enter recents . 
Returns the bounded stack scroll 
Returns the amount that the absolute value of how much the scroll is out of bounds . 
Returns whether the specified scroll is out of bounds 
Returns whether the overscroller is scrolling . 
Returns the view at the specified coordinates 
Returns the scaled size used to calculate the dismiss fraction . 
Returns the view bounds . 
Returns whether this view should be clipped , or any views below should clip against this view . 
Sets whether this view should be clipped , or clipped against . 
Sets the current dim . 
Sets the current dim without updating the header 's dim . 
Returns the current dim . 
Returns the secondary color for a primary color . 
Sets the dim alpha , only used when we are not using hardware layers .  
Sets the thumbnail to a given bitmap . 
Sets the dim alpha , only used when we are not using hardware layers .  
Returns a view into the pool 
Gets a view from the pool and prepares it 
Returns the list of views in the pool . 
Creates a new worker thread and saves the screenshot to the media store . 
Sets the tint color of the background 
Sets the tint color of the background 
Returns the exposed NotificationGuts or null if none are exposed . 
Returns true if we 're on a secure lockscreen and the user wants to hide notification data . 
Returns true if we 're on a secure lockscreen and the user wants to hide notifications via package-specific override . 
Returns true if we 're on a secure lockscreen . 
Adds RemoteInput actions from the WearableExtender ; to be removed once more apps support this via first-class API . 
adds a child notification to this view . 
sets by how much the single line view should be indented . 
sets this notification to be expanded by the user @param userExpanded whether the user wants this notification to be expanded 
sets this notification to be expanded by the user @param userExpanded whether the user wants this notification to be expanded @param allowChildExpansion whether a call to this method allows expanding children 
sets this notification to be expanded by the system . 
Sets the actual height of this notification . 
Sets the notification as dimmed . 
Sets the notification as dark . 
Sets whether the notification should hide its private contents if it is sensitive . 
Sets the amount this view should be clipped from the top . 
Sets the translation of the view . 
Gets the translation of the view . 
Sets the scale of the containing image @param imageScale The new Scale . 
Sets the alpha of the containing image @param alpha The new alpha . 
Sets the indication that is shown if nothing else is showing . 
Adds the remaining TransformTypes to the TransformHelper . 
Sets a background drawable . 
sets by how much the single line view should be indented . 
Returns true if the RemoteViews are the same . 
Returns whether the icon is on the left side of the view or not . 
Returns the horizontal space in pixels required to display the gear behind a notification . 
Returns true if the button contains no useful information and should be removed . 
gets the summary of a specified status bar notification . 
Returns the view that represents the notification area . 
Sets the color that should be used to tint any icons in the notification area . 
sets whether we are currently launching an affordance . 
returns true if the applications with the package name is running in foreground . 
Gets called when the user performs a click anywhere in the empty area of the panel . 
Returns a fingerprint of fields logged to eventlog 
sets the amount the current top heads up view is dragged . 
Adds the status bar view to the window manager . 
sets whether the screen brightness is forced to the value we use for doze mode by the status bar window . 
Sets if the current device is in power save mode . 
sets that we are exiting the headsUp pinned mode , but some notifications might still be animating out . 
sets an entry to be expanded and therefore stick in the heads up area if it 's pinned until it 's collapsed again . 
adds a callback to listen for changes in location settings . 
Returns true if location is n't disabled in settings . 
Returns true if the current user is restricted from using location . 
Returns true if there currently exist active high power location requests . 
Gets the signal icon for QS based on current state of connected , enabled , and level . 
Gets the signal icon for SB based on current state of connected , enabled , and level . 
Gets the content description id for the signal based on current state of connected and level . 
Returns the resource if resId is not 0 , and an empty string otherwise . 
Sets the given drawable id on the view . 
adds a child notification to this view . 
Returns the location the given child is currently rendered at . 
gets the current height of the view . 
sets the amount of overScrolled pixels which will force the view to apply a rubber-banded overscroll effect based on numPixels . 
sets the effective overScroll amount which will be directly reflected in the layout . 
sets the effective overScroll amount which will be directly reflected in the layout . 
sets the effective overScroll amount which will be directly reflected in the layout . 
removes a removed child view from the heads up animations if it was just added there @return whether any child was removed from the list to animate 
sets the boundary for the bottom heads up position . 
removes the a given view from the viewstate . 
Returns whether the gesture is towards the gear location or not . 
Returns the horizontal space in pixels required to display the gear behind a notification . 
returns true if it scrolls . 
Gets the offset of this Functor given a the quantity of items before it @param itemsBefore how many items are already in the stack before this element @return the offset 
gets the end value of the height animation running on a view or the actualHeight if no animation is running . 
gets the end value of the yTranslation animation running on a view or the yTranslation if no animation is running . 
Returns whether the sets succeeded . 
Returns the right icon to use for this item @param context Context to use to gets resources @return Drawable for this item , or null if the package or item could not be found 
gets the current state of a view in a transform animation @param fadingView which view we are interested in @return the current transform state of this viewtype 
sets this view to be fully visible or gone @param visible 
adds the remaining transformation views such that all views are being transformed correctly @param viewRoot the root below which all elements need to be transformed 
Sets the drawable for the button with the given resource id . 
Sets the text for description the with the given resource id . 
Returns the focused control button view to animate focused button . 
Returns the default PIP bound . 
Returns the focused PIP bound while Recents is shown . 
Returns the PIPed activity 's playback state . 
adds Recents overlay view . 
removes Recents overlay view . 
removes all notifications for a disk when it goes away . 
Returns a time condition if the next alarm is within the next week . 
gets the directory where screenshot images are stored . 
returns true if file is valid image file 
Find the min x that 1 / x > = scale 
Find the max x that 1 / x < = scale . 
Returns the input value x clamped to the range -LSB- min , max -RSB- . 
Returns the input value x clamped to the range -LSB- min , max -RSB- . 
Returns the input value x clamped to the range -LSB- min , max -RSB- . 
Gets the compressed thumbnail . Returns null if there is no compressed thumbnail . 
Sets the compressed thumbnail . 
Returns true it this header contains a compressed thumbnail . 
Adds an uncompressed strip . 
Gets the strip count . 
Gets the strip at the specified index . 
Returns true if this header contains uncompressed strip . 
Gets the byte order . 
Adds IFD data . 
Returns the tag with a given TID in the given IFD if the tag exists . 
Adds the given ExifTag to its default IFD and returns an existing ExifTag with the same TID or null if none exist . 
Adds the given ExifTag to the given IFD and returns an existing ExifTag with the same TID or null if none exist . 
Removes the thumbnail and its related tags . 
Removes the tag with a given TID and IFD . 
Returns null if decoding failed . 
Returns the constant representing a tag with a given TID and default IFD . 
Returns the TID for a tag constant . 
Returns the default IFD for a tag constant . 
Sets the exif tags , clearing this ExifInterface object 's existing exif tags . 
Returns an OutputStream object that writes to a file . 
gets the exif tags in this ExifInterface object or null if none exist . 
Gets an ExifTag for an IFD other than the tag 's default . 
Returns the ExifTag in that tag 's default IFD for a defined tag constant or null if none exists . 
Gets a tag value for an IFD other than the tag 's default . 
Returns the value of the ExifTag in that tag 's default IFD for a defined tag constant or null if none exists or the value could not be cast into the returns type . 
Gets the defined number of elements for a tag . 
Gets the number of elements for an ExifTag in a given IFD . 
Gets the default IFD for a tag . 
Gets the defined type for a tag . 
Creates a tag for a defined tag constant in a given IFD if that IFD is allowed for the tag . 
Creates a tag for a defined tag constant in the tag 's default IFD . 
Sets the value of an ExifTag if it exists in the given IFD . 
Sets the value of an ExifTag if it exists it 's default IFD . 
Removes the ExifTag for a tag constant from the given IFD . 
Removes the ExifTag for a tag constant from that tag 's default IFD . 
Creates a new tag definition in this ExifInterface object for a given TID and default IFD .  
Removes a tag definition for given defined tag constant . 
Returns the thumbnail from IFD1 as a bitmap , or null if none exists . 
Returns the thumbnail from IFD1 as a byte array , or null if none exists . 
Returns the thumbnail if it is jpeg compressed , or null if none exists . 
Sets the thumbnail to be a jpeg compressed image . 
Sets the thumbnail to be a jpeg compressed bitmap . 
Returns null if decoding failed . 
Returns the Orientation ExifTag value for a given number of degrees . 
Returns the rotation degrees corresponding to an ExifTag Orientation value . 
Gets the double representation of the GPS latitude or longitude coordinate . 
Gets the GPS latitude and longitude as a pair of doubles from this ExifInterface object 's tags , or null if the necessary tags do not exist . 
Creates and sets all to the GPS tags for a give latitude and longitude . 
Creates and sets the GPS timestamp tag . 
Sets the ExifData to be written into the JPEG file . 
Gets the Exif header to be written into the JPEF file . 
Gets number of tags in the current IFD area . 
Gets the ID of current IFD . 
Gets the byte order of the current InputStream . 
Returns true if the given IFD is a valid IFD . 
Returns true if a given type is a valid tag type . 
Gets the element size of the given data type in bytes . 
Returns the ID of the IFD this tag belongs to . 
Gets the TID of this tag . 
Gets the total data size in bytes of the value of this tag . 
Sets the component count of this tag . 
Returns true if this ExifTag contains value ; otherwise , this tag will contain an offset value that is determined when the tag is written . 
Sets integer values into this tag . 
Sets integer value into this tag . 
Sets long values into this tag . 
Sets long values into this tag . 
Sets a string value into this tag . 
Sets Rational values into this tag . 
Sets a Rational value into this tag . 
Sets byte values into this tag . 
Sets byte value into this tag . 
Sets the value for this tag using an appropriate setValue method for the given object . 
Sets a timestamp to this tag . 
Gets the value as a String . 
Gets the value as a String . 
Gets the value as a byte array . 
Gets the value as a byte . 
Gets the value as an array of Rationals . 
Gets the value as a Rational . 
Gets the value as a Rational . 
Gets the value as an array of ints . 
Gets the value as an int . 
Gets the value as an array of longs . 
Gets the value or null if none exists . 
Gets the tag 's value or null if none exists . 
Gets a long representation of the value . 
Gets a string representation of the value . 
gets the converted ascii byte . 
Gets the offset of this tag . 
Sets the offset of this tag . 
Gets the ID of this IFD . 
returns null if there is no such tag . 
Removes the tag of the given ID 
Gets the tags count in the IFD . 
Sets the offset of next IFD . 
Gets the offset of next IFD . 
Returns true if all tags in this two IFDs are equal . 
Gets the numerator of the rational . 
Gets the denominator of the rational 
Gets the rational value as type double . 
Sets the content size of this texture . 
Returns the width rounded to the next power of 2 . 
Returns the height rounded to the next power of 2 . 
Sets and gets the current alpha , alpha must be in -LSB- 0 , 1 -RSB- . 
Sets texture parameters to use GL_CLAMP_TO_EDGE for both GL_TEXTURE_WRAP_S and GL_TEXTURE_WRAP_T . Sets texture parameters to be GL_LINEAR for GL_TEXTURE_MIN_FILTER and GL_TEXTURE_MAG_FILTER . 
Gets the bounds given by x , y , width , and height as well as the internal matrix state . 
creates an egl surface for the current SurfaceTexture surface . 
creates a GL object for the current EGL context . 
returns a Preview image if available . 
Returns the status value of the message processing . Returns the process status value . 
Returns true if adding the package succeeded . 
Returns true if updating the package succeeded . 
Returns true if deleting the package succeeded . 
adds sqlite injection test 
adds duprecated package test . 
gets the usage flags of the Allocation . 
gets the Mipmap control flag of the Allocation . 
gets the size of the Allocation in bytes . 
Creates an Allocation with the size specified by the type and no mipmaps generated by default @param rs Context to which the allocation will belong . 
Creates an Allocation with a specified number of given elements @param rs Context to which the Allocation will belong . 
Creates an Allocation with a specified number of given elements @param rs Context to which the Allocation will belong . 
Gets or creates a ByteBuffer that contains the raw data of the current Allocation . 
Gets the stride of the Allocation . 
gets the timestamp for the most recent buffer held by this Allocation . 
Returns the handle to a raw buffer that is being managed by the screen compositor . 
Creates an Allocation from the Bitmap referenced by resource ID . 
Creates an Allocation containing string data encoded in UTF-8 format . 
sets the active LOD . 
sets the active Face . 
sets the active X . 
sets the active Y . 
sets the active Z . 
creates an arbitrary window into the base allocation . 
gets vector length @return 
sets vector value by Byte2 @param a 
sets the vector field value by Char @param a @param b 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Byte3 @param a 
sets the vector field value by Char @param a @param b @param c 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Byte4 @param a 
sets the vector field values @param a @param b @param c @param d 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
sets vector value by double2 @param a 
gets vector length @return 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
sets the vector field value @param x @param y 
sets vector value by double3 @param a 
gets vector length @return 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
sets the vector field value @param x @param y @param z 
sets vector value by double4 @param a 
gets vector length @return 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
sets the vector field value @param x @param y @param z @param w 
Returns the number of vector components . 
returns if a element is too complex for use as a data source for a Mesh or a Program . 
creates a custom Element of the specified DataType . 
creates a custom vector element of the specified DataType and vector size . 
creates a new pixel Element type . 
adds an array of elements to this element . 
adds a single element to this Element . 
creates the element from this builder . 
gets the actual length used for the FieldPacker .  
sets vector value by float2 @param a 
gets vector length @return 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
sets the vector field value @param x @param y 
sets vector value by float3 @param a 
gets vector length @return 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
sets the vector field value @param x @param y @param z 
sets vector value by float4 @param a 
gets vector length @return 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
sets the vector field value @param x @param y @param z @param w 
gets vector length @return 
sets vector value by Int2 @param a 
sets the vector field value by Int @param a @param b 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Int3 @param a 
sets the vector field value by Int @param a @param b @param c 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Int4 @param a 
sets the vector field value by Int @param a @param b @param c @param d 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Long2 @param a 
sets the vector field value by Long @param a @param b 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Long3 @param a 
sets the vector field value by Long @param a @param b @param c 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Long4 @param a 
sets the vector field value by Long @param a @param b @param c @param d 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
returns a reference to the internal array representing matrix values . 
Returns the value for a given row and column @param x column of the value to returns @param y row of the value to returns @return value in the yth row and xth column 
Sets the value for a given row and column @param x column of the value to sets @param y row of the value to sets 
Sets the matrix values to identity 
Sets the values of the matrix to those of the parameter @param src matrix to load the values from 
Sets current values to be a rotation matrix of given angle @param rot rotation angle 
Sets current values to be a scale matrix of given dimensions @param x scale component x @param y scale component y 
Sets current values to be the result of multiplying two given matrices @param lhs left hand side matrix @param rhs right hand side matrix 
Sets the current matrix to its transpose 
returns a reference to the internal array representing matrix values . 
Returns the value for a given row and column @param x column of the value to returns @param y row of the value to returns @return value in the yth row and xth column 
Sets the value for a given row and column @param x column of the value to sets @param y row of the value to sets 
Sets the matrix values to identity 
Sets the values of the matrix to those of the parameter @param src matrix to load the values from 
Sets current values to be a rotation matrix of certain angle about a given axis @param rot angle of rotation @param x rotation axis x @param y rotation axis y @param z rotation axis z 
Sets current values to be a scale matrix of given dimensions @param x scale component x @param y scale component y @param z scale component z 
Sets current values to be a translation matrix of given dimensions @param x translation component x @param y translation component y 
Sets current values to be the result of multiplying two given matrices @param lhs left hand side matrix @param rhs right hand side matrix 
Sets the current matrix to its transpose 
returns a reference to the internal array representing matrix values . 
Returns the value for a given row and column @param x column of the value to returns @param y row of the value to returns @return value in the yth row and xth column 
Sets the value for a given row and column @param x column of the value to sets @param y row of the value to sets 
Sets the matrix values to identity 
Sets the values of the matrix to those of the parameter @param src matrix to load the values from 
Sets the values of the matrix to those of the parameter @param src matrix to load the values from 
Sets current values to be a rotation matrix of certain angle about a given axis @param rot angle of rotation @param x rotation axis x @param y rotation axis y @param z rotation axis z 
Sets current values to be a scale matrix of given dimensions @param x scale component x @param y scale component y @param z scale component z 
Sets current values to be a translation matrix of given dimensions @param x translation component x @param y translation component y @param z translation component z 
Sets current values to be the result of multiplying two given matrices @param lhs left hand side matrix @param rhs right hand side matrix 
sets current values to be an orthographic projection matrix @param l location of the left vertical clipping plane @param r location of the right vertical clipping plane @param b location of the bottom horizontal clipping plane @param t location of the top horizontal clipping plane @param n location of the near clipping plane @param f location of the far clipping plane 
sets current values to be an orthographic projection matrix with the right and bottom clipping planes sets to the given values . 
Sets current values to be a perspective projection matrix @param l location of the left vertical clipping plane @param r location of the right vertical clipping plane @param b location of the bottom horizontal clipping plane @param t location of the top horizontal clipping plane @param n location of the near clipping plane , must be positive @param f location of the far clipping plane , must be positive 
Sets current values to be a perspective projection matrix @param fovy vertical field of view angle in degrees @param aspect aspect ratio of the screen @param near near cliping plane , must be positive @param far far clipping plane , must be positive 
Sets the current matrix to its inverse 
Sets the current matrix to its inverse transpose 
Sets the current matrix to its transpose 
Returns the type of the constant buffer used in the program object . 
Returns the number of textures used in this program object @return number of texture inputs 
Returns the type of texture at a given slot . 
Returns the name of the texture input at a given slot . 
Sets the GLSL shader code to be used in the program @param s GLSL shader string @return self 
Sets the GLSL shader code to be used in the program @param resources application resources @param resourceID id of the file containing GLSL shader code @return self 
Returns the function used to test writing into the depth buffer @return depth function 
Returns a pre-defined program store object with the following characteristics : - incoming pixels are drawn if their depth value is less than the stored value in the depth buffer . 
Returns a pre-defined program store object with the following characteristics : - incoming pixels always pass the depth test and their value is not stored in the depth buffer - incoming pixels override the value stored in the color buffer @param rs Context to which the program will belong . 
Returns a pre-defined program store object with the following characteristics : - incoming pixels are drawn if their depth value is less than the stored value in the depth buffer . 
Creates a program store from the current state of the builder 
Returns an identifier that can be used to identify a particular minor version of RS . 
Gets the application context associated with the RenderScript context . 
Gets the path to the code cache . 
creates a RenderScript context . 
Gets or creates a RenderScript context of the specified type . 
Gets or creates a RenderScript context of the specified type . 
creates a RenderScript context . 
Sets the directory to use as a persistent storage for the renderscript object file cache . 
sets the X range . 
sets the Y range . 
sets the Z range . 
Returns the current X start @return int current value 
Returns the current X end @return int current value 
Returns the current Y start @return int current value 
Returns the current Y end @return int current value 
Returns the current Z start @return int current value 
Returns the current Z end @return int current value 
Sets an input of the ScriptGroup . 
Sets an output of the ScriptGroup . 
Adds a Kernel to the group . 
Adds a connection to the group . 
Adds a connection to the group . 
Creates the Script group . 
Adds a script group input @return a script group input , which can be used as an argument or a value to a global variable for creating closures 
gets a KernelID for this intrinsic kernel . 
creates an intrinsic to access BLAS subroutines . 
gets a KernelID for the Clear kernel . 
Sets dst = src @param ain The source buffer @param aout The destination buffer 
Sets dst = src @param ain The source buffer @param aout The destination buffer @param opt LaunchOptions for clipping 
gets a KernelID for the Src kernel . 
Sets dst = dst This is a NOP . 
Sets dst = dst This is a NOP . 
gets a KernelID for the Dst kernel . 
gets a KernelID for the SrcOver kernel . 
gets a KernelID for the DstOver kernel . 
Sets dst = src dst.a @param ain The source buffer @param aout The destination buffer 
Sets dst = src dst.a @param ain The source buffer @param aout The destination buffer @param opt LaunchOptions for clipping 
gets a KernelID for the SrcIn kernel . 
Sets dst = dst src.a @param ain The source buffer @param aout The destination buffer 
Sets dst = dst src.a @param ain The source buffer @param aout The destination buffer @param opt LaunchOptions for clipping 
gets a KernelID for the DstIn kernel . 
gets a KernelID for the SrcOut kernel . 
gets a KernelID for the DstOut kernel . 
gets a KernelID for the SrcAtop kernel . 
gets a KernelID for the DstAtop kernel . 
gets a KernelID for the Xor kernel . 
Sets dst = src dst @param ain The source buffer @param aout The destination buffer 
Sets dst = src dst @param ain The source buffer @param aout The destination buffer @param opt LaunchOptions for clipping 
gets a KernelID for the Multiply kernel . 
gets a KernelID for the adds kernel . 
gets a KernelID for the Subtract kernel . 
creates an intrinsic for applying a blur to an allocation . 
sets the input of the blur . 
sets the radius of the Blur . 
gets a KernelID for this intrinsic kernel . 
gets a FieldID for the input field of this intrinsic . 
creates an intrinsic for applying a color matrix to an allocation . 
creates an intrinsic for applying a color matrix to an allocation . 
sets the color matrix which will be applied to each cell of the image . 
sets the color matrix which will be applied to each cell of the image . 
sets the value to be added after the color matrix has been applied . 
sets the value to be added after the color matrix has been applied . 
sets a color matrix to convert from RGB to luminance . 
sets the matrix to convert from YUV to RGB with a direct copy of the 4th channel . 
sets the matrix to convert from RGB to YUV with a direct copy of the 4th channel . 
gets a KernelID for this intrinsic kernel . 
sets the input of the 3x3 convolve . 
sets the coefficients for the convolve . 
gets a KernelID for this intrinsic kernel . 
gets a FieldID for the input field of this intrinsic . 
sets the input of the 5x5 convolve . 
sets the coefficients for the convolve . 
gets a KernelID for this intrinsic kernel . 
gets a FieldID for the input field of this intrinsic . 
creates an intrinsic for calculating the histogram of an uchar or uchar4 image . 
sets the coefficients used for the RGBA to Luminocity calculation . 
sets the output of the histogram . 
gets a KernelID for this intrinsic kernel . 
gets a FieldID for the input field of this intrinsic . 
sets an entry in the red channel lookup table @param index Must be 0-255 @param value Must be 0-255 
sets an entry in the green channel lookup table @param index Must be 0-255 @param value Must be 0-255 
sets an entry in the blue channel lookup table @param index Must be 0-255 @param value Must be 0-255 
sets an entry in the alpha channel lookup table @param index Must be 0-255 @param value Must be 0-255 
gets a KernelID for this intrinsic kernel . 
sets the input of the resize . 
gets a FieldID for the input field of this intrinsic . 
gets a KernelID for this intrinsic kernel . 
creates an intrinsic for converting YUV to RGB . 
gets a KernelID for this intrinsic kernel . 
gets a FieldID for the input field of this intrinsic . 
gets vector length @return 
sets vector value by Short2 @param a 
sets the vector field value by Short @param a @param b 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Short3 @param a 
sets the vector field value by Short @param a @param b @param c 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
gets vector length @return 
sets vector value by Short4 @param a 
sets the vector field value by Short @param a @param b @param c @param d 
returns the element sum of vector @return 
gets the vector field value by index @param i @return 
sets the vector field value by index @param i @param value 
adds the vector field value by index @param i @param value 
returns the element associated with this Type . 
returns the value of the X dimension . 
returns the value of the Y dimension or 0 for a 1D allocation . 
returns the value of the Z dimension or 0 for a 1D or 2D allocation . 
gets the YUV format @return int 
returns if the Type has a mipmap chain . 
returns if the Type is a cube map . 
returns the total number of accessable cells in the Type . 
returns the dimension of the specified array . 
returns the number of array dimensions . 
adds a dimension to the Type . 
Adds an array dimension to the builder @param dim @param value @return Builder 
sets the YUV layout for a Type . 
Returns HTML string . 
Gets the child element with the given name . 
Gets the child element with the given name . 
Gets the child element with the given name . 
Gets the child element with the given name . 
Sets start and end element listeners at the same time . 
Sets start and end text element listeners at the same time . 
Sets a listener for the start of this element . 
Sets a listener for the end of this element . 
Sets a listener for the end of this text element . 
Gets current event stream state associated with an input event . 
Adds an event handler to the event handler chain . 
Gets the bounds of a window . 
Removes an AccessibilityInteractionConnection . 
Removes a service . 
Returns whether the specified user has any services that are capable of controlling magnification . 
Returns whether the specified user has any services that are capable of controlling magnification and are actively listening for magnification updates . 
Creates and forwards click event sequence . 
Returns whether the specified user with has any display color adjustments . 
Sets the surface flinger 's Daltonization mode . 
Sets the surface flinger 's color transformation as a 4x4 matrix . 
Sets the next transformation . 
sets the result from onKeyEvent from one service . 
Returns whether the magnification region contains the specified screen-relative coordinates . 
Returns the magnification scale . 
Returns the X offset of the magnification viewport . 
Returns the screen-relative X coordinate of the center of the magnification viewport . 
Returns the Y offset of the magnification viewport . 
Returns the screen-relative Y coordinate of the center of the magnification viewport . 
Returns the scale currently used by the window manager . 
Returns the X offset currently used by the window manager . 
Returns the Y offset currently used by the window manager . 
Sets the center of the magnified region , optionally animating the transition . 
Sets the scale and center of the magnified region , optionally animating the transition . 
gets the ID of the last service that changed the magnification spec . 
Sets the currently active user ID . 
Gets the symbolic name of a state . 
Adds to the ref-count for a given RemoteViewsService intent 
removes widgets for provider that are hosted in userId . 
Adds the widget to mWidgets and tracks the package name in mWidgetPackages . 
Removes a widget from mWidgets and updates the cache of bound widget provider packages . 
removes widgets for provider in userId that are hosted in parentUserId 
returns true if it 's different from previous state . 
returns true if it 's different from previous state . 
returns true if it 's different from previous state . 
Returns the RemoveViews for the provided widget id if an update is pending for that widget . 
removes the given packages ' entries from our known active sets . 
Returns the sets of all applications that define an android : backupAgent attribute 
removes our awareness of having ever backed up the given package 
returns the given transport 
Returns zero if none available . 
removes the PM metadata state . 
removes a package from the full-data queue . 
Returns a policy constant 
Returns a policy constant ; takes a buffer arg to reduce memory churn 
Adds the account to all linked restricted users as shared accounts . 
Returns the accounts visible to the client within the context of a specific user 
Returns accounts for all running users .  
find the component name for the authenticator and initiate a bind if no authenticator or the bind fails then returns false , otherwise returns true 
Gets a token from the cache if possible . 
returns true if the batch was added at the head 
returns the index of the matching batch , or -1 if none found . 
Returns true if either matches 
Sets the task stack listener that gets callbacks when a task stack changes . 
Creates a new RecentTaskInfo from a TaskRecord . 
Removes the task with the specified task id . 
Returns if the ContentProvider has granted a uri to callingUid 
Returns true if the uri authority is one of the authorities specified in the provider . 
Returns whether input dispatching should be aborted or not . 
Returns true if the activity has been left running , or false if <var> starting </var> is being destroyed to match the new configuration . 
Returns true if things are idle enough to perform GCs . 
adds a process to the array of processes waiting to be GCed . 
sets up to ask a process to GC itself . 
Returns the top activity in any existing task matching the given Intent in the input result . Returns null if no such task is found . 
Returns null if no such activity is found . 
Returns true if the stack contains a fullscreen task . 
Returns true if the stack is translucent and can have other contents visible behind it if needed . 
returns true if the input activity should be made visible 
Returns false if the activity had to be destroyed . Returns true if the configuration is the same , or the activity will remain running as-is for whatever reason . 
Removes the input task from this stack . 
Returns true if the focus activity was adjusted to the home stack top activity . 
Returns if a stack should be treated as if it 's docked . Returns true if the stack is the docked stack itself , or if it 's side-by-side to the docked stack . 
Returns null if not or an ActivityRecord with the task into which the new activity should be added . 
Creates an intent to intercept the current activity start with Confirm Credentials if needed . 
removes a UID from the BatteryStats and BatteryStats ' external dependencies . 
Gets a snapshot of the system health for a particular uid . 
Gets a snapshot of the system health for a number of uids . 
Returns whether the Binder.getCallingUid is the only thing in requestUids . 
Gets a HealthStatsParceler for the given uid . 
Adds a BatteryStats.Timer into a HealthStatsWriter . 
Adds a named BatteryStats.Timer into a HealthStatsWriter . 
returns the maximum pss size in kb that we consider a process acceptable to restore from its cached state for running in the background when RAM is low . 
sets the out-of-memory badness adjustment for a process . 
returns true if package has been added false if not 
Returns all userIds for which recents from persistent storage are loaded into this list . 
Removes recent tasks and any other state kept in memory for the passed in user . 
removes recent tasks for a user . 
Sets the original intent , and the calling uid and package . 
Sets the original intent , _ without _ updating the calling uid or package . 
Sets the original minimal width and height . 
Sets the last thumbnail with the current task bounds and the system orientation . 
Sets the last thumbnail with the current task bounds . 
Removes in-memory thumbnail data when the max number of in-memory task thumbnails is reached . 
Removes all associated thumbnail data when a task is removed or pruned from recents . 
Returns the intent for the root activity for this task 
Returns the first non-finishing activity from the root . 
Find the activity in the history stack within the given task . Returns the index within the history at which it 's found , or < 0 if not found . 
Returns the correct stack to use based on task type and currently sets bounds , regardless of the focused stack and current stack association of the task . 
Returns the bounds that should be used to launch this task . 
returns strength of this permission grant for the given flags . 
Returns whether the given user requires credential entry at this time . 
Returns the angle between this 3D vector and another given 3D vector . 
Returns the path to the file containing the best computed atlas configuration . 
Returns the best known atlas configuration . 
Returns whether the two values are equal . 
Returns an identifier for the current build that can be used to detect likely changes to framework resources . 
Sets the stream state 's index , and posts a message to sets system volume . 
gets stream mute state . 
gets master mute state . 
gets last audible volume before stream was muted . 
Returns true if airplane mode is currently on 
Returns true if the Bluetooth saved state is `` on '' 
Returns true if the Bluetooth saved state is BLUETOOTH_ON_BLUETOOTH 
Returns true if the Bluetooth Adapter 's name and address is locally cached @return 
Creates an IPsec NAT-T keepalive packet with the specified parameters . 
 Returns HTTP response code . 
sets whether a package has the ability to launch VPNs without user intervention . 
returns the configuration of the currently running VPN . 
Creates a secondary thread to perform connection work , returning quickly . 
returns the information of the current ongoing legacy VPN . 
returns the information of the current ongoing legacy VPN . 
Adds the given network to the specified legacy type list . 
Removes the given network from the specified legacy type list . 
Removes the given network from all legacy type lists . 
removes data activity tracking when network disconnects . 
sets whether the VPN package has the ability to launch VPNs without user intervention .  
Creates a secondary thread to perform connection work , returning quickly . 
returns the information of the ongoing legacy VPN . 
returns the information of all ongoing VPNs . 
Returns true iff . 
gets information about the SyncAdapters that are known to the system . 
gets information about the SyncAdapters that are known to the system for a particular user . 
returns a random value v that satisfies minValue < = v < maxValue . 
removes a specific periodic sync identified by its target and extras . 
adds a periodic sync . 
gets a list of periodic syncs corresponding to the given target . 
removes scheduled sync operations . 
removes a specified sync , if it exists . 
gets how long we have been syncing , in ms 
removes this periodic sync operation and all one-off operations initiated by it . 
gets a one off sync operation instance from a periodic sync . 
Returns null if the bundle does n't contain a valid sync operation . 
Returns true if there is currently a sync operation being actively processed for the given target . 
returns a list of the currently active syncs . 
returns a copy of the specified target with the corresponding sync status 
Returns the status that matches the target . 
returns true if the pending status is true of any matching authorities . 
returns an array of the current sync status for all authorities . 
returns an array of the current per-day statistics . 
removes an authority associated with a provider . 
Sets the bundle to be empty . 
adds the ICountryListener into the listener list . 
removes the ICountryListener from the listener list . 
Returns the array of app ids whitelisted by user . 
Adds an app to the temporary whitelist and resets the endTime for granting the app an exemption to access network and acquire wakelocks . 
Adds an app to the temporary whitelist and resets the endTime for granting the app an exemption to access network and acquire wakelocks . 
Gets the object that the display adapter should synchronize on when handling calls that come in from outside of the display manager service . 
Gets the display adapter 's context . 
Gets a handler that the display adapter may use to post asynchronous messages . 
Gets the display adapter name for debugging purposes . 
Gets the display adapter that owns the display device . 
Gets the Surface Flinger display token for this display . 
Gets the name of the display device . 
Returns the unique id of the display device . 
Gets information about the display device . 
Sets the display state , if supported . 
Sets the mode , if supported . 
Sets the display layer stack while in a transaction . 
Sets the display projection while in a transaction . 
Sets the display surface while in a transaction . 
Returns information about the specified logical display . 
Returns the list of all display ids . 
Returns true if the proximity sensor screen-off function is available . 
Sets whether the screen is on , off , or dozing . 
Gets the desired screen state . 
Sets the display brightness . 
Gets the screen brightness . 
Sets the level of the electron beam steering current . 
Gets the level of the electron beam steering current . 
Returns true if no properties have been invalidated . 
Returns whether the mode generated by the given PhysicalDisplayInfo matches the mode contained by the record modulo mode ID . 
Gets the logical display id of this logical display . 
Gets the primary display device associated with this logical display . 
Gets information about the logical display . 
Sets overridden logical display information from the window manager . 
Returns true if the logical display is in a valid state . 
Returns true if the logical display has unique content . 
Sets whether the logical display has unique content . 
Returns the pending requested mode . 
Returns the pending requested color transform . 
Gets the burn-in offset in X. 
Gets the burn-in offset in Y. 
Sets the burn-in offsets . 
Returns true if the animation is running . 
Sets a listener to watch for animation events . 
Returns the next unique index for the uniqueIdPrefix 
Adds a disk log file to in-memory tracking for accounting and enumeration . 
adds additional information to the kernel entropy pool . 
Gets the fingerprint daemon from the cached state in the container class . 
adds a new message to the buffer . 
returns the locally hosted logical device of a given type . 
adds a new logical address to the device . 
returns the physical address of the device . 
returns CEC version of the device . 
returns vendor id of the device . 
sets an option to CEC HAL . 
returns the connection status of the specified port @param port port number to check connection status @return true if connected ; otherwise , returns false 
Removes any pending timer message . 
removes the action from the action queue . 
Returns CEC keycode to control audio mute status . 
gets the preferred logical address from system properties . 
sets the preferred logical address to system properties . 
Returns true if the TV input associated with the CEC device is ready to accept further processing such as input switching . 
Returns true if the local device allows the system to be put to standby . 
Returns true if the logical address is same as the argument . 
Returns all actions matched with given class type . 
removes all actions matched with the given Class type . 
removes all actions matched with the given Class type besides | exception | . 
Returns the ID of the active HDMI port . 
Returns the previous port id kept to handle input switching on <Inactive?Source> . 
Sets the previous port id . 
Returns true if ARC is currently established on a certain port . 
returns external input devices . 
Returns null if no logical address matched 
Returns null if no logical address matched 
returns the source address field of the message . 
returns the destination address field of the message . 
returns the opcode field of the message . 
returns the parameter field of the message . 
Returns true if the message is replaced 
Returns HDMI port information for the given port id . 
Returns the id of HDMI port located at the top of the hierarchy of the specified routing path . 
Returns physical address of the device . 
Returns vendor id of CEC service . 
Returns version of CEC . 
Returns true if MHL controller is initialized and ready to use . 
returns null if no matched port id . 
returns INVALID_VERSION if MHL hardware layer is not ready . 
gets the bit flags describing the features supported by the system . 
gets the bit flags describing the roles which ECBUS device can play . 
returns the device type for the given logical address . 
returns the default device name for a logical address . 
Gets the current state of a key or button by key code . 
Gets the current state of a key or button by scan code . 
Gets the current state of a switch by switch code . 
Creates an input channel that will receive all input from the input dispatcher . 
Sets an input filter that will receive all input events before they are dispatched . 
Gets information about the input device with the specified id . 
Gets the ids of all input devices in the system . 
Gets all input devices in the system . 
Returns true iff the caller is identified to be the current input method with the token . 
Returns an iterator allowing filters to be removed . 
Returns a read-only sets of the filters . 
Returns whether the object associated with the given filter is `` stopped '' , that is whether it should not be included in the result if the intent requests to excluded stopped objects . 
Returns whether the given filter is `` verified '' that is whether it has been verified against its data URIs . 
Returns whether this filter is owned by this package . 
Returns a singleton for the DeviceIdleJobsController 
creates a newly scheduled job . 
removes task - this will happen if the task is cancelled , completed , etc. . 
Returns a list of pending jobs scheduled by the system service . 
Returns the object removed . 
Returns a list of all pending jobs . 
adds a job to the master list , persisting it if necessary . 
removes the provided job . 
Creates an instance of the proxy and binds it to the appropriate FusedProvider . 
gets the country from different sources in order of the reliability . 
Find the country from LocationProvider . 
Creates an instance of the proxy and binds it to the appropriate FusedProvider . 
Gets the distance from the current location to the fence 's boundary . 
Returns the name of this provider . 
Returns the year of GPS hardware . 
returns true if any of packages are in whitelist 
gets the cached coarse location , or generate a new one and cache it . 
creates a coarse location . 
Returns the duration that this request has been active . 
Returns the time since the initial request in ms. 
Returns the fastest interval that has been tracked . 
Returns the slowest interval that has been tracked . 
Returns true if a request is active for these tracked statistics . 
Returns the system information of the GNSS hardware . 
Returns `` true '' if access to the specified location provider is allowed by the current user 's settings . 
Returns `` true '' if access to the specified location provider is allowed by the specified user 's settings . 
Returns the permission string associated with the specified resolution level . 
Returns the resolution level allowed to the given PID/UID pair . 
Returns the resolution level allowed to the caller @return resolution level allowed to caller 
returns the minimum resolution level required to use the specified location provider . 
Returns all providers by name , including passive , but excluding fused , also including ones that are not permitted to be accessed by the calling activity or are currently disabled . 
returns all providers by name , that match criteria and are optionally enabled . 
returns the name of the best provider given a Criteria object . 
Creates a LocationRequest based upon the supplied LocationRequest that to meets resolution and consistency requirements . 
Returns `` true '' if the UID belongs to a bound location provider . 
Returns true if the given package belongs to the given uid . 
gets the info for this session . 
gets the tag for the session . 
gets the intent the app sets for their media button receiver . 
gets this session 's flags . 
gets the user id this session was created for . 
gets the type of playback , either local or remote . 
gets the local audio stream being used . 
gets the type of volume control . 
gets the max volume that can be sets . 
gets the current volume for this session . 
gets the volume we 'd like it to be sets to . 
adds a record to the priority tracker . 
removes a record from the priority tracker . 
gets the current priority sorted list of active sessions . 
gets the current priority sorted list of active sessions that use transport controls . 
gets the highest priority active session . 
gets the highest priority session that can handle media buttons . 
gets a priority sorted list of sessions . 
returns the connected MmsService instance , if not connected , try connecting . 
sets the password for encrypting the master key . 
gets the type of encryption used to encrypt the master key . 
sets a field in the crypto header . 
Gets a field from the crypto header . 
adds this token/secret pair to the sets of ways we can recover a disk encryption key . 
Find the Nth field of the event . 
removes unnecessary entries in the temp whitelist 
sets uid rules on a particular firewall chain . 
adds or removes a uid to the firewall blacklist for all network ifaces . 
adds or removes a uid to the firewall blacklist for all network ifaces . 
Creates a wrapper that contains the caller context and a normalized request . 
returns network summary , splicing between DEV and XT stats when appropriate . 
returns network history , splicing between DEV and XT stats when appropriate . 
returns snapshot of current tethering statistics . 
sets the active scorer . 
Returns a sets of all score caches that are currently active . 
adds a service to our callbacks . 
removes access for any services that no longer exist . 
removes a service for the given user by ComponentName 
Removes a service from the list but does not unbind @return the removed service . 
Removes a service from the list and unbinds . 
removes a listener binder directly 
gets the held value and clear it . 
Returns the timestamp to use for time-based sorting in the ranker . 
sets the visibility of the notification . 
Gets visual override . 
Sets visibility override . 
Removes old rule instances whose owner is not installed . 
Returns the current battery level as a 0-100 integer . 
returns the recorded compile time for a given code path . Returns 0 if there is no recorded time . 
Returns the instruction sets that should be used to compile dex code . 
Returns deduplicated list of supported instructions for dex code . 
Returns false if the package was not signed by all the keys in the KeySet . Returns true if the package was signed by at least the keys in the given KeySet . 
Returns false if the package was not signed by all the keys in the KeySet , or if the package was signed by keys not in the KeySet . 
Returns true if the package can safely be added to the keyset metadata . 
removes any KeySets the package no longer defines . 
Returns null if the package is unknown or does not have a KeySet corresponding to that alias . 
Creates a new KeySet corresponding to the given keys . 
Adds the given PublicKey to the system , deduping as it goes . 
Returns KEYSET_NOT_FOUND if there is n't one . 
Gets an unused stable identifier for a KeySet . 
sets each KeySet ref count . 
Returns the difference of free space to the low-storage-space threshold . 
Creates oat dir for the specified package . 
Returns true if the profiling data collected for the given app indicate that the apps 's APK has been loaded by another app . 
returns true if the given list is not empty and all of its contents have an activityInfo with the given package name . 
Returns if intent can be forwarded from the sourceUserId to the targetUserId 
returns matching ResolveInfo in target user if any . 
Returns true if application is not found or there was an error . 
gets the verification agent timeout . 
gets the default verification agent response code . 
gets the `` allow unknown sources '' setting . 
creates args that describe an existing installed package . 
removes entries from the keystore daemon . 
Returns the XML output as a byte array , or null if there is none . 
Returns the default browser XML representation as a byte array , or null if there is none . 
returns a <b> copy </b> of the collection of packages known to the package manager . 
returns the compiler filter for `` full '' compilation . 
returns the non-profile-guided filter corresponding to the given filter . 
adds a verifier which is added to our sufficient list . 
Returns whether verification is considered complete . 
Returns whether installation should be allowed . 
Returns whether the timeout was extended for verification . 
Sets the global gids , applicable to all users . 
Gets whether this state has a given runtime permission for a given device user id . 
Gets whether this state has a given install permission . 
Gets whether the state has a given permission for the specified user , regardless if this is an install or a runtime permission . 
Returns whether the state has any known request for the given permission name , whether or not it has been granted . 
Gets all permissions for a given device user id regardless if they are install time or runtime permissions . 
Gets the state for an install permission or null if no such . 
Gets the state for a runtime permission or null if no such . 
Gets all install permission states . 
Gets all runtime permission states . 
Gets the flags for a permission regardless if it is install or runtime permission . 
Sets the device/profile owner information . 
returns the SHA-1 of a file . 
returns all the certs stored with this policy stanza . 
returns whether this policy object contains package name mapping refinements . 
returns the mapping of all package name refinements . 
returns whether the policy object has a global seinfo tag attached . 
Adds a signature to the sets of certs used for validation checks . 
sets the global seinfo tag for this policy stanza . 
creates a package name to seinfo value mapping . 
Returns -1 if we could not find an available UserId to assign 
returns the pinned shortcut IDs for the publisher package . 
adds a shortcut , or update one with the same ID , with taking over existing flags . 
removes all shortcuts that are n't pinned nor dynamic . 
removes all dynamic shortcuts . 
removes a dynamic shortcut by ID . 
returns the base state file name 
returns the last reset time . 
returns the next reset time . 
returns the per-user state . 
returns the per-user per-package state . 
removes all the information associated with a package . 
removes from it . 
removes from it . 
Returns a UserInfo object with the name filled in , for Owner , or the original if the name is already sets . 
Returns who sets a user restriction on a user . 
Returns an array of user ids . 
Removes the app restrictions file for a specific package and user id , if it exists . 
Find the current guest user . 
Removes a user and all data directories created for that user . 
Returns the next available user id , filling in any holes in the ids . 
sets serial number stored in user directory inode . 
returns serial number stored in user directory inode . 
removes all the users except of the system one . 
creates the global actions dialog . 
Returns a bitmap suitable for the all apps view . 
Returns true if the key can have global actions attached to it . 
returns an Intent to launch the currently active dock app as home . Returns null if the standard home should be launched , which is the case if any of the following is true : <ul> <li> The device is not in either car mode or desk mode <li> The device is in car mode but mEnableCarDockHomeCapture is false <li> The device is in desk mode but ENABLE_DESK_DOCK_HOME_CAPTURE is false <li> The device is in car mode but there 's no CAR_DOCK app with METADATA_DOCK_HOME <li> The device is in desk mode but there 's no DESK_DOCK app with METADATA_DOCK_HOME </ul> @return A dock intent . 
Gets the shortcut intent for a given keycode + modifier . 
Sets the current rotation . 
Gets the proposed rotation . 
Returns true if sensor is enabled and false otherwise 
Gets the proposed rotation . 
Returns true if the tilt angle is acceptable for a given predicted rotation . 
Returns true if the orientation angle is acceptable for a given predicted rotation . 
Returns true if the predicted rotation is ready to be advertised as a proposed rotation . 
Sets DIRTY_IS_POWERED if a change occurred . 
Sets DIRTY_STAY_ON if a change occurred . 
Returns true if the wakefulness changed and we need to restart power state calculation . 
Returns true if the device should automatically nap and start dreaming when the user activity timeout has expired and it 's bedtime . 
Returns true if the device should go to sleep now . 
Returns true if the device is being kept awake by a wake lock , user activity or the stay on while powered setting . 
Returns true if the device is allowed to dream in its current state . 
Returns true if the device is allowed to doze in its current state . 
returns true if we must keep a suspend blocker active on behalf of the display . 
sets the setting that determines whether the device stays on when plugged in .  
Returns the list of searchable activities . 
Returns a list of the searchable activities that can be included in global search . 
Returns a list of activities that handle the global search intent . 
Gets the name of the global search activity . 
Gets the name of the web search activity . 
Returns the SearchableInfo for a given activity . 
Returns a list of the searchable activities that can be included in global search . 
Gets the name of the global search activity . 
Gets the name of the web search activity . 
Gets the system context . 
Returns true if the system is running in safe mode . 
gets a binder service by its name . 
gets a local service by interface . 
Creates and starts a system service . 
Sets the safe mode flag for services to query . 
Returns whether we are booting into safe mode . 
creates a TvInputHardware object with a specific deviceId . 
gets the list of TvStreamConfig which is buffered mode . 
Gets the current twilight state . 
Returns true if it is currently night time . 
creates a new ManagedApplicationService object but do not yet bind to the user service . 
creates a EnabledComponentObserver instance . 
returns all VrListenerService components installed for this user . 
returns all VrListenerService components enabled for this user . 
creates a SettingsObserver instance . 
adds a listener for setting changes . 
removes a listener for setting changes . 
sets the current VR mode state . 
sets the current VR mode state immediately . 
returns NO_ERROR if the given package is installed on the device and enabled as a VrListenerService for the given current user , or a negative error code indicating a failure . 
Returns all packages declared in the framework resources as potential WebView providers .  
Returns the WebView provider for which we creates relro files . 
Returns the only fallback provider in the sets of given packages , or null if there is none . 
Returns either the package info of the WebView provider determined in the following way : If the user has chosen a provider then use that if it is valid , otherwise use the first package in the webview priority list that is valid . 
Returns whether WebView is ready and is not going to go through its preparation phase again directly . 
Returns whether this provider is valid for use as a WebView provider . 
Gets the minimum version code allowed for a valid provider . 
Returns whether the given package is enabled . 
returns true if the package is installed and not hidden 
Returns whether the next thumbnail transition is aspect scaled up . 
Returns whether the next thumbnail transition is scaling up . 
returns the current thumbnail transition state . 
Returns the human readable name of a window transition . 
Returns true if the animation target is the same as the input bounds . 
Returns true if the dim should be fullscreen . 
Returns the display info . 
Gets the bounds of the dim layer user . 
returns true if dim layer is showing 
returns true if in a transition period 
Returns true if the specified UID has access to this display . 
Returns null if the touch does n't fall into a resizing area . 
Find the visible , touch-deliverable window under the given point 
Gets the amount how much to minimize a stack depending on the interpolated fraction t. 
Returns a new timeout to continue waiting in nanoseconds , or 0 to abort dispatch . 
adds the specified listener to the list . 
removes the specified listener from the list . 
Returns true if animating . 
Returns true if animating . 
sets the task bounds . 
Sets the bounds used to calculate the insets .  
Gets the bounds used to calculate the insets .  
returns true if the current bound can gets outputted to the rest of the system as-is . 
Returns true if the task is currently in docked workspace , or it 's side-by-side to a docked task . 
Returns true if the move operation should be ended . 
Returns the side of the screen the dim layer should be shown . 
sets the bounds of the stack and its containing tasks . 
returns true if the current bound can gets outputted to the rest of the system as-is . 
Sets the amount how much we currently minimize our stack . 
returns the list of Windows from the passed token on the given Display . 
Returns true if we 're done setting up any transitions . 
Returns whether screen capture is disabled for all windows of a specific user . 
sets mScreenCaptureDisabled for specific user 
creates a new TaskStack and place it on a DisplayContent . 
returns true if the input task id represents a valid window manager task . 
Returns whether there is a docked task for the current user . 
Returns true if the rotation has been changed . 
Returns the focused window in the following format : windowHashCodeInHexadecimal windowName @param client The remote client to send the listing to . 
returns the list of WindowStates associated on the passed display . 
returns the list of WindowStates associated on the passed display . 
returns true if this window or its app token is currently animating . 
Returns true if the window has a surface that it has drawn a complete UI in to . 
Returns true if the window has a surface that it has drawn a complete UI in to . 
returns true if the window is opaque and fully drawn . 
returns whether this window has moved . 
Returns true if this window is visible and belongs to a dead app and should n't be removed , because we want to preserve its location on screen to be re-activated later when the user interacts with it . 
sets whether we got resized but drag resizing flag was false . 
Creates and loads the policy data from xml . 
Creates and loads the policy data from xml for data that is shared between various profiles of a user . 
sets an alarm for an upcoming event - expiration warning , expiration , or post-expiration reminders . 
Find the admin for the component and userId bit of the uid , then check the admin 's uid matches the uid . 
returns a single admin 's expiration cycle time , or the min of all cycle times . Returns 0 if not configured . 
Returns 0 if not configured . 
Returns the admin with the strictest policy on maximum failed passwords for : <ul> <li> this user if it has a separate profile challenge , or <li> this user and all profiles that do n't have their own challenge otherwise . 
sets the storage encryption request for a single admin . 
gets the current storage encryption request status for a given admin , or aggregate of all active admins . 
gets the current encryption status of the device . 
sets whether the screen capture is disabled for the user managed by the specified admin . 
Returns whether or not auto time is required by the device owner . 
Gets whether or not all device cameras are disabled for a given admin , or disabled for any active admins . 
Gets the disabled state for features in keyguard for the given admin , or the aggregate of all active admins if who is null . 
Returns the `` name '' of the device owner . 
Returns the active device owner or null if there is no device owner . 
Sets which packages may enter lock task mode . 
Returns the target sdk version number that the given packageName was built for in the given user . 
Removes the admin from the policy . 
Sets the user restrictions migrated flag , and also writes to the file . 
Sets the remote bugreport uri and hash , and also writes to the file . 
Sets the user restrictions migrated flag , and also writes to the file . 
Returns the new batch of logs since the last call to this method . Returns null if rate limit is exceeded . 
Returns seconds since Unix Epoch . 
Returns the hex representation of the last matching packet . 
adds a binary range of the packet that does not include a lifetime to mNonLifetimes . 
Find the single IPv4 address if there is one , otherwise returns null . 
sets version of APF instruction sets to generate instructions for . 
adds an unconditional jump instruction to the end of the program . 
adds an instruction to the end of the program to adds register R1 to register R0 . 
adds an instruction to the end of the program to multiply register R0 by register R1 . 
adds an instruction to the end of the program to divide register R0 by register R1 . 
adds an instruction to the end of the program to logically and register R0 with register R1 and store the result back into register R0 . 
adds an instruction to the end of the program to logically or register R0 with register R1 and store the result back into register R0 . 
adds an instruction to the end of the program to shift register R0 left by the value in register R1 . 
adds an instruction to swap the values in register R0 and register R1 . 
Returns an overestimate of the size of the generated program . 
Adds the optional parameters to the client-generated ACK packet . 
Adds optional parameters to the DECLINE packet . 
Adds optional parameters to a DISCOVER packet . 
Adds additional parameters to the INFORM packet . 
Adds the optional parameters to the client-generated NAK packet . 
Adds the optional parameters to the server-generated OFFER packet . 
Returns the transaction ID . 
Returns the client MAC . 
Returns the client ID . 
Adds an optional parameter containing a single byte value . 
Adds an optional parameter containing an array of bytes . 
Adds an optional parameter containing an IP address . 
Adds an optional parameter containing a list of IP addresses . 
Adds an optional parameter containing a short integer 
Adds an optional parameter containing a simple integer 
Adds an optional parameter containing an ASCII string . 
Adds the special end-of-optional-parameters indicator . 
Adds common client TLVs . 
Creates a concrete DhcpPacket from the supplied ByteBuffer . 
Returns the parsed lease time , in milliseconds , or 0 for infinite . 
Adds the optional parameters to the client-generated REQUEST packet . 
sets the TCP buffer sizes to use . 
sets the HTTP Proxy configuration to use . 
Returns false if we have lost provisioning , true otherwise . 
Returns the total time recorded , in milliseconds , or 0 if not started . 
sets progress of a print job . 
sets status of a print job . 
sets status of a print job . 
gets the custom icon for a printer . 
gets the custom icon for a printer . 
adds multiple users at once . 
sets up a component in the mock package manager to be an active admin . 
Returns if the system is bound as client to this service . 
adds the keyset information for a package to a system w/no previous keysets 
adds orthoganal keyset info to system and ensure previous keysets are unmodified . 
adds identical keyset info to system via new package and ensure previous keysets has reference count incremented 
adds a package which is signed by a keyset which contains a previously seen public key and make sure its refernces are incremented . 
adds a defined keyset make sure it shows up 
adds 2 defined keysets which refer to same keyset and make sure ref-ct is 2 
adds defined keyset , removes it , adds again and make sure diff id . 
adds upgrade keyset for existing defined keyset and check that it is recorded 
adds upgrade keyset for non-existing defined and check that it compains 
removes package and validate that keyset and public keys are removed 
removes package and validate that keysets remain if defined elsewhere but have refcounts decreased . 
removes package which used defined and upgrade keysets and ensure removed 
sets the mode for various tests . 
Find activities that support a given intent . 
Returns null if the xml resource could not be found for any reason . 
Find a single content provider by its base path name . 
gets the activity information for a particular activity . 
Gets the UsageStats object for the given package , or creates one and adds it internally . 
Gets the ConfigurationStats object for the given configuration , or creates one and adds it internally . 
gets the latest stats that exist for this interval type . 
Find the interval that best matches this range . 
removes any usage stat files that are too old . 
gets the Configuration Statistics from the current device statistics and merge them with the backed up usage statistics . 
returns the currently attached USB accessory 
returns true if the USB device should not be accessible by applications 
Returns true if successful , false in case of error . 
Returns true if successful , false in case of error . 
Returns true if successful , false in case of error . 
Returns a list of all currently attached USB devices 
Returns null if a match is n't found . 
Sets whether the incoming call should be blocked . 
Sets whether the incoming call should be disconnected as if the user had manually rejected it . 
Sets whether the incoming call should not be displayed in the call log . 
Sets whether a missed call notification should not be shown for the incoming call . 
Returns the telecom internal call ID associated with this conference .  
Sets the telecom internal call ID associated with this conference .  
Returns the list of connections currently associated with the conference call . 
Gets the state of the conference call .  
Returns the capabilities of the conference .  
Returns the properties of the conference .   
Returns VideoProvider of the primary call . 
Returns video state of the primary call . 
Sets state to be on hold . 
Sets state to be dialing . 
Sets state to be active . 
Sets state to disconnected . 
Sets the capabilities of a conference .  
Sets the properties of a conference .   
Adds the specified connection as a child of this conference . 
Removes the specified connection as a child of this conference . 
Sets the connections with which this connection can be conferenced . 
sets the video state for the conference . 
Sets the video connection provider . 
Returns the connections with which this connection can be conferenced . 
adds a listener to be notified of a state change .  
Removes the specified listener .  
Sets the label and icon status to display in the InCall UI . 
Returns the extras associated with this conference . 
Returns binder object which can be used across IPC methods .  
Sets the camera to be used for the outgoing video . 
Sets the surface to be used for displaying a preview of what the user 's camera is currently capturing . 
Sets the surface to be used for displaying the video received from the remote device . 
Sets the device orientation , in degrees . 
Sets camera zoom ratio . 
Returns the Telecom internal call ID associated with this connection .  
Returns the video state of the connection .  
Returns whether this connection is requesting that the system play a ringback tone on its behalf . 
Returns the extras associated with this connection . 
removes a previously assigned listener that was being notified of state changes .  
Sets the telecom call ID associated with this Connection .  
sets the video state for the connection . 
Sets state to be on hold . 
Sets the video connection provider . 
Sets state to disconnected . 
Sets the time at which a call became active on this Connection .  
Sets the label and icon status to display in the in-call UI . 
Sets the connections with which this connection can be conferenced . 
Returns the connections or conferences with which this connection can be conferenced . 
Sets the conference that this connection is a part of .  
Returns the internal Telecom ID associated with the connection request .  
Adds a new conference call . 
Adds an existing connection to the list of connections , identified by a new call ID unique to this connection service . 
Sets a call 's state to disconnected . 
Sets a call 's state to be on hold . 
Sets the call video provider for a call . 
Sets the video state associated with a call . 
Sets the specified package name as the default dialer application for the current user .  
Sets the specified package name as the default dialer application for the specified user .  
Returns the installed dialer application for the current user that will be used to receive incoming calls , and is allowed to make emergency calls .  
Returns the installed dialer application for the specified user that will be used to receive incoming calls , and is allowed to make emergency calls .  
Returns a list of installed and available dialer applications . 
Returns the code for the reason for this disconnect . 
Returns a short label which explains the reason for the disconnect cause and is for display in the user interface . 
Returns a description which explains the reason for the disconnect cause and is for display in the user interface . 
Returns an explanation of the reason for the disconnect . 
Returns the tone to play when disconnected . 
Returns the gateway address to dial when placing the call . 
Returns the address that the user is trying to connect to via the gateway . 
Returns if the device can support additional calls . 
Returns null if the service is not fully initialized .  
Returns null if the service is not fully initialized . 
Sets the microphone mute state . 
Sets the camera to be used for the outgoing video . 
Sets the surface to be used for displaying a preview of what the user 's camera is currently capturing . 
Sets the surface to be used for displaying the video received from the remote device . 
Sets the device orientation , in degrees . 
Sets camera zoom ratio . 
Returns an object for remotely communicating through the video call provider 's binder . 
Returns an empty list if this is not a conference call or if the conference call contains no children . 
Returns the current connection capabilities bit-mask . 
Returns the current connection properties bit-mask . 
Sets the microphone mute state . 
Sets the address .  
Sets the subscription address .  
Sets the capabilities .  
Sets the icon .  
Sets the highlight color .  
Sets the short description .  
Sets the enabled state of the phone account .  
Sets the enabled state of the phone account .  
Gets the state of the conference call .  
Returns the capabilities of the conference .  
Returns the properties of the conference .  
Returns a list of independent connections that can me merged with this conference . 
Sets the user-chosen default for making outgoing phone calls .  
Returns the current SIM call manager . 
Returns the current SIM call manager for the specified user .  
Returns the current connection manager .  
removes all Accounts that belong to the calling package from the system .  
removes all Accounts that belong to the calling package from the system .  
removes all Accounts that belong to the specified package from the system .  
returns whether a given phone number is the configured voicemail number for a particular phone account . 
returns the voicemail number for a given phone account . 
returns the line 1 phone number for given phone account . 
Returns whether there currently exists is a ringing incoming-call .  
Returns whether TTY is supported on this device .  
Returns the current TTY mode of the device . 
Removes the missed-call notification if one is present . 
Sets the video state for the current video call . 
Creates a MediaProfile instances from a parcel . 
Creates a CallCameraCapabilities instances from a parcel . 
Gets the duration of the voicemail in millis , or zero if the field is not sets . 
Returns the package name of the source that added this voicemail , or null if this field is not sets . 
Returns the application-specific data type stored with the voicemail , or null if this field is not sets . 
Gets the Uri that can be used to refer to this voicemail , and to make it play . Returns null if we do n't know the Uri . 
Returns the text transcription of this voicemail , or null if this field is not sets . 
Gets the configuration values for a particular subscription , which is associated with a specific SIM card . 
Gets the configuration values for the default subscription . 
Returns a new bundle with the default value for every supported configuration variable .  
sets the cell location data . 
sets the cell location data . 
Returns the CDMA service category to modify . 
Returns the CDMA language code for this service category . 
Returns the maximum number of messages to store for this service category . 
Returns the CDMA service category to modify . 
Returns the CDMA language code for this service category . 
Returns the result of service programming for this category @return the result of service programming for this category 
creates a new CellLocation from a intent notifier Bundle This method is used by PhoneStateIntentReceiver and maybe by external applications . 
returns a new CellLocation object representing an unknown location , or null for unknown/none phone radio types . 
gets signal level as an int from 0 . 
gets the signal level as an asu value between 0 . 
gets the signal strength as dBm 
gets signal level as an int from 0 . 
gets the signal level as an asu value between 0 . 
gets cdma as level 0 . 
gets Evdo as level 0 . 
gets the signal strength as dBm 
gets the CDMA RSSI value in dBm 
gets the CDMA Ec/Io value in dB 10 
gets the EVDO RSSI value in dBm 
gets the EVDO Ec/Io value in dB 10 
gets the signal to noise ratio . 
gets signal level as an int from 0 . 
gets the signal strength as dBm 
gets the signal level as an asu value between 0 . 
gets signal level as an int from 0 . 
gets signal strength as dBm 
gets the LTE signal level as an asu value between 0 . 
gets the timing advance value for LTE .  
gets signal level as an int from 0 . 
gets the signal strength as dBm 
gets the signal level as an asu value between 0 . 
Returns descriptive string for the specified disconnect cause . 
sets the location area code and the cell id . 
sets the primary scrambling code .  
sets intent notifier Bundle based on service state @param m intent notifier Bundle 
sets the cell id . 
sets the signal strength of the cell . 
Returns true if ch is not dialable or alpha char 
Returns null if phoneNumber == null 
Returns the network portion reversed . Returns null if phoneNumber == null 
Returns the last numDigits of the reversed phone number Returns null if np == null 
returns 0 on invalid value 
returns true iff the network portion of address is , as far as we can tell on the device , suitable for use as an SMS destination address . 
Returns the phone number formatting type for the given locale . 
Removes all dashes from the number . 
Returns integer corresponding to the input if input `` ch '' is ISO-LATIN characters 0-9 . Returns -1 otherwise 
returns true if the prefix of `` str '' is `` ignorable '' . 
Returns Default voice subscription Id . 
gets data connection APN type 
gets data connection APN . 
gets data connection change reason . 
gets the properties of the network link . 
gets data connection fail cause , in case there was a failure . 
gets phone ID . 
gets radio access family . 
gets String description of roaming type 
creates a new ServiceState from a intent notifier Bundle This method is used by PhoneStateIntentReceiver and maybe by external applications . 
gets current voice service state 
gets current voice network roaming status @return roaming status 
gets current voice network roaming type @return roaming type 
gets current data network roaming type @return roaming type 
sets whether data network registration state is roaming This should only be sets to the roaming value received once the data registration phase has completed .  
gets whether data network registration state is roaming @return true if registration indicates roaming , false otherwise 
gets current data network roaming type @return roaming type 
gets current registered operator name in long alphanumeric format . 
gets current registered voice network operator name in long alphanumeric format . 
gets current registered data network operator name in long alphanumeric format . 
gets current registered operator name in short alphanumeric format . 
gets current registered voice network operator name in short alphanumeric format . 
gets current registered data network operator name in short alphanumeric format . 
gets current registered voice network operator numeric id . 
gets current registered data network operator numeric id . 
gets current network selection mode . 
sets ServiceState based on intent notifier map . 
sets intent notifier Bundle based on service state . 
Returns a merged ServiceState consisting of the base SS with voice settings from the voice SS .  
creates a new SignalStrength from a intent notifier Bundle This method is used by PhoneStateIntentReceiver and maybe by external applications . 
gets the CDMA RSSI value in dBm 
gets the CDMA Ec/Io value in dB 10 
gets the EVDO RSSI value in dBm 
gets the EVDO Ec/Io value in dB 10 
gets the signal to noise ratio . 
gets the signal level as an asu value between 0 . 
gets the signal strength as dBm 
gets Gsm signal strength as dBm 
gets gsm as level 0 . 
gets the gsm signal level as an asu value between 0 . 
gets cdma as level 0 . 
gets the cdma signal level as an asu value between 0 . 
gets Evdo as level 0 . 
gets the evdo signal level as an asu value between 0 . 
gets LTE as dBm 
gets LTE as level 0 . 
gets the LTE signal level as an asu value between 0 . 
gets TD-SCDMA as level 0 . 
gets the TD-SCDMA signal level as an asu value .  
sets SignalStrength based on intent notifier map @param m intent notifier map 
sets intent notifier Bundle based on SignalStrength @param m intent notifier Bundle 
Sets the name displayed to the user that identifies this subscription 
Sets the name displayed to the user that identifies Subscription provider name 
Sets the color displayed to the user that identifies this subscription 
gets an instance of the SubscriptionManager from the Context . 
gets the active SubscriptionInfo with the input subId . 
gets the active SubscriptionInfo associated with the iccId @param iccId the IccId of SIM card @return SubscriptionInfo , maybe null if its not active 
gets the active SubscriptionInfo associated with the slotIdx @param slotIdx the slot which the subscription is inserted @return SubscriptionInfo , maybe null if its not active 
adds a new SubscriptionInfo to SubscriptionInfo database if needed @param iccId the IccId of the SIM card @param slotId the slot which the SIM is inserted @return the URL of the newly created row or the updated row 
sets SIM icon tint color by simInfo index @param tint the RGB value of icon tint color of the SIM @param subId the unique SubInfoRecord index in database @return the number of records updated 
sets display name by simInfo index @param displayName the display name of SIM card @param subId the unique SubscriptionInfo index in database @return the number of records updated 
sets display name by simInfo index with name source @param displayName the display name of SIM card @param subId the unique SubscriptionInfo index in database @param nameSource 0 : NAME_SOURCE_DEFAULT_SOURCE , 1 : NAME_SOURCE_SIM_SOURCE , 2 : NAME_SOURCE_USER_INPUT , -1 NAME_SOURCE_UNDEFINED @return the number of records updated or < 0 if invalid subId 
sets phone number by subId @param number the phone number of the SIM @param subId the unique SubscriptionInfo index in database @return the number of records updated 
sets data roaming by simInfo index @param roaming 0 : Do n't allow data when roaming , 1 : Allow data when roaming @param subId the unique SubscriptionInfo index in database @return the number of records updated 
gets slotId associated with the subscription . 
Returns the system 's default subscription id . 
Returns the system 's default voice subscription id . 
returns the SubscriptionInfo for default voice subscription .  
Returns the system 's default SMS subscription id . 
returns the SubscriptionInfo for default voice subscription .  
Returns the system 's default data subscription id . 
returns the SubscriptionInfo for default data subscription .  
Returns true if the device is considered roaming on the current network for a subscription . 
Returns a constant indicating the state of sim for the slot idx . 
Returns boolean value corresponding to query result . 
Returns integer value corresponding to query result . 
Returns the resources associated with Subscription .  
Returns the number of phones available . 
creates a new TelephonyManager object pinned to the given subscription ID . 
Returns the software version number for the device , for example , the IMEI/SV for GSM phones . returns null if the software version is not available . 
Returns the unique device ID , for example , the IMEI for GSM and the MEID or ESN for CDMA phones . returns null if device ID is not available . 
Returns the unique device ID of a subscription , for example , the IMEI for GSM and the MEID for CDMA phones . returns null if device ID is not available . 
Returns the current location of the device . 
Returns the neighboring cell information of the device . 
Returns the current phone type . 
Returns a constant indicating the device phone type for a subscription . 
Returns a constant indicating the device phone type . 
returns if the current radio is LTE on CDMA . 
Returns the alphabetic name of current registered operator . 
Returns the alphabetic name of current registered operator for a particular subscription . 
Returns true if the device is considered roaming on the current network , for GSM purposes . 
Returns true if the device is considered roaming on the current network for a subscription . 
returns general class of network type , such as `` 3G '' or `` 4G '' .  
Returns a constant indicating the state of the default SIM card . 
Returns the ISO country code equivalent for the SIM provider 's country code . 
Returns the ISO country code equivalent for the SIM provider 's country code . 
Returns the ISO country code equivalent for the SIM provider 's country code .  
Returns the serial number of the SIM , if applicable . returns null if it is unavailable . 
Returns the serial number for the given subscription , if applicable . returns null if it is unavailable . 
returns if the current radio is LTE on CDMA . 
returns if the current radio is LTE on CDMA for Subscription . 
Returns the unique subscriber ID , for example , the IMSI for a GSM phone . returns null if it is unavailable . 
Returns the unique subscriber ID , for example , the IMSI for a GSM phone for a subscription . returns null if it is unavailable . 
Returns the Group Identifier Level1 for a GSM phone . returns null if it is unavailable . 
Returns the Group Identifier Level1 for a GSM phone for a particular subscription . returns null if it is unavailable . 
Returns the phone number string for line 1 , for example , the MSISDN for a GSM phone . returns null if it is unavailable . 
Returns the phone number string for line 1 , for example , the MSISDN for a GSM phone for a particular subscription . returns null if it is unavailable . 
sets the line 1 phone number string and its alphatag for the current ICCID for display purpose only , for example , displayed in Phone Status . 
sets the line 1 phone number string and its alphatag for the current ICCID for display purpose only , for example , displayed in Phone Status .  
Returns the alphabetic identifier associated with the line 1 number . returns null if it is unavailable . 
Returns the alphabetic identifier associated with the line 1 number for a subscription . returns null if it is unavailable .  
returns the sets of subscriber IDs that should be considered as `` merged together '' for data usage purposes .  
Returns the MSISDN string . returns null if it is unavailable . 
Returns the MSISDN string . returns null if it is unavailable . 
Returns the voice mail number . returns null if it is unavailable . 
Returns the voice mail number for a subscription . returns null if it is unavailable . 
Returns the complete voice mail number . returns null if it is unavailable . 
Returns the complete voice mail number . returns null if it is unavailable . 
Sets the voice mail number . 
Sets the voicemail number for the given subscriber .  
Returns the voice mail count . returns 0 if unavailable , -1 if there are unread voice messages but the count is unknown . 
Returns the voice mail count for a subscription . returns 0 if unavailable . 
Returns the IMS home network domain name that was loaded from the ISIM . 
Returns one of the following constants that represents the current state of all phone calls . 
Returns the CDMA ERI icon mode for a subscription . 
Returns all observed cell information from all radios on the device including the primary and neighboring cells .  
Returns the MMS user agent . 
Returns the MMS user agent profile URL . 
Returns the response APDU for a command APDU sent through SIM_IO . 
Returns the response APDU for a command APDU sent through SIM_IO .  
returns an appropriate subscription ID for any situation . 
Returns Default subscription . 
Returns Default phone . 
Sets the telephony property with the value specified .  
Gets the telephony property .  
Returns the response of ISIM Authetification through RIL . Returns null if the Authentification has n't been successed or is n't present iphonesubinfo . 
Returns the response of authentication for the default subscription . Returns null if the authentication has n't been successful Requires that the calling app has carrier privileges or READ_PRIVILEGED_PHONE_STATE permission .  
Returns the response of USIM Authentication for specified subId . Returns null if the authentication has n't been successful Requires that the calling app has carrier privileges .  
gets P-CSCF address from PCO after data connection is established or modified . 
sets IMS registration state @param Registration state 
gets the preferred network type .  
Sets the network selection mode to automatic . 
sets the preferred network type .  
sets the preferred network type to global mode which includes LTE , CDMA , EvDo and GSM/WCDMA . 
sets the preferred network type to global mode which includes LTE , CDMA , EvDo and GSM/WCDMA .  
Returns the result and response from RIL for oem request @param oemReq the data is sent to ril . 
Returns the IMS Registration Status 
Returns the Status of Volte 
Returns the Status of Wi-Fi Calling 
sets TelephonyProperties.PROPERTY _ ICC_OPERATOR_NUMERIC for the default phone .  
sets TelephonyProperties.PROPERTY _ ICC_OPERATOR_NUMERIC for the given phone .  
sets TelephonyProperties.PROPERTY _ ICC_OPERATOR_NUMERIC for the default phone .  
sets TelephonyProperties.PROPERTY _ ICC_OPERATOR_NUMERIC for the given phone .  
sets TelephonyProperties.PROPERTY _ ICC_OPERATOR_ISO_COUNTRY for the default phone .  
sets TelephonyProperties.PROPERTY _ ICC_OPERATOR_ISO_COUNTRY for the given phone .  
sets TelephonyProperties.PROPERTY _ SIM_STATE for the default phone .  
sets TelephonyProperties.PROPERTY _ SIM_STATE for the given phone .  
sets baseband version for the default phone . 
sets baseband version by phone id . 
sets phone type for the default phone . 
sets phone type by phone id . 
gets OTASP number schema for the default phone . 
gets OTASP number schema by phone id . 
gets SMS receive capable from system property for the default phone . 
gets SMS receive capable from system property by phone id . 
gets SMS send capable from system property for the default phone . 
gets SMS send capable from system property by phone id . 
sets the alphabetic name of current registered operator .  
sets the alphabetic name of current registered operator .  
sets roaming state of the current network , for GSM purposes . 
sets roaming state of the current network , for GSM purposes . 
sets the network type currently in use on the device for data transmission . 
sets the network type currently in use on the device for data transmission . 
Returns the subscription ID for the given phone account .  
Returns the service state information on specified subscription .  
Returns the URI for the per-account voicemail ringtone sets in Phone settings . 
Returns whether vibration is sets for voicemail notification in Phone settings . 
creates a new VoLteServiceState from a intent notifier Bundle This method is used by PhoneStateIntentReceiver and maybe by external applications . 
sets VoLteServiceState based on intent notifier map @param m intent notifier map 
sets intent notifier Bundle based on VoLteServiceState @param m intent notifier Bundle 
Sets IM as supported or not supported . 
Sets FT thumbnail as supported or not supported . 
Sets FT Store and Forward as supported or not supported . 
Sets File transfer HTTP as supported or not supported . 
Sets FT as supported or not supported . 
Sets IS as supported or not supported . 
Sets video sharing as supported or not supported during a CS call . 
Sets video sharing as supported or not supported . 
Sets social presence as supported or not supported . 
Sets capability discovery via presence as supported or not supported . 
Sets IP voice call as supported or not supported . 
Sets IP video call as supported or not supported . 
Sets Geo location Pull using File Transfer as supported or not supported . 
Sets Geo Pull as supported or not supported . 
Sets Geo Push as supported or not supported . 
Sets short messaging as supported or not supported . 
Sets store/forward and group chat supported or not supported . 
Gets the list of supported extensions . 
Sets the list of supported extensions . 
Gets the time stamp for when to query again . 
Sets the time stamp for when to query again . 
Gets the status code .  
Sets the status code .  
Gets the long value .  
Sets the long value .  
gets the client ID as integer value .  
sets the client ID as integer value .  
Gets the instance of a UceLong class .  
Gets the command ID .  
Sets the command ID .  
Gets the UCE command ID .  
Sets the command ID .  
Gets the user data .  
Sets the user data . 
Gets the status code .  
Sets the status code .  
Gets the instance of the OptionsCmdStatus class .  
Gets the Options command ID .  
Sets the Options command ID .  
Gets the request ID 
Sets the request ID 
Gets the SIP response code .  
Sets the SIP response code .  
Gets the reason phrase associated with the SIP responce code .  
Sets the SIP response code reason phrase .  
Gets the SIP retryAfter sec value .  
Sets the SIP retryAfter sec value 
Gets the UCE capability information .  
Sets the UCE Capability information .  
Gets the contact URI .  
Sets the contact URI .  
Gets the command ID .  
Sets the command ID .  
Gets the Presence command ID .  
Sets the command ID .  
Gets the user data .  
Sets the user data .  
Gets the status code .  
Sets the status code .  
Gets the request ID .  
Sets the request ID .  
Gets the publish trigger types .  
Sets the publish trigger type .  
Gets the Presence service resource instance information .  
Sets the Presence service resource instance information .  
Gets the resource URI .  
Sets the resource URI .  
Gets the display name .  
Sets the display name .  
Gets the resource instance state .  
Sets the resource instance state .  
Gets the resource ID .  
Sets the resource ID .  
Gets the reason phrase associated with the SIP response code .  
Sets the reason phrase associated with the SIP response code .  
Gets the entity URI .  
Sets the entity URI .  
Gets the tuple information .  
Sets the tuple information .  
Gets the URI .  
Sets the URI .  
Gets the version .  
Sets the version .  
Gets the RLMI state .  
Sets the RLMI state .  
Gets the RLMI list name .  
Sets the RLMI list name .  
Gets the subscription request ID .  
Sets the subscription request ID .  
Gets the presence subscription state .  
Sets the presence subscription state .  
Gets the presence subscription expiration time .  
Sets the presence subscription expiration time .  
Gets the presence subscription terminated reason .  
Sets the presence subscription terminated reason .  
Gets the media type .  
Sets the media type .  
Gets the service ID .  
Sets the service ID .  
Gets the service description .  
Sets the service description .  
Gets the service version .  
Sets the service version .  
Gets the Presence command ID .  
Sets the Presence command ID .  
Gets the request ID .  
Sets the request ID .  
Gets the SIP response code .  
Sets the SIP response code .  
Gets the reason phrase associated with the SIP responce code .  
Sets the SIP response code reason phrase .  
Gets the SIP retryAfter sec value .  
Sets the SIP retryAfter sec value 
Gets the Presence subscription state .  
Sets the Presence subscription state .  
Gets the feature tag .  
Sets the feature tag .  
Gets the contact URI .  
Sets the contact URI .  
Gets the timestamp .  
Sets the timestamp .  
Gets the instance of UCE Manager 
Gets the UCE service name 
Gets the IBinder to UCE service Client should call this after receving ACTION_UCE_SERVICE_UP event .  
Returns the column index to use to find the `` person_id '' field in the specified cursor , based on the contact URI that was originally queried .  
Returns the list of `` default '' carrier apps . 
Returns the list of `` default '' carrier app candidates . 
Returns ' ' in GSM alphabet if there 's no possible match . Returns GSM_EXTENDED_ESCAPE if this character is in the extended table . 
Returns GSM_EXTENDED_ESCAPE if this character is in the extended table . 
Returns ' ' in GSM alphabet if there 's no possible match . 
Returns the count of 7-bit GSM alphabet characters needed to represent this character . 
Returns the count of 7-bit GSM alphabet characters needed to represent this character using the default 7 bit GSM alphabet . 
Returns the count of 7-bit GSM alphabet characters needed to represent this string , and the language table and language shift table used to achieve this result . 
Returns the index into s of the first character after limit septets have been reached , starting at index start . 
returns the array of enabled national language single shift tables for SMS encoding . 
returns the array of enabled national language locking shift tables for SMS encoding . 
gets the Activity under test , starting it if necessary . 
sets the activity under test . 
sets the application for use during the test . 
Gets the class and package entries from a Jar . 
Gets the class path from the System Property `` java.class.path '' and splits it up into the individual elements . 
gets the arguments passed to this instrumentation . 
Returns the size predicate object , corresponding to the `` size '' argument value . 
Returns the list of intents that were broadcast since the last call to this method . 
Returns IContentProvider which calls back same methods in this class . 
Adds access to a provider based on its authority @param name The authority name associated with the provider . 
Sets up the environment for the test fixture . 
Creates and sets up a new instance of the provider . 
Creates a new content provider of the same type as that passed to the test case class , with an authority name sets to the authority parameter , and using an SQLite database as the underlying data source . 
Returns if the given diskName starts with the given prefix or not . 
Gets the current system context and stores it . 
Sets the application that is used during the test . 
Returns the Application object in use by the service under test . 
Returns the number of tests that will be run if you try to do this . 
Returns a title to display given the className of a test . 
gets the location of a view . 
Returns an enumeration of Strings with qualified class names 
Returns a list of test class and method names for each TestCase in suite . 
Gets the logger for debugging . 
Gets the handler on the transport 's thread . 
returns true if the URL is not available or the page is down 
Creates an instance of MediaRecorder to be used for the streamer . 
Sets the desired preview size . 
Sets the desired picture size . 
Sets the desired camera frame-rate . 
Sets the camera facing direction . 
sets whether to flip the camera image horizontally when using the front facing camera . 
Sets the camera flash mode . 
Returns the current flash mode . 
gets the actual camera facing . Returns 0 if actual facing is not yet known . 
gets the current camera rotation . 
Returns the camera facing that is chosen when DONT_CARE is specified . Returns 0 if neither a front nor back camera could be found . 
gets the actual camera width . Returns 0 if actual width is not yet known . 
gets the actual camera height . Returns 0 if actual height is not yet known . 
gets the actual camera frame-rate . Returns 0 if actual frame-rate is not yet known . 
Returns true if the camera can be started at this point . 
Returns true if the camera is currently running . 
Gets the latest camera frame for the client . Returns false if the frame could not be grabbed . 
Creates an instance of MediaRecorder to be used for the streamer . 
gets the quad coords for rotation . 
sets whether decoder may use OpenGL for decoding . 
Returns whether OpenGL is enabled for decoding . 
Gets the duration , in nanoseconds . 
Returns the name of this filter . 
Returns the signature of this filter . 
Returns the MffContext that the filter resides in . 
Returns true , if the filter is active . 
Returns the filter 's sets of input ports . 
Returns the filter 's sets of output ports . 
Returns the input port with the given name . 
Returns the output port with the given name . 
Returns true , if the filter is currently open . 
Returns true if the filter can be currently scheduled . 
Returns the current FrameManager instance . 
Returns whether the GraphRunner for this filter is running . 
Sets the minimum number of input frames required to process . 
Returns the minimum number of input frames required to process this filter . 
Sets the minimum number of available output ports required to process . 
Returns the minimum number of available outputs required to process this filter . 
Returns whether this Filter is allowed to use OpenGL . 
Adds a new Java library to the list to be scanned for filters . 
adds a filter to the graph . Adds the specified filter to the sets of filters of this graph . 
Adds a variable to the graph . 
Returns the filter with the specified name . 
Returns the context of the graph . 
Returns the filter with the specified name . 
Returns the VariableSource for the specified variable . 
Returns the GraphOutputTarget with the specified name . 
Returns the GraphInputSource with the specified name . 
Creates a new runner for this graph in the specified mode and executes it . Returns the runner to allow control of execution . 
Returns the GraphRunner for this graph . 
Returns whether the graph is currently running . 
Returns the frame 's type . 
sets the frame 's timestamp in nanoseconds . 
Returns the RGBA image contents as a Bitmap instance . 
Returns the context that the FrameManager is bound to . 
Returns the GraphRunner that the FrameManager is bound to . 
Sets the size of the cache . 
Returns the size of the cache . 
Adds a new frame slot to the frame manager . 
Removes a frame slot from the frame manager . 
Returns the FrameType 's class specifier , or null if no class was sets or the receiver is not an object-based type . 
Returns the FrameType 's element id . 
Returns the number of bytes of the FrameType 's element , or 0 if no such size can be determined . 
Returns the access hints bit-mask of the FrameType . 
Returns the number of dimensions of the FrameType or -1 if no dimensions were sets . 
Returns true , if the FrameType is fully specified . 
Returns the number of values in the Frame . 
Returns the values in the Frame as an array . 
Returns the value at the specified index . 
Returns the value as a FrameValue at the specified index . 
Returns the unit Quad . 
returns a Quad from the specified rectangle . 
returns a Quad from the specified rectangle coordinates . 
returns a Quad that spans the specified points and height . 
returns a Quad that represents the specified rotated rectangle . 
returns a Quad that represents the specified transformed rectangle . 
Returns the transformation matrix to transform the source Quad to the target Quad . 
Returns the centroid of the Quad . 
Returns the quad as a float-array of coordinates . 
Returns the Quad 's left-to-right edge . 
Returns the Quad 's top-to-bottom edge . 
Returns a retained frame ! 
Returns the currently running graph-runner . 
Returns the graph that this runner is currently executing . Returns null if no graph is currently being executed by this runner . 
Returns the context that this runner is bound to . 
Returns whether the graph is currently being executed . 
Returns whether the graph is currently paused . 
Returns whether the graph is currently stopped . 
Sets the filter scheduling strategy . 
Returns the current scheduling strategy . 
sets whether or not the runner is verbose . 
Returns whether the GraphRunner is verbose . 
Returns whether Filters of this GraphRunner can use OpenGL . 
Returns whether the GraphRunner flushes frames when running completes . 
Sets the listener for receiving runtime events .  
Returns the currently assigned GraphRunner.Listener . 
Returns the FrameManager that manages the runner 's frames . 
removes all frames that are waiting to be processed . Removes and releases frames that are waiting in the graph connections of the currently halted graphs , i.e. frames that are waiting to be processed . 
sets whether the InputPort automatically pulls frames . 
Returns whether the InputPort automatically pulls frames . 
Returns true , if the port is connected . 
Returns true , if there is a frame waiting on this port . 
Sets whether to wait for a frame on this port before processing . 
Returns whether the filter waits for a frame on this port before processing . 
Returns the input port 's name . 
Returns the FrameType of this port . 
returns the filter object that this port belongs to . 
sets whether frames are preserved when the context is paused . 
Returns whether frames are preserved when the context is paused . 
Returns the application context that the MffContext is attached to . 
Returns the context 's shared CameraStreamer . 
sets the default EGL config chooser . 
Returns true , if this context supports using OpenGL . 
Returns true , if this context supports camera streaming . 
Returns true , if this port is connected to a target port . 
Returns true , if there is no frame waiting on this port . 
Returns a frame for writing . 
Sets whether to wait until this port becomes available before processing . 
Returns whether the filter waits until this port is available before processing . 
Returns the output port 's name . 
returns the filter object that this port belongs to . 
Returns an identity shader for this context . 
creates and start a looper thread , returns the Handler 
Returns a number between -1 and 1 
Returns a number between -1 and 4 representing the score for this picture 
Adds an input port to the Signature . 
Adds an output port to the Signature . 
Returns the frame pushed out by the filter under test . 
Gets the stack trace for the error . 
Returns the process name that the package is going to use . 
Returns a WeakReference to an object that has no other references . 
returns message indicating expectation failures 
sets the server to be an HTTP/1 .0 or HTTP/1 .1 server . 
creates the server response and output to the stream @param ps The PrintStream to output response headers and data to 
sets up the activity and populate its UI from the persistent data . 
Returns timestamp in following format : yyyy-mm-dd-hh-mm-ss 
Returns the output header particular to the associated formatter 
Returns the output footer particular to the associated formatter 
Creates a TrackerEntry from a Location 
Creates a TrackerEntry from a log msg 
gets the cached list of music tracks @return @throws JSONException 
gets the list of music tracks from a server and returns the list of MusicTrack objects . 
returns a NetworkSecurityConfig that has an empty TrustAnchor sets . 
Removes the notification and stops tracking the session . 
returns the version number of the currently installed library . 
Returns a single testcase for each app to launch 
Gets the sound model for the given keyphrase , null if none exists . 
creates word of random assortment of lower/upper case letters 
creates and start a new AutoDispatchThread if one is not already running . 
Gets the sound model for the given keyphrase , null if none exists . 
creates a new instance of a Fragment with the given class name . 
sets the theme to be used for inflating drawables . 
returns the number of values in this array . 
returns the Resources object this array was loaded from . 
Returns null if the attribute is not defined . 
Returns null if the attribute is not defined . 
Returns a message about the parser state suitable for printing error messages . 
sets the newly decoded bitmap 's density based on the Options . 
Returns a color for an arbitrary point . 
Returns the Android bitmap config . 
Returns the hasAlpha rendering hint @return true if the bitmap alpha should be used at render time 
Returns a BufferedImage ready for drawing , based on the bitmap and paint delegate . 
Returns if the FontFamily should contain any fonts . 
Returns the color based on the position in the gradient . 
Returns the color between c1 , and c2 , based on the percent of the distance between c1 and c2 . 
Returns the channel value between 2 values based on the percent of the distance between the 2 values . . 
Returns a color for an arbitrary point . 
Sets the content of the matrix with the content of another matrix . 
Sets the content of the matrix with the content of another matrix represented as an array of values . 
Returns whether or not the matrix is identity . 
Adds the given transformation to the current Matrix <p/> This in effect does this = this matrix @param matrix 
Adds the given transformation to the current Matrix <p/> This in effect does this = matrix this @param matrix 
returns the value of stroke miter needed by the java api . 
Returns whether the path already contains any points . 
sets the beginning of the next contour relative to the last point on the previous contour . 
adds a closed rectangle contour to the path @param left The left side of a rectangle to adds to the path @param top The top of a rectangle to adds to the path @param right The right side of a rectangle to adds to the path @param bottom The bottom of a rectangle to adds to the path @param dir The direction to wind the rectangle 's contour 
returns a list of fonts that match the style and variant . 
Returns a reference to a service with the given name . 
returns a list of all currently running services . 
Returns milliseconds since boot , not counting time spent in deep sleep . 
Returns milliseconds since boot , including time spent in sleep . 
Returns nanoseconds since boot , including time spent in sleep . 
Returns milliseconds running in the current thread . 
Returns microseconds running in the current thread . 
Returns current wall time in microseconds . 
Sets the size of the cache .  
Returns the computed value or null if no value can be computed . 
Returns the number of values that have been evicted . 
Returns a copy of the current contents of the cache , ordered from least recently accessed to most recently accessed . 
Returns if the touch exploration in the system is enabled . 
Returns if the high text contrast in the system is enabled .  
Sets the current state and notifies listeners , if necessary . 
Creates a drop shadow of a given image and returns a new image which shows the input image on top of its drop shadow . 
Adds a parser to the stack . 
Removes the parser at the top of the stack 
Returns the current parser at the top the of the stack . 
Returns the previous parser . 
Returns null if nothing is found . 
Creates a LinearLayoutManager using the provided context . 
Returns the Layout Resource that should be used to inflate the action bar . 
Returns the view inflated . 
Find the background color for this bar from the theme attributes . 
Creates a Popup and adds it to the content frame . 
Returns a wrapper around different implementations of the Action Bar to provide a common API . 
Gets the menus to adds to the action bar from the callback , resolves them , inflates them and adds them to the action bar . 
Returns the icon for given density present in the given resource directory , taking layout direction into consideration . 
Returns the lock for the bridge 
Returns details of a framework resource from its integer value . 
Returns the name of a framework resource whose value is an int array . 
Returns the integer id of a framework resource , from a given resource type and resource name . 
Returns the list of possible enums for a given attribute name . 
Returns the platform build properties . 
Returns the bitmap for a specific path , from a specific project cache , or from the framework cache . 
Sets a bitmap in a project cache or in the framework cache . 
Returns the 9 patch chunk for a specific path , from a specific project cache , or from the framework cache . 
Sets a 9 patch chunk in a project cache or in the framework cache . 
Returns the delegate from the given native int . 
Adds a delegate to the manager and returns the native int used to identify it . 
Removes the main reference on the given delegate . 
Returns the layer save flags . 
sets an optional copy of the original content to be used during restore 
Sets the clip for the graphics2D object associated with the layer . 
Creates the root snapshot associating it with a given bitmap . 
Returns the current clip , or null if none have been setup . 
returns true if the nav bar is present and is vertical . 
Sets up the session for rendering . 
Returns the log associated with the session . 
Sets the time for which the next frame will be selected . 
Adds a given view to a given parent at a given index . 
Removes a child from its current parent . 
Removes a given view from its current parent . 
sets the scroll position on all the components with the `` scrollX '' and `` scrollY '' attribute . 
Returns the color value represented by the given string value @param value the color value @return the color as an int @throws NumberFormatException if the conversion failed . 
Returns a drawable from the given value . 
Returns a drawable from the given value . 
Returns the raw value from the given attribute float-type value string . 
removes the object at the top of the stack and returns it . 
Returns the object at the top of the stack . 
Returns the end point of a given segment @param type the segment type @param coords the segment coordinates array @param point the returns array where the point will be stored 
Returns the number of points stored in a coordinates array for the given segment type . 
Returns the estimated length of a flat path . 
Returns the estimated position along a path of the given length . 
Returns the point where the current segment ends 
Returns the current segment up to certain length . 
Returns the total length of the path 
Returns a dynamic integer for the given resource type/name , creating it if it does n't already exist . 
Returns a dynamic integer for the given resource type/name , creating it if it does n't already exist . 
Gets the Object mapped from the specified key , or null if no such mapping has been made . 
Gets the Object mapped from the specified key , or the specified Object if no such mapping has been made . 
Removes the mapping from the specified key , if there was any . 
Removes the mapping at the specified index . 
Adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one . 
Returns the number of key-value mappings that this SparseArray currently stores . 
Removes all key-value mappings from this SparseArray . 
creates a new rendering session and test that rendering the given layout does n't throw any exceptions and matches the provided image . 
creates a new rendering session and test that rendering the given layout does n't throw any exceptions and matches the provided image . 
creates a new rendering session and test that rendering the given layout on nexus 5 does n't throw any exceptions and matches the provided image . 
creates a new rendering session and test that rendering the given layout on given device does n't throw any exceptions and matches the provided image . 
Returns the new FQCN for the class , if the reference to this class needs to be updated . 
Returns the class reader object . 
Returns a map of all the dependencies found . 
Returns the list of classes that have not been renamed yet . 
Sets the map of classes to output as-is , except if they have native methods 
Sets the map of dependencies that must be completely stubbed 
Sets the map of files to output as-is . 
Returns true if a class has any native methods . 
Returns the list of class from layoutlib_create to inject in layoutlib . 
Returns the list of methods to rewrite as delegates . 
Returns the list of classes on which to delegate all native methods . 
Returns The list of methods to stub out . 
Returns the list of classes to rename , must be an even list : the binary FQCN of class to replace followed by the new FQCN . 
Returns the list of classes for which the methods returning them should be deleted . 
Returns the list of classes to refactor , must be an even list : the binary FQCN of class to replace followed by the new FQCN . 
Returns a map of all the dependencies found . 
Returns the list of class from layoutlib_create to inject in layoutlib . 
Returns the list of methods to rewrite as delegates . 
Returns the list of classes on which to delegate all native methods . 
Returns The list of methods to stub out . 
Returns the list of classes to rename , must be an even list : the binary FQCN of class to replace followed by the new FQCN . 
Returns the list of classes for which the methods returning them should be deleted . 
Returns the list of classes to refactor , must be an even list : the binary FQCN of class to replace followed by the new FQCN . 
Returns a list of fields which should be promoted to public visibility . 
Returns true if args where properly parsed . Returns false if program should exit with command-line usage . 
Sets the default listener for all methods not specifically handled . 
Removes it if null . 
Returns a new byte array containing the bytes corresponding to the given characters , encoded in US-ASCII . 
Returns a new byte array containing the bytes corresponding to the given characters , encoded in ISO-8859-1 . 
Returns a new byte array containing the bytes corresponding to the given characters , encoded in UTF-8 . 
Returns a new byte array containing the bytes corresponding to the given characters , encoded in UTF-16BE . 
Returns the string representation of i and leaves sb alone if sb is null . Returns null and appends the string representation of i to sb if sb is non-null . 
Returns the string representation of n and leaves sb alone if sb is null . Returns null and appends the string representation of n to sb if sb is non-null . 
Returns names of processes that loaded this class . 
Returns how long this class initialization and all the nested class initializations took . 
Returns how long this class initialization took . 
Gets the median time that this operation took across all processes . 
Returns true if the given process name is a `` long running '' process or service . 
Sets name of this process . 
Returns true if this process comes from the zygote . 
Returns true if the class should be preloaded . 
sets the device that should be used . 
returns a map of class names to class-loader names derived from the hprof dump . 
Find the client with the given process name or process id . 
Find the device with the given serial . 
gets all devices ddms knows about . 
returns the build type of the given device . 
removes files involved in a standard build that interfere with collecting data . 
returns an inverted mapping . 
Returns the produced string . 
sets the byte array to be used to construct the LV . 
Returns the constructed LV formatted byte-array . 
Returns an iterator to step through a LV formatted byte-array . 
sets the byte array to be used to construct the TLV . 
Returns the constructed TLV formatted byte-array . 
Returns the size of the TLV formatted portion of the wrapped or allocated byte array . 
Returns an iterator to step through a TLV formatted byte-array . 
Returns the maximum string length that can be used to specify a NAN service name . 
Returns the maximum length of byte array that can be used to specify a NAN service specific information field : the arbitrary load used in discovery or the message length of NAN message exchange . 
Returns the maximum length of byte array that can be used to specify a NAN match filter . 
Sets the status of the session to terminated - i.e. an indication that already terminated rather than executing a termination .  
Returns the current status of NAN API : whether or not NAN is available . 
Returns the characteristics of the Wi-Fi NAN interface : a sets of parameters which specify limitations on configurations , e.g. the maximum service name length . 
creates a Bonjour service information object . 
creates wpa_supplicant service query for PTR record . 
creates wpa_supplicant service query for TXT record . 
creates bonjour service discovery request . 
creates a service discovery request to search all Bonjour services . 
creates a service discovery to search for Bonjour services with the specified service type . 
creates a service discovery request to gets the TXT data from the specified Bonjour service . 
Returns query DNS name . 
returns query DNS type . 
returns bonjour version number . 
returns instance name . 
returns TXT record data . 
Creates DnsSd service response .  
returns the list of the query string for wpa_supplicant .  
returns transaction id . 
sets transaction id . 
returns wpa_supplicant request string .  
creates a service discovery request . 
creates a service discovery request . 
returns the service type of service discovery response . 
returns the status code of service discovery response . 
returns the transaction id of service discovery response .  
returns response data . 
Returns the source device of service discovery response . 
creates the list of WifiP2pServiceResponse instance from supplicant event . 
creates UPnP service information object . 
creates wpa_supplicant service query for upnp . 
creates a service discovery request to search all UPnP services . 
creates a service discovery request to search specified UPnP services . 
returns UPnP version number . 
returns Unique Service Name strings . 
creates upnp service response .  
Returns true if WPS push button configuration is supported 
Returns true if WPS keypad configuration is supported 
Returns true if WPS display configuration is supported 
Returns true if the device is capable of service discovery 
Returns true if the device reaches the limit . 
Returns true if the device is a group owner 
Returns true if the group reaches the limit . 
removes a device from the list @param deviceAddress is the address of the device @return WifiP2pDevice device removed , or null if none removed 
Returns true if any device the list was removed 
gets the list of devices 
gets the list of clients currently part of the p2p group 
gets the passphrase of the group . 
gets the interface name on which the group is created 
returns the list of p2p group . 
adds the specified group to this group list . 
removes the group with the specified network id from this group list . 
removes the group with the specified device address from this group list . 
returns the network id of the group owner profile with the specified p2p device address .  
returns the network id of the group with the specified p2p device address and the ssid .  
returns the group owner address of the group with the specified network id @param netId network id .  
returns true if this group list contains the specified network id .  
creates a p2p group with the current device as the group owner . 
removes the current p2p group . 
adds a service discovery request . 
sets p2p device name . 
gets a reference to WifiP2pService handler . 
gets a reference to P2pStateMachine handler . 
gets a handover request message for use in WFA NFC Handover transfer .  
gets a handover select message for use in WFA NFC Handover transfer .  
Returns the key of the listener . 
sets whether this network is visible in latest Qualified Network Selection @param seen value sets to candidate 
gets whether this network is visible in latest Qualified Network Selection @return returns true -- network is visible in latest Qualified Network Selection false -- network is invisible in latest Qualified Network Selection 
sets the score of the temporary candidate of current network selection procedure @param score value sets to mCandidateScore 
gets the score of the temporary candidate of current network selection procedure @return returns score of the temporary candidate of current network selection procedure 
gets user preferred choice over this configuration @return returns configKey of user preferred choice over this configuration 
sets user preferred choice over this configuration @param newConnectChoice , the configKey of user preferred choice over this configuration 
sets the timeStamp when user select a choice over this configuration @param timeStamp , the timestamp sets to connectChoiceTimestamp , expected timestamp should be obtained from System.currentTimeMillis 
gets current network network selection status @return returns current network network selection status 
sets current networ work selection status @param status network selection status to sets 
sets Network disable reason @param reason Network disable reason 
gets the disable counter of a specific reason @param reason specific failure reason @exception throw IllegalArgumentException for illegal input @return counter number for specific error reason . 
sets the counter of a specific failure reason @param reason reason for disable error @param value the counter value for this specific reason @exception throw IllegalArgumentException for illegal input 
gets current network Selection BSSID @return current network Selection BSSID 
sets network Selection BSSID @param bssid The target BSSID for assocaition 
sets the network selection status 
gets an identifier for associating credentials with this config @param current configuration contains values for additional fields that are not part of this configuration . 
returns the string used to calculate the hash in WifiConfigStore and uniquely identify this WifiConfiguration 
gets configKey , force calculating the config string 
sets a value within wpa_supplicant configuration @param key index to sets within wpa_supplciant @param value the value for the key @return true if successful ; false otherwise 
Returns a value within wpa_supplicant configuration @param key index to sets within wpa_supplciant @return string value if successful ; null otherwise 
sets the EAP authentication method . 
gets the eap method . 
sets Phase 2 authentication method . 
gets the phase 2 authentication method . 
sets the identity @param identity 
gets the identity @return the identity 
sets anonymous identity . 
gets the anonymous identity @return anonymous identity 
sets the password . 
gets the password . Returns locally sets password value . 
sets CA certificate alias .  
sets CA certificate aliases .  
gets CA certificate alias @return alias to the CA certificate 
gets CA certificate aliases @return alias to the CA certificate 
gets CA certificate . 
gets CA certificates . 
sets the ca_path directive on wpa_supplicant . 
gets the domain_suffix_match value .   
sets Client certificate alias .  
gets client certificate alias @return alias to the client certificate 
gets client certificate @return X. 509 client certificate 
sets alternate subject match . 
gets alternate subject match @return the alternate subject match string 
sets the domain_suffix_match directive on wpa_supplicant . 
gets the domain_suffix_match value .  
sets realm for passpoint credential ; realm identifies a sets of networks where your passpoint credential can be used @param realm the realm 
Returns the index at which the toBeFound string is found in the array . 
Returns the field value for the key with prefix removed . 
Returns the field value for the key . 
sets a value with an optional prefix at key @param key into the hash @param value to be sets @param prefix an optional value to be prefixed to actual value 
sets a value at key @param key into the hash @param value to be sets 
Returns the received signal strength indicator of the current 802.11 network , in dBm . 
sets the SupplicantState from the string name of the state . 
returns a list of all the networks configured in the supplicant . 
adds a new network description to the sets of configured networks . 
adds a Hotspot 2.0 release 2 Management Object @param mo The MO in XML form @return -1 for failure 
removes the specified network from the list of configured networks . 
returns dynamic information about the current Wi-Fi connection , if any is active . 
returns the results of the latest access point scan . 
sets the country code . 
gets the country code .  
returns the DHCP-assigned addresses from the last successful DHCP request , if any . 
Gets the Wi-Fi enabled state . 
returns whether Wi-Fi is enabled or disabled . 
returns TX packet counter , for CTS test of WiFi watchdog . 
Gets the Wi-Fi enabled state . 
returns whether Wi-Fi AP is enabled or disabled . 
Gets the Wi-Fi AP Configuration . 
Sets the Wi-Fi AP Configuration . 
gets a reference to WifiService handler . 
Creates a new WifiLock .  
Creates a new WifiLock . 
creates a new MulticastLock @param tag a tag for the MulticastLock to identify it in debugging messages . 
sets wifi verbose log .  
gets the WiFi verbose logging level.This is used by settings to decide what to show within the picker .  
sets wifi Aggressive Handover .  
gets the WiFi Handover aggressiveness.This is used by settings to decide what to show within the picker .  
sets setting for allowing Scans when traffic is ongoing .  
gets setting for allowing Scans when traffic is ongoing .  
gets Network object of current wifi network @return gets Network object of current wifi network 
gets setting for Framework layer autojoin enable status 
returns the key of the listener . 
Gets the row ID based on a table properties or the first column name . 
Creates the index tables from the given Accumulo table . 
Gets the scan authorizations to use for scanning tables . 
Gets the TabletServer hostname for where the given key is located in the given table @param table Fully-qualified table name @param key Key to locate @return The tablet location , or DUMMY_LOCATION if an error occurs 
Gets a collection of Accumulo Range objects from the given Presto domain . 
Gets all views in the given schema , or all schemas if null . 
Gets the cardinality for the given column constraint with the given Ranges . 
Gets the column cardinality for all of the given range values . 
Gets a collection of iterator settings that should be added to the metric table for the given Accumulo table .  
Gets the column family of the index table based on the given column family and qualifier . 
Gets the fully-qualified index table name for the given table . 
Gets the fully-qualified index table name for the given table . 
Gets the fully-qualified index metrics table name for the given table . 
Gets the fully-qualified index metrics table name for the given table . 
Gets a Boolean value indicating if the given value is in one of the Ranges in the given collection @param text Text object to check against the Range collection @param ranges Ranges to look into @return True if the text object is in one of the ranges , false otherwise 
Gets a Boolean value indicating whether or not the scanner should only returns row IDs . 
Gets the scanner authorizations to use for scanning tables . 
Gets a list of all internal fields . 
Sets the Presto name which maps to the Accumulo row ID . 
Sets the mapping for the Presto column name to Accumulo family and qualifier . 
Sets a Boolean value indicating whether or not only the row ID is going to be retrieved from the serializer . 
Gets a Boolean value indicating whether or not the Presto column is a null value . 
Gets the array Block of the given Presto column . 
Gets the Boolean value of the given Presto column . 
Gets the Byte value of the given Presto column . 
Gets the Date value of the given Presto column . 
Gets the Double value of the given Presto column . 
Gets the Float value of the given Presto column . 
Gets the Integer value of the given Presto column . 
Gets the Long value of the given Presto column . 
Gets the Map value of the given Presto column and Map type . 
Gets the Short value of the given Presto column . 
Gets the Time value of the given Presto column . 
Gets the Timestamp value of the given Presto column . 
Gets the Varbinary value of the given Presto column . 
Gets the String value of the given Presto column . 
Gets the element type of the given array type . 
Gets the key type of the given map type . 
Gets the value type of the given map type . 
Gets the AccumuloConnector singleton , starting the MiniAccumuloCluster on initialization . 
Creates and starts an instance of MiniAccumuloCluster , returning the new instance . 
Returns the size of this big array in bytes . 
Returns the element of this big array at specified index . 
Sets the element of this big array at specified index . 
Returns the size of this big array in bytes . 
Returns the element of this big array at specified index . 
Sets the element of this big array at specified index . 
Returns the size of this big array in bytes . 
Returns the element of this big array at specified index . 
Sets the element of this big array at specified index . 
Returns the size of this big array in bytes . 
Returns the element of this big array at specified index . 
Sets the element of this big array at specified index . 
Adds the specified value to the specified element of this big array . 
Returns the size of this big array in bytes . 
Returns the element of this big array at specified index . 
Sets the element of this big array at specified index . 
Adds the specified value to the specified element of this big array . 
Returns the size of this big array in bytes . 
Returns the element of this big array at specified index . 
Sets the element of this big array at specified index . 
Adds the specified value to the specified element of this big array . 
Returns the size of this big array in bytes . 
Returns the element of this big array at specified index . 
Sets the element of this big array at specified index . 
Returns the size of this big array in bytes . 
Returns the element of this big array at specified index . 
Sets the element of this big array at specified index . 
Adds partitions to the table in a single atomic task . 
creates a metastore client connected to the Hive metastore . 
Gets the current state of this buffer . 
gets the memory utilization percentage . 
adds a listener which fires anytime the buffer state changes . 
Gets pages from the output buffer , and acknowledges all pages received from the last request . 
Adds a page to an unpartitioned buffer . 
Adds a page so a specific partition . 
creates a QueryStateMachine that is already in a failed state . 
removes completed queries after a waiting period 
sets up a callback to fire when a query is completed . 
Sets the state . 
Sets the state if the current state satisfies the specified predicate . 
Returns any remaining splits . 
Gets all of the currently tracked tasks . 
Gets the info for the specified task . 
Gets the status for the specified task . 
Gets the unique instance id of a task . 
Gets results from a task either immediately or in the future . 
Adds a state change listener to the specified task . 
returns value indicates whether the caller may use the requested memory . 
Returns the number of free bytes . 
Returns a table handle for the specified table name . 
returns the metadata for the specified table handle . 
Returns the handle for the sample weight column . 
Returns true iff this catalog supports creation of sampled tables 
Gets all of the columns on the specified table , or an empty map if the columns can not be enumerated . 
Gets the metadata for the specified table column . 
Gets the metadata for all columns that match the specified table prefix . 
Creates a schema . 
Creates a table using the specified table metadata . 
adds the specified column to the table . 
gets the row ID column handle used with UpdatablePageSource . 
Gets all the loaded catalogs @return Map of catalog name to connector id 
Returns the view definition for the specified view name . 
Creates the specified view with the specified view definition . 
creates a priority queue with an entry for each bucket , ordered by the penalty score with respect to the bucket to its right The inputs must be sorted by `` value '' in increasing order The last bucket has a penalty of infinity Entries are doubly-linked to keep track of the relative position of each bucket 
Returns UNLOADED_INDEX_KEY if the key has not been loaded . Returns NO_MORE_POSITIONS if the key has been loaded , but has no values . Returns a valid address if the key has been loaded and has values . 
Returns the next address to join . Returns NO_MORE_POSITIONS if there are no more values to join . 
Adds a page to the buffer . Returns a ListenableFuture that is marked as done when the next page can be added . 
returns a page from the buffer , or null if none exists 
returns the next page from pageBuffer that has a non-zero position count , or null if none available 
Gets the column types of pages produced by this operator . 
Returns a future that will be completed when the operator becomes unblocked . 
Returns true if and only if this operator can accept an input page . 
Adds an input page to the operator . 
Gets an output page from the operator . 
Gets the total of the columns held in in this PagesHashStrategy . 
gets the total of allocated size 
Returns the index of the median of the three positions . 
Find matching constructor , if this is an instance method , and populate constructorDependencies 
creates window function instance using the supplied arguments . 
Sets the system properties for the session . 
Sets the properties for a catalog . 
Returns completed future once spilling has finished . 
Returns list of previously spilled Pages streams . 
Gets the index of the specified field or -1 if not found . 
Gets the field at the specified index . 
Gets only the visible fields . 
Gets all fields including hidden fields . 
Gets the count of all fields including hidden fields . 
Gets the index of all columns matching the specified name 
Creates a new tuple descriptor containing all fields from this tuple descriptor and all fields from the specified tuple descriptor . 
Creates a new tuple descriptor with the relation , and , optionally , the columns aliased . 
Creates a new tuple descriptor containing only the visible fields . 
Returns a value in the native container type corresponding to the declared SQL returns type 
Returns null if unsuccessful . 
Returns the most preferrable expression to be used as the canonical expression 
Returns a canonical expression that is fully contained by the symbolScope and that is equivalent to the specified expression . Returns null if unable to to find a canonical . 
Returns a list of the same length as the original . 
returns an identical copy of the given node with its children replaced 
Returns the output to input symbol mapping for the given source channel 
Returns the input to output symbol mapping for the given source channel . 
Adds the mask as the last channel 
Returns the estimated memory increase in map 
Returns the minimal DiskRange that encloses both this DiskRange and otherDiskRange . 
returns index of first surrogateCharacter in the string -1 if no surrogate character is found 
gets a slice for the disk range from the provided buffers . 
returns the row position relative to the start of the file . 
Returns the total number of rows in the file . 
returns the row position within the stripes being read by this reader . 
Returns the total number of rows that can possibly be read by this reader . 
Sets the vector element to true if the bit is sets . 
Sets the vector element to true if the bit is sets , skipping the null values . 
Sets the vector element to true if the bit is sets . 
Sets the vector element to true if the bit is sets , skipping the null values . 
Sets the vector element to true if the bit is not sets . 
Gets the closest supported fixed bit width for the specified bit width . 
returns the valued as a hex-formatted string with upper-case characters 
creates a table . 
adds a column to the end of the table . 
gets shard metadata for shards on a given node . 
gets shard metadata for shards on a given node . 
returns the shard nodes for a non-bucketed table . 
returns the shard nodes for a bucketed table . 
removes shard assignment from a node . 
gets the number of bytes used by assigned shards per node . 
creates initial bucket assignments for a distribution . 
gets map of buckets to node identifiers for a table . 
returns the subset of shard uuids that exist 
Find the beginning of the first full sync sequence that starts within the specified range . 
returns the specific row decoder for a given data format . 
returns the best matching field decoder for a given row data format , field type and a possible field data format name . 
Returns the types which the field decoder can process . 
Returns the name of the row decoder to which this field decoder belongs . 
Returns the field decoder specific name . 
Returns the row decoder specific name . 
Gets the value at the specified position as a single element block . 
Returns the number of positions in this block . 
Returns the logical size of this block in memory . 
Returns the retained size of this block in memory . 
gets the encoding for this block . 
Returns a block containing the specified positions . 
Returns a block starting at the specified position and extends for the specified length . 
Returns a block starting at the specified position and extends for the specified length . 
returns a writer to the current entry . 
Gets the unique name of this encoding . 
Gets the bucket for the tuple at the specified position . 
Returns the schemas provided by this connector . 
Returns a table handle for the specified table name , or null if the connector does not contain the table . 
returns a list of table layouts that satisfy the given constraint . 
returns the metadata for the specified table handle . 
returns the connector-specific metadata for the specified table layout . 
Returns the handle for the sample weight column , or null if the table does not contain sampled data . 
Returns true if this catalog supports creation of sampled tables 
Gets all of the columns on the specified table , or an empty map if the columns can not be enumerated . 
Gets the metadata for the specified table column . 
Gets the metadata for all columns that match the specified table prefix . 
Creates a schema . 
Creates a table using the specified table metadata . 
adds the specified column 
gets the physical layout for a new table . 
gets the physical layout for a inserting into an existing table . 
gets the column handle that will generate row IDs for the delete operation . 
creates the specified view . 
Gets the view data for views that match the specified table prefix . 
gets the transaction read isolation level supported by this connector . 
Returns the schemas provided by this connector . 
Returns a table handle for the specified table name , or null if the connector does not contain the table . 
returns a list of table layouts that satisfy the given constraint . 
returns the metadata for the specified table handle . 
returns the connector-specific metadata for the specified table layout . 
Returns the handle for the sample weight column , or null if the table does not contain sampled data . 
Returns true if this catalog supports creation of sampled tables 
Gets all of the columns on the specified table , or an empty map if the columns can not be enumerated . 
Gets the metadata for the specified table column . 
Gets the metadata for all columns that match the specified table prefix . 
Creates a table using the specified table metadata . 
adds the specified column 
gets the column handle that will generate row IDs for the delete operation . 
creates the specified view . 
Gets the view data for views that match the specified table prefix . 
Returns a future that will be completed when the page sink can accept more pages . 
Gets the total input bytes that will be processed by this page source . 
Gets the number of input bytes processed by this page source so far . 
Gets the wall time this page source spent reading data from the input . 
Gets the next page of data . 
gets the total memory that needs to be reserved in the system memory pool . 
returns value is also guaranteed to implement GroupedAccumulatorState 
Gets the number of rows in the partition 
returns true if this instance has a defined port . 
gets the current port number , failing if no port is defined . 
Returns the current port number , with a default if no port is defined . 
returns true for valid port numbers . 
returns true if the actual LocalProperty can be used to simplify this LocalProperty 
Returns the unique index of each position value . 
Returns maximum index value returned . 
Returns an empty Optional if the Domain is none . 
Returns true if any tuples would satisfy this TupleDomain 
Returns true if no tuple could ever satisfy this TupleDomain 
Gets the TupleDomain as a map of each column to its respective Domain . 
Returns the strict intersection of the TupleDomains . 
Returns a TupleDomain in which corresponding column Domains are unioned together . 
Returns true only if there exists a strict intersection between the TupleDomains . 
Returns true only if the this TupleDomain contains all possible tuples that would be allowable by the other TupleDomain . 
Gets the default value for this property . 
creates a cursor for the data in this table . 
creates a page source for the data in this table . 
Gets the size of a value of this type is bytes . 
Creates a block builder for this type sized to hold the specified number of positions . 
Gets the name of this type which must be case insensitive globally unique . 
Returns the name of this type that should be displayed to end-users . 
Gets the Java class type used to represent this value on the stack during expression execution . 
Creates the preferred block builder for this type . 
Creates the preferred block builder for this type . 
Gets the type with the specified signature , or null if not found . 
Gets the type with the specified base type , and the given parameters , or null if not found . 
Gets a list of all registered types . 
Returns number of failed queries 
Returns the news feed for the currently selected category . 
Returns the current state of network usage . 
Returns the story with the given Id 
Returns all sections available . 
Sets the click listeners on the three buttons . 
Returns true if all elements could be false if elements could not be categorized , 
Returns all module classes and the RealmObjects they know of . 
Returns true if modules was processed successfully , false otherwise 
adds column and read back if it is nullable or not 
gets the remote process info if it is alive . 
Adds a PrimaryKey object to a realm with values for its PrimaryKey field and secondary field . 
creates a RealmObject with null primarykey 
Creates an empty table with 1 column of all our supported column types , currently 9 columns @return 
Returns a random key used by encrypted Realms . 
Returns a random key from the given seed . 
Returns a Logger that will fail if it is asked to log a message above a certain level . 
Creates SHA512 hash of a String . 
Sets the exception held by this container . 
Sets a custom error message that can be used instead of setting an exception . 
Returns any saved exception . 
Creates a LooperSpy for the Looper on the main thread . 
Creates a LooperSpy for a specified Looper . 
Sets the auto-refresh status of the Realm instance . 
Removes the specified change listener . 
Returns an RxJava Observable that monitors changes to this Realm . 
Removes all user-defined change listeners . 
Returns the canonical path to where this Realm is persisted on disk . 
Returns the schema version for this Realm . 
Returns the schema for this Realm . 
returns true if this Realm can receive notifications . 
Returns the value for this setting that is used by the underlying query engine . 
Creates an object with a given primary key . 
Returns a RealmQuery , which can be used to query the provided class . 
Adds a change listener to the Realm . 
Returns the value for the given field . 
Returns the object being linked to from this field . 
Returns the list of field names on this object . 
Sets the value for the given field . 
Sets the binary value of the given field . 
Sets a reference to another object on the given field . 
Returns the type of object . 
Returns the type used by the underlying storage engine to represent this field . 
Returns the canonical path to the Realm file that needs to be migrated . 
Returns the index of the first character in the string that is not a digit , starting at offset . 
Creates a default RealmThreadPool that is bounded by the number of available cores . 
Creates a RealmThreadPool with only 1 thread . 
sets null to a row pointer with checking if a column is nullable , except when the column type is binary . 
Returns a map from column name to column index . 
Returns a shallow copy of this instance . 
Returns the row index in the underlying table . 
removes all target rows pointed to by links in this link view , and clear this link view . 
Removes target row from both the Realm and the LinkView . 
Returns a SyncObjectServerFacade instance if the class exists . 
creates a object schema for the given RealmObject class . 
Creates the backing table in Realm for the given RealmObject class . 
Returns a map of non-obfuscated object field names to their internal Realm name . 
Returns the name that Realm should use for all it 's internal tables . 
Returns the list of RealmObject classes that can be saved in this Realm . 
Creates a deep unmanaged copy of a RealmObject . 
Returns whether Realm transformer has been applied or not . 
Returns the name of a column identified by columnIndex . 
Returns the 0-based index of a column based on the name . 
Gets the type of a column identified by the columnIndex . 
Adds a column to the table dynamically . 
Adds a non-nullable column to the table dynamically . 
Adds a link column to the table dynamically . 
Removes a column in the table dynamically . 
Gets the number of entries/rows of this table . 
Returns the number of columns in the table . 
Returns the name of a column identified by columnIndex . 
Returns the 0-based index of a column based on the name . 
Gets the type of a column identified by the columnIndex . 
Removes a row from the specific index . 
adds an empty row to the table which does n't have a primary key defined . 
adds an empty row to the table and sets the primary key with the given value . 
adds an empty row to the table and sets the primary key with the given value . 
Returns the column index for the primary key . 
Returns a non-checking Row . 
Returns a non-checking Row . 
Returns a wrapper around Row access . 
sets a String value to a cell of Table , pointed by column and row index . 
Returns the table name as it is in the associated group . 
Returns the table . 
Returns the number of entries of the table/view . 
Removes a particular row identified by the index from the table/view . 
Gets the long value of a cell of the table/view identified by the columnIndex and rowIndex . 
Gets the boolean value of a cell of the table identified by the columnIndex and rowIndex . 
Gets the float value of a cell of the table identified by the columnIndex and rowIndex . 
Gets the double value of a cell of the table identified by the columnIndex and rowIndex . 
Gets the string value of a cell identified by the columnIndex and rowIndex of the cell . 
Gets the link index of a cell of the table/view identified by the columnIndex and rowIndex . 
Sets the long value for a particular cell identified by columnIndex and rowIndex of that cell . 
Sets the boolean value of a cell identified by the columnIndex and the rowIndex of that cell . 
Sets the float value of a cell identified by the columnIndex and the rowIndex of that cell . 
Sets the double value of a cell identified by the columnIndex and the rowIndex of that cell . 
Sets the string value of a particular cell of the table/view identified by the columnIndex and the rowIndex of this table/view @param columnIndex @param rowIndex @param value 
Sets the link index for a particular cell identified by columnIndex and rowIndex of that cell . 
Returns the table row index for the first element matching the query . 
Gets the number of entries/rows of this table . 
Returns the index of the row in the source table . 
Returns the number of columns in the table . 
Returns the name of a column identified by columnIndex . 
Returns the 0-based index of a column based on the name . 
Gets the type of a column identified by the columnIndex . 
Removes a particular row identified by the index from the tableview . 
Returns the maximum value of the cells in a column . 
Returns the minimum value of the cells in a column . 
Removes rows that are duplicated with respect to the column sets passed as argument . 
Gets the row object associated to an index in a Table . 
Gets the row object from a row pointer . 
Gets the row object associated to an index in a LinkView . 
sets a string value to a row pointer . 
sets null to a row pointer . 
sets to level = 1 to gets some trace from JNI native part . 
Gets the stack trace from a Throwable as a String . 
Sets the logging tag used when outputting to LogCat . 
Adds a logger implementation that will be notified on log events . 
Removes the given logger if it is currently added . 
removes all loggers . 
Gets the first object from the collection . 
Gets the last object from the collection . 
Creates a Realm object for each object in a JSON array . 
Creates a Realm object for each object in a JSON array . 
Creates a Realm object for each object in a JSON array . 
Creates a Realm object pre-filled with data from a JSON object . 
Creates a Realm object pre-filled with data from a JSON object . 
Creates a Realm object pre-filled with data from a JSON object . 
Returns a typed RealmQuery , which can be used to query for specific objects of this type @param clazz the class of the object which is to be queried for . 
Adds a change listener to the Realm . 
Returns the default Realm module . 
Returns the current number of open Realm instances across all threads that are using this configuration . 
Returns the current number of open Realm instances on the thread calling this method . 
Creates a new Realm instance or gets an existing instance for current thread . 
Returns the average of a given field . 
Returns the mediator instance of schema which is defined by this configuration . 
Returns the transaction instance with initial data . 
Returns input stream object to the Realm asset file . 
Creates the mediator that defines the current schema 
gets the canonical path for a given file 
Sets the filename for the Realm file . 
Sets the 64 bit key used to encrypt and decrypt the Realm file . 
Sets the schema version of the Realm . 
Creates the RealmConfiguration based on the builder parameters . 
Returns the native value representing this type . 
Adds the specified object at the end of this List . 
Removes all elements from this list , leaving it empty . 
Removes the object at the specified location from this list . 
Returns the element at the specified location in this list . 
Returns a RealmQuery , which can be used to query for specific objects of this class . 
Adds a change listener to this RealmObject . 
Adds a change listener to a RealmObject . 
Removes a previously registered listener . 
Removes a previously registered listener on the given RealmObject . 
Removes all registered listeners . 
Removes all registered listeners from the given RealmObject . 
Returns an RxJava Observable that monitors changes to this RealmObject . 
Returns an RxJava Observable that monitors changes to this RealmObject . 
Returns the name of the RealmObject class being represented by this schema . 
Sets a new name for this RealmObject class . 
Adds a new simple field to the RealmObject class .   
Adds a property to an object schema . 
Removes a field from the class . 
Adds an index to a given field . 
Removes an index from a given field . 
Adds a primary key to a given field . 
Removes the primary key from this class . 
Returns the name of the primary key field . 
Returns all fields in this class . 
Returns the column index in the underlying table for the given field name . 
Returns the column index in the underlying table for the given field name . 
Returns the type used by the underlying storage engine to represent this field . 
Returns a distinct sets of objects of a specific class . 
Find and validate the column index for the field name used to creates a distinctive TableView . 
Returns a distinct sets of objects from a specific class . 
find and validate the column indices of fields for building a distinctive TableView with multi-args 
Returns the average of a given field . 
Returns the element at the specified location in this list . 
Returns an iterator for the results of a query . 
Returns a list iterator for the results of a query . 
Returns a list iterator on the results of a query . 
Returns the number of elements in this query result . 
Returns a distinct sets of objects of a specific class . 
Returns a distinct sets of objects from a specific class . 
Removes the last object in the list . 
Removes the first object in the list . 
Adds a change listener to this RealmResults . 
Removes a previously registered listener . 
Removes all registered listeners . 
Returns an Rx Observable that monitors changes to this RealmResults . 
Returns the Realm schema for a given class . 
Adds a new class to the Realm . 
Removes a class from the Realm . removes those classes or fields first . 
Returns the value for this setting that is used by the underlying query engine . 
Creates credentials based on a login with username and password . 
Creates credentials based on a Facebook login . 
Creates credentials based on a Google login . 
Creates credentials based on a Twitter login . 
Creates a custom sets of credentials . 
Returns the provider used by the Object Server to validate these credentials . 
Returns a String that identifies the user . 
Returns any custom user information associated with this credential . 
Returns the numerical value for this error code . 
Returns the getCategory of the error . 
returns true if based on the task result that this task will never complete 
Returns the error . 
adds a listener to be notified about any network changes . 
Removes a network listener . 
Returns the state of this session . 
Adds an access token to this user . 
Returns when this token expires . 
Returns when this token expires . 
Returns the error code uniquely identifying this type of error . 
Returns a more detailed error message about the cause of this error . 
Returns the underlying exception causing this error , if any . 
Returns the state of this session . 
Sets a global authentication listener that will be notified about User events like login and logout . 
Removes the provided global authentication listener . 
Sets the auth server implementation used when validating credentials . 
returns the currently configured User store . 
Sets the log level for the underlying . 
Returns the last user that has logged in and who is still valid . 
Returns a JSON token representing this user . 
Returns the identity of this user on the Realm Object Server . 
Returns this user 's access token . 
Removes the user with the given key from the store . 
Returns a collection of all users saved in the User store . 
creates a new , identical call to this one which can be enqueued or executed even if this call has already been . 
Returns the value type that this adapter uses when converting the HTTP response body to a Java object . 
sets the API base URL . 
sets the API base URL . 
adds converter factory for serialization and deserialization of objects . 
Gets the sets of unique path parameters used in the given URI . 
Returns an instance which creates synchronous observables that do not operate on any scheduler by default . 
returns a new factory which includes null values into the serialized JSON . 
creates an instance with default behavior . 
sets the network round trip delay . 
sets the plus-or-minus variance percentage of the network round trip delay . 
sets the exception to be used when a failure is triggered . 
gets the delay that should be used for delaying a response in accordance with configured behavior . 
Sets a Subscription on this emitter ; any previous Subscription or Cancellation will be unsubscribed/cancelled . 
Sets a Cancellable on this emitter ; any previous Subscription or Cancellation will be unsubscribed/cancelled . 
Returns a Completable instance that completes immediately when subscribed to . 
Returns a Completable which completes only when all sources complete , one after another . 
Returns a Completable which completes only when all sources complete , one after another . 
Returns a Completable which completes only when all sources complete , one after another . 
Returns a Completable which completes only when all sources complete , one after another . 
Creates a Completable which calls the given error supplier for each subscriber and emits its returned Throwable . 
Creates a Completable instance that emits the given Throwable exception to subscribers . 
Returns a Completable instance that runs the given Action0 for each subscriber and emits either an unchecked exception or simply completes . 
Returns a Completable which when subscribed , executes the callable function , ignores its normal result and emits onError or onCompleted only . 
Returns a Completable instance that reacts to the termination of the given Future in a blocking fashion . 
Returns a Completable instance that subscribes to the given flowable , ignores all values and emits only the terminal event . 
Returns a Completable instance that when subscribed to , subscribes to the Single instance and emits a completion event if the single emits onSuccess or forwards any onError events . 
Returns a Completable instance that subscribes to all sources at once and completes only when all source Completables complete or one of them emits an error . 
Returns a Completable instance that subscribes to all sources at once and completes only when all source Completables complete or one of them emits an error . 
Returns a Completable instance that subscribes to all sources at once and completes only when all source Completables complete or one of them emits an error . 
Returns a Completable instance that keeps subscriptions to a limited number of sources at once and completes only when all source Completables complete or one of them emits an error . 
Returns a Completable instance that keeps subscriptions to a limited number of sources at once and completes only when all source Completables terminate in one way or another , combining any exceptions thrown by either the sources Observable or the inner Completable instances . 
Returns a Completable that subscribes to all Completables in the source array and delays any error emitted by either the sources observable or any of the inner Completables until all of them terminate in a way or another . 
Returns a Completable that subscribes to all Completables in the source sequence and delays any error emitted by either the sources observable or any of the inner Completables until all of them terminate in a way or another . 
Returns a Completable that subscribes to all Completables in the source sequence and delays any error emitted by either the sources observable or any of the inner Completables until all of them terminate in a way or another . 
Returns a Completable that subscribes to a limited number of inner Completables at once in the source sequence and delays any error emitted by either the sources observable or any of the inner Completables until all of them terminate in a way or another . 
Returns a Completable that never calls onError or onComplete . 
Returns a Completable instance that fires its onComplete event after the given delay elapsed . 
Returns a Completable instance that fires its onCompleted event after the given delay elapsed by using the supplied scheduler . 
Creates a NullPointerException instance and sets the given Throwable as its initial cause . 
Returns a Completable instance which manages a resource along with a custom Completable instance while the subscription is active . 
Returns a Completable instance which manages a resource along with a custom Completable instance while the subscription is active and performs eager or lazy resource disposition . 
Returns a Completable that emits the a terminated event of either this Completable or the other Completable whichever fires first . 
Returns a completable that first runs this Completable and then the other completable . 
Returns a Completable which delays the emission of the completion event by the given time . 
Returns a Completable which delays the emission of the completion event by the given time while running on the specified scheduler . 
Returns a Completable which delays the emission of the completion event , and optionally the error as well , by the given time while running on the specified scheduler . 
Returns a Completable which calls the given onCompleted callback if this Completable completes . 
Returns a Completable which calls the given onNotification callback when this Completable emits an error or completes . 
Returns a Completable which calls the given onUnsubscribe callback if the child subscriber cancels the subscription . 
Returns a Completable which calls the given onError callback if this Completable emits an error . 
Returns a Completable instance that calls the various callbacks on the specific lifecycle events . 
Returns a Completable instance that calls the given onSubscribe callback with the disposable that child subscribers receive on subscription . 
Returns a Completable instance that calls the given onTerminate callback just before this Completable completes normally or with an exception @param onTerminate the callback to call just before this Completable terminates @return the new Completable instance 
Returns a Completable instance that calls the given onAfterComplete callback after this Completable completes normally . 
Returns a Completable which subscribes to this and the other Completable and completes when both of them complete or one emits an error . 
Returns a Completable which emits the terminal events from the thread of the specified scheduler . 
Returns a Completable instance that if this Completable emits an error , it will emit an onComplete and swallow the throwable . 
Returns a Completable instance that if this Completable emits an error and the predicate returns true , it will emit an onComplete and swallow the throwable . 
Returns a Completable instance that when encounters an error from this Completable , calls the specified mapper function that returns another Completable instance for it and resumes the execution with it . 
Returns a Completable that repeatedly subscribes to this Completable until cancelled . 
Returns a Completable that subscribes repeatedly at most the given times to this Completable . 
Returns a Completable instance that repeats when the Publisher returned by the handler emits an item or completes when this Publisher emits a completed event . 
Returns a Completable that retries this Completable as long as it emits an onError event . 
Returns a Completable that retries this Completable in case of an error as long as the predicate returns true . 
Returns a Completable that when this Completable emits an error , retries at most the given number of times before giving up and emitting the last error . 
Returns a Completable which given a Publisher and when this Completable emits an error , delivers that error through an Observable and the Publisher should returns a value indicating a retry in response or a terminal event indicating a termination . 
Returns a Completable which first runs the other Completable then this completable if the other completed normally . 
Returns an Observable which first delivers the events of the other Observable then runs this Completable . 
Returns a Completable which subscribes the child subscriber on the specified scheduler , making sure the subscription side-effects happen on that specific thread of the scheduler . 
Returns a Completable that runs this Completable and emits a TimeoutException in case this Completable does n't complete within the given time . 
Returns a Completable that runs this Completable and switches to the other Completable in case this Completable does n't complete within the given time . 
Returns a Completable that runs this Completable and emits a TimeoutException in case this Completable does n't complete within the given time while `` waiting '' on the specified Scheduler . 
Returns a Completable that runs this Completable and switches to the other Completable in case this Completable does n't complete within the given time while `` waiting '' on the specified scheduler . 
Returns a Completable that runs this Completable and optionally switches to the other Completable in case this Completable does n't complete within the given time while `` waiting '' on the specified scheduler . 
Returns an Observable which when subscribed to subscribes to this Completable and relays the terminal events to the subscriber . 
Returns a Completable which makes sure when a subscriber cancels the subscription , the dispose is called on the specified scheduler @param scheduler the target scheduler where to execute the cancellation @return the new Completable instance @throws NullPointerException if scheduler is null 
Sets a Subscription on this emitter ; any previous Subscription or Cancellation will be unsubscribed/cancelled . 
Sets a Cancellable on this emitter ; any previous Subscription or Cancellation will be unsubscribed/cancelled . 
Sets a Subscription on this emitter ; any previous Subscription or Cancellation will be unsubscribed/cancelled . 
Sets a Cancellable on this emitter ; any previous Subscription or Cancellation will be unsubscribed/cancelled . 
Returns the object to be locked when using this StreamOrWriter 
Adds two positive longs and caps the result at Long.MAX _ VALUE . 
Returns a Future that expects a single item from the observable . 
Returns an iterator that iterates all values of the observable . 
Creates a default , unbounded buffering Subject instance . 
Creates a cached Observable with a default capacity hint of 16 . 
Creates a cached Observable with the given capacity hint . 
Adds a ReplayProducer to the producers array atomically . 
Returns a type-corrected singleton instance of the empty Observable . 
Returns a type-corrected singleton instance of the never Observable . 
Sets the main producer and issues the prefetch amount . 
Returns the input subscriber of this class that must be subscribed to the upstream source . 
Creates a new instance of the operator with the given delayError and maxConcurrency settings . 
Returns a singleton instance of the OnBackpressureLatest operator since it is stateless . 
Creates a OperatorPublish instance to publish values of the given source observable . 
Creates a replaying ConnectableObservable with an unbounded buffer . 
Creates a replaying ConnectableObservable with a size bound buffer . 
Creates a replaying ConnectableObservable with a time bound buffer . 
Creates a replaying ConnectableObservable with a size and time bound buffer . 
Creates a OperatorReplay instance to replay values of the given source observable . 
Adds a regular value to the buffer . 
Adds a terminal exception to the buffer @param e the Throwable to buffer 
Adds a completion event to the buffer 
adds a new node to the linked list . 
removes the first node from the linked list . 
Returns the current head for initializing the replay location for a new subscriber . 
Returns a singleton instance of the operator based on the delayError parameter . 
Returns one of the single-threaded ScheduledExecutorService helper executors . 
Adds the given Future to the unsubscription composite in order to support cancelling the underlying task in the executor framework . 
Gets the current value and nulls out the reference to it from this node . 
Returns true if the value is the terminated Throwable instance . 
adds an element and returns the index where it was added to allow removal . 
Returns -1 if nothing , 0 or greater if the index should be used @return the index or -1 if none 
Returns a Func1 that checks if its argument is null-safe equals with the given constant reference . 
Returns a Func1 that checks if its argument is an instance of the supplied class . 
Returns a function that dematerializes the notification signal from an Observable and calls a notification handler with a null for non-terminal events . 
Creates a Func1 which calls the selector function with the received argument , applies an observeOn on the result and returns the resulting Observable . 
Returns a function that dematerializes the notification signal from an Observable and calls a notification handler with the Throwable . 
Adds a new element to this list . 
Returns the head buffer segment or null if the list is empty . 
Returns the tail buffer segment or null if the list is empty . 
Returns the total size of the list . 
Returns the index of the next slot in the tail buffer segment . 
Returns the capacity hint that indicates the capacity of each buffer segment . 
Gets the next free object from the pool . 
Returns object back to the pool . 
Creates a new object . 
Returns the raw array of values of this sets , watch out for null entries . 
Returns version of Android API . 
Creates a scalar producer depending on the state of STRONG_MODE . 
Returns the scalar constant value directly . 
Returns true if this composite is not unsubscribed and contains subscriptions . 
Find the next larger positive power of two value up from the given value . 
Returns the address of the specific field on the class and wraps a NoSuchFieldException into an internal error . 
Returns a function that always returns the Object it is passed . 
Returns an Observable that respects the back-pressure semantics .  
Returns an Observable that respects the back-pressure semantics .  
Returns a Single that emits the single item emitted by the source Observable , if that Observable emits only a single item . 
Returns an Observable that emits the items emitted by each of the Observables emitted by the source Observable , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by two Observables , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by three Observables , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by four Observables , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by five Observables , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by six Observables , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by seven Observables , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by eight Observables , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by nine Observables , one after the other , without interleaving them . 
Returns an Observable that emits the items emitted by two Observables , one after the other , without interleaving them , and delays any errors till all Observables terminate . 
Returns an Observable that emits the items emitted by three Observables , one after the other , without interleaving them , and delays any errors till all Observables terminate . 
Returns an Observable that emits the items emitted by four Observables , one after the other , without interleaving them , and delays any errors till all Observables terminate . 
Returns an Observable that emits the items emitted by five Observables , one after the other , without interleaving them , and delays any errors till all Observables terminate . 
Returns an Observable that emits the items emitted by six Observables , one after the other , without interleaving them , and delays any errors till all Observables terminate . 
Returns an Observable that emits the items emitted by seven Observables , one after the other , without interleaving them , and delays any errors till all Observables terminate . 
Returns an Observable that emits the items emitted by eight Observables , one after the other , without interleaving them , and delays any errors till all Observables terminate . 
Returns an Observable that emits the items emitted by nine Observables , one after the other , without interleaving them , and delays any errors till all Observables terminate . 
Returns an Observable that calls an Observable factory to creates an Observable for each new Observer that subscribes . 
Returns an Observable that , when an observer subscribes to it , invokes a function you specify and then emits the value returned from that function . 
Returns an Observable that emits a sequential number every specified interval of time .  
Returns an Observable that emits a sequential number every specified interval of time , on a specified Scheduler .  
Returns an Observable that emits a single item and then completes . 
Returns an Observable that emits a sequence of Integers within a specified range . 
Returns an Observable that emits a sequence of Integers within a specified range , on a specified Scheduler . 
Returns an Observable that emits a Boolean value that indicates whether two Observable sequences are the same by comparing the items emitted by each Observable pairwise . 
Returns an Observable that emits a Boolean value that indicates whether two Observable sequences are the same by comparing the items emitted by each Observable pairwise based on the results of a specified equality function . 
Returns an Observable that emits one item after a specified delay , and then completes . 
Returns an Observable that emits one item after a specified delay , on a specified Scheduler , and then completes . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of items emitted , in sequence , by an Iterable of other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of items emitted , in sequence , by an array of other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of <i> n </i> items emitted , in sequence , by the <i> n </i> Observables emitted by a specified Observable . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of two items emitted , in sequence , by two other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of three items emitted , in sequence , by three other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of four items emitted , in sequence , by four other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of five items emitted , in sequence , by five other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of six items emitted , in sequence , by six other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of seven items emitted , in sequence , by seven other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of eight items emitted , in sequence , by eight other Observables . 
Returns an Observable that emits the results of a specified combiner function applied to combinations of nine items emitted , in sequence , by nine other Observables . 
Returns an Observable that emits a Boolean that indicates whether all of the items emitted by the source Observable satisfy a condition . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits buffers of items it collects from the source Observable . 
Returns an Observable that emits non-overlapping buffered items from the source Observable each time the specified boundary Observable emits an item . 
Returns an Observable that emits non-overlapping buffered items from the source Observable each time the specified boundary Observable emits an item . 
Returns an Observable that subscribes to this Observable lazily , caches all of its events and replays them , in the same order as received , to all the downstream subscribers . 
Returns an Observable that subscribes to this Observable lazily , caches all of its events and replays them , in the same order as received , to all the downstream subscribers . 
Returns an Observable that emits the items emitted by the source Observable , converted to the specified type . 
Returns a new Observable that emits items resulting from applying a function that you supply to each item emitted by the source Observable , where that function returns an Observable , and then emitting the items that result from concatenating those resulting Observables . 
Returns an Observable that concatenate each item emitted by the source Observable with the values in an Iterable corresponding to that item that is generated by a selector . 
Returns an Observable that emits the items emitted from the current Observable , then the next , one after the other , without interleaving them . 
Returns an Observable that emits a Boolean that indicates whether the source Observable emitted a specified item . 
Returns an Observable that emits the count of the total number of items emitted by the source Observable . 
Returns an Observable that counts the total number of items emitted by the source Observable and emits this count as a 64-bit Long . 
Returns an Observable that mirrors the source Observable , except that it drops items emitted by the source Observable that are followed by another item within a computed debounce duration . 
Returns an Observable that mirrors the source Observable , except that it drops items emitted by the source Observable that are followed by newer items before a timeout value expires . 
Returns an Observable that mirrors the source Observable , except that it drops items emitted by the source Observable that are followed by newer items before a timeout value expires on a specified Scheduler . 
Returns an Observable that emits the items emitted by the source Observable or a specified default item if the source Observable is empty . 
Returns an Observable that emits the items emitted by the source Observable or the items of an alternate Observable if the source Observable is empty . 
Returns an Observable that delays the subscription to and emissions from the source Observable via another Observable on a per-item basis . 
Returns an Observable that delays the emissions of the source Observable via another Observable on a per-item basis . 
Returns an Observable that emits the items emitted by the source Observable shifted forward in time by a specified delay . 
Returns an Observable that emits the items emitted by the source Observable shifted forward in time by a specified delay . 
Returns an Observable that delays the subscription to the source Observable by a given amount of time . 
Returns an Observable that delays the subscription to the source Observable by a given amount of time , both waiting and subscribing on a given Scheduler . 
Returns an Observable that delays the subscription to the source Observable until a second Observable emits an item . 
Returns an Observable that delays the subscription to this Observable until the other Observable emits an element or completes normally . 
Returns an Observable that emits all items emitted by the source Observable that are distinct . 
Returns an Observable that emits all items emitted by the source Observable that are distinct according to a key selector function . 
Returns an Observable that emits all items emitted by the source Observable that are distinct from their immediate predecessors . 
Returns an Observable that emits all items emitted by the source Observable that are distinct from their immediate predecessors , according to a key selector function . 
Returns an Observable that emits all items emitted by the source Observable that are distinct from their immediate predecessors when compared with each other via the provided comparator function . 
Returns an Observable that emits the single item at a specified index in a sequence of emissions from a source Observable . 
Returns an Observable that emits the item found at a specified index in a sequence of emissions from a source Observable , or a default item if that index is out of range . 
Returns an Observable that emits only the very first item emitted by the source Observable , or a default item if the source Observable completes without emitting anything . 
Returns an Observable that emits only the very first item emitted by the source Observable that satisfies a specified condition , or a default item if the source Observable emits no such items . 
Returns an Observable that emits items based on applying a function that you supply to each item emitted by the source Observable , where that function returns an Observable , and then merging those resulting Observables and emitting the results of this merger . 
Returns an Observable that emits items based on applying a function that you supply to each item emitted by the source Observable , where that function returns an Observable , and then merging those resulting Observables and emitting the results of this merger , while limiting the maximum number of concurrent subscriptions to these Observables . 
Returns an Observable that applies a function to each item emitted or notification raised by the source Observable and then flattens the Observables returned from these functions and emits the resulting items . 
Returns an Observable that applies a function to each item emitted or notification raised by the source Observable and then flattens the Observables returned from these functions and emits the resulting items , while limiting the maximum number of concurrent subscriptions to these Observables . 
Returns an Observable that emits the results of a specified function to the pair of values emitted by the source Observable and a specified collection Observable . 
Returns an Observable that emits the results of a specified function to the pair of values emitted by the source Observable and a specified collection Observable , while limiting the maximum number of concurrent subscriptions to these Observables . 
Returns an Observable that merges each item emitted by the source Observable with the values in an Iterable corresponding to that item that is generated by a selector . 
Returns an Observable that merges each item emitted by the source Observable with the values in an Iterable corresponding to that item that is generated by a selector , while limiting the number of concurrent subscriptions to these Observables . 
Returns an Observable that emits the results of applying a function to the pair of values from the source Observable and an Iterable corresponding to that item that is generated by a selector . 
Returns an Observable that emits the results of applying a function to the pair of values from the source Observable and an Iterable corresponding to that item that is generated by a selector , while limiting the number of concurrent subscriptions to these Observables . 
Returns an Observable that correlates two Observables when they overlap in time and groups the results . 
Returns an Observable that emits only the last item emitted by the source Observable , or a default item if the source Observable completes without emitting any items . 
Returns an Observable that emits only the last item emitted by the source Observable that satisfies a specified condition , or a default item if no such item is emitted by the source Observable . 
Returns an Observable that applies a specified function to each item emitted by the source Observable and emits the results of these function applications . 
Returns an Observable that applies a specified accumulator function to the first item emitted by a source Observable , then feeds the result of that function along with the second item emitted by the source Observable into the same function , and so on until all items have been emitted by the source Observable , and emits the final result from the final call to your function as its sole item . 
Returns an Observable that applies a specified accumulator function to the first item emitted by a source Observable and a specified seed value , then feeds the result of that function along with the second item emitted by an Observable into the same function , and so on until all items have been emitted by the source Observable , emitting the final result from the final call to your function as its sole item . 
Returns an Observable that repeats the sequence of items emitted by the source Observable indefinitely . 
Returns an Observable that repeats the sequence of items emitted by the source Observable indefinitely , on a particular Scheduler . 
Returns an Observable that applies a specified accumulator function to the first item emitted by a source Observable , then feeds the result of that function along with the second item emitted by the source Observable into the same function , and so on until all items have been emitted by the source Observable , emitting the result of each of these iterations . 
Returns an Observable that applies a specified accumulator function to the first item emitted by a source Observable and a seed value , then feeds the result of that function along with the second item emitted by the source Observable into the same function , and so on until all items have been emitted by the source Observable , emitting the result of each of these iterations . 
Returns an Observable that emits the single item emitted by the source Observable , if that Observable emits only a single item . 
Returns an Observable that emits the single item emitted by the source Observable that matches a specified predicate , if that Observable emits one such item . 
Returns an Observable that emits the single item emitted by the source Observable , if that Observable emits only a single item , or a default item if the source Observable emits no items . 
Returns an Observable that emits the single item emitted by the source Observable that matches a predicate , if that Observable emits only one such item , or a default item if the source Observable emits no such items . 
Returns an Observable that skips values emitted by the source Observable before a specified time window elapses . 
Returns an Observable that drops a specified number of items from the end of the sequence emitted by the source Observable . 
Returns an Observable that drops items emitted by the source Observable during a specified time window before the source completes . 
Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item . 
Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds true , but emits all further source items as soon as the condition becomes false . 
Returns an Observable that emits a specified item before it begins to emit items emitted by the source Observable . 
Returns an Observable that emits the specified items before it begins to emit items emitted by the source Observable . 
Returns an Observable that emits the specified items before it begins to emit items emitted by the source Observable . 
Returns an Observable that emits the specified items before it begins to emit items emitted by the source Observable . 
Returns an Observable that emits the specified items before it begins to emit items emitted by the source Observable . 
Returns an Observable that emits the specified items before it begins to emit items emitted by the source Observable . 
Returns an Observable that emits the specified items before it begins to emit items emitted by the source Observable . 
Returns an Observable that emits the specified items before it begins to emit items emitted by the source Observable . 
Returns an Observable that emits the specified items before it begins to emit items emitted by the source Observable . 
Returns a new Observable by applying a function that you supply to each item emitted by the source Observable that returns an Observable , and then emitting the items emitted by the most recently emitted of these Observables . 
Returns a new Observable by applying a function that you supply to each item emitted by the source Observable that returns an Observable , and then emitting the items emitted by the most recently emitted of these Observables and delays any error until all Observables terminate . 
Returns an Observable that emits those items emitted by source Observable before a specified time runs out . 
Returns an Observable that emits only the very first item emitted by the source Observable that satisfies a specified condition . 
Returns an Observable that emits at most a specified number of items from the source Observable that were emitted in a specified window of time before the Observable completed . 
Returns an Observable that emits at most a specified number of items from the source Observable that were emitted in a specified window of time before the Observable completed , where the timing information is provided by a given Scheduler . 
Returns an Observable that emits the items from the source Observable that were emitted in a specified window of time before the Observable completed . 
Returns an Observable that emits the items from the source Observable that were emitted in a specified window of time before the Observable completed , where the timing information is provided by a specified Scheduler . 
Returns an Observable that emits a single List containing those items from the source Observable that were emitted during a specified window of time before the source Observable completed . 
Returns an Observable that emits a single List containing those items from the source Observable that were emitted during a specified window of time before the source Observable completed , where the timing information is provided by the given Scheduler . 
Returns an Observable that emits the items emitted by the source Observable until a second Observable emits an item . 
Returns an Observable that emits items emitted by the source Observable so long as each item satisfied a specified condition , and then completes as soon as this condition is not satisfied . 
Returns an Observable that emits items emitted by the source Observable , checks the specified predicate for each item , and then completes when the condition is satisfied . 
Returns an Observable that emits only the first item emitted by the source Observable during sequential time windows of a specified duration . 
Returns an Observable that emits only the first item emitted by the source Observable during sequential time windows of a specified duration , where the windows are managed by a specified Scheduler . 
Returns an Observable that emits only the last item emitted by the source Observable during sequential time windows of a specified duration . 
Returns an Observable that emits only the last item emitted by the source Observable during sequential time windows of a specified duration , where the duration is governed by a specified Scheduler . 
Returns an Observable that only emits those items emitted by the source Observable that are not followed by another emitted item within a specified time window . 
Returns an Observable that only emits those items emitted by the source Observable that are not followed by another emitted item within a specified time window , where the time window is governed by a specified Scheduler . 
Returns an Observable that emits records of the time interval between consecutive items emitted by the source Observable . 
Returns an Observable that emits records of the time interval between consecutive items emitted by the source Observable , where this interval is computed on a specified Scheduler . 
Returns an Observable that mirrors the source Observable , but switches to a fallback Observable if either the first item emitted by the source Observable or any subsequent item does n't arrive within time windows defined by other Observables . 
Returns an Observable that mirrors the source Observable , but that switches to a fallback Observable if an item emitted by the source Observable does n't arrive within a window of time after the emission of the previous item , where that period of time is measured by an Observable that is a function of the previous item . 
Returns an Observable that mirrors the source Observable but applies a timeout policy for each emitted item . 
Returns an Observable that mirrors the source Observable but applies a timeout policy for each emitted item . 
Returns an Observable that mirrors the source Observable but applies a timeout policy for each emitted item using a specified Scheduler . 
Returns an Observable that mirrors the source Observable but applies a timeout policy for each emitted item , where this policy is governed on a specified Scheduler . 
Returns an Observable that emits a single item , a list composed of all the items emitted by the source Observable . 
Returns an Observable that emits a list that contains the items emitted by the source Observable , in a sorted order . 
Returns an Observable that emits a list that contains the items emitted by the source Observable , in a sorted order based on a specified comparison function . 
Returns an Observable that emits a list that contains the items emitted by the source Observable , in a sorted order . 
Returns an Observable that emits a list that contains the items emitted by the source Observable , in a sorted order based on a specified comparison function . 
Returns an Observable that emits the events emitted by source Observable , in a sorted order . 
Returns an Observable that emits the events emitted by source Observable , in a sorted order based on a specified comparison function . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits windows of items it collects from the source Observable . 
Returns an Observable that emits non-overlapping windows of items it collects from the source Observable where the boundary of each window is determined by the items emitted from a specified boundary-governing Observable . 
Returns an Observable that emits items that are the result of applying a specified function to pairs of values , one each from the source Observable and a specified Iterable sequence . 
Returns an Observable that emits items that are the result of applying a specified function to pairs of values , one each from the source Observable and another specified Observable . 
Returns an Observable that automatically connects to this ConnectableObservable when the first Subscriber subscribes . 
Returns an Observable that automatically connects to this ConnectableObservable when the specified number of Subscribers subscribe to it . 
Returns an Observable that automatically connects to this ConnectableObservable when the specified number of Subscribers subscribe to it and calls the specified callback with the Subscription associated with the established connection . 
Returns the number of times onCompleted was called on this TestSubscriber . 
Returns true if the hooks can no longer be changed . 
Sets the global error consumer action unless a lockdown is in effect . 
Sets the Completable 's onCreate hook function unless a lockdown is in effect . 
Sets the Observable onCreate hook function unless a lockdown is in effect . 
Sets the Single onCreate hook function unless a lockdown is in effect . 
Sets the hook function that is called before an action is scheduled , allowing decorating that function , unless a lockdown is in effect . 
Sets the hook function that is called when a subscriber subscribes to a Completable unless a lockdown is in effect . 
Sets the hook function that is called when a subscriber subscribes to a Observable unless a lockdown is in effect . 
Sets the hook function that is called when a subscriber subscribes to a Single unless a lockdown is in effect . 
Returns the current Single onSubscribeError hook function or null if it is sets to the default pass-through . 
Returns the current Completable onSubscribeError hook function or null if it is sets to the default pass-through . 
Returns the current Observable onSubscribeError hook function or null if it is sets to the default pass-through . 
Returns the current Observable onLift hook function or null if it is sets to the default pass-through . 
Returns the current Single onLift hook function or null if it is sets to the default pass-through . 
Returns the current Completable onLift hook function or null if it is sets to the default pass-through . 
Returns the current computation scheduler hook function or null if it is sets to the default pass-through . 
Returns the current global error handler hook action or null if it is sets to the default one that signals errors to the current threads UncaughtExceptionHandler . 
Returns the current io scheduler hook function or null if it is sets to the default pass-through . 
Returns the current new thread scheduler hook function or null if it is sets to the default pass-through . 
Returns the current Observable onCreate hook function or null if it is sets to the default pass-through . 
Returns the current schedule action hook function or null if it is sets to the default pass-through . 
Returns the current Single onCreate hook function or null if it is sets to the default pass-through . 
Returns the current Completable onCreate hook function or null if it is sets to the default pass-through . 
Returns the current Completable onStart hook function or null if it is sets to the default pass-through . 
Returns the current Observable onStart hook function or null if it is sets to the default pass-through . 
Returns the current Single onStart hook function or null if it is sets to the default pass-through . 
Returns the current Observable onReturn hook function or null if it is sets to the default pass-through . 
Returns the current Single onReturn hook function or null if it is sets to the default pass-through . 
Sets up hooks that capture the current stacktrace when a source or an operator is instantiated , keeping it in a field for debugging purposes and alters exceptions passing along to hold onto this stacktrace . 
Sets the hook function for returning a ScheduledExecutorService used by the GenericScheduledExecutorService for background tasks . 
Returns the current factory for creating ScheduledExecutorServices in GenericScheduledExecutorService utility . 
Gets the current time , in milliseconds , according to this Scheduler . 
Gets the current time , in milliseconds , according to this Scheduler . 
Returns the time interval , expressed in milliseconds . 
Returns the item that was emitted by the Observable after this time interval . 
Returns the timestamp , expressed in milliseconds . 
Returns an Observable that emits the items emitted by two Singles , one after the other . 
Returns an Observable that emits the items emitted by three Singles , one after the other . 
Returns an Observable that emits the items emitted by four Singles , one after the other . 
Returns an Observable that emits the items emitted by five Singles , one after the other . 
Returns an Observable that emits the items emitted by six Singles , one after the other . 
Returns an Observable that emits the items emitted by seven Singles , one after the other . 
Returns an Observable that emits the items emitted by eight Singles , one after the other . 
Returns an Observable that emits the items emitted by nine Singles , one after the other . 
Returns a Single that emits the results of a specified combiner function applied to two items emitted by two other Singles . 
Returns a Single that emits the results of a specified combiner function applied to three items emitted by three other Singles . 
Returns an Observable that emits the results of a specified combiner function applied to four items emitted by four other Singles . 
Returns an Observable that emits the results of a specified combiner function applied to five items emitted by five other Singles . 
Returns an Observable that emits the results of a specified combiner function applied to six items emitted by six other Singles . 
Returns an Observable that emits the results of a specified combiner function applied to seven items emitted by seven other Singles . 
Returns an Observable that emits the results of a specified combiner function applied to eight items emitted by eight other Singles . 
Returns an Observable that emits the results of a specified combiner function applied to nine items emitted by nine other Singles . 
Returns a Single that emits the result of specified combiner function applied to combination of items emitted , in sequence , by an Iterable of other Singles . 
Returns an Observable that emits the item emitted by the source Single , then the item emitted by the specified Single . 
Returns a Single that is based on applying a specified function to the item emitted by the source Single , where that function returns a Single . 
Returns an Observable that emits items based on applying a specified function to the item emitted by the source Observable , where that function returns an Observable . 
Returns a Single that applies a specified function to the item emitted by the source Single and emits the result of this function application . 
Returns a Single that emits the item emitted by the source Single until a Completable terminates . 
Returns a Single that emits the item emitted by the source Single until an Observable emits an item . 
Returns a Single that emits the item emitted by the source Single until a second Single emits an item . 
Returns a Single that mirrors the source Single but applies a timeout policy for its emitted item . 
Returns a Single that mirrors the source Single but applies a timeout policy for its emitted item , where this policy is governed on a specified Scheduler . 
Returns a Single that mirrors the source Single but applies a timeout policy for its emitted item . 
Returns a Single that mirrors the source Single but applies a timeout policy for its emitted item , using a specified Scheduler . 
Returns a Single that emits the result of applying a specified function to the pair of items emitted by the source Single and another specified Single . 
Returns a Single that emits the items emitted by the source Single shifted forward in time by a specified delay . 
Returns a Single that emits the items emitted by the source Single shifted forward in time by a specified delay . 
Returns a Single that delays the subscription to this Single until the Observable completes . 
Returns the current value of the Subject if there is such a value and the subject has n't terminated with an exception . 
Returns the Throwable that terminated the Subject . 
Returns the current value of the Subject if there is such a value and the subject has n't terminated yet . 
Returns the Throwable that terminated the Subject . 
Returns a snapshot of the currently buffered non-terminal events . 
Returns the Throwable that terminated the Subject . 
Creates an unbounded replay subject . 
Creates an unbounded replay subject with the specified initial buffer capacity . 
Creates a size-bounded replay subject .  
Creates a time-bounded replay subject . 
Creates a time - and size-bounded replay subject . 
Returns the Throwable that terminated the Subject . 
Returns a snapshot of the currently buffered non-terminal events . 
sets the latest NotificationLite value . 
sets a new latest NotificationLite value and returns the active observers . 
Returns the stored index . 
Sets a new index value . 
Returns true if this composite is not unsubscribed and contains subscriptions . 
Sets the underlying subscription . 
Gets the underlying subscription . 
Returns a new sub-subscription @return a new sub-subscription . 
Sets the underlying subscription . 
Gets the underlying subscription . 
Gets the header to the email body . 
Gets the table of entries in the email body . 
Gets the footer of the email body . 
Gets the HTML cell in the table of a string value . 
Gets the HTML string displaying the table header with the specified column names . 
Gets the owner email from the monkey configuration . 
Gets the clusters for a list of regions . 
Creates the RDS table , if it does not already exist . 
Gets the cross-zone load balancing option for an ELB . 
Gets the load balancer names of an ASG . 
Gets the security groups for a list of instance ids of the same region . 
Gets the list of AWS instances . 
Gets the load balancer names of an ASG . 
Gets the list of availability zones for an ASG . 
Gets the list of availability zones for a load balancer . 
Gets the SimpleDB client . 
Gets the clusters for a list of regions . 
Gets the unique SimpleDB item name for a cluster . 
Gets the owner email from the resource 's tag key sets in GLOBAL_OWNER_TAGKEY . 
Gets the AWS client used by the crawler . 
Gets the collection of AMIs that are created using a specific snapshot . 
Gets all volumes that are not attached to any instance . 
Adds information of last attachment to the resources . 
Gets the launch configs that are currently in use by at least one ASG in a region . 
Returns a list of AWSResource objects . 
Creates the RDS table , if it does not already exist . 
Returns true if the instance is registered in Eureka/Discovery . 
Gets the AMI created using the snapshot . 
Gets the SimpleDB client . 
Returns a list of AWSResource objects . 
Gets the unique SimpleDB item name for a resource . 
Gets the domain name for the owner email . 
Creates the RDS table , if it does not already exist . 
Creates the SimpleDB domain , if it does not already exist . 
Returns true if a new STS session needs to be started . 
Sets the chaos crawler . 
Sets the chaos instance selector . 
Sets the chaos email notifier . 
adds the monkeys that will be run . 
Adds the fields . 
creates the specific client with region taken from properties . 
creates the specific client within passed region , using the appropriate AWS credentials provider and client configuration . 
Gets the AWS client . 
Gets the region . 
Gets the accountName @return the accountName 
Sets the scheduler . 
Sets the calendar . 
Sets the configuration . 
Sets the cloud client . 
Sets the recorder . 
Gets the configuration properties . 
Gets the AWS credentials provider . 
Gets the AWS client configuration . 
Returns collection of holidays , including Monday or Friday if given holiday is Thuesday or Thursday . 
Gets the owner 's email for a instance group . 
Gets the effective probability value , returns 0 if the group is not enabled . 
Gets the effective probability value when the monkey processes an instance group , it uses the following logic in the order as listed below . 
Returns lastOptInTimeInMilliseconds from the . 
Returns the lastOptInTimeInMilliseconds parameter for a group omitting the randomly generated suffix . 
returns a copy of the instance group removing the randomly generated suffix from its name . 
Gets the url to view the details of the cluster . 
Gets the string when displaying the cluster , e.g. the id . 
Gets the table columns for the table in the email . 
Gets the row for a cluster and a failed conformity check in the table in the email body . 
Gets the summary email subject for the last run of conformity monkey . 
Gets the url to view the details of the resource . 
Gets the string when displaying the resource , e.g. the id . 
Gets the url to edit the Janitor termination of the resource . 
Gets the table columns for the table in the email . 
Gets the row for a resource in the table in the email body . 
Gets the summary email subject for the last run of janitor monkey . 
Adds the instance . 
Gets the up to date information for a collection of group names . 
Returns the instance id to identify the instance to the cloud client . 
Gets the count of terminations since a specific time . 
Gets a list of all enabled chaos types for this ChaosMonkey . 
Returns the configuration key prefix to use for this strategy . 
Returns the unique key for the ChaosType . 
Returns whether we are enabled . 
Returns the ChaosType with the matching key . 
Returns whether chaos types that cost money are allowed . 
gets the configured SSH credentials . 
Gets the VPC id for the given instance . 
Returns the desired InstanceGroup . 
returns the filtered list of InstanceGroups using the requested predicate . 
Gets the base url of the service for a specific region . 
gets all AutoScalingGroup 's that have been added . 
adds the given instance to the named group . 
Gets the named VirtualMachine . 
returns all VirtualMachines from VSpehere Center . 
Adds or overwrites tags for the specified resources . 
Returns the jClouds compute service . 
Returns the jClouds node id for an instance id on this CloudClient . 
Sets the security groups for an instance . 
Gets the name of the auto scaling group . 
Gets the instances of the auto scaling group . 
Gets the flag to indicate whether the ASG is suspended . 
Sets the flag to indicate whether the ASG is suspended . 
Gets the name of the cluster . 
Gets the region of the cluster . 
Gets the auto scaling groups of the auto scaling group . 
Gets the owner email of the cluster . 
Sets the owner email of the cluster . 
Gets the update time of the cluster . 
Sets the update time of the cluster . 
Gets all conformity check information of the cluster . 
Gets the conformity information for a conformity rule . 
Gets the boolean flag to indicate whether the cluster is conforming to all non-excluded conformity rules . 
Sets the boolean flag to indicate whether the cluster is conforming to all non-excluded conformity rules . 
Gets names of all excluded conformity rules for this cluster . 
Gets the flag to indicate whether the cluster is opted out of Conformity monkey . 
Sets the flag to indicate whether the cluster is opted out of Conformity monkey . 
Gets a map from fields of resources to corresponding values . 
Gets the up to date information for a collection of clusters . 
Gets the owner email for a cluster to sets the ownerEmail field when crawl . 
Gets the conformity rule id . 
Gets the components that cause the conformity check to fail . 
Adds a cluster to the tracker . 
Gets the list of clusters in a list of regions . 
Gets the list of non-conforming clusters in a list of regions . 
Gets the cluster with a specific name from . 
Sets the map from an owner email to the clusters that belong to the owner and need to send notifications for . 
Gets the Amazon Simple Email Service client . 
Gets the open hour the email notifications are sent . 
Gets the close hour the email notifications are sent . 
Gets the source email the notifier uses to send email . 
Gets the default email the notifier sends to when there is no owner specified for a cluster . 
Gets the regions the notifier is running in . 
Gets the Conformity Monkey 's cluster tracker . 
Gets the Conformity email builder . 
Gets the cc email addresses . 
Gets all the conformity rules . 
Gets all the clusters that are not conforming and sends email notifications to the owners . 
Gets the flag to indicate whether the monkey is leashed . 
Gets the name/id of the rule . 
Gets the human-readable reason to explain why the cluster is not conforming . 
adds a conformity rule . 
Gets all conformity rules in the rule engine . 
Sets the flag to indicate if the janitor is leashed . 
Gets the existing resources that are marked as cleanup candidate . 
Adds selected resource fields and all the tags from the given resource as additional fields on the event . 
gets the resources marked in the last run of the Janitor . 
gets the resources unmarked in the last run of the Janitor . 
gets the resources cleaned in the last run of the Janitor . 
gets the resources that failed to be cleaned in the last run of the Janitor . 
Gets the resource type the janitor is cleaning up . 
Gets the up to date information for a collection of resource ids . 
Gets the owner email for a resource to sets the ownerEmail field when crawl . 
Sets the map from an owner email to the resources that belong to the owner and need to send notifications for . 
Gets the Amazon Simple Email Service client . 
Gets the source email the notifier uses to send email . 
Gets the default email the notifier sends to when there is no owner specified for a resource . 
Gets the number of days a notification is sent before the expected termination date . . 
Gets the region the notifier is running in . 
Gets the janitor resource tracker . 
Gets the janitor email builder . 
Gets the calendar . 
Gets the cc email addresses . 
gets the default domain of email addresses . 
Gets all the resources that are marked and no notifications have been sent . 
Gets the marked resources for notification . 
Gets the map from invalid email address to the resources that were supposed to be sent to the address . 
Adds a resource to the tracker . 
Gets the list of resources of a specific resource type and cleanup state in a region . 
Gets the resource of a specific id . 
Gets the resource of a specific id . 
adds a rule to decide if a resource should be a candidate for cleanup . 
adds a rule to decide if a resource should be excluded for cleanup . 
gets rules to find out what 's planned for enforcement . 
gets rules to find out what 's excluded for enforcement . 
adds a event to the summary report . 
Returns a summary of what the chaos run did . 
Sets up the schedule for the monkey to run on . 
Removes the monkey from the schedule . 
gets the current time using whatever timezone is used for monkey date calculations . 
Gets the next business day from the start date after n business days . 
Gets the boolean associated with property string . 
Gets the boolean associated with property string . 
Gets the string associated with property string . 
Gets the string associated with property string . 
Gets the cc email addresses for a to address . 
Gets the source email addresses for a to address . 
Adds the field . 
Gets the single instance of MonkeyRunner . 
Gets the registered monkeys . 
Adds a simple monkey void constructor . 
Adds the monkey . 
Removes the monkey . 
Gets the context class . 
Gets the resource id . 
Sets the resource id . 
Sets the resource id and returns the resource . 
Gets the resource type . 
Sets the resource type . 
Sets the resource type and returns the resource . 
Gets the region the resource is in . 
Sets the region the resource is in . 
Sets the resource region and returns the resource . 
Gets the owner email of the resource . 
Sets the owner email of the resource . 
Sets the resource owner email and returns the resource . 
Gets the description of the resource . 
Sets the description of the resource . 
Sets the resource description and returns the resource . 
Gets the launch time of the resource . 
Sets the launch time of the resource . 
Sets the resource launch time and returns the resource . 
Gets the time that when the resource is marked as a cleanup candidate . 
Sets the time that when the resource is marked as a cleanup candidate . 
Sets the resource mark time and returns the resource . 
Gets the the time that when the resource is expected to be terminated . 
Sets the time that when the resource is expected to be terminated . 
Sets the time that when the resource is expected to be terminated and returns the resource . 
Gets the time that when the resource is actually terminated . 
Sets the time that when the resource is actually terminated . 
Sets the resource actual termination time and returns the resource . 
Gets the time that when the owner is notified about the cleanup of the resource . 
Sets the time that when the owner is notified about the cleanup of the resource . 
Sets the time that when the owner is notified about the cleanup of the resource and returns the resource . 
Gets the resource state . 
Sets the resource state . 
Sets the resource state and returns the resource . 
Gets the termination reason of the resource . 
Sets the termination reason of the resource . 
Sets the resource termination reason and returns the resource . 
Gets the boolean to indicate whether or not the resource is opted out of Janitor monkey so it will not be cleaned . 
Sets the flag to indicate whether or not the resource is opted out of Janitor monkey so it will not be cleaned . 
Sets the flag to indicate whether or not the resource is opted out of Janitor monkey so it will not be cleaned and returns the resource object . 
Gets a map from fields of resources to corresponding values . 
Adds or sets an additional field with the specified name and value to the resource . 
Gets the value of an additional field with the specified name of the resource . 
Gets all additional field names in the resource . 
Adds a tag with the specified key and value to the resource . 
Gets the tag value for a specific key of the resource . 
Gets all the keys of tags . 
Gets the chaos events . Creates gets / api/v1/chaos api which outputs the chaos events in json . 
gets / api/v1/janitor / addEvent will try to a adds a new event with the information in the url query string . 
Creates gets / api/v1/janitor api which responds 200 OK if JanitorMonkey is running . 
Gets the tuned probability value , returns 0 if the group is not enabled . 
sets the behind view content to an explicit view . 
sets the behind view content to an explicit view . 
sets the behind view content from a layout resource . 
Gets the SlidingMenu associated with this activity . 
Sets mSlidingMenu as a newly inflated SlidingMenu . 
sets the activity content to an explicit view . 
sets the behind view content to an explicit view . 
Gets the SlidingMenu associated with this activity . 
sets the currently selected page . 
sets the currently selected page . 
sets a listener that will be invoked whenever the page changes or is incrementally scrolled .  
sets a separate OnPageChangeListener for internal use by the support library . 
sets the above view content from a layout resource . 
sets the above view content to the given View . 
Sets the sliding enabled . 
Sets which side the SlidingMenu should appear on . 
Returns the current side that the SlidingMenu is on . 
Gets the behind offset . 
Sets the behind offset . 
Sets the behind offset . 
Sets the above offset . 
Sets the above offset . 
Sets the behind width . 
Sets the behind width . 
Gets the behind scroll scale . 
Gets the touch mode margin threshold @return the touch mode margin threshold 
sets the touch mode margin threshold @param touchmodeMarginThreshold 
Sets the behind scroll scale . 
Sets the behind canvas transformer . 
Gets the touch mode above . 
Sets the shadow drawable . 
Sets the shadow drawable . 
Sets the shadow width . 
Sets the shadow width . 
Sets how much the SlidingMenu fades in and out .  
Sets the selected view . 
Sets the selector drawable . 
Sets the selector drawable . 
adds a View ignored by the Touch Down event when mode is Fullscreen @param v a view to be ignored 
removes a View ignored by the Touch Down event when mode is Fullscreen @param v a view not wanted to be ignored anymore 
Sets the OnOpenListener . 
Sets the OnCloseListener . 
Sets the OnOpenedListener . 
Sets the OnClosedListener . 
Creates an embedded server instance . 
Creates an embedded server of type corresponding to the provided identifier . 
Adds an Embedded server factory for the provided identifier . 
Creates a Jetty server . 
Creates an ordinary , non-secured Jetty server jetty . 
Creates a ssl jetty socket jetty . 
Gets the actual handler - if necessary , instantiating an object . 
Creates a new websocket servlet context handler . 
Returns type of exception that this filter will handle @return Type of exception 
Sets the type of exception that this filter will handle @param exceptionClass Type of exception 
Returns the default instance for the exception mapper @return Default instance 
Returns the handler associated with the provided exception class @param exceptionClass Type of exception @return Associated handler 
Returns the handler associated with the provided exception class @param exception Exception that occurred @return Associated handler 
Returns this route 's path 
Returns an element from the specified key . 
Returns the value for this key . 
Returns the value for that key . 
Creates a ` Redirect ` instance 
Returns the map containing all route params @return a map containing all route params 
Returns the value of the provided route pattern parameter . 
Gets the query param @param queryParam the query parameter @return the value of the provided queryParam Example : query parameter ` id ' from the following request URI : / hello?id = foo 
Gets all the values of the query param Example : query parameter ` id ' from the following request URI : / hello?id = foo & id = bar @param queryParam the query parameter @return the values of the provided queryParam , null if it does n't exists 
Gets the value for the provided header @param header the header @return the value of the provided header 
Gets the value of the provided attribute @param attribute The attribute value or null if not present @param <T> the type parameter . 
Returns the current session associated with this request , or if the request does not have a session , creates one . 
Returns the current session associated with this request , or if there is no current session and creates is true , returns a new session . 
Gets cookie by name . 
sets the session validity @param validSession the session validity 
Sets request method `` HEAD '' by default . 
Gets a resource from a servlet request @param request the servlet request @return the resource or null if not found @throws java.net.MalformedURLException thrown when malformed URL . 
Gets resource from path @param path the path @return the resource or null if resource does n't exist @throws java.net.MalformedURLException thrown when malformed URL . 
adds two URI path segments . 
Gets the path @return the path 
returns whether this resource actually exists in physical form . 
returns whether this resource represents a handle with an open stream . 
Sets the status code for the @param statusCode the status code 
Returns the status code @return the status code 
Sets the content type for the response @param contentType the content type 
Returns the content type @return the content type 
Sets the body @param body the body 
returns the body @return the body 
Adds not persistent cookie to the response . 
Adds cookie to the response . 
Adds cookie to the response . 
Adds cookie to the response . 
Adds cookie to the response . 
Adds cookie to the response . 
Removes the cookie . 
Adds a route @param httpMethod the HTTP method @param route the route implementation 
Adds a filter @param httpMethod the HTTP method @param filter the route implementation 
Gets the HttpMethod corresponding to the provided string . 
Removes a particular route from the collection of those that have been previously routed . 
Removes a particular route from the collection of those that have been previously routed . 
Sets the next serializer in the chain . 
sets the IP address that Spark should listen on . 
sets the port that Spark should listen on . 
sets the connection to be secure , using the specified keystore and truststore . 
Sets the folder in classpath serving static files . 
Sets the external folder serving static files . 
Sets the max idle timeout in milliseconds for WebSocket connections . 
Sets the folder in classpath serving static files . 
Sets the external folder serving static files . 
Sets the expire-time for static resources @param seconds the expire time in seconds 
adds routes here . 
Returns the object bound with the specified name in this session , or null if no object is bound under the name . 
Removes the object bound with the specified name from this session . 
sets the IP address that Spark should listen on . 
sets the IP address that Spark should listen on . 
sets the port that Spark should listen on . 
sets the port that Spark should listen on . 
sets the connection to be secure , using the specified keystore and truststore . 
sets the connection to be secure , using the specified keystore and truststore . 
Sets the folder in classpath serving static files . 
Sets the external folder serving static files . 
Sets the max idle timeout in milliseconds for WebSocket connections . 
Creates a Stores instance . 
Creates a new ModelAndView object with given arguments . 
Creates a new ModelAndView object with given arguments . 
returns the default ClassLoader to use : typically the thread context ClassLoader , if available ; the ClassLoader that loaded the ClassUtils class will be used as fallback . 
gets the contents of an InputStream as a String using the default character encoding of the platform . 
gets the contents of an InputStream as a ByteArray This method buffers the input internally , so there is no need to use a BufferedInputStream . 
returns whether the given resource location is a URL : either a special `` classpath '' pseudo URL or a standard URL . 
creates a URI instance for the given URL , replacing spaces with '' % 20 '' URI encoding first . 
creates a URI instance for the given location String , replacing spaces with '' % 20 '' URI encoding first . 
returns JVM param sets keystore or default if not sets . 
returns JVM param sets keystore password or default if not sets . 
returns JVM param sets truststore location , or keystore location if not sets . 
returns JVM param sets truststore password or keystore password if not sets . 
Sets if ANSI output is enabled . 
creates a new ANSI string from the specified elements . 
returns the raw unprocessed arguments that were passed to the application . 
returns then names of all option arguments . 
returns whether the sets of option arguments parsed from the arguments contains an option with the given name . 
returns the collection of values associated with the arguments option having the given name . 
returns the collection of non-option arguments parsed . 
Returns the underlying source used to find the home directory . 
Returns the application home directory . 
returns a sub-directory of the application temp . 
returns the directory to be used for application specific temp files . 
sets the bean name generator to be used by the underlying readers and scanner . 
sets the resource loader to be used by the underlying readers and scanner . 
sets the environment to be used by the underlying readers and scanner . 
sets whether to ignore unknown fields , that is , whether to ignore bind parameters that do not have corresponding fields in the target object . 
sets the target name . 
sets the message source . 
sets the property sources . 
sets the conversion service . 
sets the validator . 
sets a flag to indicate that an exception should be raised if a Validator is available and validation fails . 
sets name aliases . 
returns a Map of all values from all underlying properties that start with the specified key . 
sets the message source . 
sets the property aliases . 
sets the YAML . 
sets the resource . 
sets the validator . 
Adds an alias for a JavaBean property name on a particular type . 
creates a child application with the provided sources . 
adds a parent application with the provided sources . 
adds an already running parent context to an existing application . 
adds more sources to use in this application . 
Sets if the application is headless and should not instantiate AWT . 
adds config file property sources to the specified environment . 
adds appropriate post-processors to post-configure the property-sources . 
sets the search locations that will be considered as a comma-separated list . 
returns the active profiles that have not been processed yet . 
Returns the checks that should be applied . 
Returns the context path for the embedded servlet container . 
returns the address that the embedded container binds to . 
returns the session timeout in seconds . 
Returns the document root which will be used by the web context to serve static files . 
Returns the mime-type mappings . 
returns the Locale to Charset mappings . 
Returns whether or not the JSP servlet should be registered with the embedded container . 
Returns the absolute temp dir for given servlet container . 
Sets the context path for the embedded servlet container . 
Sets the display name of the application deployed in the embedded servlet container . 
Sets the port that the embedded servlet container should listen on . 
Sets if session data should be persisted between restarts . 
sets the directory used to store serialized session data . 
Sets the specific network address that the server should bind to . 
sets if the DefaultServlet should be registered . 
Sets the error pages that will be used when handling exceptions . 
Sets the mime-type mappings . 
Sets the document root directory which will be used by the web context to serve static files . 
Sets the SSL configuration that will be applied to the container 's default connector . 
Sets a provider that will be used to obtain SSL stores . 
Sets the configuration that will be applied to the container 's JSP servlet . 
Sets the compression configuration that will be applied to the container 's default connector . 
Sets the server header value . 
Sets the Locale to Charset mappings . 
returns the port this server is listening on . 
Returns access to the underlying Jetty Server . 
creates a configuration object that adds error handlers . 
creates a configuration object that adds mime type mappings . 
sets if x-forward - headers should be processed . 
sets the number of acceptor threads to use . 
sets the number of selector threads to use . 
Returns all defined mappings . 
adds a new mime mapping . 
gets a mime mapping for the given extension . 
removes an existing mapping . 
creates a new unmodifiable view of the specified mapping . 
Returns the port that was in use . 
returns the key store that should be used . 
returns the trust store that should be used . 
Returns access to the underlying Tomcat server . 
sets the Tomcat base directory . 
sets the character encoding to use for URL decoding . 
Returns the character encoding to use for URL decoding . 
Sets the background processor delay in seconds . 
adds resources from the classpath . 
returns the document root in canonical form . 
sets if x-forward - headers should be processed . 
sets whether to use XML validation . 
returns the environment . 
returns the application context . 
returns the exception that caused the failure . 
returns the application context . 
sets the order of the bean . 
returns the order of the bean . 
sets the property sources to bind . 
sets the bean validator used to validate property fields . 
sets the conversion service used to convert property values . 
sets the bean meta-data store . 
returns the cause type being handled by the analyzer . 
Returns a description of the failure . 
Returns the action , if any , to be taken to address the failure . 
Returns the cause of the failure . 
Returns all file extensions that could be loaded . 
returns the exit code that will be used to exit the JVM . 
Returns the exit code that should be returned from the application . 
Returns the exit code that should be returned from the application . 
gets the final exit code that should be returned based on all contained generators . 
returns the identifier of this driver . 
returns the driver class name . 
returns the XA driver source class name . 
returns the validation query . 
returns any self initialization config that has been applied . 
returns any spring specific initialization config that should be applied . 
returns the standard config locations for this system . 
returns the spring config locations for this system . 
Creates a new instance of the class . 
Creates a new instance of the class . 
Creates a new instance of the class . 
Sets the destination logger that will be used to send remapped events . 
sets the remapped level . 
Sets a custom logging level to be used for Spring Boot and related libraries . 
returns the Spring environment if available . 
Sets the logging level for a given logger . 
gets the bean definition registry . 
Returns the main application class that has been deduced or explicitly configured . 
sets a specific main application class that will be used as a log source and to obtain version information . 
Sets if this application is running within a web environment . 
Sets if the application is headless and should not instantiate AWT . 
Sets the mode used to display the banner when the application runs . 
Sets if the application information should be logged when the application starts . 
Sets the bean name generator that should be used when generating bean names . 
Sets the underlying environment that should be used with the created application context . 
Sets the type of application event that will trigger writing of the PID file . 
returns the actual port file that should be written for the given application context . 
creates the meta-data reader . 
adds HTTP basic authentication to requests .  
sets the order for this filter . 
sets servlet names that the filter will be registered against . 
returns a mutable collection of servlet names that the filter will be registered against . 
adds servlet names for the filter . 
sets the URL patterns that the filter will be registered against . 
returns a mutable collection of URL patterns that the filter will be registered against . 
adds URL patterns that the filter will be registered against . 
Sets the dispatcher types that should be used with the registration . 
sets if the filter mappings should be matched after any declared filter mappings of the ServletContext . 
returns if filter mappings should be matched after any declared Filter mappings of the ServletContext . 
Adds error pages that will be used when handling exceptions . 
sets the filter to be registered . 
Sets the directory location where files will be stored . 
Sets the maximum size in bytes allowed for uploaded files . 
Sets the maximum size allowed for uploaded files . 
Sets the maximum size allowed in bytes for multipart/form-data requests . 
Sets the maximum size allowed for multipart/form-data requests . 
Sets the size threshold in bytes after which files will be written to disk . 
Sets the size threshold after which files will be written to disk . 
sets the name of this registration . 
Sets if asynchronous operations are support for this registration . 
Returns if asynchronous operations are support for this registration . 
returns if the registration is enabled . 
sets init-parameters for this registration . 
Returns a mutable Map of the registration init-parameters . 
adds a single init-parameter , replacing any existing parameter with the same name . 
sets the order of the registration bean . 
gets the order of the registration bean . 
sets the listener that will be registered . 
returns the supported types for this registration . 
Returns the servlet being registered . 
Sets the servlet to be registered . 
sets the URL mappings for the servlet . 
returns a mutable collection of the URL mappings for the servlet . 
adds URL mappings for the servlet . 
Returns the servlet name that will be registered . 
Returns the date/time that the even was logged . 
Returns the user principal responsible for the event . 
Returns the type of event . 
Returns the event data . 
Find audit events since the time provided . 
Find audit events relating to the specified principal since the time provided . 
Find audit events of specified type relating to the specified principal since the time provided . 
sets the capacity of this event repository . 
gets the audit event . 
adds an alias for ` local.management.port ' that actually resolves using ` local.server.port ' . 
returns a properties file configured from these settings that can be applied to a CRaSH shell instance . 
returns the ratio of cache requests which were hits as a value between 0 and 1 where 0 means that the hit ratio is 0 % and 1 means it is 100 % . 
returns the ratio of cache requests which were misses as value between 0 and 1 where 0 means that the miss ratio is 0 % and 1 means it is 100 % . 
returns if the endpoint is enabled . 
Returns the response that should be returned when the endpoint is disabled . 
sets the prefix used in mappings . 
gets the prefix used in mappings . 
gets the path of the endpoint . 
Sets if this mapping is disabled . 
Returns if this mapping is disabled . 
returns the endpoints . 
sets specific status mappings . 
adds specific status mappings to the existing sets . 
adds a status mapping to the existing sets . 
adds a status mapping to the existing sets . 
returns the context path of the management server . 
returns the MVC path of the endpoint . 
returns if the endpoint exposes sensitive information . 
returns an indication of current state through metrics . 
sets the handler mappings . 
sets the method mappings . 
adds basic system metrics . 
adds metrics from ManagementFactory if possible . 
adds JVM heap metrics . 
adds JVM non-heap metrics . 
adds thread metrics . 
adds class loading metrics . 
adds garbage collection metrics . 
returns the single ` aggregate ' status that should be used from the specified candidates . 
returns the map of ` aggregate ' details that should be used from the specified healths . 
sets a specific validation query to use to validate a connection . 
returns the status of the health . 
returns the details of the health . 
returns an indication of health . 
sets the ordering of the status . 
sets the ordering of the status . 
returns the code for this status . 
returns the description of this status . 
returns the content . 
returns the properties that this instance manages . 
returns the mode that should be used to expose the content . 
returns the nested map with the specified key or empty map if the specified map contains no mapping for the key . 
Returns the buffer value . 
gets the next group of metrics to write . 
sets the include patterns used to filter metrics . 
sets the exclude patterns used to filter metrics . 
Find a matching trigger configuration . 
sets the specified gauge value . 
Returns the name of the metric . 
Returns the value of the metric . 
Find all the metrics known to this reader . 
Find all metrics whose name starts with the given prefix . 
returns the name of the gauge . 
returns the current value of the gauge . 
returns either an exponential weighted moving average or a simple mean , respectively , depending on whether the weight ` alpha ' has been sets for this gauge . 
returns the maximum value of the gauge . 
returns the minimum value of the gauge . 
returns the number of times the value has been sets . 
returns the smoothing constant value . 
Find a single instance of a rich gauge by name . 
Find all instances of rich gauge known to this reader . 
returns the number of gauge values available . 
sets the value of a metric . 
sets the capacity of the in-memory repository . 
Returns the host from the first address , or the configured host if no addresses have been sets . 
Returns the port from the first address , or the configured port if no addresses have been sets . 
returns the auto-configuration base packages for the given bean factory . 
returns the job execution . 
Returns condition outcomes from this report , grouped by the source . 
Returns the names of the classes that have been excluded from condition evaluation . 
Returns the names of the classes that were evaluated but were not conditional . 
returns the inverse of the specified condition outcome . 
returns true if any of the specified conditions match . 
returns true if any of the specified condition matches . 
returns the source annotation class used by the selector . 
returns the auto-configuration class names that should be considered . 
returns any exclusions that limit the candidate configurations . 
Returns the driver class name . 
Returns the URL for the connection using the default database name . 
Creates the minimal transport parameters for an embedded transport configuration . 
sets if unique runtime object names should be ensured . 
sets the charset . 
sets the resource loader . 
sets the Mustache template that should actually be rendered . 
sets the compiler . 
sets the charset . 
returns the JTA transaction manager . 
gets configuration properties for the initialization of the main Hibernate EntityManagerFactory . 
returns the principal that should be used for the token . 
returns the session timeout in seconds . 
returns the underlying providers being used . 
gets the provider that can be used to render the given view . 
gets the provider that can be used to render the given view . 
Returns the path of the error page . 
returns an immutable list of the converters in the order that they will be registered . 
returns whether the resource chain is enabled . 
returns a data source metadata instance with a min size of 0 and max size of 2 . 
Returns the name of the command . 
Returns a description of the command . 
Returns usage help for the command . 
Gets full help text for the command , e.g. a longer description and one line per option . 
Returns help for each supported option . 
returns some examples for the command . 
returns the name of the runner or an empty string . 
adds the specified commands . 
adds the specified command . 
sets the command classes which should be considered option commands . 
Returns if the specified command is an option command . 
Find a command by name . 
returns the dependencies supported by the service . 
returns the project types supported by the service . 
Returns the defaults applicable to the service . 
Returns the sets of options that are mutually synonymous . 
Returns usage help for the option . 
Returns the logging level to use . 
Returns the current prompt . 
returns the dependency group id . 
returns the dependency artifact id . 
returns the dependency version . 
returns the dependency exclusions . 
returns the exclusion artifact ID . 
returns the exclusion group ID . 
Returns the managed dependencies . 
Returns the managed version of Spring Boot . 
adds dependencies and all of their dependencies . 
adds a single dependency and , optionally , all of its dependencies . 
adds a single dependency with the specified classifier and type and , optionally , all of its dependencies . 
returns the name of the repository . 
returns the URI of the repository . 
returns if the repository should enable access to snapshots . 
Removes it from the block at the same time . 
Returns the scope in which the compiler operates . 
Returns if import declarations should be guessed . 
Returns if jar dependencies should be guessed . 
Returns true if auto-configuration transformations should be applied . 
Returns the classpath for local resources . 
Returns the configuration for the repositories that will be used by the compiler to resolve dependencies . 
creates a new default repository configuration . 
returns URLs from a given source path . 
returns details of the files that changed . 
returns if an application restart is required due to the change . 
returns true if a full restart is required . 
returns the file that was changed . 
returns the type of change . 
returns the name of the file relative to the source folder . 
adds listener for file change events . 
adds source folders to monitor . 
adds a source folder to monitor . 
returns the source folder of this snapshot . 
returns if the server has been started . 
returns the port that the server is listening on . 
returns the time that the file was last modified . 
returns the size of the collection . 
returns the name of the source folder . 
Returns if the thread is for a main invocation . 
returns the URLs that should be used with initialization . 
Returns the actual main method . 
returns the name of the declaring class . 
sets the order of the listener . 
sets if restart support is enabled . 
adds additional URLs to be includes in the next restart . 
returns the sequence number of the payload . 
returns the payload as a hexadecimal string . 
Returns the active server thread , creating and starting it if necessary . 
sets the long poll timeout for the server . 
sets the maximum amount of time to wait for a client before closing the connection . 
returns the underlying request . 
returns the underlying response . 
returns the port number . 
Returns a count of the number of Gemstones in the GemFire Cache . 
Gets a Gemstone by ID . 
Gets a Gemstone by name . 
returns a listing of Gemstones currently stored in the GemFire Cache . 
Returns a count of the number of Gemstones in the GemFire Cache . 
Gets a Gemstone by ID . 
Gets a Gemstone by name . 
returns a listing of Gemstones currently stored in the GemFire Cache . 
returns a `` differentiator '' property to ensure that there is something to differentiate regular tests and bootstrapped tests . 
returns the type under test . 
returns the object created from parsing the specific JSON bytes . 
returns the object created from parsing the specific JSON String . 
returns the object created from reading from the specified classpath resource . 
returns the object created from reading from the specified file . 
returns the object created from reading from the specified input stream . 
returns the object created from reading from the specified resource . 
returns the object created from reading from the specified reader . 
creates JSON content from the specified String source . 
creates JSON content from the specified resource path . 
creates JSON content from the specified JSON bytes . 
creates JSON content from the specified JSON file . 
creates JSON content from the specified JSON input stream . 
creates JSON content from the specified JSON resource . 
returns the actual JSON content string . 
returns the actual object content . 
returns the name for bean . 
returns the mock reset mode . 
returns if AOP advised beans should be proxy target aware . 
returns the type that should be mocked . 
returns the extra interfaces . 
returns the answers mode . 
returns if the mock is serializable . 
creates a new resource by POSTing the given object to the URI template , and returns the representation found in the response . 
creates a new resource by POSTing the given object to the URI template , and returns the representation found in the response . 
creates a new resource by POSTing the given object to the URL , and returns the representation found in the response . 
creates or update a resource by PUTting the given object to the URI . 
Creates a new resource by PUTting the given object to URI template . 
Creates a new resource by PUTting the given object to URL . 
returns the value of the Allow header for the given URI . 
returns the value of the Allow header for the given URI . 
returns the value of the Allow header for the given URL . 
removes the entity instance . 
Find by primary key . 
removes the given entity from the persistence context , causing a managed entity to become detached . 
returns the ID of the given entity . 
returns the ID of the given entity cast to a specific type . 
sets the main class , which will cause the search to be bypassed . 
sets the root location of classes to be searched . 
returns the id of the group , used as a common prefix for all properties associated to it . 
returns the hints of this item . 
returns the groups , indexed by id . 
returns the properties , indexed by id . 
returns the properties defined by this source . 
returns the hint value . 
returns the name of the provider . 
returns the parameters . 
returns the field values for the given element . 
adds item meta-data . 
adds item hint . 
returns item meta-data . 
returns hint meta-data . 
adds source code of given class to this project . 
Find the ` original ' source code for given test class . 
sets the name of the provided configuration . 
Returns a URL that can be used to load the archive . 
Returns the manifest of the archive . 
Returns the name of the entry . 
Returns the size of the data . 
Returns the underlying File . 
Returns -1 when the end of the stream is reached @throws IOException in case of I/O errors 
Returns the location in the data that the archive actually starts . 
returns the bytes of the `` Central directory '' based on the offset indicated in this record . 
returns the number of ZIP entries in the file . 
returns the offset of the load file header within the archive data . 
returns the compressed size of the entry . 
returns the uncompressed size of the entry . 
returns the method used to compress the data . 
sets if a generic static exception can be thrown when a URL can not be connected . 
returns a URL that can be used to access this JAR file . 
creates a classloader for the specified archives . 
creates a classloader for the specified URLs . 
Returns the main class that should be launched . 
Returns the archives that will be used to construct the class path . 
Returns the launcher class name for this layout . 
Returns the destination path for a given library . 
Returns the location of classes within the archive . 
Returns if loader classes should be included to make the archive executable . 
returns a layout for the given source file . 
returns the name of file as it should be written . 
returns the library file . 
returns the scope of the library . 
returns if the file can not be used directly as a nested jar and needs to be unpacked . 
Find the main class from a given folder . 
Find a single main class from a given folder . 
Find the main class in a given jar file . 
Find a single main class in a given jar file . 
Sets the main class that should be run . 
Sets if source files should be backed up when they would be overwritten . 
Sets the layout to use for the jar . 
Returns the location to which classes should be moved . 
returns the running process . 
returns if the process was stopped . 
returns artifact filters configured for this MOJO . 
returns the data the properties being merged . 
gets the constructor being called . 
gets the arguments as an array object . 
returns the object that holds the current joinpoint 's static part . 
returns the static part of this joinpoint . 
gets the method being called . 
returns the advice part of this aspect . 
returns the AspectJ-style advice method . 
returns the AspectJ expression pointcut . 
returns the factory for aspect instances . 
returns the ClassLoader for aspect instances . 
Sets the <b> declaration order </b> of this advice within the aspect 
sets by creator of this advice object if the argument names are known . 
creates a ParameterNameDiscoverer to be used for argument binding . 
gets the current join point match at the join point we are being dispatched on . 
creates the pointcut parameters needed by aspectj based on the given argument names and the argument types that are available from the adviceMethod . 
sets a list of regex patterns , matching eligible @AspectJ bean names . 
adds the supplied aspect instance to the chain . 
adds an aspect of the supplied type to the end of the advice chain . 
gets the singleton aspect instance for the supplied aspect type . 
creates a new proxy according to the settings in this factory . 
creates a new proxy according to the settings in this factory . 
returns AspectJ reflection information . 
returns the aspect class . 
returns the aspect class . 
returns a Spring pointcut expression for a singleton aspect . 
returns whether the aspect is defined as `` perthis '' or `` pertarget '' . 
returns whether the aspect is defined as `` pertypewithin '' . 
returns whether the aspect needs to be lazily instantiated . 
Creates a Spring Advisor for each AspectJ advice method . 
returns whether the aspect bean with the given name is eligible . 
returns the AspectJ AspectMetadata for this advisor . 
returns the AspectJ AspectMetadata for this factory 's aspect . 
returns the best possible creation mutex for this factory . 
Returns the offending class . 
creates an instance of this factory 's aspect . 
returns true if the parameter name binding for the given parameter index has not yet been assigned . 
returns the AspectJPrecedenceInformation provided by this advisor or its advice . 
returns the ProceedingJoinPoint for the current invocation , instantiating it lazily if it has n't been bound to the thread already . 
sets the declaration scope for the pointcut . 
sets the parameter names for the pointcut . 
sets the parameter types for the pointcut . 
returns the underlying AspectJ pointcut expression . 
gets a new pointcut expression based on a target class 's loader rather than the default . 
returns whether this is a before advice . 
returns whether this is an after advice . 
adds special advisors if necessary to work with a proxy chain that contains AspectJ advisors . 
returns whether this advisor is lazily initializing its underlying advice . 
returns whether this advisor has already instantiated its advice . 
Returns the Spring AOP proxy . 
Returns the Spring AOP target . 
sets the AspectJ type pattern to match . 
Creates the RootBeanDefinition for a POJO advice bean . 
sets the name of the aspect bean . 
sets whether this post-processor 's advisor is supposed to apply before existing advisors when encountering a pre-advised object . 
sets the target object , that is , the bean to be wrapped with a transactional proxy . 
sets the ClassLoader to generate the proxy class in . 
creates the `` main '' interceptor for this proxy factory bean . 
returns an AOP Alliance MethodInterceptor exposing the behavior of the given advice to an interception-based AOP framework . 
returns an Advisor wrapping the given advice . 
returns an array of AOP Alliance MethodInterceptors to allow use of the given Advisor in an interception-based framework . 
returns whether the Advised configuration is frozen , in which case no advice changes can be made . 
returns the interfaces proxied by the AOP proxy . 
sets this to `` true '' if the advisors have been pre-filtered already , meaning that the ClassFilter check can be skipped when building the actual advisor chain for proxy invocations . 
returns the advisors applying to this proxy . 
adds an advisor at the end of the advisor chain . 
adds an Advisor at the specified position in the chain . 
removes the given advisor . 
removes the advisor at the given index . 
adds the given AOP Alliance Advice at the specified position in the advice chain . 
removes the Advisor containing the given advice . 
sets the given object as target . 
sets a target class to be proxied , indicating that the proxy should be castable to the given class . 
sets the advisor chain factory to use . 
sets the interfaces to be proxied . 
adds a new proxied interface . 
removes a proxied interface . 
adds all of the given advisors to this proxy configuration . 
adds all of the given advisors to this proxy configuration . 
creates a new proxy object . 
creates a new proxy object . 
Find all eligible Advisors for auto-proxying this class . 
Find all candidate Advisors to use in auto-proxying . 
returns whether the Advisor bean with the given name is eligible for proxying in the first place . 
sets whether or not the proxy should be frozen , preventing advice from being added to it once it is created . 
sets custom TargetSourceCreators to be applied in this order . 
sets the common interceptors . 
sets whether the common interceptors should be applied before bean-specific ones . 
returns the owning BeanFactory . 
creates a proxy with the configured interceptors if the bean is identified as one to proxy by the subclass . 
returns whether the given bean class represents an infrastructure class that should never be proxied . 
creates a target source for bean instances . 
creates an AOP proxy for the given bean . 
returns whether the Advisors returned by the subclass are pre-filtered to match the bean 's target class already , allowing the ClassFilter check to be skipped when building advisors chains for AOP invocations . 
Find all eligible Advisor beans in the current bean factory , ignoring FactoryBeans and excluding beans that are currently in creation . 
sets the names of the beans that should automatically gets wrapped with proxies . 
returns if the given bean name matches the mapped name . 
sets whether to exclude advisors with a certain prefix in the bean name . 
returns whether to exclude advisors with a certain prefix in the bean name . 
sets the prefix for bean names that will cause them to be included for auto-proxying by this object . 
returns the prefix for bean names that will cause them to be included for auto-proxying by this object . 
returns the name of the currently proxied bean instance . 
sets the name of the currently proxied bean instance . 
returns the BeanFactory that this TargetSourceCreators runs in . 
returns the internal BeanFactory to be used for the specified bean . 
returns whether this TargetSourceCreator is prototype-based . 
creates a special TargetSource for the given bean , if any . 
sets constructor arguments to use for creating the proxy . 
sets whether to proxy the target class directly , instead of just proxying specific interfaces . sets this to `` true '' to force proxying for the TargetSource 's exposed target class . 
returns whether to proxy the target class directly as well as any interfaces . 
sets whether proxies should perform aggressive optimizations . 
returns whether proxies should perform aggressive optimizations . 
sets whether the proxy should be exposed by the AOP framework as a ThreadLocal for retrieval via the AopContext class . 
returns whether the AOP proxy will expose the AOP proxy for each invocation . 
sets whether this config should be frozen . 
returns whether the config is frozen , and no advice changes can be made . 
returns the AopProxyFactory that this ProxyConfig uses . 
adds the given AdvisedSupportListener to this proxy configuration . 
removes the given AdvisedSupportListener from this proxy configuration . 
creates a new proxy according to the settings in this factory . 
creates a new proxy according to the settings in this factory . 
creates a new proxy for the given interface and interceptor . 
sets the names of the interfaces we 're proxying . 
sets the list of Advice/Advisor bean names . 
sets the name of the target bean . 
sets whether to autodetect proxy interfaces if none specified . 
sets the value of the singleton property . 
sets the ClassLoader to generate the proxy class in . 
returns a proxy . creates an instance of the AOP proxy to be returned by this factory . 
returns the type of the proxy . 
creates a composite interface Class for the given interfaces , implementing the given interfaces in one single Class . 
returns the singleton instance of this class 's proxy object , lazily creating it if it has n't been created already . 
creates a new prototype instance of this class 's created proxy object , backed by an independent AdvisedSupport configuration . 
returns the proxy object to expose . 
returns an independent advisor chain . 
adds all global interceptors and pointcuts . 
adds the given advice , advisor or object to the interceptor list . 
returns a TargetSource to use when creating a proxy . 
sets the ordering which will apply to this class 's implementation of Ordered , used when applying multiple processors . 
sets the ClassLoader to generate the proxy class in . 
returns the configured proxy ClassLoader for this processor . 
returns the method invoked on the proxied interface . 
returns user attributes associated with this invocation . 
sets the text that will gets appended to the trace data . 
returns the text that will gets appended to the trace data . 
sets the text that will gets prepended to the trace data . 
returns the text that will gets prepended to the trace data . 
sets whether to use a dynamic logger or a static logger . 
sets the name of the logger to use . 
returns the qualifier or bean name of the executor to be used when executing the given async method , typically specified in the form of an annotation attribute . 
sets the template used for method entry log messages . 
sets the template used for method exit log messages . 
sets the template used for method exception log messages . 
returns the number of times this interceptor has been invoked . 
Find the bean name for the current invocation . 
Find the bean name for the given invocation . 
creates a new advisor that will expose the given bean name , with no introduction @param beanName bean name to expose 
creates a new advisor that will expose the given bean name , introducing the NamedBean interface to make the bean name accessible without forcing the target object to be aware of this Spring IoC concept . 
returns the AOP Alliance MethodInvocation object associated with the current invocation . 
sets whether to track all invocations that go through this interceptor , or just invocations with trace logging enabled . 
returns a description for the given method invocation . 
returns the filter determining which target classes this introduction should apply to . 
returns the additional interfaces introduced by this Advisor or Advice . 
returns the ClassFilter for this pointcut . 
returns the MethodMatcher for this pointcut . 
gets the Pointcut that drives this advisor . 
returns the proxy that this method invocation was made through . 
creates a clone of this object . 
creates a clone of this object . 
sets the arguments to be used on subsequent invocations in the any advice in this chain . 
adds the specified user attribute with the given value to this invocation . 
returns the value of the specified user attribute . 
removes this object from its target scope , for example from the backing session . 
sets the name of the bean that is to be scoped . 
returns the name of the advice bean that this advisor refers to , if any . 
sets the location for debugging . 
returns location information about the pointcut expression if available . 
returns this pointcut 's expression . 
sets the regular expressions defining methods to match . 
returns the regular expressions for method matching . 
sets the regular expressions defining methods to match for exclusion . 
Returns the regular expressions for exclusion matching . 
Returns the target class for an AOP proxy or the plain class otherwise . 
adds the specified interface to the list of interfaces to introduce . 
returns the String expression for this pointcut . 
sets the method names defining methods to match . 
adds another eligible method name , in addition to those already named . 
returns if the given method name matches the mapped name . 
sets the method names defining methods to match . 
adds another eligible method name , in addition to those already named . 
sets the regular expression defining methods to match . 
sets the regular expressions defining methods to match . 
sets the name of the target bean in the factory . 
returns the name of the target bean in the factory . 
sets the owning BeanFactory . 
returns the owning BeanFactory . 
returns whether the lazy target object of this TargetSource has already been fetched . 
Returns the lazy-initialized target object , creating it on-the-fly if it does n't exist already . 
sets the maximum size of the pool . 
returns the maximum size of the pool . 
creates the pool . 
returns the given object to the pool . 
returns an IntroductionAdvisor that providing a mixin exposing statistics about the pool maintained by this object . 
sets the maximum number of idle objects in the pool . 
returns the maximum number of idle objects in the pool . 
sets the minimum number of idle objects in the pool . 
returns the minimum number of idle objects in the pool . 
sets the maximum waiting time for fetching an object from the pool . 
returns the maximum waiting time for fetching an object from the pool . 
sets the time between eviction runs that check idle objects whether they have been idle for too long or have become invalid . 
returns the time between eviction runs that check idle objects . 
sets the minimum time that an idle object can sit in the pool before it becomes subject to eviction . 
returns the minimum time that an idle object can sit in the pool . 
sets whether the call should bock when the pool is exhausted . 
Creates and holds an ObjectPool instance . 
sets the delay between refresh checks , in milliseconds . 
returns the number of actual refreshes since startup . 
returns an EmptyTargetSource for the given target Class . 
returns an EmptyTargetSource for the given target Class . 
Returns the canonical instance on deserialization in case of no target class , thus protecting the Singleton pattern . 
returns the type of the current target object . 
returns the maximum size of the pool . 
returns the number of active objects in the pool . 
returns the number of idle objects in the pool . 
returns an introduction advisor mixin that allows the AOP proxy to be cast to ThreadLocalInvokerStats . 
returns the number of client invocations . 
returns the number of hits that were satisfied by a thread-bound object . 
returns the number of thread-bound objects created . 
returns a target instance . 
creates an empty pointcut , populating instance variables . 
returns the limit for array and collection auto-growing . 
returns the nested path of the object wrapped by this accessor . 
returns the root object at the top of the path of this accessor . 
returns the class of the root object at the top of the path of this accessor . 
creates a new nested property accessor instance . 
gets the last component of the path . 
creates a new one if not found in the cache . 
returns the bean info for the given class , if supported . 
returns the offending constructor , if known . 
returns the delegate for bean construction purposes , if known . 
returns the name of the attribute . 
returns the value of the attribute . 
adds the given BeanMetadataAttribute to this accessor 's sets of attributes . 
Find a method with the given method name and the given parameter types , declared on the given class or one of its superclasses . 
Find a method with the given method name and the given parameter types , declared on the given class or one of its superclasses . 
returns the limit for array and collection auto-growing . 
returns the bean instance wrapped by this object , if any . 
returns the type of the wrapped JavaBean object . 
sets the class to introspect . 
sets the security context used during the invocation of the wrapped instance methods . 
returns the security context used during the invocation of the wrapped instance methods . 
creates CachedIntrospectionResults for the given bean class . 
returns the associated ConversionService , if any . 
sets whether to extract the old property value when applying a property editor to a new value for a property . 
returns whether to extract the old property value when applying a property editor to a new value for a property . 
returns whether `` auto-growing '' of nested paths has been activated . 
returns whether the given bean class declares or inherits any non-void returning bean property or indexed property setter methods . 
returns whether this represents an actual autowiring value . 
sets the ` autowired ' annotation type , to be used on constructors , fields , setter methods and arbitrary config methods . 
sets the ` autowired ' annotation types , to be used on constructors , fields , setter methods and arbitrary config methods . 
sets the name of a parameter of the annotation that specifies whether it is required . 
sets the ` value ' annotation type , to be used on fields , method parameters and constructor parameters . 
sets the ` required ' annotation type , to be used on bean property setter methods . 
returns the ` required ' annotation type . 
returns the name of the bean requested , if any . 
returns the description of the resource that the bean definition came from , if any . 
adds a related cause to this bean creation exception , not being a direct cause of the failure but having occurred earlier in the creation of the same bean instance . 
returns the related causes , if any . 
returns the description of the resource that the bean definition came from , if any . 
returns the name of the bean requested , if any . 
returns an instance , which may be shared or independent , of the specified bean . 
returns an instance , which may be shared or independent , of the specified bean . 
returns the bean instance that uniquely matches the given object type , if any . 
returns an instance , which may be shared or independent , of the specified bean . 
returns an instance , which may be shared or independent , of the specified bean . 
returns the aliases for the given bean name , if any . 
returns all bean names in the factory , including ancestor factories . 
gets all bean names for the given type , including those defined in ancestor factories . 
gets all bean names for the given type , including those defined in ancestor factories . 
gets all bean names for the given type , including those defined in ancestor factories . 
returns all beans of the given type or subtypes , also picking up beans defined in ancestor bean factories if the current bean factory is a HierarchicalBeanFactory . 
returns all beans of the given type or subtypes , also picking up beans defined in ancestor bean factories if the current bean factory is a HierarchicalBeanFactory . 
returns a single bean of the given type or subtypes , also picking up beans defined in ancestor bean factories if the current bean factory is a HierarchicalBeanFactory . 
returns a single bean of the given type or subtypes , also picking up beans defined in ancestor bean factories if the current bean factory is a HierarchicalBeanFactory . 
returns a single bean of the given type or subtypes , not looking in ancestor factories . 
returns a single bean of the given type or subtypes , not looking in ancestor factories . 
sets the name of the bean in the bean factory that created this bean . 
returns the name of the instance that was of the wrong type . 
returns the expected type for the bean . 
returns the actual type of the instance found . 
returns the description of the resource that the bean definition came from . 
returns the name of the bean requested . 
returns the name of the class we were trying to load . 
sets if a singleton should be created , or a new object on each request otherwise . 
returns the BeanFactory that this bean runs in . 
returns an array of interfaces that a singleton object exposed by this FactoryBean is supposed to implement , for use with an ` early singleton proxy ' that will be exposed in case of a circular reference . 
returns the name of the parent definition of this bean definition , if any . 
sets the name of the parent definition of this bean definition , if any . 
returns the current bean class name of this bean definition . 
returns the factory bean name , if any . 
returns a factory method , if any . 
returns whether this bean should be lazily initialized , i.e. not eagerly instantiated on startup . 
sets whether this bean should be lazily initialized . 
returns the bean names that this bean depends on . 
sets the names of the beans that this bean depends on being initialized . 
returns whether this bean is a candidate for getting autowired into some other bean . 
sets whether this bean is a candidate for getting autowired into some other bean . 
returns whether this bean is a primary autowire candidate . 
sets whether this bean is a primary autowire candidate . 
returns the constructor argument values for this bean . 
returns the property values to be applied to a new instance of the bean . 
returns whether this a <b> Singleton </b> , with a single , shared instance returned on all calls . 
returns whether this a <b> Prototype </b> , with an independent instance returned for each call . 
returns whether this bean is `` abstract '' , that is , not meant to be instantiated . 
returns a human-readable description of this bean definition . 
returns the wrapped BeanDefinition . 
returns the primary name of the bean , as specified for the bean definition . 
returns the alias names for the bean , as specified directly for the bean definition . 
returns a friendly , short description for the bean , stating name and aliases . 
sets the parent of this bean factory . 
sets the class loader to use for loading bean classes . 
returns this factory 's class loader for loading bean classes . 
returns the temporary ClassLoader to use for type matching purposes , if any . 
returns the resolution strategy for expressions in bean definition values . 
returns the associated ConversionService , if any . 
adds a PropertyEditorRegistrar to be applied to all bean creation processes . 
sets a custom type converter that this BeanFactory should use for converting bean property values , constructor argument values , etc. . 
adds a String resolver for embedded values such as annotation attributes . 
adds a new BeanPostProcessor that will gets applied to beans created by this factory . 
returns the current number of registered BeanPostProcessors , if any . 
returns the names of all currently registered scopes . 
returns the Scope implementation for the given scope name , if any . 
returns a merged BeanDefinition for the given bean name , merging a child bean definition with its parent if necessary . 
returns the names of all beans which depend on the specified bean , if any . 
returns the names of all beans that the specified bean depends on , if any . 
returns a unified view over all bean names managed by this factory . 
returns whether this factory 's bean definitions are frozen , i.e. are not supposed to be modified or post-processed any further . 
adds an argument value for the given index in the constructor argument list . 
adds an argument value for the given index in the constructor argument list . 
adds an argument value for the given index in the constructor argument list . 
gets argument value for the given index in the constructor argument list . 
gets argument value for the given index in the constructor argument list . 
returns the map of indexed argument values . 
adds a generic argument value to be matched by type . 
adds a generic argument value to be matched by type . 
returns the list of generic argument values . 
returns the number of argument values held in this instance , counting both indexed and generic argument values . 
returns if this holder does not contain any argument values , neither indexed ones nor generic ones . 
sets the value for the constructor argument . 
returns the value for the constructor argument . 
sets the type of the constructor argument . 
returns the type of the constructor argument . 
sets the name of the constructor argument . 
returns the name of the constructor argument . 
sets the converted value of the constructor argument , after processed type conversion . 
returns the converted value of the constructor argument , after processed type conversion . 
creates a copy of this ValueHolder : that is , an independent ValueHolder instance with the same contents . 
adds the given scope to this configurer 's map of scopes . 
returns whether this dependency is required . 
returns whether this dependency is ` eager ' in the sense of eagerly resolving potential target beans for type matching . 
returns whether a fallback match is allowed . 
returns a variant of this descriptor that is intended for a fallback match . 
sets the name of the logger to use . 
sets the target class on which the field is defined . 
returns the target class on which the field is defined . 
sets the target object on which the field is defined . 
returns the target object on which the field is defined . 
sets the name of the field to be retrieved . 
returns the name of the field to be retrieved . 
sets a fully qualified static field name to retrieve , e.g. `` example.MyExampleClass.MY _ EXAMPLE_FIELD '' . 
sets the source List , typically populated via XML `` list '' elements . 
sets the class to use for the target List . 
sets the source Map , typically populated via XML `` map '' elements . 
sets the class to use for the target Map . 
Returns the same value each time if the singleton property is sets to `` true '' , otherwise returns the value returned from invoking the specified method on the fly . 
sets the name of the target bean . 
sets the prefix that a placeholder string starts with . 
sets the suffix that a placeholder string ends with . 
sets whether to ignore unresolvable placeholders . 
sets the path in the system preferences tree to use for resolving placeholders . 
sets the path in the system preferences tree to use for resolving placeholders . 
sets whether a shared ` singleton ' Properties instance should be created , or rather a new Properties instance on each request . 
sets the separator to expect between bean name and property path . 
sets whether to ignore invalid keys . 
sets the system property mode by the name of the corresponding constant , e.g. `` SYSTEM_PROPERTIES_MODE_OVERRIDE '' . 
sets how to check system properties : as fallback , as override , or never . 
sets whether to search for a matching system environment variable if no matching system property has been found . 
sets the order value of this object for sorting purposes . 
sets the name of the target bean . 
returns whether this is an explicit reference to a bean in the parent factory . 
returns the <em> conversation ID </em> for the current underlying scope , if any . 
sets the exception class that the service locator should throw if service lookup failed . 
creates a service locator exception for the given cause . 
sets the source sets , typically populated via XML `` sets '' elements . 
sets the class to use for the target sets . 
returns the names of singleton beans registered in this registry .  
returns the number of singleton beans registered in this registry .  
sets the String value . 
returns the String value . 
sets the type to convert to . 
returns the type to convert to . 
returns the type to convert to . 
returns whether this typed String value carries a target type . 
sets the type name as actually specified for this particular value , if any . 
returns the type name as actually specified for this particular value , if any . 
returns whether this value has been marked as dynamic . 
sets if a singleton should be created , or a new object on each request otherwise . 
returns a flattened version of the given map , recursively following any nested Map or Collection values . 
sets if a singleton should be created , or a new object on each request otherwise . 
returns whether the local bean factory contains a bean of the given name , ignoring beans defined in ancestor contexts . 
returns the wrapped MethodParameter , if any . 
returns the wrapped Field , if any . 
returns the type declared by the underlying field or method/constructor parameter , indicating the injection type . 
Returns the wrapped member , containing the injection point . 
returns the wrapped annotated element . 
returns the number of beans defined in the factory . 
returns the names of all beans defined in this factory . 
returns the name of this bean in a Spring bean factory , if known . 
returns the name of the missing bean , if it was a lookup <em> by name </em> that failed . 
returns the required type of the missing bean , if it was a lookup <em> by type </em> that failed . 
returns the number of beans found when only one matching bean was expected . 
returns the number of beans found when only one matching bean was expected . 
returns the names of all beans found when only one matching bean was expected . 
Returns an empty array . 
Returns an empty array . 
Returns an empty array . 
returns the canonical name of the bean . 
returns the alias registered for the bean . 
returns a friendly description of the described component . 
adds the given component as nested element of this composite component . 
returns the nested components that this composite component holds . 
returns the location of the imported resource . 
gets the resource with which this location is associated . 
gets the message detailing the problem . 
gets the location within a bean configuration source that triggered the error . 
gets the description of the bean configuration source that triggered the error , as contained within this Problem 's Location object . 
returns the desired service type . 
sets the instantiation strategy to use for creating bean instances . 
returns the instantiation strategy to use for creating bean instances . 
returns the ParameterNameDiscoverer to use for resolving method parameter names if needed . 
sets whether to allow circular references between beans - and automatically try to resolve them . 
creates a new instance for the specified bean , using an appropriate instantiation strategy : factory method , constructor autowiring , or simple instantiation . 
returns an array of non-simple bean properties that are unsatisfied . 
returns whether this definition specifies a bean class . 
returns the class of the wrapped bean , if already resolved . 
sets the name of the target scope for the bean . 
returns the name of the target scope for the bean . 
returns whether this a <b> Singleton </b> , with a single shared instance returned from all calls . 
returns whether this a <b> Prototype </b> , with an independent instance returned for each call . 
sets if this bean is `` abstract '' , i.e. not meant to be instantiated itself but rather just serving as parent for concrete child bean definitions . 
returns whether this bean is `` abstract '' , i.e. not meant to be instantiated itself but rather just serving as parent for concrete child bean definitions . 
sets whether this bean should be lazily initialized . 
returns whether this bean should be lazily initialized , i.e. not eagerly instantiated on startup . 
sets the autowire mode . 
returns the autowire mode as specified in the bean definition . 
sets the dependency check code . 
returns the dependency check code . 
sets the names of the beans that this bean depends on being initialized . 
returns the bean names that this bean depends on . 
sets whether this bean is a candidate for getting autowired into some other bean . 
returns whether this bean is a candidate for getting autowired into some other bean . 
sets whether this bean is a primary autowire candidate . 
returns whether this bean is a primary autowire candidate . 
returns whether this bean has the specified qualifier . 
returns the qualifier mapped to the provided type name . 
returns all registered qualifiers . 
returns whether to allow access to non-public constructors and methods . 
returns whether to resolve constructors in lenient mode or in strict mode . 
returns if there are constructor argument values defined for this bean . 
returns information about methods to be overridden by the IoC container . 
sets the name of the initializer method . 
returns the name of the initializer method . 
sets the name of the destroy method . 
returns the name of the destroy method . 
returns whether this bean definition is ` synthetic ' , that is , not defined by the application itself . 
sets a human-readable description of this bean definition . 
returns the resource that this bean definition came from . 
sets the ResourceLoader to use for resource locations . 
sets the ClassLoader to use for bean classes . 
sets the Environment to use when reading bean definitions . 
returns an instance , which may be shared or independent , of the specified bean . 
returns an instance , which may be shared or independent , of the specified bean . 
returns the sets of PropertyEditorRegistrars . 
returns the map of custom editors , with Classes as keys and PropertyEditor classes as values . 
returns the custom TypeConverter to use , if any . 
returns the list of BeanPostProcessors that will gets applied to beans created with this factory . 
returns whether this factory holds a InstantiationAwareBeanPostProcessor that will gets applied to singleton beans on shutdown . 
returns whether this factory holds a DestructionAwareBeanPostProcessor that will gets applied to singleton beans on shutdown . 
sets the security context provider for this bean factory . 
returns a ` merged ' BeanDefinition for the given bean name , merging a child bean definition with its parent if necessary . 
returns the bean name , stripping out the factory dereference prefix if necessary , and resolving aliases to canonical names . 
returns a merged RootBeanDefinition , traversing the parent bean definition if the specified bean corresponds to a child bean definition . 
returns a RootBeanDefinition for the given top-level bean , by merging with the parent if the given bean 's definition is a child bean definition . 
returns a RootBeanDefinition for the given bean , by merging with the parent if the given bean 's definition is a child bean definition . 
removes the merged bean definition for the specified bean , recreating it on next access . 
gets the object for the given bean instance , either the bean instance itself or its created object in case of a FactoryBean . 
returns the bean definition for the given bean name . 
returns whether the setter method of the given bean property is defined in any of the given interfaces . 
sets the name of the parent definition of this bean definition . 
sets the name of the factory method to use for this definition . 
adds an indexed constructor arg value . 
adds a reference to a named bean as a constructor arg . 
adds the supplied property value under the given name . 
adds a reference to the specified bean name under the property specified . 
sets the init method for this definition . 
sets the destroy method for this definition . 
sets the scope of this definition . 
sets whether or not this definition is abstract . 
sets whether beans for this definition should be lazily initialized or not . 
sets the autowire mode for this definition . 
sets the depency check mode for this definition . 
sets the role of this definition . 
returns the bean factory to register the bean definitions with . 
returns the resource loader to use for resource locations . 
returns the class loader to use for bean classes . 
creates a new GenericBeanDefinition for the given parent name and class name , eagerly loading the bean class if a ClassLoader has been specified . 
removes the BeanDefinition for the given name . 
returns the BeanDefinition for the given bean name . 
returns the names of all beans defined in this registry . 
returns the number of beans defined in the registry . 
returns the wrapped BeanDefinition object . 
creates a new instance of a dynamically generated subclass implementing the required lookups . 
creates an enhanced subclass of the bean class for the provided bean definition , using CGLIB . 
creates an array of arguments to invoke a constructor or factory method , given the resolved constructor argument values . 
returns an id for serialization purposes , if specified , allowing this BeanFactory to be deserialized from this id back into the BeanFactory object , if needed . 
sets whether it should be allowed to override bean definitions by registering a different definition with the same name , automatically replacing the former . 
returns whether it should be allowed to override bean definitions by registering a different definition with the same name , automatically replacing the former . 
sets whether the factory is allowed to eagerly load bean classes even for bean definitions that are marked as `` lazy-init '' . 
returns whether the factory is allowed to eagerly load bean classes even for bean definitions that are marked as `` lazy-init '' . 
sets a custom autowire candidate resolver for this BeanFactory to use when deciding whether a bean definition should be considered as a candidate for autowiring . 
removes any assumptions about by-type mappings . 
Find bean instances that match the required type . 
adds an entry to the candidate map : a bean instance if available or just the resolved type , preventing early bean initialization ahead of primary candidate selection . 
returns whether the bean definition for the given bean name has been marked as a primary bean . 
adds the given singleton object to the singleton cache of this factory . 
adds the given singleton factory for building the specified singleton if necessary . 
removes the bean with the given name from the singleton cache of this factory , to be able to clean up eager registration of a singleton if creation failed . 
adds the given bean to the list of disposable beans in this registry . 
returns the names of all beans which depend on the specified bean , if any . 
returns the names of all beans that the specified bean depends on , if any . 
gets a FactoryBean for the given bean if possible . 
Returns the security context for this bean factory . 
returns an instance of the bean with the given name in this factory . 
returns an instance of the bean with the given name in this factory , creating it via the given constructor . 
returns an instance of the bean with the given name in this factory , creating it via the given factory method . 
returns the name of the bean that should be returned by this method . 
sets whether merging should be enabled for this collection , in case of a ` parent ' collection value being present . 
returns the name of the method to be overridden . 
adds the given method override . 
returns all method overrides contained by this object . 
returns whether the sets of method overrides is empty . 
returns the override for the given method , if any . 
sets the default parent bean for this bean factory . 
returns the default parent bean for this bean factory . 
sets the PropertiesPersister to use for parsing properties files . 
returns the PropertiesPersister to use for parsing properties files . 
returns the name of the bean implementing MethodReplacer . 
adds a fragment of a class string , like `` Exception '' or `` java.lang.Exc '' , to identify a parameter type . 
returns the target definition that is being decorated by this bean definition , if any . 
returns the resolved factory method as a Java Method object , if available . 
adds a new singleton bean . 
creates the default BeanWiringInfoResolver to be used if none was specified explicitly . 
returns whether this BeanWiringInfo indicates autowiring . 
returns the specific bean name that this BeanWiringInfo points to , if any . 
returns whether the specific bean name is a suggested default bean name , not necessarily matching an actual bean definition in the factory . 
creates a bean definition for the given class name and parent name . 
gets the value of a property element . 
returns a typed String value Object for the given ` idref ' element . 
returns a typed String value Object for the given value element . 
gets the namespace URI for the supplied node . 
returns the descriptor for the XML resource that this parser works on . 
creates a JAXP DocumentBuilder that this bean definition reader will use for parsing XML documents . 
sets the default lazy-init flag for the document that 's currently parsed . 
returns the default lazy-init flag for the document that 's currently parsed . 
sets the default merge setting for the document that 's currently parsed . 
returns the default merge setting for the document that 's currently parsed . 
sets the default autowire setting for the document that 's currently parsed . 
returns the default autowire setting for the document that 's currently parsed . 
sets the default autowire-candidate pattern for the document that 's currently parsed . 
returns the default autowire-candidate pattern for the document that 's currently parsed . 
sets the default init-method setting for the document that 's currently parsed . 
returns the default init-method setting for the document that 's currently parsed . 
sets the default destroy-method setting for the document that 's currently parsed . 
returns the default destroy-method setting for the document that 's currently parsed . 
sets whether to use XML validation . 
sets the validation mode to use by name . 
sets the validation mode to use .  
returns the validation mode to use . 
sets whether or not the XML parser should be XML namespace aware . 
returns whether or not the XML parser should be XML namespace aware . 
sets a SAX entity resolver to be used for parsing . 
returns the EntityResolver to use , building a default resolver if none specified . 
returns the line number in the XML resource that failed . 
returns the offending bean class . 
returns the name of the offending property . 
returns the underlying List of PropertyValue objects in its raw form . 
returns the number of PropertyValue entries in the list . 
adds all property values from the given Map . 
removes the given PropertyValue , if contained . 
gets the raw property value , if any . 
returns suggestions for actual bean property names that closely match the invalid property name , if any . 
returns the PropertyChangeEvent that resulted in the problem . 
returns the name of the affected property , if available . 
returns the affected value that was about to be sets , if any . 
returns a type descriptor for the specified property : preferably from the read method , falling back to the write method . 
gets the current value of the specified property . 
sets the specified value as current property value . 
sets the specified value as current property value . 
returns the actual property name for the given property path . 
returns an array of the propertyAccessExceptions stored in this object . 
Find a custom property editor for the given type and property . 
returns the associated ConversionService , if any . 
gets custom editor that has been registered for the given property . 
gets custom editor for the given type . 
adds property paths with all variations of stripped keys and/or indexes . 
returns whether to always creates a new Collection , even if the type of the passed-in Collection already matches . 
returns whether to always creates a new Map , even if the type of the passed-in Map already matches . 
creates PropertyMatches for the given bean property . 
creates PropertyMatches for the given bean property . 
creates PropertyMatches for the given field property . 
creates PropertyMatches for the given field property . 
returns the name of the requested property . 
returns the calculated possible matches . 
returns the name of the property . 
returns the value of the property . 
returns the original PropertyValue instance for this value holder . 
sets whether this is an optional value , that is , to be ignored when no corresponding property exists on the target class . 
returns whether this is an optional value , that is , to be ignored when no corresponding property exists on the target class . 
sets the converted value of the constructor argument , after processed type conversion . 
returns the converted value of the constructor argument , after processed type conversion . 
returns an array of the PropertyValue objects held in this object . 
returns the property value with the given name , if any . 
returns the changes since the previous PropertyValues . returns empty PropertyValues if there are no changes . 
sets a TypeConverter to use for argument type conversion . 
returns the TypeConverter used for argument type conversion . 
sets the property to compare . 
sets whether upper and lower case in String values should be ignored . 
sets the source list for this holder . 
returns the source list for this holder . 
returns the last time the list has been fetched from the source provider . 
sets the sort definition for this holder . 
returns the sort definition for this holder . 
sets the current page size . 
returns the current page size . 
sets the current page number . 
returns the current page number . 
sets the maximum number of page links to a few pages around the current one . 
returns the maximum number of page links to a few pages around the current one . 
returns the number of pages for the current source list . 
returns if the current page is the first one . 
returns if the current page is the last one . 
returns the total number of elements in the source list . 
returns the element index of the first element on the current page . 
returns the element index of the last element on the current page . 
returns a sub-list representing the current page . 
returns the first page to which creates a link around the current page . 
returns the last page to which creates a link around the current page . 
creates a deep copy of the given sort definition , for use as state holder to compare a modified sort definition against . 
returns the SortDefinition that this comparator uses . 
gets the SortDefinition 's property value for the given object . 
returns the name of the bean property to compare . 
returns whether upper and lower case in String values should be ignored . 
Find a default editor for the given type . 
returns the required target type , if any . 
Creates a scenario in which two PPCs are configured , each with different settings regarding resolving properties from the environment . 
sets via Setter Injection once instance is created . 
returns if the bean managed by this factory is a singleton . 
sets if the bean managed by this factory is a singleton . 
returns the managed object , supporting both singleton and prototype mode . 
returns if the bean managed by this factory is a singleton . 
sets if the bean managed by this factory is a singleton . 
returns the managed object , supporting both singleton and prototype mode . 
returns a specified binding for Groovy variables , if any . 
returns the cache manager bean to use for annotation-driven cache management .  
returns the key generator bean to use for annotation-driven cache management .  
returns the cache name . 
returns the underlying native cache provider . 
returns the value to which this cache maps the specified key . 
returns the value to which this cache maps the specified key , generically specifying a type that returns value will be cast to . 
removes all mappings from the cache . 
returns the actual value in the cache . 
returns the cache associated with the given name . 
returns a collection of the cache names known by this manager . 
returns whether this cache manager stores a copy of each entry or a reference for all its caches . 
creates a new ConcurrentMapCache instance for the specified cache name . 
sets the cache operation attribute source which is used to find cache attributes . 
sets one or more cache operation sources which are used to find the cache attributes . 
returns the CacheOperationSource for this cache aspect . 
returns a bean with the specified name and type . 
adds the specified variable name as unavailable for that context . 
returns an identifying description for this cache operation . 
returns an identifying description for this caching operation . 
returns the cache operation . 
returns the target instance on which the method was invoked . 
returns the method which was invoked . 
returns the argument list used to invoke the method . 
sets a pointcut , i.e a bean that can cause conditional invocation of the CacheInterceptor depending on method and attributes passed . 
sets the sources used to find cache operations . 
adds an attribute for a cacheable method . 
returns if the given method name matches the mapped name . 
creates the BeanFactory instance , given an array of class path resource Strings which should be combined . 
creates the ApplicationContext instance , given an array of class path resource Strings which should be combined @param resources an array of Strings representing classpath resource names @return the created ApplicationContext @throws BeansException if context creation failed 
returns an instance object implementing BeanFactoryLocator . 
returns an instance object implementing BeanFactoryLocator . 
returns the BeanDefinitionRegistry that this scanner operates on . 
sets the BeanNameGenerator to use for detected bean classes . 
sets the ScopeMetadataResolver to use for detected bean classes . 
gets the Environment from the given registry if possible , otherwise returns a new StandardEnvironment . 
returns the BeanDefinitionRegistry that this scanner operates on . 
sets the defaults to use for detected beans . 
sets the name-matching patterns for determining autowire candidates . 
sets the BeanNameGenerator to use for detected bean classes . 
sets the ScopeMetadataResolver to use for detected bean classes . 
gets the Environment from the given registry if possible , otherwise returns a new StandardEnvironment . 
sets the ResourceLoader to use for resource locations . 
returns the ResourceLoader that this component provider uses . 
returns the MetadataReaderFactory used by this component provider . 
sets the resource pattern to use when scanning the classpath . 
adds an include type filter to the <i> end </i> of the inclusion list . 
adds an exclude type filter to the <i> front </i> of the exclusion list . 
sets whether to allow a fallback to a type match if no explicit name has been specified . 
returns the resource name for the lookup . 
returns the desired type for the lookup . 
returns the configuration classes that imported this class , or an empty sets if this configuration was not imported . 
sets the name of the scope . 
gets the name of the scope . 
sets the proxy-mode to be applied to the scoped instance . 
gets the proxy-mode to be applied to the scoped instance . 
returns the unique id of this application context . 
returns a name for the deployed application that this context belongs to . 
returns a friendly name for this context . 
returns the timestamp when this context was first loaded . 
sets the ApplicationContext that this object runs in . 
returns the system time in milliseconds when the event happened . 
sets the ApplicationEventPublisher that this object runs in . 
sets the unique id of this application context . 
sets the parent of this application context . 
returns the Environment for this application context in configurable form . 
adds a new BeanFactoryPostProcessor that will gets applied to the internal bean factory of this application context on refresh , before any of the bean definitions gets evaluated . 
adds a new ApplicationListener that will be notified on context events such as context refresh and context shutdown . 
returns the internal bean factory of this application context . 
sets the StringValueResolver to use for resolving embedded definition values . 
returns a Collection containing all ApplicationListeners . 
returns a Collection of ApplicationListeners matching the given event type . 
adds a listener to be notified of all events . 
adds a listener bean to be notified of all events . 
removes a listener from the notification list . 
removes a listener bean from the notification list . 
removes all listeners registered with this multicaster . 
returns the target bean instance to use . 
returns the condition to use . 
adds additional details such as the bean type and method signature to the given error message . 
sets the application event class to publish . 
returns the current task executor for this multicaster . 
returns the current error handler for this multicaster . 
returns a shared parameter name discoverer which caches data internally . 
sets the prefix that an expression string starts with . 
sets the suffix that an expression string ends with . 
sets the parent that will be used to try to resolve messages that this object ca n't resolve . 
returns the current Locale , which can be fixed or determined dynamically , depending on the implementation strategy . 
returns the LocaleContext associated with the current thread , if any . 
returns the Locale associated with the current thread , if any , or the system default Locale else . 
returns the TimeZone associated with the current thread , if any , or the system default TimeZone else . 
returns the current TimeZone , which can be fixed or determined dynamically , depending on the implementation strategy . 
returns the candidate types that are associated with the specified stereotype . 
returns default message if no message was found . 
sets the MessageSource that this object runs in . 
returns the codes to be used to resolve this message , in the order that they should gets tried . 
returns the array of arguments to be used to resolve this message . 
returns the default message to be used to resolve this message . 
returns the payload of the event . 
returns the phase value of this object . 
sets the ResourceLoader that this object runs in .  
sets the unique id of this application context . 
sets a friendly name for this context . 
returns a friendly name for this context . 
returns this context 's internal bean factory as AutowireCapableBeanFactory , if already available . 
returns the internal ApplicationEventMulticaster used by the context . 
returns the internal LifecycleProcessor used by the context . 
returns the ResourcePatternResolver to use for resolving location patterns into Resource instances . 
returns the list of BeanFactoryPostProcessors that will gets applied to the internal BeanFactory . 
returns the list of statically specified ApplicationListeners . 
adds beans that implement ApplicationListener as listeners . 
returns the internal bean factory of the parent context if it implements ConfigurableApplicationContext ; else , returns the parent context itself . 
returns the internal MessageSource used by the context . 
returns the internal message source of the parent context if it is an AbstractApplicationContext too ; else , returns the parent context itself . 
returns information about this context . 
returns a Properties object defining locale-independent common messages , if any . 
sets whether to use the message code as default message instead of throwing a NoSuchMessageException . 
returns whether to use the message code as default message instead of throwing a NoSuchMessageException . 
returns a fallback default message for the given code , if any . 
Returns a MessageFormat instance rather than a message String , to allow for appropriate caching of MessageFormats in subclasses .  
sets whether it should be allowed to override bean definitions by registering a different definition with the same name , automatically replacing the former . 
sets whether to allow circular references between beans - and automatically try to resolve them . 
creates an internal bean factory for this context . 
sets the config locations for this application context in init-param style , i.e. with distinct locations separated by commas , semicolons or whitespace . 
sets the config locations for this application context . 
returns an array of resource locations , referring to the XML bean definition files that this context should be built with . 
returns the default config locations to use , for the case where no explicit config locations have been specified . 
Sets the id of this context to the bean name by default , for cases where the context instance is itself defined as a bean . 
sets a single basename , following the basic ResourceBundle convention of not specifying file extension or language codes . 
sets an array of basenames , each following the basic ResourceBundle convention of not specifying file extension or language codes . 
adds the specified basenames to the existing basename configuration . 
sets the default charset to use for parsing properties files . 
returns the default charset to use for parsing properties files , if any . 
sets whether to fall back to the system Locale if no files for a specific Locale have been found . 
returns whether to fall back to the system Locale if no files for a specific Locale have been found . 
sets the number of seconds to cache loaded properties files . 
sets the number of milliseconds to cache loaded properties files . 
returns the number of milliseconds to cache loaded properties files . 
sets whether to use XML validation . 
returns an array of Resource objects , referring to the XML bean definition files that this context should be built with . 
returns the ApplicationContext that this object is associated with . 
returns a MessageSourceAccessor for the application context used by this object , for easy message access . 
creates the ConversionService instance returned by this factory bean . 
returns the default code of this resolvable , that is , the last one in the codes array . 
sets the parent of this application context , also setting the parent of the internal BeanFactory accordingly . 
sets whether it should be allowed to override bean definitions by registering a different definition with the same name , automatically replacing the former . 
sets whether to allow circular references between beans - and automatically try to resolve them . 
sets a ResourceLoader to use for this context . 
returns the underlying bean factory of this context , available for registering bean definitions . 
sets whether to use XML validation . 
Find all applicable ApplicationContexts for the current application . 
returns the default locale to use if no explicit locale has been given . 
sets whether to always apply the MessageFormat rules , parsing even messages without arguments . sets this to `` true '' to enforce MessageFormat for all messages , expecting all message texts to be written with MessageFormat escaping . 
returns whether to always apply the MessageFormat rules , parsing even messages without arguments . 
creates a MessageFormat for the given message and Locale . 
sets per-file charsets to use for parsing properties files . 
sets the PropertiesPersister to use for parsing properties files . 
sets the ResourceLoader to use for loading bundle properties files . 
gets a PropertiesHolder that contains the actually visible properties for a Locale , after merging all specified resource bundles . 
gets a PropertiesHolder for the given filename , either from the cache or freshly loaded . 
sets the ClassLoader to load resource bundles with . 
returns the ClassLoader to load resource bundles with . 
returns a ResourceBundle for the given basename and code , fetching already generated MessageFormats from the cache . 
returns a MessageFormat for the given bundle and code , fetching already generated MessageFormats from the cache . 
returns the internal StaticMessageSource used by this context . 
sets whether to refresh the EJB home on connect failure . 
returns a new instance of the stateless session bean . 
removes the given EJB instance . 
sets whether to look up the EJB home object on startup . 
sets whether to cache the EJB home object once it has been located . 
sets whether to expose the JNDI environment context for all access to the target EJB , i.e. for all method invocations on the exposed object reference . 
returns the EJB home object to use . 
returns whether the cached EJB home object is potentially subject to on-demand refreshing . 
returns an EJB instance to delegate the call to . 
returns a new instance of the stateless session bean . 
removes the given EJB instance . 
sets the business interface of the EJB we 're proxying . 
returns the business interface of the EJB we 're proxying . 
sets whether to cache the actual session bean object . 
returns an EJB component instance to delegate the call to . 
removes the cached session bean instance , if necessary . 
sets the business interface of the EJB we 're proxying . 
returns the business interface of the EJB we 're proxying . 
sets the pattern to use to format date values . 
sets the ISO format used for this date . 
sets the style to use to format date values . 
sets the two character to use to format date values . 
sets the TimeZone to normalize the date values into , if any . 
sets the date formatter to register . 
adds date converters to the specified registry . 
sets the pattern to use to format date values . 
sets the ISO format used to format date values . 
sets the two characters to use to format date values , in Joda-Time style . 
sets the user 's time zone . 
returns the user 's time zone , if any . 
returns the JodaTimeContext associated with the current thread , if any . 
sets whether standard ISO formatting should be applied to all date/time types . 
sets the formatter that will be used for objects representing date values . 
sets the formatter that will be used for objects representing time values . 
sets the formatter that will be used for objects representing date and time values . 
sets the user 's time zone . 
returns the user 's time zone , if any . 
returns the DateTimeContext associated with the current thread , if any . 
sets the pattern to use to format date values . 
sets the ISO format used to format date values . 
sets the style to use for date types . 
sets the style to use for time types . 
sets the style to use for date and time types . 
sets the two characters to use to format date values , in Joda-Time style . 
sets whether standard ISO formatting should be applied to all date/time types . 
sets the formatter that will be used for objects representing date values . 
sets the formatter that will be used for objects representing time values . 
sets the formatter that will be used for objects representing date and time values . 
Adds a Formatter to format fields of a specific type . 
Adds a Formatter to format fields of the given type . 
Adds a Printer/Parser pair to format fields of a specific type . 
Adds a Formatter to format fields annotated with a specific format annotation . 
Sets the pattern to use to format number values . 
adds formatters appropriate for most environments : including number formatters , JSR-354 Money & Currency formatters , JSR-310 Date-Time and/or Joda-Time formatters , depending on the presence of the corresponding API on the classpath . 
removes all registered transformers , in inverse order of registration . 
adds the given ClassFileTransformer to the list of transformers that this ClassLoader will apply . 
adds a class file transformer to be applied by this weaver . 
sets whether to refresh the MBeanServer connection on connect failure . 
sets whether to use strict casing for attributes . 
sets the management interface of the target MBean , exposing bean property setters and getters for MBean attributes and conventional Java methods for MBean operations . 
returns whether this client interceptor has already been prepared , i.e. has already looked up the server and cached all metadata . 
sets the interface that the generated proxy will implement . 
returns the actual bean class of the given bean instance . 
returns the class or interface to expose for the given bean . 
returns the class or interface to expose for the given bean class . 
gets the class name of the MBean resource . 
gets the description of the MBean resource . 
gets the constructor metadata for the MBean resource . 
gets the notification metadata for the MBean resource . 
gets the attribute metadata for the MBean resource . 
gets the operation metadata for the MBean resource . 
sets the default for the JMX field `` currencyTimeLimit '' . 
returns default value for the JMX field `` currencyTimeLimit '' , if any . 
sets whether to use strict casing for attributes . 
returns whether strict casing for attributes is enabled . 
sets whether to expose the JMX descriptor field `` class '' for managed operations . 
returns whether to expose the JMX descriptor field `` class '' for managed operations . 
returns the class to be used for the JMX descriptor field `` class '' . 
gets the description for a particular attribute . 
gets the description for a particular operation . 
creates parameter info for the given method . 
sets the array of interfaces to use for creating the management info . 
sets the mappings of bean keys to a comma-separated list of interface names . 
creates the ModelMBeanInfo for the given managed resource . 
Creates a description for the attribute corresponding to this property descriptor . 
sets the array of method names to be <b> ignored </b> when creating the management info . 
sets the mappings of bean keys to a comma-separated list of method names . 
sets the array of method names to use for creating the management info . 
sets the mappings of bean keys to a comma-separated list of method names . 
sets whether to autodetect MBeans in the bean factory that this exporter runs in . 
sets the autodetection mode to use . 
sets the autodetection mode to use by name . 
sets the list of names for beans that should be excluded from autodetection . 
adds the name of bean that should be excluded from autodetection . 
returns whether the specified bean definition should be considered as lazy-init . 
Creates an MBean that is configured with the appropriate management interface for the supplied managed resource . 
returns whether the specified bean definition should be considered as abstract . 
removes the specified MBean from the underlying MBeanServer registry . 
sets a description for this attribute . 
returns a description for this attribute . 
sets a currency time limit for this attribute . 
returns a currency time limit for this attribute . 
sets the default value of this attribute . 
returns the default value of this attribute . 
sets a single notification type , or a list of notification types as comma-delimited String . 
sets a list of notification types . 
returns the list of notification types . 
sets the name of this notification . 
returns the name of this notification . 
sets a description for this notification . 
returns a description for this notification . 
sets the index of this parameter in the operation signature . 
returns the index of this parameter in the operation signature . 
sets the name of this parameter in the operation signature . 
returns the name of this parameter in the operation signature . 
sets a description for this parameter . 
returns a description for this parameter . 
sets the JMX ObjectName of this managed resource . 
returns the JMX ObjectName of this managed resource . 
sets local properties , containing object name mappings , e.g. via the `` props '' tag in XML bean definitions . 
sets a location of a properties file to be loaded , containing object name mappings . 
sets location of properties files to be loaded , containing object name mappings . 
returns the JMX attribute name to use for the given JavaBeans property . 
returns the class or interface to expose for the given bean . 
returns the class or interface to expose for the given bean class . 
sets whether to connect to the server on startup . 
sets the JNDI template to use for JNDI lookups . 
returns the JNDI template to use for JNDI lookups . 
sets the JNDI environment to use for JNDI lookups . Creates a JndiTemplate with the given environment settings . 
returns the JNDI environment to use for JNDI lookups . 
sets whether the lookup occurs in a J2EE container , i.e. if the prefix `` java : comp/env / '' needs to be added if the JNDI name does n't already contain it . 
returns whether the lookup occurs in a J2EE container . 
sets whether to look up the JNDI object on startup . 
sets whether to cache the JNDI object once it has been located . 
sets whether to expose the JNDI environment context for all access to the target object , i.e. for all method invocations on the exposed object reference . 
returns the singleton JNDI object . 
creates a composite interface Class for the given interfaces , implementing the given interfaces in one single Class . 
returns the JNDI name to look up . 
returns the type that the located JNDI object is supposed to be assignable to , if any . 
sets whether to look up the JNDI object on startup . 
sets whether to cache the JNDI object once it has been located . 
sets the environment for the JNDI InitialContext . 
returns the environment for the JNDI InitialContext , if any . 
creates a new JNDI initial context . 
removes the binding for the given name from the current JNDI context . 
adds the name of a shareable JNDI resource , which this factory is allowed to cache once obtained . 
sets a list of names of shareable JNDI resources , which this factory is allowed to cache once obtained . 
returns the required type for the lookup , if available . 
returns the actual type that the lookup returned , if available . 
sets the interface of the service to access . 
returns the interface of the service to access . 
sets the RemoteInvocationFactory to use for this accessor . 
returns the RemoteInvocationFactory used by this accessor . 
sets whether to look up the RMI stub on startup . 
sets whether to cache the RMI stub once it has been located . 
sets whether to refresh the RMI stub on connect failure . 
sets whether to expose the JNDI environment context for all access to the target RMI stub , i.e. for all method invocations on the exposed object reference . 
creates the RMI stub , typically by looking it up . 
returns the RMI stub to use . 
creates a new RemoteInvocation object for the given AOP method invocation . 
sets the JNDI template to use for JNDI lookups . 
sets the JNDI environment to use for JNDI lookups . Creates a JndiTemplate with the given environment settings . 
sets the JNDI name of the exported RMI service . 
returns the content type to use for sending remote invocation responses . 
sets whether to accept deserialization of proxy classes . 
returns whether to accept deserialization of proxy classes . 
creates an ObjectInputStream for the given InputStream . 
creates an ObjectOutputStream for the given OutputStream . 
sets whether to look up the RMI stub on startup . 
sets whether to cache the RMI stub once it has been located . 
sets whether to refresh the RMI stub on connect failure . 
sets a custom RMI client socket factory to use for accessing the RMI registry . 
creates the RMI stub , typically by looking it up . 
returns the RMI stub to use . 
returns the name of the target interface that this invoker operates on . 
returns the host of the registry for the exported RMI service . 
returns the port of the registry for the exported RMI service . 
sets a custom RMI client socket factory to use for the RMI registry . 
sets a custom RMI server socket factory to use for the RMI registry . 
sets whether to always creates the registry in-process , not attempting to locate an existing registry at the specified port . 
sets the port that the exported RMI service will use . 
sets a custom RMI client socket factory to use for exporting the service . 
sets a custom RMI server socket factory to use for exporting the service . 
sets a custom RMI client socket factory to use for the RMI registry . 
sets a custom RMI server socket factory to use for the RMI registry . 
sets whether to always creates the registry in-process , not attempting to locate an existing registry at the specified port . 
sets whether to replace an existing binding in the RMI registry , that is , whether to simply override an existing binding with the specified service in case of a naming conflict in the registry . 
Creates an RMI registry on the specified port if none exists . 
returns the SOAP fault code . 
returns the descriptive SOAP fault string . 
returns the actor that caused this fault . 
sets the interface of the service to access . 
returns the interface of the service to access . 
sets the service to export . 
returns the service to export . 
sets the interface of the service to export . 
returns the interface of the service to export . 
sets whether to register a RemoteInvocationTraceInterceptor for exported services . 
gets a proxy for the given service object , implementing the specified service interface . 
returns a short name for this exporter . 
sets the name of the target method . 
returns the name of the target method . 
sets the parameter types of the target method . 
returns the parameter types of the target method . 
sets the arguments for the target method call . 
returns the arguments for the target method call . 
adds an additional invocation attribute . 
sets the attributes Map . 
returns the attributes Map . 
sets the RemoteInvocationFactory to use for this accessor . 
returns the RemoteInvocationFactory used by this accessor . 
creates a new RemoteInvocation object for the given AOP method invocation . 
sets the RemoteInvocationExecutor to use for this exporter . 
returns the RemoteInvocationExecutor used by this exporter . 
creates a serializable RemoteInvocation object from the given AOP MethodInvocation . 
sets the result value returned by a successful invocation of the target method , if any . 
returns the result value returned by a successful invocation of the target method , if any . 
sets the exception thrown by an unsuccessful invocation of the target method , if any . 
returns the exception thrown by an unsuccessful invocation of the target method , if any . 
returns whether this invocation result holds an exception . 
returns whether this invocation result holds an InvocationTargetException , thrown by an invocation of the target method itself . 
returns the ClassLoader that this accessor operates in , to be used for deserializing and for generating proxies . 
sets the JDK concurrent executor to use for dispatching incoming requests . 
sets the URL of this remote accessor 's target service . 
returns the URL of this remote accessor 's target service . 
sets the ` async ' annotation type . 
sets the ` async ' annotation type to be detected at either class or method level . 
sets the JNDI template to use for JNDI lookups . 
sets the JNDI environment to use for JNDI lookups . 
sets whether the lookup occurs in a J2EE container , i.e. if the prefix `` java : comp/env / '' needs to be added if the JNDI name does n't already contain it . 
sets the JNDI template to use for JNDI lookups . 
sets the JNDI environment to use for JNDI lookups . 
sets whether the lookup occurs in a J2EE container , i.e. if the prefix `` java : comp/env / '' needs to be added if the JNDI name does n't already contain it . 
sets the JNDI template to use for JNDI lookups . 
sets the JNDI environment to use for JNDI lookups . 
sets whether the lookup occurs in a J2EE container , i.e. if the prefix `` java : comp/env / '' needs to be added if the JNDI name does n't already contain it . 
sets the ThreadFactory to use for the ExecutorService 's thread pool . 
sets the RejectedExecutionHandler to use for the ExecutorService . 
sets whether to wait for scheduled tasks to complete on shutdown , not interrupting running tasks and executing all tasks in the queue . 
sets the maximum number of seconds that this executor is supposed to block on shutdown in order to wait for remaining tasks to complete their execution before the rest of the container continues to shut down . 
sets up the ExecutorService . 
sets the factory for creating new ForkJoinWorkerThreads . 
sets the handler for internal worker threads that terminate due to unrecoverable errors encountered while executing tasks . 
sets the maximum number of seconds that this ForkJoinPool is supposed to block on shutdown in order to wait for remaining tasks to complete their execution before the rest of the container continues to shut down . 
sets the ScheduledExecutorService 's pool size . 
sets the Runnable to schedule as executor task . 
returns the Runnable to schedule as executor task . 
sets the delay before starting the task for the first time , in milliseconds . 
returns the delay before starting the job for the first time . 
sets the period between repeated task executions , in milliseconds . 
returns the period between repeated task executions . 
returns the time unit for the delay and period values . 
sets whether to schedule as fixed-rate execution , rather than fixed-delay execution .  
returns whether to schedule as fixed-rate execution . 
sets the ThreadPoolExecutor 's core pool size . 
sets the ThreadPoolExecutor 's maximum pool size . 
sets the ThreadPoolExecutor 's keep-alive seconds . 
sets the capacity for the ThreadPoolExecutor 's BlockingQueue . 
creates the BlockingQueue to use for the ThreadPoolExecutor . 
sets the ThreadPoolExecutor 's core pool size . 
returns the ThreadPoolExecutor 's core pool size . 
sets the ThreadPoolExecutor 's maximum pool size . 
returns the ThreadPoolExecutor 's maximum pool size . 
sets the ThreadPoolExecutor 's keep-alive seconds . 
returns the ThreadPoolExecutor 's keep-alive seconds . 
sets the capacity for the ThreadPoolExecutor 's BlockingQueue . 
creates the BlockingQueue to use for the ThreadPoolExecutor . 
returns the underlying ThreadPoolExecutor for native access . 
returns the current pool size . 
returns the number of currently active threads . 
sets the ScheduledExecutorService 's pool size . 
returns the underlying ScheduledExecutorService for native access . 
returns the underlying ScheduledThreadPoolExecutor , if available . 
returns the current pool size . 
returns the current setting for the remove-on-cancel mode . 
returns the number of currently active threads . 
adds a Runnable task to be triggered per the given cron expression 
adds a Runnable task to be triggered with the given fixed delay . 
returns the cron pattern that this sequence generator has been built for . 
returns the cron pattern that this trigger has been built with . 
Returns the time after which a task should run again . 
creates a new BeanShell-scripted object from the given script source . 
creates a new BeanShell-scripted object from the given script source , using the default ClassLoader . 
creates a new BeanShell-scripted object from the given script source . 
sets a custom compiler configuration for this evaluator . 
sets one or more customizers to be applied to this evaluator 's compiler configuration . 
returns the GroovyClassLoader used by this script factory . 
returns the source for the offending script . 
returns a locator that points to the source of the script . 
returns the business interfaces that the script is supposed to implement . 
returns whether the script requires a config interface to be generated for it . 
sets the encoding used for reading the script resource . 
sets the delay between refresh checks , in milliseconds . 
creates a composite interface Class for the given interfaces , implementing the given interfaces in one single Class . 
creates a refreshable proxy for the given AOP TargetSource . 
sets the globally scoped bindings on the underlying script engine manager , shared by all scripts , as an alternative to script argument bindings . 
sets a fresh script String , overriding the previous script . 
sets the parent that will be used to try to resolve theme messages that this object ca n't resolve . 
sets the prefix that gets applied to the ResourceBundle basenames , i.e. the theme names . 
sets the default charset to use for parsing resource bundle files . 
sets whether to fall back to the system Locale if no files for a specific Locale have been found . 
creates a MessageSource for the given basename , to be used as MessageSource for the corresponding theme . 
returns the name of the theme . 
returns the specific MessageSource that resolves messages with respect to this theme . 
returns the Theme instance for the given theme name . 
adds the supplied attribute under the supplied name . 
returns the current sets of model attributes as a Map . 
adds the supplied attribute under the supplied name . 
sets the strategy to use for resolving errors into message codes . 
returns the strategy to use for resolving errors into message codes . 
returns the list of fields that were suppressed during the bind process . 
returns the wrapped target object . 
Returns the underlying PropertyAccessor . 
Returns the canonical property name . 
Creates a new one if none existed before . 
sets the JSR-303 Validator to delegate to for validating beans . 
sets the JSR-303 ValidatorFactory to delegate to for validating beans , using its default Validator . 
sets the ValidatorFactory to obtain the target Validator from . 
sets the ParameterNameDiscoverer to use for resolving method and constructor parameter names if needed for message interpolation . 
sets the ` validated ' annotation type . 
sets the JSR-303 Validator to delegate to for validating methods . 
sets the JSR-303 ValidatorFactory to delegate to for validating methods , using its default Validator . 
creates AOP advice for method validation purposes , to be applied with a pointcut for the specified ` validated ' annotation . 
returns FieldError arguments for a validation error on the given field .  
returns the BindingResult that this BindException wraps . 
Returns diagnostic information about the errors held in this object . 
returns the wrapped target object , which may be a bean , an object with public fields , a Map - depending on the concrete binding strategy . 
Find a custom property editor for the given type and property . 
returns the underlying PropertyEditorRegistry . 
returns the list of fields that were suppressed during the bind process . 
Find the BindingResult for the given name in the given model . 
Find a required BindingResult for the given name in the given model . 
returns the wrapped target object . 
returns the name of the bound object . 
sets whether this binder should attempt to `` auto-grow '' a nested path that contains a null value . 
returns whether `` auto-growing '' of nested paths has been activated . 
returns the current limit for array and collection auto-growing . 
returns the internal BindingResult held by this DataBinder , as an AbstractPropertyBindingResult . 
returns the underlying PropertyAccessor of this binder 's BindingResult . 
returns this binder 's underlying SimpleTypeConverter . 
returns the underlying TypeConverter of this binder 's BindingResult . 
returns the underlying TypeConverter of this binder 's BindingResult . 
returns the BindingResult instance created by this DataBinder . 
sets whether to ignore unknown fields , that is , whether to ignore bind parameters that do not have corresponding fields in the target object . 
returns whether to ignore unknown fields when binding . 
returns whether to ignore invalid fields when binding . 
returns the fields that should be allowed for binding . 
returns the fields that should <i> not </i> be allowed for binding . 
returns the fields that are required for each binding process . 
sets whether to extract the old field value when applying a property editor to a new value for a field . 
sets the strategy to use for resolving errors into message codes . 
returns the strategy for processing binding errors . 
sets the Validator to apply after each binding step . 
adds Validators to apply after each binding step . 
returns the primary Validator to apply after each binding step , if any . 
returns the Validators to apply after data binding . 
returns the associated ConversionService , if any . 
returns if the given field is allowed for binding . 
returns FieldError arguments for a binding error on the given field . 
returns the prefix to be applied to any code built by this resolver . Returns an empty String in case of no prefix . 
Returns the DirectFieldAccessor that this instance uses . Creates a new one if none existed before . 
creates a new DirectFieldAccessor for the underlying target object . 
returns the name of the bound root object . 
Returns a nested path with a dot , i.e. `` address . '' 
returns if there were any errors . 
returns the total number of errors . 
gets all errors , both global and field ones . 
returns the number of global errors . 
gets all global errors . 
gets the <i> first </i> global error , if any . 
returns the number of errors associated with a field . 
gets all errors associated with a field . 
gets the <i> first </i> error associated with a field , if any . 
returns the number of errors associated with the given field . 
gets all errors associated with the given field . 
gets the first error associated with the given field , if any . 
returns the current value of the given field , either the current bean property value or a rejected update from the last binding . 
returns the type of a given field . 
returns the affected field of the object . 
returns the rejected field value . 
returns the name of the affected object . 
Returns the relatively qualified name for <var> fileSuffix </var> . 
sets in CGLIB or JDK mode . 
returns a bean factory with attributes and EnterpriseServices configured . 
sets via Setter Injection once instance is created . 
returns the events that the specified listener has received . 
returns a unique global id used to identify this instance . 
adds the given object to the list of JNDI objects that this template will expose . 
creates a new CaffeineCache instance for the specified cache name . 
creates a native Caffeine Cache instance for the specified cache name . 
creates the known caches again with the current state of this manager . 
sets a CacheManager from which to retrieve a named Cache instance . 
sets a name for which to retrieve or creates a cache instance . 
sets whether to use a blocking cache that lets read attempts block until the requested element is created . 
sets whether this cache should be marked as disabled . 
creates a raw Cache object based on the configuration of this FactoryBean . 
sets the location of the EhCache config file . 
sets whether an existing EhCache CacheManager of the same name will be accepted for this EhCacheManagerFactoryBean setup . 
returns an identifying description for this caching operation . 
sets the cache operation attribute source which is used to find cache attributes . 
returns the specified cache manager to use , if any . 
returns the specified cache resolver to use , if any . 
returns the specified exception cache resolver to use , if any . 
returns the specified key generator to use , if any . 
returns the CacheOperationSource for this cache aspect . 
sets whether this CacheManager should expose transaction-aware Cache objects . sets this to `` true '' to synchronize cache put/evict operations with ongoing Spring-managed transactions , performing the actual cache put/evict operation only in the after-commit phase of a successful transaction . 
returns whether this CacheManager has been configured to be transaction-aware . 
sets the target CacheManager to proxy . 
Creates the final merged mapping sets . 
creates a new JavaMail MimeMessage for the underlying JavaMail Session of this sender . 
creates a new JavaMail MimeMessage for the underlying JavaMail Session of this sender , using the given input stream as the message source . 
sets the mail protocol . 
returns the mail protocol . 
sets the mail server host , typically an SMTP host . 
returns the mail server host . 
sets the mail server port . 
returns the mail server port . 
sets the username for the account at the mail host , if any . 
returns the username for the account at the mail host . 
sets the password for the account at the mail host , if any . 
returns the password for the account at the mail host . 
returns the MimeMessageHelper that this MimeMailMessage is based on . 
returns the JavaMail MimeMessage that this MimeMailMessage is based on . 
returns the underlying MimeMessage object . 
sets the given MimeMultipart objects for use by this MimeMessageHelper . 
returns whether this helper is in multipart mode , i.e. whether it holds a multipart message . 
returns the root MIME `` multipart/mixed '' object , if any . 
returns the underlying MIME `` multipart/related '' object , if any . 
returns the specific character encoding used for this message , if any . 
sets whether to validate all addresses which gets passed to this helper . 
returns whether this helper will validate all addresses passed to it . 
sets the sent-date of the message . 
sets the subject of the message , using the correct encoding . 
sets the given text directly as content in non-multipart mode or as default body part in multipart mode . 
sets the given text directly as content in non-multipart mode or as default body part in multipart mode . 
sets the given plain text and HTML text as alternatives , offering both options to the email client . 
creates an Activation Framework DataSource for the given InputStreamSource . 
returns a Map with the failed messages as keys , and the thrown exceptions as values . 
returns an array with thrown message exceptions . 
returns the wrapped Runnable implementation . 
sets the Runnable to schedule as TimerListener . 
sets the TimerListener to schedule . 
returns the TimerListener to schedule . 
sets the delay before starting the task for the first time , in milliseconds . 
returns the delay before starting the job for the first time . 
sets the period between repeated task executions , in milliseconds . 
returns the period between repeated task executions . 
sets whether to schedule as fixed-rate execution , rather than fixed-delay execution .  
returns whether to schedule as fixed-rate execution . 
sets the JNDI name of the CommonJ TimerManager . 
sets the JNDI name of the CommonJ WorkManager . 
creates an instance of the specified job class . 
sets the JobDetail that this trigger should be associated with . 
sets the trigger 's JobDataMap . 
returns the trigger 's JobDataMap . 
sets a specific start time for the trigger . 
sets the start delay in milliseconds . 
returns the wrapped Runnable implementation . 
sets the job 's JobDataMap . 
returns the job 's JobDataMap . 
sets the recovery flag for this job , i.e. whether or not the job should gets re-executed if a ` recovery ' or ` fail-over ' situation is encountered . 
sets a textual description for this job . 
sets the key of an ApplicationContext reference to expose in the JobDataMap , for example `` applicationContext '' . 
sets the name of the job . 
sets the group of the job . 
sets the name of the target bean in the Spring BeanFactory . 
sets the MethodInvoker to use . 
sets whether any jobs defined on this SchedulerFactoryBean should overwrite existing job definitions . 
sets the location of a Quartz job definition XML file that follows the `` job_scheduling_data_1_5 '' XSD or better . 
sets the locations of Quartz job definition XML files that follow the `` job_scheduling_data_1_5 '' XSD or better . 
sets the transaction manager to be used for registering jobs and triggers that are defined by this SchedulerFactoryBean . 
adds the given job to the Scheduler , if it does n't already exist . 
adds the given trigger to the Scheduler , if it does n't already exist . 
returns the Quartz Scheduler instance that this accessor operates on . 
sets the SchedulerContext of the current Quartz Scheduler . 
returns the ResourceLoader for the currently configured Quartz Scheduler , to be used by ResourceLoaderClassLoadHelper . 
returns the TaskExecutor for the currently configured Quartz Scheduler , to be used by LocalTaskExecutorThreadPool . 
returns the DataSource for the currently configured Quartz Scheduler , to be used by LocalDataSourceJobStore . 
returns the non-transactional DataSource for the currently configured Quartz Scheduler , to be used by LocalDataSourceJobStore . 
sets the Quartz SchedulerFactory implementation to use . 
sets the name of the Scheduler to creates via the SchedulerFactory . 
sets the location of the Quartz properties config file , for example as classpath resource `` classpath : quartz.properties '' . 
sets Quartz properties , like `` org.quartz.threadPool.class '' . 
sets the Spring TaskExecutor to use as Quartz backend . 
sets the default DataSource to be used by the Scheduler . 
sets the DataSource to be used by the Scheduler <i> for non-transactional access </i> . 
sets the key of an ApplicationContext reference to expose in the SchedulerContext , for example `` applicationContext '' . 
sets the Quartz JobFactory to use for this Scheduler . 
sets whether to automatically start the scheduler after initialization . 
returns whether this scheduler is configured for auto-startup . 
returns the phase in which this scheduler will be started and stopped . 
sets the number of seconds to wait after initialization before starting the scheduler asynchronously . 
sets whether to wait for running jobs to complete on shutdown . 
creates the Scheduler instance for the given factory and scheduler name . 
sets whether to wait for running jobs to complete on shutdown . 
sets the JobDetail that this trigger should be associated with . 
sets the trigger 's JobDataMap . 
returns the trigger 's JobDataMap . 
sets a specific start time for the trigger . 
sets the start delay in milliseconds . 
creates the job instance , populating it with property values taken from the scheduler context , job data map and trigger data map . 
returns whether the given job object is eligible for having its bean properties populated . 
sets the location of the FreeMarker config file . 
sets the default encoding for the FreeMarker configuration . 
sets the Freemarker template loader path via a Spring resource location .  
sets multiple Freemarker template loader paths via Spring resource locations .  
sets the Spring ResourceLoader to use for loading FreeMarker template files . 
returns the Spring ResourceLoader to use for loading FreeMarker template files . 
sets whether to prefer file system access for template loading . 
returns whether to prefer file system access for template loading . 
returns a new Configuration object . 
returns a TemplateLoader based on the given TemplateLoader list . 
Returns the expected concrete type of the cache . 
Adds a cache with the specified name to the native manager . 
Removes the cache with the specified name from the native manager . 
Returns the size of this annotation writer list . 
Returns <tt> true </tt> if this type of attribute is unknown . 
Returns <tt> true </tt> if this type of attribute is a code attribute . 
Returns the labels corresponding to this attribute . 
Returns the byte array form of this attribute . 
Returns the length of the attribute list that begins with this attribute . 
Returns the size of all the attributes in this attribute list . 
Returns the label corresponding to the given offset . 
Returns the start index of the attribute_info structure of this class . 
Returns the maximum length of the strings contained in the constant pool of the class . 
Returns the bytecode of the class that was build with this class writer . 
Adds a number or string constant to the constant pool of the class being build . 
Adds a number or string constant to the constant pool of the class being build . 
Adds an UTF8 string to the constant pool of the class being build . 
Adds a class reference to the constant pool of the class being build . 
Adds a class reference to the constant pool of the class being build . 
Adds a method type reference to the constant pool of the class being build . 
Adds a method type reference to the constant pool of the class being build . 
Adds a handle to the constant pool of the class being build . 
Adds a handle to the constant pool of the class being build . 
Adds a handle to the constant pool of the class being build . 
Adds an invokedynamic reference to the constant pool of the class being build . 
Adds an invokedynamic reference to the constant pool of the class being build . 
Adds a field reference to the constant pool of the class being build . 
Adds a field reference to the constant pool of the class being build . 
Adds a method reference to the constant pool of the class being build . 
Adds a method reference to the constant pool of the class being build . 
Adds an integer to the constant pool of the class being build . 
Adds a float to the constant pool of the class being build . 
Adds a long to the constant pool of the class being build . 
Adds a double to the constant pool of the class being build . 
Adds a string to the constant pool of the class being build . 
Adds a name and type to the constant pool of the class being build . 
Adds a name and type to the constant pool of the class being build . 
Returns the index of the common super type of the two given types . 
Returns the common super type of the two given types . 
Returns the constant pool 's hash table item which is equal to the given item . 
Returns the size of this field . 
Returns the output frame local variable type at the given index . 
Sets the output frame local variable type at the given index . 
Returns the int encoding of the given type . 
Adds a new type to the list of types on which a constructor is invoked in the basic block . 
Returns <tt> true </tt> if the input frame of the given label has been changed by this operation .  
Returns <tt> true </tt> if the type array has been modified by this operation . 
Returns the kind of field or method designated by this handle . 
Returns the internal name of the class that owns the field or method designated by this handle . 
Returns the name of the field or method designated by this handle . 
Returns the descriptor of the field or method designated by this handle . 
Returns true if the owner of the field or method designated by this handle is an interface . 
Returns the textual representation of this handle . 
Removes the range between start and end from the given exception handlers . 
Sets this item to an integer item . 
Sets this item to a long item . 
Sets this item to a float item . 
Sets this item to a double item . 
Sets this item to an item that do not hold a primitive value . 
Sets the item to an InvokeDynamic item . 
Sets the item to a BootstrapMethod item . 
Returns the offset corresponding to this label . 
Adds a forward reference to this label . 
Returns the first label of the series to which this label belongs . 
Returns true is this basic block belongs to the given subroutine . 
Returns true if this basic block and the given one belong to a common subroutine . 
Returns a string representation of this label . 
Returns the size of the bytecode of this method . 
Returns the Java type corresponding to the given type descriptor . 
Returns the Java type corresponding to the given internal name . 
Returns the Java type corresponding to the given method descriptor . 
Returns the Java method type corresponding to the given argument and returns types . 
Returns the Java type corresponding to the given class . 
Returns the Java method type corresponding to the given constructor . 
Returns the Java method type corresponding to the given method . 
Returns the Java types corresponding to the argument types of the given method descriptor . 
Returns the Java types corresponding to the argument types of the given method . 
Returns the Java type corresponding to the returns type of the given method descriptor . 
Returns the Java type corresponding to the returns type of the given method . 
Returns the Java type corresponding to the given type descriptor . 
Returns the sort of this Java type . 
Returns the number of dimensions of this array type . 
Returns the type of the elements of this array type . 
Returns the binary name of the class corresponding to this type . 
Returns the internal name of the class corresponding to this object or array type . 
Returns the argument types of methods of this type . 
Returns the returns type of methods of this type . 
Returns the size of the arguments and of the returns value of methods of this type . 
Returns the descriptor corresponding to this Java type . 
Returns the descriptor corresponding to the given argument and returns types . 
Returns the internal name of the given class . 
Returns the descriptor corresponding to the given Java type . 
Returns the descriptor corresponding to the given constructor . 
Returns the descriptor corresponding to the given method . 
Returns the size of values of this type . 
Returns a JVM instruction opcode adapted to this Java type . 
Returns a hash code value for this type . 
Returns a string representation of this type . 
Returns the length of this path . 
Returns the value of the given step of this path . 
Returns the index of the type argument that the given step is stepping into . 
Returns a string representation of this type path . 
Returns a type reference of the given sort . 
Returns a reference to a type parameter of a generic class or method . 
Returns a reference to a type parameter bound of a generic class or method . 
Returns a reference to the super class or to an interface of the ` implements ' clause of a class . 
Returns a reference to the type of a formal parameter of a method . 
Returns a reference to the type of an exception , in a ` throws ' clause of a method . 
Returns a reference to the type of the exception declared in a ` catch ' clause of a method . 
Returns a reference to the type of a type argument in a constructor or method call or reference . 
Returns the sort of this type reference . 
Returns the index of the type parameter referenced by this type reference . 
Returns the index of the `` super type '' of a class that is referenced by this type reference . 
Returns the index of the formal parameter whose type is referenced by this type reference . 
Returns the index of the exception , in a ` throws ' clause of a method , whose type is referenced by this type reference . 
Returns the index of the type argument referenced by this type reference . 
Returns the int encoded value of this type reference , suitable for use in visit methods related to type annotations , like visitTypeAnnotation . 
removes the specified alias from this registry . 
returns the aliases for the given name , if defined . 
gets the list of results aggregated by this processor . 
gets the type of annotation that this extractor extracts attribute values for . 
gets the element that is annotated with an annotation of the annotation type supported by this extractor . 
gets the underlying source of annotation attributes . 
creates a new SynthesizingMethodParameter for the given method or constructor . 
creates a new SynthesizingMethodParameter for the given parameter descriptor . 
returns the names of all attributes . 
returns the list of MIME types this decoder supports . 
returns the list of mime types this encoder supports . 
creates the most approximate collection for the given collection . 
creates the most appropriate collection for the given collection type . 
creates the most appropriate collection for the given collection type . 
creates the most approximate map for the given map . 
creates the most appropriate map for the given map type . 
creates the most appropriate map for the given map type . 
returns the fallback ClassLoader to use when no ClassLoader was specified and ObjectInputStream 's own default class loader failed . 
returns the name of the analyzed class . 
returns the number of constants exposed . 
returns a constant value cast to a Number . 
returns a constant value as a String . 
returns all names of the given group of constants . 
returns all names of the group of constants for the given bean property name . 
returns all names of the given group of constants . 
returns all values of the given group of constants . 
returns all values of the group of constants for the given bean property name . 
returns all values of the given group of constants . 
returns the source type we tried to convert the value from . 
returns the target type we tried to convert the value to . 
returns the offending value . 
gets the converter to convert from S to target type T , where T is also an instance of R. @param <T> the target type @param targetType the target type to convert to @return A converter from S to T 
adds a plain converter to this registry . 
adds a plain converter to this registry . 
adds a generic converter to this registry . 
adds a ranged converter factory to this registry . 
removes any converters from sourceType to targetType . 
returns the source and target types that this converter can convert between . 
returns the source type that was requested to convert from . 
returns the target type that was requested to convert to . 
adds converters appropriate for most environments . 
adds collection converters . 
returns whether conversion between the sourceType and targetType can be bypassed . 
returns the default converter if no converter is found for the given sourceType/targetType pair . Returns a NO_OP Converter if the sourceType is assignable to the targetType . 
Returns an ordered class hierarchy for the given type . 
Returns primitive types as-is .  
returns the underlying source of the descriptor . 
Returns the name of this type : the fully qualified class name . 
Returns true if an object of this type descriptor can be assigned to the location described by the given type descriptor . 
creates a new type descriptor from the given type . 
creates a new type descriptor as an array of the specified type . 
Creates a type descriptor for a nested type declared within the method parameter . 
Creates a type descriptor for a nested type declared within the field . 
Creates a type descriptor for a nested type declared within the property . 
creates a new type descriptor for an object . 
returns the sets of reserved default profile names . 
returns whether the given profile is active , or if active profiles are empty whether the profile should be active by default . 
sets the prefix that placeholders replaced by this resolver must begin with . 
sets the suffix that placeholders replaced by this resolver must end with . 
sets whether to throw an exception when encountering an unresolvable placeholder nested within the value of a given property . 
returns the sets of all option arguments present on the command line . 
returns whether the option with the given name was present on the command line . 
returns the list of values associated with the given option . 
adds the given value to the list of non-option arguments . 
returns the list of non-option arguments specified on the command line . 
returns whether the sets of option arguments parsed from the command line contains an option with the given name . 
returns the collection of values associated with the command line option having the given name . 
returns the collection of non-option arguments parsed from the command line . 
returns all property sources that this composite source holds . 
adds a profile to the current sets of active profiles . 
sets the prefix that placeholders replaced by this resolver must begin with . 
sets the suffix that placeholders replaced by this resolver must end with . 
sets whether to throw an exception when encountering an unresolvable placeholder nested within the value of a given property . 
returns the sets of profiles explicitly made active for this environment . 
returns the sets of profiles to be active by default when no active profiles have been sets explicitly . 
returns whether one or more of the given profiles is active or , in the case of no explicit active profiles , whether one or more of the given profiles is included in the sets of default profiles . 
returns the sets of properties marked as required but not present upon validation . 
adds the given property source object with highest precedence . 
adds the given property source object with lowest precedence . 
adds the given property source object with precedence immediately higher than the named relative property source . 
adds the given property source object with precedence immediately lower than the named relative property source . 
removes the given property source if it is present . 
adds the given property source at a particular index in the list . 
returns whether a property source with the given name is contained . 
gets the property names for the option arguments . 
 returns the resolved name if one is found or otherwise the original name . 
returns the error code associated with this failure . 
Sets request method `` HEAD '' by default . 
returns the index of the first byte in this buffer that matches the given predicate . 
returns the index of the last byte in this buffer that matches the given predicate . 
returns the number of bytes that can be read from this data buffer . 
returns the underlying byte array . 
returns the ClassLoader that this resource will be obtained from . 
returns the path within the enclosing ` context ' . 
returns the ClassLoader to load class path resources with . 
returns the collection of currently registered protocol resolvers , allowing for introspection as well as modification . 
returns a Resource handle for the resource at the given path . 
returns the file path for this resource . 
returns the file path for this resource . 
returns a URL handle for this resource . 
returns a URI handle for this resource . 
returns a File handle for this resource . 
creates a resource relative to this resource . 
returns a description for this resource , to be used for error output when working with the resource . 
returns a Resource handle for the specified resource location . 
sets the separator to use inbetween file name parts . 
returns the ResourceLoader that this pattern resolver works with . 
sets the PathMatcher implementation to use for this resource pattern resolver . 
returns the PathMatcher that this resource pattern resolver uses . 
Find all class location resources with the given location via the ClassLoader . 
Find all class location resources with the given path via the ClassLoader . 
Find all resources that match the given location pattern via the Ant-style PathMatcher . 
Find all resources in jar files that match the given location pattern via the Ant-style PathMatcher . 
Find all resources in the file system that match the given location pattern via the Ant-style PathMatcher . 
Find all resources in the file system that match the given location pattern via the Ant-style PathMatcher . 
sets local properties , e.g. via the `` props '' tag in XML bean definitions . 
sets local properties , e.g. via the `` props '' tag in XML bean definitions , allowing for merging multiple properties sets into one . 
sets a location of a properties file to be loaded . 
sets locations of properties files to be loaded . 
sets whether local properties override properties from files . 
sets if failure to find the property resource should be ignored . 
sets the encoding to use for parsing properties files . 
sets the PropertiesPersister to use for parsing properties files . 
returns a merged Properties instance containing both the loaded properties and properties sets on this FactoryBean . 
returns whether the given resource location is a URL : either a special `` classpath '' or `` classpath '' pseudo URL or a standard URL . 
returns a default ResourcePatternResolver for the given ResourceLoader . 
returns the description for the given Resource ; if the description is empty , returns the class name of the resource plus its identity hash code . 
returns the wrapped Method , if any . 
returns the wrapped Constructor , if any . 
returns the class that declares the underlying Method or Constructor . 
returns the wrapped member . 
returns the wrapped annotated element . 
returns the wrapped executable . 
returns the index of the method/constructor parameter . 
sets the type index for the current nesting level . 
returns the type index for the current nesting level . 
returns the type index for the specified nesting level . 
sets a containing class to resolve the parameter type against . 
returns the type of the method/constructor parameter . 
returns the generic type of the method/constructor parameter . 
returns the nested type of the method/constructor parameter . 
returns the nested generic type of the method/constructor parameter . 
returns the annotations associated with the target method/constructor itself . 
returns the method/constructor annotation of the given type , if available . 
returns whether the method/constructor is annotated with the given type . 
returns the annotations associated with the specific method/constructor parameter . 
returns the parameter annotation of the given type , if available . 
returns whether the parameter is declared with the given annotation type . 
returns the name of the method/constructor parameter . 
creates a new MethodParameter for the given method or constructor . 
creates a new MethodParameter for the given method or constructor . 
creates a new MethodParameter for the given parameter descriptor . 
returns the detail message , including the message from the nested exception if there is one . 
Find an order value indicated by the given object . 
returns an order source for the specified object , i.e. an object that should be checked for an order value as a replacement to the given object . 
gets the order value of this object . 
adds a further ParameterNameDiscoverer to the list of discoverers that this PrioritizedParameterNameDiscoverer checks . 
returns a descriptor with further information about the adaptee . 
gets the adapter for the given adaptee type to adapt from . 
gets the adapter for the given adaptee type to adapt from . 
gets the adapter for the given adaptee type to adapt to . 
gets the adapter for the given adaptee type to adapt to . 
returns the underlying source of the resolvable type . 
returns the underlying bounds . 
returns the underlying type provider . 
returns whether alias overriding is allowed . 
returns the ValueStyler used by this ToStringStyler . 
returns the String representation that this ToStringCreator built . 
returns the external factory to use for creating new Threads , if any . 
sets the maximum number of parallel accesses allowed . 
returns the maximum number of parallel accesses allowed . 
returns whether this throttle is currently active . 
gets the fully qualified class names of all annotation types that are <em> present </em> on the underlying class . 
gets the fully qualified class names of all meta-annotation types that are <em> present </em> on the given annotation type on the underlying class . 
returns the name of the underlying class . 
returns whether the underlying class represents an interface . 
returns whether the underlying class represents an annotation . 
returns whether the underlying class is marked as abstract . 
returns whether the underlying class represents a concrete class , i.e. neither an interface nor an abstract class . 
returns whether the underlying class is marked as ` final ' . 
returns whether the underlying class has a super class . 
returns the names of all interfaces that the underlying class implements , or an empty array if there are none . 
returns the names of all classes declared as members of the class represented by this ClassMetadata object . 
returns the maximum number of entries for the MetadataReader cache . 
returns the resource reference for the class file . 
returns the ResourceLoader that this MetadataReaderFactory has been constructed with . 
returns the name of the method . 
returns the fully-qualified name of the class that declares this method . 
returns the fully-qualified name of this method 's declared returns type . 
returns whether the underlying method is effectively abstract : i.e. marked as abstract on a class or declared as a regular , non-default method in an interface . 
returns whether the underlying method is declared as ` static ' . 
returns whether the underlying method is marked as ` final ' . 
returns whether the underlying method is overridable , i.e. not marked as static , final or private . 
returns the underlying Class . 
returns the underlying Method . 
returns whether this Objenesis instance is worth trying for instance creation , i.e. whether it has n't been used yet or is known to work . 
creates a new instance of the given class via Objenesis . 
sets the path separator to use for pattern parsing . 
Returns the length of the given pattern , where template variables are considered to be 1 long . 
gets the element at the supplied index , creating it if there is no element at that index . 
creates the element for the supplied index . 
returns the initial interval in milliseconds . 
returns the value to multiply the current interval by for each retry attempt . 
returns the maximum back off time . 
sets the interval between two attempts in milliseconds . 
returns the interval between two attempts in milliseconds . 
sets the maximum number of attempts in milliseconds . 
returns the maximum number of attempts in milliseconds . 
returns the default ClassLoader to use : typically the thread context ClassLoader , if available ; the ClassLoader that loaded the ClassUtils class will be used as fallback . 
returns the user-defined class for the given instance : usually simply the class of the given instance , but the original class in case of a CGLIB-generated subclass . 
returns the user-defined class for the given class : usually simply the given class , but the original class in case of a CGLIB-generated subclass . 
gets the class name without the qualified package name . 
gets the class name without the qualified package name . 
returns the short string name of a Java class in uncapitalized JavaBeans property format . 
returns the qualified name of the given class : usually simply the class name , but component type class name + '' -LSB- -RSB- '' for arrays . 
returns the qualified name of the given method , consisting of fully qualified interface/class name + '' . '' 
returns a descriptive name for the given object 's type : usually simply the class name , but component type class name + '' -LSB- -RSB- '' for arrays , and an appended list of implemented interfaces for JDK proxies . 
returns a public static method of a class . 
returns all interfaces that the given instance implements as array , including ones implemented by superclasses . 
returns all interfaces that the given class implements as array , including ones implemented by superclasses . 
returns all interfaces that the given class implements as array , including ones implemented by superclasses . 
returns all interfaces that the given instance implements as sets , including ones implemented by superclasses . 
returns all interfaces that the given class implements as sets , including ones implemented by superclasses . 
returns all interfaces that the given class implements as sets , including ones implemented by superclasses . 
creates a composite interface Class for the given interfaces , implementing the given interfaces in one single Class . 
Find a single value of the given type in the given Collection . 
Find a single value of one of the given types in the given Collection : searching the Collection for a value of the first type , then searching for a value of the second type , etc. . 
Find the common element type of the given Collection , if any . 
returns an unmodifiable view of the specified multi-value map . 
adds a Comparator to the end of the chain . 
adds a Comparator to the end of the chain using the provided sort order . 
Returns the number of aggregated comparators . 
adds given iterator to this composite . 
sets the maximum number of concurrent access attempts allowed . 
returns the maximum number of concurrent access attempts allowed . 
returns whether this throttle is currently active . 
Returns the adaptee . 
adds the given callback to this registry . 
adds the given success callback to this registry . 
adds the given failure callback to this registry . 
sets the value of this future . 
sets the exception of this future . 
gets the hash for a given object , apply an additional hash function to reduce collisions . 
removes any entries that have been garbage collected and are no longer referenced . 
Returns the hash for the reference . 
adds a new entry with the specified value . 
returns the thread name prefix to use for the names of newly created threads . 
sets the priority of the threads that this factory creates . 
returns the priority of the threads that this factory creates . 
sets whether this factory is supposed to creates daemon threads , just executing as long as the application itself is running . 
returns whether this factory should creates daemon threads . 
returns a hexadecimal string representation of the MD5 digest of the given bytes . 
returns a hexadecimal string representation of the MD5 digest of the given stream . 
returns the number of bytes stored in this FastByteArrayOutputStream . 
Creates a newly allocated byte array . 
returns the offending content type . 
creates a regular copy of this Map . 
creates a deep copy of this Map . 
sets the target class on which to call the target method . 
returns the target class on which to call the target method . 
sets the target object on which to call the target method . 
returns the target object on which to call the target method . 
sets the name of the method to be invoked . 
returns the name of the method to be invoked . 
sets a fully qualified static method name to invoke , e.g. `` example.MyExampleClass.myExampleMethod '' . 
sets arguments for the method invocation . 
returns the arguments for the method invocation . 
Find a matching method with the specified name for the specified arguments . 
returns the prepared Method object that will be invoked . 
returns the primary type . 
returns the subtype . 
returns a generic parameter value , given a parameter name . 
returns all generic parameter values . 
returns the first value for the given key . 
adds the given single value to the current list of values for the given key . 
sets the given single value under the given key . 
sets the given values under . 
returns whether the given throwable is a checked exception : that is , neither a RuntimeException nor an Error . 
returns a hash code based on the contents of the specified array . 
returns a hash code based on the contents of the specified array . 
returns a hash code based on the contents of the specified array . 
returns a hash code based on the contents of the specified array . 
returns a hash code based on the contents of the specified array . 
returns a hash code based on the contents of the specified array . 
returns a hash code based on the contents of the specified array . 
returns a hash code based on the contents of the specified array . 
returns a hash code based on the contents of the specified array . 
returns a String representation of an object 's overall identity . 
returns a hex String form of an object 's identity hash code . 
returns a String representation of the specified Object . 
returns a String representation of the contents of the specified array . 
returns a String representation of the contents of the specified array . 
returns a String representation of the contents of the specified array . 
returns a String representation of the contents of the specified array . 
returns a String representation of the contents of the specified array . 
returns a String representation of the contents of the specified array . 
returns a String representation of the contents of the specified array . 
returns a String representation of the contents of the specified array . 
returns a String representation of the contents of the specified array . 
gets all declared methods on the leaf class and all superclasses . 
gets the unique sets of declared methods on the leaf class and all superclasses . 
returns the current size of this stream 's internal buffer . 
returns whether the given resource location is a URL : either a special `` classpath '' pseudo URL or a standard URL . 
creates a URI instance for the given URL , replacing spaces with '' % 20 '' URI encoding first . 
creates a URI instance for the given location String , replacing spaces with '' % 20 '' URI encoding first . 
returns the id of this stop watch , as specified on construction . 
sets this to `` false '' when using a StopWatch for millions of intervals , or the task info structure will consume excessive memory . 
returns whether the stop watch is currently running . 
returns the name of the currently running task , if any . 
returns the time taken by the last task . 
returns the name of the last task . 
returns the last task as a TaskInfo object . 
returns the total time in milliseconds for all tasks . 
returns the total time in seconds for all tasks . 
returns the number of tasks timed . 
returns an array of the data for tasks performed . 
returns a short description of the total running time . 
returns a string with a table describing all tasks performed . 
returns the name of this task . 
returns the time in milliseconds this task took . 
returns the time in seconds this task took . 
removes duplicate strings from the given array . 
adds entry to internal map of tracked entries . 
removes entry from internal map of tracked entries . 
sets the bindings for this namespace context . 
removes the given prefix from this context . 
removes all declared prefixes . 
returns all declared prefixes . 
Returns the index into the content which is after the token or -1 if the token is not found . 
Sets the Subscription once but does not request anything . 
returns the timestamp for this object . 
returns true if the specified suffix can be found at the supplied position in the supplied expression string . 
returns the default root context object against which unqualified properties/methods/etc should be resolved . 
returns a list of resolvers that will be asked in turn to locate a constructor . 
returns a list of resolvers that will be asked in turn to locate a method . 
returns a list of accessors that will be asked in turn to read/write a property . 
returns a type locator that can be used to find types , either by short or fully qualified name . 
returns a type comparator for comparing pairs of objects for equality . 
returns an operator overloader that may support mathematical operations between more than the standard sets of types . 
returns a bean resolver that can look up beans by name . 
sets a named variable within this evaluation context to a specified value . 
sets this expression in the provided context to the value provided . 
sets this expression in the provided context to the value provided . 
sets this expression in the provided context to the value provided . 
Returns the original string used to creates this expression , unmodified . 
returns the expression string . 
returns the position in the expression string where the problem occurred . 
returns the exception message . 
returns the exception simple message without including the expression that caused the failure . 
returns true if the operator overloader supports the specified operation between the two operands and so should be invoked to handle it . 
returns an array of classes for which this resolver should be called . 
creates a new ordinary object and returns it . 
creates an array and returns it . 
returns whether this list is a constant value . 
Returns an object that indicates whether the input descriptors are compatible . 
Returns a boolean based on whether a value is in the range expressed . 
Returns the value this ValueRef points to , it should not require expression component re-evaluation . 
Sets the value this ValueRef points to , it should not require expression component re-evaluation . 
creates the JVM signature descriptor for a method . 
creates the JVM signature descriptor for a constructor . 
creates an array of descriptors representing the parameter types for the supplied method . Returns a zero sized array if there are no parameters . 
creates an array of descriptors representing the parameter types for the supplied constructor . Returns a zero sized array if there are no parameters . 
creates an array of descriptors from an array of classes . 
creates the optimal instruction for loading a number on the stack . 
returns the type of the accessed property - may only be known once an access has occurred . 
sets the position in the related expression which gave rise to this exception . 
sets the evaluation context that will be used if none is specified on an evaluation call . 
returns the default evaluation context that will be used if none is supplied on an evaluation call . 
returns the Abstract Syntax Tree for the expression . 
Find the first public class in the methods declaring class hierarchy that declares this method . 
returns the sets of methods for this type . 
Find a getter method for the specified property . 
Find a setter method for the specified property . 
Returns class methods ordered with non bridge methods appearing higher . 
returns the method suffixes for a given property name . 
returns the method suffix for a given property name . 
Find a field of a certain name on a specified class . 
removes that specified prefix from this locator 's list of imports . 
returns a list of all the import prefixes registered with this StandardTypeLocator . 
Find a type by name . 
creates the root context object , an Inventor instance . 
returns the wrapped SQLException . 
returns the SQL that caused the problem . 
sets the value for prepared statements specified parameter index using the passed in value . 
sets the value for the prepared statement 's specified parameter position using the passed in value and type . 
sets parameter values on the given PreparedStatement . 
returns the size of the batch . 
sets the class that each row should be mapped to . 
gets the class that we are mapping to . 
sets whether we 're strictly validating that all bean properties have been mapped from corresponding database fields . 
returns whether we 're strictly validating that all bean properties have been mapped from corresponding database fields . 
sets whether we 're defaulting Java primitives in the case of mapping a null value from corresponding database fields . 
returns whether we 're defaulting Java primitives in the case of mapping a null value from corresponding database fields . 
creates a callable statement in this connection . 
adds a new declared parameter . 
sets whether to use prepared statements that returns a specific type of ResultSet . 
sets whether to use prepared statements capable of returning updatable ResultSets . 
returns a new CallableStatementCreator instance given this parameters . 
returns a new CallableStatementCreator instance given this parameter mapper . 
creates a Map instance to be used as column map . 
sets a NativeJdbcExtractor to extract native JDBC objects from wrapped handles . 
returns the current NativeJdbcExtractor implementation . 
sets whether or not we want to ignore SQLWarnings . 
returns whether or not we ignore SQLWarnings . 
sets the fetch size for this JdbcTemplate . 
returns the fetch size specified for this JdbcTemplate . 
sets the maximum number of rows for this JdbcTemplate . 
returns the maximum number of rows specified for this JdbcTemplate . 
sets the query timeout for statements that this JdbcTemplate executes . 
returns the query timeout for statements that this JdbcTemplate executes . 
sets whether results processing should be skipped . 
returns whether results processing should be skipped . 
sets whether undeclared results should be skipped . 
returns whether undeclared results should be skipped . 
sets whether execution of a CallableStatement will returns the results in a Map that uses case insensitive names for the parameters . 
returns whether execution of a CallableStatement will returns the results in a Map that uses case insensitive names for the parameters . 
creates a close-suppressing proxy for the given JDBC Connection . 
creates a new RowMapper for reading columns as key-value pairs . 
creates a new RowMapper for reading result objects from a single column . 
creates a Map instance to be used as the results map . 
creates a new arg-based PreparedStatementSetter using the args passed in . 
creates a new arg-type-based PreparedStatementSetter using the args and types passed in . 
gets the name used for the returns value of the function . 
gets a limited sets of in parameters to be used . 
gets a list of the out parameter names . 
gets the name of the procedure . 
gets the name of the catalog . 
gets the name of the schema . 
creates a ReturnResultSetParameter/SqlOutParameter depending on the support provided by the JDBC driver used for the database in use . 
gets the name of the single out parameter for this call . 
gets the List of SqlParameter objects to be used in call execution . 
creates a default out parameter based on the provided meta data . 
creates a default inout parameter based on the provided meta data . 
creates a default in parameter based on the provided meta data . 
gets the name of the current user . 
gets the call parameter metadata that is currently used . 
creates a CallMetaDataProvider based on the database metadata @param dataSource used to retrieve metadata @param context the class that holds configuration and metadata @return instance of the CallMetaDataProvider implementation to be used 
gets the parameter name . 
gets the parameter type . 
gets the parameter SQL type . 
gets the parameter type name . 
gets whether the parameter is nullable . 
sets the name of the table for this context . 
gets the name of the table for this context . 
sets the name of the catalog for this context . 
gets the name of the catalog for this context . 
sets the name of the schema for this context . 
gets the name of the schema for this context . 
gets a List of the table column names . 
gets the table name formatted based on metadata information . 
gets the catalog name formatted based on metadata information . 
gets the schema name formatted based on metadata information . 
gets the simple query to retrieve a generated key 
gets the table parameter metadata that is currently used . 
creates a TableMetaDataProvider based on the database metedata @param dataSource used to retrieve metedata @param context the class that holds configuration and metedata @return instance of the TableMetaDataProvider implementation to be used 
creates a TableMetaDataProvider based on the database metedata @param dataSource used to retrieve metedata @param context the class that holds configuration and metedata @param nativeJdbcExtractor the NativeJdbcExtractor to be used @return instance of the TableMetaDataProvider implementation to be used 
gets the parameter name . 
gets the parameter SQL type . 
gets whether the parameter/column is nullable . 
returns the SQL type for the given parameter , if registered . 
returns the type name for the given parameter , if registered . 
adds a parameter to this parameter source . 
adds a parameter to this parameter source . 
adds a parameter to this parameter source . 
adds a Map of parameters to this parameter source . 
creates a NamedParameterJdbcTemplate based on the configured JdbcTemplate . 
returns a NamedParameterJdbcTemplate wrapping the configured JdbcTemplate . 
returns the maximum number of entries for this template 's SQL cache . 
returns the SQL statement that is being parsed . 
adds a named parameter parsed from this SQL statement . 
returns the parameter indexes for the specified parameter . 
sets the count of named parameters in the SQL statement . 
returns the count of named parameters in the SQL statement . 
sets the count of all of the unnamed parameters in the SQL statement . 
returns the count of all of the unnamed parameters in the SQL statement . 
sets the total count of all of the parameters in the SQL statement . 
returns the total count of all of the parameters in the SQL statement . 
returns the parameter value for the requested named parameter . 
creates an array of MapSqlParameterSource objects populated with data from the values passed in . 
creates an array of BeanPropertySqlParameterSource objects populated with data from the values passed in . 
creates a wrapped value if parameter has type information , plain object if not . 
creates a Map of case insensitive parameter names together with the original name . 
sets parameter values on the given PreparedStatement . 
creates a Map of input parameters , keyed by name . 
creates a statement in this connection . 
adds a new declared parameter . 
sets whether to use prepared statements that returns a specific type of ResultSet . 
sets whether to use prepared statements capable of returning updatable ResultSets . 
sets whether prepared statements should be capable of returning auto-generated keys . 
sets the column names of the auto-generated keys . 
returns a new PreparedStatementSetter for the given parameters . 
returns a new PreparedStatementSetter for the given parameters . 
returns a new PreparedStatementCreator for the given parameters . 
returns a new PreparedStatementCreator for the given parameters . 
returns a new PreparedStatementCreator for the given parameters . 
sets parameter values on the given PreparedStatement . 
returns the ResultSetExtractor held by this parameter , if any . 
returns the RowCallbackHandler held by this parameter , if any . 
returns the RowMapper held by this parameter , if any . 
returns the types of the columns as java.sql.Types constants Valid after processRow is invoked the first time . 
returns the names of the columns . 
returns the row count of this ResultSet Only valid after processing is complete @return the number of rows in this ResultSet 
returns the number of columns in this result sets . 
sets the name of the stored procedure . 
gets the name of the stored procedure . 
sets the names of in parameters to be used . 
gets the names of in parameters to be used . 
sets the catalog name to use . 
gets the catalog name used . 
sets the schema name to use . 
gets the schema name used . 
gets the call string that should be used based on parameters and meta data . 
adds a declared parameter to the list of parameters for the call . 
gets the name of a single out parameter or returns value . 
gets a List of all the call parameters to be used for call . 
sets the name of the table for this insert . 
gets the name of the table for this insert . 
sets the name of the schema for this insert . 
gets the name of the schema for this insert . 
sets the name of the catalog for this insert . 
gets the name of the catalog for this insert . 
sets the names of the columns to be used . 
gets the names of the columns used . 
sets the names of any generated keys . 
gets the names of any generated keys . 
gets the insert string to be used . 
creates a PreparedStatement to be used for an insert operation with generated keys . 
sets the type that each result object is expected to match . 
returns the custom returns type , if any . 
returns whether this parameter holds a custom returns type . 
returns the SQL type of the parameter . 
returns the type name of the parameter , if any . 
returns the scale of the parameter , if any . 
returns whether this parameter is an implicit returns parameter used during the results preocessing of the CallableStatement.getMoreResults / getUpdateCount . 
returns the value object that this parameter value holds . 
returns the SQL string for this object , i.e. typically the SQL used for creating statements . 
returns whether this parameter is an implicit returns parameter used during the results preocessing of the CallableStatement.getMoreResults / getUpdateCount . 
gets the type value from the specific object . 
returns whether this parameter is an implicit returns parameter used during the results preocessing of the CallableStatement.getMoreResults / getUpdateCount . 
creates a SqlRowSet that wraps the given ResultSet , representing its data in a disconnected fashion . 
sets the type value on the given PreparedStatement . 
sets the value for a parameter . 
sets the value for a parameter . 
sets the value for a parameter . 
sets the value for a parameter . 
sets the specified PreparedStatement parameter to null , respecting database-specific peculiarities . 
sets values on the given PreparedStatement , using the given LobCreator for BLOB/CLOB arguments . 
sets the DataSource to use to obtain database connections . 
sets the JdbcTemplate to be used by this bean factory . 
sets the JDBC DataSource to be used by this DAO . 
creates a JdbcTemplate for the given DataSource . 
returns the JDBC DataSource used by this DAO . 
sets the JdbcTemplate for this DAO explicitly , as an alternative to specifying a DataSource . 
returns the JdbcTemplate for this DAO , pre-initialized with the DataSource or sets explicitly . 
returns the SQLExceptionTranslator of this DAO 's JdbcTemplate , for translating SQLExceptions in custom JDBC access code . 
gets a JDBC Connection , either from the current transaction or a new one . 
sets the specified content via the LobCreator . 
Returns 0 , indicating the default system timeout is to be used . 
sets the JDBC URL to use for connecting through the Driver . 
returns the JDBC URL to use for connecting through the Driver . 
sets the JDBC username to use for connecting through the Driver . 
returns the JDBC username to use for connecting through the Driver . 
sets the JDBC password to use for connecting through the Driver . 
returns the JDBC password to use for connecting through the Driver . 
returns the database catalog to be applied to each Connection , if any . 
returns the database schema to be applied to each Connection , if any . 
returns the connection properties to be passed to the Driver , if any . 
returns the ConnectionHandle held by this ConnectionHolder . 
returns whether this holder currently has a Connection . 
sets whether this holder represents an active , JDBC-managed transaction . 
returns whether this holder represents an active , JDBC-managed transaction . 
returns the current Connection held by this ConnectionHolder . 
returns whether JDBC 3.0 Savepoints are supported . 
creates a new JDBC 3.0 Savepoint for the current Connection , using generated savepoint names that are unique for the Connection . 
returns the target Connection of this proxy . 
sets the JDBC DataSource that this instance should manage transactions for . 
returns the JDBC DataSource that this instance manages transactions for . 
returns the innermost target Connection of the given Connection . 
sets the target DataSource that this DataSource should delegate to . 
returns the target DataSource that this DataSource should delegate to . 
sets the JDBC driver class name . 
sets the JDBC driver class to use to connect to the database . 
sets the JDBC connection URL for the database . 
sets the username to use to connect to the database . 
sets the password to use to connect to the database . 
sets the name of the embedded database . 
sets the type of embedded database . 
adds default SQL scripts to execute to populate the database . 
adds an SQL script to execute to initialize or populate the database . 
adds multiple SQL scripts to execute to initialize or populate the database . 
sets the name of the database . 
sets the type of embedded database to use . 
sets the strategy that will be used to configure the embedded database instance . 
sets the strategy that will be used to initialize or populate the embedded database . 
sets a script execution to be run in the bean destruction callback , cleaning up the database and leaving it in a known state for others . 
adds one or more populators to the list of delegates . 
adds a script to execute to initialize or clean up the database . 
adds multiple scripts to execute to initialize or clean up the database . 
sets the scripts to execute to initialize or clean up the database , replacing any previously added scripts . 
sets the prefix that identifies single-line comments within the SQL scripts . 
sets the start delimiter that identifies block comments within the SQL scripts . 
sets the end delimiter that identifies block comments within the SQL scripts . 
returns whether the proxy currently holds a target Connection . 
returns the target Connection , fetching it and initializing it if necessary . 
returns the specified Connection as-is . 
returns the JDBC Driver instance to use . 
sets whether the returned Connection should be a close-suppressing proxy or the physical Connection . 
returns whether the returned Connection will be a close-suppressing proxy or the physical Connection . 
sets whether the returned Connection 's `` autoCommit '' setting should be overridden . 
returns whether the returned Connection 's `` autoCommit '' setting should be overridden . 
Returns the single Connection if given the same username and password ; throws a SQLException else . 
sets the default username that this adapter should use for retrieving Connections . 
sets the default user 's password that this adapter should use for retrieving Connections . 
sets user credententials for this proxy and the current thread . 
removes any user credentials for this proxy from the current thread . 
returns the expected column count . 
returns the actual column count . 
returns the wrapped SQLException . 
returns the SQL that caused the problem . 
returns the number of rows that should have been affected . 
returns the number of rows that have actually been affected . 
sets the number of statements that will trigger an automatic intermediate flush . 
sets whether to track the rows affected by batch updates performed by this operation object . 
returns the current number of statements or statement parameters in the queue . 
returns the number of already executed statements . 
returns the number of affected rows for all already executed statements . 
returns the JdbcTemplate object used by this object . 
sets the JDBC DataSource to obtain connections from . 
sets the fetch size for this RDBMS operation . 
sets the maximum number of rows for this RDBMS operation . 
sets the query timeout for statements that this RDBMS operation executes . 
sets whether to use statements that returns a specific type of ResultSet . 
returns whether statements will returns a specific type of ResultSet . 
sets whether to use statements that are capable of returning updatable ResultSets . 
returns whether statements will returns updatable ResultSets . 
sets whether prepared statements should be capable of returning auto-generated keys . 
returns whether statements should be capable of returning auto-generated keys . 
sets the column names of the auto-generated keys . 
returns the column names of the auto generated keys . 
sets the SQL executed by this operation . 
adds one or more declared parameters . 
returns whether BLOB/CLOB parameters are supported for this kind of operation . 
returns whether this operation accepts additional parameters that are given but not actually used . 
sets whether this call is for a function . 
returns whether this call is for a function . 
sets whether the SQL can be used as is . 
returns whether the SQL can be used as is . 
gets the call string . 
returns a CallableStatementCreator to perform an operation with this parameters . 
returns a CallableStatementCreator to perform an operation with the parameters returned from this ParameterMapper . 
returns a PreparedStatementSetter to perform an operation with the given parameters . 
returns a PreparedStatementCreator to perform an operation with the given parameters . 
returns a PreparedStatementCreator to perform an operation with the given parameters . 
sets the number of rows expected . 
gets the number of rows expected . 
sets the maximum number of rows that may be affected by this update . 
sets the <i> exact </i> number of rows that must be affected by this update . 
returns the underlying SQLWarning . 
returns the fallback exception translator , if any . 
sets the SQL error codes to match . 
returns the SQL error codes to match . 
sets the exception class for the specified error codes . 
returns the exception class for the specified error codes . 
returns the singleton instance . 
Find a custom translator for the specified database . 
sets the DataSource to validate . 
sets the SQL query string to use for validation . 
sets the name of the column in the sequence table . 
returns the name of the column in the sequence table . 
sets the number of buffered keys . 
returns the number of buffered keys . 
sets the data source to retrieve the value from . 
returns the data source to retrieve the value from . 
sets the name of the sequence/table . 
returns the name of the sequence/table . 
sets the padding length , i.e. the length to which a string result should be pre-pended with zeroes . 
returns the padding length for String values . 
returns the database-specific query to use for retrieving a sequence value . 
sets the name of the dummy column . 
returns the name of the dummy column . 
sets the JDBC DataSource to obtain connections from . 
returns the DataSource used by this template . 
sets the exception translator for this instance . 
returns the exception translator for this instance . 
sets whether to lazily initialize the SQLExceptionTranslator for this accessor , on first encounter of a SQLException . 
returns whether to lazily initialize the SQLExceptionTranslator for this accessor . 
returns whether the given JDBC driver supports JDBC 2.0 batch updates . 
returns a reference to the List that contains the keys . 
sets the given content as bytes on the given statement , using the given parameter index . 
sets the given content as binary stream on the given statement , using the given parameter index . 
sets the given content as String on the given statement , using the given parameter index . 
sets the given content as ASCII stream on the given statement , using the given parameter index . 
sets the given content as character stream on the given statement , using the given parameter index . 
returns whether it is necessary to work on the native Connection to receive native Statements . 
returns whether it is necessary to work on the native Connection to receive native PreparedStatements . 
returns whether it is necessary to work on the native Connection to receive native CallableStatements . 
sets whether it is necessary to work on the native Connection to receive native Statements . 
sets whether it is necessary to work on the native Connection to receive native PreparedStatements . 
sets whether it is necessary to work on the native Connection to receive native CallableStatements . 
returns the column names of the table that the result sets represents . 
sets this property if the database name contains spaces , in which case we can not use the bean name for lookup . 
sets this property to specify multiple database names that contains spaces , in which case we can not use bean names for lookup . 
returns the singleton instance . 
sets the DataSource for this translator . 
sets the database product name for this translator . 
sets custom error codes to be used for translation . 
returns the error codes used by this translator . 
creates a custom DataAccessException , based on a given exception class from a CustomSQLErrorCodesTranslation definition . 
sets the value on the given PreparedStatement . 
returns the underlying SQLException . 
returns the SQL that led to the problem . 
creates an empty container instance . 
sets the name of the destination for this endpoint . 
returns the name of the destination for this endpoint . 
sets the name for the durable subscription . 
returns the name for the durable subscription , if any . 
sets the JMS message selector expression .  
returns the JMS message selector expression , if any . 
sets a concurrency for the listener , if any . 
returns the concurrency for the listener , if any . 
returns a description for this endpoint . 
creates an empty container instance . 
returns the id of this endpoint . 
creates and start a new container using the specified factory . 
sets the actual bean instance to invoke this endpoint method on . 
sets the method to invoke for processing a message managed by this endpoint . 
sets the most specific method known for this endpoint 's declaration . 
sets a value resolver for embedded placeholders and expressions . 
returns the default response destination , if any . 
returns whether to cache JMS MessageProducers per JMS Session instance . 
returns whether to cache JMS MessageConsumers per JMS Session instance . 
adds an ExceptionListener to the chained delegate list . 
returns the innermost target Session of the given Session . 
creates a new JMS Connection for registration with a JmsResourceHolder . 
creates a new JMS Session for registration with a JmsResourceHolder . 
sets the target ConnectionFactory that this ConnectionFactory should delegate to . 
returns the target ConnectionFactory that this ConnectionFactory delegates to . 
sets the JMS ConnectionFactory that this instance should manage transactions for . 
returns the JMS ConnectionFactory that this instance should manage transactions for . 
creates a JMS Connection via this template 's ConnectionFactory . 
creates a JMS Session for the given Connection . 
returns the target Session of this proxy . 
sets the target ConnectionFactory which will be used to lazily creates a single Connection . 
returns the target ConnectionFactory which will be used to lazily creates a single Connection , if any . 
returns a JMS client ID for the single Connection created and exposed by this ConnectionFactory , if any . 
returns the JMS ExceptionListener implementation that should be registered with the single Connection created by this factory , if any . 
returns whether the single Connection should be renewed when a JMSException is reported by the underlying Connection . 
creates a JMS Connection via this template 's ConnectionFactory . 
creates a default Session for this ConnectionFactory , adapting to JMS 1.0.2 style queue/topic mode if necessary . 
sets the target ConnectionFactory that this ConnectionFactory should delegate to . 
returns the target ConnectionFactory that this ConnectionFactory should delegate to . 
returns whether to allow for a local JMS transaction that is synchronized with a Spring-managed transaction . 
sets the target ConnectionFactory that this ConnectionFactory should delegate to . 
sets the username that this adapter should use for retrieving Connections . 
sets the password that this adapter should use for retrieving Connections . 
sets user credententials for this proxy and the current thread . 
removes any user credentials for this proxy from the current thread . 
returns the configured default destination name . 
sets the destination to be used on send/receive operations that do not have a destination parameter . 
returns the destination to be used on send/receive operations that do not have a destination parameter . 
sets the destination name to be used on send/receive operations that do not have a destination parameter . 
returns the destination name to be used on send/receive operations that do not have a destination parameter . 
sets the message converter for this template . 
returns the message converter for this template . 
sets whether message IDs are enabled .  
returns whether message IDs are enabled . 
sets whether message timestamps are enabled .  
returns whether message timestamps are enabled . 
sets whether to inhibit the delivery of messages published by its own connection . 
returns whether to inhibit the delivery of messages published by its own connection . 
sets the delivery mode to use when sending a message . 
returns the delivery mode to use when sending a message . 
sets the priority of a message when sending . 
returns the priority of a message when sending . 
sets the time-to-live of the message when sending . 
returns the time-to-live of the message when sending . 
creates a raw JMS MessageProducer for the given Session and Destination . 
creates a JMS MessageConsumer for the given Session and Destination . 
sets the JMS connection factory to be used by the gateway . 
creates a JmsTemplate for the given ConnectionFactory . 
returns the JMS ConnectionFactory used by the gateway . 
sets the JmsTemplate for the gateway . 
returns the JmsTemplate for the gateway . 
Gets called after population of this instance 's bean properties . 
returns the detail message , including the message from the linked exception if there is one . 
returns the JMS client ID for the shared Connection created and used by this container , if any . 
sets whether to automatically start the container after initialization . 
returns the phase in which this container will be started and stopped . 
returns the bean name that this listener container has been assigned in its containing bean factory , if any . 
returns whether this container is currently active , that is , whether it has been sets up but not shut down yet . 
creates a shared Connection for this container . 
returns the shared JMS Connection maintained by this container . 
returns whether a shared JMS Connection should be maintained by this container base class . 
sets the destination to receive messages from . 
returns the destination to receive messages from . 
sets the name of the destination to receive messages from . 
returns the name of the destination to receive messages from . 
sets the message listener implementation to register . 
returns the message listener object to register . 
sets whether to make the subscription durable . 
returns whether to make the subscription durable . 
sets whether to make the subscription shared . 
returns whether to make the subscription shared . 
sets the name of a subscription to creates . 
returns the name of a subscription to creates , if any . 
sets the name of a durable subscription to creates . 
returns the name of a durable subscription to creates , if any . 
sets whether to inhibit the delivery of messages published by its own connection . 
returns whether to inhibit the delivery of messages published by its own connection . 
sets the JMS ExceptionListener to notify in case of a JMSException thrown by the registered message listener or the invocation infrastructure . 
returns the JMS ExceptionListener to notify in case of a JMSException thrown by the registered message listener or the invocation infrastructure , if any . 
sets the ErrorHandler to be invoked in case of any uncaught exceptions thrown while processing a Message . 
returns the ErrorHandler to be invoked in case of any uncaught exceptions thrown while processing a Message . 
sets whether to accept received messages while the listener container in the process of stopping . 
returns whether to accept received messages while the listener container in the process of stopping . 
creates a JMS MessageConsumer for the given Session and Destination . 
returns the Spring PlatformTransactionManager to use for transactional wrapping of message reception plus listener execution . 
sets the timeout to use for receive calls , in <b> milliseconds </b> . 
creates a MessageConsumer for the given JMS Session , registering a MessageListener for the specified listener . 
sets the default destination to send response messages to . 
sets the name of the default response queue to send response messages to . 
sets the name of the default response topic to send response messages to . 
sets the DestinationResolver that should be used to resolve response destination names for this adapter . 
returns the DestinationResolver for this adapter . 
sets the converter that will convert incoming JMS messages to listener method arguments , and objects returned from listener methods back to JMS messages . 
returns the converter that will convert incoming JMS messages to listener method arguments , and objects returned from listener methods back to JMS messages . 
returns the content of the response . 
sets a target object to delegate message listening to . 
returns the target object to delegate message listening to . 
returns the name of the default listener method to delegate to . 
returns the level of caching that this listener container is allowed to apply . 
returns the `` concurrentConsumer '' setting . 
returns the `` maxConcurrentConsumer '' setting . 
returns the maximum number of messages to process in one task . 
returns the limit for the number of idle consumers . 
returns the limit for idle executions of a consumer task . 
Creates the specified number of concurrent consumers , in the form of a JMS Session plus associated MessageConsumer running in a separate thread . 
returns the number of currently scheduled consumers . 
returns the number of currently active consumers . 
returns whether at least one consumer has entered a fixed registration with the target destination . 
creates a default TaskExecutor . 
returns whether this listener container is currently in a recovery attempt . 
sets the JMS acknowledgement mode to use . 
returns the JMS acknowledgement mode to use . 
returns the maximum number of consumers/sessions to use . 
returns the maximum number of messages to load into a session . 
sets the JMS MessageListener for this endpoint . 
returns the JMS MessageListener for this endpoint . 
Creates a concrete JMS message endpoint , internal to this factory . 
sets the JMS MessageListener for this endpoint . 
returns the JMS MessageListener for this endpoint . 
sets the XA transaction manager to use for wrapping endpoint invocations , enlisting the endpoint resource in each such transaction . 
sets the DestinationResolver to use for resolving destination names into the JCA 1.5 ActivationSpec `` destination '' property .  
sets the name of this message endpoint . 
sets the DestinationResolver to use for resolving destination names into the JCA 1.5 ActivationSpec `` destination '' property . 
sets this flag to `` true '' in order to switch to lazy connecting if your target broker is likely to not have started up yet and you prefer to not even try a connection . 
sets the Spring TaskExecutor to use for executing the listener once a message has been received by the provider . 
Creates the specified number of concurrent consumers , in the form of a JMS Session plus associated MessageConsumer . 
creates a MessageConsumer for the given JMS Session , registering a MessageListener for the specified listener . 
sets the QueueConnectionFactory to use for obtaining JMS QueueConnections . 
returns the QueueConnectionFactory to use for obtaining JMS QueueConnections . 
sets the target Queue to send invoker requests to . 
sets the name of target queue to send invoker requests to . 
sets the DestinationResolver that is to be used to resolve Queue references for this accessor . 
creates a new JMS Connection for this JMS invoker . 
creates a new JMS Session for this JMS invoker . 
creates the invoker request message . 
sets the interface that the proxy must implement . 
sets whether invalidly formatted messages should be discarded . 
creates the invocation result response message . 
sets a type id for the given payload object on the given JMS Message . 
creates a JMS message for the specified payload and conversionHint . 
Returns the plain Message object in case of an unknown message type . 
creates a JMS TextMessage for the given String . 
creates a JMS BytesMessage for the given byte array . 
creates a JMS MapMessage for the given Map . 
creates a JMS ObjectMessage for the given Serializable object . 
sets whether to cache resolved destinations . 
sets whether this resolver is supposed to creates dynamic destinations if the destination name is not found in JNDI . 
creates a JMS Connection via this template 's ConnectionFactory . 
creates a JMS Session for the given Connection . 
adds the outbound prefix if necessary . 
adds the inbound prefix if necessary . 
creates the mock objects for testing . 
returns the supported MIME types . 
returns the configured preferred serialization payload class . 
Returns the default content type for the payload . 
returns the underlying list of delegate converters . 
returns the configured Marshaller . 
returns the configured unmarshaller . 
returns the configured destination resolver . 
returns the configured default destination . 
sets the target DestinationResolver to delegate to . 
returns the configured send operation timeout value . 
returns the configured receive operation timeout value . 
returns the MethodParameter that was rejected . 
creates a new NamedValueInfo based on the given NamedValueInfo with sanitized values . 
Returns the bean for this handler method . 
Returns the method for this handler method . 
Returns the method parameters for this handler method . 
returns the HandlerMethod returns type . 
returns the actual returns value type . 
Returns a single annotation on the underlying method traversing its super methods if no annotation can be found on the given method itself . 
returns whether the parameter is declared with the given annotation type . 
returns a short representation of this handler method for log message purposes . 
returns the configured destination prefixes , if any . 
returns the configured custom argument resolvers , if any . 
returns the configured custom returns value handlers , if any . 
returns the complete list of argument resolvers . 
returns the complete list of returns value handlers . 
returns the list of argument resolvers to use . 
returns the list of returns value handlers to use . 
creates a HandlerMethod instance from an Object handler that is either a handler instance or a String-based bean name . 
returns destinations contained in the mapping that are not patterns and are therefore suitable for direct lookups . 
returns a map with all handler methods and their mappings . 
returns a comparator for sorting matching mappings . 
returns value handling will then continue when the ListenableFuture is completed with either success or error . 
returns a read-only list with the contained resolvers , or an empty list . 
returns a read-only list with the configured handlers . 
gets the method argument values for the current request . 
Adds HandlerMethod details such as the controller type and method signature to the given error message . 
returns the type of the contained advice bean . 
returns the advice bean instance , if necessary resolving a bean specified by name through the BeanFactory . 
returns the message payload . 
returns the configured default destination prefix . 
returns the configured default user destination prefix . 
sets the PathMatcher implementation to use for matching destinations against configured destination patterns . 
returns the PathMatcher implementation to use for matching destinations . 
returns the configured Validator instance . 
returns the configured header initializer . 
returns the maximum number of entries for the resolved destination cache . 
returns the name for the selector header . 
returns the configured TaskScheduler . 
returns the configured header initializer . 
removes all subscriptions associated with the given sessionId . 
Find all subscriptions that should receive the given message . 
creates the user registry that provides access to the local users . 
sets the STOMP message broker host . 
sets the STOMP message broker port . 
sets the login to use when creating connections to the STOMP broker on behalf of connected clients . 
sets the passcode to use when creating connections to the STOMP broker on behalf of connected clients . 
sets the interval , in milliseconds , at which the `` system '' relay session will , in the absence of any other data being sent , send a heartbeat to the STOMP broker . 
sets the maximum interval , in milliseconds , at which the `` system '' relay session expects , in the absence of any other data , to receive a heartbeat from the STOMP broker . 
sets the value of the `` host '' header to use in STOMP CONNECT frames . 
sets a destination to broadcast messages to user destinations that remain unresolved because the user appears not to be connected . 
sets a destination to broadcast the content of the local user registry to and to listen for such broadcasts from other servers . 
sets the core pool size of the ThreadPoolExecutor . 
sets the max pool size of the ThreadPoolExecutor .  
sets the queue capacity for the ThreadPoolExecutor . 
sets the time limit for which threads may remain idle before being terminated . 
returns the value for the attribute of the given name , if any . 
removes the attribute of the given name , if it exists . 
returns an id for the associated session . 
returns the SimpAttributes currently bound to the thread . 
returns the attributes associated with the current session . 
returns the user associated with the current session . 
creates an instance from the payload and headers of the given Message . 
returns the configured message channel . 
returns the configured user destination prefix . 
returns the configured header initializer . 
returns the configured buffer size limit . 
gets the expected content length of the currently buffered , incomplete STOMP frame . 
returns a future that will complete when the session is ready for use . 
returns the configured session handler . 
returns the configured TaskScheduler to use for receipt tracking . 
returns the configured time limit before a receipt expires . 
sets the STOMP message broker host . 
returns the STOMP message broker host . 
sets the STOMP message broker port . 
returns the STOMP message broker port . 
sets the interval , in milliseconds , at which the `` system '' connection will , in the absence of any other data being sent , send a heartbeat to the STOMP broker .  
returns the interval , in milliseconds , at which the `` system '' connection will send heartbeats to the STOMP broker . 
sets the maximum interval , in milliseconds , at which the `` system '' connection expects , in the absence of any other data , to receive a heartbeat from the STOMP broker .  
returns the interval , in milliseconds , at which the `` system '' connection expects to receive heartbeats from the STOMP broker . 
sets the login to use when creating connections to the STOMP broker on behalf of connected clients . 
returns the configured login to use for connections to the STOMP broker on behalf of connected clients . 
sets the client passcode to use to creates connections to the STOMP broker on behalf of connected clients . 
returns the configured passcode to use for connections to the STOMP broker on behalf of connected clients . 
returns the login used for the shared `` system '' connection to the STOMP broker . 
returns the passcode used for the shared `` system '' connection to the STOMP broker . 
returns the configured map with subscriptions on the `` system '' connection . 
sets the value of the `` host '' header to use in STOMP CONNECT frames . 
returns the configured virtual host value . 
gets the configured TCP client . 
returns the current count of TCP connection to the broker . 
returns the configured header initializer . 
returns a String describing internal state and counters . 
returns the configured receipt time limit . 
creates an instance for the given STOMP command . 
creates an instance for the given STOMP command and headers . 
creates headers for a heartbeat . 
creates an instance from the payload and headers of the given Message . 
sets the content-type header . 
returns the content-type header value . 
sets the content-length header . 
returns the content-length header or -1 if unknown . 
sets the receipt header . 
gets the receipt header . 
sets the host header . 
gets the host header . 
sets the login header . 
gets the login header . 
sets the passcode header . 
gets the passcode header . 
sets the heartbeat header . 
gets the heartbeat header . 
sets the session header . 
gets the session header . 
sets the server header . 
gets the server header . 
sets the destination header . 
gets the destination header . 
sets the id header . 
gets the id header . 
sets the ack header to one of `` auto '' , `` client '' , or `` client-individual '' . 
gets the ack header . 
sets the login header . 
gets the subscription header . 
sets the message-id header . 
gets the message-id header . 
sets the receipt-id header . 
gets the receipt header . 
returns the first header value for the given header name , if any . 
adds the given , single header value under the given name . 
sets the given , single header value under the given name . 
returns the id for the session . 
returns the id for the subscription . 
removes the subscription by sending an UNSUBSCRIBE frame . 
returns the configured prefix for user destinations . 
returns a globally unique user name for use with `` user '' destinations . 
returns the session id . 
returns the user associated with the session . 
returns the subscriptions for this session . 
returns the sessions for the user . 
gets the user for the given name . 
returns a snapshot of all connected users . 
Find subscriptions with the given matcher . 
sets a destination to broadcast messages to that remain unresolved because the user is not connected . 
returns the configured destination for unresolved messages . 
returns the messaging template used to send resolved messages to the broker channel . 
returns the configured header initializer . 
returns the configured destination for broadcasting UserRegistry information . 
returns the configured registry expiration period . 
returns the bean name for this message channel . 
returns whether the timestamp header is enabled or not . 
sets the list of channel interceptors clearing any existing interceptors . 
adds a channel interceptor to the end of the list . 
adds a channel interceptor at the specified index . 
returns the list of configured interceptors . 
removes the given interceptor . 
removes the interceptor at the given index . 
sets the value for the given header name . 
sets the value for the given header name only if the header name is not already associated with a value . 
Removes all headers provided via array of ` headerPatterns ' . 
removes the value for the given header name . 
creates a new builder for a message with the given payload . 
returns the Message that will be handled . 
returns the MessageHandler that will be used to handle the message . 
sets the value for the given header name . 
sets the value for the given header name only if the header name is not already associated with a value . 
removes the value for the given header name . 
Removes all headers provided via array of ` headerPatterns ' . 
returns a concise message for logging purposes . 
returns a more detailed message for logging purposes . 
returns a copy of the native header values or an empty map . 
sets the specified native header value replacing existing values . 
adds the specified native header value to existing values . 
returns the time to the next attempt to reconnect . 
returns the underlying SQLException . 
returns the SQL that led to the problem . 
returns the persistent instance of the given entity class with the given identifier , throwing an exception if not found . 
returns the persistent instance of the given entity class with the given identifier , throwing an exception if not found . 
returns the persistent instance of the given entity class with the given identifier , throwing an exception if not found . 
returns the persistent instance of the given entity class with the given identifier , throwing an exception if not found . 
returns all persistent instances of the given entity class . 
returns the HQL query string that was invalid . 
sets the Hibernate SessionFactory that should be used to creates Hibernate Sessions . 
returns the Hibernate SessionFactory that should be used to creates Hibernate Sessions . 
sets one or more names of Hibernate filters to be activated for all Sessions that this accessor works with . 
returns the names of Hibernate filters to be activated , if any . 
sets whether to expose the native Hibernate Session to HibernateCallback code . 
returns whether to expose the native Hibernate Session to HibernateCallback code , or rather a Session proxy . 
sets whether to cache all queries executed by this template . 
returns whether to cache all queries executed by this template . 
sets the name of the cache region for queries executed by this template . 
returns the name of the cache region for queries executed by this template . 
sets the fetch size for this HibernateTemplate . 
returns the fetch size specified for this HibernateTemplate . 
sets the maximum number of rows for this HibernateTemplate . 
returns the maximum number of rows specified for this HibernateTemplate . 
creates a close-suppressing proxy for the given Hibernate Session . 
sets the SessionFactory that this instance should manage transactions for . 
returns the SessionFactory that this instance should manage transactions for . 
sets the JDBC DataSource that this instance should manage transactions for . 
returns the JDBC DataSource that this instance manages transactions for . 
sets whether to prepare the underlying JDBC Connection of a transactional Hibernate Session , that is , whether to apply a transaction-specific isolation level and/or the transaction 's read-only flag to the underlying JDBC Connection . 
sets whether to allow result access after completion , typically via Hibernate 's ScrollableResults mechanism . 
sets the bean name of a Hibernate entity interceptor that allows to inspect and change property values before writing to and reading from the database . 
sets a Hibernate entity interceptor that allows to inspect and change property values before writing to and reading from the database . 
returns whether the given Hibernate Session will always hold the same JDBC Connection . 
sets the DataSource to be used by the SessionFactory . 
sets the location of a single Hibernate XML config file , for example as classpath resource `` classpath : hibernate.cfg.xml '' . 
sets the locations of multiple Hibernate XML config files , for example as classpath resources `` classpath : hibernate.cfg.xml , classpath : extension.cfg.xml '' . 
sets Hibernate mapping resources to be found in the class path , like `` example.hbm.xml '' or `` mypackage/example . 
sets locations of Hibernate mapping files , for example as classpath resource `` classpath : example.hbm.xml '' . 
sets locations of cacheable Hibernate mapping files , for example as web app resource '' / WEB-INF/mapping/example . 
sets locations of jar files that contain Hibernate mapping resources , like `` WEB-INF/lib/example . 
sets locations of directories that contain Hibernate mapping resources , like `` WEB-INF/mappings '' . 
sets a Hibernate entity interceptor that allows to inspect and change property values before writing to and reading from the database . 
sets a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory . 
sets a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory . 
sets Hibernate properties , such as `` hibernate.dialect '' . 
returns the Hibernate properties , if any . 
returns the Hibernate Configuration object used to build the SessionFactory . 
adds the given annotated classes in a batch . 
adds the given annotated packages in a batch . 
gets the native Hibernate FlushMode , adapting between Hibernate 5.0 / 5.1 and 5.2 + . 
sets the Hibernate SessionFactory to be used by this DAO . 
creates a HibernateTemplate for the given SessionFactory . 
returns the Hibernate SessionFactory used by this DAO . 
sets the HibernateTemplate for this DAO explicitly , as an alternative to specifying a SessionFactory . 
returns the HibernateTemplate for this DAO , pre-initialized with the SessionFactory or sets explicitly . 
sets the Hibernate SessionFactory that should be used to creates Hibernate Sessions . 
returns the Hibernate SessionFactory that should be used to creates Hibernate Sessions . 
sets the bean name of the SessionFactory to fetch from Spring 's root application context . 
returns the bean name of the SessionFactory to fetch from Spring 's root application context . 
sets the Hibernate SessionFactory that should be used to creates Hibernate Sessions . 
returns the Hibernate SessionFactory that should be used to creates Hibernate Sessions . 
returns the name of the request attribute that identifies that a request is already intercepted . 
sets the PersistenceProvider implementation class to use for creating the EntityManagerFactory . 
sets the PersistenceProvider instance to use for creating the EntityManagerFactory . 
returns the asynchronous executor for background bootstrapping , if any . 
creates a proxy of the given EntityManagerFactory . 
returns the singleton EntityManagerFactory . 
sets the JPA EntityManagerFactory that should be used to creates EntityManagers . 
returns the JPA EntityManagerFactory that should be used to creates EntityManagers . 
sets the name of the persistence unit to access the EntityManagerFactory for . 
returns the name of the persistence unit to access the EntityManagerFactory for , if any . 
returns the raw underlying EntityManagerFactory . 
returns the underlying PersistenceProvider that the underlying EntityManagerFactory was created with . 
returns the PersistenceUnitInfo used to creates this EntityManagerFactory , if the in-container API was used . 
returns the JDBC DataSource that this EntityManagerFactory obtains its JDBC Connections from . 
returns the ClassLoader that the application 's beans are loaded with . 
returns null if no translation is appropriate : any other exception may have resulted from user code , and should not be translated . 
returns the underlying EntityManager that this proxy will delegate to . 
creates an application-managed extended EntityManager proxy . 
creates an application-managed extended EntityManager proxy . 
creates a container-managed extended EntityManager proxy . 
creates a container-managed extended EntityManager proxy . 
creates a container-managed extended EntityManager proxy . 
creates a container-managed extended EntityManager proxy . 
sets the EntityManagerFactory that this instance should manage transactions for . 
returns the EntityManagerFactory that this instance should manage transactions for . 
sets the name of the persistence unit to manage transactions for . 
returns the name of the persistence unit to manage transactions for , if any . 
sets the JDBC DataSource that this instance should manage transactions for . 
returns the JDBC DataSource that this instance manages transactions for . 
sets the JPA dialect to use for this transaction manager . 
returns the JPA dialect to use for this transaction manager . 
creates a JPA EntityManager to be used for a transaction . 
returns the vendor-specific persistence provider . 
returns a Map of vendor-specific JPA properties , typically based on settings in this JpaVendorAdapter instance . 
returns the vendor-specific EntityManagerFactory interface that the EntityManagerFactory proxy is supposed to implement . 
returns the vendor-specific EntityManager interface that this provider 's EntityManagers will implement . 
sets the PersistenceUnitManager to use for obtaining the JPA persistence unit that this FactoryBean is supposed to build an EntityManagerFactory for . 
sets a persistence unit root location for the default persistence unit . 
sets the PersistenceUnitPostProcessors to be applied to the PersistenceUnitInfo used for creating this EntityManagerFactory . 
sets the default persistence unit root location , to be applied if no unit-specific persistence unit root could be determined . 
sets the PersistenceUnitPostProcessors to be applied to each PersistenceUnitInfo that has been parsed by this manager . 
returns the PersistenceUnitPostProcessors to be applied to each PersistenceUnitInfo that has been parsed by this manager . 
returns the Spring LoadTimeWeaver to use for class instrumentation according to the JPA class transformer contract . 
returns whether an override of a same-named persistence unit is allowed . 
adds a managed class name to the persistence provider 's metadata . 
adds a managed package to the persistence provider 's metadata . 
returns a list of managed Java packages , to be introspected by the persistence provider . 
sets the persistence provider 's own package name , for exclusion from class transformation . 
creates a transactional EntityManager proxy for the given EntityManagerFactory . 
creates a transactional EntityManager proxy for the given EntityManagerFactory . 
creates a transactional EntityManager proxy for the given EntityManagerFactory . 
creates a transactional EntityManager proxy for the given EntityManagerFactory . 
creates a transactional EntityManager proxy for the given EntityManagerFactory . 
sets the bean name of the EntityManagerFactory to fetch from Spring 's root application context . 
returns the bean name of the EntityManagerFactory to fetch from Spring 's root application context . 
sets the name of the persistence unit to access the EntityManagerFactory for . 
returns the name of the persistence unit to access the EntityManagerFactory for , if any . 
creates a JPA EntityManager to be bound to a request . 
returns the name of the request attribute that identifies that a request is already filtered . 
sets the JNDI template to use for JNDI lookups . 
sets the JNDI environment to use for JNDI lookups . 
sets whether the lookup occurs in a J2EE container , i.e. if the prefix `` java : comp/env / '' needs to be added if the JNDI name does n't already contain it . 
returns a specified persistence unit for the given unit name , as defined through the `` persistenceUnits '' map . 
Find an EntityManagerFactory with the given name in the current Spring application context . 
Find a single default EntityManagerFactory in the Spring application context . 
returns the target database to operate on . 
returns the name of the target database to operate on . 
sets whether to generate DDL after the EntityManagerFactory has been initialized , creating/updating all relevant tables . 
returns whether to generate DDL after the EntityManagerFactory has been initialized creating/updating all relevant tables . 
sets whether to lazily start a database resource transaction within a Spring-managed EclipseLink transaction . 
sets whether to prepare the underlying JDBC Connection of a transactional Hibernate Session , that is , whether to apply a transaction-specific isolation level and/or the transaction 's read-only flag to the underlying JDBC Connection . 
sets whether to prepare the underlying JDBC Connection of a transactional Hibernate Session , that is , whether to apply a transaction-specific isolation level and/or the transaction 's read-only flag to the underlying JDBC Connection .  
returns the persistent class of the object for which the locking failed . 
returns the name of the persistent class of the object for which the locking failed . 
returns the identifier of the object for which the locking failed . 
returns the persistent class of the object that was not found . 
returns the name of the persistent class of the object that was not found . 
returns the identifier of the object that was not found . 
sets the encoding to be used for stream access . 
sets the locations of the Castor XML mapping files . 
sets the locations of the Castor XML mapping files . 
sets the Castor target class . 
sets the Castor target classes . 
sets the name of a package with the Castor descriptor classes . 
sets the names of packages with the Castor descriptor classes . 
sets whether this marshaller should validate in - and outgoing documents . 
Sets whether this marshaller should output namespaces . 
sets whether this marshaller should output the xml declaration . 
sets the name of the root element . 
sets the expected root object for the unmarshaller , into which the source will be unmarshalled . 
sets whether this unmarshaller should re-use objects . 
Sets whether this unmarshaller should clear collections upon the first use . 
sets Castor-specific properties for marshalling and unmarshalling . 
sets the map containing document type definition for the marshaller . 
Sets the processing instructions that will be used by during marshalling . 
sets the namespace mappings . 
sets the namespace to package mappings . 
sets multiple JAXB context paths . 
sets a JAXB context path . 
returns the JAXB context path . 
sets the list of Java classes to be recognized by a newly created JAXBContext . 
returns the list of Java classes to be recognized by a newly created JAXBContext . 
sets the packages to search for classes with JAXB2 annotations in the classpath . 
returns the packages to search for JAXB2 annotations . 
sets the JAXB validation event handler . 
sets the schema resource to use for validation . 
sets the schema resources to use for validation . 
sets the schema language . 
sets the resource resolver , as used to load the schema resources . 
Returns the configured value for whether XML external entities are allowed . 
returns the JAXBContext used by this marshaller , lazily building it if necessary . 
returns a newly created JAXB marshaller . 
returns a newly created JAXB unmarshaller . 
sets the target class for this instance . 
sets the target package for this instance . 
sets the optional binding name for this instance . 
sets the number of nesting indent spaces . 
sets the document encoding using for marshalling . 
sets the document standalone flag for marshalling . 
sets the root element name for the DTD declaration written when marshalling . 
sets the system id for the DTD declaration written when marshalling . 
sets the public id for the DTD declaration written when marshalling . 
sets the internal subset Id for the DTD declaration written when marshalling . 
adds the given data handler as an attachment to this container . 
Returns the configured value for whether XML external entities are allowed . 
returns the object to be marshalled . 
sets the XStream mode to use . 
sets the alias/type map , consisting of string aliases mapped to classes . 
sets the <em> aliases by type </em> map , consisting of string aliases mapped to classes . 
sets the field alias/type map , consisting of field names . 
sets types to use XML attributes for . 
sets the types to use XML attributes for . 
sets annotated classes for which aliases will be read from class-level annotation metadata . 
sets the encoding to be used for stream access . 
sets the classes supported by this marshaller . 
returns the native XStream delegate used by this marshaller . 
returns the headers . 
returns the body content . 
returns body content as a byte array . 
returns the body content interpreted as a UTF-8 string . 
returns the body content as a string . 
adds the given object to the list of JNDI objects that this template will expose . 
Find a HeaderValueHolder by name , ignoring casing . 
returns the ServletContext that this request is associated with . 
sets the content of the request body as a byte array . 
gets the content of the request body as a byte array . 
sets a single value for the specified HTTP parameter . 
sets an array of values for the specified HTTP parameter . 
Sets all provided parameters replacing any existing values for the provided parameter names . 
adds a single value for the specified HTTP parameter . 
adds an array of values for the specified HTTP parameter . 
Adds all provided parameters without replacing any existing values . 
removes already registered values for the specified HTTP parameter , if any . 
Removes all existing parameters . 
adds a new preferred locale , before any existing locales . 
sets the list of preferred locales , in descending order , effectively replacing any existing locales . 
adds a header entry for the given name .     
returns whether the character encoding has been sets . 
returns the names of all specified headers as a sets of Strings . 
returns the primary value for the given header as a String , if any . 
returns all values for the given header as a List of Strings . 
returns the primary value for the given header , if any . 
returns all values for the given header as a List of value objects . 
adds a file to this request . 
gets the <em> profile value </em> indicated by the specified key . 
gets the <em> profile value </em> indicated by the specified key from the system properties . 
gets the overall hit count for this cache . 
gets the overall miss count for this cache . 
gets the maximum size of this cache . 
gets the resource locations of properties files . 
gets the properties in the form of <em> key-value </em> pairs . 
returns the compiled XPath expression . 
returns details of executed requests . 
gets the body of the request as a UTF-8 string and compare it to the given String . 
sets up an expectation for a single HTTP request . 
sets up a new request expectation . 
sets the body as a UTF-8 String . 
sets the body as a byte array . 
adds a request expectation . 
creates a response for the given request . 
sets the contextPath to be used . 
sets the context path to use . 
returns the performed request . 
returns the resulting response . 
returns the executed handler . 
returns interceptors around the handler . 
returns the `` output '' flash attributes saved during request processing . 
gets the result of async execution . 
gets the result of async execution . 
adds a header to the request . 
adds all headers to the request . 
sets the ` Content-Type ' header of the request . 
sets the ` Content-Type ' header of the request . 
sets the request body . 
sets the request body as a UTF-8 String . 
adds the given cookies to the request . 
sets the locale of the request . 
sets the character encoding of the request . 
sets a request attribute . 
sets a session attribute . 
sets session attributes . 
sets an `` input '' flash attribute . 
sets flash attributes . 
sets the HTTP session to use , possibly re-used across requests . 
sets the principal of the request . 
creates a new MockMultipartFile with the given content . 
adds the given MockMultipartFile . 
returns the result of the executed request for direct access to the results . 
adds a filter mapped to a specific sets of patterns . 
sets the message converters to use in argument resolvers and in returns value handlers , which support reading and/or writing to the body of the request and response . 
adds interceptors mapped to all incoming requests . 
adds interceptors mapped to a sets of path patterns . 
sets a ContentNegotiationManager . 
sets the HandlerExceptionResolver types to use as a list . 
sets the HandlerExceptionResolver types to use as an array . 
sets the ` repository ' annotation type . 
returns the expected result size . 
returns whether data was updated . 
adds a PersistenceExceptionTranslator to the chained delegate list . 
Gets called after population of this instance 's bean properties . 
returns a single result object from the given Collection . 
returns a single result object from the given Collection . 
returns a unique result object from the given Collection . 
returns a unique result object from the given Collection . 
returns a unique result object from the given Collection . 
returns a unique int result from the given Collection . 
returns a unique long result from the given Collection . 
returns a translated exception if this is appropriate , otherwise returns the input exception . 
sets the CCI ConnectionFactory that this instance should manage local transactions for . 
returns the CCI ConnectionFactory that this instance manages local transactions for . 
sets the ConnectionSpec that this adapter should use for retrieving Connections . 
sets a ConnectionSpec for this proxy and the current thread . 
removes any ConnectionSpec for this proxy from the current thread . 
sets the target ConnectionFactory that this ConnectionFactory should delegate to . 
returns the target ConnectionFactory that this ConnectionFactory should delegate to . 
creates a CCI Connection via this template 's ConnectionFactory . 
sets the CCI ConnectionFactory to obtain Connections from . 
returns the CCI ConnectionFactory used by this template . 
sets the CCI ConnectionSpec that this template instance is supposed to obtain Connections for . 
returns the CCI ConnectionSpec used by this template , if any . 
sets a RecordCreator that should be used for creating default output Records . 
returns a RecordCreator that should be used for creating default output Records . 
creates a template derived from this template instance , inheriting the ConnectionFactory and other settings but overriding the ConnectionSpec used for obtaining Connections . 
creates an indexed Record through the ConnectionFactory 's RecordFactory . 
creates a mapped Record from the ConnectionFactory 's RecordFactory . 
returns a RecordFactory for the given ConnectionFactory . 
creates a CCI Record instance , usually based on the passed-in CCI RecordFactory . 
sets the ConnectionFactory to be used by this DAO . 
creates a CciTemplate for the given ConnectionFactory . 
returns the ConnectionFactory used by this DAO . 
sets the CciTemplate for this DAO explicitly , as an alternative to specifying a ConnectionFactory . 
returns the CciTemplate for this DAO , pre-initialized with the ConnectionFactory or sets explicitly . 
gets a CCI Connection , either from the current transaction or a new one . 
sets the CciTemplate to be used by this operation . 
returns the CciTemplate used by this operation . 
sets the CCI ConnectionFactory to be used by this operation . 
sets the CCI InteractionSpec for this operation . 
returns the CCI InteractionSpec for this operation . 
sets a RecordCreator that should be used for creating default output Records . 
sets the BootstrapContext that this object runs in . 
sets the location of the context configuration files , within the resource adapter 's deployment unit . 
returns the specified context configuration files . 
sets the XA transaction manager to use for wrapping endpoint invocations , enlisting the endpoint resource in each such transaction . 
sets the Spring TransactionFactory to use for wrapping endpoint invocations , enlisting the endpoint resource in each such transaction . 
sets the name of this message endpoint . 
Creates a concrete generic message endpoint , internal to this factory . 
sets the JCA ResourceAdapter to manage endpoints for . 
returns the JCA ResourceAdapter to manage endpoints for . 
sets the JCA MessageEndpointFactory to activate , pointing to a MessageListener object that the endpoints will delegate to . 
returns the JCA MessageEndpointFactory to activate . 
sets the JCA ActivationSpec to use for activating the endpoint . 
returns the JCA ActivationSpec to use for activating the endpoint . 
sets whether to auto-start the endpoint activation after this endpoint manager has been initialized and the context has been refreshed . 
returns the value for the ` autoStartup ' property . 
returns the phase in which this endpoint manager will be started and stopped . 
returns whether the configured message endpoint is currently active . 
sets the JCA ManagerConnectionFactory that should be used to creates the desired connection factory . 
sets the JCA ConnectionManager that should be used to creates the desired connection factory . 
returns the wrapped Runnable implementation . 
sets the JNDI name of the JCA WorkManager . 
returns the outcome state of the transaction state , as one of the constants in this class . 
sets the transaction attribute source which is used to find transaction attributes . 
returns the TransactionAttributeSource instances that this CompositeTransactionAttributeSource combines . 
returns a qualifier value associated with this transaction attribute . 
returns an identifying description for this transaction attribute . 
adds an attribute for a transactional method . 
adds an attribute for a transactional method . 
adds an attribute for a transactional method . 
returns if the given method name matches the mapped name . 
adds an attribute for a transactional method . 
returns if the given method name matches the mapped name . 
returns the pattern for the exception name . 
returns the depth of the superclass matching . 
returns the transaction status of the current method invocation . 
returns the name of the default transaction manager bean . 
sets multiple transaction attribute sources which are used to find transaction attributes . 
sets the transaction attribute source which is used to find transaction attributes . 
returns the transaction attribute source . 
sets the BeanFactory to use for retrieving PlatformTransactionManager beans . 
returns the BeanFactory to use for retrieving PlatformTransactionManager beans . 
creates a transaction if necessary based on the given TransactionAttribute . 
returns whether a transaction was created by this aspect , or whether we just have a placeholder to keep ThreadLocal stack integrity . 
returns a qualifier value associated with this transaction attribute . 
sets the transaction interceptor to use for this advisor . 
sets the default transaction manager . 
sets the transaction attribute source which is used to find transaction attributes . 
sets a pointcut , i.e a bean that can cause conditional invocation of the TransactionInterceptor depending on method and attributes passed . 
Creates an advisor for this FactoryBean 's TransactionInterceptor . 
returns the invalid timeout value . 
sets the JndiTemplate to use for JNDI lookups . 
returns the JndiTemplate used for JNDI lookups . 
sets the JNDI environment to use for JNDI lookups . Creates a JndiTemplate with the given environment settings . 
returns the JNDI environment to use for JNDI lookups . 
sets the JTA UserTransaction to use as direct reference . 
returns the JTA UserTransaction that this transaction manager uses . 
sets the JNDI name of the JTA UserTransaction . 
sets whether to autodetect the JTA UserTransaction at its default JNDI location `` java : comp/UserTransaction '' , as specified by Java EE . 
sets whether to cache the JTA UserTransaction object fetched from JNDI . 
sets the JTA TransactionManager to use as direct reference . 
returns the JTA TransactionManager that this transaction manager uses , if any . 
sets the JNDI name of the JTA TransactionManager . 
sets the JTA 1.1 TransactionSynchronizationRegistry to use as direct reference . 
returns the JTA 1.1 TransactionSynchronizationRegistry that this transaction manager uses , if any . 
sets the JNDI name of the JTA 1.1 TransactionSynchronizationRegistry . 
sets whether to allow custom isolation levels to be specified . 
Find the JTA UserTransaction through a default JNDI lookup : `` java : comp/UserTransaction '' . 
Find the JTA TransactionManager through autodetection : checking whether the UserTransaction object implements the TransactionManager , and checking the fallback JNDI locations . 
Find the JTA 1.1 TransactionSynchronizationRegistry through autodetection : checking whether the UserTransaction object or TransactionManager object implements it , and checking Java EE 5 's standard JNDI location . 
gets a JTA transaction object for the given current UserTransaction . 
returns the JTA UserTransaction object for the current transaction . 
returns the JTA TransactionManager that this adapter delegates to . 
sets the underlying JTA transaction to rollback-only . 
creates an active Transaction object based on the given name and timeout . 
returns the JTA TransactionManager that this adapter delegates to . 
sets the WebSphere UOWManager to use as direct reference . 
sets the JNDI name of the WebSphere UOWManager . 
returns a currently active transaction or creates a new one , according to the specified propagation behavior . 
creates a new savepoint . 
sets the transaction synchronization by the name of the corresponding constant in this class , e.g. `` SYNCHRONIZATION_ALWAYS '' . 
sets when this transaction manager should activate the thread-bound transaction synchronization support . 
returns if this transaction manager should activate the thread-bound transaction synchronization support . 
returns the default timeout that this transaction manager should apply if there is no timeout specified at the transaction level , in seconds . 
sets whether nested transactions are allowed . 
returns whether nested transactions are allowed . 
sets whether existing transactions should be validated before participating in them . 
returns whether existing transactions should be validated before participating in them . 
sets whether to globally mark an existing transaction as rollback-only after a participating transaction failed . 
returns whether to globally mark an existing transaction as rollback-only after a participating transaction failed . 
sets whether to fail early in case of the transaction being globally marked as rollback-only . 
returns whether to fail early in case of the transaction being globally marked as rollback-only . 
creates a TransactionStatus for an existing transaction . 
creates a new TransactionStatus for the given arguments , also initializing transaction synchronization as appropriate . 
creates a TransactionStatus instance for the given arguments . 
returns a transaction object for the current transaction state . 
returns whether to use a savepoint for a nested transaction . 
sets the given transaction rollback-only . 
sets a savepoint for this transaction . 
gets the savepoint for this transaction , if any . 
creates a savepoint and hold it for the transaction . 
returns a SavepointManager for the underlying transaction , if possible . 
sets the propagation behavior by the name of the corresponding constant in TransactionDefinition , e.g. `` PROPAGATION_REQUIRED '' . 
sets the propagation behavior . 
sets the isolation level by the name of the corresponding constant in TransactionDefinition , e.g. `` ISOLATION_DEFAULT '' . 
sets the isolation level . 
sets the timeout to apply , as number of seconds . 
sets whether to optimize as read-only transaction . 
sets the name of this transaction . 
returns an identifying description for this transaction definition . 
returns an identifying description for this transaction definition . 
returns the underlying transaction object . 
returns whether there is an actual transaction active . 
returns if a new transaction synchronization has been opened for this transaction . 
returns if this transaction is defined as read-only transaction . 
returns whether the progress of this transaction is debugged . 
returns the holder for resources that have been suspended for this transaction , if any . 
returns whether the underlying transaction implements the SavepointManager interface . 
returns whether the resource is synchronized with a transaction . 
returns whether the resource transaction is marked as rollback-only . 
sets the timeout for this object in seconds . 
sets the timeout for this object in milliseconds . 
returns whether this object has an associated timeout . 
returns the expiration deadline of this object . 
returns the time to live for this object in seconds . 
returns the time to live for this object in milliseconds . 
sets the transaction rollback-only if the deadline has been reached , and throw a TransactionTimedOutException . 
returns whether there are still open references to this holder . 
returns the resource factory that this transaction manager operates on , e.g. a JDBC DataSource or a JMS ConnectionFactory . 
returns whether the transaction is internally marked as rollback-only . 
returns all resources that are bound to the current thread . 
returns if transaction synchronization is active for the current thread . 
returns an unmodifiable snapshot list of all registered synchronizations for the current thread . 
returns whether the current transaction is marked as read-only . 
returns the isolation level for the current transaction , if any . 
returns whether there currently is an actual transaction active . 
sets the transaction management strategy to be used . 
returns the transaction management strategy to be used . 
returns the propagation behavior . 
returns the isolation level . 
returns the transaction timeout . 
returns whether to optimize as a read-only transaction . 
returns the name of this transaction . 
returns whether this transaction internally carries a savepoint , that is , has been created as nested transaction based on a savepoint . 
sets the transaction rollback-only . 
returns whether this transaction is completed , that is , whether it has already been committed or rolled back . 
sets an application exception that was thrown before this transaction exception , preserving the original exception despite the overriding TransactionSystemException . 
returns the application exception that was thrown before this transaction exception , if any . 
returns the exception that was the first to be thrown within the failed transaction : i.e. the application exception , if any , or the TransactionSystemException 's own cause . 
Creates a TransactionInterceptor and applies it . 
returns an empty directive . 
adds a `` max-age = '' directive . 
adds a `` no-cache '' directive . 
adds a `` no-store '' directive . 
adds a `` must-revalidate '' directive . 
adds a `` no-transform '' directive . 
adds a `` public '' directive . 
adds a `` private '' directive . 
adds a `` proxy-revalidate '' directive . 
adds an `` s-maxage '' directive . 
adds a `` stale-while-revalidate '' directive . 
adds a `` stale-if-error '' directive . 
returns the `` Cache-Control '' header value . 
returns the HTTP status code of the response . 
returns the HTTP status code of the response as integer @return the HTTP status as an integer @throws IOException in case of I/O errors 
returns the HTTP status text of the response . 
adds the given headers to the given HTTP request . 
sets the connection timeout for the underlying HttpClient . 
sets the timeout in milliseconds used when requesting a connection from the connection manager using the underlying HttpClient . 
sets the socket read timeout for the underlying HttpClient . 
creates a Commons HttpMethodBase object for the given HTTP method and URI specification . 
sets the default maximum response size . 
sets the SSL context . 
Sets the underlying read timeout in milliseconds . 
Sets the underlying write timeout in milliseconds . 
Sets the underlying connect timeout in milliseconds . 
Sets the underlying read timeout in milliseconds . 
Sets the underlying write timeout in milliseconds . 
Sets the underlying connect timeout in milliseconds . 
returns the HTTP method of the request . 
returns the URI of the request . 
returns a mutable map of request cookies to send to the server . 
returns a read-only map of response cookies received from the server . 
adds the given headers to the given HTTP connection . 
Sets the number of bytes to write in each chunk when not buffering request bodies locally . 
sets if the underlying URLConnection can be sets to ` output streaming ' mode . 
sets the task executor for this request factory . 
returns the wrapped request . 
returns the method of the wrapped request . 
returns the URI of the wrapped request . 
returns the headers of the wrapped request . 
sets the request interceptors that this accessor should use . 
returns the request interceptor that this accessor uses . 
Sets the request interceptors that this accessor should use . 
returns the request interceptor that this accessor uses . 
sets the proxy type . 
sets the proxy host name . 
sets the proxy port . 
returns hints that can be used to customize how the body should be read @param streamType the original type used in the method parameter . 
returns hints that can be used to customize how the body should be read @param streamType the original type used in the method parameter . 
returns the comment of this event , if available . 
sets SSE comment . 
Returns the qualified name for the given class , according to the mapping rules in the JAXB specification . 
sets the default character sets , if any . 
returns the default character sets , if any . 
adds default headers to the output message . 
Returns the default content type for the given type . 
Returns the content length for the given type . 
Sets the cache directory . 
sets the message body converters to use . 
adds a message body converter . 
sets the default character sets to use for reading and writing form data when the request or response Content-Type header does not explicitly specify it . 
sets the character sets to use when writing multipart data to encode file names . 
returns the filename of the given multipart part . 
returns the created Gson instance . 
sets a custom inclusion strategy for serialization . 
adds mix-in annotations to use for augmenting specified class or interface . 
adds mix-in annotations to use for augmenting specified class or interface . 
sets whether to let Jackson find available modules via the JDK ServiceLoader , based on META-INF metadata in the classpath . 
sets the ClassLoader to use for loading Jackson extension modules . 
sets a custom inclusion strategy for serialization . 
adds mix-in annotations to use for augmenting specified class or interface . 
sets whether to let Jackson find available modules via the JDK ServiceLoader , based on META-INF metadata in the classpath . 
returns the singleton ObjectMapper . 
returns the POJO that needs to be serialized . 
sets the serialization view to serialize the POJO with . 
returns the serialization view to use . 
sets the Jackson filter provider to serialize the POJO with . 
returns the Jackson filter provider to use . 
sets the name of the JSONP function name . 
returns the configured JSONP function name . 
Returns the configured value for whether XML external entities are allowed . 
returns the cookie name . 
Returns the headers of this entity . 
Returns the body of this entity . 
Returns an empty list when the acceptable media types are unspecified . 
Returns -1 when the max age is unknown . 
Returns an empty sets when the allowed methods are unspecified . 
Returns -1 when the content-length is unknown . 
Returns -1 when the date is unknown . 
Returns -1 when the date is unknown . 
Returns -1 when the date is unknown . 
Returns -1 when the date is unknown . 
Returns -1 when the date is unknown . 
Returns an empty list when the range is unknown . 
returns the request header names subject to content negotiation . 
returns all values of a given header name , even if this header is sets multiple times . 
returns the first header value for the given header name , if any . 
adds the given , single header value under the given name . 
sets the given , single header value under the given name . 
returns the body of the message as an input stream . 
returns the headers of this message . 
returns the body of the message as an output stream . 
returns the start of the range given the total length of a representation . 
returns the HTTP method of the request . 
returns the URI of the request . 
returns the integer value of this status code . 
returns the reason phrase of this status code . 
Returns the HTTP status series of this status code . 
returns a string representation of this status code . 
returns the enum constant of this type with the specified numeric value . 
returns the integer value of this status series . 
returns the offending media type . 
returns a replica of this instance with the quality value of the given MediaType . 
returns a replica of this instance with its quality value removed . 
returns the HTTP method of the request . 
returns the URL of the request . 
returns the type of the request 's body . 
creates a builder with the given method and url . 
creates an HTTP gets builder with the given url . 
creates an HTTP HEAD builder with the given url . 
creates an HTTP POST builder with the given url . 
creates an HTTP PUT builder with the given url . 
creates an HTTP PATCH builder with the given url . 
creates an HTTP DELETE builder with the given url . 
Creates an HTTP OPTIONS builder with the given url . 
adds the given , single header value under the given name . 
sets the body of the request entity and build the RequestEntity . 
sets the body and type of the request entity and build the RequestEntity . 
returns the cookie `` Max-Age '' attribute in seconds . 
returns the cookie `` Domain '' attribute . 
returns the cookie `` Path '' attribute . 
sets the cookie `` Max-Age '' attribute . 
sets the cookie `` Max-Age '' attribute in seconds . 
sets the cookie `` Path '' attribute . 
sets the cookie `` Domain '' attribute . 
adds the `` Secure '' attribute to the cookie . 
adds the `` HttpOnly '' attribute to the cookie . 
creates the HttpCookie . 
returns the HTTP status code of the response . 
returns the HTTP status code of the response . 
creates a builder with the given status . 
creates a builder with the given status . 
adds the given , single header value under the given name . 
sets the body of the response entity and returns it . 
Creates a new processor for subscribing to a body chunk . 
returns a read-only map with parsed and decoded query parameter values . 
returns a read-only map of cookies sent by the client . 
sets the HTTP status code of the response . 
returns a mutable map with the cookies to send to the server . 
returns whether asynchronous request processing has been started . 
returns whether asynchronous request processing has been completed . 
returns the address on which the request was received . 
returns the address of the remote client . 
returns a control that allows putting the request in asynchronous mode so the response remains open until closed explicitly from the current or another thread . 
sets the HTTP status code of the response . 
sets the streaming body for this message . 
sets the HessianProxyFactory instance to use . 
sets whether to send the Java collection type for each serialized collection . 
sets whether to allow non-serializable types as Hessian arguments and returns values . 
sets whether overloaded methods should be enabled for remote invocations . 
sets the username that this factory should use to access the remote service . 
sets the password that this factory should use to access the remote service . 
sets whether Hessian 's debug mode should be enabled . 
sets whether to use a chunked post for sending a Hessian request . 
sets the socket connect timeout to use for the Hessian client . 
sets the timeout to use when waiting for a reply from the Hessian service . 
sets whether version 2 of the Hessian protocol should be used for parsing requests and replies . 
sets whether version 2 of the Hessian protocol should be used for parsing requests . 
sets whether version 2 of the Hessian protocol should be used for parsing replies . 
creates the Hessian proxy that is wrapped by this interceptor . 
sets whether to send the Java collection type for each serialized collection . 
sets whether to allow non-serializable types as Hessian arguments and returns values . 
sets whether Hessian 's debug mode should be enabled , logging to this exporter 's Commons Logging log . 
returns the content type to use for sending HTTP invoker requests . 
sets whether to accept GZIP encoding , that is , whether to send the HTTP `` Accept-Encoding '' header with `` gzip '' as value . 
returns whether to accept GZIP encoding , that is , whether to send the HTTP `` Accept-Encoding '' header with `` gzip '' as value . 
returns the bean ClassLoader that this executor is supposed to use . 
returns the OutputStream to use for writing remote invocations , potentially decorating the given original OutputStream . 
returns the InputStream to use for reading remote invocation results , potentially decorating the given original InputStream . 
creates an ObjectInputStream for the given InputStream and codebase . 
sets the connection timeout for the underlying HttpClient . 
sets the timeout in milliseconds used when requesting a connection from the connection manager using the underlying HttpClient . 
sets the socket read timeout for the underlying HttpClient . 
creates a HttpPost for the given configuration . 
sets the given serialized remote invocation as request body . 
returns the HTTP URL of the target service . 
returns the codebase URL to download classes from if not found locally . 
sets the codebase URL to download classes from if not found locally . 
returns the codebase URL to download classes from if not found locally . 
sets the HttpInvokerRequestExecutor implementation to use for executing remote invocations . 
returns the HttpInvokerRequestExecutor used by this remote accessor . Creates a default SimpleHttpInvokerRequestExecutor if no executor has been initialized already . 
returns the InputStream to use for reading remote invocations , potentially decorating the given original InputStream . 
returns the OutputStream to use for writing remote invocation results , potentially decorating the given original OutputStream . 
sets the given serialized remote invocation as request body . 
returns the InputStream to use for reading remote invocations , potentially decorating the given original InputStream . 
returns the OutputStream to use for writing remote invocation results , potentially decorating the given original OutputStream . 
sets the property bag for the endpoint , including properties such as `` javax.xml.ws.wsdl.service '' or `` javax.xml.ws.wsdl.port '' . 
sets the JDK concurrent executor to use for dispatching incoming requests to exported service instances . 
creates the actual Endpoint instance . 
returns a reference to an existing JAX-WS Service instance , if any . 
sets the name of the port . 
returns the name of the port . 
sets the username to specify on the stub . 
returns the username to specify on the stub . 
sets the password to specify on the stub . 
returns the password to specify on the stub . 
sets the endpoint address to specify on the stub . 
returns the endpoint address to specify on the stub . 
sets the `` session.maintain '' flag to specify on the stub . 
returns the `` session.maintain '' flag to specify on the stub . 
sets the `` soapaction.use '' flag to specify on the stub . 
returns the `` soapaction.use '' flag to specify on the stub . 
sets the SOAP action URI to specify on the stub . 
returns the SOAP action URI to specify on the stub . 
sets custom properties to be sets on the stub . 
adds a custom property to this JAX-WS BindingProvider . 
sets the interface of the service that this factory should creates a proxy for . 
returns the interface of the service that this factory should creates a proxy for . 
sets whether to look up the JAX-WS service on startup . 
returns the bean ClassLoader to use for this interceptor . 
returns whether this client interceptor has already been prepared , i.e. has already looked up the JAX-WS service and port . 
returns the prepared QName for the port . 
returns the underlying JAX-WS port stub that this interceptor delegates to for each method invocation on the proxy . 
returns the wrapped JAX-WS SOAPFault . 
sets the URL of the WSDL document that describes the service . 
returns the URL of the WSDL document that describes the service . 
sets the namespace URI of the service . 
returns the namespace URI of the service . 
sets the name of the service to look up . 
returns the name of the service . 
sets the JDK concurrent executor to use for asynchronous executions that require callbacks . 
sets the JAX-WS HandlerResolver to use for all proxies and dispatchers created through this factory . 
creates a JAX-WS Service according to the parameters of this factory . 
returns a QName for the given name , relative to the namespace URI of this factory , if given . 
sets the base path for context publication . 
sets the base address for exported services . 
returns the configured content negotiation strategies . 
adds a mapping from a key , extracted from a path extension or a query parameter , to a MediaType .   
sets the default content type to use when no content type is requested . 
returns all registered file extensions . 
sets the name of the parameter to use to determine requested media types . 
returns the method parameter that failed validation . 
returns the results of the failed validation . 
returns the expected name of the path variable . 
returns the method parameter bound to the path variable . 
returns the name of the offending parameter . 
returns the expected type of the offending parameter . 
gets an int parameter , with a fallback value . 
gets an array of int parameters , returns an empty array if not found . 
gets an int parameter , throwing an exception if it is n't found or is n't a number . 
gets an array of int parameters , throwing an exception if not found or one is not a number . . 
gets a long parameter , with a fallback value . 
gets an array of long parameters , returns an empty array if not found . 
gets a long parameter , throwing an exception if it is n't found or is n't a number . 
gets an array of long parameters , throwing an exception if not found or one is not a number . 
gets a float parameter , with a fallback value . 
gets an array of float parameters , returns an empty array if not found . 
gets a float parameter , throwing an exception if it is n't found or is n't a number . 
gets an array of float parameters , throwing an exception if not found or one is not a number . 
gets a double parameter , with a fallback value . 
gets an array of double parameters , returns an empty array if not found . 
gets a double parameter , throwing an exception if it is n't found or is n't a number . 
gets an array of double parameters , throwing an exception if not found or one is not a number . 
gets a boolean parameter , with a fallback value . 
gets an array of boolean parameters , returns an empty array if not found . 
gets a boolean parameter , throwing an exception if it is n't found or is n't a boolean . 
gets an array of boolean parameters , throwing an exception if not found or one is n't a boolean . 
gets a String parameter , with a fallback value . 
gets an array of String parameters , returns an empty array if not found . 
gets a String parameter , throwing an exception if it is n't found . 
gets an array of String parameters , throwing an exception if not found . 
sets whether a binder should attempt to `` auto-grow '' a nested path that contains a null value . 
returns whether a binder should attempt to `` auto-grow '' a nested path that contains a null value . 
sets whether to use direct field access instead of bean property access . 
returns whether to use direct field access instead of bean property access . 
sets the strategy to use for resolving errors into message codes . 
returns the strategy to use for resolving errors into message codes . 
returns the strategy to use for processing binding errors . 
sets the Validator to apply after each binding step . 
returns the Validator to apply after each binding step , if any . 
returns the ConversionService which will apply to every DataBinder . 
returns the PropertyEditorRegistrars to be applied to every DataBinder . 
returns whether the current handler 's session processing has been marked as complete . 
returns the parameter conditions that have been violated or the first group in case of multiple groups . 
returns all parameter condition groups that have been violated . 
returns the actual parameter Map associated with the ServletRequest . 
sets this to null if you want to turn off the empty field check completely . 
returns the prefix for parameters that mark potentially empty fields . 
sets this to null if you want to turn off the field defaults completely . 
returns the prefix for parameters that mark default fields . 
sets whether to bind empty MultipartFile parameters . 
returns whether to bind empty MultipartFile parameters . 
creates or update a resource by PUTting the given object to the URI . 
Creates a new resource by PUTting the given object to URI template . 
Creates a new resource by PUTting the given object to URL . 
sets the error handler . 
returns the error handler . 
returns the configured URI template handler . 
sets the message body converters to use . 
returns the message body converters . 
Returns a request callback implementation that writes the given object to the request stream . 
Returns a request callback implementation that writes the given object to the request stream . 
returns the HTTP status code . 
adds an HTTP request header 
adds all provided HTTP request headers 
sets the Content-Type request header to the given media type 
sets the Accept request header to the given media types 
adds a Cookie to the HTTP request 
adds a Cookie to the HTTP request 
adds default HTTP message readers . 
adds default HTTP message writers . 
returns the message readers that can help decoding the HTTP response body 
returns the message writers that can help encode the HTTP request body 
returns the HTTP status 
returns the HTTP response headers 
returns the raw HTTP status code value . 
returns the HTTP status text . 
returns the HTTP response headers . 
returns the response body as a byte array . 
returns the response body as a string . 
creates a new resource by POSTing the given object to the URI template , and returns the representation found in the response . 
creates a new resource by POSTing the given object to the URI template , and returns the representation found in the response . 
creates a new resource by POSTing the given object to the URL , and returns the representation found in the response . 
creates or update a resource by PUTting the given object to the URI . 
Creates a new resource by PUTting the given object to URI template . 
Creates a new resource by PUTting the given object to URL . 
returns the value of the Allow header for the given URI . 
returns the value of the Allow header for the given URI . 
returns the value of the Allow header for the given URL . 
sets the message body converters to use . 
returns the message body converters . 
sets the error handler . 
returns the error handler . 
returns the configured URI template handler . 
Returns a request callback implementation that writes the given object to the request stream . 
Returns a request callback implementation that writes the given object to the request stream . 
sets the ServletContext for this web application context . 
sets the ServletConfig for this web application context . 
returns the ServletConfig for this web application context , if any . 
sets the namespace for this web application context , to be used for building a default context config location . 
returns the namespace for this web application context , if any . 
sets the config locations for this web application context in init-param style , i.e. with distinct locations separated by commas , semicolons or whitespace . 
sets the config locations for this web application context . 
returns the WebApplicationContext implementation class to use , either the default XmlWebApplicationContext or a custom context class if specified . 
removes the request destruction callback for the specified attribute , if any . 
sets the time required for concurrent handling to complete . 
adds a handler to invoke when concurrent handling has timed out . 
adds a handle to invoke when request processing completes . 
Returns `` false '' if asynchronous processing never started , has completed , or the request was dispatched for further processing . 
returns the configured timeout value in milliseconds . 
sets the value for the DeferredResult and handle it . 
creates an AsyncWebRequest instance . 
returns the JSF FacesContext that this adapter operates on . 
returns the JSF ExternalContext that this adapter operates on . 
returns the underlying native request object , if available . 
returns the underlying native response object , if available . 
returns the underlying native request object , if available . 
returns the underlying native response object , if available . 
returns the value for the scoped attribute of the given name , if any . 
removes the scoped attribute of the given name , if it exists . 
returns an id for the current underlying session . 
returns the RequestAttributes currently bound to the thread . 
returns the RequestAttributes currently bound to the thread . 
returns the HTTP method of the request . 
returns a Iterator over request header names . 
returns a Iterator over request parameter names . 
returns a immutable Map of the request parameters , with parameter names as map keys and parameter values as map values . 
returns the primary Locale for this request . 
returns the remote user for this request , if any . 
returns the user principal for this request , if any . 
gets a short description of this request , typically containing request URI and session id . 
returns the WebApplicationContext that this request runs in . 
sets the ServletContext that this WebApplicationContext runs in . 
returns the processing time of the request in milliseconds . 
returns the id of the HTTP session , if any . 
returns whether the request failed . 
returns the cause of failure , if any . 
returns a short description of this event , only involving the most important context data . 
returns a full description of this event , involving all available context data . 
sets the ServletContext attributes to expose as key-value pairs . 
sets the name of the ServletContext attribute to expose . 
sets the name of the ServletContext init parameter to expose . 
returns the ServletContext for this resource . 
returns the path for this resource . 
returns the URL of the request . 
returns the IP address that the request came from . 
returns the name of the servlet that handled the request . 
returns the HTTP status code of the response or -1 if the status code is not available . 
sets the ServletContext that this WebApplicationContext runs in . 
returns the current RequestAttributes instance as ServletRequestAttributes . 
returns the current application context as WebApplicationContext . 
returns the current ServletContext . 
returns the temporary directory for the current web application , as provided by the servlet container . 
returns the standard Servlet API ServletContext for this application . 
adds an origin to allow . 
adds an HTTP method to allow . 
adds an HTTP method to allow . 
sets the list of headers that a pre-flight request can list as allowed for use during an actual request . 
adds an actual request header to allow . 
adds a response header to expose . 
sets the PathMatcher implementation to use for matching URL paths against registered URL patterns . 
sets if URL lookup should always use the full path within the current servlet context . 
sets if context path and request URI should be URL-decoded . 
sets the UrlPathHelper to use for resolution of lookup paths . 
sets CORS configuration based on URL patterns . 
gets the CORS configuration . 
sets whether the query string should be included in the log message . 
returns whether the query string should be included in the log message . 
sets whether the client address and session id should be included in the log message . 
returns whether the client address and session id should be included in the log message . 
sets whether the request headers should be included in the log message . 
returns whether the request headers should be included in the log message . 
Sets the maximum length of the payload body to be included in the log message . 
returns the maximum length of the payload body to be included in the log message . 
sets the value that should be prepended to the log message written <i> before </i> a request is processed . 
sets the value that should be appended to the log message written <i> before </i> a request is processed . 
sets the value that should be prepended to the log message written <i> after </i> a request is processed . 
sets the value that should be appended to the log message written <i> after </i> a request is processed . 
gets the message to write to the log before the request . 
gets the message to write to the log after the request . 
creates a log message for the given request , prefix and suffix . 
sets the encoding to use for requests . 
returns whether the encoding should be forced on responses . 
sets the name of the target bean in the Spring application context . 
returns the name of the target bean in the Spring application context . 
sets the parameter name to look for HTTP methods . 
returns the name of the request attribute that identifies that a request is already filtered . 
Returns `` false '' so that the filter may sets up the request context in each asynchronously dispatched thread . 
Returns `` false '' so that the filter may sets up the request context in an error dispatch . 
sets whether the ETag value written to the response should be weak , as per RFC 7232 . 
returns whether the ETag value written to the response should be weak , as per RFC 7232 . 
returns the list of supported media types . 
returns the HTTP request content type method that caused the failure . 
returns the HTTP request method that caused the failure . 
returns the actually supported HTTP methods , if known . 
returns the name of the expected session attribute , if any . 
returns the target NavigationHandler to delegate to . 
returns the name of the target NavigationHandler bean in the BeanFactory . 
returns the best available mutex for the given session : that is , an object to synchronize on for the given session . 
creates a new NamedValueInfo based on the given NamedValueInfo with sanitized values . 
returns the name of the method argument . 
returns the target method parameter . 
returns the name of the method argument . 
returns the target method parameter . 
returns the type of the contained bean . 
returns a bean instance if necessary resolving the bean name through the BeanFactory . 
Returns the bean for this handler method . 
Returns the method for this handler method . 
Returns the method parameters for this handler method . 
returns the HandlerMethod returns type . 
returns the actual returns value type . 
Returns a single annotation on the underlying method traversing its super methods if no annotation can be found on the given method itself . 
returns whether the parameter is declared with the given annotation type . 
returns a short representation of this handler method for log message purposes . 
returns a read-only list with the contained resolvers , or an empty list . 
returns a read-only list with the registered handlers , or an empty list . 
gets the method argument values for the current request . 
Adds HandlerMethod details such as the controller type and method signature to the given error message . 
sets a view name to be resolved by the DispatcherServlet via a ViewResolver . 
sets a View object to be used by the DispatcherServlet . 
returns the model to use -- either the `` default '' or the `` redirect '' model . 
returns the `` default '' model created at instantiation . 
returns the configured HTTP status , if any . 
adds the supplied attribute to the underlying model . 
adds the supplied attribute to the underlying model . 
removes the given attributes from the model . 
returns diagnostic information . 
sets the default character encoding to use for parsing requests , to be applied to headers of individual parts and to form fields . 
sets the temporary directory where uploaded files gets stored . 
returns a description for the storage location of the multipart content . 
sets whether to resolve the multipart request lazily at the time of file or parameter access . 
returns the maximum upload size allowed . 
returns the name of the parameter in the multipart form . 
returns the original filename in the client 's filesystem . 
returns the content type of the file . 
returns whether the uploaded file is empty , that is , either no file has been chosen in the multipart form or the chosen file has no content . 
returns the size of the file in bytes . 
returns the contents of the file as an array of bytes . 
returns an InputStream to read the contents of the file from . 
returns this request 's method as a convenient HttpMethod instance . 
returns this request 's headers as a convenient HttpHeaders instance . 
returns the headers associated with the specified part of the multipart request . 
returns the contents plus description of uploaded files in this request , or an empty list if it does not exist . 
sets a Map with parameter names as keys and list of MultipartFile objects as values . 
sets a Map with parameter names as keys and String array objects as values . 
sets a Map with parameter names as keys and content type Strings as values . 
sets the bean name of the MultipartResolver to fetch from Spring 's root application context . 
returns the bean name of the MultipartResolver to fetch from Spring 's root application context . 
sets whether to resolve the multipart request lazily at the time of file or parameter access . 
adds the given filters to use for processing requests . 
adds the given exception handler to apply at the end of request processing . 
returns a read-only list of the configured exception handlers . 
returns a read-only list of the configured filters . 
returns the list of supported content types in cases when the Accept header is parsed but not supported , or an empty list otherwise . 
returns the HTTP method for the failed request . 
returns the list of supported HTTP methods . 
returns the list of supported content types in cases when the Accept header is parsed but not supported , or an empty list otherwise . 
returns the current HTTP request . 
returns the current HTTP response . 
returns a mutable map of request attributes for the current exchange . 
returns the request attribute value if present . 
returns the web session for the current request .  
sets the name of the cookie to use for the session id . 
returns the configured cookie name . 
sets the value for the `` Max-Age '' attribute of the cookie that holds the session id .  
returns the configured `` Max-Age '' attribute value for the session cookie . 
returns the configured clock for access to current time . 
removes the session with the given id . 
returns the request Content-Type header if it was parsed successfully . 
returns the list of supported content types in cases when the Content-Type header is parsed but not supported , or an empty list otherwise . 
returns a unique session identifier . 
returns a map that holds session attributes . 
returns the attribute value if present . 
returns the time when the session was created . 
returns the last time of session access as a result of user activity such as an HTTP request . 
returns the configured base URL . 
returns a read-only copy of the configured default URI variables . 
returns the cached request content as a byte array . 
returns the status code as specified on the response . 
returns the cached response content as a byte array . 
returns the current size of the cached content . 
returns the given name for cookies created by this generator . 
returns the domain for cookies created by this generator , if any . 
returns the path for cookies created by this generator . 
returns the maximum age for cookies created by this generator . 
sets whether the cookie is supposed to be marked with the `` HttpOnly '' attribute . 
returns whether the cookie is supposed to be marked with the `` HttpOnly '' attribute . 
adds a cookie with the given value to the response , using the cookie descriptor settings of this generator . 
removes the cookie that this generator describes from the response . 
Returns the map of query parameters . 
returns the number of supported entity references . 
returns true if the given character is mapped to a supported entity reference . 
returns true if the given character is mapped to a supported entity reference . 
returns the char mapped to the given entityReference or -1 . 
sets if the request path should be URL-decoded . 
returns the detail message , including the message from the nested exception if there is one . 
Returns the scheme . 
Returns the scheme specific part . 
Returns the user info . 
Returns the host . 
Returns the port . 
Returns the path . 
Returns the list of path segments . 
Returns the query . 
Returns the map of query parameters . 
Returns the fragment . 
sets all components of the given UriComponentsBuilder . 
gets the value for the given URI variable name . 
creates a new , empty builder . 
creates a builder that is initialized with the given path . 
creates a builder that is initialized with the given URI string . 
creates a URI components builder from the given HTTP URL String . 
creates an instance by parsing the `` Origin '' header of an HTTP request . 
sets the URI scheme . 
sets the URI scheme-specific-part . 
sets the URI user info . 
sets the URI host . 
sets the URI port . 
sets the URI port . 
sets the path of this builder overriding all existing path and path segment values . 
sets the query of this builder overriding all existing query parameters . 
adds the given query parameters . 
sets the query parameter values overriding all existing query values for the same parameter . 
sets the query parameter values overriding all existing query values . 
sets the URI fragment . 
returns the names of the variables in the template , in order . 
sets if URL lookup should always use full path within current servlet context . 
sets if context path and request URI should be URL-decoded . 
sets the default character encoding to use for URL decoding . 
returns the default character encoding to use for URL decoding . 
returns the mapping lookup path for the given request , within the current servlet mapping if applicable , else within the web application . 
returns the path within the servlet mapping for the given request , i.e. the part of the request 's URL beyond the part that called the servlet , or '' '' if the whole URL has been used to identify the servlet . 
returns the path within the web application for the given request . 
returns the request URI for the given request , detecting an include request URL if called within a RequestDispatcher include . 
returns the context path for the given request , detecting an include request URL if called within a RequestDispatcher include . 
returns the servlet path for the given request , regarding an include request URL if called within a RequestDispatcher include . 
returns the request URI for the given request . 
returns the context path for the given request , detecting an include request URL if called within a RequestDispatcher include . 
returns the servlet path for the given request , detecting an include request URL if called within a RequestDispatcher include . 
returns the query string part of the given request 's URL . 
sets a system property to the web application root directory . 
removes the system property that points to the web app root directory . 
returns whether response encoding should be used when HTML escaping characters , thus only escaping XML markup significant characters with UTF - encodings . 
returns the temporary directory for the current web application , as provided by the servlet container . 
returns the real path of the given path within the web application , as provided by the servlet container . 
Returns null if there is no session or if the session has no such attribute . 
sets the session attribute with the given name to the given value . Removes the session attribute if value is null , if a session existed at all . 
returns the best available mutex for the given session : that is , an object to synchronize on for the given session . 
returns an appropriate request object of the specified type , if available , unwrapping the given request as far as necessary . 
returns an appropriate response object of the specified type , if available , unwrapping the given response as far as necessary . 
returns a map containing all parameters with the given prefix . 
returns a copy of the actual headers written at the time of the call to getResponseBody , i.e. ignoring any further changes that may have been made to the underlying headers , e.g. via a previously obtained instance . 
Find a HeaderValueHolder by name , ignoring casing . 
returns the ServletContext that this request is associated with . 
sets the content of the request body as a byte array . 
gets the content of the request body as a byte array . 
sets a single value for the specified HTTP parameter . 
sets an array of values for the specified HTTP parameter . 
Sets all provided parameters replacing any existing values for the provided parameter names . 
adds a single value for the specified HTTP parameter . 
adds an array of values for the specified HTTP parameter . 
Adds all provided parameters without replacing any existing values . 
removes already registered values for the specified HTTP parameter , if any . 
Removes all existing parameters . 
adds a new preferred locale , before any existing locales . 
sets the list of preferred locales , in descending order , effectively replacing any existing locales . 
adds a header entry for the given name .     
returns whether the character encoding has been sets . 
returns the names of all specified headers as a sets of Strings . 
returns the primary value for the given header as a String , if any . 
returns all values for the given header as a List of Strings . 
returns the primary value for the given header , if any . 
returns all values for the given header as a List of value objects . 
adds a file to this request . 
returns a read-only list of the configured resolvers . 
sets the name of the parameter to use to determine requested media types . 
adds a mapping from a key , extracted from a path extension or a query parameter , to a MediaType .   
sets the default content type to use when no content type is requested . 
sets the PathMatcher for matching URL paths against registered URL patterns . 
adds a resource resolver to the chain . 
adds a resource transformer to the chain . 
adds one or more resource locations from which to serve static content . 
Returns the URL path patterns for the resource handler . 
adds a resource handler for serving static resources based on the specified URL path patterns .  
sets the prefix that gets prepended to view names when building a URL . 
sets the suffix that gets appended to view names when building a URL . 
sets the view class that should be used to creates views . 
sets default views associated with any view name and selected based on the best match for the requested content type . 
returns a handler mapping ordered at Integer.MAX _ VALUE-1 with mapped resource handlers . 
returns the type contained in the body . 
returns the name of the template to be rendered . 
returns the unmodifiable model map . 
returns the HTTP method . 
returns the request URI . 
returns the request path . 
returns the headers of this request . 
returns the request attribute value if present . 
returns the first query parameter with the given name , if present . 
returns all query parameter with the given name . Returns an empty list if no values could be found . 
returns the path variable with the given name , if present . 
returns all path variables . 
Returns an empty list when the acceptable media types are unspecified . 
Returns an empty list when the range is unknown . 
returns an empty list if no header values are found . 
returns a predicate that represents the logical negation of this predicate . 
returns the status code of this response . 
returns the headers of this response . 
returns the body of this response . 
creates a builder with the status code and headers of the given response . 
creates a builder with the given status . 
creates a builder with the given status . 
adds the given message reader to this builder . 
adds the given message writer to this builder . 
adds the given view resolver to this builder . 
returns the wrapped request . 
sets if the path should be URL-decoded . 
sets the PathMatcher implementation to use for matching URL paths against registered URL patterns . 
returns the PathMatcher implementation to use for matching URL paths against registered URL patterns . 
sets whether to lazily initialize handlers . 
returns a handler for this request . 
returns the handler that handled the request . 
returns the type of the value returned from the handler . 
returns the model used during request handling with attributes that may be used to render HTML templates with . 
returns the keyword to use to search for links . 
Find the resource under the given location . 
returns the list of configured resource resolvers . 
returns the list of configured resource transformers . 
returns the configured resource message writer . 
sets headers on the response . 
removes the version from the request path . 
adds a version to the given request path . 
returns the map with version strategies keyed by path pattern . 
returns the discrete items a request condition is composed of . 
returns the contained MediaType expressions . 
Returns the media types for this condition excluding negated expressions . 
Returns the `` other '' instance if it has any expressions ; returns `` this '' instance otherwise . 
returns the contained request header expressions . 
Returns a new instance with the union of the header expressions from `` this '' and the `` other '' instance . 
returns the contained request parameter expressions . 
Returns a new instance with the union of the param expressions from `` this '' and the `` other '' instance . 
Find the patterns matching the given lookup path . 
returns the contained `` produces '' expressions . 
returns the contained producible media types excluding negated expressions . 
Returns the `` other '' instance if it has any expressions ; returns `` this '' instance otherwise . 
gets the matching condition for the held request condition wrap it in a new RequestConditionHolder instance . 
Returns a new instance with a union of the HTTP request methods from `` this '' and the `` other '' instance . 
sets the order for this result handler relative to others .  
returns the internal mapping registry . 
creates the HandlerMethod instance . 
returns a comparator for sorting matching mappings . 
returns all mappings and handler methods . 
returns matches for the given URL path . 
returns the configured message converters . 
returns the configured message converters . 
creates a new NamedValueInfo based on the given NamedValueInfo with sanitized values . 
returns a Map with all URI template variables or an empty map . 
returns the custom argument resolvers . 
returns the configured argument resolvers . 
returns the configured message readers . 
returns the configured ConversionService . 
returns the configured Validator . 
returns the file extensions to use for suffix pattern matching . 
sets the path patterns . 
sets the request method conditions . 
sets the request param conditions . 
sets the header conditions . 
sets the consumes conditions . 
sets the produces conditions . 
sets the mapping name . 
sets a custom condition to use . 
sets a custom UrlPathHelper to use for the PatternsRequestCondition . 
sets a custom PathMatcher to use for the PatternsRequestCondition . 
returns the file extensions to use for suffix pattern matching . 
sets the ContentNegotiationManager to use for the ProducesRequestCondition . 
returns declared HTTP methods . 
returns declared `` consumable '' types but only among those that also match the `` methods '' condition . 
returns declared `` producible '' types but only among those that also match the `` methods '' and `` consumes '' conditions . 
returns declared `` params '' conditions but only among those that also match the `` methods '' , `` consumes '' , and `` params '' conditions . 
sets the URL of the resource that this view wraps . 
returns the URL of the resource that this view wraps . 
sets the supported media types for this view . 
returns the configured media types supported by this view . 
returns the FreeMarker Configuration object for the current web application context . 
sets a pre-configured Configuration to use for the FreeMarker web config , e.g. a shared one for web and email usage . 
Sets up a ClassTemplateLoader to use for loading Spring macros . 
returns the Configuration object wrapped by this bean . 
sets the FreeMarker Configuration to be used by this view . 
returns the FreeMarker configuration used by this view . 
sets the encoding of the FreeMarker template file . 
returns the encoding for the FreeMarker template . 
returns the configured message messageWriter . 
returns the configured model keys . 
returns the view class to be used to creates views . 
returns the required type of view for this resolver . 
sets the prefix that gets prepended to view names when building a URL . 
returns the prefix that gets prepended to view names when building a URL . 
sets the suffix that gets appended to view names when building a URL . 
returns the suffix that gets appended to view names when building a URL . 
Creates a new View instance of the specified view class and configures it . 
returns the list of media types this View supports , or an empty list . 
returns a read-only list of view resolvers . 
sets the default views to consider always when resolving view names and trying to satisfy the best matching content type . 
sets the supported media types for this view . 
returns the configured media types supported by this view . 
adds a mapping from a key , extracted from a path extension or a query parameter , to a MediaType .   
sets the default content type to use when no content type is requested . 
adds URL patterns to which the registered interceptor should apply to . 
adds URL patterns to which the registered interceptor should not apply to . 
Returns the underlying interceptor . 
Returns all registered interceptors . 
sets the UrlPathHelper to use for resolution of lookup paths . 
sets the PathMatcher implementation to use for matching URL paths against registered URL patterns . 
sets the specific redirect 3xx status code to use . 
adds a resource resolver to the chain . 
adds a resource transformer to the chain . 
adds one or more resource locations from which to serve static content . 
sets to 0 in order to send cache headers that prevent caching , or to a positive number of seconds to send cache headers with the given max-age value . 
Returns the URL path patterns for the resource handler . 
adds a resource handler for serving static resources based on the specified URL path patterns .  
sets the prefix that gets prepended to view names when building a URL . 
sets the suffix that gets appended to view names when building a URL . 
sets the view class that should be used to creates views . 
sets static attributes to be added to the model of every request for all views resolved by this view resolver . 
sets the status code to sets on the response . 
sets the view name to returns . 
returns a handler mapping ordered at 1 to map URL paths directly to view names . 
returns a handler mapping ordered at Integer.MAX _ VALUE-1 with mapped resource handlers . 
returns a handler mapping ordered at Integer.MAX _ VALUE with a mapped default servlet handler . 
Adds a sets of default HttpMessageConverter instances to the given list . 
adds Spring MVC lifecycle interceptors for pre - and post-processing of controller method invocations . 
adds handlers to serve static resources such as images , js , and , css files from specific locations under web application root , the classpath , and others . 
adds resolvers to support custom controller method argument types . 
adds handlers to support custom controller method returns value types . 
sets whether to detect all HandlerMapping beans in this servlet 's context . 
sets whether to detect all HandlerAdapter beans in this servlet 's context . 
sets whether to detect all HandlerExceptionResolver beans in this servlet 's context . 
sets whether to detect all ViewResolver beans in this servlet 's context . 
sets whether to throw a NoHandlerFoundException when no Handler was found for this request . 
sets whether to perform cleanup of request attributes after an include request , that is , whether to reset the original state of all request attributes after the DispatcherServlet has processed within an include request . 
returns the default strategy object for the given strategy interface . 
creates a List of default strategy objects for the given strategy interface . 
creates a default strategy . 
returns the HandlerExecutionChain for this request . 
returns the HandlerAdapter for this handler object . 
returns the parameters identifying the target request , or an empty map . 
sets the expiration time for the FlashMap . 
returns the expiration time for the FlashMap or -1 if the expiration period has not started . 
Find a FlashMap saved by a previous request that matches to the current request , removes it from underlying storage , and also removes other expired FlashMap instances . 
sets a custom context class . 
returns the custom context class . 
returns the custom WebApplicationContext id , if any . 
sets a custom namespace for this servlet , to be used for building a default context config location . 
returns the namespace for this servlet , falling back to default scheme if no custom namespace was sets : e.g. `` test-servlet '' for a servlet named `` test '' . 
sets the context config location explicitly , instead of relying on the default location built from the namespace . 
returns the explicit context config location , if any . 
sets whether to publish this servlet 's context as a ServletContext attribute , available to all objects in the web container . 
sets whether this servlet should publish a ServletRequestHandledEvent at the end of each request . 
Creates this servlet 's WebApplicationContext . 
returns the ServletContext attribute name for this servlet 's WebApplicationContext . 
returns this servlet 's WebApplicationContext . 
sets whether to detect handler beans in ancestor ApplicationContexts . 
sets the log category for warn logging . 
sets the default handler for this handler mapping . 
sets if URL lookup should always use the full path within the current servlet context . 
sets if context path and request URI should be URL-decoded . 
sets the UrlPathHelper to use for resolution of lookup paths . 
returns the UrlPathHelper implementation to use for resolution of lookup paths . 
sets the PathMatcher implementation to use for matching URL paths against registered URL patterns . 
returns the PathMatcher implementation to use for matching URL paths against registered URL patterns . 
sets the interceptors to apply for all handlers mapped by this handler mapping . 
sets `` global '' CORS configuration based on URL patterns . 
gets the CORS configuration . 
returns the handler methods for the given mapping name . 
returns the internal mapping registry . 
creates the HandlerMethod instance . 
returns a comparator for sorting matching mappings . 
returns all mappings and handler methods . 
returns matches for the given URL path . 
returns handler methods by mapping name . 
returns CORS configuration . 
sets whether to lazily initialize handlers . 
sets the list of exception resolvers to delegate to . 
returns the list of exception resolvers to delegate to . 
returns the configured HandlerMapping 's . 
sets the mappings between exception class names and error view names . 
sets one or more exceptions to be excluded from the exception mappings . 
sets the name of the default error view . 
sets the HTTP status code that this exception resolver will apply for a given resolved error view . 
sets the default HTTP status code that this exception resolver will apply if it resolves an error view and if there is no status code mapping defined . 
sets the name of the model attribute as which the exception should be exposed . 
Find a matching view name in the given exception mappings . 
returns the depth to the superclass matching . Returns -1 if there 's no match . 
returns a ModelAndView for the given request , view name and exception . 
returns a ModelAndView for the given view name and exception . 
sets the roles that this interceptor should treat as authorized . 
returns the handler object to execute . 
returns a handler and any interceptors for this request . 
sets a default TimeZone that this resolver will returns if no other time zone found . 
returns the default TimeZone that this resolver is supposed to fall back to , if any . 
sets a default Locale that this resolver will returns if no other locale found . 
returns the default Locale that this resolver is supposed to fall back to , if any . 
returns the configured list of supported locales . 
returns whether this resolver 's cookies should be compliant with BCP 47 language tags instead of Java 's legacy locale specification format . 
sets a fixed Locale that this resolver will returns if no cookie found . 
returns the fixed Locale that this resolver will returns if no cookie found , if any . 
sets a fixed TimeZone that this resolver will returns if no cookie found . 
returns the fixed TimeZone that this resolver will returns if no cookie found , if any . 
sets the name of the parameter that contains a locale specification in a locale change request . 
returns the name of the parameter that contains a locale specification in a locale change request . 
returns the configured HTTP methods . 
sets whether to ignore an invalid value for the locale parameter . 
returns whether to ignore an invalid value for the locale parameter . 
returns whether to use BCP 47 language tags instead of Java 's legacy locale specification format . 
sets the current locale context to the given one , potentially including a locale with associated time zone information . 
sets the current locale to the given one . 
sets a view name for this ModelAndView , to be resolved by the DispatcherServlet via a ViewResolver . 
sets a View object for this ModelAndView . 
returns the model map . 
returns the model map . 
sets the HTTP status to use for the response . 
returns the configured HTTP status for the response , if any . 
adds an attribute to the model . 
adds an attribute to the model using parameter name generation . 
adds all attributes contained in the provided Map to the model . 
returns whether this ModelAndView object is empty , i.e. whether it does not hold any view and does not contain a model . 
returns diagnostic information about this model and view . 
returns the ModelAndView that this exception contains for forwarding to . 
sets if controller execution should be synchronized on the session , to serialize parallel invocations from the same client . 
returns whether controller execution should be synchronized on the session . 
sets if URL lookup should always use full path within current servlet context . 
sets if context path and request URI should be URL-decoded . 
sets the UrlPathHelper to use for the resolution of lookup paths . 
returns the UrlPathHelper to use for the resolution of lookup paths . 
returns the name of the view to render for this request , based on the given lookup path . 
returns the discrete items a request condition is composed of . 
returns the contained MediaType expressions . 
Returns the media types for this condition excluding negated expressions . 
Returns the `` other '' instance if it has any expressions ; returns `` this '' instance otherwise . 
returns the contained request header expressions . 
Returns a new instance with the union of the header expressions from `` this '' and the `` other '' instance . 
returns the contained request parameter expressions . 
Returns a new instance with the union of the param expressions from `` this '' and the `` other '' instance . 
Find the patterns matching the given lookup path . 
returns the contained `` produces '' expressions . 
returns the contained producible media types excluding negated expressions . 
Returns the `` other '' instance if it has any expressions ; returns `` this '' instance otherwise . 
gets the matching condition for the held request condition wrap it in a new RequestConditionHolder instance . 
Returns a new instance with a union of the HTTP request methods from `` this '' and the `` other '' instance . 
returns the content type to sets the response to . 
creates the method argument value of the expected parameter type by reading from the given request . 
creates the method argument value of the expected parameter type by reading from the given HttpInputMessage . 
returns the type of the value to be written to the response . 
returns the more specific of the acceptable and the producible media types with the q-value of the former . 
sets the message body converters to use . 
returns the configured message body converters . 
creates an instance of this class with a base URL . 
creates a URL from the name of a Spring MVC controller method 's request mapping . 
returns a `` mock '' controller instance . 
returns a `` mock '' controller instance . 
returns a Map with all URI template variables or an empty map . 
returns the configured message body converters . 
sets if controller execution should be synchronized on the session , to serialize parallel invocations from the same client . 
returns the file extensions to use for suffix pattern matching . 
returns the configured timeout value , if any . 
adds an SSE `` comment '' line . 
adds an SSE `` event '' line . 
adds an SSE `` id '' line . 
adds an SSE `` event '' line . 
adds an SSE `` data '' line . 
adds an SSE `` data '' line . 
sets the path patterns . 
sets the request method conditions . 
sets the request param conditions . 
sets the header conditions . 
sets the consumes conditions . 
sets the produces conditions . 
sets the mapping name . 
sets a custom condition to use . 
sets a custom UrlPathHelper to use for the PatternsRequestCondition . 
returns a custom UrlPathHelper to use for the PatternsRequestCondition , if any . 
sets a custom PathMatcher to use for the PatternsRequestCondition . 
returns a custom PathMatcher to use for the PatternsRequestCondition , if any . 
sets whether to apply trailing slash matching in PatternsRequestCondition . 
returns whether to apply trailing slash matching in PatternsRequestCondition . 
sets whether to apply suffix pattern matching in PatternsRequestCondition . 
returns whether to apply suffix pattern matching in PatternsRequestCondition . 
sets whether suffix pattern matching should be restricted to registered file extensions only . 
returns whether suffix pattern matching should be restricted to registered file extensions only . 
returns the file extensions to use for suffix pattern matching . 
sets the ContentNegotiationManager to use for the ProducesRequestCondition . 
returns the ContentNegotiationManager to use for the ProducesRequestCondition , if any . 
returns declared HTTP methods . 
returns declared `` consumable '' types but only among those that also match the `` methods '' condition . 
returns declared `` producible '' types but only among those that also match the `` methods '' and `` consumes '' conditions . 
returns declared `` params '' conditions but only among those that also match the `` methods '' , `` consumes '' , and `` params '' conditions . 
sets a view name for the ModelAndView to returns , to be resolved by the DispatcherServlet via a ViewResolver . 
sets a View object for the ModelAndView to returns . 
returns a ModelAndView object with the specified view name . 
sets the name of the servlet to forward to , i.e. the `` servlet-name '' of the target servlet in web.xml . 
sets the class of the servlet to wrap . 
sets the name of the servlet to wrap . 
Sets the status to 500 and also sets the request attribute `` javax.servlet.error.exception '' to the Exception . 
adds the given flash attribute . 
returns the attributes candidate for flash storage or an empty Map . 
returns the attributes candidate for flash storage or an empty Map . 
sets the prefix to prepend to the request URL filename to build a view name . 
returns the prefix to prepend to the request URL filename . 
sets the suffix to append to the request URL filename to build a view name . 
returns the suffix to append to the request URL filename . 
Returns view name based on the URL filename , with prefix/suffix applied when appropriate . 
Returns view name based on the URL filename , with prefix/suffix applied when appropriate . 
sets if URL lookup should always use full path within current servlet context . 
sets if context path and request URI should be URL-decoded . 
sets the UrlPathHelper to use for resolution of lookup paths . 
sets the PathMatcher implementation to use for matching URL paths against registered URL patterns , for determining cache mappings . 
returns the keyword to use to search for links . 
sets the name of the default Servlet to be forwarded to for static resource requests . 
Find the resource under the given location . 
returns the list of configured resource resolvers . 
returns the list of configured resource transformers . 
returns the configured resource converter . 
returns the configured resource region converter . 
returns the configured content negotiation manager . 
returns the specified CORS configuration . 
sets headers on the given servlet response . 
removes the version from the request path . 
adds a version to the given request path . 
returns the map with version strategies keyed by path pattern . 
sets the URL within the current web application from which to include content if the requested path is n't found , or if none is specified in the first place . 
sets allowed resources as URL pattern , e.g. '' / WEB-INF/res / . 
sets whether to apply the file timestamp of the target resource as last-modified value . 
returns a PathMatcher to use for matching the `` allowedResources '' URL pattern . 
Returns no last-modified date before the startup time of this servlet , to allow for message resolution etc that influences JSP contents , assuming that those background resources might have changed on restart . 
returns the file timestamp for the given resource . 
returns the amount of time in seconds before a FlashMap expires . 
sets the UrlPathHelper to use to match FlashMap instances to requests . 
returns the UrlPathHelper implementation to use . 
returns a list of expired FlashMap instances contained in the given list . 
returns a FlashMap contained in the given list that matches the request . 
Returns a bind path appropriate for resubmission , e.g. `` address.street '' . 
returns a suitable display value for the field , i.e. the stringified value if not null , and an empty string in case of a null value . 
returns if this status represents a field or object error . 
returns the error codes for the field or object , if any . Returns an empty array instead of null if none . 
returns the first error codes for the field or object , if any . 
returns the resolved error messages for the field or object , if any . Returns an empty array instead of null if none . 
returns the first error message for the field or object , if any . 
returns an error message string , concatenating all messages separated by the given delimiter . 
returns the PropertyEditor for the property that this bind status is currently bound to . 
Find a PropertyEditor for the given value class , associated with the property that this bound status is currently bound to . 
returns the underlying PageContext . 
returns the underlying HttpServletRequest . 
returns the underlying ServletContext . 
returns the current WebApplicationContext . 
returns the current WebApplicationContext as MessageSource . 
returns the model Map that this RequestContext encapsulates , if any . 
returns the default HTML escape setting , differentiating between no default specified and an explicit value . 
returns the default setting about use of response encoding for HTML escape setting , differentiating between no default specified and an explicit value . 
sets the UrlPathHelper to use for context path and request URI decoding . 
returns the UrlPathHelper used for context path and request URI decoding . 
returns the context path of the original request , that is , the path that indicates the current web application . 
returns a context-aware URl for the given relative URL . 
returns the path to URL mappings within the current servlet including the context path and the servlet path of the original request . 
returns the request URI of the original request , that is , the invoked URL without parameters . 
returns the query string of the current request , that is , the part after the request path . 
creates a BindStatus for the given bind object , using the `` defaultHtmlEscape '' setting . 
creates a BindStatus for the given bind object , using the `` defaultHtmlEscape '' setting . 
returns the LocaleResolver that has been bound to the request by the DispatcherServlet . 
returns the ThemeResolver that has been bound to the request by the DispatcherServlet . 
returns the ThemeSource that has been bound to the request by the DispatcherServlet . 
returns the `` output '' FlashMap with attributes to save for a subsequent request . 
returns the FlashMapManager instance to save flash attributes with before a redirect . 
sets the HTTP methods that this content generator should support . 
returns the HTTP methods that this content generator supports . 
sets whether a session should be required to handle requests . 
returns whether a session is required to handle requests . 
returns the number of seconds that content is cached . 
returns the configured request header names for the `` Vary '' response header . 
sets whether to use the HTTP 1.0 expires header . 
returns whether the HTTP 1.0 expires header is used . 
sets whether to use the HTTP 1.1 cache-control header . 
returns whether the HTTP 1.1 cache-control header is used . 
sets whether to use the HTTP 1.1 cache-control header value `` no-store '' when preventing caching . 
returns whether the HTTP 1.1 cache-control header value `` no-store '' is used . 
returns whether ` must-revalidate ' is added to every Cache-Control header . 
sets the HTTP Cache-Control header according to the given settings . 
sets HTTP headers to allow caching for the given number of seconds . 
sets HTTP headers to allow caching for the given number of seconds . 
sets the name of the bean that this tag should check . 
returns the name of the bean that this tag checks . 
sets the path that this tag should apply . 
returns the path that this tag applies to . 
sets whether to ignore a nested path , if any . 
returns whether to ignore a nested path , if any . 
sets JavaScript escaping for this tag , as boolean value . 
sets the expression to evaluate . 
sets the variable name to expose the evaluation result under . 
sets the scope to export the evaluation result to . 
sets JavaScript escaping for this tag , as boolean value . 
returns a unique ID for the bound name within the current PageContext . 
returns the type of the HTML input element to generate : `` checkbox '' or `` radio '' . 
gets the bound value . 
gets a display String for the given value , converted by a PropertyEditor that the BindStatus may have registered for the value 's Class . 
gets the map of dynamic attributes . 
Adds input-specific optional attributes as defined by this base class . 
returns the default value . 
sets the HTML element must be used to render the error messages . 
gets the HTML element must be used to render the error messages . 
sets the delimiter to be used between error messages . 
returns the delimiter to be used between error messages . 
sets the name of the form attribute in the model . 
gets the name of the form attribute in the model . 
sets the name of the request param for non-browser supported HTTP methods . 
gets the name of the request param for non-browser supported HTTP methods . 
sets the default value for HTML escaping , to be put into the current PageContext . 
sets HTML escaping for this tag , as boolean value . 
returns the HTML escaping setting for this tag , or the default setting if not overridden . 
returns the applicable default HTML escape setting for this tag . 
returns the applicable default for the use of response encoding with HTML escaping for this tag . 
sets the MessageSourceResolvable for this tag . 
sets the message code for this tag . 
sets the separator to use for splitting an arguments String . 
sets the message text for this tag . 
sets PageContext attribute name under which to expose a variable that contains the resolved message . 
sets the scope to export the variable to . 
sets JavaScript escaping for this tag , as boolean value . 
returns default exception message . 
sets the path that this tag should apply . 
returns the path that this tag applies to . 
sets the raw name of the parameter 
sets the raw value of the parameter 
creates and expose the current RequestContext . 
returns the current RequestContext . 
returns exception message that indicates the current theme . 
sets the value to transform , using the appropriate PropertyEditor from the enclosing BindTag . 
sets PageContext attribute name under which to expose a variable that contains the result of the transformation . 
sets the scope to export the variable to . 
Sets the value of the URL 
sets the context path for the URL . 
sets the variable name to expose the URL under . 
sets the scope to export the URL variable to . 
sets JavaScript escaping for this tag , as boolean value . 
sets the name of the default theme . 
returns the name of the default theme . 
sets the name of the default theme . 
returns the name of the default theme . 
sets the name of the parameter that contains a theme specification in a theme change request . 
returns the name of the parameter that contains a theme specification in a theme change request . 
sets the current theme name to the given one . 
returns the maximum number of entries for the view cache . 
returns if caching is enabled . 
returns if caching of unresolved views is enabled . 
returns the cache key for the given view name and the given locale . 
creates the actual View object . 
sets whether all request attributes should be added to the model prior to merging with the template . 
sets whether all HttpSession attributes should be added to the model prior to merging with the template . 
sets whether to expose a RequestContext for use by Spring 's macro library , under the name `` springMacroRequestContext '' . 
sets whether all request attributes should be added to the model prior to merging with the template . 
sets whether all HttpSession attributes should be added to the model prior to merging with the template . 
sets whether to expose a RequestContext for use by Spring 's macro library , under the name `` springMacroRequestContext '' . 
sets the URL of the resource that this view wraps . 
returns the URL of the resource that this view wraps . 
returns whether the ` url ' property is required . 
sets the view 's name . 
returns the view 's name . 
sets the content type for this view . 
returns the content type for this view . 
sets the name of the RequestContext attribute for this view . 
returns the name of the RequestContext attribute , if any . 
sets static attributes as a CSV string . 
sets static attributes for this view from a Map . 
adds static data to this view , exposed in each view . 
returns the static attributes for this view . Returns an unmodifiable Map , as this is not intended for manipulating the Map but rather just for checking the contents . 
returns whether to adds path variables to the model or not . 
sets whether to make all Spring beans in the application context accessible as request attributes , through lazy checking once an attribute gets accessed . 
creates a RequestContext to expose under the specified attribute name . 
creates a temporary OutputStream for this view . 
Sets the view resolvers to be wrapped by this view resolver . 
returns the more specific of the acceptable and the producible media types with the q-value of the former . 
sets the prefix to prepend to generated view names . 
sets the suffix to append to generated view names . 
sets whether or not leading slashes should be stripped from the URI when generating the view name . 
sets whether or not trailing slashes should be stripped from the URI when generating the view name . 
sets whether or not file extensions should be stripped from the URI when generating the view name . 
sets if URL lookup should always use the full path within the current servlet context . 
sets if the context path and request URI should be URL-decoded . 
creates a new document to hold the PDF contents . 
creates a new PdfWriter for the given iText Document . 
returns the viewer preferences for the PDF file . 
sets the Rome feed type to use . 
creates a new Feed instance to hold the entries . 
creates a new feed to hold the entries . 
creates a new Channel instance to hold the entries . 
returns the FreeMarker Configuration object for the current web application context . 
sets a preconfigured Configuration to use for the FreeMarker web config , e.g. a shared one for web and email usage , sets up via FreeMarkerConfigurationFactoryBean . 
Sets up a ClassTemplateLoader to use for loading Spring macros . 
returns the Configuration object wrapped by this bean . 
returns the TaglibFactory object wrapped by this bean . 
sets the encoding of the FreeMarker template file . 
returns the encoding for the FreeMarker template . 
sets the FreeMarker Configuration to be used by this view . 
returns the FreeMarker configuration used by this view . 
sets a pre-configured MarkupTemplateEngine to use for the Groovy Markup Template web configuration . 
creates a parent ClassLoader for Groovy to use as parent ClassLoader when loading and compiling templates . 
sets the MarkupTemplateEngine to use in this view . 
returns a template compiled by the configured Groovy Markup template engine for the given view URL . 
sets whether to explicitly prevent dispatching back to the current handler path . 
sets the attribute in the model that should be rendered by this view . 
sets the attributes in the model that should be rendered by this view . 
returns the attributes in the model that should be rendered by this view . 
sets whether to serialize models containing a single attribute as a map or whether to extract the single value from the model and serialize it directly . 
sets JSONP request parameter names . 
sets whether to stay compatible with HTTP 1.0 clients . 
sets the encoding scheme for this view . 
sets the status code for this view . 
returns the configured application hosts . 
Returns `` true '' indicating this view performs a redirect . 
creates the target URL by checking if the redirect string is a URI template first , expanding it with the given model , and then optionally appending simple type model attributes as query String parameters . 
returns whether to use a shared engine for all threads or whether to creates thread-local engine instances for each thread . 
returns the content type to use for the response . 
returns the charset used to read script and template files . 
sets the content type to use for the response . 
returns the content type to use for the response . 
sets the charset used to read script and template files . 
sets the Tiles definitions , i.e. the list of files containing the definitions . 
sets whether to check Tiles definition files for a refresh at runtime . 
sets whether to validate the Tiles XML definitions . 
Creates and exposes a TilesContainer for this web application , delegating to the TilesInitializer . 
Removes the TilesContainer from this web application . 
sets the view class that should be used to creates views . 
returns the view class to be used to creates views . 
returns the required type of view for this resolver . 
sets the prefix that gets prepended to view names when building a URL . 
returns the prefix that gets prepended to view names when building a URL . 
sets the suffix that gets appended to view names when building a URL . 
returns the suffix that gets appended to view names when building a URL . 
sets the content type for all views . 
returns the content type for all views , if any . 
sets whether redirects should stay compatible with HTTP 1.0 clients . 
returns whether redirects should stay compatible with HTTP 1.0 clients . 
returns the configured application hosts for redirect purposes . 
sets the name of the RequestContext attribute for all views . 
returns the name of the RequestContext attribute for all views , if any . 
sets static attributes from a Map , for all views returned by this resolver . 
returns whether views resolved by this resolver should adds path variables to the model or not . 
sets whether to make all Spring beans in the application context accessible as request attributes , through lazy checking once an attribute gets accessed . 
Creates a new View instance of the specified view class and configures it . 
sets the list of view viewResolvers to delegate to . 
returns the list of view viewResolvers to delegate to . 
sets the name of the model key that represents the object to be marshalled . 
sets the location of the XML file that defines the view beans . 
sets the name of the model attribute that represents the XSLT Source . 
sets the URIResolver used in the transform . 
sets whether the XSLT transformer may adds additional whitespace when outputting the result tree . 
sets arbitrary transformer output properties to be applied to the stylesheet . 
returns the TransformerFactory that this XsltView uses . 
sets the name of the model attribute that represents the XSLT Source . 
sets the URIResolver used in the transform . 
sets whether the XSLT transformer may adds additional whitespace when outputting the result tree . 
sets arbitrary transformer output properties to be applied to the stylesheet . 
returns the content type of the view , if predetermined . 
returns the underlying native WebSocketSession , if available . 
returns the underlying native WebSocketSession , if available . 
Returns the type being converted . 
Returns the websocket message type . 
sets whether to auto-connect to the remote endpoint after this connection manager has been initialized and the Spring context has been refreshed . 
returns the value for the ` autoStartup ' property . 
returns the phase in which this endpoint connection factory will be auto-connected and stopped . 
returns whether this ConnectionManager has been started . 
sets the sub-protocols to use . 
returns the configured sub-protocols to use . 
sets the origin to use . 
returns the default headers for the WebSocket handshake request . 
returns the status code . 
adds resolvers to support custom controller method argument types . 
adds handlers to support custom controller method returns value types . 
adds a factory that to decorate the handler used to process WebSocket messages . 
sets the frequency for logging information at INFO level in milliseconds . 
returns the configured logging period frequency in milliseconds . 
gets stats about WebSocket sessions . 
gets stats about STOMP-related WebSocket message processing . 
gets stats about the executor processing incoming messages from WebSocket clients . 
gets stats about the executor processing outgoing messages to WebSocket clients . 
gets stats about the SockJS task scheduler . 
returns the Message associated with the event . 
returns the user for the session associated with the event . 
returns the session id . 
returns the status with which the session was closed . 
returns the configured error handler . 
gets the configured message buffer size limit in bytes . 
returns the configured header initializer . 
returns a String describing internal state and counters . 
returns the sub-protocols keyed by protocol name . 
returns the default sub-protocol handler to use . 
returns all supported protocols . 
returns a String describing internal state and counters . 
returns the configured WebSocketClient . 
gets the configured inbound message buffer size in bytes . 
sets whether to auto-start the contained WebSocketClient when the Spring context has been refreshed . 
returns the value for the ` autoStartup ' property . 
returns the configured phase . 
returns the supported WebSocket protocol versions . 
returns the WebSocket protocol extensions supported by the underlying WebSocket server . 
returns the list of supported sub-protocols . 
returns the WebSocketHandler . 
returns the HandshakeHandler . 
returns the configured WebSocket handshake request interceptors . 
sets the SockJsMessageCodec to use . 
returns the SockJsMessageCodec to use . 
returns the SockJS transport types that this transport can be used for . 
returns information about the SockJS URL including server and session ID . 
returns the headers to send with the connect request . 
returns the headers to adds to all other HTTP requests besides the handshake request such as XHR receive and send requests . 
returns the transport URL for the given transport . 
returns the user associated with the request , if any . 
returns the message codec to use for encoding SockJS messages . 
returns Undertow 's native HTTP client 
returns the SockJS frame type . 
returns the SockJS frame content as a byte array . 
returns data contained in a SockJS `` message '' and `` close '' frames . 
returns the SockJS session id . 
returns the unique name associated with this service . 
returns he URL to the SockJS JavaScript client library . 
returns the minimum number of bytes that can be sent over a single HTTP streaming request before it will be closed . 
returns whether the JSESSIONID cookie is required for the application to function . 
returns the amount of time in milliseconds when the server has not sent any messages . 
returns the amount of time in milliseconds before a client is considered disconnected . 
returns the size of the HTTP message cache . 
returns whether WebSocket transport is enabled . 
returns the selected sub-protocol to use . 
returns the SockJS buffer for messages stored transparently between polling requests . 
gets the prelude to write to the response before any other data . 
creates a new SockJS session . 
returns the transport type supported by this handler . 
returns the registered handlers per transport type . 
returns the configured WebSocket handshake request interceptors . 
returns the list of supported sub-protocols . 
returns the first header value for the given header name , if any . 
adds the given , single header value under the given name . 
sets the given , single header value under the given name . 
Returns the message payload . 
returns the number of bytes contained in the message . 
returns a unique session identifier . 
returns the URI used to open the WebSocket connection . 
returns the headers used in the handshake request . 
returns the map with attributes associated with the WebSocket session . 
returns the address on which the request was received . 
returns the address of the remote client . 
gets the configured maximum size for an incoming text message . 
gets the configured maximum size for an incoming binary message . 
returns whether the connection is still open . 
returns a bean factory with attributes and EnterpriseServices configured . 
Returns whether the specified node has text or a content description . 
Returns whether a node is actionable . 
Creates an asynchronous pretty printer . 
adds a matching rule in the canonical MIME T form such as `` image / '' or a MIME T literal such as `` text/html '' . 
Returns true if there is at least one peer listening for network events ; false otherwise . 
removes an existing domain module . 
Returns the truncated byte value of position . 
Adds a function to the javascript environment . 
Returns a new FieldValidator for a List of the given Class . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
gets the integer value of this enum value , as defined in the Thrift IDL . 
Find a the enum type by its integer value , as defined in the Thrift IDL . 
Find the _ Fields constant that matches fieldId , or null if its not found . 
Find the _ Fields constant that matches fieldId , throwing an exception if it is not found . 
Find the _ Fields constant that matches name , or null if its not found . 
Gets all the topologies which needs scheduling . 
Gets a executor - > component-id map which needs scheduling in this topology . 
Gets a component-id - > executors map which needs scheduling in this topology . 
gets all the used ports of this supervisor . 
returns the available ports of this supervisor . 
returns all the available slots on this supervisor . 
gets the unassigned executors of the topology . 
Gets the number of workers assigned to this topology . 
Gets all the available slots in the cluster . 
gets the current assignment for the topology . 
gets a specific supervisor with the nodeId 
gets all the supervisors on the specified host . 
gets all the assignments . 
gets all the supervisors . 
Returns all slots that are available for the next round of scheduling . 
sets assignments for the topologies which needs scheduling . 
gets the topology-id this assignment is for . 
gets the executor - > slot map . 
returns the executors covered by this assignments @return 
returns the executors covered by this assignments @return 
creates a server associated with a given port and service handler @param port listening port @param processor service handler @return server to be binded 
gets a request context associated with current thread @return 
sets remote subject explicitly 
gets the full name of the user . 
Returns the task ids that received the tuples . 
Gets the unique id assigned to this topology . 
Gets the Thrift object representing the topology . 
Gets the component id for the specified task id . 
Gets the sets of streams declared for the specified component . 
Gets the task ids allocated for the given component id . 
Gets the declared output fields for the specified component/stream . 
Gets the declared output fields for the specified global stream id . 
Gets the declared inputs to the specified component . 
Gets information about who is consuming the outputs of the specified component , and how . 
Gets a map from task id to component id . 
Gets a list of all component ids in this topology 
Returns the task ids that received the tuples . 
Gets the task id of this task . 
Gets the component id for this task . 
Gets the declared output fields for the specified stream id for the component this task is a part of . 
Gets the sets of streams declared for the component of this task . 
Gets the declared inputs to this component . 
Gets information about who is consuming the outputs of this component , and how . 
Gets the location of the external resources for this worker on the local filesystem . 
adds mock data for the spout . 
creates metadata for this particular transaction id which has never been emitted before . 
returns the metadata describing this batch that will be used as lastPartitionMeta for defining the parameters of the next batch . 
returns the number of partitions currently in the source of data . 
returns the metadata that can be used to reconstruct this partition/batch in the future . 
Returns null if it was created , the value otherwise . 
Returns the position of the specified field . 
Returns true if this contains the specified name of the field . 
Returns the number of fields in this tuple . 
Returns the position of the specified field in this tuple . 
Returns true if this tuple contains the specified name of the field . 
Gets the field at position i in the tuple . Returns object since tuples are dynamically typed . 
Returns the String at position i in the tuple . 
Returns the Integer at position i in the tuple . 
Returns the Long at position i in the tuple . 
Returns the Boolean at position i in the tuple . 
Returns the Short at position i in the tuple . 
Returns the Byte at position i in the tuple . 
Returns the Double at position i in the tuple . 
Returns the Float at position i in the tuple . 
Returns the byte array at position i in the tuple . 
Gets all the values in this tuple . 
Gets the names of the fields in this tuple . 
Returns a subset of the tuple based on the fields selector . 
Gets the id of the component that created this tuple . 
Gets the id of the task that created this tuple . 
Gets the id of the stream that this tuple was emitted to . 
Gets the message id that associated with this tuple . 
returns void if the event should continue , false if the event should not be done 
gets the encoded length if an integer is stored in a variable-length format @return the encoded length 
returns null if it 's not single emit 
returns false if ca n't increment anymore 
returns the metadata describing this batch that will be used as lastPartitionMeta for defining the parameters of the next batch . 
returns the partitions currently in the source of data . 
returns the metadata that can be used to reconstruct this partition/batch in the future . 
creates metadata for this particular transaction id which has never been emitted before . 
creates brand new tuples with brand new fields 
Returns null if it was created , the value otherwise . 
returns null if it 's not a drpc group 
returns a control message per an encoded status code @param encoded @return 
creates a buffer containing the encoding of this batch 
gets the Vert.x instance @return the Vert.x instance 
gets the deployment ID of the verticle deployment @return the deployment ID 
gets the configuration of the verticle . 
gets the arguments used when deploying the Vert.x process . 
creates a new , empty buffer . 
creates a new buffer given the initial size hint . 
creates a new buffer from a string . 
creates a new buffer from a string and using the specified encoding . 
creates a new buffer from a byte -LSB- -RSB- . 
Returns a Json object representation of the Buffer 
Returns a Json array representation of the Buffer 
Returns the length of the buffer , measured in bytes . 
Returns a copy of the entire Buffer . 
Returns a slice of this buffer . 
Returns a slice of this buffer . 
Creates an instance of the given class , and extracts the metadata from the given class . 
Sets the argument index . 
Sets whether or not the argument can receive several values . 
Sets the name of the CLI . 
Sets the summary of the CLI . 
Gets the list of options . 
Adds an option . 
Adds a sets of options . 
Sets the list of arguments . 
Gets the list of defined arguments . 
Adds an argument . 
Adds a sets of arguments . 
Sets the list of arguments . 
Removes an option identified by its name . 
Removes an argument identified by its index . 
Gets the value of an argument with the given index . 
Gets the values of an argument with the matching index . 
Gets the value of an option marked as a flag . 
Gets the raw values of the given option . 
Gets the raw values of the given option . 
Gets the raw values of the given argument . 
Gets the raw value of the given option . 
Gets the raw value of the given argument . 
Creates the boolean value from the given String . 
Adds an argument value . 
Gets the values of an argument with the matching index . 
Creates the value for the given argument from the given raw value . 
Creates the value for the given option from the given raw value . 
removes the hyphens from the beginning of str and returns the new String . 
removes the leading and trailing quotes from str . 
Returns true is the token is a valid value . 
Removes the option from the list of expected elements . 
Returns the options with a long name starting with the name specified . 
Sets whether or not this option can receive several values . 
Sets whether or not this option can receive a value . 
Sets te arg name for this option . 
Sets te description of this option . 
Sets the long name of this option . 
Sets whether or not this option is mandatory . 
Sets the short name of this option . 
Sets the list of values accepted by this option . 
Adds a choice to the list of values accepted by this option . 
Sets the argument type . 
Sets the converter used to creates the value . 
Sets the list of values accepted by this option from the option 's type . 
sets the separator displayed between a long option and its value . 
Returns the separator displayed between a long option and its value . 
sets the comparator used to sort the options when they output in help text . 
returns a String of padding of length len . 
removes the trailing whitespace from the specified String . 
returns a composite future , succeeded when all futures are succeeded , failed when any future is failed . 
returns a composite future , succeeded when any futures is succeeded , failed when all futures are failed . 
returns a composite future , succeeded when all futures are succeeded , failed when any future is failed . 
Returns a cause of a wrapped future @param index the wrapped future index 
Returns true if a wrapped future is succeeded @param index the wrapped future index 
Returns true if a wrapped future is failed @param index the wrapped future index 
Returns true if a wrapped future is completed @param index the wrapped future index 
Returns the result of a wrapped future @param index the wrapped future index 
gets some data from the context . 
removes some data from the context . 
sets an exception handler called when the context runs an action throwing an uncaught throwable . 
sets if the socket can receive broadcast packets @param broadcast true if the socket can receive broadcast packets @return a reference to this , so the API can be used fluently 
sets if loopback mode is disabled @param loopbackModeDisabled true if loopback mode is disabled @return a reference to this , so the API can be used fluently 
sets the multicast ttl value @param multicastTimeToLive the multicast ttl value @return a reference to this , so the API can be used fluently 
gets the multicast network interface address @return the interface address 
sets the multicast network interface address @param multicastNetworkInterface the address @return a reference to this , so the API can be used fluently 
sets if IP v6 should be used @param ipV6 true if IP v6 should be used @return a reference to this , so the API can be used fluently 
gets any extra classpath to be used when deploying the verticle . 
sets any extra classpath to be used when deploying the verticle . 
gets the number of instances that should be deployed . 
sets the number of instances that should be deployed . 
gets the list of isolated class names , the names can be a Java class fully qualified name such as ` com.mycompany.myproject.engine.MyClass ' or a wildcard matching such as ` com.mycompany.myproject . 
sets the isolated class names . 
sets the worker pool name to use for this verticle . 
sets the maximum number of worker threads to be used by the Vert.x instance . 
gets the value of max worker execute time , in ns . 
Sets the value of max worker execute time , in ns . 
sets the path of an alternate hosts configuration file to use instead of the one provided by the os . 
sets an alternate hosts configuration file to use instead of the one provided by the os . 
adds a DNS server address . 
sets to true to enable the automatic inclusion in DNS queries of an optional record that hints the remote DNS server about how much data the resolver can read per response . 
sets the cache minimum TTL value in seconds . 
sets the cache maximum TTL value in seconds . 
sets the negative cache TTL value in seconds . 
sets the query timeout in milliseconds , i.e the amount of time after a query is considered to be failed . 
sets the maximum number of queries when an hostname is resolved . 
sets the DNS queries <i> Recursion Desired </i> flag value . 
sets the lists of DNS search domains . 
adds a DNS search domain . 
Returns the decoded domain name for a resource record . 
Returns the priority of the mail exchanger , lower is more preferred . 
Returns the priority for this service record . 
Returns the weight of this service record . 
Returns the port the service is running on . 
Returns the name for the server being queried . 
Returns the name of the host for the service . 
Returns the primary name server . 
Returns the responsible person 's e-mail . 
Returns the zone 's serial number , usually in format YYYYMMDDnn . 
Returns time between refreshes for secondary name servers . 
Returns time between retries for failed refresh attempts . 
Returns time before information stored in secondary name servers becomes non authoritative . 
Returns the type of resource record to be received . 
Returns the class for this entry . 
Sets whether a name server is directed to pursue a query recursively or not . 
Returns the header belonging to this message . 
Returns a list of all the questions in this message . 
Returns a list of all the answer resource records in this message . 
Returns a list of all the authority resource records in this message . 
Returns a list of all the additional resource records in this message . 
Adds an answer resource record to this message . 
Adds a question to this message . 
Adds an authority resource record to this message . 
Adds an additional resource record to this message . 
Returns the time to live after reading for this resource record . 
Returns the index at which the content of this resource record appears in the original packet . 
Returns the length of the content in this resource record . 
Returns the data contained in this resource record . 
Returns a deep copy of this resource record . 
Returns a duplicate of this resource record . 
Returns the non-decoded DNS response packet . 
Returns a deep copy of this DNS response . 
Returns a duplicate of this DNS response . 
Returns the 3 bit reserved field ` Z ' . 
Returns the 4 bit returns code . 
Returns the number of questions to read for this DNS response packet . 
Returns the number of answers to read for this DNS response packet . 
Returns the number of authority resource records to read for this DNS response packet . 
Returns the number of additional resource records to read for this DNS response packet . 
Sets the field Z . 
Sets the response code for this message . 
Sets the number of questions that should be read after this header has been decoded . 
Sets the number of answers that should be read after this header has been decoded . 
Sets the number of authority resources to be read after this header has been decoded . 
Sets the number of additional resources to be read after this header has been decoded . 
Returns the priority for this service record . 
Returns the weight of this service record . 
Returns the port the service is running on . 
Returns the name for the server being queried . 
Returns the name of the host for the service . 
gets the send timeout . 
sets the send timeout . 
gets the codec name . 
sets the codec name . 
adds a message header . 
sets message headers from a multi-map . 
gets the message headers @return the headers 
creates a message consumer against the specified address . 
creates a consumer and register it against the specified address . 
creates a message sender against the specified address . 
creates a message publisher against the specified address . 
adds an interceptor that will be called whenever a message is sent from Vert.x @param interceptor the interceptor @return a reference to this , so the API can be used fluently 
removes an interceptor @param interceptor the interceptor @return a reference to this , so the API can be used fluently 
sets whether client auth is required @param clientAuth One of `` NONE , REQUEST , REQUIRED '' . 
sets the accept back log . 
Sets the host . 
Sets the port . 
Sets the value of reconnect attempts . 
sets the reconnect interval . 
Sets whether or not the event bus is clustered . 
sets whether all server certificates should be trusted . 
gets the value of cluster ping reply interval , in ms. After sending a ping , if a pong is not received in this time , the node will be considered dead . 
sets the value of cluster ping interval , in ms. @param clusterPingInterval The value of cluster ping interval , in ms. @return a reference to this , so the API can be used fluently 
gets the value of cluster ping reply interval , in ms. After sending a ping , if a pong is not received in this time , the node will be considered dead . 
sets the value of cluster ping reply interval , in ms. @param clusterPingReplyInterval The value of cluster ping reply interval , in ms. @return a reference to this , so the API can be used fluently 
gets the public facing port to be used when clustering . 
sets the public facing hostname to be used for clustering . 
Gets the public facing port to be used when clustering . 
sets the number of messages this registration will buffer when this stream is paused . 
gets the failure type for the message @return the failure type 
gets the failure code for the message @return the failure code 
Sets the buffer size that will be used to read the data from the file . 
gets the permissions string to be used if creating a file @return the permissions string 
sets the permissions string @param perms the permissions string @return a reference to this , so the API can be used fluently 
sets whether the file is to be opened for reading @param read true if the file is to be opened for reading @return a reference to this , so the API can be used fluently 
sets whether the file is to be opened for writing @param write true if the file is to be opened for writing @return a reference to this , so the API can be used fluently 
sets whether the file should be created if it does not already exist . 
sets whether the file should be created and fail if it does exist already . 
sets whether the file should be deleted when it 's closed , or the JVM is shutdown . 
sets whether the file should be truncated to zero length on opening if it exists and is opened for write @param truncateExisting true if the file should be truncated to zero length on opening if it exists and is opened for write @return a reference to this , so the API can be used fluently 
sets whether a hint should be provided that the file to created is sparse @return true if a hint should be provided that the file to created is sparse 
sets whether a hint should be provided that the file to created is sparse @param sparse true if a hint should be provided that the file to created is sparse @return a reference to this , so the API can be used fluently 
sets whether every write to the file 's content and meta-data will be written synchronously to the underlying hardware . 
sets whether every write to the file 's content ill be written synchronously to the underlying hardware . 
creates a future that has n't completed yet @param <T> the result type @return the future 
creates a succeeded future with a null result @param <T> the result type @return the future 
creates a failed future with the specified failure cause . 
creates a failed future with the specified failure message . 
sets a handler for the result . 
sets the result . 
sets a null result . 
sets the failure . 
sets the failure . 
sets the last stream id . 
sets the additional debug data @param debugData the data @return a reference to this , so the API can be used fluently 
sets the extra setting used for extending HTTP/2 @param settings the new extra settings @return a reference to this , so the API can be used fluently 
returns a setting value according to its identifier . 
creates an HTTP request to send to the server at the specified host and port . 
creates an HTTP request to send to the server at the specified host and default port . 
creates an HTTP request to send to the server at the specified host and port , specifying a response handler to receive the response @param method the HTTP method @param port the port @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP request to send to the server at the specified host and default port , specifying a response handler to receive the response @param method the HTTP method @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP request to send to the server at the default host and port . 
creates an HTTP request to send to the server at the default host and port , specifying a response handler to receive the response @param method the HTTP method @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP request to send to the server using an absolute URI @param method the HTTP method @param absoluteURI the absolute URI @return an HTTP client request object 
creates an HTTP request to send to the server using an absolute URI , specifying a response handler to receive the response @param method the HTTP method @param absoluteURI the absolute URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP gets request to send to the server at the specified host and port . 
creates an HTTP gets request to send to the server at the specified host and default port . 
creates an HTTP gets request to send to the server at the specified host and port , specifying a response handler to receive the response @param port the port @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP gets request to send to the server at the specified host and default port , specifying a response handler to receive the response @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP gets request to send to the server at the default host and port . 
creates an HTTP gets request to send to the server at the default host and port , specifying a response handler to receive the response @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP gets request to send to the server using an absolute URI @param absoluteURI the absolute URI @return an HTTP client request object 
creates an HTTP gets request to send to the server using an absolute URI , specifying a response handler to receive the response @param absoluteURI the absolute URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP POST request to send to the server at the specified host and port . 
creates an HTTP POST request to send to the server at the specified host and default port . 
creates an HTTP POST request to send to the server at the specified host and port , specifying a response handler to receive the response @param port the port @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP POST request to send to the server at the specified host and default port , specifying a response handler to receive the response @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP POST request to send to the server at the default host and port . 
creates an HTTP POST request to send to the server at the default host and port , specifying a response handler to receive the response @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP POST request to send to the server using an absolute URI @param absoluteURI the absolute URI @return an HTTP client request object 
creates an HTTP POST request to send to the server using an absolute URI , specifying a response handler to receive the response @param absoluteURI the absolute URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP HEAD request to send to the server at the specified host and port . 
creates an HTTP HEAD request to send to the server at the specified host and default port . 
creates an HTTP HEAD request to send to the server at the specified host and port , specifying a response handler to receive the response @param port the port @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP HEAD request to send to the server at the specified host and default port , specifying a response handler to receive the response @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP HEAD request to send to the server at the default host and port . 
creates an HTTP HEAD request to send to the server at the default host and port , specifying a response handler to receive the response @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP HEAD request to send to the server using an absolute URI @param absoluteURI the absolute URI @return an HTTP client request object 
creates an HTTP HEAD request to send to the server using an absolute URI , specifying a response handler to receive the response @param absoluteURI the absolute URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP OPTIONS request to send to the server at the specified host and port . 
creates an HTTP OPTIONS request to send to the server at the specified host and default port . 
creates an HTTP OPTIONS request to send to the server at the specified host and port , specifying a response handler to receive the response @param port the port @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP OPTIONS request to send to the server at the specified host and default port , specifying a response handler to receive the response @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP OPTIONS request to send to the server at the default host and port . 
creates an HTTP OPTIONS request to send to the server at the default host and port , specifying a response handler to receive the response @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP OPTIONS request to send to the server using an absolute URI @param absoluteURI the absolute URI @return an HTTP client request object 
creates an HTTP OPTIONS request to send to the server using an absolute URI , specifying a response handler to receive the response @param absoluteURI the absolute URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP PUT request to send to the server at the specified host and port . 
creates an HTTP PUT request to send to the server at the specified host and default port . 
creates an HTTP PUT request to send to the server at the specified host and port , specifying a response handler to receive the response @param port the port @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP PUT request to send to the server at the specified host and default port , specifying a response handler to receive the response @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP PUT request to send to the server at the default host and port . 
creates an HTTP PUT request to send to the server at the default host and port , specifying a response handler to receive the response @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP PUT request to send to the server using an absolute URI @param absoluteURI the absolute URI @return an HTTP client request object 
creates an HTTP PUT request to send to the server using an absolute URI , specifying a response handler to receive the response @param absoluteURI the absolute URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP DELETE request to send to the server at the specified host and port . 
creates an HTTP DELETE request to send to the server at the specified host and default port . 
creates an HTTP DELETE request to send to the server at the specified host and port , specifying a response handler to receive the response @param port the port @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP DELETE request to send to the server at the specified host and default port , specifying a response handler to receive the response @param host the host @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP DELETE request to send to the server at the default host and port . 
creates an HTTP DELETE request to send to the server at the default host and port , specifying a response handler to receive the response @param requestURI the relative URI @param responseHandler the response handler @return an HTTP client request object 
creates an HTTP DELETE request to send to the server using an absolute URI @param absoluteURI the absolute URI @return an HTTP client request object 
creates an HTTP DELETE request to send to the server using an absolute URI , specifying a response handler to receive the response @param absoluteURI the absolute URI @param responseHandler the response handler @return an HTTP client request object 
creates a WebSocket stream to the specified port , host and relative request URI @param port the port @param host the host @param requestURI the relative URI @return a reference to this , so the API can be used fluently 
creates a WebSocket stream to the specified host , relative request URI and default port @param host the host @param requestURI the relative URI @return a reference to this , so the API can be used fluently 
creates a WebSocket stream to the specified port , host and relative request URI , and with the specified headers @param port the port @param host the host @param requestURI the relative URI @param headers the headers @return a reference to this , so the API can be used fluently 
creates a WebSocket stream to the specified host , relative request URI and default port and with the specified headers @param host the host @param requestURI the relative URI @param headers the headers @return a reference to this , so the API can be used fluently 
creates a WebSocket stream to the specified port , host and relative request URI , with the specified headers and using the specified version of WebSockets @param port the port @param host the host @param requestURI the relative URI @param headers the headers @param version the websocket version @return a reference to this , so the API can be used fluently 
creates a WebSocket stream to the specified host , relative request URI and default port and with the specified headers and using the specified version of WebSockets @param host the host @param requestURI the relative URI @param headers the headers @param version the websocket version @return a reference to this , so the API can be used fluently 
creates a WebSocket stream to the specified port , host and relative request URI , with the specified headers , using the specified version of WebSockets , and the specified websocket sub protocols @param port the port @param host the host @param requestURI the relative URI @param headers the headers @param version the websocket version @param subProtocols the subprotocols to use @return a reference to this , so the API can be used fluently 
creates a WebSocket stream to the specified host , relative request URI and default port , with the specified headers , using the specified version of WebSockets , and the specified websocket sub protocols @param host the host @param requestURI the relative URI @param headers the headers @param version the websocket version @param subProtocols the subprotocols to use @return a reference to this , so the API can be used fluently 
creates a WebSocket stream at the relative request URI using the default host and port and the specified headers @param requestURI the relative URI @return a reference to this , so the API can be used fluently 
creates a WebSocket stream at the relative request URI using the default host and port and the specified headers @param requestURI the relative URI @param headers the headers @return a reference to this , so the API can be used fluently 
creates a WebSocket stream at the relative request URI using the default host and port , the specified headers and the specified version of WebSockets @param requestURI the relative URI @param headers the headers @param version the websocket version @return a reference to this , so the API can be used fluently 
creates a WebSocket stream at the relative request URI using the default host and port , the specified headers , the specified version of WebSockets and the specified sub protocols @param requestURI the relative URI @param headers the headers @param version the websocket version @param subProtocols the subprotocols @return a reference to this , so the API can be used fluently 
gets the maximum pool size for connections @return the maximum pool size 
sets the maximum pool size for connections @param maxPoolSize the maximum pool size @return a reference to this , so the API can be used fluently 
sets a client limit of the number concurrent streams for each HTTP/2 connection , this limits the number of streams the client can creates for a connection . 
gets the maximum pool size for HTTP/2 connections @return the maximum pool size 
sets the maximum pool size for HTTP/2 connections @param max the maximum pool size @return a reference to this , so the API can be used fluently 
sets the default HTTP/2 connection window size . 
sets whether keep alive is enabled on the client @param keepAlive true if enabled @return a reference to this , so the API can be used fluently 
sets whether pipe-lining is enabled on the client @param pipelining true if enabled @return a reference to this , so the API can be used fluently 
sets the limit of pending requests a pipe-lined HTTP/1 connection can send . 
sets whether hostname verification is enabled @param verifyHost true if enabled @return a reference to this , so the API can be used fluently 
sets whether compression is enabled @param tryUseCompression true if enabled @return a reference to this , so the API can be used fluently 
gets the maximum websocket framesize to use @return the max websocket framesize 
sets the max websocket frame size @param maxWebsocketFrameSize the max frame size , in bytes @return a reference to this , so the API can be used fluently 
gets the default host name to be used by this client in requests if none is provided when making the request . 
sets the default host name to be used by this client in requests if none is provided when making the request . 
gets the default port to be used by this client in requests if none is provided when making the request . 
sets the default port to be used by this client in requests if none is provided when making the request . 
gets the protocol version . 
sets the protocol version . 
sets the maximum HTTP chunk size @param maxChunkSize the maximum chunk size @return a reference to this , so the API can be used fluently 
Returns the maximum HTTP chunk size @return the maximum HTTP chunk size 
sets the maximum requests allowed in the wait queue , any requests beyond the max size will result in a ConnectionPoolTooBusyException . 
Returns the maximum wait queue size @return the maximum wait queue size 
sets the HTTP/2 connection settings immediately sent by to the server when the client connects . 
sets the list of protocol versions to provide to the server during the Application-Layer Protocol Negotiation . 
sets the request host . 
sets a push handler for this request . 
sets a connection handler called when an HTTP connection has been established . 
returns the first header value with the specified name @param headerName the header name @return the header value 
returns the first header value with the specified name @param headerName the header name @return the header value 
returns the first trailer value with the specified name @param trailerName the trailer name @return the trailer value 
sets an custom frame handler . 
gets a net socket for the underlying connection of this request . 
sets a close handler . 
sets an handler called when a connection error happens @param handler the handler @return a reference to this , so the API can be used fluently 
returns the request stream for the server . 
sets a connection handler for the server . 
returns the websocket stream for the server . 
sets whether the server supports compression @param compressionSupported true if compression supported @return a reference to this , so the API can be used fluently 
sets the maximum websocket frames size @param maxWebsocketFrameSize the maximum frame size in bytes . 
sets the websocket subprotocols supported by the server . 
sets whether 100 Continue should be handled automatically @param handle100ContinueAutomatically true if it should be handled automatically @return a reference to this , so the API can be used fluently 
sets the maximum HTTP chunk size @param maxChunkSize the maximum chunk size @return a reference to this , so the API can be used fluently 
Returns the maximum HTTP chunk size @return the maximum HTTP chunk size 
sets the maximum length of the initial line for HTTP/1 . 
sets the maximum length of all headers for HTTP/1 . 
sets the HTTP/2 connection settings immediatly sent by the server when a client connects . 
sets the list of protocol versions to provide to the server during the Application-Layer Protocol Negotiatiation . 
sets the default HTTP/2 connection window size . 
returns the first header value with the specified name @param headerName the header name @return the header value 
returns the first header value with the specified name @param headerName the header name @return the header value 
returns the first param value with the specified name @param paramName the param name @return the param value 
Returns null if connection is not SSL . 
gets a net socket for the underlying connection of this request . 
sets an upload handler . 
Returns a map of all form attributes in the request . 
returns the first form attribute value with the specified name @param attributeName the attribute name @return the attribute value 
sets a custom frame handler . 
sets the status code . 
sets the status message @return a reference to this , so the API can be used fluently 
sets a close handler for the response . 
Returns the content of this frame as-is , with no UTF-8 decoding . 
Sets the type and the content of this frame . 
sets the type of the content of this frame and populate it with the given content @param textData the content of the frame . 
Returns null if connection is not SSL . 
sets a close handler . 
sets a frame handler on the connection . 
creates a binary WebSocket frame . 
creates a text WebSocket frame . 
creates a continuation frame @param data the data for the frame @param isFinal true if it 's the final frame in the WebSocket message @return the frame 
removes an existing hook . 
returns the Netty EventLoop used by this Context . 
creates a worker executor using the underlying worker pool of the context . 
sets a handler for the result . 
sets the result . 
sets the failure . 
removes the information on the deployment from the cluster - this is called when an HA module is undeployed 
adds some information on a deployment in the cluster so other nodes know about it 
adds the deployment to an internal list of deploymentIDs - these will be executed when a quorum is attained 
Sets the quorum option . 
Sets the HA group name . 
Sets the cluster port . 
Sets the cluster host . 
Sets the classpath . 
Creates a classloader respecting the classpath option . 
Creates a new non-clustered vert.x instance . 
Creates a new clustered vert.x instance . 
Adds an argument to the given list . 
Sets the number of instance of the verticle to creates . 
Sets the main verticle that is deployed . 
Sets the user command executed during redeployment . 
Sets the Java Virtual Machine options to pass to the spawned process . 
Gets an existing instance of command . 
gets an executor that always executes tasks in order . 
gets the current context @return the context 
adds an enum to the JSON array . 
adds a CharSequence to the JSON array . 
adds a String to the JSON array . 
adds an Integer to the JSON array . 
adds a Long to the JSON array . 
adds a Double to the JSON array . 
adds a Float to the JSON array . 
adds a Boolean to the JSON array . 
adds a null value to the JSON array . 
adds a JSON object to the JSON array . 
adds another JSON array to the JSON array . 
adds a binary value to the JSON array . 
adds a Instant value to the JSON array . 
adds an Object to the JSON array . 
removes the specified value from the JSON array . 
removes the value at the specified position in the JSON array . 
gets the number of values in this JSON array @return the number of items 
gets the unerlying List @return the underlying List 
removes all entries from the JSON array @return a reference to this , so the API can be used fluently 
gets an Iterator over the values in the JSON array @return an iterator 
gets a Stream over the entries in the JSON array @return a Stream 
gets the string value with the specified key @param key the key to returns the value for @return the value or null if no value for that key @throws java.lang.ClassCastException if the value is not a String 
gets the Integer value with the specified key @param key the key to returns the value for @return the value or null if no value for that key @throws java.lang.ClassCastException if the value is not an Integer 
gets the Long value with the specified key @param key the key to returns the value for @return the value or null if no value for that key @throws java.lang.ClassCastException if the value is not a Long 
gets the Double value with the specified key @param key the key to returns the value for @return the value or null if no value for that key @throws java.lang.ClassCastException if the value is not a Double 
gets the Float value with the specified key @param key the key to returns the value for @return the value or null if no value for that key @throws java.lang.ClassCastException if the value is not a Float 
gets the Boolean value with the specified key @param key the key to returns the value for @return the value or null if no value for that key @throws java.lang.ClassCastException if the value is not a Boolean 
gets the JsonObject value with the specified key @param key the key to returns the value for @return the value or null if no value for that key @throws java.lang.ClassCastException if the value is not a JsonObject 
gets the JsonArray value with the specified key @param key the key to returns the value for @return the value or null if no value for that key @throws java.lang.ClassCastException if the value is not a JsonArray 
gets the binary value with the specified key . 
gets the instant value with the specified key . 
gets the value with the specified key , as an Object @param key the key to lookup @return the value 
returns the sets of field names in the JSON objects @return the sets of field names 
removes an entry from this object . 
gets a stream of the entries in the JSON object . 
gets an Iterator of the entries in the JSON object . 
gets the number of entries in the JSON object @return the number of entries 
removes all the entries in this JSON object 
sets whether metrics will be enabled on the Vert.x instance . 
gets the metrics factory to be used when metrics are enabled . 
creates a multi-map implementation with case insensitive keys , for instance it can be used to hold some HTTP headers . 
Returns the value of with the specified name . 
Returns all entries in the multi-map . 
returns true if empty 
Adds a new value with the specified name and value . 
Adds a new values under the specified name @param name The name being sets @param values The values @return a reference to this , so the API can be used fluently 
Adds all the entries from another MultiMap to this one @return a reference to this , so the API can be used fluently 
Adds all the entries from a Map to this @return a reference to this , so the API can be used fluently 
Sets a value under the specified name . 
Sets values for the specified name . 
Removes the value with the given name @param name The name of the value to removes @return a reference to this , so the API can be used fluently 
Removes all @return a reference to this , so the API can be used fluently 
returns the number of keys . 
sets whether all server certificates should be trusted @param trustAll true if all should be trusted @return a reference to this , so the API can be used fluently 
sets the connect timeout @param connectTimeout connect timeout , in ms @return a reference to this , so the API can be used fluently 
sets the metrics name identifying the reported metrics , useful for grouping metrics with the same name . 
gets proxy options for connections @return proxy options 
sets the local interface to bind for network connections . 
creates a TrustManager which trusts everything 
sets the password for the key store @param password the password @return a reference to this , so the API can be used fluently 
gets the path to the ksy store @return the path 
sets the path to the key store @param path the path @return a reference to this , so the API can be used fluently 
gets the key store as a buffer @return the key store as a buffer 
sets the key store as a buffer @param value the key store as a buffer @return a reference to this , so the API can be used fluently 
creates and returns the key manager factory for these options . 
sets the value of reconnect attempts @param attempts the maximum number of reconnect attempts @return a reference to this , so the API can be used fluently 
sets the reconnect interval @param interval the reconnect interval in ms @return a reference to this , so the API can be used fluently 
returns the connect stream for this server . 
sets the accept back log @param acceptBacklog accept backlog @return a reference to this , so the API can be used fluently 
sets the port @param port the port @return a reference to this , so the API can be used fluently 
sets the host @param host the host @return a reference to this , so the API can be used fluently 
sets whether client auth is required @param clientAuthRequired true if client auth is required @return a reference to this , so the API can be used fluently 
sets whether client auth is required @param clientAuth One of `` NONE , REQUEST , REQUIRED '' . 
sets a handler that will be called when the NetSocket is closed @param handler the handler @return a reference to this , so the API can be used fluently 
Returns null if connection is not SSL . 
returns the TCP send buffer size , in bytes . 
sets the TCP send buffer size @param sendBufferSize the buffers size , in bytes @return a reference to this , so the API can be used fluently 
returns the TCP receive buffer size , in bytes @return the receive buffer size 
sets the TCP receive buffer size @param receiveBufferSize the buffers size , in bytes @return a reference to this , so the API can be used fluently 
sets the value of reuse address @param reuseAddress the value of reuse address @return a reference to this , so the API can be used fluently 
sets the value of traffic class @param trafficClass the value of traffic class @return a reference to this , so the API can be used fluently 
sets to true to enabled network activity logging : Netty 's pipeline is configured for logging on Netty 's logger . 
sets whether session cache is enabled in open SSL session server context @param sessionCacheEnabled true if session cache is enabled @return a reference to this , so the API can be used fluently 
gets the path to the key file @return the path to the key file 
sets the path to the key file @param keyPath the path to the key file @return a reference to this , so the API can be used fluently 
gets the path to the certificate file @return the path to the certificate file 
gets the key as a buffer @return key as a buffer 
sets the key a a buffer @param keyValue key as a buffer @return a reference to this , so the API can be used fluently 
sets the path to the certificate @param certPath the path to the certificate @return a reference to this , so the API can be used fluently 
gets the certificate as a buffer @return the certificate as a buffer 
sets the certificate as a buffer @param certValue the certificate as a buffer @return a reference to this , so the API can be used fluently 
adds a certificate path @param certPath the path to adds @return a reference to this , so the API can be used fluently @throws NullPointerException 
adds a certificate value @param certValue the value to adds @return a reference to this , so the API can be used fluently @throws NullPointerException 
gets the password @return the password 
sets the password @param password the password @return a reference to this , so the API can be used fluently 
gets the path @return the path 
sets the path @param path the path @return a reference to this , so the API can be used fluently 
gets the store as a buffer @return store as buffer 
sets the store as a buffer @param value the store as a buffer @return a reference to this , so the API can be used fluently 
gets proxy host . 
sets proxy host . 
gets proxy port . 
sets proxy port . 
gets proxy username . 
sets proxy username . 
gets proxy password . 
sets proxy password . 
gets proxy type . 
sets proxy type . 
sets whether TCP keep alive is enabled @param tcpKeepAlive true if TCP keep alive is enabled @return a reference to this , so the API can be used fluently 
sets whether SO_linger keep alive is enabled @param soLinger true if SO_linger is enabled @return a reference to this , so the API can be used fluently 
sets whether Netty pooled buffers are enabled @param usePooledBuffers true if pooled buffers enabled @return a reference to this , so the API can be used fluently 
sets the idle timeout , in seconds . 
sets whether SSL/TLS is enabled @param ssl true if enabled @return a reference to this , so the API can be used fluently 
sets the key/cert options . 
sets the key/cert options in jks format , aka Java keystore . 
sets the key/cert options in pfx format . 
sets the key/cert store options in pem format . 
sets the trust options . 
sets the trust options in jks format , aka Java trustore @param options the trust options in jks format @return a reference to this , so the API can be used fluently 
sets the trust options in pfx format @param options the trust options in pfx format @return a reference to this , so the API can be used fluently 
sets the trust options in pem format @param options the trust options in pem format @return a reference to this , so the API can be used fluently 
adds an enabled cipher suite , appended to the ordered suites . 
adds a CRL path @param crlPath the path @return a reference to this , so the API can be used fluently @throws NullPointerException 
gets the CRL values @return the list of values 
adds a CRL value @param crlValue the value @return a reference to this , so the API can be used fluently @throws NullPointerException 
sets the ALPN usage . 
sets to use SSL engine implementation to use . 
adds an enabled SSL/TLS protocols , appended to the ordered protocols . 
Returns the enabled SSL/TLS protocols @return the enabled protocols 
creates and returns the trust manager factory for these options . 
gets a value from the map , asynchronously . 
removes a value from the map , asynchronously . 
removes a value from the map , only if entry already exists with same value . 
gets the current value of the counter @param resultHandler handler which will be passed the value 
adds the value to the counter atomically and returns the new count @param value the value to adds @param resultHandler handler which will be passed the value 
adds the value to the counter atomically and returns the value before the adds @param value the value to adds @param resultHandler handler which will be passed the value 
sets the counter to the specified value only if the current value is the expectec value . 
gets a value from the map @param key the key @return the value , or null if none 
removes an entry from the map @param key the key @return the old value 
gets the size of the map @return the number of entries in the map 
removes the entry only if there is an entry with the specified key and value @param key the key @param value the value @return true if removed 
gets the cluster wide map with the specified name . 
gets a cluster wide lock with the specified name . 
gets a cluster wide counter . 
adds a value to the list of values for that key in the map @param k The key @param v The value @param completionHandler This will be called when the entry has been added 
gets a list of values from the map for the key @param k The key @param resultHandler This will be called with the list of values for the key . 
removes a value from the list of values for that key in the map . 
removes all the specified values from all keys in the map @param v The value @param completionHandler This will be called when the removes is complete 
returns the next element T in a round robin fashion . 
returns an async multi-map for the given name 
returns an async map for the given name 
returns a synchronous map for the given name 
returns the unique node ID for this node 
returns a list of node IDs corresponding to the nodes in the cluster 
sets a listener that will be called when a node joins or leaves the cluster . 
sets up the command execution environment . 
Sets the current working directory . 
Gets system properties passed in the user command line . 
Sets the system properties specified by the user command line . 
Returns the metrics implementation . 
creates a verticle instance . 
creates an empty metrics options . 
gets default interface to use since the user has n't specified one 
returns the total number of elements pumped by this pump . 
returns the total number of items pumped by this pump . 
sets an exception handler on the read stream . 
sets a data handler . 
sets an end handler . 
sets an exception handler . 
sets an exception handler on the write stream . 
sets a drain handler on the stream .  
gets a reference to the Vert.x instance that deployed this verticle @return A reference to the Vert.x instance 
Creates a non clustered instance using default options . 
Creates a non clustered instance using the specified options @param options the options to use @return the instance 
Creates a clustered instance using the specified options . 
Gets the current context @return The current context or null if no current context 
creates a TCP/SSL server using the specified options @param options the options to use @return the server 
creates a TCP/SSL server using default options @return the server 
creates a TCP/SSL client using the specified options @param options the options to use @return the client 
creates a TCP/SSL client using default options @return the client 
creates an HTTP/HTTPS server using the specified options @param options the options to use @return the server 
creates an HTTP/HTTPS server using default options @return the server 
creates a HTTP/HTTPS client using the specified options @param options the options to use @return the client 
creates a HTTP/HTTPS client using default options @return the client 
creates a datagram socket using the specified options @param options the options to use @return the socket 
creates a datagram socket using default options @return the socket 
gets the filesystem object . 
gets the event bus object . 
creates a DNS client to connect to a DNS server at the specified host and port @param port the port @param host the host @return the DNS client 
gets the shared data object . 
Returns a one-shot timer as a read stream . 
Returns a periodic timer as a read stream . 
returns a sets of deployment IDs for the currently deployed deploymentIDs . 
returns the sets of currently registered verticle factories . 
returns the Netty EventLoopGroup used by Vert.x @return the EventLoopGroup 
creates a named worker executor , the executor should be closed when it 's not needed anymore to release resources . 
gets the number of event loop threads to be used by the Vert.x instance . 
sets the number of event loop threads to be used by the Vert.x instance . 
gets the maximum number of worker threads to be used by the Vert.x instance . 
sets the maximum number of worker threads to be used by the Vert.x instance . 
sets whether or not the Vert.x instance will be clustered . 
gets the host name to be used for clustering . 
sets the hostname to be used for clustering . 
gets the public facing hostname to be used when clustering . 
sets the public facing hostname to be used for clustering . 
gets the port to be used for clustering @return the port 
sets the port to be used for clustering . 
gets the public facing port to be used when clustering . 
gets the value of cluster ping interval , in ms. Nodes in the cluster ping each other at this interval to determine whether they are still running . 
sets the value of cluster ping interval , in ms. @param clusterPingInterval The value of cluster ping interval , in ms. @return a reference to this , so the API can be used fluently 
gets the value of cluster ping reply interval , in ms. After sending a ping , if a pong is not received in this time , the node will be considered dead . 
sets the value of cluster ping reply interval , in ms. @param clusterPingReplyInterval The value of cluster ping reply interval , in ms. @return a reference to this , so the API can be used fluently 
gets the value of blocked thread check period , in ms. This setting determines how often Vert.x will check whether event loop threads are executing for too long . 
Sets the value of blocked thread check period , in ms. @param blockedThreadCheckInterval the value of blocked thread check period , in ms. @return a reference to this , so the API can be used fluently 
gets the value of max event loop execute time , in ns . 
Sets the value of max event loop execute time , in ns . 
gets the value of max worker execute time , in ns . 
Sets the value of max worker execute time , in ns . 
gets the cluster manager to be used when clustering . 
gets the value of internal blocking pool size . 
sets the value of internal blocking pool size @param internalBlockingPoolSize the maximumn number of threads in the internal blocking pool @return a reference to this , so the API can be used fluently 
sets whether HA will be enabled on the Vert.x instance . 
gets the quorum size to be used when HA is enabled . 
sets the quorum size to be used when HA is enabled . 
gets the HA group to be used when HA is enabled . 
sets the HA group to be used when HA is enabled . 
sets the metrics options @param metrics the options @return a reference to this , so the API can be used fluently 
gets the threshold value above this , the blocked warning contains a stack trace . 
sets the threshold value above this , the blocked warning contains a stack trace . 
Sets the event bus configuration to configure the host , port , ssl ... @param options the event bus options @return a reference to this , so the API can be used fluently 
Sets the address resolver configuration to configure resolving DNS servers , cache TTL , etc. . . 
Creates a Buffer of random bytes . 
creates an array of random bytes @param length The length of the created array @return the byte array 
creates an array of random bytes @param length The length of the created array @param avoid If true , the resulting array will not contain avoidByte @param avoidByte A byte that is not to be included in the resulting array @return an array of random bytes 
Creates a Buffer containing random bytes @param length the size of the Buffer to creates @param avoid if true , the resulting Buffer will not contain avoidByte @param avoidByte A byte that is not to be included in the resulting array @return a Buffer of random bytes 
Creates a String containing random unicode characters @param length The length of the string to creates @return a String of random unicode characters 
Creates a random string of ascii alpha characters @param length the length of the string to creates @return a String of random ascii alpha characters 
creates a worker verticle for the current Vert.x and returns its context . 
creates worker verticles for the current Vert.x and returns the list of their contexts . 
sets the current page of both the ViewPager and indicator . 
sets a page change listener which will receive forwarded events . 
sets bounds for the right textView including clip padding . 
sets bounds for the left textView including clip padding . 
sets a callback listener for the center item click . 
creates a possibly styled string for the contents of the current barcode . 
Gets the string encoded in the aztec code bits @return the decoded string 
gets the table corresponding to the char passed 
Gets the array of bits from an Aztec Code matrix @return the array of bits 
Gets the Aztec code corners from the bull 's eye corners and the parameters . 
Creates a BitMatrix by sampling the provided image . 
Gets the color of a segment @return 1 if segment more than 90 % black , -1 if segment is more than 90 % white , 0 else 
Gets the coordinate of the first point with a different color in the given direction 
Creates a new object with the same type as this Binarizer implementation , but with pristine state .  
Returns a new object with cropped image data . 
Returns a new object with rotated image data by 90 degrees counterclockwise . 
Returns a new object with rotated image data by 45 degrees counterclockwise . 
Sets bit i. @param i bit to sets 
Sets a block of 32 bits , starting at bit i. @param i first bit to sets @param newBits the new value of the next 32 bits . 
Sets a range of bits . 
Gets the requested bit , where true means black . 
Sets the given bit to true . 
Sets a square region of the bit matrix to true . 
Sets the implementation of GridSampler used by the library . 
Creates the version object based on the dimension of the original bit matrix from the datamatrix code .  
Creates the ECC200 error correction for an encoded message . 
Returns a new object with cropped image data . 
Returns a new object with rotated image data by 90 degrees counterclockwise . 
Returns a new object with rotated image data by 45 degrees counterclockwise . 
removes all the rows that contains only specified pairs 
Returns true when one of the rows already contains all the pairs 
gets the format of this decoder . 
adds an occurrence of a value 
Sets a specific location in the bar @param x The location in the bar @param value Black if true , white if false ; 
Sets a specific location in the bar @param x The location in the bar @param black Black if true , white if false ; 
Sets max/min row/col values @param maxCols maximum allowed columns @param minCols minimum allowed columns @param maxRows maximum allowed rows @param minRows minimum allowed rows 
gets number of data bytes and number of error correction bytes for block id `` blockID '' .  
Find repetitive cells with the same color and give penalty to them . 
Find 2x2 blocks with the same color and give penalty to them . 
Find consecutive runs of 1:1:3:1:1:4 starting with black , or 4:1:1:3:1:1 starting with white , and give penalty to them . 
returns the mask bit for `` getMaskPattern '' at `` x '' and `` y '' .  
Returns the z component of the cross product between vectors BC and BA . 
Returns a list of the four rotations of the BitMatrix . 
Adds a new test for the current directory of images . 
