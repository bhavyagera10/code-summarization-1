0.399985834128
0.0719033501749
0.00747311774609
0.00278703896645
code:
public static boolean is user monkey ( ) {
 try {
 return activity manager native . get default ( ) . is user monkey ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns `` true '' if the user interface is currently being UNK with by a monkey . END
BLUE1:1.0
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public builder set max streams ( int max streams ) throws illegal argument exception {
 if ( max streams <= DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 mmax streams = max streams ;
 return this ;
 }
comment:
START sets the maximum of number of UNK streams that can be played UNK . END
BLUE1:1.0
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public int get num UNK arguments ( ) {
 return num UNK args ;
 }
comment:
START returns the number of arguments which are UNK the UNK are keyword arguments . END
BLUE1:1.0
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .

code:
public void set crc ( long crc ) {
 if ( crc < DecimalInteger || crc > 0xffffffff l ) {
 throw new illegal argument exception ( String ) ;
 }
 this . crc = crc ;
 }
comment:
START sets the UNK UNK of the uncompressed entry data . END
BLUE1:1.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private static boolean is UNK key ( key event key event ) {
 return key event . get unicode char ( ) > DecimalInteger ;
 }
comment:
START returns true if the key is used for UNK . END
BLUE1:0.875
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean has UNK meta ( annotation mirror anno ) {
 return anno . get annotation type ( ) . as element ( ) . get annotation ( UNK . class ) != null ;
 }
comment:
START returns true if the given annotation has a UNK UNK . END
BLUE1:0.875
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
static byte [ ] get random bytes to mix into keystore rng ( secure random rng , int size bytes ) {
 if ( size bytes <= DecimalInteger ) {
 return empty array . e ;
 }
 if ( rng == null ) {
 rng = get rng ( ) ;
 }
 byte [ ] result = new byte [ size bytes ] ;
 rng . next bytes ( result ) ;
 return result ;
 }
comment:
START returns the requested number of random bytes to mix into UNK UNK . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public boolean is affiliated user ( ) {
 throw if parent instance ( String ) ;
 try {
 return service != null && service . is affiliated user ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns whether this UNK is UNK with the device . END
BLUE1:0.857142857143
--generate--
sets whether the UNK is UNK .
sets whether the given UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether the given UNK is UNK , in the UNK .

code:
public void set max sql cache size ( int cache size ) {
 if ( cache size > max_ sql_ cache_ e || cache size < DecimalInteger ) {
 throw new illegal state exception ( String + max_ sql_ cache_ e ) ;
 }
 synchronized ( lock ) {
 throw if not open locked ( ) ;
 final int old max sql cache size = mconfiguration locked . max sql cache size ;
 mconfiguration locked . max sql cache size = cache size ;
 try {
 mconnection pool locked . UNK ( mconfiguration locked ) ;
 }
 catch ( runtime exception ex ) {
 mconfiguration locked . max sql cache size = old max sql cache size ;
 throw ex ;
 }
 }
 }
comment:
START sets the maximum size of the UNK cache for this database . END
BLUE1:0.857142857143
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK for the given file .

code:
public int set UNK threshold ( int threshold ) {
 if ( check dead server ( ) ) return error_ dead_ t ;
 return utils . transact set int ( method_ set_ UNK d , threshold ) ;
 }
comment:
START sets the UNK threshold for the estimated error level of the common time service . END
BLUE1:0.857142857143
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static list < string > get cert fingerprints from package manager ( string package name , context context ) throws name not found exception {
 signature [ ] signatures = context . get package manager ( ) . get package info ( package name , package manager . get_ s ) . signatures ;
 array list < string > result = new array list < string > ( signatures . length ) ;
 for ( signature sig : signatures ) {
 result . add ( compute normalized sha256 fingerprint ( sig . to byte array ( ) ) ) ;
 }
 return result ;
 }
comment:
START returns the normalized UNK UNK of a given package according to the android package manager . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public uri get UNK file url ( ) {
 return UNK file url ;
 }
comment:
START returns the url of the current UNK script or null if there is no UNK script . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set thoroughfare ( string thoroughfare ) {
 this . thoroughfare = thoroughfare ;
 }
comment:
START sets the UNK name of the address , which may be null . END
BLUE1:0.857142857143
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public builder add root symlinks ( map < path fragment , artifact > root symlinks ) {
 runfiles builder . add root symlinks ( root symlinks ) ;
 return this ;
 }
comment:
START adds a mapping of artifacts to the directory above the normal symlink UNK base . END
BLUE1:0.857142857143
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
adds the UNK to the UNK to .
adds the UNK to the UNK to the UNK .

code:
public string get framework name ( ) {
 return framework name ;
 }
comment:
START returns the name of the framework . END
BLUE1:0.857142857143
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public set < string > get classes not UNK ( ) {
 return UNK not UNK ;
 }
comment:
START returns the list of classes that have not been UNK yet . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public list < intent > get and clear broadcast intents ( ) {
 list < intent > intents = mbroadcast intents ;
 mbroadcast intents = lists . new array list ( ) ;
 return intents ;
 }
comment:
START returns the list of UNK that were broadcast since the last call to this method . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public artifact swift frameworks file zip ( ) {
 return append extension ( String ) ;
 }
comment:
START returns the artifact which is the output of running UNK and copying resulting UNK . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set detailed state ( detailed state detailed state , string reason , string extra info ) {
 synchronized ( this ) {
 this . UNK state = detailed state ;
 this . state = state map . get ( detailed state ) ;
 this . reason = reason ;
 this . mextra info = extra info ;
 }
 }
comment:
START sets the UNK state of the network . END
BLUE1:0.857142857143
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set iconified by default ( boolean iconified ) {
 if ( miconified by default == iconified ) return ;
 miconified by default = iconified ;
 update views visibility ( iconified ) ;
 update query hint ( ) ;
 }
comment:
START sets the default or UNK state of the search field . END
BLUE1:0.857142857143
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ skylark callable ( name = String , struct field = true , doc = String + String + String ) public immutable list < string > get options ( ) {
 return options ;
 }
comment:
START returns the list of additional UNK options to use for compiling c . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
@ non null public string get quantity string ( @ plurals res int id , int quantity ) throws not found exception {
 return get quantity text ( id , quantity ) . to string ( ) ;
 }
comment:
START returns the string necessary for UNK correct UNK of the given resource id for the given UNK . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void set web line width inner ( float width ) {
 UNK web line width = utils . convert dp to pixel ( width ) ;
 }
comment:
START sets the width of the web lines that are in between the lines UNK from the center . END
BLUE1:0.857142857143
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set sub locality ( string UNK ) {
 msub locality = UNK ;
 }
comment:
START sets the UNK of the address to the given string , which may be null . END
BLUE1:0.857142857143
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public final boolean is UNK requested ( ) {
 return UNK requested ;
 }
comment:
START returns whether this connection is requesting that the system play a UNK UNK on its behalf . END
BLUE1:0.857142857143
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public discovery node [ ] next possible masters ( object container < discovery node > nodes , int number of possible masters ) {
 list < discovery node > sorted nodes = sorted master nodes ( arrays . as list ( nodes . to array ( discovery node . class ) ) ) ;
 if ( sorted nodes == null ) {
 return new discovery node [ DecimalInteger ] ;
 }
 list < discovery node > next possible masters = new array list < > ( number of possible masters ) ;
 int counter = DecimalInteger ;
 for ( discovery node next possible master : sorted nodes ) {
 if ( ++ counter >= number of possible masters ) {
 break ;
 }
 next possible masters . add ( next possible master ) ;
 }
 return next possible masters . to array ( new discovery node [ next possible masters . size ( ) ] ) ;
 }
comment:
START returns a list of the next possible UNK . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .

code:
public bluetooth gatt characteristic get characteristic ( d uuid ) {
 for ( bluetooth gatt characteristic characteristic : characteristics ) {
 if ( uuid . equals ( characteristic . get uuid ( ) ) ) return characteristic ;
 }
 return null ;
 }
comment:
START returns a characteristic with a given uuid out of the list of characteristics UNK by this service . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public cpp model add linkopts ( collection < string > linkopts ) {
 this . linkopts . add all ( linkopts ) ;
 return this ;
 }
comment:
START adds the given UNK to the optional dynamic library link command . END
BLUE1:0.857142857143
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
adds the UNK to the UNK to .
adds the UNK to the UNK to the UNK .

code:
public phrase suggestion builder UNK size ( int UNK size ) {
 if ( UNK size < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . UNK size = UNK size ;
 return this ;
 }
comment:
START sets the UNK size for the UNK model used for this suggester . END
BLUE1:0.857142857143
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get child atom of type count ( int type ) {
 int count = DecimalInteger ;
 int size = leaf children . size ( ) ;
 for ( int i = DecimalInteger ;
 i < size ;
 i ++ ) {
 leaf atom atom = leaf children . get ( i ) ;
 if ( atom . type == type ) {
 count ++ ;
 }
 }
 size = container children . size ( ) ;
 for ( int i = DecimalInteger ;
 i < size ;
 i ++ ) {
 container atom atom = container children . get ( i ) ;
 if ( atom . type == type ) {
 count ++ ;
 }
 }
 return count ;
 }
comment:
START returns the total number of UNK children of this UNK with the given type . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ system api public list < string > get permitted accessibility services ( int user id ) {
 throw if parent instance ( String ) ;
 if ( service != null ) {
 try {
 return service . get permitted accessibility services for user ( user id ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
 return null ;
 }
comment:
START returns the list of accessibility services permitted by the device or profiles UNK of this user . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
protected list < highlight > get UNK at value ( float val , float x , float y ) {
 mhighlight buffer . clear ( ) ;
 bar line scatter candle bubble data data = get data ( ) ;
 if ( data == null ) return mhighlight buffer ;
 for ( int i = DecimalInteger , data set count = data . get data set count ( ) ;
 i < data set count ;
 i ++ ) {
 idata set data set = data . get data set by index ( i ) ;
 if ( ! data set . is highlight enabled ( ) ) continue ;
 mhighlight buffer . add all ( build UNK ( data set , i , val , data set . rounding . t ) ) ;
 }
 return mhighlight buffer ;
 }
comment:
START returns a list of highlight objects representing the entries closest to the given UNK . END
BLUE1:0.857142857143
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public float [ ] get separations ( ) {
 return separations ;
 }
comment:
START returns the UNK of this manifold , a negative value indicates overlap , in meters . END
BLUE1:0.833333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public int get renderer count ( ) {
 return renderers . length ;
 }
comment:
START returns the number of UNK . END
BLUE1:0.833333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public int get read answers ( ) {
 return read answers ;
 }
comment:
START returns the number of UNK to read for this dns response packet . END
BLUE1:0.833333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get max query terms ( ) {
 return max query terms ;
 }
comment:
START returns the maximum number of query terms that will be included in any generated query . END
BLUE1:0.833333333333
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .

code:
public long get UNK num docs ( ) {
 return UNK num docs ;
 }
comment:
START get the number of docs in the UNK . END
BLUE1:0.833333333333
--generate--
returns the number of UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK .
returns the list of UNK UNK

code:
public builder disk cache extra options ( int max image width for disk cache , int max image height for disk cache , bitmap processor processor for disk cache ) {
 this . max image width for disk cache = max image width for disk cache ;
 this . max image height for disk cache = max image height for disk cache ;
 this . processor for disk cache = processor for disk cache ;
 return this ;
 }
comment:
START sets options for UNK of downloaded images before UNK to disk cache . END
BLUE1:0.833333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static void prepare UNK ( context application context ) {
 UNK context = application context ;
 setup preference change listener ( ) ;
 if ( settings utils . is UNK accepted ( UNK context ) ) {
 initialize UNK tracker ( UNK context ) ;
 }
 }
comment:
START sets up analytics to be initialized when the user UNK to UNK . END
BLUE1:0.833333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public int get UNK count ( ) {
 return UNK count ;
 }
comment:
START returns the number of UNK this tv input has . END
BLUE1:0.833333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public final void set premultiplied ( boolean premultiplied ) {
 check recycled ( String ) ;
 mrequest premultiplied = premultiplied ;
 native set premultiplied ( mnative ptr , premultiplied ) ;
 }
comment:
START sets whether the bitmap should UNK its data as UNK . END
BLUE1:0.833333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int num jpeg targets ( ) {
 return mnum jpeg targets ;
 }
comment:
START return the number of UNK surfaces targeted by this request . END
BLUE1:0.833333333333
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .

code:
public link staticness get link staticness ( ) {
 return link staticness ;
 }
comment:
START returns the `` UNK '' of the link . END
BLUE1:0.833333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK

code:
public int num preview targets ( ) {
 return mnum preview targets ;
 }
comment:
START return the number of UNK surfaces targeted by this request . END
BLUE1:0.833333333333
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .

code:
public builder proxy authenticator ( authenticator proxy authenticator ) {
 if ( proxy authenticator == null ) throw new null pointer exception ( String ) ;
 this . proxy authenticator = proxy authenticator ;
 return this ;
 }
comment:
START sets the authenticator used to respond to UNK from proxy servers . END
BLUE1:0.8
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public image request builder set postprocessor ( postprocessor postprocessor ) {
 postprocessor = postprocessor ;
 return this ;
 }
comment:
START sets the UNK . END
BLUE1:0.8
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public builder connection pool ( connection pool connection pool ) {
 if ( connection pool == null ) throw new null pointer exception ( String ) ;
 this . connection pool = connection pool ;
 return this ;
 }
comment:
START sets the connection pool used to UNK http and https connections . END
BLUE1:0.8
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public serial diff pipeline aggregation builder lag ( int lag ) {
 if ( lag <= DecimalInteger ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . lag = lag ;
 return this ;
 }
comment:
START sets the UNK to use when calculating the serial difference . END
BLUE1:0.8
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set strict java deps ( string strict java deps ) {
 this . strict java deps = strict java deps . value of ( strict java deps ) ;
 return this ;
 }
comment:
START sets the UNK level for dependency checking . END
BLUE1:0.8
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public auto scroll helper set activation delay ( int delay millis ) {
 UNK delay = delay millis ;
 return this ;
 }
comment:
START sets the delay after entering an activation edge before activation of UNK . END
BLUE1:0.8
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public query string query builder phrase slop ( int phrase slop ) {
 this . phrase slop = phrase slop ;
 return this ;
 }
comment:
START sets the default slop for UNK . END
BLUE1:0.8
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
private static boolean is navigation key ( key event key event ) {
 switch ( key event . get key code ( ) ) {
 case key event . keycode_ UNK t : case key event . keycode_ UNK t : case key event . keycode_ UNK p : case key event . keycode_ UNK n : case key event . keycode_ UNK r : case key event . keycode_ page_ p : case key event . keycode_ page_ n : case key event . keycode_ move_ e : case key event . keycode_ move_ d : case key event . keycode_ b : case key event . keycode_ e : case key event . keycode_ r : return true ;
 }
 return false ;
 }
comment:
START returns true if the key is used for keyboard navigation . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
private static boolean is UNK mode ( context context , intent intent ) {
 return intent . get boolean extra ( shared . extra_ UNK e , context . get resources ( ) . get boolean ( r . bool . UNK ) ) ;
 }
comment:
START returns true if app is running in `` UNK mode '' . END
BLUE1:0.75
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is UNK final ( element element ) {
 symbol sym = ( symbol ) element ;
 if ( sym . get enclosing element ( ) . get kind ( ) == element kind . d && ( sym . get enclosing element ( ) . flags ( ) & t ) != DecimalInteger ) {
 return true ;
 }
 return ( sym . flags ( ) & ( l | UNK l ) ) != DecimalInteger ;
 }
comment:
START returns true if the element is a effectively final element . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is UNK ( string name ) {
 return index writer . UNK lock_ e . equals ( name ) ;
 }
comment:
START returns true if the file is auto-generated by the store and should n't be deleted during cleanup . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is test rule and runs locally ( rule rule ) {
 return is test or test suite rule ( rule ) && ( is local test rule ( rule ) || is exclusive test rule ( rule ) ) ;
 }
comment:
START returns true if the rule is a test or test suite and is local or exclusive . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
private static boolean contains UNK ( string pattern ) {
 return pattern . contains ( String ) || pattern . contains ( String ) ;
 }
comment:
START returns true if the given pattern contains UNK . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
private static boolean is single file scope ( enum set < scope > scopes ) {
 if ( scopes . size ( ) != DecimalInteger ) {
 return false ;
 }
 final scope scope = scopes . iterator ( ) . next ( ) ;
 return scope == scope . source_ e || scope == scope . resource_ e || scope == scope . t || scope == scope . UNK e || scope == scope . r ;
 }
comment:
START returns true if the given analysis scope is UNK for UNK analysis END
BLUE1:0.75
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is point in triangle ( float px , float py , float UNK , float UNK , float UNK , float by , float cx , float UNK ) {
 float px1 = px - UNK ;
 float py1 = py - UNK ;
 boolean side12 = ( UNK - UNK ) * py1 - ( by - UNK ) * px1 > DecimalInteger ;
 if ( ( cx - UNK ) * py1 - ( UNK - UNK ) * px1 > DecimalInteger == side12 ) return false ;
 if ( ( cx - UNK ) * ( py - by ) - ( UNK - by ) * ( px - UNK ) > DecimalInteger != side12 ) return false ;
 return true ;
 }
comment:
START returns true if the given point is inside the triangle . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
private static boolean is method ( executable element UNK , executable element method , processing environment env ) {
 return ( UNK . equals ( method ) || env . get element utils ( ) . overrides ( UNK , method , ( type element ) UNK . get enclosing element ( ) ) ) ;
 }
comment:
START returns true if the given element is , or overrides , method . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the UNK is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean random boolean ( float UNK ) {
 return math utils . random ( ) < UNK ;
 }
comment:
START returns true if a random value between NUMBER and NUMBER is less than the specified value . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static substitution of space UNK map ( final string key , final immutable map < ? , ? > value ) {
 return new substitution ( ) {
 @ override public string get key ( ) {
 return key ;
 }
 @ override public string get value ( ) {
 return joiner . on ( String ) . with key value separator ( String ) . join ( value ) ;
 }
 }
 ;
 }
comment:
START returns an immutable UNK instance for the key and map of values . END
BLUE1:0.75
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable instance of the given file .
returns a immutable array of the given UNK .
returns a immutable instance of the given file , in any .

code:
static boolean is UNK ( buffer buffer ) {
 try {
 buffer prefix = new buffer ( ) ;
 long byte count = buffer . size ( ) < DecimalInteger ? buffer . size ( ) : DecimalInteger ;
 buffer . copy to ( prefix , DecimalInteger , byte count ) ;
 for ( int i = DecimalInteger ;
 i < DecimalInteger ;
 i ++ ) {
 if ( prefix . exhausted ( ) ) {
 break ;
 }
 int code point = prefix . read utf8 code point ( ) ;
 if ( character . is control ( code point ) && ! character . is whitespace ( code point ) ) {
 return false ;
 }
 }
 return true ;
 }
 catch ( exception e ) {
 return false ;
 }
 }
comment:
START returns true if the body in question UNK contains human readable text . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
static boolean is empty ( char sequence str ) {
 return str == null || str . length ( ) == DecimalInteger ;
 }
comment:
START returns true if the string is null or NUMBER . END
BLUE1:0.75
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the UNK is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is rotation lock toggle visible ( context context ) {
 return is rotation supported ( context ) && settings . system . get int for user ( context . get content resolver ( ) , settings . system . hide_ rotation_ lock_ UNK for_ y , DecimalInteger , user handle . user_ t ) == DecimalInteger ;
 }
comment:
START returns true if the UNK toggle should be shown in system ui . END
BLUE1:0.75
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public float get space bottom ( ) {
 return mspace percent bottom ;
 }
comment:
START returns the bottom axis space in percent of the full range . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
iterable < artifact > get proto compiler support ( ) {
 return rule context . get prerequisite artifacts ( objc rule classes . proto_ UNK support_ r , mode . t ) . list ( ) ;
 }
comment:
START returns the list of files needed by the proto compiler . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static attribute . builder < list < label > > blacklist UNK attribute ( string attribute name , list < label > blacklist file groups ) {
 return attr ( attribute name , label_ t ) . cfg ( t ) . value ( blacklist file groups ) ;
 }
comment:
START returns an attribute for the implicit dependency on UNK proto UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set entry label text size ( float size ) {
 ( ( pie chart renderer ) renderer ) . get paint entry labels ( ) . set text size ( utils . convert dp to pixel ( size ) ) ;
 }
comment:
START sets the size of the entry labels in dp . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private static label get stl ( rule rule , build configuration original ) {
 label stl = null ;
 if ( rule . get rule class object ( ) . has attr ( String , build type . l ) ) {
 label stl config label = original . get fragment ( cpp configuration . class ) . get stl ( ) ;
 label stl rule label = raw attribute mapper . of ( rule ) . get ( String , build type . l ) ;
 if ( stl config label == null ) {
 stl = stl rule label ;
 }
 else if ( ! stl config label . equals ( rule . get label ( ) ) && stl rule label != null ) {
 stl = stl config label ;
 }
 }
 return stl ;
 }
comment:
START returns the UNK prerequisite of the rule . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public boolean is column UNK ( int column index ) {
 return UNK all columns || UNK columns . get ( column index ) ;
 }
comment:
START returns whether the specified column is UNK or not . END
BLUE1:0.714285714286
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether the UNK is UNK in the .

code:
public int get cache limit ( ) {
 return this . cache limit ;
 }
comment:
START return the maximum number of entries for the resolved destination cache . END
BLUE1:0.714285714286
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
private long get available space ( ) {
 long low threshold = get main low space threshold ( ) ;
 file data dir = environment . get data directory ( ) ;
 long UNK space = data dir . get UNK space ( ) ;
 return UNK space - low threshold ;
 }
comment:
START returns the difference of free space to the UNK threshold . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get step argument ( int index ) {
 return b [ offset + DecimalInteger * index + DecimalInteger ] ;
 }
comment:
START returns the index of the type argument that the given step is UNK into . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void on status changed ( @ gnss navigation message status int status ) {
 }
comment:
START returns the latest status of the gnss navigation messages sub-system . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
void set last animated position ( final int last animated position ) {
 mlast animated position = last animated position ;
 }
comment:
START sets the value of the last animated position . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public int get cache limit ( ) {
 return this . cache limit ;
 }
comment:
START return the maximum number of entries for this template 's sql cache . END
BLUE1:0.714285714286
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public final artifact get source file ( ) {
 return cpp compile command line . source file ;
 }
comment:
START returns the path of the UNK source for gcc . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public usb accessory [ ] get accessory list ( ) {
 try {
 usb accessory accessory = service . get current accessory ( ) ;
 if ( accessory == null ) {
 return null ;
 }
 else {
 return new usb accessory [ ] {
 accessory }
 ;
 }
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns a list of currently attached usb UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void set volume ( float volume ) {
 this . volume = volume ;
 exo player message [ ] messages = new exo player message [ audio renderer count ] ;
 int count = DecimalInteger ;
 for ( renderer renderer : renderers ) {
 if ( renderer . get track type ( ) == c . UNK type_ o ) {
 messages [ count ++ ] = new exo player message ( renderer , c . msg_ set_ e , volume ) ;
 }
 }
 player . send messages ( messages ) ;
 }
comment:
START sets the audio volume , with NUMBER being UNK and NUMBER being UNK gain . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public multi match query builder type ( object type ) {
 if ( type == null ) {
 throw new illegal argument exception ( String + e + String ) ;
 }
 this . type = type . parse ( type . to string ( ) . to lower case ( locale . t ) , parse field matcher . y ) ;
 return this ;
 }
comment:
START sets the type of the text query . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public byte [ ] get bytes ( ) {
 byte [ ] extra = new byte [ get length ( ) ] ;
 try {
 get byte stream ( ) . read ( extra ) ;
 }
 catch ( exception UNK ) {
 throw new assertion error ( UNK ) ;
 }
 return extra ;
 }
comment:
START creates and returns a byte array of the extra data list . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ non null public static framework action bar wrapper get action bar wrapper ( @ non null bridge context context , @ non null action bar callback callback , @ non null view decor content ) {
 view view = decor content . find view by id ( r . id . UNK ) ;
 if ( view instanceof toolbar ) {
 return new toolbar wrapper ( context , callback , ( toolbar ) view ) ;
 }
 else if ( view instanceof action bar view ) {
 return new window action bar wrapper ( context , callback , decor content , ( action bar view ) view ) ;
 }
 else {
 throw new illegal state exception ( String + view . get class ( ) . get simple name ( ) ) ;
 }
 }
comment:
START returns a wrapper around different UNK of the action bar to provide a common api . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
private int num preview targets ( capture request request ) {
 int count = DecimalInteger ;
 for ( surface s : request . get targets ( ) ) {
 try {
 if ( preview type ( s ) ) {
 ++ count ;
 }
 }
 catch ( legacy exception utils . buffer queue abandoned exception e ) {
 log . d ( g , String , e ) ;
 }
 }
 return count ;
 }
comment:
START returns the number of surfaces targeted by the request that require UNK buffers . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
spdy settings frame set value ( int id , int value ) ;
comment:
START sets the value of the setting id . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ json property ( String ) public logging factory get logging factory ( ) {
 return logging ;
 }
comment:
START returns the UNK section of the configuration file . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set key progress increment ( int increment ) {
 mkey progress increment = increment < DecimalInteger ? - increment : increment ;
 }
comment:
START sets the amount of progress changed via the arrow keys . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public byte [ ] get sha1 digest ( ) throws exception {
 return file system . get sha1 digest ( this ) ;
 }
comment:
START returns the UNK digest of the file denoted by the current path , following symbolic links . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void add transformer ( class file transformer transformer ) {
 assert . not null ( transformer , String ) ;
 this . class file transformers . add ( transformer ) ;
 }
comment:
START add the given class file transformer to the list of transformers that this class loader will apply . END
BLUE1:0.714285714286
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add a new UNK to the UNK .
add the UNK UNK to the given UNK .
add the UNK UNK to the UNK

code:
public void play together ( animator ... items ) {
 if ( items != null ) {
 builder builder = play ( items [ DecimalInteger ] ) ;
 for ( int i = DecimalInteger ;
 i < items . length ;
 ++ i ) {
 builder . with ( items [ i ] ) ;
 }
 }
 }
comment:
START sets up this animator set to play all of the supplied animations at the same time . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
protected final value UNK get value UNK ( ) {
 return this . value UNK ;
 }
comment:
START return the value UNK used by this to string UNK . END
BLUE1:0.714285714286
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of all UNK .
return the list of UNK UNK

code:
public bluetooth gatt descriptor get descriptor ( d uuid ) {
 for ( bluetooth gatt descriptor descriptor : descriptors ) {
 if ( descriptor . get uuid ( ) . equals ( uuid ) ) {
 return descriptor ;
 }
 }
 return null ;
 }
comment:
START returns a descriptor with a given uuid out of the list of descriptors for this characteristic . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public void add ( sprite sprite ) {
 if ( mesh . get num indices ( ) > DecimalInteger ) {
 add ( sprite . get texture ( ) , sprite . get vertices ( ) , DecimalInteger , UNK e ) ;
 return ;
 }
 float [ ] sprite vertices = sprite . get vertices ( ) ;
 system . arraycopy ( sprite vertices , DecimalInteger , temp vertices , DecimalInteger , DecimalInteger * vertex_ e ) ;
 system . arraycopy ( sprite vertices , DecimalInteger * vertex_ e , temp vertices , DecimalInteger * vertex_ e , vertex_ e ) ;
 system . arraycopy ( sprite vertices , DecimalInteger * vertex_ e , temp vertices , DecimalInteger * vertex_ e , vertex_ e ) ;
 system . arraycopy ( sprite vertices , DecimalInteger , temp vertices , DecimalInteger * vertex_ e , vertex_ e ) ;
 add ( sprite . get texture ( ) , temp vertices , DecimalInteger , DecimalInteger ) ;
 }
comment:
START adds the specified sprite to the cache . END
BLUE1:0.714285714286
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the given UNK .

code:
public static final files to run provider UNK ( rule context rule context ) {
 return rule context . get executable prerequisite ( objc rule classes . UNK e , mode . t ) ;
 }
comment:
START returns the location of the UNK tool . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .
returns the list of UNK UNK

code:
public synchronized void set web view ( web view webview ) {
 webview = webview ;
 }
comment:
START sets the web view to the UNK object . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public configurator < ? , ? > get configurator ( ) {
 return configurator ;
 }
comment:
START returns the UNK instance for this attribute for label or label list attributes . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK for .

code:
public static string as string ( ) {
 return UNK g ;
 }
comment:
START returns the UNK boot class path as a UNK string . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public static void UNK to color ( color color , int value ) {
 color . r = ( ( value & UNK UNK ) > > > DecimalInteger ) / DecimalFloatingPoint ;
 color . g = ( ( value & UNK UNK ) > > > DecimalInteger ) / DecimalFloatingPoint ;
 color . b = ( ( value & UNK f ) > > > DecimalInteger ) / DecimalFloatingPoint ;
 }
comment:
START sets the color components using the specified integer value in the format UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
@ check result public bitmap extract alpha ( paint paint , int [ ] offset y ) {
 check recycled ( String ) ;
 long native paint = paint != null ? paint . get native instance ( ) : DecimalInteger ;
 bitmap bm = native extract alpha ( mnative ptr , native paint , offset y ) ;
 if ( bm == null ) {
 throw new runtime exception ( String ) ;
 }
 bm . density = density ;
 return bm ;
 }
comment:
START returns a new bitmap that UNK the alpha values of the original . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK UNK

code:
public object get source ( ) {
 object source = ( this . type provider != null ? this . type provider . get source ( ) : null ) ;
 return ( source != null ? source : this . type ) ;
 }
comment:
START return the underlying source of the UNK type . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public long connect ( ) {
 return context . session connect ( context . ctx ) ;
 }
comment:
START returns the number of started ssl/ s UNK in client mode . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean is blacklisted ( artifact proto file ) {
 return blacklist proto file paths . contains ( proto file . get exec path ( ) ) ;
 }
comment:
START returns whether the given proto file is UNK . END
BLUE1:0.714285714286
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public string [ ] get all selected strings ( ) {
 return mcurrent values ;
 }
comment:
START returns the list of currently selected values . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
@ visible for testing public collection < artifact > get resources ( ) {
 return resources ;
 }
comment:
START returns the list of paths that represent the resources to be added to the jar . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public long accept ( ) {
 return context . session accept ( context . ctx ) ;
 }
comment:
START returns the number of started ssl/ s UNK in server mode . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ nullable public byte [ ] get send conf UNK ( ) {
 return UNK conf UNK ;
 }
comment:
START returns the send UNK UNK , which UNK that the message was sent . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public list < input method subtype > get enabled input method subtype list ( input method info imi , boolean allows UNK selected subtypes ) {
 try {
 return service . get enabled input method subtype list ( imi == null ? null : imi . get id ( ) , allows UNK selected subtypes ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns a list of enabled input method subtypes for the specified input method info . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public nested set < artifact > get api generating processor classpath ( ) {
 return api generating processor classpath ;
 }
comment:
START returns the artifacts to add to the runtime classpath of the UNK processors . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public int get scaling mode ( ) throws illegal state exception {
 synchronized ( mstate lock ) {
 if ( state == state_ d ) {
 throw ( new illegal state exception ( String + state ) ) ;
 }
 return native_get scaling mode ( ) ;
 }
 }
comment:
START returns the current scaling mode on the captured UNK data . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ nullable public list < string > get applicable densities ( ) {
 if ( mcached applicable densities == null ) {
 if ( is gradle project ( ) && get gradle project model ( ) != null && get current variant ( ) != null ) {
 set < string > relevant densities = sets . new hash set ( ) ;
 variant variant = get current variant ( ) ;
 list < string > variant flavors = variant . get product flavors ( ) ;
 android project gradle project model = get gradle project model ( ) ;
 add res configs from flavor ( relevant densities , null , get gradle project model ( ) . get default config ( ) ) ;
 for ( product flavor container container : gradle project model . get product flavors ( ) ) {
 add res configs from flavor ( relevant densities , variant flavors , container ) ;
 }
 if ( relevant densities . is empty ( ) ) {
 android artifact main artifact = variant . get main artifact ( ) ;
 collection < android artifact output > outputs = main artifact . get outputs ( ) ;
 for ( android artifact output output : outputs ) {
 for ( output file file : output . get outputs ( ) ) {
 final string density_ e = output file . filter type . y . name ( ) ;
 if ( file . get filter types ( ) . contains ( density_ e ) ) {
 for ( filter data data : file . get filters ( ) ) {
 if ( density_ e . equals ( data . get filter type ( ) ) ) {
 relevant densities . add ( data . get identifier ( ) ) ;
 }
 }
 }
 }
 }
 }
 if ( ! relevant densities . is empty ( ) ) {
 mcached applicable densities = lists . new array list with expected size ( DecimalInteger ) ;
 for ( string density : relevant densities ) {
 string folder = resource folder type . e . get name ( ) + String + density ;
 mcached applicable densities . add ( folder ) ;
 }
 collections . sort ( mcached applicable densities ) ;
 }
 else {
 mcached applicable densities = collections . empty list ( ) ;
 }
 }
 else {
 mcached applicable densities = collections . empty list ( ) ;
 }
 }
 return mcached applicable densities . is empty ( ) ? null : mcached applicable densities ;
 }
comment:
START returns the set of applicable UNK for this project . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
immutable list < skylark file dependency > get dependencies ( ) {
 return dependencies ;
 }
comment:
START returns the list of direct skylark file dependencies of the skylark extension file corresponding to this object . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set UNK throwable ( throwable crash ) {
 preconditions . check state ( crash == null || ( ( crash instanceof runtime exception ) || ( crash instanceof error ) ) ) ;
 this . crash = crash ;
 }
comment:
START sets the runtime exception / error that UNK a blaze UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set bounds in screen ( rect bounds ) {
 mbounds in screen . set ( bounds ) ;
 }
comment:
START sets the bounds of this window in the screen . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public list < ? extends transitive info collection > get prerequisites ( string attribute name , mode mode ) {
 attribute attribute definition = get attribute ( attribute name ) ;
 if ( ( mode == mode . t ) && ( attribute definition . has split configuration transition ( ) ) ) {
 check attribute ( attribute name , mode . t ) ;
 map < optional < string > , ? extends list < ? extends transitive info collection > > map = get split prerequisites ( attribute name ) ;
 return map . is empty ( ) ? immutable list . < transitive info collection > of ( ) : map . entry set ( ) . iterator ( ) . next ( ) . get value ( ) ;
 }
 check attribute ( attribute name , mode ) ;
 return target map . get ( attribute name ) ;
 }
comment:
START returns the list of transitive info collections that feed into this target through the specified attribute . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
list < cluster > get UNK clusters ( string ... regions ) ;
comment:
START gets the list of UNK clusters in a list of regions . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
@ non null public list < capture result > get partial results ( ) {
 return collections . unmodifiable list ( UNK results ) ;
 }
comment:
START get the read-only list of partial results that UNK this total result . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public int get current UNK mode ( ) {
 try {
 if ( is service connected ( ) ) {
 return get telecom service ( ) . get current UNK mode ( context . get op package name ( ) ) ;
 }
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return UNK mode_ f ;
 }
comment:
START returns the current UNK mode of the device . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public int get max results ( ) {
 return this . max results ;
 }
comment:
START return the maximum number of rows specified for this hibernate template . END
BLUE1:0.714285714286
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
private void set month displayed ( calendar calendar ) {
 mcurrent month displayed = calendar . get ( calendar . h ) ;
 adapter . set focus month ( mcurrent month displayed ) ;
 final int flags = date utils . format_ show_ e | date utils . format_ no_ UNK y | date utils . format_ show_ r ;
 final long millis = calendar . get time in millis ( ) ;
 string new month name = date utils . format date range ( context , millis , millis , flags ) ;
 mmonth name . set text ( new month name ) ;
 mmonth name . invalidate ( ) ;
 }
comment:
START sets the month displayed at the top of this view based on time . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public list < running app process info > get running app processes ( ) {
 try {
 return activity manager native . get default ( ) . get running app processes ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns a list of application processes that are running on the device . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set no data text color ( int color ) {
 minfo paint . set color ( color ) ;
 }
comment:
START sets the color of the no data text . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ suppress warnings ( String ) @ non null public list < key > get keys ( ) {
 class < camera metadata < key > > this class = ( class < camera metadata < key > > ) get class ( ) ;
 return collections . unmodifiable list ( get keys static ( this class , get key class ( ) , this , null ) ) ;
 }
comment:
START returns a list of the keys contained in this map . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ can ignore return value public builder set safe range ( char safe min , char safe max ) {
 this . safe min = safe min ;
 this . safe max = safe max ;
 return this ;
 }
comment:
START sets the safe range of characters for the escaper . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set form line dash effect ( dash path effect dash path effect ) {
 mform line dash effect = dash path effect ;
 }
comment:
START sets the line dash path effect used for shapes that UNK of lines . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ override public list < resource > get resources ( resource type resource type , cleanup state state , string resource region ) {
 validate . not empty ( resource region ) ;
 string builder query = new string builder ( ) ;
 array list < string > args = new array list < > ( ) ;
 query . append ( string . format ( String , table ) ) ;
 if ( resource type != null ) {
 query . append ( String ) ;
 args . add ( resource type . to string ( ) ) ;
 }
 if ( state != null ) {
 query . append ( String ) ;
 args . add ( state . to string ( ) ) ;
 }
 query . append ( String ) ;
 args . add ( resource region ) ;
 r . debug ( string . format ( String , query ) ) ;
 list < resource > resources = jdbc template . query ( query . to string ( ) , args . to array ( ) , new row mapper < resource > ( ) {
 public resource map row ( result set rs , int row num ) throws exception {
 return map resource ( rs ) ;
 }
 }
 ) ;
 return resources ;
 }
comment:
START returns a list of UNK objects . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK to the UNK .

code:
public string get incrementer name ( ) {
 return this . incrementer name ;
 }
comment:
START return the name of the UNK . END
BLUE1:0.714285714286
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public final builder set video height ( int video height ) {
 if ( type != type_ o ) {
 throw new illegal state exception ( String ) ;
 }
 mvideo height = video height ;
 return this ;
 }
comment:
START sets the height of the video , in the unit of pixels . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static int get implicit UNK ( inet4 address address ) {
 int first byte = address . get address ( ) [ DecimalInteger ] & 0xff ;
 if ( first byte < DecimalInteger ) {
 return DecimalInteger ;
 }
 else if ( first byte < DecimalInteger ) {
 return DecimalInteger ;
 }
 else if ( first byte < DecimalInteger ) {
 return DecimalInteger ;
 }
 else {
 return DecimalInteger ;
 }
 }
comment:
START returns the implicit UNK of an ipv4 address , as was the custom before NUMBER . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public cpp link action builder set library identifier ( string library identifier ) {
 this . library identifier = library identifier ;
 return this ;
 }
comment:
START sets the identifier of the library produced by the action . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
protected void set epicenter ( ) {
 view epicenter = null ;
 if ( ! mall shared element names . is empty ( ) && ! mshared element names . is empty ( ) ) {
 int index = mshared element names . index of ( mall shared element names . get ( DecimalInteger ) ) ;
 if ( index >= DecimalInteger ) {
 epicenter = mshared elements . get ( index ) ;
 }
 }
 set epicenter ( epicenter ) ;
 }
comment:
START sets the transition epicenter to the position of the first shared element . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public void add actor ( actor actor ) {
 root . add actor ( actor ) ;
 }
comment:
START adds an actor to the root of the stage . END
BLUE1:0.714285714286
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
adds the UNK to the given .
add the UNK UNK to the UNK

code:
private void set media player to state ( media player state errors . media player state state ) {
 mmedia player state = state ;
 switch ( state ) {
 case e : break ;
 case UNK after_ t : set media player to idle state after reset ( ) ;
 break ;
 case d : set media player to initialized state ( ) ;
 break ;
 case d : set media player to prepared state ( ) ;
 break ;
 case UNK after_ p : set media player to prepared state after stop ( ) ;
 break ;
 case d : set media player to started state ( ) ;
 break ;
 case UNK after_ e : set media player to started state after pause ( ) ;
 break ;
 case d : set media player to paused state ( ) ;
 break ;
 case d : set media player to stopped state ( ) ;
 break ;
 case playback_ d : set media player to playback completed state ( ) ;
 break ;
 case r : set media player to error state ( ) ;
 break ;
 }
 }
comment:
START sets the state of the media player object to the specified one . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
boolean uses objc header names ( ) {
 if ( rule context . attributes ( ) . has ( objc proto library rule . use_ UNK header_ UNK r , type . n ) ) {
 return rule context . attributes ( ) . get ( objc proto library rule . use_ UNK header_ UNK r , type . n ) ;
 }
 return false ;
 }
comment:
START returns whether the generated header files should have be of type UNK or UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public void set gravity ( int gravity ) {
 window manager . layout params lp = get window ( ) . get attributes ( ) ;
 lp . gravity = gravity ;
 update width height ( lp ) ;
 get window ( ) . set attributes ( lp ) ;
 }
comment:
START set which boundary of the screen the dock window UNK to . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void set allow return transition overlap ( boolean allow ) {
 mallow return transition overlap = allow ;
 }
comment:
START sets whether the the return transition and UNK transition overlap or not . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public matcher < ? super type literal < ? > > get type matcher ( ) {
 return type matcher ;
 }
comment:
START returns the type matcher which UNK which types the listener should be notified of . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public void set properties ( UNK enhancer . settings settings ) throws illegal state exception , illegal argument exception , unsupported operation exception {
 check status ( set parameter ( param_ target_ gain_ b , settings . target UNK b ) ) ;
 }
comment:
START sets the UNK UNK properties . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public static bitmap create bitmap ( bitmap source , int x , int y , int width , int height , matrix m , boolean filter ) {
 check sign ( x , y ) ;
 check width height ( width , height ) ;
 if ( x + width > source . get width ( ) ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( y + height > source . get height ( ) ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( ! source . is mutable ( ) && x == DecimalInteger && y == DecimalInteger && width == source . get width ( ) && height == source . get height ( ) && ( m == null || m . is identity ( ) ) ) {
 return source ;
 }
 int UNK = width ;
 int UNK = height ;
 canvas canvas = new canvas ( ) ;
 bitmap bitmap ;
 paint paint ;
 rect src r = new rect ( x , y , x + width , y + height ) ;
 rect f dst r = new rect f ( DecimalInteger , DecimalInteger , width , height ) ;
 config new config = config . b_8888 ;
 final config config = source . get config ( ) ;
 if ( config != null ) {
 switch ( config ) {
 case b_565 : new config = config . b_565 ;
 break ;
 case UNK : new config = config . UNK ;
 break ;
 case UNK : case b_8888 : default : new config = config . b_8888 ;
 break ;
 }
 }
 if ( m == null || m . is identity ( ) ) {
 bitmap = create bitmap ( UNK , UNK , new config , source . has alpha ( ) ) ;
 paint = null ;
 }
 else {
 final boolean transformed = ! m . rect UNK rect ( ) ;
 rect f device r = new rect f ( ) ;
 m . map rect ( device r , dst r ) ;
 UNK = math . round ( device r . width ( ) ) ;
 UNK = math . round ( device r . height ( ) ) ;
 bitmap = create bitmap ( UNK , UNK , transformed ? config . b_8888 : new config , transformed || source . has alpha ( ) ) ;
 canvas . translate ( - device r . left , - device r . top ) ;
 canvas . concat ( m ) ;
 paint = new paint ( ) ;
 paint . set filter bitmap ( filter ) ;
 if ( transformed ) {
 paint . set anti alias ( true ) ;
 }
 }
 bitmap . density = source . density ;
 bitmap . set has alpha ( source . has alpha ( ) ) ;
 bitmap . set premultiplied ( source . mrequest premultiplied ) ;
 canvas . set bitmap ( bitmap ) ;
 canvas . draw bitmap ( source , src r , dst r , paint ) ;
 canvas . set bitmap ( null ) ;
 return bitmap ;
 }
comment:
START returns an immutable bitmap from subset of the source bitmap , transformed by the optional matrix . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public int get max action buttons ( ) {
 final configuration config = context . get resources ( ) . get configuration ( ) ;
 final int width = config . screen width dp ;
 final int height = config . screen height dp ;
 final int smallest = config . smallest screen width dp ;
 if ( smallest > DecimalInteger || ( width > DecimalInteger && height > DecimalInteger ) || ( width > DecimalInteger && height > DecimalInteger ) ) {
 return DecimalInteger ;
 }
 else if ( width >= DecimalInteger || ( width > DecimalInteger && height > DecimalInteger ) || ( width > DecimalInteger && height > DecimalInteger ) ) {
 return DecimalInteger ;
 }
 else if ( width >= DecimalInteger ) {
 return DecimalInteger ;
 }
 else {
 return DecimalInteger ;
 }
 }
comment:
START returns the maximum number of action buttons that should be permitted within an action UNK mode . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public paint . style get text style ( ) {
 return mtext style ;
 }
comment:
START returns the color of the UNK that is drawn next to the limit line . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void add action ( action action ) {
 root . add action ( action ) ;
 }
comment:
START adds an action to the root of the stage . END
BLUE1:0.714285714286
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
adds the UNK to the given .
add the UNK UNK to the UNK

code:
int get UNK last element ( e actual last element ) {
 int parent index = get parent index ( size ) ;
 if ( parent index != DecimalInteger ) {
 int UNK index = get parent index ( parent index ) ;
 int uncle index = get right child index ( UNK index ) ;
 if ( uncle index != parent index && get left child index ( uncle index ) >= size ) {
 e uncle element = element data ( uncle index ) ;
 if ( ordering . compare ( uncle element , actual last element ) < DecimalInteger ) {
 queue [ uncle index ] = actual last element ;
 queue [ size ] = uncle element ;
 return uncle index ;
 }
 }
 }
 return size ;
 }
comment:
START returns the UNK correct last element of the heap . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public label get xcode config label ( ) {
 return xcode config label ;
 }
comment:
START returns the label of the UNK rule to use for resolving the host system xcode version . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set current item index ( int current item index ) {
 enforce not sealed ( ) ;
 mcurrent item index = current item index ;
 }
comment:
START sets the index of the source in the list of items that can be visited . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ visible for testing static iterable < xcodeproj build setting > default xcode settings ( ) {
 return immutable list . of ( xcodeproj build setting . new builder ( ) . set name ( String ) . set value ( String ) . build ( ) ) ;
 }
comment:
START returns a list of default xcode build settings for UNK xcode projects . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void set scatter shape size ( float size ) {
 mshape size = size ;
 }
comment:
START sets the size in density pixels the drawn UNK will have . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public float get UNK ( ) {
 return jni get UNK ( addr ) ;
 }
comment:
START get the UNK UNK of the body about the local origin . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public object animator add anim to ( long duration , long delay , string property , float to value , boolean replace ) {
 if ( replace ) remove animation for ( property ) ;
 object animator anim = object animator . of float ( this , property , to value ) ;
 anim . set duration ( duration ) ;
 anim . set start delay ( delay ) ;
 anim . set interpolator ( UNK out_ r ) ;
 this . add animation ( anim , replace ) ;
 if ( g ) log . v ( g , String + animators . size ( ) ) ;
 return anim ;
 }
comment:
START adds an animation that UNK given property from its current value to the given value . END
BLUE1:0.714285714286
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public list < framework field > get annotated fields ( ) {
 return collect values ( fields for annotations ) ;
 }
comment:
START returns , UNK , all the UNK fields in this class and its superclasses that are annotated . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set position ( int x , int y ) {
 w . UNK set window pos ( window handle , x , y ) ;
 }
comment:
START sets the position of the window in logical coordinates . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public immutable collection < aspect class > get attribute aspects ( attribute attribute ) {
 return attribute aspects . propagate ( attribute ) ;
 }
comment:
START returns the set of required aspects for a given UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public immutable list < glob criteria > get criteria ( ) {
 return criteria ;
 }
comment:
START returns the criteria used to create this list , from which the UNK can be retrieved . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set size ( long size ) {
 if ( size < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( size > 0xffffffff l ) {
 feature set . add ( feature . zip64_ e ) ;
 }
 else {
 feature set . remove ( feature . zip64_ e ) ;
 }
 this . size = size ;
 }
comment:
START sets the uncompressed size of the entry data in bytes . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
public bulk index by scroll response matcher batches ( matcher < integer > batches matcher ) {
 this . batches matcher = batches matcher ;
 return this ;
 }
comment:
START set the matches for the number of UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static int get sim state for slot idx ( int slot idx ) {
 int sim state = telephony manager . sim_ state_ n ;
 try {
 sub sub = sub . stub . as interface ( service manager . get service ( String ) ) ;
 if ( sub != null ) {
 sim state = sub . get sim state for slot idx ( slot idx ) ;
 }
 }
 catch ( remote exception ex ) {
 }
 return sim state ;
 }
comment:
START returns a constant indicating the state of sim for the slot UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public builder schema version ( long schema version ) {
 if ( schema version < DecimalInteger ) {
 throw new illegal argument exception ( String + schema version ) ;
 }
 this . schema version = schema version ;
 return this ;
 }
comment:
START sets the schema version of the realm . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ suppress warnings ( String ) public object [ ] get values ( ) {
 t [ ] r = get values ( ( t [ ] ) empty_ y ) ;
 if ( r == empty_ y ) {
 return new object [ DecimalInteger ] ;
 }
 return r ;
 }
comment:
START returns a snapshot of the currently buffered UNK events . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private void add device specific UNK ( ) {
 print writer out = null ;
 try {
 out = new print writer ( new file output stream ( random device ) ) ;
 out . println ( String ) ;
 out . println ( String ) ;
 out . println ( start_ e ) ;
 out . println ( start_ e ) ;
 out . println ( system properties . get ( String ) ) ;
 out . println ( system properties . get ( String ) ) ;
 out . println ( system properties . get ( String ) ) ;
 out . println ( system properties . get ( String ) ) ;
 out . println ( system properties . get ( String ) ) ;
 out . println ( system properties . get ( String ) ) ;
 out . println ( system properties . get ( String ) ) ;
 out . println ( system properties . get ( String ) ) ;
 out . println ( new object ( ) . hash code ( ) ) ;
 out . println ( system . current time millis ( ) ) ;
 out . println ( system . nano time ( ) ) ;
 }
 catch ( exception e ) {
 slog . w ( g , String , e ) ;
 }
 finally {
 if ( out != null ) {
 out . close ( ) ;
 }
 }
 }
comment:
START add additional information to the kernel UNK pool . END
BLUE1:0.714285714286
--generate--
add the UNK to the UNK .
sets the UNK for the given UNK .
add the UNK to the given UNK .
sets the UNK of the given UNK .
add the UNK to the UNK to the UNK .

code:
public double get swipe dead zone percentage ( ) {
 tracer . trace ( ) ;
 return mswipe dead zone percentage ;
 }
comment:
START returns the percentage of a widget 's size that 's considered as a UNK zone when swiping . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set completion hint ( char sequence hint ) {
 mhint text = hint ;
 if ( hint != null ) {
 if ( mhint view == null ) {
 final text view hint view = ( text view ) layout inflater . from ( mpopup context ) . inflate ( mhint resource , null ) . find view by id ( r . id . text1 ) ;
 hint view . set text ( mhint text ) ;
 mhint view = hint view ;
 popup . set prompt view ( hint view ) ;
 }
 else {
 mhint view . set text ( hint ) ;
 }
 }
 else {
 popup . set prompt view ( null ) ;
 mhint view = null ;
 }
 }
comment:
START sets the optional hint text that is displayed at the bottom of the the matching list . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
immutable list < string > get attributes with java runtime deps ( rule context rule context ) ;
comment:
START returns the list of attributes that may contribute java runtime dependencies . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public immutable list < t > components ( ) {
 return critical path components ;
 }
comment:
START returns a list of all the component stats for the critical path . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set progress ( @ float range ( from = DecimalFloatingPoint , to = DecimalFloatingPoint ) float progress ) {
 preconditions . check argument in range ( progress , DecimalInteger , DecimalInteger , String ) ;
 progress = progress ;
 }
comment:
START sets the progress of the print job . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public midi device info [ ] get devices ( ) {
 try {
 return service . get devices ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START gets the list of all connected UNK devices . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean zip tree artifact ( ) {
 return zip tree artifact ;
 }
comment:
START returns whether to enable the UNK implementation of tree artifact creation . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
protected abstract void set values ( prepared statement ps , lob creator lob creator ) throws exception , data access exception ;
comment:
START set values on the given prepared statement , using the given UNK creator for UNK b arguments . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public infc card emulation get card emulation service ( ) {
 is enabled ( ) ;
 return UNK emulation service ;
 }
comment:
START returns the binder interface to the card UNK service . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public static int get UNK frame size ( byte [ ] data ) {
 return ( ( ( data [ DecimalInteger ] & UNK ) << DecimalInteger ) | ( ( data [ DecimalInteger ] & 0x f ) << DecimalInteger ) | ( ( data [ DecimalInteger ] & 0x f0 ) > > DecimalInteger ) ) + DecimalInteger ;
 }
comment:
START returns the size in bytes of the given UNK frame . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public void set glyph page height ( int glyph page height ) {
 this . glyph page height = glyph page height ;
 }
comment:
START sets the height of the backing textures . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static list < application info > get default carrier apps ( ipackage manager package manager , telephony manager telephony manager , int user id ) {
 list < application info > candidates = get default carrier app candidates ( package manager , user id ) ;
 if ( candidates == null || candidates . is empty ( ) ) {
 return null ;
 }
 for ( int i = candidates . size ( ) - DecimalInteger ;
 i >= DecimalInteger ;
 i -- ) {
 application info ai = candidates . get ( i ) ;
 string package name = ai . package name ;
 boolean has UNK = telephony manager . check carrier UNK for package any phone ( package name ) == telephony manager . UNK UNK status_ has_ s ;
 if ( ! has UNK ) {
 candidates . remove ( i ) ;
 }
 }
 return candidates ;
 }
comment:
START returns the list of `` default '' carrier apps . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
public label get cc toolchain rule label ( ) {
 return cc toolchain label ;
 }
comment:
START returns the label of the UNK rule for the c++ configuration . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private void set ( int idx , float x , float y , float width , float height , float color ) {
 final float fx2 = x + width ;
 final float fy2 = y + height ;
 final float [ ] vertices = this . vertices ;
 vertices [ idx ++ ] = x ;
 vertices [ idx ++ ] = y ;
 vertices [ idx ] = color ;
 idx += DecimalInteger ;
 vertices [ idx ++ ] = x ;
 vertices [ idx ++ ] = fy2 ;
 vertices [ idx ] = color ;
 idx += DecimalInteger ;
 vertices [ idx ++ ] = fx2 ;
 vertices [ idx ++ ] = fy2 ;
 vertices [ idx ] = color ;
 idx += DecimalInteger ;
 vertices [ idx ++ ] = fx2 ;
 vertices [ idx ++ ] = y ;
 vertices [ idx ] = color ;
 }
comment:
START set the coordinates and color of a UNK of the patch . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
protected void add to UNK ( block b ) {
 if ( ! UNK . contains ( b ) ) {
 UNK . add ( b ) ;
 }
 }
comment:
START add a basic block to the UNK . END
BLUE1:0.714285714286
--generate--
add the UNK to the UNK .
add the UNK to the given UNK .
sets the UNK for the given UNK .
add the UNK to the UNK to the UNK .
add the UNK to the UNK

code:
public void set drop down view resource ( int drop down layout ) {
 mdrop down layout = drop down layout ;
 }
comment:
START sets the layout resource of the drop down views . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
private int count UNK arguments ( ) {
 int num = DecimalInteger ;
 for ( argument . passed arg : args ) {
 if ( arg . is UNK ( ) ) {
 num ++ ;
 }
 }
 return num ;
 }
comment:
START returns the number of UNK arguments . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
void set profile owner user restrictions UNK ( int user id ) {
 synchronized ( lock ) {
 owner info profile owner = UNK owners . get ( user id ) ;
 if ( profile owner != null ) {
 profile owner . user restrictions UNK = true ;
 }
 write profile owner ( user id ) ;
 }
 }
comment:
START sets the user restrictions UNK flag , and also writes to the file . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ system api public static map < string , string > get custom labels ( context context , int user id ) {
 string labels string = settings . secure . get string for user ( context . get content resolver ( ) , settings . secure . tv_ input_ custom_ s , user id ) ;
 map < string , string > map = new hash map < > ( ) ;
 if ( text utils . is empty ( labels string ) ) {
 return map ;
 }
 string [ ] pairs = labels string . split ( tv_ input_ r ) ;
 for ( string pair string : pairs ) {
 string [ ] pair = pair string . split ( custom_ name_ r ) ;
 map . put ( uri . decode ( pair [ DecimalInteger ] ) , uri . decode ( pair [ DecimalInteger ] ) ) ;
 }
 return map ;
 }
comment:
START returns a map of tv input UNK label pairs set by the user in the settings . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
@ visible for testing collection < artifact > get bootclasspath ( ) {
 return bootclasspath entries ;
 }
comment:
START returns the list of paths that represents the bootclasspath . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
action future < pending cluster tasks response > pending cluster tasks ( pending cluster tasks request request ) ;
comment:
START returns a list of the pending cluster tasks , that are scheduled to be executed . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public static set < shard id > select UNK shards ( int shard id , index meta data source index metadata , int num target shards ) {
 if ( shard id >= num target shards ) {
 throw new illegal argument exception ( String + num target shards + String + shard id ) ;
 }
 int routing factor = get routing factor ( source index metadata , num target shards ) ;
 set < shard id > shards = new hash set < > ( routing factor ) ;
 for ( int i = shard id * routing factor ;
 i < routing factor * shard id + routing factor ;
 i ++ ) {
 shards . add ( new shard id ( source index metadata . get index ( ) , i ) ) ;
 }
 return shards ;
 }
comment:
START returns the source shard ids to UNK into the given shard id . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static realm thread pool executor new default executor ( ) {
 return new realm thread pool executor ( UNK pool_ e , UNK pool_ e ) ;
 }
comment:
START creates a default realm thread pool that is UNK by the number of available UNK . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ override protected void on create ( bundle saved instance state ) {
 super . on create ( saved instance state ) ;
 window the window = get window ( ) ;
 window manager . layout params lp = the window . get attributes ( ) ;
 lp . width = view group . layout params . match_ t ;
 lp . height = view group . layout params . match_ t ;
 lp . gravity = gravity . p | gravity . UNK l ;
 lp . soft input mode = window manager . layout params . UNK input_ UNK e ;
 the window . set attributes ( lp ) ;
 set canceled on touch outside ( true ) ;
 }
comment:
START create the search dialog and any resources that are used for the entire UNK of the dialog . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static final string expand help topic ( string topic , string help , class < ? extends blaze command > command class , collection < class < ? extends options base > > options , map < string , string > category descriptions , options parser . help verbosity help verbosity , string product name ) {
 options parser parser = options parser . new options parser ( options ) ;
 string template ;
 if ( help . starts with ( String ) ) {
 string resource name = help . substring ( String . length ( ) ) ;
 try {
 template = resource file loader . load resource ( command class , resource name ) ;
 }
 catch ( exception e ) {
 throw new illegal state exception ( String + resource name + String + e . get message ( ) , e ) ;
 }
 }
 else {
 template = help ;
 }
 if ( ! template . contains ( String ) ) {
 throw new illegal state exception ( String + topic + String ) ;
 }
 string option str = parser . describe options ( category descriptions , help verbosity ) . replace ( String , product name ) ;
 return template . replace ( String , product name ) . replace ( String , topic ) . replace ( String , option str ) . trim ( ) + String + ( help verbosity == options parser . help verbosity . m ? String : String ) ;
 }
comment:
START returns the expansion of the specified help UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set layer gravity ( int index , int gravity ) {
 final child drawable child drawable = mlayer state . children [ index ] ;
 child drawable . gravity = gravity ;
 }
comment:
START sets the gravity used to position or UNK the specified layer within its container . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public list < user info > get profiles ( @ user id int int user handle ) {
 try {
 return service . get profiles ( user handle , false ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns list of the profiles of user handle including user handle itself . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
string [ ] get storage document ids ( string document id ) throws file not found exception {
 preconditions . check argument ( create identifier ( document id ) . UNK type == document_ type_ e ) ;
 try ( final cursor cursor = database . query ( table_ s , strings ( document . column_ document_ d ) , column_ row_ e + String + column_ UNK document_ d + String + column_ document_ e + String , strings ( row_ state_ d , row_ state_ d , document id , document_ type_ e ) , null , null , null ) ) {
 final string [ ] ids = new string [ cursor . get count ( ) ] ;
 for ( int i = DecimalInteger ;
 cursor . move to next ( ) ;
 i ++ ) {
 ids [ i ] = cursor . get string ( DecimalInteger ) ;
 }
 return ids ;
 }
 }
comment:
START returns document ids of UNK under the given device document . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set output file ( string path ) throws illegal state exception {
 fd = null ;
 path = path ;
 }
comment:
START sets the path of the output file to be produced . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public void set link UNK bandwidth kbps ( int up kbps ) {
 mlink up bandwidth kbps = up kbps ;
 }
comment:
START sets the upstream UNK for this network in UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set center text ( char sequence text ) {
 if ( text == null ) mcenter text = String ;
 else mcenter text = text ;
 }
comment:
START sets the text string that is displayed in the center of the pie chart . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public static vector2 triangle UNK ( float x1 , float y1 , float x2 , float y2 , float x3 , float y3 , vector2 UNK ) {
 float UNK = x2 - x1 , UNK = y2 - y1 ;
 float UNK = x3 - x2 , UNK = y3 - y2 ;
 float UNK = x1 - x3 , UNK = y1 - y3 ;
 float det = UNK * UNK - UNK * UNK ;
 if ( math . abs ( det ) < math utils . float_ UNK r ) throw new illegal argument exception ( String ) ;
 det *= DecimalInteger ;
 float UNK = x1 * x1 + y1 * y1 , UNK = x2 * x2 + y2 * y2 , UNK = x3 * x3 + y3 * y3 ;
 UNK . set ( ( UNK * UNK + UNK * UNK + UNK * UNK ) / det , - ( UNK * UNK + UNK * UNK + UNK * UNK ) / det ) ;
 return UNK ;
 }
comment:
START returns the UNK of the triangle . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static int get UNK UNK audio sample count ( ) {
 return UNK UNK audio_ sample_ t ;
 }
comment:
START returns the number of audio samples in an UNK syncframe . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void set owner email ( string owner email ) {
 this . owner email = owner email ;
 }
comment:
START sets the owner email of the cluster . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
modified file set get diff ( view old view , view new view ) throws incompatible view exception , broken diff awareness exception ;
comment:
START returns the set of files of UNK that have been modified between the given two views . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
list < v > get views ( ) {
 return pool ;
 }
comment:
START returns the list of views in the pool . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public int [ ] get supported sample rates ( ) {
 return arrays . copy of ( msample rates , msample rates . length ) ;
 }
comment:
START returns the array of supported sample rates if the codec supports only UNK values . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static < t > list < t > read optional list ( string processor type , string processor tag , map < string , object > configuration , string property name ) {
 object value = configuration . remove ( property name ) ;
 if ( value == null ) {
 return null ;
 }
 return read list ( processor type , processor tag , property name , value ) ;
 }
comment:
START returns and removes the specified property of type list from the specified configuration map . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public java . util . iterator < node < e > > iterator ( ) {
 if ( iterator == null ) {
 iterator = new iterator ( ) ;
 }
 return iterator . reset ( ) ;
 }
comment:
START returns an iterator to UNK the list . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public list < skylark param doc > get params ( ) {
 return immutable list . < skylark param doc > of ( ) ;
 }
comment:
START returns a list containing the documentation for each of the method 's parameters . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set drop down gravity ( int gravity ) {
 mdrop down gravity = gravity ;
 }
comment:
START set the gravity of the UNK list . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
immutable list < string > get UNK splits ( ) {
 return UNK splits ;
 }
comment:
START returns the list of split flags which did not find a match . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public list iterator < e > list iterator ( ) {
 if ( ! is loaded ( ) ) {
 return collections . < e > empty list ( ) . list iterator ( ) ;
 }
 return new realm results list iterator ( DecimalInteger ) ;
 }
comment:
START returns a list iterator for the results of a query . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public int get sector count ( ) {
 switch ( size ) {
 case UNK k : return DecimalInteger ;
 case UNK k : return DecimalInteger ;
 case UNK k : return DecimalInteger ;
 case size_ i : return DecimalInteger ;
 default : return DecimalInteger ;
 }
 }
comment:
START return the number of mifare UNK UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static long get unsafe buffer address ( buffer buffer ) {
 return get buffer address ( buffer ) + buffer . position ( ) ;
 }
comment:
START returns the address of the buffer , it UNK it is an unsafe buffer . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static int hash code ( char sequence value ) {
 if ( value == null ) {
 return DecimalInteger ;
 }
 if ( value . get class ( ) == ascii string . class ) {
 return value . hash code ( ) ;
 }
 return platform dependent . hash code ascii ( value ) ;
 }
comment:
START returns the UNK hash code of the specified string . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ deprecated public void set preference screen ( preference screen preference screen ) {
 require preference manager ( ) ;
 if ( mpreference manager . set preferences ( preference screen ) && preference screen != null ) {
 post bind preferences ( ) ;
 char sequence title = get preference screen ( ) . get title ( ) ;
 if ( title != null ) {
 set title ( title ) ;
 }
 }
 }
comment:
START sets the root of the preference hierarchy that this activity is showing . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ deprecated public void set unfocused month date color ( @ color int int color ) {
 delegate . set unfocused month date color ( color ) ;
 }
comment:
START sets the color for the dates of a not focused month . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void play UNK ( list < animator > items ) {
 if ( items != null && items . size ( ) > DecimalInteger ) {
 mneeds sort = true ;
 if ( items . size ( ) == DecimalInteger ) {
 play ( items . get ( DecimalInteger ) ) ;
 }
 else {
 for ( int i = DecimalInteger ;
 i < items . size ( ) - DecimalInteger ;
 ++ i ) {
 play ( items . get ( i ) ) . before ( items . get ( i + DecimalInteger ) ) ;
 }
 }
 }
 }
comment:
START sets up this animator set to play each of the supplied animations when the previous animation ends . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ non null public builder set certificate not after ( @ non null date date ) {
 if ( date == null ) {
 throw new null pointer exception ( String ) ;
 }
 mcertificate not after = utils . clone if not null ( date ) ;
 return this ;
 }
comment:
START sets the end of the validity period for the self-signed certificate of the generated key pair . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public list < string > get providers ( boolean enabled only ) {
 try {
 return service . get providers ( null , enabled only ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns a list of the names of location providers . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
files to run provider environment plist ( ) {
 return rule context . get executable prerequisite ( String , mode . t ) ;
 }
comment:
START returns the location of the UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public synchronized array list < searchable info > get searchables in global search list ( ) {
 return new array list < searchable info > ( msearchables in global search list ) ;
 }
comment:
START returns a list of the searchable activities that can be included in global search . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
string get test include filter ( ) {
 return test include filter ;
 }
comment:
START returns the value of the UNK option , or null if it was not specified . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public final void add raw image callback buffer ( byte [ ] callback buffer ) {
 add callback buffer ( callback buffer , camera_ msg_ raw_ e ) ;
 }
comment:
START adds a UNK buffer to the raw image callback buffer queue . END
BLUE1:0.714285714286
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK to the UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public static func1 < object , boolean > is instance of ( class < ? > clazz ) {
 return new is instance of func1 ( clazz ) ;
 }
comment:
START returns a UNK that checks if its argument is an instance of the supplied class . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public list < user info > get enabled profiles ( @ user id int int user handle ) {
 try {
 return service . get profiles ( user handle , true ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns list of the profiles of user handle including user handle itself . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
void add variable names to ( set < string > vars ) {
 vars . add all ( bindings . key set ( ) ) ;
 if ( parent != null ) {
 parent . add variable names to ( vars ) ;
 }
 }
comment:
START adds the variable names of this frame and its transitive parents to the given set . END
BLUE1:0.714285714286
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the given UNK .

code:
public string [ ] snapshots ( ) {
 return this . snapshots ;
 }
comment:
START returns the names of the snapshots . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set incrementer name ( string incrementer name ) {
 this . incrementer name = incrementer name ;
 }
comment:
START set the name of the UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .

code:
@ json property ( String ) public server factory get server factory ( ) {
 return server ;
 }
comment:
START returns the UNK section of the configuration file . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public void set preference screen ( preference screen preference screen ) {
 if ( mpreference manager . set preferences ( preference screen ) && preference screen != null ) {
 on unbind preferences ( ) ;
 UNK UNK = true ;
 if ( UNK done ) {
 post bind preferences ( ) ;
 }
 }
 }
comment:
START sets the root of the preference hierarchy that this fragment is showing . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set last point ( float dx , float dy ) {
 is simple path = false ;
 native_set last point ( mnative path , dx , dy ) ;
 }
comment:
START sets the last point of the path . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private void set state error ( media recorder state errors . media recorder state state , boolean error ) {
 switch ( state ) {
 case l : mstate errors . error in initial state = error ;
 break ;
 case initial_ after_ t : mstate errors . error in initial state after reset = error ;
 break ;
 case initial_ after_ p : mstate errors . error in initial state after stop = error ;
 break ;
 case d : mstate errors . error in initialized state = error ;
 break ;
 case d : mstate errors . error in data source configured state = error ;
 break ;
 case d : mstate errors . error in prepared state = error ;
 break ;
 case g : mstate errors . error in recording state = error ;
 break ;
 case r : mstate errors . error in error state = error ;
 break ;
 }
 }
comment:
START sets the error value of the corresponding state to the given error . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public int set scaling mode ( int mode ) throws illegal state exception {
 synchronized ( mstate lock ) {
 if ( state == state_ d ) {
 throw ( new illegal state exception ( String + state ) ) ;
 }
 return native_set scaling mode ( mode ) ;
 }
 }
comment:
START set the type of scaling applied on the captured UNK data . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set method param ( string method param ) {
 this . method param = method param ;
 }
comment:
START set the name of the request param for UNK supported http methods . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set ( object obj , object value ) throws reflection exception {
 try {
 field . set ( obj , value ) ;
 }
 catch ( illegal argument exception e ) {
 throw new reflection exception ( String + get declaring class ( ) + String + get name ( ) + String + e . get message ( ) , e ) ;
 }
 catch ( illegal access exception e ) {
 throw new reflection exception ( String + get name ( ) + String + e . get message ( ) , e ) ;
 }
 }
comment:
START sets the value of the field on the supplied object . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public final void set transition name ( string transition name ) {
 mtransition name = transition name ;
 }
comment:
START sets the name of the view to be used to identify views in transitions . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public int get sequence number ( ) {
 return sequence number ;
 }
comment:
START returns the index of this request on its http connection . END
BLUE1:0.714285714286
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public r set first available image requests ( t [ ] first available image requests , boolean try cache only first ) {
 mmulti image requests = first available image requests ;
 UNK cache only first = try cache only first ;
 return get this ( ) ;
 }
comment:
START sets the array of UNK image requests that will be UNK in order . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
void add for ( expression loop var , expression list expression ) {
 clause for clause = new for clause ( new value ( loop var ) , list expression ) ;
 clauses . add ( for clause ) ;
 }
comment:
START add a new for clause to the UNK . END
BLUE1:0.714285714286
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
add the UNK to the given UNK .
sets the UNK for the given UNK .
add the UNK to the UNK to the UNK .

code:
public static float exp ( float value ) {
 return ( float ) math . exp ( value ) ;
 }
comment:
START returns the closest float approximation of the UNK `` e '' to the power of the argument . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set join ( int join ) {
 this . join = join ;
 }
comment:
START sets how the corners of the outline are drawn . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
private list < type literal < ? > > resolve all ( type [ ] types ) {
 type literal < ? > [ ] result = new type literal < ? > [ types . length ] ;
 for ( int t = DecimalInteger ;
 t < types . length ;
 t ++ ) {
 result [ t ] = resolve ( types [ t ] ) ;
 }
 return arrays . as list ( result ) ;
 }
comment:
START returns an immutable list of the resolved types . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public static < t > list < optional < local property < t > > > match ( list < local property < t > > UNK , list < local property < t > > desired ) {
 UNK iterator < local property < t > > actual iterator = UNK iterator ( normalize and prune ( UNK ) . iterator ( ) ) ;
 set < t > constants = new hash set < > ( ) ;
 boolean consume more UNK = true ;
 list < optional < local property < t > > > result = new array list < > ( desired . size ( ) ) ;
 for ( local property < t > desired property : desired ) {
 while ( consume more UNK && actual iterator . has next ( ) && desired property . is UNK by ( actual iterator . peek ( ) ) ) {
 constants . add all ( actual iterator . next ( ) . get columns ( ) ) ;
 }
 optional < local property < t > > UNK desired = desired property . with constants ( constants ) ;
 consume more UNK &= ! UNK desired . is present ( ) ;
 result . add ( UNK desired ) ;
 }
 return result ;
 }
comment:
START returns a list of the same length as the original . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
@ android . view . remotable view method public final void set hint ( char sequence hint ) {
 hint = text utils . string or spanned string ( hint ) ;
 if ( layout != null ) {
 check for UNK ( ) ;
 }
 if ( text . length ( ) == DecimalInteger ) {
 invalidate ( ) ;
 }
 if ( editor != null && text . length ( ) == DecimalInteger && hint != null ) {
 editor . invalidate text display list ( ) ;
 }
 }
comment:
START sets the text to be displayed when the text of the text view is empty . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
builder set default UNK ( boolean default UNK ) {
 pkg . set default test only ( default UNK ) ;
 return this ;
 }
comment:
START sets the default value of ` UNK ' . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public list < directory entry > list ( ) {
 return entries ;
 }
comment:
START returns a list of directory entries , in the order they occur in the central directory . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public final completable observe on ( final scheduler scheduler ) {
 require non null ( scheduler ) ;
 return create ( new on subscribe ( ) {
 @ override public void call ( final rx . completable subscriber s ) {
 final subscription list ad = new subscription list ( ) ;
 final scheduler . worker w = scheduler . create worker ( ) ;
 ad . add ( w ) ;
 s . on subscribe ( ad ) ;
 unsafe subscribe ( new rx . completable subscriber ( ) {
 @ override public void on completed ( ) {
 w . schedule ( new action0 ( ) {
 @ override public void call ( ) {
 try {
 s . on completed ( ) ;
 }
 finally {
 ad . unsubscribe ( ) ;
 }
 }
 }
 ) ;
 }
 @ override public void on error ( final throwable e ) {
 w . schedule ( new action0 ( ) {
 @ override public void call ( ) {
 try {
 s . on error ( e ) ;
 }
 finally {
 ad . unsubscribe ( ) ;
 }
 }
 }
 ) ;
 }
 @ override public void on subscribe ( subscription d ) {
 ad . add ( d ) ;
 }
 }
 ) ;
 }
 }
 ) ;
 }
comment:
START returns a completable which emits the terminal events from the thread of the specified scheduler . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void set minimum alpha ( final float minimum alpha ) {
 if ( mswipe touch listener != null ) {
 mswipe touch listener . set minimum alpha ( minimum alpha ) ;
 }
 }
comment:
START sets the minimum value of the alpha property swiping views should have . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ override public final string name ( ) {
 return this . name ;
 }
comment:
START returns the injected name of the analyzer . END
BLUE1:0.714285714286
--generate--
returns the UNK of the request .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the request
returns the UNK of the UNK

code:
public native void set location ( float x , float y , float z ) ;
comment:
START sets the location of the camera . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public native void set video size ( int width , int height ) throws illegal state exception ;
comment:
START sets the width and height of the video to be captured . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ nullable public list < tv track info > get tracks ( int type ) {
 synchronized ( mmetadata lock ) {
 if ( type == tv track info . type_ o ) {
 if ( maudio tracks == null ) {
 return null ;
 }
 return new array list < > ( maudio tracks ) ;
 }
 else if ( type == tv track info . type_ o ) {
 if ( mvideo tracks == null ) {
 return null ;
 }
 return new array list < > ( mvideo tracks ) ;
 }
 else if ( type == tv track info . type_ e ) {
 if ( msubtitle tracks == null ) {
 return null ;
 }
 return new array list < > ( msubtitle tracks ) ;
 }
 }
 throw new illegal argument exception ( String + type ) ;
 }
comment:
START returns the list of tracks for a given type . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
@ visible for testing static int first UNK character ( string value ) {
 char [ ] chars = value . to char array ( ) ;
 for ( int i = DecimalInteger ;
 i < chars . length ;
 i ++ ) {
 if ( chars [ i ] >= min_ e ) {
 return i ;
 }
 }
 return - DecimalInteger ;
 }
comment:
START returns index of first UNK character in the string -1 if no UNK character is found END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ system api public boolean is UNK ( ) {
 try {
 if ( is service connected ( ) ) {
 return get telecom service ( ) . is UNK ( context . get op package name ( ) ) ;
 }
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return false ;
 }
comment:
START returns whether there currently exists is a UNK UNK . END
BLUE1:0.714285714286
--generate--
sets whether the UNK is UNK .
sets whether the given UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether the given UNK is UNK , in the UNK .

code:
public void set UNK threads ( int UNK threads ) {
 thread pool . set core pool size ( UNK threads ) ;
 thread pool . set maximum pool size ( UNK threads ) ;
 }
comment:
START sets the max number of threads to use for UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private string get locale string ( ) {
 string builder sb = new string builder ( request . get language ( ) ) ;
 if ( ! text utils . is empty ( request . get country ( ) ) ) {
 sb . append ( String ) ;
 sb . append ( request . get country ( ) ) ;
 if ( ! text utils . is empty ( request . get variant ( ) ) ) {
 sb . append ( String ) ;
 sb . append ( request . get variant ( ) ) ;
 }
 }
 return sb . to string ( ) ;
 }
comment:
START returns a formatted locale string from the synthesis params of the form UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
string get test exclude filter ( ) {
 return test exclude filter ;
 }
comment:
START returns the value of the UNK option , or null if it was not specified . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public boolean is column UNK ( int column index ) {
 return UNK all columns || UNK columns . get ( column index ) ;
 }
comment:
START returns whether the specified column is UNK or not . END
BLUE1:0.714285714286
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether the UNK is UNK in the .

code:
public void set min value ( int min value ) {
 if ( mmin value == min value ) {
 return ;
 }
 if ( min value < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 mmin value = min value ;
 if ( mmin value > value ) {
 value = mmin value ;
 }
 update wrap selector wheel ( ) ;
 initialize selector wheel indices ( ) ;
 update input text view ( ) ;
 try compute max width ( ) ;
 invalidate ( ) ;
 }
comment:
START sets the min value of the picker . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public void set opaque ( boolean is opaque ) {
 check not released ( ) ;
 if ( is opaque ) {
 native set flags ( mnative object , UNK e , UNK e ) ;
 }
 else {
 native set flags ( mnative object , DecimalInteger , UNK e ) ;
 }
 }
comment:
START sets the opacity of the surface . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ suppress warnings ( String ) public static < t > iterator < t > to iterator ( observable < ? extends t > source ) {
 subscriber iterator < t > subscriber = new subscriber iterator < t > ( ) ;
 ( ( observable < t > ) source ) . materialize ( ) . subscribe ( subscriber ) ;
 return subscriber ;
 }
comment:
START returns an iterator that UNK all values of the observable . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
@ override public char sequence get summary ( ) {
 if ( summary == null ) {
 return super . get summary ( ) ;
 }
 else {
 return summary ;
 }
 }
comment:
START returns the summary of this list preference . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set transparent circle color ( int color ) {
 paint p = ( ( pie chart renderer ) renderer ) . get paint transparent circle ( ) ;
 int alpha = p . get alpha ( ) ;
 p . set color ( color ) ;
 p . set alpha ( alpha ) ;
 }
comment:
START sets the color the UNK should have . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set highlight line width ( float width ) {
 mhighlight line width = utils . convert dp to pixel ( width ) ;
 }
comment:
START sets the width of the highlight line in dp . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public collection < root info > get roots for authority blocking ( string authority ) {
 wait for first load ( ) ;
 load stopped authority ( authority ) ;
 synchronized ( lock ) {
 final collection < root info > roots = roots . get ( authority ) ;
 return roots != null ? roots : collections . < root info > empty list ( ) ;
 }
 }
comment:
START returns a list of roots for the specified authority . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void set body limit ( long max body length ) {
 this . body limit = max body length ;
 }
comment:
START sets the number of bytes of the post body to keep in memory to the given limit . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public double miss rate ( ) {
 long request count = request count ( ) ;
 return ( request count == DecimalInteger ) ? DecimalFloatingPoint : ( double ) miss count / request count ;
 }
comment:
START returns the ratio of cache requests which were UNK . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private immutable list < artifact > get proto deps files ( ) {
 prerequisite artifacts prerequisite artifacts = rule context . get prerequisite artifacts ( String , mode . t ) ;
 return prerequisite artifacts . filter ( file type . of ( String ) ) . list ( ) ;
 }
comment:
START returns the list of proto files that were added directly into the deps attributes . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public bundle get user restrictions ( ) {
 return get user restrictions ( process . my user handle ( ) ) ;
 }
comment:
START returns the UNK restrictions UNK on this user . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set indices ( short [ ] indices , int offset , int count ) {
 is dirty = true ;
 buffer . clear ( ) ;
 buffer . put ( indices , offset , count ) ;
 buffer . flip ( ) ;
 byte buffer . position ( DecimalInteger ) ;
 byte buffer . limit ( count << DecimalInteger ) ;
 if ( is bound ) {
 gdx . gl20 . gl buffer sub data ( l20 . gl_ element_ array_ r , DecimalInteger , byte buffer . limit ( ) , byte buffer ) ;
 is dirty = false ;
 }
 }
comment:
START sets the indices of this index buffer object , discarding the old indices . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public float get color fade level ( ) {
 return mcolor fade level ;
 }
comment:
START gets the level of the UNK UNK UNK current . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public string [ ] get UNK dhcp ranges ( ) {
 try {
 return service . get UNK dhcp ranges ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START get the set of UNK UNK ranges . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
nested set < artifact > get proto files ( ) {
 return nested set builder . < artifact > stable order ( ) . add all ( get proto deps files ( ) ) . add transitive ( get proto deps sources ( ) ) . build ( ) ;
 }
comment:
START returns the list of proto files to compile . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static final native int get binder death object count ( ) ;
comment:
START returns the number of UNK notification links to binder objects that exist in the current process . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected highlight get highlight for x ( float val , float x , float y ) {
 list < highlight > closest values = get UNK at value ( val , x , y ) ;
 if ( closest values . is empty ( ) ) {
 return null ;
 }
 float left axis min dist = get minimum distance ( closest values , y , axis . axis dependency . t ) ;
 float right axis min dist = get minimum distance ( closest values , y , axis . axis dependency . t ) ;
 axis . axis dependency axis = left axis min dist < right axis min dist ? axis . axis dependency . t : axis . axis dependency . t ;
 highlight detail = get closest highlight by pixel ( closest values , x , y , axis , chart . get max highlight distance ( ) ) ;
 return detail ;
 }
comment:
START returns the corresponding highlight for a given UNK and x and UNK position in pixels . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public static void UNK to color ( color color , int value ) {
 color . r = ( ( value & UNK ) > > > DecimalInteger ) / DecimalFloatingPoint ;
 color . g = ( ( value & UNK ) > > > DecimalInteger ) / DecimalFloatingPoint ;
 color . b = ( ( value & UNK ) ) / DecimalFloatingPoint ;
 }
comment:
START sets the color components using the specified integer value in the format UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public list < exception > get root causes ( ) {
 list < exception > root causes = new array list < > ( ) ;
 add root causes ( this , root causes ) ;
 return root causes ;
 }
comment:
START returns the list of root causes that are the leaf nodes of all children of this exception . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public static void set simple formatter ( boolean enabled ) {
 simple formatter = enabled ;
 }
comment:
START sets the flag indicating whether to use the UNK message pattern . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
sets the UNK of the UNK to .

code:
protected void set UNK ( ) {
 short_ delay_ s = get short delay ( ) ;
 small_ delay_ s = short_ delay_ s * DecimalInteger ;
 UNK delay_ s = short_ delay_ s * DecimalInteger ;
 long_ delay_ s = short_ delay_ s * DecimalInteger ;
 }
comment:
START sets delays as UNK of UNK y . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ suppress warnings ( String ) void add direct dep providers from skylark ( object to add ) {
 if ( ! ( to add instanceof iterable ) ) {
 throw new illegal argument exception ( string . format ( apple skylark common . bad_ UNK UNK r , eval utils . get data type name ( to add ) ) ) ;
 }
 else {
 iterable < object > to add iterable = ( iterable < object > ) to add ;
 for ( object to add object : to add iterable ) {
 if ( ! ( to add object instanceof objc provider ) ) {
 throw new illegal argument exception ( string . format ( apple skylark common . bad_ UNK UNK r , eval utils . get data type name ( to add object ) ) ) ;
 }
 else {
 this . add as direct deps ( ( objc provider ) to add object ) ;
 }
 }
 }
 }
comment:
START adds the given providers from skylark , but propagate any UNK items only to direct dependers . END
BLUE1:0.714285714286
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public list < resolve info > get global search activities ( ) {
 try {
 return service . get global search activities ( ) ;
 }
 catch ( remote exception ex ) {
 throw ex . rethrow from system server ( ) ;
 }
 }
comment:
START returns a list of installed apps that handle the global search intent . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static list < method descriptor > get methods ( class < ? > obj class , string method name , location loc ) throws eval exception {
 try {
 return method cache . get ( obj class ) . get ( method name ) ;
 }
 catch ( execution exception e ) {
 throw new eval exception ( loc , String + e ) ;
 }
 }
comment:
START returns the list of skylark callable methods of obj class with the given name and argument number . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public long get version ( ) {
 return this . version ;
 }
comment:
START returns the current version of the doc . END
BLUE1:0.714285714286
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public list < certificate > local certificates ( ) {
 return local certificates ;
 }
comment:
START returns a UNK list of certificates that identify this peer . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public list < tv input info > get tv input list ( ) {
 try {
 return service . get tv input list ( muser id ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns the complete list of tv inputs on the system . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set low profile ( boolean low profile ) {
 if ( mlow profile != low profile ) {
 mlow profile = low profile ;
 int flag = view . system_ ui_ flag_ low_ e ;
 apply system ui visibility flags ( mlow profile ? flag : DecimalInteger , flag ) ;
 }
 }
comment:
START sets UNK m _ UNK UNK UNK e on the content view . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public collection < protocol resolver > get protocol resolvers ( ) {
 return this . protocol resolvers ;
 }
comment:
START return the collection of currently registered protocol resolvers , allowing for UNK as well as modification . END
BLUE1:0.714285714286
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
private boolean override has pending data ( ) {
 return needs passthrough UNK ( ) && audio track . get play state ( ) == android . media . audio track . playstate_ d && audio track . get playback head position ( ) == DecimalInteger ;
 }
comment:
START returns whether the audio track should UNK as UNK it has pending data . END
BLUE1:0.714285714286
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public void set left strip drawable ( @ nullable drawable drawable ) {
 mleft strip = drawable ;
 request layout ( ) ;
 invalidate ( ) ;
 }
comment:
START sets the drawable to use as the left part of the strip below the tab indicators . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void translate ( float amount , float amount ) {
 if ( amount == DecimalInteger && amount == DecimalInteger ) return ;
 if ( integer ) {
 amount = math . round ( amount ) ;
 amount = math . round ( amount ) ;
 }
 x += amount ;
 y += amount ;
 float [ ] [ ] page vertices = this . page vertices ;
 for ( int i = DecimalInteger , n = page vertices . length ;
 i < n ;
 i ++ ) {
 float [ ] vertices = page vertices [ i ] ;
 for ( int ii = DecimalInteger , nn = idx [ i ] ;
 ii < nn ;
 ii += DecimalInteger ) {
 vertices [ ii ] += amount ;
 vertices [ ii + DecimalInteger ] += amount ;
 }
 }
 }
comment:
START sets the position of the text , relative to its current position . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static < t > list < t > reverse ( list < t > list ) {
 if ( list instanceof immutable list ) {
 return ( ( immutable list < t > ) list ) . reverse ( ) ;
 }
 else if ( list instanceof reverse list ) {
 return ( ( reverse list < t > ) list ) . get forward list ( ) ;
 }
 else if ( list instanceof random access ) {
 return new random access reverse list < t > ( list ) ;
 }
 else {
 return new reverse list < t > ( list ) ;
 }
 }
comment:
START returns a reversed view of the specified list . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void set UNK dimensions ( float width , float height ) {
 UNK width = ( int ) width ;
 UNK height = ( int ) height ;
 }
comment:
START set the dimensions of the UNK . END
BLUE1:0.714285714286
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public list < UNK device info > get UNK device list ( ) {
 try {
 return service . get UNK device list ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns the list of currently available dvb devices on the system . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private callable < byte string > source reader ( final source source ) {
 return new callable < byte string > ( ) {
 @ override public byte string call ( ) throws exception {
 buffer buffer = new buffer ( ) ;
 while ( source . read ( buffer , DecimalInteger ) != - DecimalInteger ) {
 }
 source . close ( ) ;
 return buffer . read byte string ( ) ;
 }
 }
 ;
 }
comment:
START returns a callable that reads all of source , UNK it , and returns the bytes . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
int get size ( ) {
 int size = DecimalInteger ;
 annotation writer aw = this ;
 while ( aw != null ) {
 size += aw . UNK . length ;
 aw = aw . next ;
 }
 return size ;
 }
comment:
START returns the size of this annotation writer list . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
static iterable < string > common framework flags ( objc provider provider , apple configuration apple configuration ) {
 return UNK . before each ( String , common framework names ( provider , apple configuration ) ) ;
 }
comment:
START returns a list of framework search path flags for UNK actions . END
BLUE1:0.714285714286
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ nullable public path fragment get runtime solib dir ( ) {
 return runtime solib dir ;
 }
comment:
START returns the location of the c++ runtime solib symlinks . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get logical address ( ) {
 return UNK address ;
 }
comment:
START returns the cec logical address of the device . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set UNK text size ( float fraction of height , boolean ignore padding ) {
 set text size ( ignore padding ? UNK ignore_ g : l , fraction of height ) ;
 }
comment:
START sets the text size to be a fraction of the height of this view . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public float get origin y ( ) {
 return origin y ;
 }
comment:
START returns the y-coordinate of the polygon 's origin point . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get vertical spacing ( ) {
 return mvertical spacing ;
 }
comment:
START returns the amount of vertical spacing between each item in the grid . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public boolean use trailing slash match ( ) {
 return this . trailing slash match ;
 }
comment:
START return whether to apply trailing UNK matching in patterns request condition . END
BLUE1:0.666666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public query string query builder default operator ( operator default operator ) {
 this . default operator = default operator == null ? default_ r : default operator ;
 return this ;
 }
comment:
START sets the boolean operator of the query parser used to parse the query string . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ override public string to string ( ) {
 return canonical form ;
 }
comment:
START returns a string representation of the host specifier suitable for inclusion in a uri . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public void set state ( final long UNK , final long UNK ) {
 this . UNK = UNK ;
 this . UNK = UNK ;
 }
comment:
START sets the internal state of this generator . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public date get timestamp ( ) {
 return this . timestamp ;
 }
comment:
START returns the UNK that the even was logged . END
BLUE1:0.666666666667
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the current number of UNK .
returns the number of all UNK .
returns the number of UNK UNK

code:
public int get max messages ( ) {
 return mmax messages ;
 }
comment:
START returns the maximum number of messages to store for this service category . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ non null public media description get description ( ) {
 return description ;
 }
comment:
START returns the description of the media . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ non null public abstract asset get source ( ) {
 return source ;
 }
comment:
START returns the source asset of the statement . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public final synchronized int eviction count ( ) {
 return eviction count ;
 }
comment:
START returns the number of values that have been evicted . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public boolean should scale for printing ( ) {
 throw if closed ( ) ;
 return native scale for printing ( mnative document ) ;
 }
comment:
START gets whether the document UNK to be scaled for printing . END
BLUE1:0.666666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
@ override public list adapter get adapter ( ) {
 return adapter ;
 }
comment:
START returns the adapter currently in use in this list view . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public synchronized int get max size ( ) {
 return max size ;
 }
comment:
START returns the current maximum size of the cache in bytes . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static char buffer new char buffer ( char sequence chseq ) {
 return new char sequence adapter ( chseq ) ;
 }
comment:
START returns a new UNK char buffer based on the specified char sequence . END
BLUE1:0.666666666667
--generate--
returns the UNK of UNK .
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .

code:
@ override public string [ ] indices ( ) {
 return indices ;
 }
comment:
START returns a list of indices that should be included into the snapshot @return list of indices END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public long get current nano time ( ) {
 return current nano time ;
 }
comment:
START returns the nano time captured at the beginning of the allocation . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set scale ( float scale y ) {
 this . scale x = scale y ;
 this . scale y = scale y ;
 dirty = true ;
 }
comment:
START sets the sprite 's scale for both x and y UNK . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public long get fastest interval ( ) {
 return UNK interval ;
 }
comment:
START get the UNK interval of this request , in milliseconds . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string [ ] get exts ( ) {
 return exts ;
 }
comment:
START gets the list of supported extensions . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public final int get connection properties ( ) {
 return mconnection properties ;
 }
comment:
START returns the properties of the conference . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public label get target label ( ) {
 return target label ;
 }
comment:
START returns the label of the associated target . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public synchronized long get max size ( ) {
 return max size ;
 }
comment:
START returns the maximum number of bytes that this cache should use to store its data . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ deprecated public void set shown week count ( int count ) {
 delegate . set shown week count ( count ) ;
 }
comment:
START sets the number of weeks to be shown . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public final int get connection capabilities ( ) {
 return mconnection capabilities ;
 }
comment:
START returns the capabilities of the conference . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set read additional resources ( int read additional resources ) {
 this . read additional resources = read additional resources ;
 }
comment:
START sets the number of additional resources to be read after this header has been decoded . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public float get value ( ) {
 return get y ( ) ;
 }
comment:
START returns the value of the pie entry . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ nullable public artifact get name ( ) {
 return native libs name ;
 }
comment:
START returns the artifact containing the names of the native libraries or null if it does not exist . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get send status ( ) {
 return UNK status ;
 }
comment:
START returns the send status of the just-sent sms . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set UNK ( string UNK ) {
 set ( key_ g , UNK ) ;
 }
comment:
START sets the UNK . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set default copts ( list < string > default copts ) {
 this . default copts = default copts ;
 return this ;
 }
comment:
START sets the default value of copts . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public final shard id get shard id ( ) {
 return shard id ;
 }
comment:
START returns the UNK shards id . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public int get sample rate ( ) {
 return sample rate ;
 }
comment:
START returns the sample rate of output audio . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set over cache ( float over cache ) {
 this . over cache = over cache ;
 }
comment:
START sets the percentage of the view that is cached in each direction . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get channel count ( ) {
 return mchannel count ;
 }
comment:
START returns the configured number of channels . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public float get hole radius ( ) {
 return UNK radius percent ;
 }
comment:
START returns the size of the hole radius in percent of the total radius . END
BLUE1:0.666666666667
--generate--
returns the number of UNK .
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
public label get libc label ( ) {
 return libc label ;
 }
comment:
START returns a label that forms a dependency to the files required for the UNK that is used . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ override @ json property public string get log format ( ) {
 return log format ;
 }
comment:
START returns the UNK pattern with which events will be formatted . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public long get num entries ( ) {
 return num entries ;
 }
comment:
START returns the number of entries actually in the zip file . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public session factory get session factory ( ) {
 return session factory ;
 }
comment:
START returns the current active session factory for UNK to daos . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public int get time out ( ) {
 return time out ;
 }
comment:
START returns the time out of the http request . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set tap square size ( float half tap square size ) {
 tap square size = half tap square size ;
 }
comment:
START sets the distance a touch must UNK before being considered a drag . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public char sequence get negative button text ( ) {
 return mnegative button text ;
 }
comment:
START returns the text of the negative button to be shown on subsequent dialogs . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public final synchronized int eviction count ( ) {
 return eviction count ;
 }
comment:
START returns the number of values that have been evicted . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public int get insertion marker flags ( ) {
 return UNK marker flags ;
 }
comment:
START returns the flag of the insertion marker . END
BLUE1:0.666666666667
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .

code:
public int get tx power level ( ) {
 return UNK power level ;
 }
comment:
START returns the transmission power level of the packet in dbm . END
BLUE1:0.666666666667
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .

code:
public byte size value get flush threshold size ( ) {
 return flush threshold size ;
 }
comment:
START returns the transaction log threshold size when to UNK flush the index and clear the transaction log . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
public animation get in animation ( ) {
 return min animation ;
 }
comment:
START returns the current animation used to animate a view that UNK the screen . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set gradient radius ( float gradient radius ) {
 mgradient state . set gradient radius ( gradient radius , typed value . complex_ unit_ x ) ;
 mgradient is dirty = true ;
 invalidate self ( ) ;
 }
comment:
START sets the radius of the gradient . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get channel count ( ) {
 return channel count ;
 }
comment:
START returns the channel count of output audio . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final int get start offset ( ) {
 return start offset ;
 }
comment:
START returns the start offset relative to the beginning of the file the object resides in . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public boolean should scale for printing ( ) {
 throw if closed ( ) ;
 return native scale for printing ( mnative document ) ;
 }
comment:
START gets whether the document UNK to be scaled for printing . END
BLUE1:0.666666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
public builder set blocking ( boolean blocking ) {
 config . blocking = blocking ;
 return this ;
 }
comment:
START sets the vpn interface 's file descriptor to be in UNK mode . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public int get resize behavior ( ) {
 return mresize behavior ;
 }
comment:
START returns the resizing behavior of the animation . END
BLUE1:0.666666666667
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public builder set concurrent requests ( int concurrent requests ) {
 this . concurrent requests = concurrent requests ;
 return this ;
 }
comment:
START sets the number of concurrent requests allowed to be executed . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
public int [ ] get layout ( ) {
 return layout ;
 }
comment:
START returns the number of items per row . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public mipmap control get mipmap ( ) {
 return UNK control ;
 }
comment:
START get the UNK control flag of the allocation . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set rewind increment ms ( int rewind ms ) {
 controller . set rewind increment ms ( rewind ms ) ;
 }
comment:
START sets the UNK increment in milliseconds . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set vs during supported ( boolean vs during supported ) {
 this . UNK during supported = vs during supported ;
 }
comment:
START sets video UNK as supported or not supported during a UNK call . END
BLUE1:0.666666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public int get padding top ( ) {
 return mpadding top ;
 }
comment:
START returns the top padding of this view . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final int get end offset ( ) {
 return end offset ;
 }
comment:
START returns the end offset relative to the beginning of the file the object resides in . END
BLUE1:0.666666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static boolean is allowed over lockscreen ( int stack id ) {
 return stack id == home_ stack_ d || stack id == fullscreen_ workspace_ stack_ d ;
 }
comment:
START returns true if the stack can be visible above lockscreen . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean contains UNK ( char [ ] source , char [ ] target ) {
 if ( target . length > source . length ) {
 return false ;
 }
 for ( int i = DecimalInteger ;
 i < source . length - target . length + DecimalInteger ;
 i ++ ) {
 boolean matches = true ;
 for ( int j = DecimalInteger ;
 j < target . length ;
 j ++ ) {
 if ( source [ i + j ] != target [ j ] ) {
 matches = false ;
 break ;
 }
 }
 if ( matches ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START returns true if ` source ' contains ` target ' as a UNK . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is suspended state ( int state ) {
 return state == state_ f || state == state_ UNK d ;
 }
comment:
START returns true if display updates may be suspended while in the specified display power state . END
BLUE1:0.625
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the user is UNK in the UNK .
returns true if the user is UNK in a UNK .

code:
static boolean is integer ( char c ) {
 switch ( c ) {
 case UNK r : case UNK r : case UNK r : case UNK UNK r : return true ;
 default : return false ;
 }
 }
comment:
START returns true iff the conversion is an integer type . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
static boolean is reserved word ( string word ) {
 return keyword map . contains key ( word ) ;
 }
comment:
START returns true iff ` word ' is a reserved word of the language . END
BLUE1:0.625
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is available ( ) {
 return r . is available ( ) ;
 }
comment:
START returns whether the underlying library is available , loading it if necessary . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the given UNK is UNK .
returns true if the UNK is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is tag enabled ( long trace tag ) {
 long tags = senabled tags ;
 if ( tags == trace_ tag_ not_ y ) {
 tags = cache enabled tags ( ) ;
 }
 return ( tags & trace tag ) != DecimalInteger ;
 }
comment:
START returns true if a trace tag is enabled . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is static inner class ( @ non null class node class node ) {
 @ suppress warnings ( String ) list field list = class node . fields ;
 for ( object f : field list ) {
 field node field = ( field node ) f ;
 if ( field . name . starts with ( String ) && ( field . access & opcodes . acc_ c ) != DecimalInteger ) {
 return false ;
 }
 }
 return true ;
 }
comment:
START returns true if the given class node represents a static inner class . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the view is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the view is UNK in the UNK .

code:
public void set on rating bar change listener ( on rating bar change listener listener ) {
 mon rating bar change listener = listener ;
 }
comment:
START sets the listener to be called when the rating changes . END
BLUE1:0.625
--generate--
sets the listener that will be enabled .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .
sets the listener that will be applied to the given .

code:
public static boolean has profile ( int camera id , int quality ) {
 return UNK ( camera id , quality ) ;
 }
comment:
START returns true if camcorder profile exists for the given camera at the given quality level . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is annotation present ( class c , class < ? extends java . lang . annotation . annotation > annotation type ) {
 return c . is annotation present ( annotation type ) ;
 }
comment:
START returns true if the supplied class includes an annotation of the given type . END
BLUE1:0.625
--generate--
returns true if the view is UNK .
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the view is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
private static boolean reset cancel next up flag ( @ non null view view ) {
 if ( ( view . mprivate flags & pflag_ UNK next_ up_ t ) != DecimalInteger ) {
 view . mprivate flags &= ~ pflag_ UNK next_ up_ t ;
 return true ;
 }
 return false ;
 }
comment:
START returns true if the flag was previously set . END
BLUE1:0.625
--generate--
returns true if the view is UNK .
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the view is UNK in the UNK .

code:
public static final boolean is isolated ( ) {
 return is isolated ( my uid ( ) ) ;
 }
comment:
START returns whether the current process is in an isolated UNK . END
BLUE1:0.625
--generate--
returns true if the view is UNK .
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the view is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is layout mode optical ( object o ) {
 return o instanceof view group && ( ( view group ) o ) . is layout mode optical ( ) ;
 }
comment:
START return true if o is a view group that is UNK out using optical bounds . END
BLUE1:0.625
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static media type create ( string type , string subtype ) {
 return create ( type , subtype , immutable list multimap . < string , string > of ( ) ) ;
 }
comment:
START creates a new media type with the given type and subtype . END
BLUE1:0.625
--generate--
creates a new instance of the UNK .
creates a new instance of the UNK UNK .
creates a new instance for the given UNK .
creates a new instance for the UNK .
creates a new instance of the given UNK .

code:
public static boolean equal ( file file1 , file file2 ) throws exception {
 check not null ( file1 ) ;
 check not null ( file2 ) ;
 if ( file1 == file2 || file1 . equals ( file2 ) ) {
 return true ;
 }
 long UNK = file1 . length ( ) ;
 long len2 = file2 . length ( ) ;
 if ( UNK != DecimalInteger && len2 != DecimalInteger && UNK != len2 ) {
 return false ;
 }
 return as byte source ( file1 ) . content equals ( as byte source ( file2 ) ) ;
 }
comment:
START returns true if the files contains the same bytes . END
BLUE1:0.625
--generate--
returns true if the view is UNK .
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the view is UNK in the UNK .

code:
public static boolean should start dock app ( context context , intent intent ) {
 component name name = intent . resolve activity ( context . get package manager ( ) ) ;
 return name != null && ! name . equals ( UNK t ) ;
 }
comment:
START returns true if the specified dock app intent should be started . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is local test rule ( rule rule ) {
 return has constraint ( rule , String ) || nonconfigurable attribute mapper . of ( rule ) . get ( String , type . n ) ;
 }
comment:
START returns true if test marked as `` local '' by the appropriate keyword in the tags attribute . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is valid type ( short type ) {
 return type == type_ unsigned_ e || type == type_ i || type == type_ unsigned_ t || type == type_ unsigned_ g || type == type_ unsigned_ l || type == type_ d || type == type_ g || type == type_ l ;
 }
comment:
START returns true if a given type is a valid tag type . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public void create gen jar action ( artifact class jar , artifact manifest proto , artifact gen class jar ) {
 get rule context ( ) . register action ( new spawn action . builder ( ) . add input ( manifest proto ) . add input ( class jar ) . add output ( gen class jar ) . add transitive inputs ( get host javabase inputs non static ( get rule context ( ) ) ) . set jar executable ( get rule context ( ) . get host configuration ( ) . get fragment ( jvm . class ) . get java executable ( ) , get gen class jar ( rule context ) , java toolchain . get jvm options ( ) ) . set command line ( custom command line . builder ( ) . add exec path ( String , manifest proto ) . add exec path ( String , class jar ) . add exec path ( String , gen class jar ) . add ( String ) . add path ( temp dir ( gen class jar ) ) . build ( ) ) . use parameter file ( parameter file type . UNK d ) . set progress message ( String + gen class jar . pretty print ( ) ) . set mnemonic ( String ) . build ( get rule context ( ) ) ) ;
 }
comment:
START creates the action for creating the UNK jar . END
BLUE1:0.625
--generate--
sets the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static < f , t > supplier < t > compose ( function < ? super f , t > function , supplier < f > supplier ) {
 preconditions . check not null ( function ) ;
 preconditions . check not null ( supplier ) ;
 return new supplier composition < f , t > ( function , supplier ) ;
 }
comment:
START returns a new supplier which is the composition of the provided function and supplier . END
BLUE1:0.625
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public static boolean has window decor ( int stack id ) {
 return stack id == freeform_ workspace_ stack_ d ;
 }
comment:
START returns true if the activities contained in the input stack display a decor view . END
BLUE1:0.625
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public cumulative sum pipeline aggregation builder format ( string format ) {
 if ( format == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . format = format ;
 return this ;
 }
comment:
START sets the format to use on the output of this aggregation . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public dis max query builder add ( query builder query builder ) {
 if ( query builder == null ) {
 throw new illegal argument exception ( String ) ;
 }
 queries . add ( query builder ) ;
 return this ;
 }
comment:
START add a UNK to this UNK . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public zip entry with entry ( directory entry entry ) {
 this . entry = entry ;
 return this ;
 }
comment:
START sets the central directory entry for this zip entry . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public vertical group column align ( int column align ) {
 this . column align = column align ;
 return this ;
 }
comment:
START sets the alignment of widgets within each column of the vertical group . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public noop search request builder add index boost ( string index , float index boost ) {
 source builder ( ) . index boost ( index , index boost ) ;
 return this ;
 }
comment:
START sets the boost a specific index will receive when the query is executed against it . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public playback params set speed ( float speed ) {
 speed = speed ;
 set |= set_ d ;
 return this ;
 }
comment:
START sets the speed factor . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public boolean set concat ( matrix a , matrix b ) {
 native_set concat ( native_instance , a . native_instance , b . native_instance ) ;
 return true ;
 }
comment:
START set the matrix to the concatenation of the two specified matrices and return true . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
set to UNK to UNK .
set to UNK to UNK to the UNK .

code:
public builder dns ( dns dns ) {
 if ( dns == null ) throw new null pointer exception ( String ) ;
 this . dns = dns ;
 return this ;
 }
comment:
START sets the dns service used to lookup ip addresses for hostnames . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public image request builder set cache choice ( image request . cache choice cache choice ) {
 mcache choice = cache choice ;
 return this ;
 }
comment:
START sets the cache option . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public term vectors request builder set id ( string id ) {
 request . id ( id ) ;
 return this ;
 }
comment:
START sets the id of the document . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public mock http servlet request builder session ( mock http session session ) {
 assert . not null ( session , String ) ;
 this . session = session ;
 return this ;
 }
comment:
START set the http session to use , possibly UNK across requests . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public fake ticker set auto increment step ( long auto increment step , time unit time unit ) {
 if ( auto increment step < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . auto increment step nanos = time unit . to nanos ( auto increment step ) ;
 return this ;
 }
comment:
START sets the increment applied to the ticker whenever it is queried . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public generic drawee hierarchy builder set failure image ( int resource id ) {
 mfailure image = resources . get drawable ( resource id ) ;
 return this ;
 }
comment:
START sets the failure image . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public subprocess builder set working directory ( file working directory ) {
 this . working directory = working directory ;
 return this ;
 }
comment:
START sets the current working directory . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set lookup on startup ( boolean lookup on startup ) {
 this . lookup on startup = lookup on startup ;
 }
comment:
START set whether to look up the jndi object on startup . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of the request .
sets the UNK of the UNK .
sets the UNK of the UNK to .
sets the UNK of the request to be UNK .

code:
public sync params set sync source ( @ sync source int sync source ) {
 msync source = sync source ;
 set |= set_ sync_ e ;
 return this ;
 }
comment:
START sets the sync source . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set features ( immutable set < string > features ) {
 this . features = features ;
 return this ;
 }
comment:
START sets the features enabled for the rule . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cell < t > align ( int align ) {
 this . align = align ;
 return this ;
 }
comment:
START sets the alignment of the actor within the cell . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public term vectors request parent ( string parent ) {
 this . parent = parent ;
 return this ;
 }
comment:
START sets the parent id of this document . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set use forward headers ( boolean use forward headers ) {
 this . use forward headers = use forward headers ;
 }
comment:
START set if UNK headers should be processed . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder set direct jars ( nested set < artifact > direct jars ) {
 check not null ( direct jars , String ) ;
 this . direct jars = direct jars ;
 return this ;
 }
comment:
START sets the direct dependency artifacts . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
@ non null public builder set status ( @ status int status ) {
 status = check status ( status ) ;
 return this ;
 }
comment:
START sets the printer status . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public percolate request document type ( string type ) {
 this . document type = type ;
 return this ;
 }
comment:
START sets the type of the document to percolate . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public doc builder set doc ( string doc ) {
 this . doc = new bytes array ( doc ) ;
 return this ;
 }
comment:
START sets the document to be percolated . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
@ system api public builder set hdmi device info ( hdmi device info hdmi device info ) {
 if ( UNK input hardware info != null ) {
 log . w ( g , String ) ;
 UNK input hardware info = null ;
 }
 this . UNK device info = hdmi device info ;
 return this ;
 }
comment:
START sets the hdmi device info . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set xcode version ( @ nullable dotted version xcode version ) {
 this . xcode version = xcode version ;
 return this ;
 }
comment:
START sets the xcode version to obtain the ios simulator from . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public location request set expire at ( long millis ) {
 mexpire at = millis ;
 if ( mexpire at < DecimalInteger ) mexpire at = DecimalInteger ;
 return this ;
 }
comment:
START set the request expiration time , in UNK since boot . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public update request doc ( index request doc ) {
 this . doc = doc ;
 return this ;
 }
comment:
START sets the doc to use for updates when a script is not specified . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public update request doc ( byte [ ] source , int offset , int length ) {
 safe doc ( ) . source ( source , offset , length ) ;
 return this ;
 }
comment:
START sets the doc to use for updates when a script is not specified . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public index request type ( string type ) {
 this . type = type ;
 return this ;
 }
comment:
START sets the type of the indexed document . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public ray set ( vector3 origin , vector3 direction ) {
 this . origin . set ( origin ) ;
 this . direction . set ( direction ) ;
 return this ;
 }
comment:
START sets the starting position and the direction of this ray . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public mesh set indices ( short [ ] indices , int offset , int count ) {
 this . indices . set indices ( indices , offset , count ) ;
 return this ;
 }
comment:
START sets the indices of this mesh . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set sleep power draw mw ( float sleep power draw mw ) {
 UNK power draw mw = sleep power draw mw ;
 }
comment:
START set the sleep power draw in milliwatts @param sleep power draw UNK sleep power draw in milliwatts . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public view property animator set interpolator ( time interpolator interpolator ) {
 UNK set = true ;
 interpolator = interpolator ;
 return this ;
 }
comment:
START sets the interpolator for the underlying animator that animates the requested properties . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set bulk actions ( int bulk actions ) {
 this . bulk actions = bulk actions ;
 return this ;
 }
comment:
START sets when to flush a new bulk request based on the number of actions currently added . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public final void set direct field access ( boolean direct field access ) {
 this . direct field access = direct field access ;
 }
comment:
START set whether to use direct field access instead of bean property access . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public event bus options set host ( string host ) {
 this . host = host ;
 return this ;
 }
comment:
START sets the host . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set connect on startup ( boolean connect on startup ) {
 this . connect on startup = connect on startup ;
 }
comment:
START set whether to connect to the server on startup . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public builder put ( string setting , boolean value ) {
 put ( setting , string . value of ( value ) ) ;
 return this ;
 }
comment:
START sets the setting with the provided setting key and the boolean value . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
protected void set UNK ( boolean is UNK ) {
 this . UNK = is UNK ;
 }
comment:
START sets the flag to indicate if the janitor is UNK . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public update request doc ( xcontent builder source ) {
 safe doc ( ) . source ( source ) ;
 return this ;
 }
comment:
START sets the doc to use for updates when a script is not specified . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public percolate request preference ( string preference ) {
 this . preference = preference ;
 return this ;
 }
comment:
START sets the preference to execute the search . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cpp model set context ( cpp compilation context context ) {
 this . context = context ;
 return this ;
 }
comment:
START sets the compilation context , i.e. include directories and allowed header files inclusions . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public ssl context builder client auth ( client auth client auth ) {
 this . client auth = check not null ( client auth , String ) ;
 return this ;
 }
comment:
START sets the client authentication mode . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public multi search request builder set max concurrent search requests ( int max concurrent search requests ) {
 request ( ) . max concurrent search requests ( max concurrent search requests ) ;
 return this ;
 }
comment:
START sets how many search requests specified in this multi search requests are allowed to be UNK concurrently . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public query rescorer builder set query weight ( float query weight ) {
 this . query weight = query weight ;
 return this ;
 }
comment:
START sets the original query weight for rescoring . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set detect handlers in ancestor contexts ( boolean detect handlers in ancestor contexts ) {
 this . detect handlers in ancestor contexts = detect handlers in ancestor contexts ;
 }
comment:
START set whether to detect handler beans in ancestor application contexts . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public generic drawee hierarchy builder set retry image ( drawable retry drawable , @ nullable scale type retry image scale type ) {
 mretry image = retry drawable ;
 mretry image scale type = retry image scale type ;
 return this ;
 }
comment:
START sets the retry image and its scale type . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public update request doc ( string source ) {
 safe doc ( ) . source ( source ) ;
 return this ;
 }
comment:
START sets the doc to use for updates when a script is not specified . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public image decode options builder set min decode interval ms ( int interval ms ) {
 mmin decode interval ms = interval ms ;
 return this ;
 }
comment:
START sets the minimum decode interval . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public horizontal group space ( float space ) {
 this . space = space ;
 return this ;
 }
comment:
START sets the horizontal space between children . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
release bundling support add xcode settings ( xcode provider . builder xcode provider builder ) {
 bundle support . add xcode settings ( xcode provider builder ) ;
 xcode provider builder . add main target xcodeproj build settings ( build settings ( ) ) ;
 return this ;
 }
comment:
START adds bundle and UNK settings to the given xcode provider builder . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public update request upsert ( map source , xcontent type content type ) {
 safe upsert request ( ) . source ( source , content type ) ;
 return this ;
 }
comment:
START sets the doc source of the update request to be used when the document does not exists . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public utf8 stream writer set output ( output stream out ) {
 if ( UNK stream != null ) throw new illegal state exception ( String ) ;
 UNK stream = out ;
 return this ;
 }
comment:
START sets the output stream to use for writing until this writer is closed . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public update request builder set upsert ( byte [ ] source , int offset , int length ) {
 request . upsert ( source , offset , length ) ;
 return this ;
 }
comment:
START sets the doc source of the update request to be used when the document does not exists . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public car extender set large icon ( bitmap large icon ) {
 UNK icon = large icon ;
 return this ;
 }
comment:
START sets the large icon of the car notification . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public zip entry with code ( status code ) {
 this . code = code ;
 return this ;
 }
comment:
START sets the status code for this zip entry . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set use attribute for types ( class < ? > ... use attribute for types ) {
 this . use attribute for types = use attribute for types ;
 }
comment:
START set types to use xml attributes for . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
@ non null public builder set channel mask ( int channel mask ) {
 if ( channel mask == channel_ d ) {
 throw new illegal argument exception ( String ) ;
 }
 else if ( mchannel index mask != DecimalInteger && integer . bit count ( channel mask ) != integer . bit count ( mchannel index mask ) ) {
 throw new illegal argument exception ( String + integer . to hex string ( channel mask ) . to upper case ( ) ) ;
 }
 mchannel mask = channel mask ;
 mproperty set mask |= audio_ format_ has_ property_ channel_ k ;
 return this ;
 }
comment:
START sets the channel position mask . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder set max stats ( int max stats ) {
 this . max stats = max stats ;
 return this ;
 }
comment:
START sets the upper bound of the ` stat ' cache . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder set boost ( int boost ) {
 if ( boost <= DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . boost = boost ;
 return this ;
 }
comment:
START sets the query-time boost of the context . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public cell < t > pref size ( value size ) {
 if ( size == null ) throw new illegal argument exception ( String ) ;
 pref width = size ;
 pref height = size ;
 return this ;
 }
comment:
START sets the pref width and pref height to the specified value . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public geo distance query builder distance ( string distance , distance unit unit ) {
 if ( strings . is empty ( distance ) ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( unit == null ) {
 throw new illegal argument exception ( String ) ;
 }
 double new distance = distance unit . parse ( distance , unit , distance unit . t ) ;
 if ( new distance <= DecimalFloatingPoint ) {
 throw new illegal argument exception ( String ) ;
 }
 this . distance = new distance ;
 return this ;
 }
comment:
START sets the distance from the center for this query . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public noop search request builder set indices ( string ... indices ) {
 request . indices ( indices ) ;
 return this ;
 }
comment:
START sets the indices the search will be executed on . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public update request upsert ( map source ) {
 safe upsert request ( ) . source ( source ) ;
 return this ;
 }
comment:
START sets the doc source of the update request to be used when the document does not exists . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public cpp model set feature configuration ( feature configuration feature configuration ) {
 this . feature configuration = feature configuration ;
 return this ;
 }
comment:
START sets the feature configuration to be used for c/ c + + actions . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public deploy archive builder set attributes ( java target attributes attributes ) {
 this . attributes = attributes ;
 return this ;
 }
comment:
START sets the processed attributes of the rule generating the deploy archive . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public zip entry with content ( byte buffer content ) {
 this . content = content ;
 return this ;
 }
comment:
START sets the byte buffer providing access to the raw content of this zip entry . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set show silent ( boolean show silent ) {
 mshow silent = show silent ;
 }
comment:
START sets whether to show an item for ` UNK ' . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public cluster update settings request builder set transient settings ( string settings ) {
 request . transient settings ( settings ) ;
 return this ;
 }
comment:
START sets the source containing the transient settings to be updated . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public term vectors request builder set per field analyzer ( map < string , string > per field analyzer ) {
 request . per field analyzer ( per field analyzer ) ;
 return this ;
 }
comment:
START sets the analyzer used at each field when generating term vectors . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public boolean set UNK access permission ( int value ) {
 if ( service == null ) {
 return false ;
 }
 try {
 return service . set UNK access permission ( this , value ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return false ;
 }
comment:
START sets whether the UNK access is allowed to this device . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set accept proxy classes ( boolean accept proxy classes ) {
 this . accept proxy classes = accept proxy classes ;
 }
comment:
START set whether to accept deserialization of proxy classes . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public mov avg pipeline aggregation builder gap policy ( gap policy gap policy ) {
 if ( gap policy == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . gap policy = gap policy ;
 return this ;
 }
comment:
START sets the gap policy to use on the output of this aggregation . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public direct candidate generator builder prefix length ( int prefix length ) {
 this . prefix length = prefix length ;
 return this ;
 }
comment:
START sets the number of minimal prefix characters that must match in order be a candidate suggestion . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public bucket selector pipeline aggregation builder gap policy ( gap policy gap policy ) {
 if ( gap policy == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . gap policy = gap policy ;
 return this ;
 }
comment:
START sets the gap policy to use for this aggregation . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public matrix4 set ( float translation x , float translation y , float translation z , float quaternion x , float quaternion y , float quaternion z , float quaternion w , float scale x , float scale y , float scale z ) {
 final float xs = quaternion x * DecimalFloatingPoint , ys = quaternion y * DecimalFloatingPoint , zs = quaternion z * DecimalFloatingPoint ;
 final float wx = quaternion w * xs , wy = quaternion w * ys , wz = quaternion w * zs ;
 final float xx = quaternion x * xs , xy = quaternion x * ys , xz = quaternion x * zs ;
 final float yy = quaternion y * ys , yz = quaternion y * zs , zz = quaternion z * zs ;
 val [ m00 ] = scale x * ( DecimalFloatingPoint - ( yy + zz ) ) ;
 val [ m01 ] = scale y * ( xy - wz ) ;
 val [ m02 ] = scale z * ( xz + wy ) ;
 val [ m03 ] = translation x ;
 val [ m10 ] = scale x * ( xy + wz ) ;
 val [ m11 ] = scale y * ( DecimalFloatingPoint - ( xx + zz ) ) ;
 val [ m12 ] = scale z * ( yz - wx ) ;
 val [ m13 ] = translation y ;
 val [ m20 ] = scale x * ( xz - wy ) ;
 val [ m21 ] = scale y * ( yz + wx ) ;
 val [ m22 ] = scale z * ( DecimalFloatingPoint - ( xx + yy ) ) ;
 val [ m23 ] = translation z ;
 val [ m30 ] = DecimalFloatingPoint ;
 val [ m31 ] = DecimalFloatingPoint ;
 val [ m32 ] = DecimalFloatingPoint ;
 val [ m33 ] = DecimalFloatingPoint ;
 return this ;
 }
comment:
START sets the matrix to a rotation matrix representing the translation and quaternion . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public typed argument < t > set converter ( converter < t > converter ) {
 this . converter = converter ;
 return this ;
 }
comment:
START sets the converter used to create the value . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public generic drawee hierarchy builder set retry image ( int resource id , @ nullable scale type retry image scale type ) {
 mretry image = resources . get drawable ( resource id ) ;
 mretry image scale type = retry image scale type ;
 return this ;
 }
comment:
START sets the retry image and its scale type . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public playback params set pitch ( float pitch ) {
 if ( pitch < DecimalFloatingPoint ) {
 throw new illegal argument exception ( String ) ;
 }
 pitch = pitch ;
 set |= set_ h ;
 return this ;
 }
comment:
START sets the pitch factor . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set special inputs handler ( special inputs handler special inputs handler ) {
 this . special inputs handler = special inputs handler ;
 return this ;
 }
comment:
START sets the special inputs handler for inputs to this build . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public serial diff pipeline aggregation builder gap policy ( gap policy gap policy ) {
 if ( gap policy == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . gap policy = gap policy ;
 return this ;
 }
comment:
START sets the gap policy to use on the output of this aggregation . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set refresh stub on connect failure ( boolean refresh stub on connect failure ) {
 this . refresh stub on connect failure = refresh stub on connect failure ;
 }
comment:
START set whether to refresh the rmi stub on connect failure . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of the request .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the request to be UNK .

code:
public term vectors request builder set payloads ( boolean payloads ) {
 request . payloads ( payloads ) ;
 return this ;
 }
comment:
START sets whether to return the UNK for each term or skip . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
set to UNK to UNK .
sets the UNK of the given UNK .

code:
public cluster update settings request persistent settings ( string source ) {
 this . persistent settings = settings . builder ( ) . load from source ( source ) . build ( ) ;
 return this ;
 }
comment:
START sets the source containing the persistent settings to be updated . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder set action ( action action ) {
 this . action = action ;
 return this ;
 }
comment:
START sets the action for which to discover inputs . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public update request id ( string id ) {
 this . id = id ;
 return this ;
 }
comment:
START sets the id of the indexed document . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public container < t > max size ( float size ) {
 max size ( new fixed ( size ) ) ;
 return this ;
 }
comment:
START sets the max width and max height to the specified value . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public matrix4 set translation ( vector3 vector ) {
 val [ m03 ] = vector . x ;
 val [ m13 ] = vector . y ;
 val [ m23 ] = vector . z ;
 return this ;
 }
comment:
START sets the NUMBER column to the translation vector . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public multi search request max concurrent search requests ( int max concurrent search requests ) {
 if ( max concurrent search requests < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . max concurrent search requests = max concurrent search requests ;
 return this ;
 }
comment:
START sets how many search requests specified in this multi search requests are allowed to be UNK concurrently . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set ignore invalid requests ( boolean ignore invalid requests ) {
 this . ignore invalid requests = ignore invalid requests ;
 }
comment:
START set whether UNK formatted messages should be discarded . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public noop search request builder set min score ( float min score ) {
 source builder ( ) . min score ( min score ) ;
 return this ;
 }
comment:
START sets the minimum score below which docs will be filtered out . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set default hdrs check ( string hdrs check ) {
 pkg . set default hdrs check ( hdrs check ) ;
 return this ;
 }
comment:
START sets the default header checking mode . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder scheme ( string scheme ) {
 this . scheme = scheme ;
 return this ;
 }
comment:
START sets the scheme . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set validate addresses ( boolean validate addresses ) {
 this . validate addresses = validate addresses ;
 }
comment:
START set whether to validate all addresses which get passed to this helper . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK to be used for the UNK .
sets the UNK to be used to the UNK .
sets the UNK to be used to the UNK of the UNK .

code:
public more like this query builder unlike ( string [ ] unlike UNK ) {
 this . unlike UNK = optional . of nullable ( unlike UNK ) . or else ( strings . empty_ y ) ;
 return this ;
 }
comment:
START sets the text from which the terms should not be selected from . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder set routing num shards ( int routing num shards ) {
 this . routing num shards = routing num shards ;
 return this ;
 }
comment:
START sets the number of shards that should be used for routing . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public http2 stream channel bootstrap handler ( channel handler handler ) {
 this . handler = check UNK ( check not null ( handler , String ) ) ;
 return this ;
 }
comment:
START sets the channel handler that should be added to the channels 's pipeline . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public matrix3 set ( float [ ] values ) {
 system . arraycopy ( values , DecimalInteger , val , DecimalInteger , val . length ) ;
 return this ;
 }
comment:
START sets the matrix to the given matrix as a float array . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set cache stub ( boolean cache stub ) {
 this . cache stub = cache stub ;
 }
comment:
START set whether to cache the rmi stub once it has been located . END
BLUE1:0.6
--generate--
set to UNK UNK .
set to UNK to UNK .
sets the UNK of the UNK .
set to UNK to UNK to .
set to UNK to UNK to the UNK .

code:
@ system api public builder set label ( char sequence label ) {
 if ( mlabel res id != DecimalInteger ) {
 throw new illegal state exception ( String ) ;
 }
 this . label = label ;
 return this ;
 }
comment:
START sets the label . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set detect all handler exception resolvers ( boolean detect all handler exception resolvers ) {
 this . detect all handler exception resolvers = detect all handler exception resolvers ;
 }
comment:
START set whether to detect all handler exception resolver beans in this servlet 's context . END
BLUE1:0.6
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK to be used for the UNK .
sets the UNK to be used to the UNK .

code:
public typed argument < t > set type ( class < t > type ) {
 this . type = type ;
 return this ;
 }
comment:
START sets the argument type . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ non null public builder set uid ( int uid ) {
 uid = uid ;
 return this ;
 }
comment:
START sets the uid which will own the key . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public matrix4 set ( float translation x , float translation y , float translation z , float quaternion x , float quaternion y , float quaternion z , float quaternion w , float scale x , float scale y , float scale z ) {
 final float xs = quaternion x * DecimalFloatingPoint , ys = quaternion y * DecimalFloatingPoint , zs = quaternion z * DecimalFloatingPoint ;
 final float wx = quaternion w * xs , wy = quaternion w * ys , wz = quaternion w * zs ;
 final float xx = quaternion x * xs , xy = quaternion x * ys , xz = quaternion x * zs ;
 final float yy = quaternion y * ys , yz = quaternion y * zs , zz = quaternion z * zs ;
 val [ m00 ] = scale x * ( DecimalFloatingPoint - ( yy + zz ) ) ;
 val [ m01 ] = scale y * ( xy - wz ) ;
 val [ m02 ] = scale z * ( xz + wy ) ;
 val [ m03 ] = translation x ;
 val [ m10 ] = scale x * ( xy + wz ) ;
 val [ m11 ] = scale y * ( DecimalFloatingPoint - ( xx + zz ) ) ;
 val [ m12 ] = scale z * ( yz - wx ) ;
 val [ m13 ] = translation y ;
 val [ m20 ] = scale x * ( xz - wy ) ;
 val [ m21 ] = scale y * ( yz + wx ) ;
 val [ m22 ] = scale z * ( DecimalFloatingPoint - ( xx + yy ) ) ;
 val [ m23 ] = translation z ;
 val [ m30 ] = DecimalFloatingPoint ;
 val [ m31 ] = DecimalFloatingPoint ;
 val [ m32 ] = DecimalFloatingPoint ;
 val [ m33 ] = DecimalFloatingPoint ;
 return this ;
 }
comment:
START sets the matrix to a rotation matrix representing the translation and quaternion . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public create index request builder set source ( map < string , ? > source ) {
 request . source ( source ) ;
 return this ;
 }
comment:
START sets the settings and mappings as a single source . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public fake ticker set auto increment step ( long auto increment step , time unit time unit ) {
 check argument ( auto increment step >= DecimalInteger , String ) ;
 this . auto increment step nanos = time unit . to nanos ( auto increment step ) ;
 return this ;
 }
comment:
START sets the increment applied to the ticker whenever it is queried . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public snapshots status request ignore unavailable ( boolean ignore unavailable ) {
 this . ignore unavailable = ignore unavailable ;
 return this ;
 }
comment:
START set to true to ignore unavailable snapshots , instead of throwing an exception . END
BLUE1:0.6
--generate--
set to UNK UNK .
set to UNK to UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder socket factory ( socket factory socket factory ) {
 if ( socket factory == null ) throw new null pointer exception ( String ) ;
 this . socket factory = socket factory ;
 return this ;
 }
comment:
START sets the socket factory used to create connections . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ non null public builder set certificate serial number ( @ non null big integer serial number ) {
 if ( serial number == null ) {
 throw new null pointer exception ( String ) ;
 }
 mcertificate serial number = serial number ;
 return this ;
 }
comment:
START sets the serial number used for the self-signed certificate of the generated key pair . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public wearable extender set available offline ( boolean available offline ) {
 set flag ( flag_ available_ e , available offline ) ;
 return this ;
 }
comment:
START set whether this action is available when the wearable device is not connected to a companion device . END
BLUE1:0.6
--generate--
set to UNK UNK .
set to UNK to UNK .
sets the UNK of the UNK .
set to UNK to UNK to .
set to UNK to UNK to the UNK .

code:
public builder put ( string key , string value ) {
 map . put ( key , value ) ;
 return this ;
 }
comment:
START sets a setting with the provided setting key and value . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
private void create shadow replica index ( final string name , final path data path , final int num replicas ) {
 assert files . exists ( data path ) ;
 assert num replicas >= DecimalInteger ;
 final settings idx settings = settings . builder ( ) . put ( index meta data . setting_ number_ of_ s , DecimalInteger ) . put ( index meta data . setting_ number_ of_ s , num replicas ) . put ( index meta data . setting_ data_ h , data path . to absolute path ( ) . to string ( ) ) . put ( index meta data . setting_ UNK s , true ) . build ( ) ;
 assert acked ( prepare create ( name ) . set settings ( idx settings ) . get ( ) ) ;
 }
comment:
START creates a shadow replica index and UNK that the index creation was acknowledged . END
BLUE1:0.6
--generate--
for the UNK UNK .
set the UNK for the given UNK .
set the UNK for the given view .
set the UNK for the given file .
set the UNK for the UNK .

code:
@ non null public builder set capabilities ( @ non null printer capabilities info capabilities ) {
 capabilities = capabilities ;
 return this ;
 }
comment:
START sets the printer capabilities . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public create index request builder set source ( bytes reference source ) {
 request . source ( source ) ;
 return this ;
 }
comment:
START sets the settings and mappings as a single source . END
BLUE1:0.6
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public void set connection id ( final long connection id ) {
 if ( ( connection id < - DecimalInteger ) || ( connection id > 0x l ) ) {
 throw new illegal argument exception ( String ) ;
 }
 mconnection id = connection id ;
 }
comment:
START sets the connection id header to include in the reply packets . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
@ override public collection < v > values ( ) {
 return super . values ( ) ;
 }
comment:
START returns a collection of all values in the multimap . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public immutable set < e > immutable copy ( ) {
 return immutable set . copy of ( this ) ;
 }
comment:
START returns an immutable copy of the current contents of this set view . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public type get return type ( ) {
 return get return type ( get descriptor ( ) ) ;
 }
comment:
START returns the return type of methods of this type . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
protected map < string , list < string > > get instance security groups ( string region , string ... instance ids ) {
 map < string , list < string > > result = maps . new hash map ( ) ;
 if ( instance ids == null || instance ids . length == DecimalInteger ) {
 return result ;
 }
 client aws client = new client ( region , aws credentials provider ) ;
 for ( instance instance : aws client . describe instances ( instance ids ) ) {
 if ( string utils . is not empty ( instance . get vpc id ( ) ) ) {
 r . info ( string . format ( String , instance . get instance id ( ) ) ) ;
 continue ;
 }
 if ( ! String . equals ( instance . get state ( ) . get name ( ) ) ) {
 r . info ( string . format ( String , instance . get instance id ( ) , instance . get state ( ) . get name ( ) ) ) ;
 continue ;
 }
 list < string > UNK = lists . new array list ( ) ;
 for ( group identifier group id : instance . get security groups ( ) ) {
 UNK . add ( group id . get group name ( ) ) ;
 }
 result . put ( instance . get instance id ( ) , UNK ) ;
 }
 return result ;
 }
comment:
START gets the security groups for a list of instance ids of the same region . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
@ non null static bitmap get bitmap from view ( @ non null final view v ) {
 bitmap bitmap = bitmap . create bitmap ( v . get measured width ( ) , v . get measured height ( ) , bitmap . config . b_8888 ) ;
 canvas canvas = new canvas ( bitmap ) ;
 v . draw ( canvas ) ;
 return bitmap ;
 }
comment:
START returns a bitmap showing a screenshot of the view passed in . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
public boolean is UNK ( ) {
 synchronized ( this ) {
 return is UNK locked ( ) ;
 }
 }
comment:
START returns whether this looper 's thread is currently UNK for more work to do . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public boolean is empty ( ) {
 return info queue . is empty ( ) ;
 }
comment:
START returns whether the buffer is empty . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public abstract int get previous termination count ( chaos crawler . instance group group , date after ) ;
comment:
START gets the count of UNK since a specific time . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public synchronized void set max ( int max ) {
 if ( max < DecimalInteger ) {
 max = DecimalInteger ;
 }
 if ( max != max ) {
 max = max ;
 post invalidate ( ) ;
 if ( progress > max ) {
 progress = max ;
 }
 refresh progress ( android . r . id . progress , progress , false ) ;
 }
 }
comment:
START set the range of the progress bar to NUMBER ... max . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ skylark callable ( name = String , doc = String , struct field = true ) public platform type get type ( ) {
 return platform type ;
 }
comment:
START returns the platform type of this platform . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected void set exif data ( exif data exif data ) {
 mexif data = exif data ;
 }
comment:
START sets the exif data to be written into the jpeg file . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
private artifact get linked artifact ( link target type link target type ) throws rule error exception {
 artifact result = null ;
 artifact linux default = cpp helper . get linux linked artifact ( rule context , link target type ) ;
 try {
 string maybe pic name = rule context . get label ( ) . get name ( ) ;
 if ( link target type . UNK ( ) == UNK . c ) {
 maybe pic name = cpp helper . get artifact name for category ( rule context , artifact category . UNK e , maybe pic name ) ;
 }
 string linked name = cpp helper . get artifact name for category ( rule context , link target type . get linker output ( ) , maybe pic name ) ;
 path fragment artifact fragment = new path fragment ( rule context . get label ( ) . get name ( ) ) . get parent directory ( ) . get relative ( linked name ) ;
 result = rule context . get bin artifact ( artifact fragment ) ;
 }
 catch ( expansion exception e ) {
 rule context . throw with rule error ( e . get message ( ) ) ;
 }
 if ( ! result . equals ( linux default ) ) {
 rule context . register action ( new fail action ( rule context . get action owner ( ) , immutable list . of ( linux default ) , string . format ( String , linux default . get exec path string ( ) , result . get exec path string ( ) ) ) ) ;
 }
 return result ;
 }
comment:
START returns the linked artifact resulting from a linking of the given type . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set init param name ( string init param name ) {
 this . init param name = init param name ;
 }
comment:
START set the name of the servlet context init parameter to expose . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ non null function < from , UNK list > then limit ( int limit ) ;
comment:
START adds a max number of item limit to the end of the behavior chain . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given file .
returns the UNK of the UNK UNK .

code:
map < string , set < string > > find classes deps ( map < string , class reader > zip classes ) {
 map < string , set < string > > dependency map = new tree map < > ( ) ;
 dependency visitor visitor = get visitor ( ) ;
 int count = DecimalInteger ;
 try {
 for ( entry < string , class reader > entry : zip classes . entry set ( ) ) {
 string name = entry . get key ( ) ;
 tree set < string > set = new tree set < > ( ) ;
 dependency map . put ( name , set ) ;
 visitor . set dependency set ( set ) ;
 class reader cr = entry . get value ( ) ;
 cr . accept ( visitor , DecimalInteger ) ;
 visitor . set dependency set ( null ) ;
 log . debug UNK ( String , ++ count ) ;
 }
 }
 finally {
 log . debug UNK ( String ) ;
 }
 return dependency map ;
 }
comment:
START returns a map of all the dependencies found . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public floating toolbar set suggested width ( int suggested width ) {
 int difference = math . abs ( suggested width - UNK width ) ;
 mwidth changed = difference > ( UNK width * DecimalFloatingPoint ) ;
 UNK width = suggested width ;
 return this ;
 }
comment:
START sets the suggested width of this floating toolbar . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get compound padding start ( ) {
 resolve drawables ( ) ;
 switch ( get layout direction ( ) ) {
 default : case layout_ direction_ r : return get compound padding left ( ) ;
 case layout_ direction_ l : return get compound padding right ( ) ;
 }
 }
comment:
START returns the start padding of the view , plus space for the start drawable if any . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public label get build file label ( ) {
 return build file . get label ( ) ;
 }
comment:
START returns the label of this package 's build file . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ suppress warnings ( String ) public request set shard id ( shard id shard id ) {
 this . shard id = shard id ;
 return ( request ) this ;
 }
comment:
START sets the target shard id for the request . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set vertex attribute ( string name , int size , int type , boolean normalize , int stride , int offset ) {
 l20 gl = gdx . gl20 ;
 check managed ( ) ;
 int location = fetch attribute location ( name ) ;
 if ( location == - DecimalInteger ) return ;
 gl . gl vertex UNK pointer ( location , size , type , normalize , stride , offset ) ;
 }
comment:
START sets the vertex attribute with the given name . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int read ( ) throws exception {
 byte b [ ] = new byte [ DecimalInteger ] ;
 int ret = socket . read ( b , DecimalInteger , DecimalInteger ) ;
 if ( ret == DecimalInteger ) {
 return ( int ) b [ DecimalInteger ] & 0xff ;
 }
 else {
 return - DecimalInteger ;
 }
 }
comment:
START returns -1 if the end of the stream has been reached . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
private int get index with type check ( string attr name , type < ? > type ) {
 integer index = rule class . get attribute index ( attr name ) ;
 if ( index == null ) {
 throw new illegal argument exception ( String + attr name + String + rule label . get name ( ) ) ;
 }
 attribute attr = rule class . get attribute ( index ) ;
 if ( attr . get type ( ) != type ) {
 throw new illegal argument exception ( String + attr name + String + attr . get type ( ) + String + type + String + rule label ) ;
 }
 return index ;
 }
comment:
START returns the index of the specified attribute , if its type is ` type ' . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set format ( int format ) {
 final window manager . layout params attrs = get attributes ( ) ;
 if ( format != pixel format . n ) {
 attrs . format = format ;
 UNK window format = true ;
 }
 else {
 attrs . format = mdefault window format ;
 UNK window format = false ;
 }
 dispatch window attributes changed ( attrs ) ;
 }
comment:
START set the format of window , as per the pixel format types . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set active ( boolean flag ) {
 if ( flag ) {
 jni set active ( addr , flag ) ;
 }
 else {
 this . world . UNK body ( this ) ;
 }
 }
comment:
START set the active state of the body . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void add all ( int ... values ) {
 for ( int value : values ) {
 add ( value ) ;
 }
 }
comment:
START adds the given values to the dataset . END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add the UNK to UNK .
add the UNK UNK to the given UNK .
add the UNK UNK to the UNK

code:
protected final map < string , object > get flattened map ( map < string , object > source ) {
 map < string , object > result = new linked hash map < > ( ) ;
 build flattened map ( result , source , null ) ;
 return result ;
 }
comment:
START return a UNK version of the given map , recursively following any nested map or collection values . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public list < object > get header values ( string name ) {
 header value holder header = header value holder . get by name ( this . headers , name ) ;
 if ( header != null ) {
 return header . get values ( ) ;
 }
 else {
 return collections . empty list ( ) ;
 }
 }
comment:
START return all values for the given header as a list of value objects . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean target UNK ( configured target target ) {
 synchronized ( summary lock ) {
 return UNK . contains key ( as key ( target ) ) && ! remaining runs . contains key ( as key ( target ) ) ;
 }
 }
comment:
START returns true iff all runs of the target are UNK for . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public int get selected item position ( ) {
 return list . get selected item position ( ) ;
 }
comment:
START get the position of the currently selected list item . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public menu get menu ( ) {
 if ( menu == null ) {
 final context context = get context ( ) ;
 menu = new menu builder ( context ) ;
 menu . set callback ( new menu builder callback ( ) ) ;
 presenter = new action menu presenter ( context ) ;
 presenter . set UNK overflow ( true ) ;
 presenter . set callback ( maction menu presenter callback != null ? maction menu presenter callback : new action menu presenter callback ( ) ) ;
 menu . add menu presenter ( presenter , mpopup context ) ;
 presenter . set menu view ( this ) ;
 }
 return menu ;
 }
comment:
START returns the menu object that this action menu view is currently UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
@ nullable public nested set < label > get transitive root causes ( ) {
 return transitive root causes ;
 }
comment:
START returns the root causes , if any , of why targets were n't loaded . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public collection < string > get url mappings ( ) {
 return this . url mappings ;
 }
comment:
START return a mutable collection of the url mappings for the servlet . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
public scroll pane get scroll pane ( ) {
 return select box list ;
 }
comment:
START returns the scroll pane containing the list that is shown when the select box is open . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public internet domain name top private domain ( ) {
 if ( is top private domain ( ) ) {
 return this ;
 }
 check state ( is under public suffix ( ) , String , name ) ;
 return ancestor ( public suffix index - DecimalInteger ) ;
 }
comment:
START returns the portion of this domain name that is one level beneath the public suffix . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
int get merged type ( final int type1 , final int type2 ) {
 key2 . type = type_ d ;
 key2 . long val = type1 | ( ( ( long ) type2 ) << DecimalInteger ) ;
 key2 . hash code = 0x7 f & ( type_ d + type1 + type2 ) ;
 item result = get ( key2 ) ;
 if ( result == null ) {
 string t = type table [ type1 ] . str val1 ;
 string u = type table [ type2 ] . str val1 ;
 key2 . int val = add type ( get common super class ( t , u ) ) ;
 result = new item ( ( short ) DecimalInteger , key2 ) ;
 put ( result ) ;
 }
 return result . int val ;
 }
comment:
START returns the index of the common super type of the two given types . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public list < label > get reachable labels ( string attribute name , boolean include select keys ) throws interrupted exception {
 final immutable list . builder < label > builder = immutable list . builder ( ) ;
 visit labels ( get attribute definition ( attribute name ) , include select keys , new UNK label attribute ( ) {
 @ override public void accept label attribute ( label label , attribute attribute ) {
 builder . add ( label ) ;
 }
 }
 ) ;
 return builder . build ( ) ;
 }
comment:
START returns all labels UNK via the given attribute . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public static set < locale info > get level locales ( context context , set < string > UNK , locale info parent , boolean translated only ) {
 fill cache ( context ) ;
 string parent id = parent == null ? null : parent . get id ( ) ;
 hash set < locale info > result = new hash set < > ( ) ;
 for ( locale store . locale info li : UNK cache . values ( ) ) {
 int level = get level ( UNK , li , translated only ) ;
 if ( level == DecimalInteger ) {
 if ( parent != null ) {
 if ( parent id . equals ( li . get parent ( ) . to language tag ( ) ) ) {
 result . add ( li ) ;
 }
 }
 else {
 if ( li . is suggestion of type ( locale info . UNK type_ m ) ) {
 result . add ( li ) ;
 }
 else {
 result . add ( get locale info ( li . get parent ( ) ) ) ;
 }
 }
 }
 }
 return result ;
 }
comment:
START returns a list of locales for language or region selection . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public range < double > get supported frame rates for ( int width , int height ) {
 range < integer > range = mheight range ;
 if ( ! supports ( width , height , null ) ) {
 throw new illegal argument exception ( String ) ;
 }
 final int block count = utils . div up ( width , mblock width ) * utils . div up ( height , mblock height ) ;
 return range . create ( math . max ( UNK per second range . get lower ( ) / ( double ) block count , ( double ) mframe rate range . get lower ( ) ) , math . min ( UNK per second range . get upper ( ) / ( double ) block count , ( double ) mframe rate range . get upper ( ) ) ) ;
 }
comment:
START returns the range of supported video frame rates for a video size . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public boolean is showing popup ( ) {
 return get list popup window ( ) . is showing ( ) ;
 }
comment:
START gets whether the popup window with activities is shown . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set output type ( output type output type ) {
 this . output type = output type ;
 }
comment:
START sets the type of json output . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public int [ ] get app widget ids ( component name provider ) {
 if ( service == null ) {
 return new int [ DecimalInteger ] ;
 }
 try {
 return service . get app widget ids ( provider ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START get the list of app widget ids that have been bound to the given app widget provider . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public string get property ( string key ) {
 if ( property_ output_ sample_ e . equals ( key ) ) {
 int output sample rate = audio system . get primary output sampling rate ( ) ;
 return output sample rate > DecimalInteger ? integer . to string ( output sample rate ) : null ;
 }
 else if ( property_ output_ UNK per_ r . equals ( key ) ) {
 int output frames per buffer = audio system . get primary output frame count ( ) ;
 return output frames per buffer > DecimalInteger ? integer . to string ( output frames per buffer ) : null ;
 }
 else if ( property_ support_ UNK UNK d . equals ( key ) ) {
 return string . value of ( get context ( ) . get resources ( ) . get boolean ( com . android . internal . r . bool . UNK UNK near UNK ) ) ;
 }
 else if ( property_ support_ UNK UNK d . equals ( key ) ) {
 return string . value of ( get context ( ) . get resources ( ) . get boolean ( com . android . internal . r . bool . UNK UNK near UNK ) ) ;
 }
 else if ( property_ support_ audio_ source_ d . equals ( key ) ) {
 return string . value of ( get context ( ) . get resources ( ) . get boolean ( com . android . internal . r . bool . UNK audio source unprocessed ) ) ;
 }
 else {
 return null ;
 }
 }
comment:
START returns the value of the property with the specified key . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public string get shared preferences name ( ) {
 return mshared preferences name ;
 }
comment:
START returns the current name of the shared preferences file that preferences managed by this will use . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public long get time in jiffies ( ) {
 return time in nanos / DecimalInteger ;
 }
comment:
START returns the time of the measurement in jiffies . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
view new collection header view ( context context , int group id , view group parent ) ;
comment:
START returns a new custom view that will be used for each of the collection group headers . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public int get type parameter index ( ) {
 return ( value & 0x00 UNK ) > > DecimalInteger ;
 }
comment:
START returns the index of the type parameter referenced by this type reference . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
static certificate [ ] verify bytes ( byte [ ] block bytes , byte [ ] UNK bytes ) throws general security exception {
 object obj = null ;
 try {
 obj = providers . start jar verification ( ) ;
 s7 block = new s7 ( block bytes ) ;
 signer info [ ] verified signer infos = block . verify ( UNK bytes ) ;
 if ( ( verified signer infos == null ) || ( verified signer infos . length == DecimalInteger ) ) {
 throw new general security exception ( String ) ;
 }
 signer info verified signer info = verified signer infos [ DecimalInteger ] ;
 list < x509 certificate > verified signer cert chain = verified signer info . get certificate chain ( block ) ;
 if ( verified signer cert chain == null ) {
 throw new general security exception ( String ) ;
 }
 else if ( verified signer cert chain . is empty ( ) ) {
 throw new general security exception ( String ) ;
 }
 return verified signer cert chain . to array ( new x509 certificate [ verified signer cert chain . size ( ) ] ) ;
 }
 catch ( exception e ) {
 throw new general security exception ( String , e ) ;
 }
 finally {
 providers . stop jar verification ( obj ) ;
 }
 }
comment:
START returns certificates listed in the UNK block . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public static set < string > vary fields ( headers response headers ) {
 set < string > result = collections . empty set ( ) ;
 for ( int i = DecimalInteger , size = response headers . size ( ) ;
 i < size ;
 i ++ ) {
 if ( ! String . equals ignore case ( response headers . name ( i ) ) ) continue ;
 string value = response headers . value ( i ) ;
 if ( result . is empty ( ) ) {
 result = new tree set < > ( string . UNK UNK r ) ;
 }
 for ( string vary field : value . split ( String ) ) {
 result . add ( vary field . trim ( ) ) ;
 }
 }
 return result ;
 }
comment:
START returns the names of the request headers that need to be checked for equality when caching . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public string get ( char sequence name , string default value ) {
 string value = get ( name ) ;
 if ( value == null ) {
 return default value ;
 }
 return value ;
 }
comment:
START returns the value of a header with the specified name . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK for the given .

code:
subject observer < t > [ ] next ( object n ) {
 set latest ( n ) ;
 return get ( ) . observers ;
 }
comment:
START set a new latest notification UNK value and return the active UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public string to string ( ) {
 string buffer UNK = new string buffer ( ) ;
 for ( int i = position ;
 i < limit ;
 i ++ ) {
 UNK . append ( get ( i ) ) ;
 }
 return UNK . to string ( ) ;
 }
comment:
START returns a string representing the current remaining chars of this buffer . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
final void add last ( node n ) {
 tail . set ( n ) ;
 tail = n ;
 size ++ ;
 }
comment:
START add a new node to the linked list . END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public type [ ] get argument types ( ) {
 return get argument types ( get descriptor ( ) ) ;
 }
comment:
START returns the argument types of methods of this type . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ target api ( build . version_ s . jelly_ bean_ r1 ) private boolean is descendant ( fragment fragment ) {
 fragment root = this . get parent fragment ( ) ;
 while ( fragment . get parent fragment ( ) != null ) {
 if ( fragment . get parent fragment ( ) == root ) {
 return true ;
 }
 fragment = fragment . get parent fragment ( ) ;
 }
 return false ;
 }
comment:
START returns true if the fragment is a descendant of our parent . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected attribute map attributes ( rule configured target ct ) {
 return configured attribute mapper . of ( ct ) ;
 }
comment:
START returns an attribute value UNK for the given rule for the target configuration . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get device type ( ) {
 return mdevice type ;
 }
comment:
START returns cec type of the device . END
BLUE1:0.571428571429
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public string get volume state ( string mount point ) throws remote exception ;
comment:
START gets the state of a volume via its UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public void set concurrency limit ( int concurrency limit ) {
 this . concurrency throttle . set concurrency limit ( concurrency limit ) ;
 }
comment:
START set the maximum number of parallel UNK allowed . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set duration ( long duration ) {
 mchanging appearing duration = duration ;
 mchanging disappearing duration = duration ;
 mchanging duration = duration ;
 mappearing duration = duration ;
 mdisappearing duration = duration ;
 }
comment:
START sets the duration to be used by all animations of this transition object . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set elevation ( float elevation ) {
 if ( elevation != DecimalInteger ) {
 throw new unsupported operation exception ( String + String ) ;
 }
 }
comment:
START set the z-axis elevation of the action bar in pixels . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public string get full name in ui language ( ) {
 return locale helper . get display name ( locale , true ) ;
 }
comment:
START returns the name of the locale in the language of the ui . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set transform ( float x , float y , float angle ) {
 jni set transform ( addr , x , y , angle ) ;
 }
comment:
START set the position of the body 's origin and rotation . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean set tag value ( int tag id , object val ) {
 int ifd id = get defined tag default ifd ( tag id ) ;
 return set tag value ( tag id , ifd id , val ) ;
 }
comment:
START sets the value of an exif tag if it exists it 's default ifd . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public map < string , long array list > get builtin function self durations ( ) {
 return builtin function self durations ;
 }
comment:
START return the execution durations of all calls to built-in functions excluding the durations of all UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public string get bean name ( ) {
 return this . bean name ;
 }
comment:
START return the specific bean name that this bean UNK info points to , if any . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public range < integer > get quality range ( ) {
 return UNK range ;
 }
comment:
START returns the supported range of quality values . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void set target bean name ( string target bean name ) {
 this . target bean name = target bean name ;
 }
comment:
START set the name of the target bean in the spring application context . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public string get name ( ) {
 return parse field . get preferred name ( ) ;
 }
comment:
START return the UNK name of the UNK type @return english representation of UNK type END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set name ( string name ) {
 this . name = name ;
 }
comment:
START set the name of the job . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public string [ ] all keys ( ) {
 return dict . key set ( ) . to array ( new string [ count ( ) ] ) ;
 }
comment:
START gets a list of all keys used in this UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static < k , v > multimap < k , v > unmodifiable multimap ( multimap < k , v > delegate ) {
 if ( delegate instanceof unmodifiable multimap || delegate instanceof immutable multimap ) {
 return delegate ;
 }
 return new unmodifiable multimap < k , v > ( delegate ) ;
 }
comment:
START returns an unmodifiable view of the specified multimap . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void set expand activity overflow button content description ( int resource id ) {
 char sequence content description = context . get string ( resource id ) ;
 mexpand activity overflow button image . set content description ( content description ) ;
 }
comment:
START sets the content description for the button that expands the activity overflow list . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public location get attribute location ( string attr name ) {
 integer idx = rule class . get attribute index ( attr name ) ;
 int location index = idx != null ? get location index ( idx ) : - DecimalInteger ;
 return location index >= DecimalInteger ? attribute locations [ location index ] : null ;
 }
comment:
START returns the location of the attribute definition for this rule , or null if not found . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public matrix4 set ( float quaternion x , float quaternion y , float quaternion z , float quaternion w ) {
 return set ( DecimalFloatingPoint , DecimalFloatingPoint , DecimalFloatingPoint , quaternion x , quaternion y , quaternion z , quaternion w ) ;
 }
comment:
START sets the matrix to a rotation matrix representing the quaternion . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private string get hash ( string pkg , string name ) throws exception {
 package cache options package cache options = options . get defaults ( package cache options . class ) ;
 package cache options . default visibility = constant rule visibility . c ;
 package cache options . show loading progress = true ;
 package cache options . UNK threads = DecimalInteger ;
 get skyframe executor ( ) . prepare package loading ( new path package locator ( output base , immutable list . of ( root directory ) ) , package cache options , String , d . random d ( ) , immutable map . < string , string > of ( ) , new timestamp granularity monitor ( blaze clock . instance ( ) ) ) ;
 sky key pkg lookup key = package value . key ( package identifier . parse ( String + pkg ) ) ;
 evaluation result < package value > result = skyframe executor test utils . evaluate ( get skyframe executor ( ) , pkg lookup key , false , reporter ) ;
 assert false ( result . has error ( ) ) ;
 collection < target > targets = result . get ( pkg lookup key ) . get package ( ) . get targets ( ) ;
 for ( target target : targets ) {
 if ( target . get name ( ) . equals ( name ) ) {
 return ( ( rule ) target ) . get rule class object ( ) . get rule definition environment ( ) . get transitive content hash code ( ) ;
 }
 }
 throw new illegal state exception ( String + name ) ;
 }
comment:
START returns the hash code of the rule target defined by the pkg and the target name parameters . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public nested set < artifact > get crosstool inputs ( ) {
 return this . crosstool inputs ;
 }
comment:
START returns input artifacts UNK from the crosstool . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ can ignore return value public < e extends t > e min ( iterable < e > iterable ) {
 return min ( iterable . iterator ( ) ) ;
 }
comment:
START returns the least of the specified values according to this ordering . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public inet address get address ( ) {
 try {
 return inet address . get by address ( address ) ;
 }
 catch ( unknown host exception e ) {
 return null ;
 }
 }
comment:
START returns a copy of the first ip address in the prefix . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected float get right fading edge strength ( ) {
 return compute horizontal scroll offset ( ) + compute horizontal scroll extent ( ) < compute horizontal scroll range ( ) ? DecimalFloatingPoint : DecimalFloatingPoint ;
 }
comment:
START returns the strength , or intensity , of the right faded edge . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ deprecated protected void set state ( int state ) {
 state = state ;
 }
comment:
START sets the initialization state of the instance . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the request .
returns the UNK of the view .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public final float get raw x ( ) {
 return native get raw axis value ( mnative ptr , axis_ x , DecimalInteger , history_ t ) ;
 }
comment:
START returns the original raw x coordinate of this event . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get duration us ( ) {
 long num frames = data size / block alignment ;
 return ( num frames * c . UNK per_ d ) / sample rate hz ;
 }
comment:
START returns the duration in microseconds of this wav . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public component name get component name ( ) {
 return mcomponent name ;
 }
comment:
START returns the component name of this activity . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public boolean set priority ( bluetooth device device , int priority ) {
 if ( g ) log ( String + device + String + priority + String ) ;
 if ( service != null && is enabled ( ) && is valid device ( device ) ) {
 if ( priority != bluetooth profile . priority_ f && priority != bluetooth profile . priority_ n ) {
 return false ;
 }
 try {
 return service . set priority ( device , priority ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String + log . get stack trace string ( new throwable ( ) ) ) ;
 return false ;
 }
 }
 if ( service == null ) log . w ( g , String ) ;
 return false ;
 }
comment:
START set priority of the profile the device should already be paired . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK , in the UNK .

code:
public component name get component ( ) {
 return new component name ( service . service info . package name , service . service info . name ) ;
 }
comment:
START returns the component of the service that implements this tv input . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
static void set current proxied bean name ( string bean name ) {
 if ( bean name != null ) {
 current proxied bean name . set ( bean name ) ;
 }
 else {
 current proxied bean name . remove ( ) ;
 }
 }
comment:
START set the name of the currently proxied bean instance . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .
sets the UNK of the UNK

code:
public int get play state ( ) {
 synchronized ( mplay state lock ) {
 return mplay state ;
 }
 }
comment:
START returns the playback state of the audio track instance . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void add exclude filter ( type filter exclude filter ) {
 this . exclude filters . add ( DecimalInteger , exclude filter ) ;
 }
comment:
START add an exclude type filter to the <i> front </i> of the exclusion list . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public string get identity ( ) {
 return sync user . get identity ( ) ;
 }
comment:
START returns the identity of this user on the realm object server . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get format ( ) {
 return pixmap . get format ( ) ;
 }
comment:
START returns the open l es format of this pixmap . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public class < ? > get business interface ( ) {
 return this . business interface ;
 }
comment:
START return the business interface of the ejb we 're proxying . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public object get value ( ) {
 return this . value ;
 }
comment:
START return the value of the attribute . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public geo point [ ] points ( ) {
 return this . points . to array ( new geo point [ this . points . size ( ) ] ) ;
 }
comment:
START returns the points to create the range distance UNK from . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public array < fixture > get fixture list ( ) {
 return fixtures ;
 }
comment:
START get the list of all fixtures attached to this body . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get gc UNK in millis ( ) {
 return gc UNK in millis ;
 }
comment:
START returns the gc UNK cycle in milliseconds . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .

code:
@ override public immutable set < entry < k , v > > entry set ( ) {
 immutable set < entry < k , v > > result = entry set ;
 return ( result == null ) ? entry set = create entry set ( ) : result ;
 }
comment:
START returns an immutable set of the mappings in this map . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public immutable list < string > get defaults rules ( ) {
 return immutable list . of ( ) ;
 }
comment:
START returns the extra rules UNK to the default package by this fragment . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ system api @ requires permission ( android . manifest . permission . tv_ input_ e ) public list < tv input hardware info > get hardware list ( ) {
 try {
 return service . get hardware list ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns a list of tv input hardware info objects representing available hardware . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ non null public list < file > get files ( ) {
 return files ;
 }
comment:
START returns the set of files to check with lint . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public boolean add error ( int error ) {
 boolean UNK = ( DecimalInteger <= error && error < ssl error . ssl_ max_ r ) ;
 if ( UNK ) {
 errors |= ( 0x1 << error ) ;
 }
 return UNK ;
 }
comment:
START adds the supplied ssl error to the set . END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add the UNK UNK to the given UNK .
add the UNK to the UNK to the UNK .
add the UNK to the UNK to .

code:
public static list < string > get installed dialer applications ( context context , int user id ) {
 package manager package manager = context . get package manager ( ) ;
 intent intent = new intent ( intent . action_ l ) ;
 list < resolve info > resolve info list = package manager . query intent activities as user ( intent , DecimalInteger , user id ) ;
 list < string > package names = new array list < > ( ) ;
 for ( resolve info resolve info : resolve info list ) {
 final activity info activity info = resolve info . activity info ;
 if ( activity info != null && ! package names . contains ( activity info . package name ) ) {
 package names . add ( activity info . package name ) ;
 }
 }
 final intent dial intent with UNK scheme = new intent ( intent . action_ l ) ;
 dial intent with UNK scheme . set data ( uri . from parts ( phone account . scheme_ l , String , null ) ) ;
 return filter by intent ( context , package names , dial intent with UNK scheme ) ;
 }
comment:
START returns a list of installed and available dialer applications . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public immutable type to instance map < b > build ( ) {
 return new immutable type to instance map < b > ( map builder . build ( ) ) ;
 }
comment:
START returns a new immutable UNK map containing the entries provided to this builder . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK UNK

code:
protected abstract file system get fresh file system ( ) throws exception ;
comment:
START returns an instance of the file system to test . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public static path fragment get UNK name ( rule context rule context , path fragment library path , boolean preserve name , boolean prefix consumer , cpp configuration cpp configuration ) {
 string escaped rule path = actions . escaped path ( String + rule context . get label ( ) ) ;
 string UNK = get dynamic library UNK ( library path , preserve name ) ;
 path fragment solib dir = new path fragment ( cpp configuration . get solib directory ( ) ) ;
 if ( preserve name ) {
 string escaped library path = actions . escaped path ( String + library path . get parent directory ( ) . get path string ( ) ) ;
 path fragment UNK dir = solib dir . get relative ( prefix consumer ? escaped rule path + String + escaped library path : escaped library path ) ;
 return UNK dir . get relative ( UNK ) ;
 }
 else {
 return solib dir . get relative ( prefix consumer ? escaped rule path + String + UNK : UNK ) ;
 }
 }
comment:
START returns the name of the symlink that will be created for a library , given its name . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ override public long size ( ) {
 return native size ( native ptr ) ;
 }
comment:
START gets the number of UNK of this table . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get icon cache size ( ) {
 return mmax icon cache size ;
 }
comment:
START returns the size of the app icon cache . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public double UNK covariance ( ) {
 check state ( count ( ) != DecimalInteger ) ;
 return sum of products of deltas / count ( ) ;
 }
comment:
START returns the population covariance of the values . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
map < sky key , sky value > get done values ( ) ;
comment:
START returns a read-only live view of the done values in the graph . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public string to path string ( path source ) {
 string source extension = fully qualified name . factory . get source extension ( source ) ;
 return paths . get ( UNK r . join ( immutable list . < string > builder ( ) . add ( resource type . get name ( ) ) . add all ( qualifiers ) . build ( ) ) , resource name + source extension ) . to string ( ) ;
 }
comment:
START returns a string path representation of the fully qualified name . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ view debug . captured view property public char sequence get hint ( ) {
 return hint ;
 }
comment:
START returns the hint that is displayed when the text of the text view is empty . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set uniform matrix ( string name , matrix3 matrix , boolean transpose ) {
 set uniform matrix ( fetch uniform location ( name ) , matrix , transpose ) ;
 }
comment:
START sets the uniform matrix with the given name . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public list < challenge > UNK ( ) {
 string response field ;
 if ( code == http_ d ) {
 response field = String ;
 }
 else if ( code == http_ UNK h ) {
 response field = String ;
 }
 else {
 return collections . empty list ( ) ;
 }
 return http headers . parse UNK ( headers ( ) , response field ) ;
 }
comment:
START returns the authorization UNK appropriate for this response 's code . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set aliases ( map < string , ? > aliases ) {
 this . aliases = aliases ;
 }
comment:
START set the UNK map , consisting of string aliases mapped to classes . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
private long get UNK range ( int start offset , int end offset ) {
 final layout layout = mtext view . get layout ( ) ;
 if ( layout == null ) {
 return text utils . pack range in long ( - DecimalInteger , - DecimalInteger ) ;
 }
 final char sequence text = mtext view . get text ( ) ;
 int min line = layout . get line for offset ( start offset ) ;
 while ( min line > DecimalInteger ) {
 final int prev line end offset = layout . get line end ( min line - DecimalInteger ) ;
 if ( text . char at ( prev line end offset - DecimalInteger ) == String ) {
 break ;
 }
 min line -- ;
 }
 int max line = layout . get line for offset ( end offset ) ;
 while ( max line < layout . get line count ( ) - DecimalInteger ) {
 final int line end offset = layout . get line end ( max line ) ;
 if ( text . char at ( line end offset - DecimalInteger ) == String ) {
 break ;
 }
 max line ++ ;
 }
 return text utils . pack range in long ( layout . get line start ( min line ) , layout . get line end ( max line ) ) ;
 }
comment:
START get the minimum range of UNK that contains start offset and end offset . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public map < string , string > get headers ( ) throws auth failure error {
 return collections . empty map ( ) ;
 }
comment:
START returns a list of extra http headers to go along with this request . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void set elevation ( float elevation ) {
 if ( elevation != get elevation ( ) ) {
 invalidate view property ( true , false ) ;
 mrender node . set elevation ( elevation ) ;
 invalidate view property ( false , true ) ;
 invalidate parent if needed and was quick rejected ( ) ;
 }
 }
comment:
START sets the base elevation of this view , in pixels . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public immutable list < artifact > get object files ( boolean use pic ) {
 return use pic ? pic object files : object files ;
 }
comment:
START returns an unmodifiable view of the . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void set field aliases ( map < string , string > field aliases ) {
 this . field aliases = field aliases ;
 }
comment:
START set the field UNK map , consisting of field names . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given view .
set the UNK for the given UNK .

code:
@ non null public string get relative path ( @ non null file file ) {
 string path = file . get path ( ) ;
 string reference path = dir . get path ( ) ;
 if ( path . starts with ( reference path ) ) {
 int length = reference path . length ( ) ;
 if ( path . length ( ) > length && path . char at ( length ) == file . separator char ) {
 length ++ ;
 }
 return path . substring ( length ) ;
 }
 return path ;
 }
comment:
START returns the relative path of a given file within the current project . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public int get id ( int index ) {
 if ( index >= mlayer state . num ) {
 throw new index out of bounds exception ( ) ;
 }
 return mlayer state . children [ index ] . id ;
 }
comment:
START returns the id of the specified layer . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private static int available capacity ( buffer buffer ) {
 return buffer . capacity ( ) - buffer . limit ( ) ;
 }
comment:
START returns the number of elements between the limit and capacity . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean get ( long index ) {
 return array [ segment ( index ) ] [ offset ( index ) ] ;
 }
comment:
START returns the element of this big array at specified index . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public void set image url ( string url , image loader image loader ) {
 url = url ;
 mimage loader = image loader ;
 load image if necessary ( false ) ;
 }
comment:
START sets url of the image that should be loaded into this view . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static spannable . factory get instance ( ) {
 return instance ;
 }
comment:
START returns the standard UNK factory . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
label get first ( ) {
 return ! class reader . s || frame == null ? this : frame . owner ;
 }
comment:
START returns the first label of the series to which this label belongs . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static graph runner current ( ) {
 return UNK runner . get ( ) ;
 }
comment:
START returns the currently running UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set param name ( string param name ) {
 this . param name = param name ;
 }
comment:
START set the name of the parameter that contains a locale specification in a locale change request . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int capacity ( ) {
 return data == null ? DecimalInteger : data . length ;
 }
comment:
START returns the capacity of the array , which may be larger than the limit . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string from bytes ( byte [ ] bytes ) {
 return new string ( bytes , charset ) ;
 }
comment:
START returns the string represented by the specified byte array using the file 's charset encoding . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given file .

code:
public builder add portable proto filters ( nested set < artifact > proto filters ) {
 this . portable proto filters . add transitive ( proto filters ) ;
 return this ;
 }
comment:
START adds all the proto filters to the set of dependencies . END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
add the UNK to the given UNK .
add the UNK to the UNK to the UNK .

code:
@ can ignore return value public < e extends t > e max ( @ nullable e a , @ nullable e b ) {
 return ( compare ( a , b ) >= DecimalInteger ) ? a : b ;
 }
comment:
START returns the greater of the two values according to this ordering . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set UNK v ( ) {
 matrix . load identity ( ) ;
 matrix . set ( DecimalInteger , DecimalInteger , DecimalFloatingPoint ) ;
 matrix . set ( DecimalInteger , DecimalInteger , DecimalFloatingPoint ) ;
 matrix . set ( DecimalInteger , DecimalInteger , DecimalFloatingPoint ) ;
 matrix . set ( DecimalInteger , DecimalInteger , - DecimalFloatingPoint ) ;
 matrix . set ( DecimalInteger , DecimalInteger , - DecimalFloatingPoint ) ;
 matrix . set ( DecimalInteger , DecimalInteger , DecimalFloatingPoint ) ;
 matrix . set ( DecimalInteger , DecimalInteger , DecimalFloatingPoint ) ;
 matrix . set ( DecimalInteger , DecimalInteger , - DecimalFloatingPoint ) ;
 matrix . set ( DecimalInteger , DecimalInteger , - DecimalFloatingPoint ) ;
 set matrix ( ) ;
 }
comment:
START set the matrix to convert from rgb to yuv with a direct copy of the NUMBER channel . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private void set UNK sample state ( track output output to use , long current sample duration , int UNK read bytes , int sample size ) {
 state = state_ UNK e ;
 bytes read = UNK read bytes ;
 this . current output = output to use ;
 this . current sample duration = current sample duration ;
 this . sample size = sample size ;
 }
comment:
START sets the state to state_ UNK e . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set environment ( configurable environment environment ) {
 this . environment = environment ;
 }
comment:
START sets the underlying environment that should be used with the created application context . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set shared element enter transition ( transition transition ) {
 mshared element enter transition = transition ;
 }
comment:
START sets the transition that will be used for shared elements transferred into the content scene . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static int get max stroke count ( ) {
 return max_ UNK t ;
 }
comment:
START get the upper limit for the number of UNK a gesture may contain . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public string get target field ( ) {
 return this . target field ;
 }
comment:
START return the name of the field to be retrieved . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public image format get image format ( ) {
 return mimage format ;
 }
comment:
START returns the image format if known , otherwise image UNK n . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public path [ ] node data paths ( ) {
 assert env is locked ( ) ;
 path [ ] paths = new path [ node paths . length ] ;
 for ( int i = DecimalInteger ;
 i < paths . length ;
 i ++ ) {
 paths [ i ] = node paths [ i ] . path ;
 }
 return paths ;
 }
comment:
START returns an array of all of the nodes data locations . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public uncaught exception handler get uncaught exception handler ( ) {
 return UNK ;
 }
comment:
START returns the handler for internal worker threads that terminate due to UNK errors encountered while executing tasks . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
int get type ( ) {
 return request . get type ( ) ;
 }
comment:
START returns the type of the geofence for the current request . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public class < ? > get service interface ( ) {
 return this . service interface ;
 }
comment:
START return the interface of the service to export . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of all UNK .
return the number of UNK UNK
return the number of all UNK in the given .

code:
public string get resource description ( ) {
 return this . resource description ;
 }
comment:
START return the description of the resource that the bean definition came from . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
private immutable list < string > get android compatible javac opts ( ) {
 java toolchain provider toolchain = java toolchain provider . from rule context ( rule context ) ;
 immutable list . builder < string > list builder = immutable list . builder ( ) ;
 list builder . add all ( toolchain . get javac options ( ) ) ;
 list builder . add all ( toolchain . get compatible javac options ( String ) ) ;
 return list builder . build ( ) ;
 }
comment:
START returns javacopts for compiling the java source files generated by the proto compiler . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public abstract multi value map < string , string > get query params ( ) ;
comment:
START returns the map of query parameters . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public final int max content length ( ) {
 return max content length ;
 }
comment:
START returns the maximum allowed length of the aggregated message in bytes . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public list < handler method return value handler > get return value handlers ( ) {
 return this . return value handlers . get return value handlers ( ) ;
 }
comment:
START return the complete list of return value handlers . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public string get detail ( ) {
 return detail . trim ( ) ;
 }
comment:
START returns a detailed description of the error . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static value percent height ( final float percent ) {
 return new value ( ) {
 public float get ( actor actor ) {
 return actor . get height ( ) * percent ;
 }
 }
 ;
 }
comment:
START returns a value that is a percentage of the actor 's height . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private static < k , v > set < map . entry < k , v > > get sorted entry set ( map < k , v > dict ) {
 if ( ! ( dict instanceof sorted map < ? , ? > ) ) {
 map < k , v > tmp = new tree map < > ( eval utils . UNK r ) ;
 tmp . put all ( dict ) ;
 dict = tmp ;
 }
 return dict . entry set ( ) ;
 }
comment:
START returns the sorted entry set of the given map END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
protected string UNK archive root ( artifact UNK input ) {
 if ( is building for watch ( ) ) {
 string containing dir = UNK input . get exec path ( ) . get parent directory ( ) . get base name ( ) ;
 return containing dir . ends with ( String ) ? ( containing dir + String ) : String ;
 }
 else {
 return bundleable file . flat bundle path ( UNK input . get exec path ( ) ) + String ;
 }
 }
comment:
START returns the root file path to which UNK interfaces are compiled . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get input port count ( ) {
 return minput port count ;
 }
comment:
START returns the device 's number of input ports . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
private static throwable get cause ( exception ex ) {
 return ( ex instanceof eval exception ) ? ex . get cause ( ) : ex ;
 }
comment:
START returns the `` real '' cause of this exception . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean set if ( t new state , predicate < t > predicate ) {
 check state ( ! thread . UNK lock ( lock ) , String ) ;
 require non null ( new state , String ) ;
 while ( true ) {
 t current state = get ( ) ;
 if ( current state . equals ( new state ) ) {
 return false ;
 }
 if ( ! predicate . test ( current state ) ) {
 return false ;
 }
 if ( compare and set ( current state , new state ) ) {
 return true ;
 }
 }
 }
comment:
START sets the state if the current state satisfies the specified predicate . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
private int get day at location ( int x , int y ) {
 final int padded x = x - get padding left ( ) ;
 if ( padded x < DecimalInteger || padded x >= UNK width ) {
 return - DecimalInteger ;
 }
 final int header height = mmonth height + mday of week height ;
 final int padded y = y - get padding top ( ) ;
 if ( padded y < header height || padded y >= UNK height ) {
 return - DecimalInteger ;
 }
 final int padded rtl ;
 if ( is layout rtl ( ) ) {
 padded rtl = UNK width - padded x ;
 }
 else {
 padded rtl = padded x ;
 }
 final int row = ( padded y - header height ) / mday height ;
 final int col = ( padded rtl * UNK in_ k ) / UNK width ;
 final int index = col + row * UNK in_ k ;
 final int day = index + DecimalInteger - find day offset ( ) ;
 if ( ! is valid day of month ( day ) ) {
 return - DecimalInteger ;
 }
 return day ;
 }
comment:
START returns the day of the month or -1 if the position was n't in a valid day . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
boolean set adjusted for UNK dock ( float minimize amount ) {
 if ( minimize amount != UNK amount ) {
 UNK amount = minimize amount ;
 update adjusted bounds ( ) ;
 return is visible for user locked ( ) ;
 }
 else {
 return false ;
 }
 }
comment:
START sets the amount how much we currently UNK our stack . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
static string get lazy key ( string key ) {
 int start = start of type ( key ) ;
 if ( substring starts with ( key , start , UNK x ) ) {
 return extract key ( key , start , key . substring ( DecimalInteger , start ) , UNK x ) ;
 }
 else {
 return null ;
 }
 }
comment:
START returns a key for the underlying binding of a lazy <t> value . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
@ beta public static < e > sorted multiset < e > unmodifiable sorted multiset ( sorted multiset < e > sorted multiset ) {
 return new unmodifiable sorted multiset < e > ( check not null ( sorted multiset ) ) ;
 }
comment:
START returns an unmodifiable view of the specified sorted multiset . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public void set tint color ( int color , boolean animated ) {
 UNK tint = color ;
 update background tint ( animated ) ;
 }
comment:
START sets the tint color of the background END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set last transition ( int last transition ) {
 mlast transition = last transition ;
 }
comment:
START set the last known transition of the geofence . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private void set intent ( intent _intent , activity info info ) {
 if ( intent == null ) {
 UNK UNK identity = ( info . flags & activity info . flag_ UNK task_ y ) == DecimalInteger ;
 }
 else if ( UNK UNK identity ) {
 return ;
 }
 affinity = info . task affinity ;
 if ( intent == null ) {
 root affinity = affinity ;
 }
 effective uid = info . application info . uid ;
 string name = null ;
 if ( info . target activity == null ) {
 if ( _intent != null ) {
 if ( _intent . get selector ( ) != null || _intent . get source bounds ( ) != null ) {
 _intent = new intent ( _intent ) ;
 _intent . set selector ( null ) ;
 _intent . set source bounds ( null ) ;
 }
 }
 if ( debug_ s ) slog . v ( tag_ s , String + this + String + _intent ) ;
 intent = _intent ;
 real activity = _intent != null ? _intent . get component ( ) : null ;
 orig activity = null ;
 }
 else {
 component name target component = new component name ( info . package name , info . target activity ) ;
 if ( _intent != null ) {
 intent target intent = new intent ( _intent ) ;
 target intent . set component ( target component ) ;
 target intent . set selector ( null ) ;
 target intent . set source bounds ( null ) ;
 if ( debug_ s ) slog . v ( tag_ s , String + this + String + target intent ) ;
 intent = target intent ;
 real activity = target component ;
 orig activity = _intent . get component ( ) ;
 }
 else {
 intent = null ;
 real activity = target component ;
 orig activity = new component name ( info . package name , info . name ) ;
 }
 }
 final int intent flags = intent == null ? DecimalInteger : intent . get flags ( ) ;
 if ( ( intent flags & intent . flag_ activity_ UNK task_ if_ d ) != DecimalInteger ) {
 root was reset = true ;
 }
 user id = user handle . get user id ( info . application info . uid ) ;
 muser setup complete = settings . secure . get int for user ( service . context . get content resolver ( ) , user_ UNK e , DecimalInteger , user id ) != DecimalInteger ;
 if ( ( info . flags & activity info . flag_ auto_ remove_ from_ s ) != DecimalInteger ) {
 auto remove recents = true ;
 }
 else if ( ( intent flags & ( flag_ activity_ new_ t | flag_ activity_ UNK in_ s ) ) == flag_ activity_ new_ t ) {
 if ( info . document launch mode != activity info . document_ UNK e ) {
 auto remove recents = false ;
 }
 else {
 auto remove recents = true ;
 }
 }
 else {
 auto remove recents = false ;
 }
 mresize mode = info . resize mode ;
 UNK task mode = info . lock task launch mode ;
 privileged = ( info . application info . private flags & private_ flag_ d ) != DecimalInteger ;
 set lock task auth ( ) ;
 }
comment:
START sets the original intent , _ without _ updating the calling uid or package . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
@ suppress warnings ( String ) protected < t > list < t > get default strategies ( application context context , class < t > strategy interface ) {
 string key = strategy interface . get name ( ) ;
 string value = default strategies . get property ( key ) ;
 if ( value != null ) {
 string [ ] class names = string utils . comma delimited list to string array ( value ) ;
 list < t > strategies = new array list < > ( class names . length ) ;
 for ( string class name : class names ) {
 try {
 class < ? > clazz = class utils . for name ( class name , dispatcher servlet . class . get class loader ( ) ) ;
 object strategy = create default strategy ( context , clazz ) ;
 strategies . add ( ( t ) strategy ) ;
 }
 catch ( class not found exception ex ) {
 throw new bean initialization exception ( String + class name + String + key + String , ex ) ;
 }
 catch ( UNK error err ) {
 throw new bean initialization exception ( String + class name + String + key + String , err ) ;
 }
 }
 return strategies ;
 }
 else {
 return new linked list < > ( ) ;
 }
 }
comment:
START create a list of default strategy objects for the given strategy interface . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set UNK ( float v [ ] ) {
 field packer fp = new field packer ( DecimalInteger * DecimalInteger ) ;
 for ( int ct = DecimalInteger ;
 ct < values . length ;
 ct ++ ) {
 values [ ct ] = v [ ct ] ;
 fp . add f32 ( values [ ct ] ) ;
 }
 set var ( DecimalInteger , fp ) ;
 }
comment:
START set the UNK for the convolve . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
protected boolean should register jsp servlet ( ) {
 return this . jsp servlet != null && this . jsp servlet . get registered ( ) && class utils . is present ( this . jsp servlet . get class name ( ) , get class ( ) . get class loader ( ) ) ;
 }
comment:
START returns whether or not the UNK servlet should be registered with the embedded container . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the UNK .

code:
public void set rotation x ( float rotation x ) {
 if ( rotation x != get rotation x ( ) ) {
 invalidate view property ( true , false ) ;
 mrender node . set rotation x ( rotation x ) ;
 invalidate view property ( false , true ) ;
 invalidate parent if needed and was quick rejected ( ) ;
 notify subtree accessibility state changed if needed ( ) ;
 }
 }
comment:
START sets the degrees that the view is rotated around the horizontal axis through the pivot point . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public boolean set priority ( bluetooth device device , int priority ) {
 if ( g ) log ( String + device + String + priority + String ) ;
 if ( service != null && is enabled ( ) && is valid device ( device ) ) {
 if ( priority != bluetooth profile . priority_ f && priority != bluetooth profile . priority_ n ) {
 return false ;
 }
 try {
 return service . set priority ( device , priority ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String + log . get stack trace string ( new throwable ( ) ) ) ;
 return false ;
 }
 }
 if ( service == null ) log . w ( g , String ) ;
 return false ;
 }
comment:
START set priority of the profile the device should already be paired . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK , in the UNK .

code:
public void set executable ( boolean executable ) throws exception , file not found exception {
 file system . set executable ( this , executable ) ;
 }
comment:
START sets the execute permission on the file specified by the current path , following symbolic links . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
protected file system create file system ( ) {
 return new in memory file system ( blaze clock . instance ( ) ) ;
 }
comment:
START creates the file system override to UNK UNK behavior . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public vector2 [ ] get points ( ) {
 return points ;
 }
comment:
START returns the contact points of this manifold . END
BLUE1:0.571428571429
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public void set width ( int width ) {
 mdrop down width = width ;
 }
comment:
START sets the width of the popup window in pixels . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public void get pixels ( @ color int int [ ] pixels , int offset , int stride , int x , int y , int width , int height ) {
 check recycled ( String ) ;
 if ( width == DecimalInteger || height == DecimalInteger ) {
 return ;
 }
 check pixels access ( x , y , width , height , offset , stride , pixels ) ;
 native get pixels ( mnative ptr , pixels , offset , stride , x , y , width , height ) ;
 }
comment:
START returns in pixels -lsb- -rsb- a copy of the data in the bitmap . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private static string base name without ipa ( artifact artifact ) {
 string base name = artifact . get exec path ( ) . get base name ( ) ;
 preconditions . check state ( base name . ends with ( String ) , String , base name ) ;
 return base name . substring ( DecimalInteger , base name . length ( ) - DecimalInteger ) ;
 }
comment:
START returns the base name of the artifact , with the . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public type descriptor get source type ( ) {
 return this . source type ;
 }
comment:
START return the source type we UNK to convert the value from . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public boolean is connected ( ) {
 return state == UNK state_ d ;
 }
comment:
START returns whether the browser is connected to the service . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public int size ( ) {
 return values . size ( ) ;
 }
comment:
START returns the number of values . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set bar border color ( int color ) {
 mbar border color = color ;
 }
comment:
START sets the color drawing borders around the bars . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
private static auto text get instance ( view view ) {
 resources res = view . get context ( ) . get resources ( ) ;
 locale locale = res . get configuration ( ) . locale ;
 auto text instance ;
 synchronized ( lock ) {
 instance = instance ;
 if ( ! locale . equals ( instance . locale ) ) {
 instance = new auto text ( res ) ;
 instance = instance ;
 }
 }
 return instance ;
 }
comment:
START returns the instance of auto text . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public float keyframes create UNK keyframes ( ) {
 return new float keyframes base ( ) {
 @ override public float get float value ( float fraction ) {
 point f point f = ( point f ) path keyframes . this . get value ( fraction ) ;
 return point f . x ;
 }
 }
 ;
 }
comment:
START returns a float keyframes for the x component of the path . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set color ( @ color res final int color res id ) {
 UNK paint . set color ( get resources ( ) . get color ( color res id ) ) ;
 }
comment:
START sets the color of the dots . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
set the UNK for the given UNK .

code:
public string get method name ( ) {
 return this . method name ;
 }
comment:
START return the name of the method to be overridden . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public immutable set multimap < k , v > as multimap ( ) {
 if ( is empty ( ) ) {
 return immutable set multimap . of ( ) ;
 }
 immutable set multimap < k , v > result = multimap view ;
 return ( result == null ) ? ( multimap view = new immutable set multimap < k , v > ( new map view of values as singleton sets ( ) , size ( ) , null ) ) : result ;
 }
comment:
START returns a multimap view of the map . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public class < ? > get main application class ( ) {
 return this . main application class ;
 }
comment:
START returns the main application class that has been UNK or explicitly configured . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ test api public int get gnss year of hardware ( ) {
 try {
 return service . get gnss year of hardware ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns the system information of the gps hardware . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public abstract long get phone signal UNK time ( long elapsed realtime us , int which ) ;
comment:
START returns the time in microseconds that the phone has been trying to UNK a signal . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get type ( ) {
 return this . type ;
 }
comment:
START returns the type of event . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public list < activity manager . app task > get app tasks ( ) {
 array list < app task > tasks = new array list < app task > ( ) ;
 list < UNK task > app tasks ;
 try {
 app tasks = activity manager native . get default ( ) . get app tasks ( context . get package name ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 int num app tasks = app tasks . size ( ) ;
 for ( int i = DecimalInteger ;
 i < num app tasks ;
 i ++ ) {
 tasks . add ( new app task ( app tasks . get ( i ) ) ) ;
 }
 return tasks ;
 }
comment:
START get the list of tasks associated with the calling application . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public long size in bytes ( ) {
 return size in bytes ( last committed translog file generation ) ;
 }
comment:
START returns the size in bytes of the translog files that are n't committed to lucene . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public float get line height ( ) {
 return data . line height ;
 }
comment:
START returns the line height , which is the distance from one line of text to the next . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public set < artifact > input closure of ( action analysis metadata action ) {
 return artifact closure of ( action . get inputs ( ) ) ;
 }
comment:
START returns the closure over the input files of an action . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set exception attribute ( string exception attribute ) {
 this . exception attribute = exception attribute ;
 }
comment:
START set the name of the model attribute as which the exception should be exposed . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set current keyboard layout for input device ( input device identifier identifier , string keyboard layout descriptor ) {
 if ( identifier == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( keyboard layout descriptor == null ) {
 throw new illegal argument exception ( String ) ;
 }
 try {
 im . set current keyboard layout for input device ( identifier , keyboard layout descriptor ) ;
 }
 catch ( remote exception ex ) {
 throw ex . rethrow from system server ( ) ;
 }
 }
comment:
START sets the current keyboard layout descriptor for the specified input device . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public static boolean set default dialer application ( context context , string package name , int user ) {
 string old package name = settings . secure . get string for user ( context . get content resolver ( ) , settings . secure . UNK default_ n , user ) ;
 if ( package name != null && old package name != null && package name . equals ( old package name ) ) {
 return false ;
 }
 list < string > package names = get installed dialer applications ( context ) ;
 if ( package names . contains ( package name ) ) {
 settings . secure . put string for user ( context . get content resolver ( ) , settings . secure . UNK default_ n , package name , user ) ;
 return true ;
 }
 return false ;
 }
comment:
START sets the specified package name as the default dialer application for the specified user . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
static byte [ ] concat length UNK ( list < protocol > protocols ) {
 buffer result = new buffer ( ) ;
 for ( int i = DecimalInteger , size = protocols . size ( ) ;
 i < size ;
 i ++ ) {
 protocol protocol = protocols . get ( i ) ;
 if ( protocol == protocol . UNK ) continue ;
 result . write byte ( protocol . to string ( ) . length ( ) ) ;
 result . write utf8 ( protocol . to string ( ) ) ;
 }
 return result . read byte array ( ) ;
 }
comment:
START returns the concatenation of NUMBER , length prefixed protocol names . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set UNK color for user ( @ color int int color , @ user id int int user id ) {
 try {
 color |= 0x UNK ;
 service . set UNK color for user ( color , user id ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START sets the color used for UNK . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
protected map < string , object > aggregate details ( map < string , health > UNK ) {
 return new linked hash map < string , object > ( UNK ) ;
 }
comment:
START return the map of ` aggregate ' details that should be used from the specified UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private synchronized boolean maybe add to exclusives ( entry < k , v > entry ) {
 if ( ! entry . is UNK && entry . client count == DecimalInteger ) {
 mexclusive entries . put ( entry . key , entry ) ;
 return true ;
 }
 return false ;
 }
comment:
START adds the entry to the exclusively owned queue if it is UNK for eviction . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .
sets the UNK of the given UNK .

code:
public static string extract UNK fragment ( UNK node root , long start us , long end us ) {
 string builder fragment = new string builder ( ) ;
 extract UNK fragment ( root , start us , end us , fragment ) ;
 return fragment . to string ( ) ;
 }
comment:
START returns a UNK fragment string for the given time period . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public synchronized int get reference count ( string file name ) {
 class type = asset types . get ( file name ) ;
 if ( type == null ) throw new gdx runtime exception ( String + file name ) ;
 return assets . get ( type ) . get ( file name ) . get ref count ( ) ;
 }
comment:
START returns the reference count of an asset . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public boolean set num columns ( int column num ) {
 acquire reference ( ) ;
 try {
 return native set num columns ( mwindow ptr , column num ) ;
 }
 finally {
 release reference ( ) ;
 }
 }
comment:
START sets the number of columns in this window . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public int get buffer size in frames ( ) {
 return UNK ( ) ;
 }
comment:
START returns the frame count of the native audio record buffer . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public void set min fling velocity ( int val ) {
 mmin fling velocity = val ;
 }
comment:
START sets the minimum UNK velocity for the panel @param val the new value END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
@ override public map < string , string > get execution info ( ) {
 return execution info ;
 }
comment:
START returns the UNK execution data for this action . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public long total load time ( ) {
 return total load time ;
 }
comment:
START returns the total number of nanoseconds the cache has spent loading new values . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public long size ( ) {
 return zip data . get num entries ( ) ;
 }
comment:
START returns the number of entries in the zip file . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ system api public string get UNK UNK server url ( ) {
 try {
 return service . get UNK UNK server url ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START gets the url that should be used for resolving whether a UNK UNK is present . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set position ( vector2 position ) {
 this . x = position . x ;
 this . y = position . y ;
 }
comment:
START sets the x and y-coordinates of circle center from vector @param position the position vector END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static final int my uid ( ) {
 return os . UNK ( ) ;
 }
comment:
START returns the identifier of this process 's uid . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public final mat22 UNK ( ) {
 final float a = ex . x , b = ey . x , c = ex . y , d = ey . y ;
 final mat22 b = new mat22 ( ) ;
 float det = a * d - b * c ;
 if ( det != DecimalInteger ) {
 det = DecimalFloatingPoint / det ;
 }
 b . ex . x = det * d ;
 b . ey . x = - det * b ;
 b . ex . y = - det * c ;
 b . ey . y = det * a ;
 return b ;
 }
comment:
START returns the inverted UNK does not UNK the matrix locally ! END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ override public boolean get verbose failures ( ) {
 return verbose failures ;
 }
comment:
START returns true iff the -- UNK option was enabled . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public long get selected item id ( ) {
 return list . get selected item id ( ) ;
 }
comment:
START get the cursor row id of the currently selected list item . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static < t > set < t > duplicated elements of ( iterable < t > input ) {
 set < t > duplicates = new hash set < > ( ) ;
 set < t > element set = new hash set < > ( ) ;
 for ( t el : input ) {
 if ( ! element set . add ( el ) ) {
 duplicates . add ( el ) ;
 }
 }
 return duplicates ;
 }
comment:
START returns the set of all elements in the given collection that appear more than once . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK UNK

code:
public path fragment get parent relative path ( ) {
 return path fragment . empty_ t ;
 }
comment:
START returns the path of this artifact relative to this containing artifact . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public string to string ( ) {
 return uuid . to string ( ) ;
 }
comment:
START returns a string representation of the parcel uuid for example NUMBER will be the return value . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set UNK in deg ( double value ) {
 set flag ( has_ h ) ;
 mazimuth in deg = value ;
 }
comment:
START sets the UNK in degrees . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public float get rotation x ( ) {
 return nget rotation x ( mnative render node ) ;
 }
comment:
START returns the rotation value for this display list around the x axis , in degrees . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set autowire candidates ( string autowire candidates ) {
 this . autowire candidates = autowire candidates ;
 }
comment:
START set the default UNK pattern for the document that 's currently parsed . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public int new invoke dynamic ( final string name , final string desc , final handle bsm , final object ... bsm args ) {
 return new invoke dynamic item ( name , desc , bsm , bsm args ) . index ;
 }
comment:
START adds an invokedynamic reference to the constant pool of the class being build . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set progress ( int progress ) {
 set progress ( progress , DecimalInteger , null ) ;
 }
comment:
START set the progress of the currently active segment . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void add measurement ( string label , float value ) {
 if ( mperf writer != null ) mperf writer . write measurement ( label , value ) ;
 }
comment:
START add a float type measurement to the collector . END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
add the UNK to the given UNK .
add the UNK to the UNK to the UNK .

code:
private void set up header ( ) {
 mday names short = new string [ mdays per week ] ;
 mday names long = new string [ mdays per week ] ;
 for ( int i = mfirst day of week , count = mfirst day of week + mdays per week ;
 i < count ;
 i ++ ) {
 int calendar day = ( i > calendar . y ) ? i - calendar . y : i ;
 mday names short [ i - mfirst day of week ] = date utils . get day of week string ( calendar day , date utils . length_ t ) ;
 mday names long [ i - mfirst day of week ] = date utils . get day of week string ( calendar day , date utils . length_ g ) ;
 }
 text view label = ( text view ) mday names header . get child at ( DecimalInteger ) ;
 if ( mshow week number ) {
 label . set visibility ( view . e ) ;
 }
 else {
 label . set visibility ( view . e ) ;
 }
 for ( int i = DecimalInteger , count = mday names header . get child count ( ) ;
 i < count ;
 i ++ ) {
 label = ( text view ) mday names header . get child at ( i ) ;
 if ( mweek day text appearance res id > - DecimalInteger ) {
 label . set text appearance ( mweek day text appearance res id ) ;
 }
 if ( i < mdays per week + DecimalInteger ) {
 label . set text ( mday names short [ i - DecimalInteger ] ) ;
 label . set content description ( mday names long [ i - DecimalInteger ] ) ;
 label . set visibility ( view . e ) ;
 }
 else {
 label . set visibility ( view . e ) ;
 }
 }
 mday names header . invalidate ( ) ;
 }
comment:
START sets up the strings to be used by the header . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public int get num UNK ( ) {
 assert num UNK != - DecimalInteger ;
 return num UNK ;
 }
comment:
START get the number of tombstones that were UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set id ( int index , int id ) {
 mlayer state . children [ index ] . id = id ;
 }
comment:
START sets the id of a layer . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void set placeholder ( string text ) {
 placeholder = ( text != null ? text : String ) ;
 get element ( ) . set property string ( String , placeholder ) ;
 }
comment:
START sets the placeholder text displayed in the text box . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ deprecated public static long get content length ( http message message ) {
 return http util . get content length ( message ) ;
 }
comment:
START returns the length of the content . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static string get message ( constraint violation < ? > v , UNK UNK ) {
 final pair < path , ? extends constraint descriptor < ? > > of = pair . of ( v . get property path ( ) , v . get constraint descriptor ( ) ) ;
 final string cached message = UNK e . get if present ( of ) ;
 if ( cached message == null ) {
 final string message = calculate message ( v , UNK ) ;
 UNK e . put ( of , message ) ;
 return message ;
 }
 return cached message ;
 }
comment:
START gets the human friendly location of where the UNK was raised . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the given .

code:
public static < e > immutable list < e > copy of ( iterator < ? extends e > elements ) {
 if ( ! elements . has next ( ) ) {
 return of ( ) ;
 }
 e first = elements . next ( ) ;
 if ( ! elements . has next ( ) ) {
 return of ( first ) ;
 }
 else {
 return new immutable list . builder < e > ( ) . add ( first ) . add all ( elements ) . build ( ) ;
 }
 }
comment:
START returns an immutable list containing the given elements , in order . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int set master election group id ( long id ) {
 if ( check dead server ( ) ) return error_ dead_ t ;
 return utils . transact set long ( method_ set_ master_ election_ group_ d , id ) ;
 }
comment:
START sets the current group id used by the common time service in the master election protocol . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean op ( path path , op op ) {
 return op ( this , path , op ) ;
 }
comment:
START set this path to the result of applying the op to this path and the specified path . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public void set selection ( int position ) {
 drop down list view list = mdrop down list ;
 if ( is showing ( ) && list != null ) {
 list . set list selection hidden ( false ) ;
 list . set selection ( position ) ;
 if ( list . get choice mode ( ) != list view . choice_ mode_ e ) {
 list . set item checked ( position , true ) ;
 }
 }
 }
comment:
START set the selected position of the list . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static multidex mode get multidex mode ( rule context rule context ) {
 if ( rule context . get rule ( ) . is attr defined ( String , type . g ) ) {
 return preconditions . check not null ( multidex mode . from value ( rule context . attributes ( ) . get ( String , type . g ) ) ) ;
 }
 else {
 return multidex mode . f ;
 }
 }
comment:
START returns the UNK mode to apply to this target . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set bean names ( string ... bean names ) {
 assert . not empty ( bean names , String ) ;
 this . bean names = new array list < > ( bean names . length ) ;
 for ( string mapped name : bean names ) {
 this . bean names . add ( string utils . trim whitespace ( mapped name ) ) ;
 }
 }
comment:
START set the names of the beans that should automatically get wrapped with proxies . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
@ skylark callable ( name = String , doc = String ) public static string platform developer framework dir ( apple configuration configuration ) {
 string platform dir = platform dir ( configuration . get single arch platform ( ) . get name in plist ( ) ) ;
 return platform dir + String ;
 }
comment:
START returns the platform frameworks directory inside of xcode for a given configuration . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
private void set uuid ( long msb , long UNK ) {
 id = ( int ) msb ;
 }
comment:
START sets the id associated with the sensor . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
private window list get token windows on display ( window token token , display content display content ) {
 final window list window list = new window list ( ) ;
 final int count = token . windows . size ( ) ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) {
 final window state win = token . windows . get ( i ) ;
 if ( win . get display content ( ) == display content ) {
 window list . add ( win ) ;
 }
 }
 return window list ;
 }
comment:
START return the list of windows from the passed token on the given display . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
@ suppress warnings ( String ) public final < t extends socket address > t proxy address ( ) {
 return ( t ) proxy address ;
 }
comment:
START returns the address of the proxy server . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set position ( float x , float y ) {
 translate ( x - this . x , y - this . y ) ;
 }
comment:
START sets the position where the sprite will be drawn . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ override public build info collection create ( build info context context , build configuration config , artifact build info , artifact build UNK ) {
 return new build info collection ( immutable list . < action > of ( ) , immutable list . of ( build info ) , immutable list . of ( build info ) ) ;
 }
comment:
START returns no actions , exactly the one build info artifact , and no build UNK artifacts . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public short [ ] as short array ( ) {
 if ( type != value type . array ) throw new illegal state exception ( String + type ) ;
 short [ ] array = new short [ size ] ;
 int i = DecimalInteger ;
 for ( json value value = child ;
 value != null ;
 value = value . next , i ++ ) {
 short v ;
 switch ( value . type ) {
 case string value : v = short . parse short ( value . string value ) ;
 break ;
 case double value : v = ( short ) value . double value ;
 break ;
 case long value : v = ( short ) value . long value ;
 break ;
 case boolean value : v = value . long value != DecimalInteger ? ( short ) DecimalInteger : DecimalInteger ;
 break ;
 default : throw new illegal state exception ( String + value . type ) ;
 }
 array [ i ] = v ;
 }
 return array ;
 }
comment:
START returns the children of this value as a newly allocated short array . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set max request size ( long max request size ) {
 this . max request size = max request size ;
 }
comment:
START sets the maximum size allowed in bytes for UNK requests . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public final byte [ ] UNK ( ) {
 return native UNK ( mnative ptr ) ;
 }
comment:
START returns the raw bytes of the parcel . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public list < polygon builder > polygons ( ) {
 return polygons ;
 }
comment:
START get the list of UNK END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public final void find max separation ( edge results results , final polygon shape UNK , final transform UNK , final polygon shape UNK , final transform UNK ) {
 int count1 = UNK . m_count ;
 int UNK = UNK . m_count ;
 vec2 [ ] UNK = UNK . UNK ;
 vec2 [ ] UNK = UNK . m_vertices ;
 vec2 [ ] UNK = UNK . m_vertices ;
 transform . mul trans to out unsafe ( UNK , UNK , xf ) ;
 final rot UNK = xf . q ;
 int best index = DecimalInteger ;
 float max separation = - float . max_ e ;
 for ( int i = DecimalInteger ;
 i < count1 ;
 i ++ ) {
 rot . mul to out unsafe ( UNK , UNK [ i ] , n ) ;
 transform . mul to out unsafe ( xf , UNK [ i ] , v1 ) ;
 float si = float . max_ e ;
 for ( int j = DecimalInteger ;
 j < UNK ;
 ++ j ) {
 vec2 UNK = UNK [ j ] ;
 float UNK = n . x * ( UNK . x - v1 . x ) + n . y * ( UNK . y - v1 . y ) ;
 if ( UNK < si ) {
 si = UNK ;
 }
 }
 if ( si > max separation ) {
 max separation = si ;
 best index = i ;
 }
 }
 results . edge index = best index ;
 results . separation = max separation ;
 }
comment:
START find the max UNK between UNK and UNK using edge UNK from UNK . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
boolean has portable proto filters ( ) {
 return rule context . attributes ( ) . is attribute value explicitly specified ( objc proto library rule . UNK proto_ UNK r ) ;
 }
comment:
START returns whether to use the protobuf library instead of the UNK library . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public color add ( color color ) {
 this . r += color . r ;
 this . g += color . g ;
 this . b += color . b ;
 this . a += color . a ;
 return clamp ( ) ;
 }
comment:
START adds the given color to this color . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK to the UNK .

code:
public data source < boolean > is in disk cache ( final uri uri ) {
 return is in disk cache ( image request . from uri ( uri ) ) ;
 }
comment:
START returns whether the image is stored in the disk cache . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .

code:
@ nullable public resource folder type get resource folder type ( ) {
 return UNK type ;
 }
comment:
START returns the resource folder type of this xml file , if any . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
boolean has docked tasks for user ( int user id ) {
 final task stack stack = mstack id to stack . get ( docked_ stack_ d ) ;
 if ( stack == null ) {
 return false ;
 }
 final array list < task > tasks = stack . get tasks ( ) ;
 boolean has user task = false ;
 for ( int i = tasks . size ( ) - DecimalInteger ;
 i >= DecimalInteger && ! has user task ;
 i -- ) {
 final task task = tasks . get ( i ) ;
 has user task = ( task . muser id == user id ) ;
 }
 return has user task ;
 }
comment:
START returns whether there is a docked task for the current user . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK to .

code:
public string get param name ( ) {
 return this . param name ;
 }
comment:
START return the name of the parameter that contains a theme specification in a theme change request . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public boolean is freeform task ( ) {
 system services proxy ssp = recents . get system services ( ) ;
 return ssp . has freeform workspace support ( ) && ssp . is freeform stack ( key . stack id ) ;
 }
comment:
START returns whether this task is on the freeform task stack . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether the given UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether the given UNK is UNK , in the UNK .

code:
int get active port id ( ) {
 synchronized ( lock ) {
 return service . path to port id ( mactive routing path ) ;
 }
 }
comment:
START returns the id of the active hdmi port . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ string res public int get voice language mode id ( ) {
 return mvoice language mode id ;
 }
comment:
START gets the resource id of the voice search language model string . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public int get compound padding right ( ) {
 final drawables dr = drawables ;
 if ( dr == null || dr . showing [ drawables . t ] == null ) {
 return mpadding right ;
 }
 else {
 return mpadding right + dr . mdrawable padding + dr . mdrawable size right ;
 }
 }
comment:
START returns the right padding of the view , plus space for the right drawable if any . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set subject ( string subject ) throws messaging exception {
 assert . not null ( subject , String ) ;
 if ( get encoding ( ) != null ) {
 this . mime message . set subject ( subject , get encoding ( ) ) ;
 }
 else {
 this . mime message . set subject ( subject ) ;
 }
 }
comment:
START set the subject of the message , using the correct encoding . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
private void set user query ( string query ) {
 if ( query == null ) {
 query = String ;
 }
 muser query = query ;
 msearch auto complete . set text ( query ) ;
 msearch auto complete . set selection ( query . length ( ) ) ;
 }
comment:
START sets the text in the query box , updating the suggestions . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
protected frame get output frame ( string output port name ) {
 return moutput frames . get ( String + output port name ) ;
 }
comment:
START returns the frame UNK out by the filter under test . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ android . view . remotable view method ( async impl = String ) public void set image icon ( @ nullable icon icon ) {
 set image drawable ( icon == null ? null : icon . load drawable ( context ) ) ;
 }
comment:
START sets the content of this image view to the specified icon . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
set the UNK for the given UNK .

code:
public static < r , c , v > table < r , c , v > unmodifiable table ( table < ? extends r , ? extends c , ? extends v > table ) {
 return new unmodifiable table < r , c , v > ( table ) ;
 }
comment:
START returns an unmodifiable view of the specified table . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public abstract list < package info > get packages holding permissions ( string [ ] permissions , @ package info flags int flags ) ;
comment:
START return a list of all installed packages that are currently holding any of the given permissions . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public void set input type ( int input type ) {
 mquery text view . set input type ( input type ) ;
 }
comment:
START sets the input type on the query text field . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public final string [ ] get param conditions ( ) {
 return this . param conditions . get ( DecimalInteger ) ;
 }
comment:
START return the parameter conditions that have been UNK or the first group in case of multiple groups . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set sslsocket factory ( sslsocket factory ssl socket factory ) {
 this . http client . get connection manager ( ) . get scheme registry ( ) . register ( new scheme ( String , ssl socket factory , DecimalInteger ) ) ;
 }
comment:
START sets the UNK factory to user when making requests . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ visible for testing static string normalize ( string s ) {
 return s . to lower case ( ) . replace ( String , String ) . replace all ( String , String ) . replace all ( String , String ) . replace all ( String , String ) ;
 }
comment:
START returns a `` normalized '' version of the input string . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected char sequence get target content encoding ( char sequence content encoding ) throws http2 exception {
 return content encoding ;
 }
comment:
START returns the expected content encoding of the decoded content . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public string get header ( string name ) {
 header header = response . get first header ( name ) ;
 if ( header == null ) {
 return null ;
 }
 return header . get value ( ) ;
 }
comment:
START returns the value of the first header with a specified name of this message . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public string to string ( ) {
 return ( repository . is default ( ) || repository . is main ( ) ? String : repository + String ) + pkg name ;
 }
comment:
START returns the name of this package . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public int get list selection ( ) {
 return popup . get selected item position ( ) ;
 }
comment:
START get the position of the UNK view selection , if there is one . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static int count gsm septets ( char c ) {
 try {
 return count gsm septets ( c , false ) ;
 }
 catch ( encode exception ex ) {
 return DecimalInteger ;
 }
 }
comment:
START returns the count of NUMBER gsm alphabet characters needed to represent this character . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected abstract list < ? extends handler method argument resolver > init argument resolvers ( ) ;
comment:
START return the list of argument resolvers to use . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public string get class name ( ) {
 if ( realm == null ) {
 return native get class name ( native ptr ) ;
 }
 else {
 return table . get name ( ) . substring ( table . table_ x . length ( ) ) ;
 }
 }
comment:
START returns the name of the realm object class being represented by this schema . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ suppress warnings ( String ) public void set text appearance ( @ style res int res id ) {
 set text appearance ( context , res id ) ;
 }
comment:
START sets the text appearance from the specified style resource . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public static int count tests ( context c , string class name ) {
 try {
 class clazz = c . get class loader ( ) . load class ( class name ) ;
 method method = get children method ( clazz ) ;
 if ( method != null ) {
 string [ ] children = get children ( method ) ;
 int rv = DecimalInteger ;
 for ( string child : children ) {
 rv += count tests ( c , child ) ;
 }
 return rv ;
 }
 else if ( UNK class . is assignable from ( clazz ) ) {
 return DecimalInteger ;
 }
 else if ( UNK class . is assignable from ( clazz ) ) {
 return count UNK tests ( clazz ) ;
 }
 }
 catch ( class not found exception e ) {
 return DecimalInteger ;
 }
 return DecimalInteger ;
 }
comment:
START returns the number of tests that will be run if you try to do this . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ deprecated public abstract void set default zoom ( zoom density zoom ) ;
comment:
START sets the default zoom density of the page . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public void set text align ( paint . align align ) {
 this . mtext align = align ;
 }
comment:
START sets the text alignment of the description text . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
private static int get number of points ( int segment type ) {
 switch ( segment type ) {
 case path iterator . seg_ o : return DecimalInteger ;
 case path iterator . seg_ o : return DecimalInteger ;
 case path iterator . seg_ e : return DecimalInteger ;
 default : return DecimalInteger ;
 }
 }
comment:
START returns the number of points stored in a coordinates array for the given segment type . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private string make question mark tuple ( int count ) {
 if ( count < DecimalInteger ) {
 return String ;
 }
 string builder string builder = new string builder ( ) ;
 string builder . append ( String ) ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) {
 string builder . append ( String ) ;
 }
 string builder . append ( String ) ;
 return string builder . to string ( ) ;
 }
comment:
START returns a tuple of question UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean remove service ( bluetooth gatt service service ) {
 if ( g ) log . d ( g , String + service . get uuid ( ) ) ;
 if ( service == null || mserver if == DecimalInteger ) return false ;
 bluetooth gatt service int service = get service ( service . get uuid ( ) , service . get instance id ( ) , service . get type ( ) ) ;
 if ( int service == null ) return false ;
 try {
 service . remove service ( mserver if , service . get instance id ( ) ) ;
 services . remove ( int service ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 return false ;
 }
 return true ;
 }
comment:
START removes a service from the list of services to be provided . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
private int get stack id ( ) {
 int workspace id = invalid_ stack_ d ;
 final window . window controller callback callback = window . get window controller callback ( ) ;
 if ( callback != null ) {
 try {
 workspace id = callback . get window stack id ( ) ;
 }
 catch ( remote exception ex ) {
 log . e ( mlog tag , String ) ;
 }
 }
 if ( workspace id == invalid_ stack_ d ) {
 return fullscreen_ workspace_ stack_ d ;
 }
 return workspace id ;
 }
comment:
START returns the id of the stack which contains this window . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean should strip binary ( ) {
 return this . enable binary UNK && get compilation mode ( ) == compilation mode . t ;
 }
comment:
START returns whether to perform symbol and UNK UNK on linked binaries . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public static int var int size ( int i ) {
 int result = DecimalInteger ;
 do {
 result ++ ;
 i >>>= DecimalInteger ;
 }
 while ( i != DecimalInteger ) ;
 return result ;
 }
comment:
START returns the encoding size in bytes of its input value . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public void set fraction ( float fraction ) {
 fraction = fraction ;
 }
comment:
START sets the time for this keyframe , as a fraction of the overall animation duration . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the request .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public short get number of bands ( ) throws illegal state exception , illegal argument exception , unsupported operation exception {
 if ( mnum bands != DecimalInteger ) {
 return mnum bands ;
 }
 int [ ] param = new int [ DecimalInteger ] ;
 param [ DecimalInteger ] = param_ num_ s ;
 short [ ] result = new short [ DecimalInteger ] ;
 check status ( get parameter ( param , result ) ) ;
 mnum bands = result [ DecimalInteger ] ;
 return mnum bands ;
 }
comment:
START gets the number of frequency UNK supported by the equalizer engine . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the given UNK , in the UNK .
returns the list of UNK UNK

code:
public string path ( ) {
 if ( path == null ) {
 if ( ! has path ) {
 path = String ;
 }
 else {
 int path end pos = uri . index of ( String ) ;
 path = decode component ( path end pos < DecimalInteger ? uri : uri . substring ( DecimalInteger , path end pos ) , this . charset ) ;
 }
 }
 return path ;
 }
comment:
START returns the decoded path string of the uri . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public matrix4 set to rotation ( float axis x , float axis y , float axis z , float degrees ) {
 if ( degrees == DecimalInteger ) {
 idt ( ) ;
 return this ;
 }
 return set ( quat . set from axis ( axis x , axis y , axis z , degrees ) ) ;
 }
comment:
START sets the matrix to a rotation matrix around the given axis . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ override public float get y ( ) {
 return super . get y ( ) ;
 }
comment:
START returns the value of this bar entry . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public int get device smallest width ( ) {
 if ( display == null ) return DecimalInteger ;
 point smallest size range = new point ( ) ;
 point largest size range = new point ( ) ;
 display . get current size range ( smallest size range , largest size range ) ;
 return smallest size range . x ;
 }
comment:
START returns the smallest UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ non null public list < print service info > get print services ( int selection flags ) {
 preconditions . check flags argument ( selection flags , all_ s ) ;
 try {
 list < print service info > services = service . get print services ( selection flags , muser id ) ;
 if ( services != null ) {
 return services ;
 }
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 return collections . empty list ( ) ;
 }
comment:
START gets the list of print services , but does not register for updates . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ deprecated protected int get native frame count ( ) {
 return UNK ( ) ;
 }
comment:
START returns the frame count of the native audio track buffer . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public string get name ( ) {
 return class utils . get qualified name ( get type ( ) ) ;
 }
comment:
START returns the name of this type the fully qualified class name . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static http status class value of ( int code ) {
 if ( l . contains ( code ) ) {
 return l ;
 }
 if ( s . contains ( code ) ) {
 return s ;
 }
 if ( n . contains ( code ) ) {
 return n ;
 }
 if ( client_ r . contains ( code ) ) {
 return client_ r ;
 }
 if ( server_ r . contains ( code ) ) {
 return server_ r ;
 }
 return n ;
 }
comment:
START returns the class of the specified http status code . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ override public void set border ( int color , float width ) {
 mborder color = color ;
 mborder width = width ;
 update path ( ) ;
 invalidate self ( ) ;
 }
comment:
START sets the border @param color of the border @param width of the border END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
public float get center y ( ) {
 final iaccessibility service connection connection = accessibility interaction client . get instance ( ) . get connection ( service . mconnection id ) ;
 if ( connection != null ) {
 try {
 return connection . get magnification center y ( ) ;
 }
 catch ( remote exception re ) {
 log . w ( log_ g , String , re ) ;
 re . rethrow from system server ( ) ;
 }
 }
 return DecimalFloatingPoint ;
 }
comment:
START returns the unscaled screen-relative y coordinate of the focal center of the magnified region . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public dictionary get dictionary ( string locale ) {
 dictionary dictionary = known UNK . get ( locale ) ;
 if ( dictionary == null ) {
 dictionary = UNK . compute if absent ( locale , loading function ) ;
 }
 return dictionary ;
 }
comment:
START returns the UNK dictionary for the given locale . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public array < joint edge > get joint list ( ) {
 org . jbox2d . dynamics . joints . joint edge joint edge = body . get joint list ( ) ;
 joints . clear ( ) ;
 while ( joint edge != null ) {
 joint edge edge = new joint edge ( world . bodies . get ( joint edge . other ) , world . joints . get ( joint edge . joint ) ) ;
 joints . add ( edge ) ;
 joint edge = joint edge . next ;
 }
 return joints ;
 }
comment:
START get the list of all joints attached to this body . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK to the given UNK .

code:
public static float cos ( float angle ) {
 return ( float ) math . cos ( angle ) ;
 }
comment:
START returns the closest float approximation of the cosine of the argument . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
@ test api public void set pseudorange rate meters per second ( double value ) {
 mpseudorange rate meters per second = value ;
 }
comment:
START sets the pseudorange rate at the timestamp in m/s . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public final < t > array list < t > create typed array list ( parcelable . creator < t > c ) {
 int n = read int ( ) ;
 if ( n < DecimalInteger ) {
 return null ;
 }
 array list < t > l = new array list < t > ( n ) ;
 while ( n > DecimalInteger ) {
 if ( read int ( ) != DecimalInteger ) {
 l . add ( c . create from parcel ( this ) ) ;
 }
 else {
 l . add ( null ) ;
 }
 n -- ;
 }
 return l ;
 }
comment:
START returns null if the previously written list object was null . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given .

code:
public int [ ] get positions ( ) {
 int [ ] result = new int [ positions . size ( ) ] ;
 for ( int i = DecimalInteger ;
 i < positions . size ( ) ;
 i ++ ) result [ i ] = positions . get ( i ) ;
 return result ;
 }
comment:
START returns the relative positions of terms in this phrase . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean is UNK ( ) {
 return ( flags & flag_ e ) != DecimalInteger ;
 }
comment:
START returns whether this item is UNK . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public string get mime type for UNK file ( long id ) {
 query query = new query ( ) . set filter by id ( id ) ;
 cursor cursor = null ;
 try {
 cursor = query ( query ) ;
 if ( cursor == null ) {
 return null ;
 }
 while ( cursor . move to first ( ) ) {
 return cursor . get string ( cursor . get column index or throw ( column_ media_ e ) ) ;
 }
 }
 finally {
 if ( cursor != null ) {
 cursor . close ( ) ;
 }
 }
 return null ;
 }
comment:
START returns the media type of the given downloaded file id , if the file was downloaded successfully . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public string get init method ( ) {
 return this . init method ;
 }
comment:
START return the default UNK setting for the document that 's currently parsed . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public set < string > UNK ( ) {
 set < string > ret = new linked hash set < string > ( ) ;
 collections . add all ( ret , UNK ) ;
 return ret ;
 }
comment:
START returns the UNK of supported sub protocols END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of the UNK .
returns the list of UNK UNK to the given UNK .

code:
public long ticket key resume ( ) {
 return context . session ticket key resume ( context . ctx ) ;
 }
comment:
START returns the number of times a client presented a ticket derived from the primary key . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private immutable list < artifact > get gcda artifacts for object file name ( rule context rule context , analysis environment env , path fragment object file name , label lipo label ) {
 string gcda ext = iterables . get only element ( cpp file types . UNK a . get extensions ( ) ) ;
 path fragment base name = file system utils . replace extension ( object file name , gcda ext ) ;
 path fragment gcda file = get non lipo obj dir ( rule context , lipo label ) . get relative ( base name ) ;
 if ( ! gcda files . contains ( gcda file ) ) {
 string UNK ext = iterables . get only element ( cpp file types . UNK object_ e . get extensions ( ) ) ;
 base name = file system utils . replace extension ( object file name , gcda ext , UNK ext ) ;
 if ( base name == null ) {
 return immutable list . of ( ) ;
 }
 gcda file = get non lipo obj dir ( rule context , lipo label ) . get relative ( base name ) ;
 if ( ! gcda files . contains ( gcda file ) ) {
 return immutable list . of ( ) ;
 }
 }
 final artifact artifact = env . get derived artifact ( fdo path . get relative ( gcda file ) , fdo root ) ;
 env . register action ( new fdo stub action ( rule context . get action owner ( ) , artifact ) ) ;
 return immutable list . of ( artifact ) ;
 }
comment:
START returns a list of . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public float get center y ( ) {
 synchronized ( lock ) {
 return ( mmagnification bounds . height ( ) / DecimalFloatingPoint + mmagnification bounds . top - get offset y ( ) ) / get scale ( ) ;
 }
 }
comment:
START returns the screen-relative y coordinate of the center of the magnification viewport . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public iterable < artifact > get header token files ( ) {
 return header token files ;
 }
comment:
START returns an unmodifiable view of the . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public container < t > height ( float height ) {
 height ( new fixed ( height ) ) ;
 return this ;
 }
comment:
START sets the min height , pref height , and max height to the specified value . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get source technologies ( ) {
 return msource technologies ;
 }
comment:
START returns the source technologies that the status is associated to . END
BLUE1:0.571428571429
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
@ override public void add error ( throwable error ) {
 add error super ( new throwable ( mcamera msg + error . get message ( ) , error ) ) ;
 }
comment:
START adds a throwable to the table . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
sets the UNK for the given UNK .
adds the UNK to the UNK to the UNK .

code:
public void add all ( t ... items ) {
 synchronized ( lock ) {
 if ( moriginal values != null ) {
 collections . add all ( moriginal values , items ) ;
 }
 else {
 collections . add all ( objects , items ) ;
 }
 }
 if ( UNK on change ) notify data set changed ( ) ;
 }
comment:
START adds the specified items at the end of the array . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public client client ( ) {
 return e . client ( ) ;
 }
comment:
START returns a client to the UNK cluster . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public abstract list < package info > get installed packages ( @ package info flags int flags ) ;
comment:
START return a list of all packages that are installed on the device . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public operator default operator ( ) {
 return this . default operator ;
 }
comment:
START returns the default operator for the query . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of UNK UNK

code:
default request predicate UNK ( ) {
 return ( t ) -> ! test ( t ) ;
 }
comment:
START return a predicate that represents the logical UNK of this predicate . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public path fragment get runfiles directory exec path ( ) {
 path fragment executable path = owning executable . get exec path ( ) ;
 return executable path . get parent directory ( ) . get child ( executable path . get base name ( ) + UNK dir_ t ) ;
 }
comment:
START returns the exec path of the directory where the runfiles contained in this runfiles support are generated . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public epicenter callback get epicenter callback ( ) {
 return UNK callback ;
 }
comment:
START returns the callback used to find the epicenter of the transition . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean set ( @ nullable closeable reference < t > value ref ) {
 closeable reference < t > UNK ref = closeable reference . clone or null ( value ref ) ;
 return super . set result ( UNK ref , true ) ;
 }
comment:
START sets the value of this data source . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set UNK ( string name , int value ) {
 l20 gl = gdx . gl20 ;
 check managed ( ) ;
 int location = fetch uniform location ( name ) ;
 gl . gl UNK ( location , value ) ;
 }
comment:
START sets the uniform with the given name . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public int count tokens ( ) {
 int count = DecimalInteger ;
 boolean in token = false ;
 for ( int i = position , length = string . length ( ) ;
 i < length ;
 i ++ ) {
 if ( delimiters . index of ( string . char at ( i ) , DecimalInteger ) >= DecimalInteger ) {
 if ( return delimiters ) count ++ ;
 if ( in token ) {
 count ++ ;
 in token = false ;
 }
 }
 else {
 in token = true ;
 }
 }
 if ( in token ) count ++ ;
 return count ;
 }
comment:
START returns the number of unprocessed tokens remaining in the string . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public static int get length ( object array ) {
 return reflection cache . get type ( array . get class ( ) ) . get array length ( array ) ;
 }
comment:
START returns the length of the supplied array . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
@ system api public static set < string > get hidden tv input ids ( context context , int user id ) {
 string hidden ids string = settings . secure . get string for user ( context . get content resolver ( ) , settings . secure . tv_ input_ UNK s , user id ) ;
 set < string > set = new hash set < > ( ) ;
 if ( text utils . is empty ( hidden ids string ) ) {
 return set ;
 }
 string [ ] ids = hidden ids string . split ( tv_ input_ r ) ;
 for ( string id : ids ) {
 set . add ( uri . decode ( id ) ) ;
 }
 return set ;
 }
comment:
START returns a set of tv input ids which are marked as hidden by user in the settings . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK to the UNK .

code:
@ skylark callable ( name = String , doc = String ) public static string sdk dir ( ) {
 return UNK r ;
 }
comment:
START returns the platform directory inside of xcode for a given configuration . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .
returns the number of all UNK in the specified .

code:
public boolean is in picture in picture mode ( ) {
 try {
 return activity manager native . get default ( ) . is in picture in picture mode ( token ) ;
 }
 catch ( remote exception e ) {
 }
 return false ;
 }
comment:
START returns true if the activity is currently in UNK mode . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK UNK .
set whether to UNK UNK UNK .

code:
protected char sequence get target content encoding ( @ suppress warnings ( String ) char sequence content encoding ) throws http2 exception {
 return y ;
 }
comment:
START returns the expected content encoding of the decoded content . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
private static void get parents ( view view , array list < view > parents ) {
 view parent parent = view . get parent ( ) ;
 if ( parent != null && parent instanceof view group ) {
 get parents ( ( view ) parent , parents ) ;
 }
 parents . add ( view ) ;
 }
comment:
START adds all the parents , UNK , etc. of view to parents . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given file .

code:
public void set order ( int order ) {
 this . order = order ;
 }
comment:
START set the order of the listener . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public int get block count in sector ( int sector index ) {
 validate sector ( sector index ) ;
 if ( sector index < DecimalInteger ) {
 return DecimalInteger ;
 }
 else {
 return DecimalInteger ;
 }
 }
comment:
START return the number of blocks in the given UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get method UNK bean name ( ) {
 return this . method UNK bean name ;
 }
comment:
START return the name of the bean implementing method UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void add footer view ( view v ) {
 add footer view ( v , null , true ) ;
 }
comment:
START add a fixed view to appear at the bottom of the list . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public texture region [ ] get key frames ( ) {
 return key frames ;
 }
comment:
START returns the key frames -lsb- -rsb- array where all the texture regions of the animation are stored . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void set color matrix ( UNK m ) {
 matrix . load ( m ) ;
 set matrix ( ) ;
 }
comment:
START set the color matrix which will be applied to each cell of the image . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .
sets the UNK of the UNK

code:
public static int get length ( object array ) {
 return java . lang . reflect . array . get length ( array ) ;
 }
comment:
START returns the length of the supplied array . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
org . UNK . UNK . type [ ] get captures ( ) ;
comment:
START returns the types of captured parameters . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public string get name ( ) {
 return this . name ;
 }
comment:
START return the name of the constructor argument . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public int size ( ) {
 return map . size ( ) ;
 }
comment:
START returns the number of key-value mappings in this map . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public params add vertical UNK buttons ( final string prefix , final int num buttons , float height ratio ) {
 mview factories . add ( new view factory base ( height ratio ) {
 public view create ( context context ) {
 final linear layout ll = new linear layout ( context ) ;
 ll . set orientation ( linear layout . l ) ;
 final linear layout . layout params lp = new linear layout . layout params ( view group . layout params . match_ t , DecimalInteger , DecimalFloatingPoint ) ;
 for ( int i = DecimalInteger ;
 i < num buttons ;
 i ++ ) {
 final button button = new button ( context ) ;
 button . set text ( prefix + i ) ;
 ll . add view ( button , lp ) ;
 }
 return ll ;
 }
 }
 ) ;
 return this ;
 }
comment:
START add a UNK of buttons as a single child of the scroll view . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public static list < wifi p2p service response > new instance ( string supplicant event ) {
 list < wifi p2p service response > resp list = new array list < wifi p2p service response > ( ) ;
 string [ ] args = supplicant event . split ( String ) ;
 if ( args . length != DecimalInteger ) {
 return null ;
 }
 wifi p2p device dev = new wifi p2p device ( ) ;
 string src addr = args [ DecimalInteger ] ;
 dev . device address = src addr ;
 byte [ ] bin = hex UNK bin ( args [ DecimalInteger ] ) ;
 if ( bin == null ) {
 return null ;
 }
 data input stream dis = new data input stream ( new byte array input stream ( bin ) ) ;
 try {
 while ( dis . available ( ) > DecimalInteger ) {
 int length = ( dis . read unsigned byte ( ) + ( dis . read unsigned byte ( ) << DecimalInteger ) ) - DecimalInteger ;
 int type = dis . read unsigned byte ( ) ;
 int trans id = dis . read unsigned byte ( ) ;
 int status = dis . read unsigned byte ( ) ;
 if ( length < DecimalInteger ) {
 return null ;
 }
 if ( length == DecimalInteger ) {
 if ( status == status . s ) {
 resp list . add ( new wifi p2p service response ( type , status , trans id , dev , null ) ) ;
 }
 continue ;
 }
 if ( length > max_ UNK e ) {
 dis . skip ( length ) ;
 continue ;
 }
 byte [ ] data = new byte [ length ] ;
 dis . read fully ( data ) ;
 wifi p2p service response resp ;
 if ( type == wifi p2p service info . service_ type_ r ) {
 resp = wifi p2p dns sd service response . new instance ( status , trans id , dev , data ) ;
 }
 else if ( type == wifi p2p service info . service_ type_ p ) {
 resp = wifi p2p upnp service response . new instance ( status , trans id , dev , data ) ;
 }
 else {
 resp = new wifi p2p service response ( type , status , trans id , dev , data ) ;
 }
 if ( resp != null && resp . get status ( ) == status . s ) {
 resp list . add ( resp ) ;
 }
 }
 return resp list ;
 }
 catch ( exception e ) {
 e . print stack trace ( ) ;
 }
 if ( resp list . size ( ) > DecimalInteger ) {
 return resp list ;
 }
 return null ;
 }
comment:
START create the list of wifi p2p service response instance from supplicant event . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public quaternion set ( vector3 axis , float angle ) {
 return set from axis ( axis . x , axis . y , axis . z , angle ) ;
 }
comment:
START sets the quaternion components from the given axis and angle around that axis . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private void release ( real connection connection ) {
 for ( int i = DecimalInteger , size = connection . allocations . size ( ) ;
 i < size ;
 i ++ ) {
 reference < stream allocation > reference = connection . allocations . get ( i ) ;
 if ( reference . get ( ) == this ) {
 connection . allocations . remove ( i ) ;
 return ;
 }
 }
 throw new illegal state exception ( ) ;
 }
comment:
START remove this allocation from the connection 's list of allocations . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
private static long UNK capabilities as bits ( int ... capabilities ) {
 long result = DecimalInteger ;
 for ( int capability : capabilities ) {
 if ( ( capability < DecimalInteger ) || ( capability > os constants . cap_ last_ p ) ) {
 throw new illegal argument exception ( string . value of ( capability ) ) ;
 }
 result |= ( DecimalInteger << capability ) ;
 }
 return result ;
 }
comment:
START gets the bit array representation of the provided list of posix capabilities . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public list < document info > get documents from clip data ( clip data clip data ) {
 assert ( clip data != null ) ;
 final list < document info > src docs = new array list < > ( ) ;
 int count = clip data . get item count ( ) ;
 if ( count == DecimalInteger ) {
 return src docs ;
 }
 content resolver resolver = context . get content resolver ( ) ;
 for ( int i = DecimalInteger ;
 i < count ;
 ++ i ) {
 clip data . item item = clip data . get item at ( i ) ;
 uri item uri = item . get uri ( ) ;
 if ( item uri != null && documents contract . is document uri ( context , item uri ) ) {
 content provider client client = null ;
 cursor cursor = null ;
 try {
 client = documents application . acquire unstable provider or throw ( resolver , item uri . get authority ( ) ) ;
 cursor = client . query ( item uri , null , null , null , null ) ;
 cursor . move to position ( DecimalInteger ) ;
 src docs . add ( document info . from cursor ( cursor , item uri . get authority ( ) ) ) ;
 }
 catch ( exception e ) {
 log . e ( g , e . get message ( ) ) ;
 }
 finally {
 io utils . close quietly ( cursor ) ;
 content provider client . release quietly ( client ) ;
 }
 }
 }
 return src docs ;
 }
comment:
START returns a list of documents as decoded in clip data . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK to the given UNK .

code:
public static vector2 polygon centroid ( float [ ] polygon , int offset , int count , vector2 centroid ) {
 if ( count < DecimalInteger ) throw new illegal argument exception ( String ) ;
 float x = DecimalInteger , y = DecimalInteger ;
 float signed area = DecimalInteger ;
 int i = offset ;
 for ( int n = offset + count - DecimalInteger ;
 i < n ;
 i += DecimalInteger ) {
 float x0 = polygon [ i ] ;
 float y0 = polygon [ i + DecimalInteger ] ;
 float x1 = polygon [ i + DecimalInteger ] ;
 float y1 = polygon [ i + DecimalInteger ] ;
 float a = x0 * y1 - x1 * y0 ;
 signed area += a ;
 x += ( x0 + x1 ) * a ;
 y += ( y0 + y1 ) * a ;
 }
 float x0 = polygon [ i ] ;
 float y0 = polygon [ i + DecimalInteger ] ;
 float x1 = polygon [ offset ] ;
 float y1 = polygon [ offset + DecimalInteger ] ;
 float a = x0 * y1 - x1 * y0 ;
 signed area += a ;
 x += ( x0 + x1 ) * a ;
 y += ( y0 + y1 ) * a ;
 if ( signed area == DecimalInteger ) {
 centroid . x = DecimalInteger ;
 centroid . y = DecimalInteger ;
 }
 else {
 signed area *= DecimalFloatingPoint ;
 centroid . x = x / ( DecimalInteger * signed area ) ;
 centroid . y = y / ( DecimalInteger * signed area ) ;
 }
 return centroid ;
 }
comment:
START returns the centroid for the specified UNK polygon . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set linear damping ( float linear damping ) {
 jni set linear damping ( addr , linear damping ) ;
 }
comment:
START set the linear damping of the body . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void update visual scroll ( ) {
 visual amount x = amount x ;
 visual amount y = amount y ;
 }
comment:
START sets the visual scroll amount equal to the scroll amount . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .
sets the UNK of the UNK

code:
public final int get list bottom ( ) {
 return mlist view . get height ( ) - mlist view . get list padding bottom ( ) ;
 }
comment:
START get the bottom of the list . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set label ( char sequence label ) {
 this . label = label ;
 }
comment:
START sets the current label for the tile . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
@ fluent async file set read buffer size ( int read buffer size ) ;
comment:
START sets the buffer size that will be used to read the data from the file . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public artifact get single source ( string file type name ) {
 list < artifact > srcs = prerequisite artifacts . get ( this , String , mode . t ) . list ( ) ;
 switch ( srcs . size ( ) ) {
 case DecimalInteger : return null ;
 case DecimalInteger : return iterables . get only element ( srcs ) ;
 default : attribute error ( String , String + file type name + String ) ;
 return srcs . get ( DecimalInteger ) ;
 }
 }
comment:
START returns the UNK file in the `` srcs '' attribute . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
static bound type for boolean ( boolean UNK ) {
 return UNK ? d : n ;
 }
comment:
START returns the bound type corresponding to a boolean value for UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ skylark callable ( name = String , struct field = true , doc = String + String + String ) public path fragment get UNK ( ) {
 return UNK ;
 }
comment:
START returns the UNK to be used . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public rectangle get bounding rectangle ( ) {
 float [ ] vertices = get transformed vertices ( ) ;
 float min x = vertices [ DecimalInteger ] ;
 float min y = vertices [ DecimalInteger ] ;
 float max x = vertices [ DecimalInteger ] ;
 float max y = vertices [ DecimalInteger ] ;
 final int num floats = vertices . length ;
 for ( int i = DecimalInteger ;
 i < num floats ;
 i += DecimalInteger ) {
 min x = min x > vertices [ i ] ? vertices [ i ] : min x ;
 min y = min y > vertices [ i + DecimalInteger ] ? vertices [ i + DecimalInteger ] : min y ;
 max x = max x < vertices [ i ] ? vertices [ i ] : max x ;
 max y = max y < vertices [ i + DecimalInteger ] ? vertices [ i + DecimalInteger ] : max y ;
 }
 if ( bounds == null ) bounds = new rectangle ( ) ;
 bounds . x = min x ;
 bounds . y = min y ;
 bounds . width = max x - min x ;
 bounds . height = max y - min y ;
 return bounds ;
 }
comment:
START returns an UNK bounding box of this polygon . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .
returns the list of UNK UNK

code:
public void set layer ( int layer ) {
 layer = layer ;
 }
comment:
START sets the layer which determines the UNK of the window . END
BLUE1:0.571428571429
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
< t > t get ( int size , class < t > array class ) ;
comment:
START returns a non-null array of the given type with a length > = to the given size . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK in the given UNK .
returns the list of UNK UNK

code:
public nested set < string > linkopts ( ) {
 return this . linkopts ;
 }
comment:
START returns the UNK options . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ deprecated public boolean get background data setting ( ) {
 return true ;
 }
comment:
START returns the value of the setting for background data usage . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public int size ( ) {
 return bundle . size ( ) ;
 }
comment:
START returns the number of fields in this metadata . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set ( long index , boolean value ) {
 array [ segment ( index ) ] [ offset ( index ) ] = value ;
 }
comment:
START sets the element of this big array at specified index . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public long get start delay ( ) {
 if ( mstart delay set ) {
 return mstart delay ;
 }
 else {
 return DecimalInteger ;
 }
 }
comment:
START returns the current start delay of property animations . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static < t > list < t > as list ( iterable < t > receiver ) {
 if ( receiver instanceof list ) {
 return ( list < t > ) receiver ;
 }
 list < t > list = new array list < > ( ) ;
 for ( t t : receiver ) {
 list . add ( t ) ;
 }
 return list ;
 }
comment:
START returns the original iterable if it is already a list . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK that UNK the UNK .
returns the list of UNK UNK UNK

code:
public void set target bean name ( string target bean name ) {
 this . target bean name = target bean name ;
 }
comment:
START set the name of the target bean in the factory . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public final int [ ] get drawable state ( ) {
 if ( ( mdrawable state != null ) && ( ( mprivate flags & pflag_ drawable_ state_ y ) == DecimalInteger ) ) {
 return mdrawable state ;
 }
 else {
 mdrawable state = on create drawable state ( DecimalInteger ) ;
 mprivate flags &= ~ pflag_ drawable_ state_ y ;
 return mdrawable state ;
 }
 }
comment:
START return an array of resource ids of the drawable states representing the current state of the view . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static string get album l ( string user , string album ) {
 return String + user + String + album ;
 }
comment:
START returns the url for an UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public static string get UNK url ( string user ) {
 return null ;
 }
comment:
START returns the url for the UNK description . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public final void set long ( string name , long value ) {
 map . put ( name , long . value of ( value ) ) ;
 }
comment:
START sets the value of a long key . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public range < integer > get supported frame rates ( ) {
 return mframe rate range ;
 }
comment:
START returns the range of supported frame rates . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get ( long index ) {
 return array [ segment ( index ) ] [ offset ( index ) ] ;
 }
comment:
START returns the element of this big array at specified index . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get request count ( ) {
 return delegate . request count ( ) ;
 }
comment:
START returns the total number of http requests that were made . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ can ignore return value public e remove last ( ) {
 if ( is empty ( ) ) {
 throw new no such element exception ( ) ;
 }
 return remove and get ( get max element index ( ) ) ;
 }
comment:
START removes and returns the greatest element of this queue . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public void set selection ( int position ) {
 drop down list view list = mdrop down list ;
 if ( is showing ( ) && list != null ) {
 list . mlist selection hidden = false ;
 list . set selection ( position ) ;
 if ( list . get choice mode ( ) != list view . choice_ mode_ e ) {
 list . set item checked ( position , true ) ;
 }
 }
 }
comment:
START set the selected position of the list . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
builder add extra import libraries ( iterable < artifact > extra import libraries ) {
 this . extra import libraries = iterables . concat ( this . extra import libraries , extra import libraries ) ;
 return this ;
 }
comment:
START adds additional static libraries to be linked into the final obj c application bundle . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .
adds the UNK to the given .

code:
public static < e > set view < e > intersection ( final set < e > set1 , final set < ? > set2 ) {
 check not null ( set1 , String ) ;
 check not null ( set2 , String ) ;
 final predicate < object > in set2 = predicates . in ( set2 ) ;
 return new set view < e > ( ) {
 @ override public unmodifiable iterator < e > iterator ( ) {
 return iterators . filter ( set1 . iterator ( ) , in set2 ) ;
 }
 @ override public int size ( ) {
 return iterators . size ( iterator ( ) ) ;
 }
 @ override public boolean is empty ( ) {
 return ! iterator ( ) . has next ( ) ;
 }
 @ override public boolean contains ( object object ) {
 return set1 . contains ( object ) && set2 . contains ( object ) ;
 }
 @ override public boolean contains all ( collection < ? > collection ) {
 return set1 . contains all ( collection ) && set2 . contains all ( collection ) ;
 }
 }
 ;
 }
comment:
START returns an unmodifiable <b> view </b> of the intersection of two sets . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public int size ( ) {
 if ( garbage ) {
 gc ( ) ;
 }
 return size ;
 }
comment:
START returns the number of key-value mappings that this sparse array currently stores . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public void set padding bottom ( int padding bottom ) {
 this . padding bottom = padding bottom ;
 }
comment:
START sets the padding below a glyph on the glyph page to allow for effects to be drawn . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public double get radius ( ) {
 return request . get radius ( ) ;
 }
comment:
START returns the radius of this geofence . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set classes to be bound ( class < ? > ... classes to be bound ) {
 assert . not empty ( classes to be bound , String ) ;
 this . classes to be bound = classes to be bound ;
 }
comment:
START set the list of java classes to be recognized by a newly created UNK . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public string get client login ( ) {
 return this . client login ;
 }
comment:
START return the configured login to use for connections to the stomp broker on behalf of connected clients . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
public final boolean is UNK ( ) {
 return state >= d ;
 }
comment:
START return true if the fragment is in the UNK state . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public static long get non heap memory init ( ) {
 return mem_ n . get non heap memory usage ( ) . get init ( ) ;
 }
comment:
START returns the initial size of non heap memory in bytes . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public boolean set has overlapping rendering ( boolean has overlapping rendering ) {
 return nset has overlapping rendering ( mnative render node , has overlapping rendering ) ;
 }
comment:
START sets whether the display list renders content which UNK . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK .

code:
@ suppress warnings ( String ) public void set ( string field name , object value ) {
 boolean is string = ( value instanceof string ) ;
 string str value = is string ? ( string ) value : null ;
 long column index = proxy state . get row$realm ( ) . get column index ( field name ) ;
 realm field type type = proxy state . get row$realm ( ) . get column type ( column index ) ;
 if ( is string && type != realm field type . g ) {
 switch ( type ) {
 case n : value = boolean . parse boolean ( str value ) ;
 break ;
 case r : value = long . parse long ( str value ) ;
 break ;
 case t : value = float . parse float ( str value ) ;
 break ;
 case e : value = double . parse double ( str value ) ;
 break ;
 case e : value = json utils . string to date ( str value ) ;
 break ;
 default : throw new illegal argument exception ( string . format ( String + String + String , field name , value ) ) ;
 }
 }
 if ( value == null ) {
 set null ( field name ) ;
 }
 else {
 set value ( field name , value ) ;
 }
 }
comment:
START sets the value for the given field . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
@ override public long skip ( long n ) throws exception {
 ensure open ( ) ;
 if ( pos + n > count ) {
 n = count - pos ;
 }
 if ( n < DecimalInteger ) {
 return DecimalInteger ;
 }
 pos += n ;
 return n ;
 }
comment:
START returns the number of characters that were skipped . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK in the given UNK .
returns the list of UNK UNK

code:
public static int get type of object ( object obj ) {
 if ( obj == null ) {
 return cursor . field_ type_ l ;
 }
 else if ( obj instanceof byte [ ] ) {
 return cursor . field_ type_ b ;
 }
 else if ( obj instanceof float || obj instanceof double ) {
 return cursor . field_ type_ t ;
 }
 else if ( obj instanceof long || obj instanceof integer || obj instanceof short || obj instanceof byte ) {
 return cursor . field_ type_ r ;
 }
 else {
 return cursor . field_ type_ g ;
 }
 }
comment:
START returns data type of the given object 's value . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public abstract long get total time locked ( long elapsed realtime us , int which ) ;
comment:
START returns the total time in microseconds associated with this timer for the selected type of statistics . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public string get owner email for resource ( resource resource ) {
 validate . not null ( resource ) ;
 return resource . get tag ( basic UNK UNK context . global_ owner_ y ) ;
 }
comment:
START gets the owner email from the resource 's tag key set in UNK UNK y . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public abstract void set subtitle ( @ string res int res id ) ;
comment:
START set the subtitle of the action mode . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public string get instance id ( ) {
 return instance id ;
 }
comment:
START returns the instance id to identify the instance to the cloud client . END
BLUE1:0.571428571429
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public void set shortcuts visible ( boolean shortcuts visible ) {
 if ( UNK visible == shortcuts visible ) return ;
 set shortcuts visible inner ( shortcuts visible ) ;
 on items changed ( false ) ;
 }
comment:
START sets whether the shortcuts should be visible on UNK . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set max size ( int max size ) {
 this . max size = max size ;
 }
comment:
START set the maximum size of the pool . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set uniform matrix ( string name , matrix4 matrix ) {
 set uniform matrix ( name , matrix , false ) ;
 }
comment:
START sets the uniform matrix with the given name . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static hash function good fast hash ( int minimum bits ) {
 int bits = check positive and make multiple UNK ( minimum bits ) ;
 if ( bits == DecimalInteger ) {
 return UNK holder . UNK fast_ UNK UNK ;
 }
 if ( bits <= DecimalInteger ) {
 return UNK holder . UNK fast_ UNK UNK ;
 }
 int hash functions needed = ( bits + DecimalInteger ) / DecimalInteger ;
 hash function [ ] hash functions = new hash function [ hash functions needed ] ;
 hash functions [ DecimalInteger ] = UNK holder . UNK fast_ UNK UNK ;
 int seed = UNK fast_ UNK d ;
 for ( int i = DecimalInteger ;
 i < hash functions needed ;
 i ++ ) {
 seed += DecimalInteger ;
 hash functions [ i ] = UNK ( seed ) ;
 }
 return new UNK hash function ( hash functions ) ;
 }
comment:
START returns a UNK , <b> UNK </b> , UNK hash function . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public vector3 get end point ( final vector3 out , final float distance ) {
 return out . set ( direction ) . scl ( distance ) . add ( origin ) ;
 }
comment:
START returns the endpoint given the distance . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public long get heartbeat time ( ) {
 return this . heartbeat time ;
 }
comment:
START return the amount of time in milliseconds when the server has not sent any messages . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public abstract byte [ ] get ( supplier < build configuration > configuration supplier , command environment env ) throws abrupt exit exception , interrupted exception ;
comment:
START returns the value of the info key . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final double sample covariance ( ) {
 check state ( count ( ) > DecimalInteger ) ;
 return sum of products of deltas / ( count ( ) - DecimalInteger ) ;
 }
comment:
START returns the sample covariance of the values . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected string get method param ( ) {
 return this . method param ;
 }
comment:
START get the name of the request param for UNK supported http methods . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
@ override public string to string ( ) {
 return UNK test + String + UNK exception . get message ( ) ;
 }
comment:
START returns a short description of the failure . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static path fragment get manifest path from fileset path ( path fragment fileset dir ) {
 path fragment manifest dir = fileset dir . replace name ( String + fileset dir . get base name ( ) ) ;
 path fragment output manifest frag = manifest dir . get relative ( String ) ;
 return output manifest frag ;
 }
comment:
START returns the path of the associated manifest file for the path of a fileset . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
void set supplicant state ( string state name ) {
 UNK state = value of ( state name ) ;
 }
comment:
START set the supplicant state from the string name of the state . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public configuration fragment policy get configuration fragment policy ( ) {
 return configuration fragment policy ;
 }
comment:
START returns the set of configuration fragments required by this aspect . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public double average ( string field name ) {
 long column index = schema . get and check field index ( field name ) ;
 switch ( table . get column type ( column index ) ) {
 case r : return query . average int ( column index ) ;
 case e : return query . average double ( column index ) ;
 case t : return query . average float ( column index ) ;
 default : throw new illegal argument exception ( string . format ( type_ h , field name , String ) ) ;
 }
 }
comment:
START returns the average of a given field . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public json array add ( double value ) {
 objects . require non null ( value ) ;
 list . add ( value ) ;
 return this ;
 }
comment:
START add a double to the json array . END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
add the UNK to UNK .
add the UNK to UNK to the UNK .
add the UNK to UNK to .
add the UNK to UNK to the UNK

code:
public static < e > immutable list < e > of ( e e1 , e e2 , e e3 ) {
 return construct ( e1 , e2 , e3 ) ;
 }
comment:
START returns an immutable list containing the given elements , in order . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static string get short name as property ( class < ? > clazz ) {
 string short name = get short name ( clazz ) ;
 int dot index = short name . last index of ( package_ r ) ;
 short name = ( dot index != - DecimalInteger ? short name . substring ( dot index + DecimalInteger ) : short name ) ;
 return UNK . UNK ( short name ) ;
 }
comment:
START return the short string name of a java class in UNK java beans property format . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public void add ( double x , double y ) {
 stats . add ( x ) ;
 if ( is finite ( x ) && is finite ( y ) ) {
 if ( stats . count ( ) > DecimalInteger ) {
 sum of products of deltas += ( x - stats . mean ( ) ) * ( y - stats . mean ( ) ) ;
 }
 }
 else {
 sum of products of deltas = na n ;
 }
 stats . add ( y ) ;
 }
comment:
START adds the given pair of values to the dataset . END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
add the UNK to the given UNK .
add the UNK to the UNK to the UNK .

code:
public nested set < artifact > get execution dynamic library artifacts ( ) {
 return cc execution dynamic libraries ;
 }
comment:
START returns the UNK dynamic libraries . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
files to run provider UNK ( ) {
 return rule context . get executable prerequisite ( String , mode . t ) ;
 }
comment:
START returns a reference to the UNK executable . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final void set thread local map ( internal thread local map thread local map ) {
 this . thread local map = thread local map ;
 }
comment:
START sets the internal data structure that keeps the thread-local variables bound to this thread . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ override public iterator < e > iterator ( ) {
 if ( ! is loaded ( ) ) {
 return collections . < e > empty list ( ) . iterator ( ) ;
 }
 return new realm results iterator ( ) ;
 }
comment:
START returns an iterator for the results of a query . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public string get url ( ) {
 return this . url ;
 }
comment:
START return the url of the resource that this view wraps . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
protected long get UNK output buffer timeout us ( ) {
 return DecimalInteger ;
 }
comment:
START returns the maximum time to block UNK waiting for a decoded output buffer . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public cache control cache control ( ) {
 cache control result = cache control ;
 return result != null ? result : ( cache control = cache control . parse ( headers ) ) ;
 }
comment:
START returns the cache control UNK for this response . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final int get auto link mask ( ) {
 return mauto link mask ;
 }
comment:
START gets the UNK mask of the text . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static int var long size ( long v ) {
 int result = DecimalInteger ;
 do {
 result ++ ;
 v >>>= DecimalInteger ;
 }
 while ( v != DecimalInteger ) ;
 return result ;
 }
comment:
START returns the encoding size in bytes of its input value . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public void set output mode ( int output mode ) {
 this . output mode = output mode ;
 }
comment:
START sets the output mode for frames rendered by the decoder . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void translate y ( float amount ) {
 y += amount ;
 if ( dirty ) return ;
 final float [ ] vertices = this . vertices ;
 for ( int i = DecimalInteger ;
 i < vertices . length ;
 i += sprite . vertex_ e ) vertices [ i ] += amount ;
 }
comment:
START sets the y position relative to the current position where the sprite will be drawn . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder add compilation mode copts ( iterable < string > copts ) {
 this . compilation mode copts . add all ( copts ) ;
 return this ;
 }
comment:
START sets the copts derived from compilation mode to use when compiling the xcode target . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public chart touch listener get on touch listener ( ) {
 return UNK touch listener ;
 }
comment:
START returns an instance of the currently active touch listener . END
BLUE1:0.571428571429
--generate--
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the view .
returns the number of bytes in the given UNK .

code:
public void set progress rotation ( float rotation ) {
 ring . set rotation ( rotation ) ;
 }
comment:
START set the amount of rotation to apply to the progress spinner . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK

code:
public void set rect ( int left , int top , int right , int bottom ) {
 set round rect ( left , top , right , bottom , DecimalFloatingPoint ) ;
 }
comment:
START sets the outline to the rounded rect defined by the input rect , and corner radius . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public final int count data schemes ( ) {
 return mdata schemes != null ? mdata schemes . size ( ) : DecimalInteger ;
 }
comment:
START return the number of data UNK in the filter . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set positive button text ( char sequence positive button text ) {
 mpositive button text = positive button text ;
 }
comment:
START sets the text of the positive button of the dialog . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public int get estimated error ( ) throws remote exception {
 throw on dead server ( ) ;
 return utils . transact get int ( method_ get_ UNK r , error_ UNK n ) ;
 }
comment:
START gets the current UNK of common clock 's synchronization accuracy from the common time service . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
set < string > get all methods ( api info ) {
 set < string > members = new hash set < string > ( DecimalInteger ) ;
 add all methods ( info , members , true ) ;
 return members ;
 }
comment:
START returns the set of all methods , including inherited ones . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK UNK

code:
public string get bean name ( ) {
 return this . bean name ;
 }
comment:
START return the name of the bean requested . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public void set minimum scale x ( float scale ) {
 if ( scale < DecimalFloatingPoint ) scale = DecimalFloatingPoint ;
 mmin scale x = scale ;
 limit trans and scale ( mmatrix touch , mcontent rect ) ;
 }
comment:
START sets the minimum scale factor for the x-axis @param UNK END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int index of key ( object key ) {
 return key == null ? index of null ( ) : index of ( key , UNK hash code ? system . identity hash code ( key ) : key . hash code ( ) ) ;
 }
comment:
START returns the index of a key in the set . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public list < bean post processor > get bean post processors ( ) {
 return this . bean post processors ;
 }
comment:
START return the list of bean post processors that will get applied to beans created with this factory . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the .

code:
int [ ] get array ( ) {
 if ( count == array . length ) {
 arrays . sort ( array ) ;
 return array ;
 }
 else {
 final int [ ] result = new int [ count ] ;
 system . arraycopy ( array , DecimalInteger , result , DecimalInteger , count ) ;
 arrays . sort ( result ) ;
 return result ;
 }
 }
comment:
START get the array of values that have been added , with the values in UNK increasing order . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public static < e > immutable list < e > of ( e e1 , e e2 , e e3 , e e4 , e e5 , e e6 , e e7 , e e8 , e e9 ) {
 return construct ( e1 , e2 , e3 , e4 , e5 , e6 , e7 , e8 , e9 ) ;
 }
comment:
START returns an immutable list containing the given elements , in order . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public static void UNK to color ( color color , int value ) {
 color . r = ( ( value & 0xff000000 ) > > > DecimalInteger ) / DecimalFloatingPoint ;
 color . g = ( ( value & UNK ) > > > DecimalInteger ) / DecimalFloatingPoint ;
 color . b = ( ( value & UNK ) > > > DecimalInteger ) / DecimalFloatingPoint ;
 color . a = ( ( value & UNK ) ) / DecimalFloatingPoint ;
 }
comment:
START sets the color components using the specified integer value in the format rgba8888 . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void add declared parameter ( sql parameter parameter ) {
 assert . not null ( parameter , String ) ;
 if ( ! string utils . has text ( parameter . get name ( ) ) ) {
 throw new invalid data access api usage exception ( String + get procedure name ( ) + String ) ;
 }
 this . declared parameters . add ( parameter ) ;
 if ( logger . is debug enabled ( ) ) {
 logger . debug ( String + get procedure name ( ) + String + parameter . get name ( ) ) ;
 }
 }
comment:
START add a declared parameter to the list of parameters for the call . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set target name ( string target name ) {
 this . target name = target name ;
 }
comment:
START set the name of the target bean . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
private list < attribute > get attributes ( rule rule , @ nullable aspect aspect ) {
 list < attribute > rule defs = rule . get rule class object ( ) . get attributes ( ) ;
 if ( aspect == null ) {
 return rule defs ;
 }
 else {
 return immutable list . < attribute > builder ( ) . add all ( rule defs ) . add all ( aspect . get definition ( ) . get attributes ( ) . values ( ) ) . build ( ) ;
 }
 }
comment:
START returns the attributes that should be visited for this UNK combination . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set switch typeface ( typeface tf ) {
 if ( mtext paint . get typeface ( ) != tf ) {
 mtext paint . set typeface ( tf ) ;
 request layout ( ) ;
 invalidate ( ) ;
 }
 }
comment:
START sets the typeface in which the text should be displayed on the switch . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set config location ( resource resource ) {
 config location = resource ;
 }
comment:
START set the location of the free marker config file . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public boolean set exception ( throwable throwable ) {
 return super . set failure ( throwable ) ;
 }
comment:
START sets the data source to having failed with the given exception . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
protected static pair < iterable < object > , attribute value source > get possible attribute values and sources ( rule rule , attribute attr ) {
 attribute value source source ;
 if ( attr . get name ( ) . equals ( String ) ) {
 if ( rule . is visibility specified ( ) ) {
 source = attribute value source . e ;
 }
 else if ( rule . get package ( ) . is default visibility set ( ) ) {
 source = attribute value source . e ;
 }
 else {
 source = attribute value source . t ;
 }
 }
 else {
 source = rule . is attribute value explicitly specified ( attr ) ? attribute value source . e : attribute value source . t ;
 }
 iterable < object > possible attribute values = aggregating attribute mapper . of ( rule ) . get possible attribute values ( rule , attr ) ;
 return pair . of ( possible attribute values , source ) ;
 }
comment:
START returns the possible values of the specified attribute in the specified rule . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK UNK .

code:
public void put ( long key , @ nullable theme theme , @ non null t entry ) {
 put ( key , theme , entry , true ) ;
 }
comment:
START adds a new UNK entry to the cache . END
BLUE1:0.571428571429
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to UNK the UNK .
used to the UNK of the given UNK .

code:
public long get count at ( final int index ) {
 return counts [ index ] ;
 }
comment:
START get the count of UNK at a given index . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
private long UNK time nanos ( ) {
 if ( end time nanos == - DecimalInteger ) {
 throw new illegal state exception ( String + loaded class . name ) ;
 }
 return end time nanos - start time nanos ;
 }
comment:
START returns how long this class initialization and all the nested class UNK took . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public map < class < ? > , class < ? extends property editor > > get custom editors ( ) {
 return this . custom editors ;
 }
comment:
START return the map of custom UNK , with classes as keys and property editor classes as values . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
public void set document info ( print document info info ) {
 UNK info = info ;
 }
comment:
START sets the info describing the printed document . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public c set UNK ( string UNK ) {
 return set string argument ( tts span . arg_ r , UNK ) ;
 }
comment:
START sets the UNK information for this instance . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int size ( ) {
 return identical . size ( ) + different . size ( ) + missing . size ( ) ;
 }
comment:
START returns the sum of the files in this diff . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
long ram bytes used for refresh ( ) {
 return ram bytes used current . get ( ) ;
 }
comment:
START returns how much UNK would be UNK up by refreshing . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public time value expected time to UNK ( ) {
 return time value . time value millis ( DecimalInteger ) ;
 }
comment:
START returns expected time to UNK after UNK has been removed . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public bitmap to bitmap ( ) {
 bitmap result = ( bitmap ) mbacking store . lock data ( mode_ d , backing store . access_ p ) ;
 mbacking store . unlock ( ) ;
 return result ;
 }
comment:
START returns the UNK image contents as a bitmap instance . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .
returns the list of UNK that be UNK in the .

code:
public final type set get types ( ) {
 return new type set ( ) ;
 }
comment:
START returns the set of interfaces and classes that this type is or is a subtype of . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
protected string bundle name ( rule context rule context ) {
 return rule context . get label ( ) . get name ( ) ;
 }
comment:
START returns the name of this target 's bundle . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set web color inner ( int color ) {
 mweb color inner = color ;
 }
comment:
START sets the color for the web lines in between the lines that come from the center . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set uniform matrix ( string name , matrix3 matrix ) {
 set uniform matrix ( name , matrix , false ) ;
 }
comment:
START sets the uniform matrix with the given name . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public long get user creation time ( user handle user handle ) {
 try {
 return service . get user creation time ( user handle . get identifier ( ) ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns creation time of the user or of a managed profile associated with the calling user . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public string get accepted protocol ( ) {
 return this . accepted protocol ;
 }
comment:
START return the selected UNK to use . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
@ UNK public int get UNK ( ) {
 inotification manager service = get service ( ) ;
 try {
 return service . get package UNK ( context . get package name ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns the user specified UNK for notifications from the calling package . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void set interpolator ( context context , int res d ) {
 set interpolator ( animation utils . load interpolator ( context , res d ) ) ;
 }
comment:
START sets the acceleration curve for the indeterminate animation . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public int get user id ( ) {
 return this . user . get identifier ( ) ;
 }
comment:
START returns a user handle for the instance of the app that posted this notification . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void add footer view ( view v , object data , boolean is selectable ) {
 final fixed view info info = new fixed view info ( ) ;
 info . view = v ;
 info . data = data ;
 info . is selectable = is selectable ;
 mfooter view infos . add ( info ) ;
 UNK all items selectable &= is selectable ;
 if ( adapter != null ) {
 if ( ! ( adapter instanceof header view list adapter ) ) {
 adapter = new header view list adapter ( mheader view infos , mfooter view infos , adapter ) ;
 }
 if ( mdata set observer != null ) {
 mdata set observer . on changed ( ) ;
 }
 }
 }
comment:
START add a fixed view to appear at the bottom of the list . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set size ( int width , int height ) {
 width = width ;
 height = height ;
 mtexture width = width > DecimalInteger ? utils . next power UNK ( width ) : DecimalInteger ;
 mtexture height = height > DecimalInteger ? utils . next power UNK ( height ) : DecimalInteger ;
 if ( mtexture width > max_ UNK e || mtexture height > max_ UNK e ) {
 log . w ( g , string . format ( String , mtexture width , mtexture height ) , new exception ( ) ) ;
 }
 }
comment:
START sets the content size of this texture . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
@ skylark callable ( name = String , struct field = true , doc = String + String ) public immutable list < string > get copts for compilation mode ( ) {
 switch ( compilation mode ) {
 case g : if ( this . debug with UNK ) {
 return immutable list . < string > builder ( ) . add all ( UNK s ) . add all ( UNK UNK s ) . build ( ) ;
 }
 else {
 return UNK s ;
 }
 case d : return UNK options ;
 case t : return UNK s ;
 default : throw new assertion error ( ) ;
 }
 }
comment:
START returns the default set of clang options for the current compilation mode . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set range ( float min , float max ) {
 if ( min > max ) throw new illegal argument exception ( String ) ;
 this . min = min ;
 this . max = max ;
 if ( value < min ) set value ( min ) ;
 else if ( value > max ) set value ( max ) ;
 }
comment:
START sets the range of this progress bar . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public matrix4 set to rotation rad ( float axis x , float axis y , float axis z , float radians ) {
 if ( radians == DecimalInteger ) {
 idt ( ) ;
 return this ;
 }
 return set ( quat . set from axis rad ( axis x , axis y , axis z , radians ) ) ;
 }
comment:
START sets the matrix to a rotation matrix around the given axis . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ deprecated public void set user restriction ( string key , boolean value , user handle user handle ) {
 try {
 service . set user restriction ( key , value , user handle . get identifier ( ) ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START sets the value of a specific restriction on a specific user . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
protected list < instance group > filter ( list < instance group > list ) {
 return lists . new array list ( iterables . filter ( list , predicate ) ) ;
 }
comment:
START return the filtered list of instance groups using the requested predicate . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public resolvable type get return type ( ) {
 return this . return type ;
 }
comment:
START return the type of the value returned from the handler . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of all UNK .
return the number of all UNK in the UNK .
return the number of UNK UNK

code:
public void set long poll timeout ( int long poll timeout ) {
 assert . is true ( long poll timeout > DecimalInteger , String ) ;
 this . long poll timeout = long poll timeout ;
 }
comment:
START set the long UNK timeout for the server . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ deprecated public boolean get UNK shown ( ) {
 return delegate . get UNK shown ( ) ;
 }
comment:
START returns whether the UNK are shown . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
protected queue < string > get message cache ( ) {
 return this . message cache ;
 }
comment:
START return the sock s buffer for messages stored UNK between UNK requests . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public abstract list < intent filter verification info > get intent filter UNK ( string package name ) ;
comment:
START get the list of intent filter verification info for a specific package and user . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final void set transformation method ( transformation method method ) {
 if ( method == transformation ) {
 return ;
 }
 if ( transformation != null ) {
 if ( text instanceof spannable ) {
 ( ( spannable ) text ) . remove span ( transformation ) ;
 }
 }
 transformation = method ;
 if ( method instanceof transformation UNK ) {
 transformation UNK UNK = ( transformation UNK ) method ;
 mallow transformation length change = ! is text selectable ( ) && ! ( text instanceof editable ) ;
 UNK . set length changes allowed ( mallow transformation length change ) ;
 }
 else {
 mallow transformation length change = false ;
 }
 set text ( text ) ;
 if ( has password transformation method ( ) ) {
 notify view accessibility state changed if needed ( accessibility event . content_ change_ type_ d ) ;
 }
 mtext dir = get text direction heuristic ( ) ;
 }
comment:
START sets the transformation that is applied to the text that this text view is displaying . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public final int data capacity ( ) {
 return native data capacity ( mnative ptr ) ;
 }
comment:
START returns the total amount of space in the parcel . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public long max size ( ) {
 return shim response cache . max size ( ) ;
 }
comment:
START returns the maximum number of bytes that this cache should use to store its data . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public long get max unsafe auto id timestamp ( ) {
 return max unsafe auto id timestamp ;
 }
comment:
START returns the max timestamp that is used to UNK documents with auto-generated ids in the engine . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
public static int get encoded length ( byte [ ] input array , int input offset , int input length ) {
 return ( int ) ( ( DecimalInteger * input length + DecimalInteger ) / DecimalInteger ) + DecimalInteger ;
 }
comment:
START returns the number of chars required to encode the given bytes . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
static < k , v > set < entry < k , v > > unmodifiable entry set ( set < entry < k , v > > entry set ) {
 return new unmodifiable entry set < k , v > ( collections . unmodifiable set ( entry set ) ) ;
 }
comment:
START returns an unmodifiable view of the specified set of entries . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set response headers ( map < string , string > headers ) {
 check immutable ( ) ;
 UNK headers = headers ;
 }
comment:
START sets the headers for the resource response . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static < e > multiset < e > unmodifiable multiset ( multiset < ? extends e > multiset ) {
 if ( multiset instanceof unmodifiable multiset || multiset instanceof immutable multiset ) {
 @ suppress warnings ( String ) multiset < e > result = ( multiset < e > ) multiset ;
 return result ;
 }
 return new unmodifiable multiset < e > ( check not null ( multiset ) ) ;
 }
comment:
START returns an unmodifiable view of the specified multiset . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public result next ( ) {
 if ( ! has next ( ) ) {
 throw new illegal state exception ( String ) ;
 }
 increment UNK ( ) ;
 assert has next ( ) ;
 boolean has left = ! mcursor left . is after last ( ) ;
 boolean has right = ! mcursor right . is after last ( ) ;
 if ( has left && has right ) {
 populate values ( values , mcursor left , UNK left , DecimalInteger ) ;
 populate values ( values , mcursor right , UNK right , DecimalInteger ) ;
 switch ( compare strings ( values ) ) {
 case - DecimalInteger : mcompare result = result . t ;
 break ;
 case DecimalInteger : mcompare result = result . h ;
 break ;
 case DecimalInteger : mcompare result = result . t ;
 break ;
 }
 }
 else if ( has left ) {
 mcompare result = result . t ;
 }
 else {
 assert has right ;
 mcompare result = result . t ;
 }
 mcompare result is valid = true ;
 return mcompare result ;
 }
comment:
START returns the comparison result of the next row from each cursor . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
resource set additional field ( string field name , string field value ) ;
comment:
START adds or sets an additional field with the specified name and value to the resource . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public boolean is UNK ( ) {
 try {
 return service . is UNK ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns true if the device is in an UNK state . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public final void set authorized roles ( string ... authorized roles ) {
 this . authorized roles = authorized roles ;
 }
comment:
START set the UNK that this interceptor should UNK as authorized . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK for the given request .

code:
public static type get return type ( final method method ) {
 return get type ( method . get return type ( ) ) ;
 }
comment:
START returns the java type corresponding to the return type of the given method . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean is UNK ( object that object ) {
 if ( this == that object ) {
 return true ;
 }
 if ( ! ( that object instanceof digraph ) ) {
 return false ;
 }
 @ suppress warnings ( String ) digraph < t > that = ( digraph < t > ) that object ;
 if ( this . get node count ( ) > that . get node count ( ) ) {
 return false ;
 }
 for ( node < t > UNK : nodes . values ( ) ) {
 node < t > UNK = that . get node maybe ( UNK . get label ( ) ) ;
 if ( UNK == null ) {
 return false ;
 }
 collection < node < t > > UNK = UNK . get successors ( ) ;
 collection < node < t > > UNK = UNK . get successors ( ) ;
 if ( UNK . size ( ) > UNK . size ( ) ) {
 return false ;
 }
 for ( node < t > UNK : UNK ) {
 node < t > UNK = that . get node maybe ( UNK . get label ( ) ) ;
 if ( UNK == null ) {
 return false ;
 }
 if ( ! UNK . contains ( UNK ) ) {
 return false ;
 }
 }
 }
 return true ;
 }
comment:
START returns true iff this graph is a UNK of the argument . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether the given UNK is UNK .
sets the UNK of the given UNK .
sets whether the given UNK is UNK , in the UNK .

code:
public make environment . builder get make environment ( ) {
 return pkg builder . get make environment ( ) ;
 }
comment:
START returns the make environment builder of this package . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
private static byte [ ] get build language definition ( rule class provider provider ) {
 build language . builder result pb = build language . new builder ( ) ;
 collection < rule class > rule classes = provider . get rule class map ( ) . values ( ) ;
 for ( rule class rule class : rule classes ) {
 if ( ! rule class . is documented ( ) ) {
 continue ;
 }
 rule definition . builder rule pb = rule definition . new builder ( ) ;
 rule pb . set name ( rule class . get name ( ) ) ;
 for ( attribute attr : rule class . get attributes ( ) ) {
 if ( ! attr . is documented ( ) ) {
 continue ;
 }
 attribute definition . builder attr pb = attribute definition . new builder ( ) ;
 attr pb . set name ( attr . get name ( ) ) ;
 attr pb . set type ( proto utils . get UNK from type ( attr . get type ( ) ) ) ;
 attr pb . set mandatory ( attr . is mandatory ( ) ) ;
 if ( build type . is label type ( attr . get type ( ) ) ) {
 attr pb . set allowed rule classes ( get allowed rule classes ( rule classes , attr ) ) ;
 }
 rule pb . add attribute ( attr pb ) ;
 }
 result pb . add rule ( rule pb ) ;
 }
 return result pb . build ( ) . to byte array ( ) ;
 }
comment:
START returns a byte array containing a UNK describing the build language . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
@ override public mppoint f get center offsets ( ) {
 return mview port handler . get content center ( ) ;
 }
comment:
START returns a recyclable mppoint f instance . returns the center of the chart taking offsets under consideration . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get ( char sequence name ) {
 return get ( name . to string ( ) ) ;
 }
comment:
START returns the value of a header with the specified name . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public mov avg pipeline aggregation builder window ( int window ) {
 if ( window <= DecimalInteger ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . window = window ;
 return this ;
 }
comment:
START sets the window size for the moving average . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set scope name ( string scope name ) {
 assert . not null ( scope name , String ) ;
 this . scope name = scope name ;
 }
comment:
START set the name of the scope . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public < t > t optional ( string name , class < t > type ) {
 if ( name == null ) throw new illegal argument exception ( String ) ;
 if ( type == null ) throw new illegal argument exception ( String ) ;
 object map < string , object > type resources = resources . get ( type ) ;
 if ( type resources == null ) return null ;
 return ( t ) type resources . get ( name ) ;
 }
comment:
START returns a named resource of the specified type . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static elasticsearch exception [ ] guess root causes ( throwable t ) {
 throwable ex = exceptions helper . unwrap cause ( t ) ;
 if ( ex instanceof elasticsearch exception ) {
 return ( ( elasticsearch exception ) ex ) . guess root causes ( ) ;
 }
 return new elasticsearch exception [ ] {
 new elasticsearch exception ( t . get message ( ) , t ) {
 @ override protected string get exception name ( ) {
 return get exception name ( get cause ( ) ) ;
 }
 }
 }
 ;
 }
comment:
START returns the root cause of this exception or multiple if different shards caused different exceptions . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean is UNK mode supported ( ) {
 if ( get state ( ) != state_ n ) return false ;
 try {
 mservice lock . read lock ( ) . lock ( ) ;
 if ( service != null ) return service . is UNK mode supported ( ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 finally {
 mservice lock . read lock ( ) . unlock ( ) ;
 }
 return false ;
 }
comment:
START returns whether UNK mode is supported . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public synchronized int get page index ( string name ) {
 for ( int i = DecimalInteger ;
 i < pages . size ;
 i ++ ) {
 rectangle rect = pages . get ( i ) . UNK . get ( name ) ;
 if ( rect != null ) return i ;
 }
 return - DecimalInteger ;
 }
comment:
START returns the index of the page containing the given packed rectangle . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected final eval exception maybe transform exception ( eval exception original ) {
 if ( original instanceof eval exception with stack trace ) {
 eval exception with stack trace real = ( eval exception with stack trace ) original ;
 if ( is new scope ( ) ) {
 real . register node ( this ) ;
 }
 return real ;
 }
 if ( original . can be added to stack trace ( ) ) {
 return new eval exception with stack trace ( original , this ) ;
 }
 else {
 return original ;
 }
 }
comment:
START returns an exception which should be thrown instead of the original one . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK UNK that be UNK for the UNK .
returns the list of UNK UNK that be UNK to the UNK .

code:
public void set ( long index , block value ) {
 block current value = array . get ( index ) ;
 if ( current value != null ) {
 size of blocks -= current value . get retained size in bytes ( ) ;
 }
 if ( value != null ) {
 size of blocks += value . get retained size in bytes ( ) ;
 }
 array . set ( index , value ) ;
 }
comment:
START sets the element of this big array at specified index . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public uri get condition id ( ) {
 return condition id ;
 }
comment:
START returns the representation of the state that causes this rule to become active . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public params set item screen size factor ( double item screen size factor ) {
 mitem screen size factor = item screen size factor ;
 return this ;
 }
comment:
START set the factor that determines how UNK each item is in relation to the screen height . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public nested set < artifact > get temps ( ) {
 return temps ;
 }
comment:
START returns an unmodifiable view of the temp files set . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public void allocation UNK ( int allocation UNK ) {
 if ( allocation UNK <= DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . allocation UNK = allocation UNK ;
 }
comment:
START sets the amount of bytes that will be allocated to each stream . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public shape get shape ( ) {
 return mshape state . shape ;
 }
comment:
START returns the shape of this shape drawable . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public int get cache level ( ) {
 return this . cache level ;
 }
comment:
START return the level of caching that this listener container is allowed to apply . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
private managed service info remove service impl ( interface service , final int userid ) {
 if ( g ) slog . d ( g , String + service + String + userid ) ;
 managed service info service info = null ;
 synchronized ( mutex ) {
 final int n = services . size ( ) ;
 for ( int i = n - DecimalInteger ;
 i >= DecimalInteger ;
 i -- ) {
 final managed service info info = services . get ( i ) ;
 if ( info . service . as binder ( ) == service . as binder ( ) && info . userid == userid ) {
 if ( g ) slog . d ( g , String + info . component ) ;
 service info = remove service locked ( i ) ;
 }
 }
 }
 return service info ;
 }
comment:
START removes a service from the list but does not UNK @return the removed service . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .

code:
public long [ ] as long array ( ) {
 if ( type != value type . array ) throw new illegal state exception ( String + type ) ;
 long [ ] array = new long [ size ] ;
 int i = DecimalInteger ;
 for ( json value value = child ;
 value != null ;
 value = value . next , i ++ ) {
 long v ;
 switch ( value . type ) {
 case string value : v = long . parse long ( value . string value ) ;
 break ;
 case double value : v = ( long ) value . double value ;
 break ;
 case long value : v = value . long value ;
 break ;
 case boolean value : v = value . long value != DecimalInteger ? DecimalInteger : DecimalInteger ;
 break ;
 default : throw new illegal state exception ( String + value . type ) ;
 }
 array [ i ] = v ;
 }
 return array ;
 }
comment:
START returns the children of this value as a newly allocated long array . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public boolean is UNK admin ( @ non null component name admin , int user id ) {
 if ( service != null ) {
 try {
 return service . is UNK admin ( admin , user id ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
 return false ;
 }
comment:
START return true if the given UNK component is currently being removed for the user . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public void set translation ( float translation ) {
 set translation x ( translation ) ;
 }
comment:
START sets the translation of the view . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public void create symbolic link ( path fragment target ) throws exception {
 file system . create symbolic link ( this , target ) ;
 }
comment:
START creates a symbolic link with the name of the current path , following symbolic links . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
sets the UNK of the UNK to the UNK .

code:
public nested set < artifact > get merging content artifacts ( ) {
 nested set builder < artifact > result = nested set builder . stable order ( ) ;
 result . add transitive ( infoplist inputs ) ;
 if ( automatic entries infoplist input != null ) {
 result . add ( automatic entries infoplist input ) ;
 }
 return result . build ( ) ;
 }
comment:
START returns all artifacts that are required as input to the merging of the final plist . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set dispatcher types ( enum set < dispatcher type > dispatcher types ) {
 this . dispatcher types = dispatcher types ;
 }
comment:
START sets the dispatcher types that should be used with the registration . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
private file get cache file ( string url ) {
 string cache key = get cache key ( url ) ;
 return new file ( context . get cache dir ( ) + file . separator + cache_ r + file . separator + cache key ) ;
 }
comment:
START returns the cache file where we store our cache of the response of the given url . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public void set work manager name ( string work manager name ) {
 this . work manager name = work manager name ;
 }
comment:
START set the jndi name of the common j work manager . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public boolean is long clickable ( ) {
 return ( flags & view node . flags_ long_ e ) != DecimalInteger ;
 }
comment:
START returns true if this node is something the user can perform a long UNK on . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public static final < e extends collection < ? super string > > e add neighbors ( string geohash , int length , e neighbors ) {
 string UNK = neighbor ( geohash , length , DecimalInteger , - DecimalInteger ) ;
 string UNK = neighbor ( geohash , length , DecimalInteger , + DecimalInteger ) ;
 if ( UNK != null ) {
 neighbors . add ( neighbor ( UNK , length , - DecimalInteger , DecimalInteger ) ) ;
 neighbors . add ( UNK ) ;
 neighbors . add ( neighbor ( UNK , length , + DecimalInteger , DecimalInteger ) ) ;
 }
 neighbors . add ( neighbor ( geohash , length , - DecimalInteger , DecimalInteger ) ) ;
 neighbors . add ( neighbor ( geohash , length , + DecimalInteger , DecimalInteger ) ) ;
 if ( UNK != null ) {
 neighbors . add ( neighbor ( UNK , length , - DecimalInteger , DecimalInteger ) ) ;
 neighbors . add ( UNK ) ;
 neighbors . add ( neighbor ( UNK , length , + DecimalInteger , DecimalInteger ) ) ;
 }
 return neighbors ;
 }
comment:
START add all geohashes of the cells next to a given geohash to a list . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
private task view transform get thumbnail transition transform ( task stack view stack view , task running task out , rect window override rect ) {
 task stack stack = stack view . get stack ( ) ;
 task launch task = stack . get launch target ( ) ;
 if ( launch task != null ) {
 running task out . copy from ( launch task ) ;
 }
 else {
 launch task = stack . get stack front most task ( true ) ;
 running task out . copy from ( launch task ) ;
 }
 stack view . update layout algorithm ( true ) ;
 stack view . update to initial state ( ) ;
 stack view . get stack algorithm ( ) . get stack transform screen coordinates ( launch task , stack view . get scroller ( ) . get stack scroll ( ) , mtmp transform , null , window override rect ) ;
 return mtmp transform ;
 }
comment:
START returns the transition rect for the given task id . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
private static context apply default theme ( context original context ) {
 typed array a = original context . obtain styled attributes ( new int [ ] {
 r . attr . is light theme }
 ) ;
 boolean is light theme = a . get boolean ( DecimalInteger , true ) ;
 int theme id = is light theme ? r . style . theme_ UNK light : r . style . theme_ material ;
 a . recycle ( ) ;
 return new context theme wrapper ( original context , theme id ) ;
 }
comment:
START returns a UNK context with controlled look and UNK for views . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public scoped proxy mode get scoped proxy mode ( ) {
 return this . scoped proxy mode ;
 }
comment:
START get the UNK to be applied to the scoped instance . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
return the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set speed ( float speed ) {
 speed = speed ;
 mfields mask |= has_ UNK k ;
 }
comment:
START set the speed , in UNK over UNK . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private int match paths ( string path1 , string path2 ) {
 int result = DecimalInteger ;
 int end1 = path1 . length ( ) ;
 int end2 = path2 . length ( ) ;
 while ( end1 > DecimalInteger && end2 > DecimalInteger ) {
 int slash1 = path1 . last index of ( String , end1 - DecimalInteger ) ;
 int slash2 = path2 . last index of ( String , end2 - DecimalInteger ) ;
 int back slash1 = path1 . last index of ( String , end1 - DecimalInteger ) ;
 int back slash2 = path2 . last index of ( String , end2 - DecimalInteger ) ;
 int start1 = ( slash1 > back slash1 ? slash1 : back slash1 ) ;
 int start2 = ( slash2 > back slash2 ? slash2 : back slash2 ) ;
 if ( start1 < DecimalInteger ) start1 = DecimalInteger ;
 else start1 ++ ;
 if ( start2 < DecimalInteger ) start2 = DecimalInteger ;
 else start2 ++ ;
 int length = end1 - start1 ;
 if ( end2 - start2 != length ) break ;
 if ( path1 . region matches ( true , start1 , path2 , start2 , length ) ) {
 result ++ ;
 end1 = start1 - DecimalInteger ;
 end2 = start2 - DecimalInteger ;
 }
 else break ;
 }
 return result ;
 }
comment:
START returns the number of matching UNK names , starting from the right END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public option description get option description ( string name ) {
 return impl . get option description ( name ) ;
 }
comment:
START returns a description of the option . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set ( long index , long value ) {
 array [ segment ( index ) ] [ offset ( index ) ] = value ;
 }
comment:
START sets the element of this big array at specified index . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
@ override public web view provider response wait for and get provider ( ) {
 if ( binder . get calling pid ( ) == process . my pid ( ) ) {
 throw new illegal state exception ( String ) ;
 }
 return web view update service . this . impl . wait for and get provider ( ) ;
 }
comment:
START returns the web view provider for which we create UNK files . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
immutable list < artifact > get cc libraries ( ) {
 immutable list . builder < artifact > cc library builder = immutable list . builder ( ) ;
 for ( linker inputs . library to link library to link : get ( UNK y ) ) {
 cc library builder . add ( library to link . get artifact ( ) ) ;
 }
 return cc library builder . build ( ) ;
 }
comment:
START returns the list of . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public int get row count ( ) {
 return mvertical axis . get count ( ) ;
 }
comment:
START returns the current number of rows . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set pivot x ( float pivot x ) {
 if ( state . mpivot x != pivot x ) {
 state . mpivot x = pivot x ;
 invalidate self ( ) ;
 }
 }
comment:
START sets the x position around which the drawable is rotated . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ override public float get y ( ) {
 return super . get y ( ) ;
 }
comment:
START returns the center value of the candle . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public boolean is identity ( ) {
 for ( int i = DecimalInteger , k = DecimalInteger ;
 i < DecimalInteger ;
 i ++ ) {
 for ( int j = DecimalInteger ;
 j < DecimalInteger ;
 j ++ , k ++ ) {
 if ( values [ k ] != ( ( i == j ) ? DecimalInteger : DecimalInteger ) ) {
 return false ;
 }
 }
 }
 return true ;
 }
comment:
START returns whether or not the matrix is identity . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
set whether to UNK UNK UNK .
sets whether the UNK is UNK in the .

code:
private static long add durations ( collection < task > tasks , long array list durations , long array list self durations ) {
 long total time = DecimalInteger ;
 durations . ensure capacity ( durations . size ( ) + tasks . size ( ) ) ;
 self durations . ensure capacity ( self durations . size ( ) + tasks . size ( ) ) ;
 for ( task task : tasks ) {
 durations . add ( task . duration nanos ) ;
 self durations . add ( task . duration nanos - task . get UNK duration ( ) ) ;
 total time += task . duration nanos ;
 }
 return total time ;
 }
comment:
START add all durations and UNK of the given function to the maps . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public void set autodetect ( boolean autodetect ) {
 this . autodetect mode = ( autodetect ? UNK l : UNK e ) ;
 }
comment:
START set whether to UNK UNK in the bean factory that this exporter runs in . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static int skip until ( string input , int pos , string characters ) {
 for ( ;
 pos < input . length ( ) ;
 pos ++ ) {
 if ( characters . index of ( input . char at ( pos ) ) != - DecimalInteger ) {
 break ;
 }
 }
 return pos ;
 }
comment:
START returns the input length if none of the requested characters can be found . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set catalog name ( string catalog name ) {
 this . catalog name = catalog name ;
 }
comment:
START set the name of the catalog for this context . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public static map info fragment new UNK ( context c ) {
 if ( utils . is UNK ( c ) ) {
 return inline info fragment . new instance ( ) ;
 }
 else {
 return UNK info fragment . new instance ( ) ;
 }
 }
comment:
START creates a new instance depending of the form factor of the device . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public boolean should vibrate ( int vibrate type ) {
 iaudio service service = get service ( ) ;
 try {
 return service . should vibrate ( vibrate type ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns whether a particular type should vibrate according to user settings and the current UNK mode . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .

code:
private static sky key select cycle child ( sky key key , list < sky key > graph path , int cycle start ) {
 return cycle start + DecimalInteger == graph path . size ( ) ? key : graph path . get ( cycle start + DecimalInteger ) ;
 }
comment:
START returns the child of this node that is in the cycle that was just found . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ nullable public final color state list get color state list ( @ color res int id ) {
 return get resources ( ) . get color state list ( id , get theme ( ) ) ;
 }
comment:
START returns a color state list associated with a particular resource id and styled for the current theme . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected float get bottom fading edge strength ( ) {
 return compute vertical scroll offset ( ) + compute vertical scroll extent ( ) < compute vertical scroll range ( ) ? DecimalFloatingPoint : DecimalFloatingPoint ;
 }
comment:
START returns the strength , or intensity , of the bottom faded edge . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set servlet name ( string servlet name ) {
 this . servlet name = servlet name ;
 }
comment:
START set the name of the servlet to wrap . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public void set attribute name ( string attribute name ) {
 this . attribute name = attribute name ;
 }
comment:
START set the name of the servlet context attribute to expose . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .

code:
public static < e > set view < e > difference ( final set < e > set1 , final set < ? > set2 ) {
 check not null ( set1 , String ) ;
 check not null ( set2 , String ) ;
 final predicate < object > not in set2 = predicates . not ( predicates . in ( set2 ) ) ;
 return new set view < e > ( ) {
 @ override public unmodifiable iterator < e > iterator ( ) {
 return iterators . filter ( set1 . iterator ( ) , not in set2 ) ;
 }
 @ override public int size ( ) {
 return iterators . size ( iterator ( ) ) ;
 }
 @ override public boolean is empty ( ) {
 return set2 . contains all ( set1 ) ;
 }
 @ override public boolean contains ( object element ) {
 return set1 . contains ( element ) && ! set2 . contains ( element ) ;
 }
 }
 ;
 }
comment:
START returns an unmodifiable <b> view </b> of the difference of two sets . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ skylark callable ( name = String , doc = String , struct field = true ) public nested set < artifact > get files to build ( ) {
 return files to build ;
 }
comment:
START returns the set of artifacts that are the `` output '' of this rule . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
protected final void remove request destruction callback ( string name ) {
 assert . not null ( name , String ) ;
 synchronized ( this . request destruction callbacks ) {
 this . request destruction callbacks . remove ( name ) ;
 }
 }
comment:
START remove the request UNK callback for the specified attribute , if any . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public int size ( ) {
 unparcel ( ) ;
 return map . size ( ) ;
 }
comment:
START returns the number of mappings contained in this bundle . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set min idle ( int min idle ) {
 this . min idle = min idle ;
 }
comment:
START set the minimum number of idle objects in the pool . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public map < data key , data asset > get assets ( ) {
 return assets ;
 }
comment:
START returns a list of assets . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get number of replicas ( ) {
 return settings . get as int ( index meta data . setting_ number_ of_ s , null ) ;
 }
comment:
START returns the number of replicas this index has . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set input ( allocation ain ) {
 input = ain ;
 set var ( DecimalInteger , ain ) ;
 }
comment:
START set the input of the blur . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set linear damping ( float linear damping ) {
 body . set linear damping ( linear damping ) ;
 }
comment:
START set the linear damping of the body . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public sentence suggestions info [ ] on get sentence suggestions multiple ( text info [ ] text infos , int suggestions limit ) {
 if ( text infos == null || text infos . length == DecimalInteger ) {
 return sentence level adapter . empty_ UNK UNK s ;
 }
 if ( g ) {
 log . d ( g , String + text infos . length + String + suggestions limit ) ;
 }
 if ( UNK level adapter == null ) {
 synchronized ( this ) {
 if ( UNK level adapter == null ) {
 final string locale str = get locale ( ) ;
 if ( ! text utils . is empty ( locale str ) ) {
 UNK level adapter = new sentence level adapter ( new locale ( locale str ) ) ;
 }
 }
 }
 }
 if ( UNK level adapter == null ) {
 return sentence level adapter . empty_ UNK UNK s ;
 }
 final int infos size = text infos . length ;
 final sentence suggestions info [ ] retval = new sentence suggestions info [ infos size ] ;
 for ( int i = DecimalInteger ;
 i < infos size ;
 ++ i ) {
 final sentence level adapter . sentence text info params text info params = UNK level adapter . get split words ( text infos [ i ] ) ;
 final array list < sentence level adapter . sentence word item > items = text info params . items ;
 final int items size = items . size ( ) ;
 final text info [ ] split text infos = new text info [ items size ] ;
 for ( int j = DecimalInteger ;
 j < items size ;
 ++ j ) {
 split text infos [ j ] = items . get ( j ) . mtext info ;
 }
 retval [ i ] = sentence level adapter . UNK suggestions ( text info params , on get suggestions multiple ( split text infos , suggestions limit , true ) ) ;
 }
 return retval ;
 }
comment:
START get UNK suggestions for specified UNK in an array of text info . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public percolate request builder set source ( percolate source builder source ) {
 source builder = source ;
 return this ;
 }
comment:
START sets the percolate request definition directly on the request . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set scheduler ( runner scheduler scheduler ) {
 this . scheduler = scheduler ;
 }
comment:
START sets a scheduler that determines the order and UNK of children . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
@ non null public list < session info > get my sessions ( ) {
 try {
 return installer . get my sessions ( UNK package name , muser id ) . get list ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START return list of all known install sessions owned by the calling app . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public atlas region add region ( string name , texture region texture region ) {
 return add region ( name , texture region . texture , texture region . get region x ( ) , texture region . get region y ( ) , texture region . get region width ( ) , texture region . get region height ( ) ) ;
 }
comment:
START adds a region to the atlas . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
returns the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the given UNK .

code:
public string get error message ( ) {
 return error message ;
 }
comment:
START returns a more detailed error message about the cause of this error . END
BLUE1:0.571428571429
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public void set drop down anchor ( int id ) {
 mdrop down anchor id = id ;
 popup . set anchor view ( null ) ;
 }
comment:
START sets the view to which the auto-complete drop down list should anchor . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
binary memcache message set key length ( short key length ) {
 this . key length = key length ;
 return this ;
 }
comment:
START set the key length of the message . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public final observable < list < t > > buffer ( long timespan , time unit unit , scheduler scheduler ) {
 return buffer ( timespan , timespan , unit , scheduler ) ;
 }
comment:
START returns an observable that emits buffers of items it collects from the source observable . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
include scanner scanner for ( list < path fragment > quote include paths , list < path fragment > include paths ) ;
comment:
START returns the possibly shared scanner to be used for a given pair of include paths . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public http headers get headers ( ) {
 return this . headers ;
 }
comment:
START returns the headers of this entity . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
return the UNK of the given UNK .
returns the UNK of the UNK

code:
public final void set float ( string name , float value ) {
 map . put ( name , new float ( value ) ) ;
 }
comment:
START sets the value of a float key . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public boolean set priority ( bluetooth device device , int priority ) {
 if ( g ) log ( String + device + String + priority + String ) ;
 if ( service != null && is enabled ( ) && is valid device ( device ) ) {
 if ( priority != bluetooth profile . priority_ f && priority != bluetooth profile . priority_ n ) {
 return false ;
 }
 try {
 return service . set priority ( device , priority ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , log . get stack trace string ( new throwable ( ) ) ) ;
 return false ;
 }
 }
 if ( service == null ) log . w ( g , String ) ;
 return false ;
 }
comment:
START set priority of the profile the device should already be paired . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK , in the UNK .

code:
public void set timeout ms ( final long timeout ms ) {
 UNK ms = timeout ms ;
 }
comment:
START sets the time in milliseconds after which an item in the undo state should automatically UNK . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK

code:
public int get depth ( throwable ex ) {
 return get depth ( ex . get class ( ) , DecimalInteger ) ;
 }
comment:
START return the depth of the UNK matching . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public set < string > allowed request headers ( ) {
 return collections . unmodifiable set ( allowed request headers ) ;
 }
comment:
START returns the allowed set of request headers . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
protected configuration distinguisher get configuration distinguisher ( ) {
 return configuration distinguisher . ios_ n ;
 }
comment:
START returns the configuration UNK for this transition instance . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int index of child ( view child ) {
 final int count = mchildren count ;
 final view [ ] children = children ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) {
 if ( children [ i ] == child ) {
 return i ;
 }
 }
 return - DecimalInteger ;
 }
comment:
START returns the position in the group of the specified child view . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public string to string ( ) {
 string buffer buf = new string buffer ( ) ;
 buf . append ( get class ( ) . get name ( ) ) ;
 buf . append ( String ) ;
 buf . append ( capacity ( ) ) ;
 buf . append ( String ) ;
 buf . append ( position ( ) ) ;
 buf . append ( String ) ;
 buf . append ( limit ( ) ) ;
 return buf . to string ( ) ;
 }
comment:
START returns a string represents of the state of this int buffer . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public string get field ( int n ) {
 if ( parsed == null ) {
 parsed = UNK args ( mraw event ) ;
 }
 n += DecimalInteger ;
 if ( n > parsed . length ) return null ;
 return parsed [ n ] ;
 }
comment:
START find the UNK field of the event . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public term vectors request builder set field statistics ( boolean field statistics ) {
 request . field statistics ( field statistics ) ;
 return this ;
 }
comment:
START sets whether to return the field statistics for each term in the shard or skip . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public string get persistence unit name ( ) {
 return this . persistence unit name ;
 }
comment:
START return the name of the persistence unit to manage transactions for , if any . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public abstract short get short ( char sequence name , short default value ) ;
comment:
START returns the short value of a header with the specified name . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ option ( long name = String , arg name = String ) @ default value ( String ) @ description ( String ) public void set instances ( int instances ) {
 this . instances = instances ;
 }
comment:
START sets the number of instance of the verticle to create . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public transition remove target ( int target id ) {
 if ( target id > DecimalInteger ) {
 mtarget ids . remove ( ( integer ) target id ) ;
 }
 return this ;
 }
comment:
START removes the given target id from the list of ids that this transition is interested in animating . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
void add listener ( final action listener < t > listener ) ;
comment:
START add an action listener to be invoked when a response has received . END
BLUE1:0.571428571429
--generate--
sets the listener to be UNK .
sets the listener to be used for the UNK .
sets the listener to be used to the UNK .
sets the listener to be used to the UNK of the UNK .
sets the listener to be used to the UNK of the given UNK .

code:
public map < long , cancellable task > get cancellable tasks ( ) {
 hash map < long , cancellable task > task hash map = new hash map < > ( ) ;
 for ( cancellable task holder holder : cancellable tasks . values ( ) ) {
 task hash map . put ( holder . get task ( ) . get id ( ) , holder . get task ( ) ) ;
 }
 return collections . unmodifiable map ( task hash map ) ;
 }
comment:
START returns the list of currently running tasks on the node that can be cancelled END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set time ( float time ) {
 this . time = time ;
 }
comment:
START sets the time spent waiting for the delay . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public string get name ( ) {
 return this . name ;
 }
comment:
START return the name of the repository . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public string determine output file system ( ) {
 if ( get output service ( ) != null ) {
 try ( auto profiler p = UNK ( String , profiler task . o ) ) {
 return get output service ( ) . get files system name ( ) ;
 }
 }
 return workspace . get output base filesystem type name ( ) ;
 }
comment:
START returns the name of the file system we are writing output to . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private static string values ( token [ ] tokens ) {
 string builder buffer = new string builder ( ) ;
 for ( token token : tokens ) {
 if ( buffer . length ( ) > DecimalInteger ) {
 buffer . append ( String ) ;
 }
 buffer . append ( token . kind . name ( ) ) ;
 if ( token . value != null ) {
 buffer . append ( String ) . append ( token . value ) . append ( String ) ;
 }
 }
 return buffer . to string ( ) ;
 }
comment:
START returns a string containing the names of the tokens and their associated values . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static pair < view , string > [ ] create safe transition participants ( @ non null activity activity , boolean include status bar , @ nullable pair ... other participants ) {
 view decor = activity . get window ( ) . get decor view ( ) ;
 view status bar = null ;
 if ( include status bar ) {
 status bar = decor . find view by id ( android . r . id . status bar background ) ;
 }
 view nav bar = decor . find view by id ( android . r . id . navigation bar background ) ;
 list < pair > participants = new array list < > ( DecimalInteger ) ;
 add non null view to transition participants ( status bar , participants ) ;
 add non null view to transition participants ( nav bar , participants ) ;
 if ( other participants != null && ! ( other participants . length == DecimalInteger && other participants [ DecimalInteger ] == null ) ) {
 participants . add all ( arrays . as list ( other participants ) ) ;
 }
 return participants . to array ( new pair [ participants . size ( ) ] ) ;
 }
comment:
START create the transition UNK required during a activity transition while UNK UNK with the system ui . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public float get gradient center x ( ) {
 return mgradient state . mcenter x ;
 }
comment:
START returns the center x location of this gradient in pixels . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public term vectors request builder set term statistics ( boolean term statistics ) {
 request . term statistics ( term statistics ) ;
 return this ;
 }
comment:
START sets whether to return the term statistics for each term in the shard or skip . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set method ( compression method ) {
 if ( method == null ) {
 throw new null pointer exception ( ) ;
 }
 if ( this . method != null ) {
 feature set . remove ( this . method . get feature ( ) ) ;
 }
 this . method = method ;
 feature set . add ( this . method . get feature ( ) ) ;
 }
comment:
START sets the compression method for the entry . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public string get url ( ) {
 return this . url ;
 }
comment:
START return the url of the resource that this view wraps . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
@ override public immutable sorted set < k > key set ( ) {
 return key set ;
 }
comment:
START returns an immutable sorted set of the keys in this map . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public void set hyphenation frequency ( @ layout . hyphenation frequency int hyphenation frequency ) {
 UNK frequency = hyphenation frequency ;
 if ( layout != null ) {
 null layouts ( ) ;
 request layout ( ) ;
 invalidate ( ) ;
 }
 }
comment:
START sets the UNK frequency . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ nullable public function signature . with values < object , skylark type > get signature ( ) {
 return signature ;
 }
comment:
START returns the signature of this function . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public static spanned from html ( string source , int flags ) {
 return from html ( source , flags , null , null ) ;
 }
comment:
START returns UNK styled text from the provided html string . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set audio channels ( int num channels ) {
 if ( num channels <= DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 set parameter ( String + num channels ) ;
 }
comment:
START sets the number of audio channels for recording . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ gwt incompatible public v [ ] [ ] to array ( class < v > value class ) {
 @ suppress warnings ( String ) v [ ] [ ] copy = ( v [ ] [ ] ) array . new instance ( value class , row list . size ( ) , column list . size ( ) ) ;
 for ( int i = DecimalInteger ;
 i < row list . size ( ) ;
 i ++ ) {
 system . arraycopy ( array [ i ] , DecimalInteger , copy [ i ] , DecimalInteger , array [ i ] . length ) ;
 }
 return copy ;
 }
comment:
START returns a UNK array with the table contents . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ android . view . remotable view method ( async impl = String ) public void set image i ( @ nullable uri uri ) {
 if ( resource != DecimalInteger || ( uri != uri && ( uri == null || uri == null || ! uri . equals ( uri ) ) ) ) {
 update drawable ( null ) ;
 resource = DecimalInteger ;
 uri = uri ;
 final int old width = mdrawable width ;
 final int old height = mdrawable height ;
 resolve uri ( ) ;
 if ( old width != mdrawable width || old height != mdrawable height ) {
 request layout ( ) ;
 }
 invalidate ( ) ;
 }
 }
comment:
START sets the content of this image view to the specified uri . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public long get start time us ( int chunk index ) {
 return chunk start times us [ chunk index ] ;
 }
comment:
START returns the start time of the specified chunk . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set gravity ( int gravity ) {
 mdrop down gravity = gravity ;
 }
comment:
START sets the alignment of the popup window relative to the anchor view . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public nested set < sdk framework > weak sdk frameworks ( ) {
 return this . weak sdk frameworks ;
 }
comment:
START returns the sdk frameworks to be linked UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
protected final file get test file ( string name ) throws exception {
 file file = new file ( get test dir ( ) , name ) ;
 if ( ! file . exists ( ) ) {
 l resource url = io test case . class . get resource ( String + name ) ;
 if ( resource url == null ) {
 return null ;
 }
 copy ( resource url , file ) ;
 }
 return file ;
 }
comment:
START returns the file with the given name under the UNK directory . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public class < ? > get actual type ( ) {
 return this . actual type ;
 }
comment:
START return the actual type of the instance found . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
returns the UNK of the UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the given .

code:
public void set logger name ( string logger name ) {
 this . default logger = log factory . get log ( logger name ) ;
 }
comment:
START set the name of the logger to use . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
compilation support add xcode settings ( builder xcode provider builder , objc common common ) {
 for ( compilation artifacts artifacts : common . get compilation artifacts ( ) . as set ( ) ) {
 xcode provider builder . set compilation artifacts ( artifacts ) ;
 }
 iterable < string > copts = iterables . concat ( objc configuration . get copts ( ) , attributes . copts ( ) ) ;
 iterable < string > include dir options = iterables . filter ( copts , include_ dir_ option_ in_ s ) ;
 iterable < string > copts without include dirs = iterables . filter ( copts , predicates . not ( include_ dir_ option_ in_ s ) ) ;
 immutable list . builder < path fragment > non propagated header search paths = new immutable list . builder < > ( ) ;
 for ( string include dir option : include dir options ) {
 non propagated header search paths . add ( new path fragment ( include dir option . substring ( DecimalInteger ) ) ) ;
 }
 iterable < path fragment > include system paths = common . get objc provider ( ) . get ( include_ m ) ;
 xcode provider builder . add headers ( attributes . hdrs ( ) ) . add headers ( attributes . textual hdrs ( ) ) . add user header search paths ( objc common . user header search paths ( build configuration ) ) . add header search paths ( String , attributes . header search paths ( build configuration . get genfiles fragment ( ) ) ) . add header search paths ( String , include system paths ) . add header search paths ( String , attributes . sdk includes ( ) ) . add non propagated header search paths ( String , non propagated header search paths . build ( ) ) . add compilation mode copts ( objc configuration . get copts for compilation mode ( ) ) . add copts ( copts without include dirs ) ;
 return this ;
 }
comment:
START sets UNK xcode project information on the given provider builder . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static void create instrumented jar action ( rule context rule context , java semantics semantics , list < artifact > metadata artifacts , artifact instrumented jar , string main class ) throws interrupted exception {
 new deploy archive builder ( semantics , rule context ) . set output jar ( instrumented jar ) . set java start class ( main class ) . set attributes ( new java target attributes . builder ( semantics ) . build ( ) ) . add runtime jars ( immutable list . copy of ( metadata artifacts ) ) . set compression ( deploy archive builder . compression . d ) . build ( ) ;
 }
comment:
START creates an action to aggregate all metadata artifacts into a single < UNK > _ UNK file . END
BLUE1:0.571428571429
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of UNK to .
used to the UNK of UNK to the given UNK .

code:
public list < throwable > get causes ( ) {
 return errors ;
 }
comment:
START returns one or more UNK that UNK to this initialization error . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static int get local instance count ( realm configuration configuration ) {
 return realm cache . get local thread count ( configuration ) ;
 }
comment:
START returns the current number of open realm instances on the thread calling this method . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean is multi pane ( ) {
 return has headers ( ) && UNK container . get visibility ( ) == view . e ;
 }
comment:
START returns true if this activity is showing multiple UNK -- the headers and a preference fragment . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public set < string > get query parameter names ( ) {
 if ( is opaque ( ) ) {
 throw new unsupported operation exception ( not_ l ) ;
 }
 string query = get encoded query ( ) ;
 if ( query == null ) {
 return collections . empty set ( ) ;
 }
 set < string > names = new linked hash set < string > ( ) ;
 int start = DecimalInteger ;
 do {
 int next = query . index of ( String , start ) ;
 int end = ( next == - DecimalInteger ) ? query . length ( ) : next ;
 int separator = query . index of ( String , start ) ;
 if ( separator > end || separator == - DecimalInteger ) {
 separator = end ;
 }
 string name = query . substring ( start , separator ) ;
 names . add ( decode ( name ) ) ;
 start = end + DecimalInteger ;
 }
 while ( start < query . length ( ) ) ;
 return collections . unmodifiable set ( names ) ;
 }
comment:
START returns a set of the unique names of all query parameters . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public json array add ( object value ) {
 objects . require non null ( value ) ;
 value = json . check and copy ( value , false ) ;
 list . add ( value ) ;
 return this ;
 }
comment:
START add an object to the json array . END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
add the UNK to the given UNK .
add the UNK to the UNK to the UNK .

code:
public more like this query builder unlike ( item [ ] unlike items ) {
 this . unlike items = optional . of nullable ( unlike items ) . or else ( new item [ DecimalInteger ] ) ;
 return this ;
 }
comment:
START sets the documents from which the terms should not be selected from . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ override @ suppress warnings ( String ) public abstract b clone ( ) ;
comment:
START returns a deep clone of this bootstrap which has the identical configuration . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final string get variable name ( ) {
 return this . variable name ;
 }
comment:
START return the expected name of the path variable . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public int get max num detected faces ( ) {
 return get int ( key_ max_ num_ UNK UNK w , DecimalInteger ) ;
 }
comment:
START gets the maximum number of detected UNK supported . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get master name ( ) {
 return get master name ( null ) ;
 }
comment:
START returns the name of the current master node in the cluster . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static inet4 address get UNK ipv4 address ( inet6 address ip ) {
 check argument ( is UNK address ( ip ) , String , to addr string ( ip ) ) ;
 return get inet4 address ( arrays . copy of range ( ip . get address ( ) , DecimalInteger , DecimalInteger ) ) ;
 }
comment:
START returns the ipv4 address embedded in an UNK address . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
int get UNK device roles ( int port id ) {
 return invalid_ device_ s ;
 }
comment:
START get the bit flags describing the UNK which UNK device can play . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public drawable get background scrim ( ) {
 return mbackground scrim ;
 }
comment:
START returns the window background UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string get namespace uri ( ) {
 return this . namespace uri ;
 }
comment:
START return the namespace uri of the service . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
@ beta public static < e > multiset < e > union ( final multiset < ? extends e > multiset1 , final multiset < ? extends e > multiset2 ) {
 check not null ( multiset1 ) ;
 check not null ( multiset2 ) ;
 return new abstract multiset < e > ( ) {
 @ override public boolean contains ( @ nullable object element ) {
 return multiset1 . contains ( element ) || multiset2 . contains ( element ) ;
 }
 @ override public boolean is empty ( ) {
 return multiset1 . is empty ( ) && multiset2 . is empty ( ) ;
 }
 @ override public int count ( object element ) {
 return math . max ( multiset1 . count ( element ) , multiset2 . count ( element ) ) ;
 }
 @ override set < e > create element set ( ) {
 return sets . union ( multiset1 . element set ( ) , multiset2 . element set ( ) ) ;
 }
 @ override iterator < entry < e > > entry iterator ( ) {
 final iterator < ? extends entry < ? extends e > > iterator1 = multiset1 . entry set ( ) . iterator ( ) ;
 final iterator < ? extends entry < ? extends e > > iterator2 = multiset2 . entry set ( ) . iterator ( ) ;
 return new abstract iterator < entry < e > > ( ) {
 @ override protected entry < e > compute next ( ) {
 if ( iterator1 . has next ( ) ) {
 entry < ? extends e > entry1 = iterator1 . next ( ) ;
 e element = entry1 . get element ( ) ;
 int count = math . max ( entry1 . get count ( ) , multiset2 . count ( element ) ) ;
 return immutable entry ( element , count ) ;
 }
 while ( iterator2 . has next ( ) ) {
 entry < ? extends e > entry2 = iterator2 . next ( ) ;
 e element = entry2 . get element ( ) ;
 if ( ! multiset1 . contains ( element ) ) {
 return immutable entry ( element , entry2 . get count ( ) ) ;
 }
 }
 return end of data ( ) ;
 }
 }
 ;
 }
 @ override int distinct elements ( ) {
 return element set ( ) . size ( ) ;
 }
 }
 ;
 }
comment:
START returns an unmodifiable view of the union of two multisets . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void set encoding ( string encoding ) {
 this . encoding = encoding ;
 }
comment:
START set the encoding of the free marker template file . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public list < access point > get access points ( ) {
 synchronized ( UNK points ) {
 return new array list < > ( UNK points ) ;
 }
 }
comment:
START gets the current list of access points . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public final list < UNK > get bottom UNK ( ) {
 return collections . unmodifiable list ( this . bottom UNK ) ;
 }
comment:
START get a read-only list of all the items on the bottom shelf @return the bottom shelf UNK END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long count ( ) {
 return stats . count ( ) ;
 }
comment:
START returns the number of pairs in the dataset . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
static void set phase ( UNK task task , string phase ) {
 if ( task != null ) {
 task . set phase ( phase ) ;
 }
 }
comment:
START sets the current phase on the task if it is n't null . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public collection < resource > get UNK resources ( ) {
 return collections . unmodifiable collection ( UNK resources ) ;
 }
comment:
START gets the resources UNK in the last run of the janitor . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public int new invoke dynamic ( final string name , final string desc , final handle bsm , final object ... bsm args ) {
 return new invoke dynamic item ( name , desc , bsm , bsm args ) . index ;
 }
comment:
START adds an invokedynamic reference to the constant pool of the class being build . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public set < string > get unconditional classes ( ) {
 return collections . unmodifiable set ( this . unconditional classes ) ;
 }
comment:
START returns the names of the classes that were evaluated but were not conditional . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public list < resource transformer > get resource transformers ( ) {
 return this . resource transformers ;
 }
comment:
START return the list of configured resource transformers . END
BLUE1:0.571428571429
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the number of UNK .
return the number of all UNK .
return the number of all UNK in the UNK .

code:
public string get name ( ) {
 return mactivity info . name ;
 }
comment:
START returns the name for the UNK from android name in the manifest . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ thread safe iterable < sky key > get reverse deps ( ) throws interrupted exception ;
comment:
START returns a copy of the set of reverse dependencies . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void add keyboard layout for input device ( input device identifier identifier , string keyboard layout descriptor ) {
 if ( identifier == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( keyboard layout descriptor == null ) {
 throw new illegal argument exception ( String ) ;
 }
 try {
 im . add keyboard layout for input device ( identifier , keyboard layout descriptor ) ;
 }
 catch ( remote exception ex ) {
 throw ex . rethrow from system server ( ) ;
 }
 }
comment:
START adds the keyboard layout descriptor for the specified input device . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public int get max channel count ( ) {
 return max channel count ;
 }
comment:
START returns the maximum number of channels the device can play at the same time . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the number of all UNK .

code:
@ nullable public string get output directory name ( ) {
 return null ;
 }
comment:
START returns a fragment of the output directory name for this configuration . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
final int idx ( int index ) {
 return index + adjustment ;
 }
comment:
START returns the index with the needed UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public long UNK ( string key , int uid ) {
 try {
 final long millis = binder . UNK ( key , uid ) ;
 if ( millis == - DecimalInteger ) {
 return - DecimalInteger ;
 }
 return millis * DecimalInteger ;
 }
 catch ( remote exception e ) {
 log . w ( g , String , e ) ;
 return - DecimalInteger ;
 }
 }
comment:
START returns the last modification time of the key in milliseconds since the epoch . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final string string ( ) throws exception {
 buffered source source = source ( ) ;
 try {
 charset charset = util . UNK aware charset ( source , charset ( ) ) ;
 return source . read string ( charset ) ;
 }
 finally {
 util . close quietly ( source ) ;
 }
 }
comment:
START returns the response as a string decoded with the charset of the content- type header . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ nullable private long sparse array < weak reference < t > > get unthemed locked ( boolean create ) {
 if ( UNK entries == null && create ) {
 UNK entries = new long sparse array < > ( DecimalInteger ) ;
 }
 return UNK entries ;
 }
comment:
START returns the UNK cached data . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in an UNK .
returns the UNK for the given UNK , in the UNK .

code:
public int get pool size ( ) {
 return parallelism + ( short ) ( ctl > > > UNK t ) ;
 }
comment:
START returns the number of worker threads that have started but not yet terminated . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public rest filter chain filter chain ( rest filter execution filter ) {
 return new controller filter chain ( execution filter ) ;
 }
comment:
START returns a filter chain with the final filter being the provided filter . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ target api ( build . version_ s . jelly_ bean_ r1 ) public set < request manager fragment > get descendant request manager fragments ( ) {
 if ( root request manager fragment == this ) {
 return collections . unmodifiable set ( child request manager fragments ) ;
 }
 else if ( root request manager fragment == null || build . n . sdk_ t < build . version_ s . jelly_ bean_ r1 ) {
 return collections . empty set ( ) ;
 }
 else {
 hash set < request manager fragment > descendants = new hash set < > ( ) ;
 for ( request manager fragment fragment : root request manager fragment . get descendant request manager fragments ( ) ) {
 if ( is descendant ( fragment . get parent fragment ( ) ) ) {
 descendants . add ( fragment ) ;
 }
 }
 return collections . unmodifiable set ( descendants ) ;
 }
 }
comment:
START returns the set of fragments that this request manager fragment 's parent is a parent to . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
private multimap < class < ? > , subscriber > find all subscribers ( object listener ) {
 multimap < class < ? > , subscriber > methods in listener = hash multimap . create ( ) ;
 class < ? > clazz = listener . get class ( ) ;
 for ( method method : get annotated methods ( clazz ) ) {
 class < ? > [ ] parameter types = method . get parameter types ( ) ;
 class < ? > event type = parameter types [ DecimalInteger ] ;
 methods in listener . put ( event type , subscriber . create ( bus , listener , method ) ) ;
 }
 return methods in listener ;
 }
comment:
START returns all subscribers for the given listener grouped by the type of event they subscribe to . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ requires permission ( manifest . permission . h ) public int get UNK state ( ) {
 if ( service == null ) {
 log . e ( g , String ) ;
 return UNK e ;
 }
 try {
 return service . get UNK state ( this ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 catch ( null pointer exception npe ) {
 log . e ( g , String + get address ( ) + String , npe ) ;
 }
 return UNK e ;
 }
comment:
START get the UNK state of the remote device . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK for .

code:
application protocol config . selected listener failure behavior selected listener failure behavior ( ) ;
comment:
START get the desired behavior for the peer who is notified of the selected protocol . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of UNK UNK

code:
public set < string > get ids ( ) {
 return this . ids ;
 }
comment:
START returns the id set of all documents indexed by this UNK run END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static sslsocket factory get socket factory ( ) {
 return no UNK holder . default_ y ;
 }
comment:
START gets an singleton instance of the UNK socket factory . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
protected format get output format ( ) {
 return format . create audio sample format ( null , mime types . audio_ w , null , format . no_ e , format . no_ e , input format . channel count , input format . sample rate , c . encoding_ UNK t , null , null , DecimalInteger , null ) ;
 }
comment:
START returns the format of audio buffers output by the decoder . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public string to string ( ) {
 string builder buffer = new string builder ( DecimalInteger ) ;
 to string ( buffer , DecimalInteger ) ;
 buffer . set length ( buffer . length ( ) - DecimalInteger ) ;
 return buffer . to string ( ) ;
 }
comment:
START returns a description of the actor hierarchy , recursively . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public list < playback state . custom action > get custom actions ( ) {
 return mcustom actions ;
 }
comment:
START get the list of custom actions . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get attribute value ( string namespace , string name ) ;
comment:
START returns the value of the specified attribute as a string representation . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK in the given UNK .
returns the list of UNK UNK

code:
public void set column name ( string column name ) {
 this . column name = column name ;
 }
comment:
START set the name of the column in the sequence table . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .

code:
public void set sender ( socket address sender ) {
 this . sender = sender ;
 }
comment:
START sets the sender address of this packet . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK

code:
public mov avg pipeline aggregation builder model builder ( mov avg model builder model ) {
 if ( model == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . model = model . build ( ) ;
 return this ;
 }
comment:
START sets a UNK avg model for the moving average . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
int get named parameter count ( ) {
 return this . named parameter count ;
 }
comment:
START return the count of named parameters in the sql statement . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public int get block count ( ) {
 return size / block_ e ;
 }
comment:
START return the total number of mifare UNK blocks . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public binder on bind ( intent intent ) {
 return messenger . get binder ( ) ;
 }
comment:
START returns the UNK 's binder . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public boolean set scale x ( float scale x ) {
 return nset scale x ( mnative render node , scale x ) ;
 }
comment:
START sets the scale value for the display list on the x axis . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public property change event get property change event ( ) {
 return this . property change event ;
 }
comment:
START return the property change event that UNK in the problem . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public get request id ( string id ) {
 this . id = id ;
 return this ;
 }
comment:
START sets the id of the document to fetch . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
completable future < buffer result > get ( output buffer id buffer id , long token , data size max size ) ;
comment:
START gets pages from the output buffer , and UNK all pages received from the last request . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public float get angle around rad ( final float axis x , final float axis y , final float axis z ) {
 final float d = vector3 . dot ( this . x , this . y , this . z , axis x , axis y , axis z ) ;
 final float l2 = quaternion . len2 ( axis x * d , axis y * d , axis z * d , this . w ) ;
 return math utils . is zero ( l2 ) ? DecimalFloatingPoint : ( float ) ( DecimalFloatingPoint * math . acos ( math utils . clamp ( ( float ) ( ( d < DecimalInteger ? - this . w : this . w ) / math . sqrt ( l2 ) ) , - DecimalFloatingPoint , DecimalFloatingPoint ) ) ) ;
 }
comment:
START get the angle in radians of the rotation around the specified axis . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public list < tombstone > get tombstones ( ) {
 return tombstones ;
 }
comment:
START get the current unmodifiable index UNK list . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public map < string , list < task info > > get per node tasks ( ) {
 if ( per node tasks == null ) {
 per node tasks = tasks . stream ( ) . collect ( collectors . grouping by ( t -> t . get task id ( ) . get node id ( ) ) ) ;
 }
 return per node tasks ;
 }
comment:
START returns the list of tasks by node END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static string print ( label label ) {
 return label == null ? String : label . to string ( ) ;
 }
comment:
START returns a suitable string for the user-friendly representation of the label . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get subtype ( ) {
 synchronized ( this ) {
 return subtype ;
 }
 }
comment:
START return a UNK integer describing the subtype of the network . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set soft input mode ( int mode ) {
 popup . set soft input mode ( mode ) ;
 }
comment:
START sets the operating mode for the soft input area . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public immutable list < string > get linkopts ( ) {
 preconditions . check state ( has attribute ( String , type . string_ t ) ) ;
 list < string > UNK linkopts = rule context . attributes ( ) . get ( String , type . string_ t ) ;
 list < string > result = new array list < > ( ) ;
 if ( UNK linkopts != null ) {
 boolean allow dash static = ! cpp configuration . force ignore dash static ( ) && ( cpp configuration . get dynamic mode ( ) != dynamic mode . y ) ;
 for ( string linkopt : UNK linkopts ) {
 if ( linkopt . equals ( String ) && ! allow dash static ) {
 continue ;
 }
 cpp helper . expand attribute ( rule context , result , String , linkopt , true ) ;
 }
 }
 if ( platform . is apple platform ( cpp configuration . get target cpu ( ) ) && result . contains ( String ) ) {
 rule context . attribute error ( String , String ) ;
 }
 return immutable list . copy of ( result ) ;
 }
comment:
START returns our own UNK from the rule attribute . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set min fling velocity ( int val ) {
 mmin fling velocity = val ;
 }
comment:
START sets the minimum UNK velocity for the panel @param val the new value END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
void add column ( session session , table handle table handle , column metadata column ) ;
comment:
START add the specified column to the table . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the given .
adds the UNK to the UNK to the given UNK .

code:
public final void set linear damping ( float linear damping ) {
 m_linear damping = linear damping ;
 }
comment:
START set the linear damping of the body . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
private boolean set last thumbnail locked ( bitmap thumbnail , int task width , int task height , int screen orientation ) {
 if ( mlast thumbnail != thumbnail ) {
 mlast thumbnail = thumbnail ;
 mlast thumbnail info . task width = task width ;
 mlast thumbnail info . task height = task height ;
 mlast thumbnail info . screen orientation = screen orientation ;
 if ( thumbnail == null ) {
 if ( mlast thumbnail file != null ) {
 mlast thumbnail file . delete ( ) ;
 }
 }
 else {
 service . mrecent tasks . save image ( thumbnail , mlast thumbnail file . get absolute path ( ) ) ;
 }
 return true ;
 }
 return false ;
 }
comment:
START sets the last thumbnail with the current task bounds . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder add exempt generator ( string exempt generator ) {
 exempt UNK . add ( exempt generator ) ;
 return this ;
 }
comment:
START add a generator to the UNK set . END
BLUE1:0.571428571429
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
private artifact get package relative derived artifact ( string package relative path , root root , artifact owner owner ) {
 return get derived artifact ( owner . get label ( ) . get package fragment ( ) . get relative ( package relative path ) , root , owner ) ;
 }
comment:
START gets a derived artifact for testing with path of the form UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public long get selected item id ( ) {
 ensure list ( ) ;
 return list . get selected item id ( ) ;
 }
comment:
START get the cursor row id of the currently selected list item . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public byte get byte ( string property ) {
 return get byte ( property , ( byte ) DecimalInteger ) ;
 }
comment:
START returns the value of a byte property , or NUMBER if the property has not been defined . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void translate x ( float amount ) {
 this . x += amount ;
 if ( dirty ) return ;
 final float [ ] vertices = this . vertices ;
 for ( int i = DecimalInteger ;
 i < vertices . length ;
 i += sprite . vertex_ e ) vertices [ i ] += amount ;
 }
comment:
START sets the x position relative to the current position where the sprite will be drawn . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public final void set integer ( string name , int value ) {
 map . put ( name , integer . value of ( value ) ) ;
 }
comment:
START sets the value of an integer key . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public long get primary term ( ) {
 return this . primary term ;
 }
comment:
START returns the primary term the index shard is on . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
public quaternion set from axes ( boolean normalize axes , float xx , float xy , float xz , float yx , float yy , float yz , float zx , float zy , float zz ) {
 if ( normalize axes ) {
 final float UNK = DecimalFloatingPoint / vector3 . len ( xx , xy , xz ) ;
 final float UNK = DecimalFloatingPoint / vector3 . len ( yx , yy , yz ) ;
 final float UNK = DecimalFloatingPoint / vector3 . len ( zx , zy , zz ) ;
 xx *= UNK ;
 xy *= UNK ;
 xz *= UNK ;
 yx *= UNK ;
 yy *= UNK ;
 yz *= UNK ;
 zx *= UNK ;
 zy *= UNK ;
 zz *= UNK ;
 }
 final float t = xx + yy + zz ;
 if ( t >= DecimalInteger ) {
 float s = ( float ) math . sqrt ( t + DecimalInteger ) ;
 w = DecimalFloatingPoint * s ;
 s = DecimalFloatingPoint / s ;
 x = ( zy - yz ) * s ;
 y = ( xz - zx ) * s ;
 z = ( yx - xy ) * s ;
 }
 else if ( ( xx > yy ) && ( xx > zz ) ) {
 float s = ( float ) math . sqrt ( DecimalFloatingPoint + xx - yy - zz ) ;
 x = s * DecimalFloatingPoint ;
 s = DecimalFloatingPoint / s ;
 y = ( yx + xy ) * s ;
 z = ( xz + zx ) * s ;
 w = ( zy - yz ) * s ;
 }
 else if ( yy > zz ) {
 float s = ( float ) math . sqrt ( DecimalFloatingPoint + yy - xx - zz ) ;
 y = s * DecimalFloatingPoint ;
 s = DecimalFloatingPoint / s ;
 x = ( yx + xy ) * s ;
 z = ( zy + yz ) * s ;
 w = ( xz - zx ) * s ;
 }
 else {
 float s = ( float ) math . sqrt ( DecimalFloatingPoint + zz - xx - yy ) ;
 z = s * DecimalFloatingPoint ;
 s = DecimalFloatingPoint / s ;
 x = ( xz + zx ) * s ;
 y = ( zy + yz ) * s ;
 w = ( yx - xy ) * s ;
 }
 return this ;
 }
comment:
START sets the quaternion from the given x , y and z-axis . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
private iterable < artifact > blacklisted ( iterable < artifact > proto files ) {
 return immutable set . copy of ( iterables . filter ( proto files , is blacklist proto ) ) ;
 }
comment:
START returns UNK protos from the given protos . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public static skylark class object get skylark struct ( ) {
 skylark class object constructor constructor = skylark class object constructor . create native ( String ) ;
 hash map < string , object > fields = new hash map < > ( ) ;
 for ( platform type type : values ( ) ) {
 fields . put ( type . skylark key , type ) ;
 }
 return new skylark class object ( constructor , fields ) ;
 }
comment:
START returns a skylark struct that contains the instances of this enum . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
protected void force set component count ( int count ) {
 mcomponent count actual = count ;
 }
comment:
START sets the component count of this tag . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
private long size in bytes ( long min generation ) {
 try ( releasable lock ignored = read lock . acquire ( ) ) {
 ensure open ( ) ;
 return stream . concat ( readers . stream ( ) , stream . of ( current ) ) . filter ( r -> r . get generation ( ) >= min generation ) . map to long ( base translog reader :: size in bytes ) . sum ( ) ;
 }
 }
comment:
START returns the size in bytes of the translog files that are n't committed to lucene . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public int get max size ( ) {
 return this . max size ;
 }
comment:
START return the maximum size of the pool . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public uri get gateway address ( ) {
 return UNK address ;
 }
comment:
START returns the gateway address to UNK when placing the call . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public static native int list modules ( array list < module properties > modules ) ;
comment:
START returns a list of descriptors for all hardware modules loaded . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to be UNK .
returns the list of UNK UNK UNK

code:
int get size ( ) {
 int size = DecimalInteger ;
 if ( value != DecimalInteger ) {
 cw . new f8 ( String ) ;
 size += DecimalInteger ;
 }
 if ( ( access & opcodes . acc_ c ) != DecimalInteger ) {
 if ( ( cw . version & 0x f ) < opcodes . v1_5 || ( access & class writer . acc_ synthetic_ e ) != DecimalInteger ) {
 cw . new f8 ( String ) ;
 size += DecimalInteger ;
 }
 }
 if ( ( access & opcodes . acc_ d ) != DecimalInteger ) {
 cw . new f8 ( String ) ;
 size += DecimalInteger ;
 }
 if ( class reader . s && signature != DecimalInteger ) {
 cw . new f8 ( String ) ;
 size += DecimalInteger ;
 }
 if ( class reader . s && anns != null ) {
 cw . new f8 ( String ) ;
 size += DecimalInteger + anns . get size ( ) ;
 }
 if ( class reader . s && ianns != null ) {
 cw . new f8 ( String ) ;
 size += DecimalInteger + ianns . get size ( ) ;
 }
 if ( class reader . s && tanns != null ) {
 cw . new f8 ( String ) ;
 size += DecimalInteger + tanns . get size ( ) ;
 }
 if ( class reader . s && itanns != null ) {
 cw . new f8 ( String ) ;
 size += DecimalInteger + itanns . get size ( ) ;
 }
 if ( attrs != null ) {
 size += attrs . get size ( cw , null , DecimalInteger , - DecimalInteger , - DecimalInteger ) ;
 }
 return size ;
 }
comment:
START returns the size of this field . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public static double convert lat or long to double ( rational [ ] coordinate , string reference ) {
 try {
 double degrees = coordinate [ DecimalInteger ] . to double ( ) ;
 double minutes = coordinate [ DecimalInteger ] . to double ( ) ;
 double seconds = coordinate [ DecimalInteger ] . to double ( ) ;
 double result = degrees + minutes / DecimalFloatingPoint + seconds / DecimalFloatingPoint ;
 if ( ( reference . equals ( String ) || reference . equals ( String ) ) ) {
 return - result ;
 }
 return result ;
 }
 catch ( array index out of bounds exception e ) {
 throw new illegal argument exception ( ) ;
 }
 }
comment:
START gets the double representation of the gps latitude or longitude coordinate . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ type public int get type ( ) {
 return type ;
 }
comment:
START returns the type of this tv input . END
BLUE1:0.571428571429
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
@ override public string to string ( ) {
 string builder sb = new string builder ( ) ;
 for ( string name : values . key set ( ) ) {
 string value = get as string ( name ) ;
 if ( sb . length ( ) > DecimalInteger ) sb . append ( String ) ;
 sb . append ( name + String + value ) ;
 }
 return sb . to string ( ) ;
 }
comment:
START returns a string containing a UNK , human-readable description of this object . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set comment ( byte [ ] comment ) throws zip exception {
 if ( comment == null ) {
 throw new null pointer exception ( ) ;
 }
 if ( comment . length > 0xffff ) {
 throw new zip exception ( string . format ( String , comment . length , 0xffff ) ) ;
 }
 this . comment = from bytes ( comment ) ;
 }
comment:
START sets the file comment from the raw byte data in the file . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public map < string , jar owner > get indirect mapping ( ) {
 return indirect jars to targets ;
 }
comment:
START returns the mapping for jars of indirect dependencies . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set axis value ( int axis , float value ) {
 switch ( axis ) {
 case axis_ x : x = value ;
 break ;
 case axis_ y : y = value ;
 break ;
 case axis_ e : pressure = value ;
 break ;
 case axis_ e : size = value ;
 break ;
 case axis_ touch_ r : touch major = value ;
 break ;
 case axis_ touch_ r : touch minor = value ;
 break ;
 case axis_ tool_ r : tool major = value ;
 break ;
 case axis_ tool_ r : tool minor = value ;
 break ;
 case axis_ n : orientation = value ;
 break ;
 default : {
 if ( axis < DecimalInteger || axis > DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 final long bits = mpacked axis bits ;
 final long axis bit = UNK l > > > axis ;
 final int index = long . bit count ( bits & ~ ( 0x l > > > axis ) ) ;
 float [ ] values = mpacked axis values ;
 if ( ( bits & axis bit ) == DecimalInteger ) {
 if ( values == null ) {
 values = new float [ initial_ packed_ axis_ s ] ;
 mpacked axis values = values ;
 }
 else {
 final int count = long . bit count ( bits ) ;
 if ( count < values . length ) {
 if ( index != count ) {
 system . arraycopy ( values , index , values , index + DecimalInteger , count - index ) ;
 }
 }
 else {
 float [ ] new values = new float [ count * DecimalInteger ] ;
 system . arraycopy ( values , DecimalInteger , new values , DecimalInteger , index ) ;
 system . arraycopy ( values , index , new values , index + DecimalInteger , count - index ) ;
 values = new values ;
 mpacked axis values = values ;
 }
 }
 mpacked axis bits = bits | axis bit ;
 }
 values [ index ] = value ;
 }
 }
 }
comment:
START sets the value associated with the specified axis . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public int get buffer capacity in frames ( ) {
 return UNK ( ) ;
 }
comment:
START returns the maximum size of the audio track buffer in frames . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public void set width ( int width ) {
 this . width = width ;
 }
comment:
START sets the width of the outline . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public boolean is visible to user ( ) {
 return get boolean property ( boolean_ property_ UNK to_ r ) ;
 }
comment:
START gets whether this node is visible to the user . END
BLUE1:0.571428571429
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK .

code:
public void set url ( string url ) {
 this . url = url ;
 }
comment:
START set the url of the resource that this view wraps . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public static < e > immutable list < e > copy of ( e [ ] elements ) {
 switch ( elements . length ) {
 case DecimalInteger : return immutable list . of ( ) ;
 case DecimalInteger : return new singleton immutable list < e > ( elements [ DecimalInteger ] ) ;
 default : return new regular immutable list < e > ( check elements not null ( elements . clone ( ) ) ) ;
 }
 }
comment:
START returns an immutable list containing the given elements , in order . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
private void set value internal ( int current , boolean notify change ) {
 if ( value == current ) {
 return ;
 }
 if ( UNK selector wheel ) {
 current = get wrapped selector index ( current ) ;
 }
 else {
 current = math . max ( current , mmin value ) ;
 current = math . min ( current , mmax value ) ;
 }
 int previous = value ;
 value = current ;
 update input text view ( ) ;
 if ( notify change ) {
 notify change ( previous , current ) ;
 }
 initialize selector wheel indices ( ) ;
 invalidate ( ) ;
 }
comment:
START sets the current value of this number picker . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
int get segment num ( long time us , long period duration us ) ;
comment:
START returns the segment number of the segment containing a given media time . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int set master election endpoint ( inet socket address UNK ) {
 if ( check dead server ( ) ) return error_ dead_ t ;
 return utils . transact set UNK ( method_ set_ master_ election_ t , UNK ) ;
 }
comment:
START sets the ip endpoint used by the common time service to participate in the master election protocol . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public list < component name > get active admins ( ) {
 throw if parent instance ( String ) ;
 return get active admins as user ( my user id ( ) ) ;
 }
comment:
START return a list of all currently active device UNK ' component names . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get bundle id ( ) {
 return bundle id ;
 }
comment:
START returns the identifier of this bundle . END
BLUE1:0.571428571429
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public static final void set application object ( binder app ) {
 mapplication object = app ;
 }
comment:
START set the object identifying this UNK , for reporting UNK errors . END
BLUE1:0.571428571429
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public i get url ( ) {
 return this . url ;
 }
comment:
START return the url of the request . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
@ suppress warnings ( String ) < e > nested set < e > empty set ( ) {
 return ( nested set < e > ) empty set ;
 }
comment:
START returns an empty set of the given ordering . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public list < string > get warnings ( ) {
 return collections . unmodifiable list ( warnings ) ;
 }
comment:
START returns an immutable view of the warnings associated with this test . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , if any

code:
@ override public long minimum long ( long column index ) {
 return native minimum int ( native ptr , column index ) ;
 }
comment:
START returns the minimum value of the cells in a column . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static int max h264 UNK frame size ( ) throws decoder query exception {
 if ( max h264 UNK frame size == - DecimalInteger ) {
 int result = DecimalInteger ;
 media codec info decoder info = get decoder info ( mime types . video_ h264 , false ) ;
 if ( decoder info != null ) {
 for ( codec profile level profile level : decoder info . get profile levels ( ) ) {
 result = math . max ( UNK level to max frame size ( profile level . level ) , result ) ;
 }
 result = math . max ( result , DecimalInteger * DecimalInteger ) ;
 }
 max h264 UNK frame size = result ;
 }
 return max h264 UNK frame size ;
 }
comment:
START returns the maximum frame size supported by the default UNK decoder . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set uniform matrix ( string name , matrix4 matrix , boolean transpose ) {
 set uniform matrix ( fetch uniform location ( name ) , matrix , transpose ) ;
 }
comment:
START sets the uniform matrix with the given name . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public put index template request builder set order ( int order ) {
 request . order ( order ) ;
 return this ;
 }
comment:
START sets the order of this template if more than one template matches . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void set time offset in ns ( double value ) {
 mtime offset in ns = value ;
 }
comment:
START sets the time offset at which the measurement was taken in nanoseconds . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set offset ( int offset ) {
 this . offset = offset ;
 }
comment:
START sets the pixel offset to move the gradient up or down . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public abstract byte buf slice ( int index , int length ) ;
comment:
START returns a slice of this buffer 's UNK . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public view find hierarchy view ( string class name , int hash code ) ;
comment:
START returns a view to enable UNK UNK from custom children returned in dump view hierarchy with properties . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
private float get line extent ( int line , tab stops tab stops , boolean full ) {
 int start = get line start ( line ) ;
 int end = full ? get line end ( line ) : get line visible end ( line ) ;
 boolean has tabs = get line contains tab ( line ) ;
 directions directions = get line directions ( line ) ;
 int dir = get paragraph direction ( line ) ;
 text line tl = text line . obtain ( ) ;
 tl . set ( paint , text , start , end , dir , directions , has tabs , tab stops ) ;
 float width = tl . metrics ( null ) ;
 text line . recycle ( tl ) ;
 return width ;
 }
comment:
START returns the signed horizontal extent of the specified line , excluding leading margin . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final float get float ( string name ) {
 return ( ( float ) map . get ( name ) ) . float value ( ) ;
 }
comment:
START returns the value of a float key . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void clear ( ) throws exception {
 set stream ( open default wallpaper ( context , flag_ m ) , null , false ) ;
 }
comment:
START remove any currently set system wallpaper , UNK to the system 's built-in wallpaper . END
BLUE1:0.571428571429
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
returns the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given .

code:
public final void add validation error ( string error ) {
 validation errors . add ( error ) ;
 }
comment:
START add a new validation error to the accumulating validation errors @param error the error to add END
BLUE1:0.571428571429
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add the UNK to the UNK to .
add the UNK to the UNK to the UNK .
add the UNK UNK to the UNK

code:
public void set interpolator ( context context , @ interpolator res int res d ) {
 set interpolator ( animation utils . load interpolator ( context , res d ) ) ;
 }
comment:
START sets the acceleration curve for the indeterminate animation . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set divider ( @ nullable drawable divider ) {
 if ( divider != null ) {
 mdivider height = divider . get intrinsic height ( ) ;
 }
 else {
 mdivider height = DecimalInteger ;
 }
 divider = divider ;
 mdivider is opaque = divider == null || divider . get opacity ( ) == pixel format . e ;
 request layout ( ) ;
 invalidate ( ) ;
 }
comment:
START sets the drawable that will be drawn between each item in the list . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
private int find task view insert index ( task task , int task index ) {
 if ( task index != - DecimalInteger ) {
 list < task view > task views = get task views ( ) ;
 boolean found task view = false ;
 int task view count = task views . size ( ) ;
 for ( int i = DecimalInteger ;
 i < task view count ;
 i ++ ) {
 task tv task = task views . get ( i ) . get task ( ) ;
 if ( tv task == task ) {
 found task view = true ;
 }
 else if ( task index < stack . index of stack task ( tv task ) ) {
 if ( found task view ) {
 return i - DecimalInteger ;
 }
 else {
 return i ;
 }
 }
 }
 }
 return - DecimalInteger ;
 }
comment:
START returns the insert index for the task in the current set of task views . END
BLUE1:0.571428571429
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public ui selector package name matches ( string regex ) {
 return build selector ( selector_ package_ name_ x , pattern . compile ( regex ) ) ;
 }
comment:
START set the search criteria to match the package name of the application that contains the widget . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set error ( char sequence error ) {
 enforce not sealed ( ) ;
 error = error ;
 }
comment:
START sets the error text of this node . END
BLUE1:0.571428571429
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public string get name ( ) {
 return this . name ;
 }
comment:
START return the name of the source folder . END
BLUE1:0.571428571429
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
private static string convert UNK to utf8 ( string UNK ) {
 return new string ( UNK . get bytes ( standard charsets . UNK ) , standard charsets . f_8 ) ;
 }
comment:
START returns the proper utf-8 representation of a string that was UNK read using UNK . END
BLUE1:0.555555555556
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given data .
returns a immutable instance of the given type , in any .

code:
public document mapper for type document mapper with auto create ( string type ) {
 document mapper mapper = mappers . get ( type ) ;
 if ( mapper != null ) {
 return new document mapper for type ( mapper , null ) ;
 }
 if ( ! dynamic ) {
 throw new type missing exception ( index ( ) , new illegal state exception ( String ) , type ) ;
 }
 mapper = parse ( type , null , true ) ;
 return new document mapper for type ( mapper , mapper . mapping ( ) ) ;
 }
comment:
START returns the document mapper created , including a mapping update if the type has been dynamically created . END
BLUE1:0.555555555556
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable array of the UNK .
returns a immutable instance of the given key , in any .

code:
public update request builder set upsert ( string source ) {
 request . upsert ( source ) ;
 return this ;
 }
comment:
START sets the doc source of the update request to be used when the document does not exists . END
BLUE1:0.545454545455
--generate--
sets the listener that should be applied to the UNK .
sets the listener that should be applied to the UNK of .
sets the listener that should be added to the UNK .
sets the listener that should be applied to the current .
sets the listener that should be applied to the UNK of the UNK .

code:
public builder set on cancel listener ( on cancel listener on cancel listener ) {
 p . mon cancel listener = on cancel listener ;
 return this ;
 }
comment:
START sets the callback that will be called if the dialog is canceled . END
BLUE1:0.545454545455
--generate--
sets the listener that should be applied to the user .
sets the listener that should be applied to the given UNK .
sets the listener that should be applied to the current .
sets the listener that should be applied to the given .
sets the listener that should be applied to the user

code:
public void set web uri ( uri uri ) {
 mis app provided web uri = true ;
 uri = uri ;
 }
comment:
START set a web uri associated with the current data being shown to the user . END
BLUE1:0.545454545455
--generate--
set the listener that should be applied to the user .
set the listener that should be applied to the UNK .
set the listener that will be used to the UNK .
set the listener that should be applied to the current .
set the listener that will be used to the UNK of the UNK .

code:
public void set metadata update listener ( on metadata update listener l ) {
 synchronized ( mcache lock ) {
 mmetadata update listener = l ;
 }
 }
comment:
START sets the listener to be called whenever the metadata is updated . END
BLUE1:0.545454545455
--generate--
set the listener that should be applied to the user .
set the listener that should be applied to the given UNK .
set the listener that should be applied to the current .
set the listener that should be applied to the given .
set the listener that should be applied to the user

code:
public builder set positive button ( @ string res int text id , final on click listener listener ) {
 p . mpositive button text = p . context . get text ( text id ) ;
 p . mpositive button listener = listener ;
 return this ;
 }
comment:
START set a listener to be invoked when the positive button of the dialog is pressed . END
BLUE1:0.545454545455
--generate--
sets the listener that should be applied to the UNK .
sets the listener that should be applied to the given UNK .
sets the listener that should be applied to the current .
sets the listener that should be applied to the given .
sets the listener that should be applied to the UNK of the UNK .

code:
public builder set on dismiss listener ( on dismiss listener on dismiss listener ) {
 p . mon dismiss listener = on dismiss listener ;
 return this ;
 }
comment:
START sets the callback that will be called when the dialog is dismissed for any reason . END
BLUE1:0.545454545455
--generate--
sets the listener that should be applied to the user .
sets the listener that should be applied to the given UNK .
sets the listener that should be added to the given UNK .
sets the listener that should be applied to the current .
sets the listener that should be applied to the given .

code:
private boolean needs passthrough UNK ( ) {
 return util . sdk_ t < DecimalInteger && ( target encoding == c . encoding_ c3 || target encoding == c . encoding_ e_ c3 ) ;
 }
comment:
START returns whether to work around problems with passthrough audio tracks . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
public subprocess builder set stderr ( file file ) {
 this . stderr action = stream action . t ;
 this . stderr file = file ;
 return this ;
 }
comment:
START sets the file stderr is appended to . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set keep alive seconds ( int keep alive seconds ) {
 this . keep alive seconds = keep alive seconds ;
 }
comment:
START set the thread pool executor 's UNK seconds . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ non null public builder set UNK by biometric enrollment ( boolean invalidate key ) {
 UNK by biometric enrollment = invalidate key ;
 return this ;
 }
comment:
START sets whether this key should be invalidated on fingerprint UNK . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
private boolean can doze locked ( ) {
 return UNK == UNK g ;
 }
comment:
START returns true if the device is allowed to UNK in its current state . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public long get timestamp nanos ( ) {
 return UNK nanos ;
 }
comment:
START returns timestamp since boot when the scan record was observed . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ nullable public icon get icon ( ) {
 return icon ;
 }
comment:
START returns the icon to be used to describe this shortcut . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public final binder get display token locked ( ) {
 return mdisplay token ;
 }
comment:
START gets the surface UNK display token for this display . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set keep ( map < string , class reader > keep ) {
 keep = keep ;
 }
comment:
START sets the map of classes to output as-is , except if they have native methods END
BLUE1:0.5
--generate--
sets the UNK of UNK .
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set entries ( char sequence [ ] entries ) {
 entries = entries ;
 }
comment:
START sets the human-readable entries to be shown in the list . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public int get loop count ( ) {
 return UNK count ;
 }
comment:
START get the loop count of the animation . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public boolean has errors ( ) {
 return get analysis environment ( ) . has errors ( ) ;
 }
comment:
START returns whether this instance is known to have errors at this point during analysis . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is subscription durable ( ) {
 return this . subscription durable ;
 }
comment:
START return whether to make the subscription durable . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public string get code dir ( ) {
 return UNK dir ;
 }
comment:
START gets the location of the external resources for this worker on the local filesystem . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public float get dim alpha ( ) {
 return mdim alpha ;
 }
comment:
START returns the current dim . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
private void set is wrapped ( ) {
 mis root adapter = false ;
 }
comment:
START sets whether this instance is wrapped by another instance of animation adapter . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
void set executable ( boolean executable ) {
 is executable = executable ;
 mark change time ( ) ;
 }
comment:
START sets whether the current file is executable . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static boolean is external storage removable ( file path ) {
 final storage volume volume = storage manager . get storage volume ( path , user handle . my user id ( ) ) ;
 if ( volume != null ) {
 return volume . is removable ( ) ;
 }
 else {
 throw new illegal argument exception ( String + path ) ;
 }
 }
comment:
START returns whether the shared/external storage media at the given path is physically removable . END
BLUE1:0.5
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is action down ( motion event e ) {
 return e . get action masked ( ) == motion event . action_ n ;
 }
comment:
START returns true if event was triggered by a finger or stylus touch . END
BLUE1:0.5
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
private static boolean is supported version ( index meta data index meta data ) {
 return index meta data . get creation version ( ) . on or after ( version . UNK ) ;
 }
comment:
START returns true if this index can be supported by the current version of elasticsearch END
BLUE1:0.5
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is home stack ( int stack id ) {
 return stack id == home_ stack_ d ;
 }
comment:
START returns whether the given stack id is the home stack id . END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the UNK is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
public final int get port number ( ) {
 return mport number ;
 }
comment:
START returns the port number of this port @return the port 's port number END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public builder set description ( @ nullable char sequence description ) {
 description = description ;
 return this ;
 }
comment:
START sets the description . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public string get selected string ( ) {
 return mcurrent value ;
 }
comment:
START returns the currently selected string value . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public string get position description ( ) {
 return String ;
 }
comment:
START returns a message about the parser state suitable for printing error messages . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK in the UNK .
returns the number of UNK in the .

code:
protected boolean is expose class descriptor ( ) {
 return this . expose class descriptor ;
 }
comment:
START return whether to expose the jmx descriptor field `` class '' for managed operations . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public float get total length ( ) {
 return mtotal length ;
 }
comment:
START returns the total length of the path END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final int get start y ( ) {
 return mstart y ;
 }
comment:
START returns the start y offset in the scroll . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public rect get source bounds ( ) {
 return msource bounds ;
 }
comment:
START get the bounds of the sender of this intent , in screen coordinates . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public long get key injection delay ( ) {
 return mkey injection delay ;
 }
comment:
START gets the current delay between key presses when UNK text input . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
public int get item count ( ) {
 return mitem count ;
 }
comment:
START gets the number of items that can be visited . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public void set offset ( float offset ) {
 offset = utils . convert dp to pixel ( offset ) ;
 }
comment:
START sets the used x-axis offset for the labels on this axis . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public file system get file system ( ) {
 return file system ;
 }
comment:
START returns the file system in use . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public void set timer listener ( timer listener timer listener ) {
 this . timer listener = timer listener ;
 }
comment:
START set the timer listener to schedule . END
BLUE1:0.5
--generate--
set the listener to be used for the UNK .
set the listener to be used to the UNK .
set the listener to be used to the UNK of the UNK .
set the listener to be used to the UNK
set the listener to be used to the UNK of the UNK

code:
protected view get decor content ( ) {
 return UNK content ;
 }
comment:
START returns the view inflated . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is use soap action ( ) {
 return this . use soap action ;
 }
comment:
START return the `` UNK '' flag to specify on the stub . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
static boolean playback position should move ( int UNK ) {
 switch ( UNK ) {
 case playstate_ d : case playstate_ d : case playstate_ g : case playstate_ r : case playstate_ skipping_ s : case playstate_ skipping_ s : return false ;
 case playstate_ g : case playstate_ fast_ g : case playstate_ g : default : return true ;
 }
 }
comment:
START returns whether , for the given playback state , the playback position is expected to be changing . END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public final observable < observable < t > > window ( long timespan , long timeshift , time unit unit , int count , scheduler scheduler ) {
 return lift ( new operator window with time < t > ( timespan , timeshift , unit , count , scheduler ) ) ;
 }
comment:
START returns an observable that emits windows of items it collects from the source observable . END
BLUE1:0.5
--generate--
returns a immutable array of the UNK .
returns a immutable array of the UNK UNK .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given UNK .

code:
@ can ignore return value public to string helper add value ( int value ) {
 return add holder ( string . value of ( value ) ) ;
 }
comment:
START adds an unnamed value to the formatted output . END
BLUE1:0.5
--generate--
adds the given UNK to the UNK .
adds a new UNK to the UNK .
adds the given UNK to the given UNK .
adds a new UNK to the given UNK .
adds the given UNK to the UNK of the UNK .

code:
public static < k , v > immutable map < k , v > of ( k k1 , v v1 ) {
 return immutable bi map . of ( k1 , v1 ) ;
 }
comment:
START returns an immutable map containing a single entry . END
BLUE1:0.5
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given file .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public r set controller listener ( controller listener < ? super o > controller listener ) {
 mcontroller listener = controller listener ;
 return get this ( ) ;
 }
comment:
START sets the controller listener . END
BLUE1:0.5
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
public static native boolean is stream active UNK ( int stream , int in past ms ) ;
comment:
START return true if any track playing on this stream is active on a remote device . END
BLUE1:0.5
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is touch type ( int tool type ) {
 return tool type == motion event . tool_ type_ r || tool type == motion event . tool_ type_ s ;
 }
comment:
START returns true if event was triggered by a finger or stylus touch . END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
@ can ignore return value public to string helper add value ( long value ) {
 return add holder ( string . value of ( value ) ) ;
 }
comment:
START adds an unnamed value to the formatted output . END
BLUE1:0.5
--generate--
adds the given UNK to the UNK .
adds a new UNK to the UNK .
adds the given UNK to the given UNK .
adds a new UNK to the given UNK .
adds the given UNK to the UNK of the UNK .

code:
public static boolean is report UNK action ( action action ) {
 return action . get action type ( ) == middleman type . l ;
 }
comment:
START returns whether the action is worth reporting status about . END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the UNK is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean is valid key ( string key ) {
 return key_ n . matcher ( key ) . matches ( ) ;
 }
comment:
START returns true iff the given key is a valid settings key otherwise false END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public bundle get account credentials for UNK ( final account authenticator response response , final account account ) throws network error exception {
 new thread ( new runnable ( ) {
 @ override public void run ( ) {
 bundle result = new bundle ( ) ;
 result . put boolean ( account manager . key_ boolean_ t , false ) ;
 response . on result ( result ) ;
 }
 }
 ) . start ( ) ;
 return null ;
 }
comment:
START returns a bundle that contains whatever is required to clone the account on a different user . END
BLUE1:0.5
--generate--
returns a immutable array of the UNK .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable array of the UNK UNK .
returns a immutable array of the given UNK .

code:
public int get current mode ( ) {
 return mcurrent mode ;
 }
comment:
START gets the current mode of the port . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public long get frame number ( ) {
 return mframe number ;
 }
comment:
START returns the frame number for this request . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean use crosstool for binary ( ) {
 return experimental use crosstool for binary ;
 }
comment:
START returns true if UNK targets should use the crosstool for compiling and UNK . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public int get default shards ( ) {
 return default shards ;
 }
comment:
START returns default number of shards . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public float get shadow radius ( ) {
 return mshadow radius ;
 }
comment:
START gets the radius of the shadow layer . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static < e > immutable sorted set < e > of ( ) {
 return ( immutable sorted set < e > ) regular immutable sorted set . UNK empty_ t ;
 }
comment:
START returns the empty immutable sorted set . END
BLUE1:0.5
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given file .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public boolean set translation z ( float translation z ) {
 return nset translation z ( mnative render node , translation z ) ;
 }
comment:
START sets the translation value for the display list on the z axis . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public to string helper add value ( int value ) {
 return add holder ( string . value of ( value ) ) ;
 }
comment:
START adds an unnamed value to the formatted output . END
BLUE1:0.5
--generate--
adds the given UNK to the UNK .
adds a new UNK to the UNK .
adds the given UNK to the given UNK .
adds a new UNK to the given UNK .
adds the given UNK to the UNK of the UNK .

code:
public static boolean is wifi direct device ( url device url device ) {
 return url device . opt extra string ( type_ y , String ) . equals ( wifi_ UNK device_ e ) ;
 }
comment:
START gets if the device is wifi direct . END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
protected final boolean is open supported ( ) {
 return mfilter graph . runner . is open supported ( ) ;
 }
comment:
START returns whether this filter is allowed to use open l . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public void set canceled on touch outside ( boolean cancel ) {
 if ( cancel && ! cancelable ) {
 cancelable = true ;
 }
 window . set close on touch outside ( cancel ) ;
 }
comment:
START sets whether this dialog is canceled when touched outside the window 's bounds . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set UNK properties ( map < string , string > UNK properties ) {
 this . UNK properties = UNK properties ;
 }
comment:
START set UNK properties for marshalling and UNK . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given view .

code:
public static boolean has vary all ( headers response headers ) {
 return vary fields ( response headers ) . contains ( String ) ;
 }
comment:
START returns true if a UNK header contains an UNK . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK UNK UNK UNK

code:
public synchronized int get size in bytes ( ) {
 return msize in bytes ;
 }
comment:
START gets the total size in bytes of the elements in the map . END
BLUE1:0.5
--generate--
returns the number of UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK .
returns the number of all UNK .

code:
@ override public long get duration ( ) {
 return duration ;
 }
comment:
START gets the length of each of the child animations of this animator set . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public float get draw y ( ) {
 return mdraw y ;
 }
comment:
START returns the y-position in pixels where this highlight object was last drawn . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set startup delay ( int startup delay ) {
 this . startup delay = startup delay ;
 }
comment:
START set the number of seconds to wait after initialization before starting the scheduler asynchronously . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ nullable public recovery source recovery source ( ) {
 return recovery source ;
 }
comment:
START returns recovery source for the given shard . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public int get movement granularity ( ) {
 return UNK granularity ;
 }
comment:
START gets the movement granularity that was UNK . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ non null public string get id ( ) {
 return id ;
 }
comment:
START return the id of the shortcut . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public void set last access time ( ) {
 last access time = system . nano time ( ) ;
 }
comment:
START sets the UNK access time flag to now END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public static boolean is index using shadow replicas ( settings settings ) {
 return settings . get as boolean ( setting_ UNK s , false ) ;
 }
comment:
START returns true iff the given settings indicate that the index associated with these settings uses shadow replicas . END
BLUE1:0.5
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
private void remove UNK press callback ( ) {
 if ( ( mprivate flags & pflag_ d ) != DecimalInteger && UNK pressed state != null ) {
 set pressed ( false ) ;
 remove callbacks ( UNK pressed state ) ;
 }
 }
comment:
START remove the UNK detection timer . END
BLUE1:0.5
--generate--
remove the UNK of the given UNK .
remove the UNK of the given file .
returns the UNK of the UNK .
remove the UNK from the given UNK .
returns the UNK for the given UNK .

code:
public certificate pinner certificate pinner ( ) {
 return certificate pinner ;
 }
comment:
START returns this address 's certificate UNK , or null if this is not an https address . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
boolean is scrolling ( ) {
 return ! scroller . is finished ( ) ;
 }
comment:
START returns whether the UNK is scrolling . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public boolean is fullscreen mode ( ) {
 synchronized ( h ) {
 return UNK mode ;
 }
 }
comment:
START return true if it is fullscreen , UNK UNK your ui , else returns false . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
@ non null public speed get speed ( ) {
 return speed . l ;
 }
comment:
START returns the expected speed of this detector @return the expected speed of this detector END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
@ non null public file get reference dir ( ) {
 return UNK dir ;
 }
comment:
START returns the original user supplied directory where the lint search started . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public float get scale y ( ) {
 return scale y ;
 }
comment:
START returns the total vertical scaling applied to the polygon . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
private static boolean is blocked allocation method ( function node ) {
 return is on draw method ( node ) || is on measure method ( node ) || is on layout method ( node ) || is layout method ( node ) ;
 }
comment:
START returns whether the given method declaration represents a method where UNK objects is not allowed for performance reasons END
BLUE1:0.5
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
@ suppress warnings ( String ) public request builder < transcode type > listener ( @ nullable request listener < transcode type > request listener ) {
 this . request listener = request listener ;
 return this ;
 }
comment:
START sets a request builder listener to monitor the resource load . END
BLUE1:0.5
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the user .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
public static metrics is boring ( char sequence text , text paint paint ) {
 return is boring ( text , paint , text direction UNK . UNK r , null ) ;
 }
comment:
START returns null if not boring the width , ascent , and descent if boring . END
BLUE1:0.5
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static boolean parse boolean ( char [ ] text , int offset , int length , boolean default value ) {
 if ( text == null || length == DecimalInteger ) {
 return default value ;
 }
 if ( length == DecimalInteger ) {
 return text [ offset ] != String ;
 }
 if ( length == DecimalInteger ) {
 return ! ( text [ offset ] == String && text [ offset + DecimalInteger ] == String ) ;
 }
 if ( length == DecimalInteger ) {
 return ! ( text [ offset ] == String && text [ offset + DecimalInteger ] == String && text [ offset + DecimalInteger ] == String ) ;
 }
 if ( length == DecimalInteger ) {
 return ! ( text [ offset ] == String && text [ offset + DecimalInteger ] == String && text [ offset + DecimalInteger ] == String && text [ offset + DecimalInteger ] == String && text [ offset + DecimalInteger ] == String ) ;
 }
 return true ;
 }
comment:
START returns false if text is in false , NUMBER , off , no else , true END
BLUE1:0.5
--generate--
returns true if the view is UNK .
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the view is UNK in the UNK .

code:
public static boolean is pinned stack ( int stack id ) {
 return stack id == pinned_ stack_ d ;
 }
comment:
START returns whether the given stack id is the pinned stack id . END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the UNK is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
public boolean set rotation x ( float rotation x ) {
 return nset rotation x ( mnative render node , rotation x ) ;
 }
comment:
START sets the rotation value for the display list around the x axis . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get page number ( ) {
 return mpage number ;
 }
comment:
START gets the page number . END
BLUE1:0.5
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the current number of UNK .
returns the number of all UNK .
returns the number of UNK UNK

code:
public artifact get coverage report generator ( ) {
 return coverage report generator ;
 }
comment:
START returns the coverage report generator tool . END
BLUE1:0.5
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes that be UNK for the UNK .
returns the number of bytes that be UNK for the current .

code:
public matrix4 set ( matrix4 matrix ) {
 return this . set ( matrix . val ) ;
 }
comment:
START sets the matrix to the given matrix . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean is optimize ( ) {
 return this . optimize ;
 }
comment:
START return whether proxies should perform aggressive UNK . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK UNK UNK
sets whether to UNK UNK UNK UNK

code:
public int get column width ( ) {
 return mcolumn width ;
 }
comment:
START return the width of a column in the grid . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public options class provider get options ( ) {
 return options ;
 }
comment:
START returns the options associated with the execution . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK in the UNK .
returns the number of UNK in the .

code:
@ non null public binder get binder ( ) {
 return client ;
 }
comment:
START gets the binder needed to UNK with proxy provider in the platform . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean supports UNK linker ( ) {
 return supports UNK linker ;
 }
comment:
START returns whether the toolchain supports the UNK linker . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
protected label [ ] get labels ( ) {
 return null ;
 }
comment:
START returns the labels corresponding to this attribute . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public void set background drawable ( @ nullable drawable d ) {
 popup . set background drawable ( d ) ;
 }
comment:
START sets a drawable to be the background for the popup window . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the given .

code:
public void scale ( float amount ) {
 set scale ( scale x + amount , scale y + amount ) ;
 }
comment:
START sets the font 's scale relative to the current scale . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ override public string to string ( ) {
 return name ;
 }
comment:
START returns the human-readable name for this exit code . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public void set basic auth ( string username , string password ) {
 set basic auth ( username , password , false ) ;
 }
comment:
START sets basic authentication for the request . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public format get video format ( ) {
 return video format ;
 }
comment:
START returns the video format currently being played , or null if no video is being played . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set in UNK mode ( boolean in UNK mode ) {
 min UNK mode = in UNK mode ;
 }
comment:
START set whether the view is in UNK mode . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set auto dismissed ( boolean auto dismiss ) {
 if ( mauto dismiss controls == auto dismiss ) return ;
 mauto dismiss controls = auto dismiss ;
 }
comment:
START sets whether the zoom controls will be automatically dismissed after showing . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public boolean is bind empty multipart files ( ) {
 return this . bind empty multipart files ;
 }
comment:
START return whether to bind empty multipart file parameters . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
public icontent provider get icontent provider ( ) {
 return transport ;
 }
comment:
START returns the binder object for this provider . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get audio source ( ) {
 return UNK source ;
 }
comment:
START returns the audio recording source . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final view parent get parent ( ) {
 return parent ;
 }
comment:
START gets the parent of this view . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK in the UNK .
returns the number of UNK in the .

code:
public final boolean is fail early on global rollback only ( ) {
 return this . fail early on global rollback only ;
 }
comment:
START return whether to fail early in case of the transaction being globally marked as rollback-only . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean set translation x ( float translation x ) {
 return nset translation x ( mnative render node , translation x ) ;
 }
comment:
START sets the translation value for the display list on the x axis . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set entries ( char sequence [ ] entries ) {
 entries = entries ;
 }
comment:
START sets the human-readable entries to be shown in the list . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public int get sample rate ( ) {
 return msample rate ;
 }
comment:
START returns the configured audio sink sample rate in hz . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
public final string [ ] get column names ( ) {
 return column names ;
 }
comment:
START return the names of the columns . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public int get product id ( ) {
 return UNK id ;
 }
comment:
START returns a product id for the device . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
@ deprecated public static void set header ( http message message , char sequence name , object value ) {
 message . headers ( ) . set ( name , value ) ;
 }
comment:
START sets a new header with the specified name and value . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public boolean is cache consumers ( ) {
 return this . cache consumers ;
 }
comment:
START return whether to cache jms message consumers per jms session instance . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public fork join worker thread factory get factory ( ) {
 return factory ;
 }
comment:
START returns the factory used for constructing new workers . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public mat22 get transform ( ) {
 return box . r ;
 }
comment:
START gets the transform of the viewport , transforms around the center . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get keep alive seconds ( ) {
 synchronized ( this . pool size monitor ) {
 return this . keep alive seconds ;
 }
 }
comment:
START return the thread pool executor 's UNK seconds . END
BLUE1:0.5
--generate--
returns the UNK of UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public float get refresh rate ( ) {
 return UNK rate ;
 }
comment:
START returns the refresh rate in frames per second . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string get artifact prefix ( ) {
 return artifact prefix ;
 }
comment:
START returns the prefix to be added to all generated artifact names , can be null . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public tls version get tls version ( ) {
 return tls version ;
 }
comment:
START returns the connection 's tls version or null if the connection does n't use ssl . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public boolean is check fully populated ( ) {
 return this . check fully populated ;
 }
comment:
START return whether we 're UNK validating that all bean properties have been mapped from corresponding database fields . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public int get UNK flags ( ) {
 return mbidi flags ;
 }
comment:
START return the UNK flags on the paint . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public string get scope ( ) {
 return this . scope ;
 }
comment:
START return the name of the target scope for the bean . END
BLUE1:0.5
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public boolean is ignore invalid fields ( ) {
 return this . ignore invalid fields ;
 }
comment:
START return whether to ignore invalid fields when binding . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public void set from degrees ( float from degrees ) {
 if ( state . UNK degrees != from degrees ) {
 state . UNK degrees = from degrees ;
 invalidate self ( ) ;
 }
 }
comment:
START sets the start angle for rotation . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
protected http2 frame logger frame logger ( ) {
 return frame logger ;
 }
comment:
START returns the logger that is used for the encoder and decoder . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public answers get answer ( ) {
 return this . answer ;
 }
comment:
START return the UNK mode . END
BLUE1:0.5
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
protected boolean can go to UNK ( ) {
 return true ;
 }
comment:
START returns true if the local device allows the system to be put to UNK . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public int get fade duration ( ) {
 return mfade duration ;
 }
comment:
START gets the duration of the fade animation . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ nullable public decision get final decision ( ) {
 return final decision ;
 }
comment:
START returns the final decision made by the allocator on whether to assign the unassigned shard . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK

code:
public void set UNK properties ( properties UNK properties ) {
 this . UNK properties = UNK properties ;
 }
comment:
START set quartz properties , like `` UNK UNK '' . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK

code:
public void set selected ( t item ) {
 if ( items . contains ( item , false ) ) selection . set ( item ) ;
 else if ( selection . get required ( ) && items . size > DecimalInteger ) selection . set ( items . first ( ) ) ;
 else selection . clear ( ) ;
 }
comment:
START sets the selection to only the passed item , if it is a possible choice . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public int get num docs ( ) {
 return num docs ;
 }
comment:
START returns the number of documents in the in this commit END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public select box style get style ( ) {
 return style ;
 }
comment:
START returns the select box 's style . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public rect get system insets ( ) {
 return msystem insets ;
 }
comment:
START returns the last known system insets . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public object server error get error ( ) {
 return error ;
 }
comment:
START returns the error . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public void set full screen ( boolean is full screen ) {
 enforce not sealed ( ) ;
 set boolean property ( property_ full_ n , is full screen ) ;
 }
comment:
START sets if the source is taking the entire screen . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get start position ( ) {
 return mstart pos ;
 }
comment:
START gets the start position of this cursor window . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public collection < extra link time library > get extra libraries ( ) {
 return extra libraries ;
 }
comment:
START return the set of extra libraries . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public js root scope get root scope ( ) {
 return root scope ;
 }
comment:
START gets the UNK root scope . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public boolean is lazy init ( ) {
 return this . lazy init ;
 }
comment:
START return whether to lazily initialize the sqlexception translator for this accessor . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public builder set provide transitive module maps ( boolean provide transitive module maps ) {
 this . provide transitive module maps = provide transitive module maps ;
 return this ;
 }
comment:
START sets that the context will be used by a compilation that needs transitive module maps . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
protected int get current ifd ( ) {
 return mifd type ;
 }
comment:
START gets the id of current ifd . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public int get bearing accuracy ( ) {
 return UNK accuracy ;
 }
comment:
START returns a constant indicating the desired bearing accuracy . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set z ( int z ) {
 this . z = z ;
 }
comment:
START sets the field z . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public int get history size ( ) {
 return mhistory size ;
 }
comment:
START return the current maximum number of undo states . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public path fragment get jar executable ( ) {
 return jar ;
 }
comment:
START returns the path to the jar binary . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public multi match query builder operator ( operator operator ) {
 if ( operator == null ) {
 throw new illegal argument exception ( String + e + String ) ;
 }
 this . operator = operator ;
 return this ;
 }
comment:
START sets the operator to use when using a boolean query . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ nullable public string get address ( ) {
 return address ;
 }
comment:
START returns the address part . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
@ deprecated public path get exec root ( ) {
 return exec root ;
 }
comment:
START returns the execution root for the main package . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public shard id shard id ( ) {
 return shard id ;
 }
comment:
START returns the shards id @return id of the shard END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public void set region ( texture region region ) {
 texture = region . texture ;
 set region ( region . u , region . v , region . u2 , region . v2 ) ;
 }
comment:
START sets the texture and coordinates to the specified region . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public double get UNK in deg ( ) {
 return mazimuth in deg ;
 }
comment:
START gets the UNK in degrees . END
BLUE1:0.5
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .

code:
public static boolean is point in triangle ( vector3 point , vector3 t1 , vector3 t2 , vector3 t3 ) {
 v0 . set ( t1 ) . sub ( point ) ;
 v1 . set ( t2 ) . sub ( point ) ;
 v2 . set ( t3 ) . sub ( point ) ;
 float UNK = v0 . dot ( v1 ) ;
 float ac = v0 . dot ( v2 ) ;
 float bc = v1 . dot ( v2 ) ;
 float cc = v2 . dot ( v2 ) ;
 if ( bc * ac - cc * UNK < DecimalInteger ) return false ;
 float bb = v1 . dot ( v1 ) ;
 if ( UNK * bc - ac * bb < DecimalInteger ) return false ;
 return true ;
 }
comment:
START returns whether the given point is inside the triangle . END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the view is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the view is UNK in the UNK .

code:
public static metrics is boring ( char sequence text , text paint paint , text direction heuristic text dir ) {
 return is boring ( text , paint , text dir , null ) ;
 }
comment:
START returns null if not boring the width , ascent , and descent if boring . END
BLUE1:0.5
--generate--
returns true if the view is UNK .
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the view is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
public void set tap listener ( gesture detector . simple on gesture listener tap listener ) {
 UNK listener wrapper . set listener ( tap listener ) ;
 }
comment:
START sets the tap listener . END
BLUE1:0.5
--generate--
sets the listener that will be enabled .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .

code:
public ui scrollable set swipe dead zone percentage ( double swipe dead zone percentage ) {
 tracer . trace ( swipe dead zone percentage ) ;
 mswipe dead zone percentage = swipe dead zone percentage ;
 return this ;
 }
comment:
START sets the percentage of a widget 's size that 's considered as UNK zone when swiping . END
BLUE1:0.5
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that will be used for the UNK .
sets the listener that should be used to the UNK .
sets the listener that will be used to the UNK of the UNK .

code:
public json array add ( boolean value ) {
 objects . require non null ( value ) ;
 list . add ( value ) ;
 return this ;
 }
comment:
START add a boolean to the json array . END
BLUE1:0.5
--generate--
adds a new UNK to the UNK .
add the UNK to the UNK .
adds a new UNK to the given UNK .
add a new UNK to the given UNK .
adds a new UNK to the given .

code:
@ can ignore return value public to string helper add value ( double value ) {
 return add holder ( string . value of ( value ) ) ;
 }
comment:
START adds an unnamed value to the formatted output . END
BLUE1:0.5
--generate--
adds the given UNK to the UNK .
adds a new UNK to the UNK .
adds the given UNK to the given UNK .
adds a new UNK to the given UNK .
adds the given UNK to the UNK of the UNK .

code:
@ deprecated public void set picture listener ( picture listener listener ) {
 check thread ( ) ;
 provider . set picture listener ( listener ) ;
 }
comment:
START sets the picture listener . END
BLUE1:0.5
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the request .
sets the listener that should be added to the user .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the request

code:
public void set over scroll amount ( float amount , boolean on top , boolean animate , boolean cancel animators , boolean is UNK ) {
 if ( cancel animators ) {
 mstate animator . cancel over scroll animators ( on top ) ;
 }
 set over scroll amount internal ( amount , on top , animate , is UNK ) ;
 }
comment:
START set the effective over scroll amount which will be directly UNK in the layout . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean is force response encoding ( ) {
 return this . force response encoding ;
 }
comment:
START return whether the encoding should be UNK on responses . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public boolean is ignore nested path ( ) {
 return this . ignore nested path ;
 }
comment:
START return whether to ignore a nested path , if any . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public boolean add link ( path fragment from frag , path fragment to frag , string data val ) ;
comment:
START adds the given symlink to the tree . END
BLUE1:0.5
--generate--
remove the UNK from the given UNK .
remove the UNK of the given UNK .
sets the UNK for the given UNK .
remove the UNK from the given .
remove the UNK of the given .

code:
@ nullable public final label label ( ) {
 return label ;
 }
comment:
START returns the label for this frame . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public static boolean is simple type ( final string name ) {
 return e . UNK map . contains key ( name ) ;
 }
comment:
START returns whether or not a UNK type exists . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK UNK

code:
public final observable < list < t > > buffer ( int count , int skip ) {
 return lift ( new operator buffer with size < t > ( count , skip ) ) ;
 }
comment:
START returns an observable that emits buffers of items it collects from the source observable . END
BLUE1:0.5
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the UNK UNK .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public void set UNK uri ( string UNK uri ) {
 this . UNK uri = UNK uri ;
 }
comment:
START sets the entity uri . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
void set intent ( activity record r ) {
 mcalling uid = r . launched from uid ;
 mcalling package = r . launched from package ;
 set intent ( r . intent , r . info ) ;
 }
comment:
START sets the original intent , and the calling uid and package . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static boolean should create dynamic library ( attribute map rule ) {
 return ! rule . get ( String , type . n ) && cc library . UNK to have object files ( rule ) ;
 }
comment:
START returns true if this rule should create a dynamic library . END
BLUE1:0.5
--generate--
returns true if the UNK is UNK .
returns true if the view is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the view is UNK in the UNK .

code:
public void set ft supported ( boolean ft supported ) {
 this . UNK supported = ft supported ;
 }
comment:
START sets UNK as supported or not supported . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ nullable public bundle get extras ( ) {
 return extras ;
 }
comment:
START returns any extras that were added to the description . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public void set pub sub no local ( boolean pub sub no local ) {
 this . pub sub no local = pub sub no local ;
 }
comment:
START set whether to inhibit the delivery of messages published by its own connection . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public string get property name ( ) {
 return mproperty name ;
 }
comment:
START gets the name of the property that will be animated . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set traversal before ( view view ) {
 set traversal before ( view , undefined_ item_ d ) ;
 }
comment:
START sets the view before whose node this one should be visited during traversal . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public int get debug flags ( ) {
 return mdebug flags ;
 }
comment:
START get the current value of the debug flags . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public char sequence get dialog message ( ) {
 return mdialog message ;
 }
comment:
START returns the message to be shown on subsequent dialogs . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public embedded database builder set name ( string database name ) {
 this . database factory . set database name ( database name ) ;
 return this ;
 }
comment:
START set the name of the embedded database . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
public final string get scheme ( ) {
 return this . scheme ;
 }
comment:
START returns the scheme . END
BLUE1:0.5
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public int get number of layers ( ) {
 return layers . length ;
 }
comment:
START gets the number of layers . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
public void set updatable results ( boolean updatable results ) {
 if ( is compiled ( ) ) {
 throw new invalid data access api usage exception ( String ) ;
 }
 this . updatable results = updatable results ;
 }
comment:
START set whether to use statements that are capable of returning updatable result sets . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public float get max x ( ) {
 return max x ;
 }
comment:
START returns the maximum scroll value in the x direction . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set ft thumb supported ( boolean ft thumb supported ) {
 this . UNK thumb supported = ft thumb supported ;
 }
comment:
START sets UNK thumbnail as supported or not supported . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static boolean is UNK subtype ( types types , type mirror subtype , type mirror supertype ) {
 return types . is subtype ( types . UNK ( subtype ) , types . UNK ( supertype ) ) ;
 }
comment:
START returns true if the UNK type of subtype is a subtype of the UNK type of UNK . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
@ deprecated public final boolean is use cache control no store ( ) {
 return this . use cache control no store ;
 }
comment:
START return whether the http NUMBER cache-control header value `` UNK '' is used . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public static < k > array list < k > get all vendor keys ( class < k > key class ) {
 if ( key class == null ) {
 throw new null pointer exception ( ) ;
 }
 return ( array list < k > ) native get all vendor keys ( key class ) ;
 }
comment:
START return a list containing keys of the given key class for all defined vendor tags . END
BLUE1:0.5
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable array of the UNK UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .

code:
public float [ ] get vertices ( ) {
 return vertices ;
 }
comment:
START returns the vertices backing this sprite . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public axis get axis left ( ) {
 return maxis left ;
 }
comment:
START returns the left y-axis object . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set UNK texture ( boolean UNK texture ) {
 this . UNK texture = UNK texture ;
 }
comment:
START sets whether the font owns the texture . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public restore snapshot request builder set ignore index settings ( string ... ignore index settings ) {
 request . ignore index settings ( ignore index settings ) ;
 return this ;
 }
comment:
START sets the list of index settings and index settings groups that should n't be restored from snapshot END
BLUE1:0.5
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
public boolean should strip binaries ( ) {
 return strip binaries ;
 }
comment:
START returns whether or not to strip the binaries . END
BLUE1:0.5
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public int get body count ( ) {
 return m_body count ;
 }
comment:
START get the number of bodies . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set hour ( int hour ) {
 delegate . set hour ( hour ) ;
 }
comment:
START sets the currently selected hour using NUMBER time . END
BLUE1:0.5
--generate--
sets the UNK of UNK .
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public int get accuracy ( ) {
 return properties . accuracy ;
 }
comment:
START returns a constant describing horizontal accuracy of this provider . END
BLUE1:0.5
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get port ( ) {
 return this . port ;
 }
comment:
START return the port of the registry for the exported rmi service . END
BLUE1:0.5
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public void set conforming ( boolean conforming ) {
 is conforming = conforming ;
 }
comment:
START sets the boolean flag to indicate whether the cluster is conforming to all UNK conformity rules . END
BLUE1:0.454545454545
--generate--
sets the listener that will be applied to the user .
sets the listener that will be applied to the UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the UNK of the UNK .
sets the listener that will be applied to the user

code:
@ system api public void set audio policy focus listener ( audio policy focus listener l ) {
 mfocus listener = l ;
 }
comment:
START sets the audio focus listener for the policy . END
BLUE1:0.454545454545
--generate--
sets the listener that will be applied to the user .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .

code:
public ui scrollable set as horizontal list ( ) {
 tracer . trace ( ) ;
 mis vertical list = false ;
 return this ;
 }
comment:
START set the direction of UNK to be horizontal when performing scroll actions . END
BLUE1:0.454545454545
--generate--
sets the listener that should be applied to the UNK .
sets the listener that should be applied to the given UNK .
sets the listener that should be applied to the current UNK .
sets the listener that should be applied to the current .
sets the listener that should be applied to the UNK of the UNK .

code:
public void set on seek bar change listener ( on seek bar change listener l ) {
 mon seek bar change listener = l ;
 }
comment:
START sets a listener to receive notifications of changes to the UNK bar 's progress level . END
BLUE1:0.454545454545
--generate--
sets the listener that will be applied to the request .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .
sets the listener that will be applied to the request

code:
public void set on drawer scroll listener ( on drawer scroll listener on drawer scroll listener ) {
 mon drawer scroll listener = on drawer scroll listener ;
 }
comment:
START sets the listener that receives a notification when the drawer starts or ends a scroll . END
BLUE1:0.454545454545
--generate--
sets the listener to be used for the given UNK .
set the listener to be used for the given UNK .
sets the listener to be used for the current UNK .
set the listener to be used for the current UNK .
sets the listener to be used for the current .

code:
@ override public closeable reference < bitmap > create bitmap internal ( int width , int height , bitmap . config bitmap config ) {
 int size in bytes = bitmap util . get size in byte for bitmap ( width , height , bitmap config ) ;
 bitmap bitmap = mbitmap pool . get ( size in bytes ) ;
 bitmaps . UNK bitmap ( bitmap , width , height , bitmap config ) ;
 return closeable reference . of ( bitmap , mbitmap pool ) ;
 }
comment:
START creates a bitmap of the specified width and height . END
BLUE1:0.444444444444
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given data .
returns a immutable instance of the given type , in any .

code:
public void remove page ( int page index ) {
 throw if closed ( ) ;
 throw if page not in document ( page index ) ;
 mpage count = native remove page ( mnative document , page index ) ;
 }
comment:
START removes the page with a given index . END
BLUE1:0.444444444444
--generate--
creates a immutable instance of the given values .
creates a immutable instance of the given type .
creates a immutable instance of the given file .
creates a immutable instance of the given data .
creates a immutable instance of the given UNK .

code:
@ can ignore return value @ beta public builder < k , v > put all ( iterable < ? extends entry < ? extends k , ? extends v > > entries ) {
 if ( entries instanceof collection ) {
 ensure capacity ( size + ( ( collection < ? > ) entries ) . size ( ) ) ;
 }
 for ( entry < ? extends k , ? extends v > entry : entries ) {
 put ( entry ) ;
 }
 return this ;
 }
comment:
START adds all of the given entries to the built map . END
BLUE1:0.444444444444
--generate--
returns a immutable array of the given values .
returns a immutable array of the given values , in any .
returns a immutable instance of the given key .
returns a immutable array of the given values , in an UNK .
returns a immutable array of the given values , in any

code:
item new const item ( final object cst ) {
 if ( cst instanceof integer ) {
 int val = ( ( integer ) cst ) . int value ( ) ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof byte ) {
 int val = ( ( byte ) cst ) . int value ( ) ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof character ) {
 int val = ( ( character ) cst ) . char value ( ) ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof short ) {
 int val = ( ( short ) cst ) . int value ( ) ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof boolean ) {
 int val = ( ( boolean ) cst ) . boolean value ( ) ? DecimalInteger : DecimalInteger ;
 return new integer ( val ) ;
 }
 else if ( cst instanceof float ) {
 float val = ( ( float ) cst ) . float value ( ) ;
 return new float ( val ) ;
 }
 else if ( cst instanceof long ) {
 long val = ( ( long ) cst ) . long value ( ) ;
 return new long ( val ) ;
 }
 else if ( cst instanceof double ) {
 double val = ( ( double ) cst ) . double value ( ) ;
 return new double ( val ) ;
 }
 else if ( cst instanceof string ) {
 return new string ( ( string ) cst ) ;
 }
 else if ( cst instanceof type ) {
 type t = ( type ) cst ;
 int s = t . get sort ( ) ;
 if ( s == type . t ) {
 return new class item ( t . get internal name ( ) ) ;
 }
 else if ( s == type . d ) {
 return new method type item ( t . get descriptor ( ) ) ;
 }
 else {
 return new class item ( t . get descriptor ( ) ) ;
 }
 }
 else if ( cst instanceof handle ) {
 handle h = ( handle ) cst ;
 return new handle item ( h . tag , h . owner , h . name , h . desc , h . itf ) ;
 }
 else {
 throw new illegal argument exception ( String + cst ) ;
 }
 }
comment:
START adds a number or string constant to the constant pool of the class being build . END
BLUE1:0.444444444444
--generate--
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable array of the given file .
returns a immutable array of the UNK .
returns a immutable array of the given UNK .

code:
static media type create text type ( string subtype ) {
 return create ( text_ e , subtype ) ;
 }
comment:
START creates a media type with the `` text '' type and the given subtype . END
BLUE1:0.444444444444
--generate--
returns a immutable instance of the given key .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given file .
returns a immutable instance of the given key , in any .

code:
static media type create audio type ( string subtype ) {
 return create ( audio_ e , subtype ) ;
 }
comment:
START creates a media type with the `` audio '' type and the given subtype . END
BLUE1:0.444444444444
--generate--
returns a immutable instance of the given key .
returns a immutable instance of the given type .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given key , in any .

code:
action future < create snapshot response > create snapshot ( create snapshot request request ) ;
comment:
START creates a new snapshot . END
BLUE1:0.444444444444
--generate--
creates a new instance for the given UNK .
creates a new instance of the UNK .
creates a new instance for the given file .
creates a new instance for the UNK .
creates a new instance of the given UNK .

code:
public final observable < boolean > contains ( final object element ) {
 return exists ( internal observable utils . equals with ( element ) ) ;
 }
comment:
START returns an observable that emits a boolean that indicates whether the source observable emitted a specified item . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK UNK .

code:
public static string get display country ( locale locale , locale display locale ) {
 return locale . get display country ( locale . to language tag ( ) , locale . for locale ( display locale ) ) ;
 }
comment:
START returns a locale 's country localized for display in the provided locale . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
@ nullable public char sequence get label ( ) {
 return label ;
 }
comment:
START returns the label to be used to describe this shortcut . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
static < t > general range < t > up to ( comparator < ? super t > comparator , @ nullable t endpoint , bound type bound type ) {
 return new general range < t > ( comparator , false , null , n , true , endpoint , bound type ) ;
 }
comment:
START returns everything below the endpoint relative to the specified comparator , with the specified endpoint behavior . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public float max boost ( ) {
 return this . max boost ;
 }
comment:
START returns the maximum boost that will be applied by function score . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public list < http message writer < ? > > get message writers ( ) {
 return this . message writers ;
 }
comment:
START return the configured message converters . END
BLUE1:0.428571428571
--generate--
return the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
return the list of UNK UNK
return the list of UNK that be UNK for the UNK .

code:
public static string get user tags l ( string user , string tag id ) {
 return String + user + String + tag id ;
 }
comment:
START returns the url for a user tag photo set . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public builder connect timeout ( long timeout , time unit unit ) {
 if ( timeout < DecimalInteger ) throw new illegal argument exception ( String ) ;
 if ( unit == null ) throw new null pointer exception ( String ) ;
 long millis = unit . to millis ( timeout ) ;
 if ( millis > integer . max_ e ) throw new illegal argument exception ( String ) ;
 if ( millis == DecimalInteger && timeout > DecimalInteger ) throw new illegal argument exception ( String ) ;
 connect timeout = ( int ) millis ;
 return this ;
 }
comment:
START sets the default connect timeout for new connections . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set current function ( string function ) {
 try {
 service . set current function ( function ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START sets the current usb function when in device mode . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public static synchronized ssl client UNK ( ) {
 if ( UNK != null ) return UNK ;
 try {
 held certificate held certificate = new held certificate . builder ( ) . serial number ( String ) . common name ( inet address . get by name ( String ) . get host name ( ) ) . build ( ) ;
 UNK = new builder ( ) . certificate chain ( held certificate . key pair , held certificate . certificate ) . add trusted certificate ( held certificate . certificate ) . build ( ) ;
 return UNK ;
 }
 catch ( general security exception | unknown host exception e ) {
 throw new runtime exception ( e ) ;
 }
 }
comment:
START returns an ssl client for this host 's UNK address . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to be UNK .
returns the list of UNK UNK to be UNK in the UNK .
returns the list of UNK UNK

code:
public collection < message > get error messages ( ) {
 return messages ;
 }
comment:
START returns messages for the errors that caused this exception . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public void set view resolvers ( list < view resolver > view resolvers ) {
 this . view resolvers . clear ( ) ;
 if ( ! collection utils . is empty ( view resolvers ) ) {
 this . view resolvers . add all ( view resolvers ) ;
 }
 }
comment:
START set the list of view view resolvers to delegate to . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public file handle sibling ( string name ) {
 if ( file . get path ( ) . length ( ) == DecimalInteger ) throw new gdx runtime exception ( String ) ;
 return new file handle ( new file ( file . get parent ( ) , name ) , type ) ;
 }
comment:
START returns a handle to the sibling with the specified name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to the given UNK .
returns the list of UNK UNK UNK

code:
public comparator < ? super r > row comparator ( ) {
 return row key set ( ) . comparator ( ) ;
 }
comment:
START returns the comparator that orders the rows . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public abstract entity get entity and increment cursor ( cursor cursor ) throws remote exception ;
comment:
START returns the entity that the cursor is currently pointing to . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
private void create index tables ( accumulo table table ) {
 if ( ! table . is indexed ( ) ) {
 return ;
 }
 if ( ! table manager . exists ( table . get index table name ( ) ) ) {
 table manager . create accumulo table ( table . get index table name ( ) ) ;
 }
 if ( ! table manager . exists ( table . get metrics table name ( ) ) ) {
 table manager . create accumulo table ( table . get metrics table name ( ) ) ;
 }
 map < string , set < text > > index groups = UNK . get locality groups ( table ) ;
 table manager . set locality groups ( table . get index table name ( ) , index groups ) ;
 table manager . set locality groups ( table . get metrics table name ( ) , index groups ) ;
 for ( iterator setting setting : UNK . get metric iterators ( table ) ) {
 table manager . set iterator ( table . get metrics table name ( ) , setting ) ;
 }
 }
comment:
START creates the index tables from the given accumulo table . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set target class ( class < ? > target class ) {
 this . target class = target class ;
 }
comment:
START set the target class on which the field is defined . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public static encoding of ( int num bytes per value ) {
 final encoding instance = s [ num bytes per value ] ;
 if ( instance == null ) {
 throw new illegal state exception ( String + num bytes per value + String ) ;
 }
 return instance ;
 }
comment:
START get an instance based on the number of bytes that has been used to encode values . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public static string strip repository prefix ( string path ) {
 return path . split ( String , DecimalInteger ) [ DecimalInteger ] ;
 }
comment:
START removes the UNK repository prefix from the given path . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public out err set out err ( out err out err ) {
 out err prev = this . out err ;
 this . out err = out err ;
 return prev ;
 }
comment:
START returns the previous out err . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public string get UNK sp number schema ( string default value ) {
 int phone id = get default phone ( ) ;
 return get UNK sp number schema for phone ( phone id , default value ) ;
 }
comment:
START get UNK number schema for the default phone . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
listenable future < ? > put ( string url , http entity < ? > request , object ... uri variables ) throws rest client exception ;
comment:
START create or update a resource by putting the given object to the uri . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public string to short string ( string builder sb ) {
 sb . set length ( DecimalInteger ) ;
 sb . append ( String ) ;
 sb . append ( left ) ;
 sb . append ( String ) ;
 sb . append ( top ) ;
 sb . append ( String ) ;
 sb . append ( right ) ;
 sb . append ( String ) ;
 sb . append ( bottom ) ;
 sb . append ( String ) ;
 return sb . to string ( ) ;
 }
comment:
START return a string representation of the rectangle in a compact form . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set service locator exception class ( class < ? extends exception > service locator exception class ) {
 if ( service locator exception class != null && ! exception . class . is assignable from ( service locator exception class ) ) {
 throw new illegal argument exception ( String + service locator exception class . get name ( ) + String ) ;
 }
 this . service locator exception constructor = determine service locator exception constructor ( service locator exception class ) ;
 }
comment:
START set the exception class that the service locator should throw if service lookup failed . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
private blob store format < meta data > global meta data format ( version version ) {
 if ( legacy meta data ( version ) ) {
 return global meta data legacy format ;
 }
 else {
 return global meta data format ;
 }
 }
comment:
START returns appropriate global metadata format based on the provided version of the snapshot END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public intent get intent ( ) {
 try {
 return activity manager native . get default ( ) . get intent for intent sender ( target ) ;
 }
 catch ( remote exception e ) {
 return null ;
 }
 }
comment:
START return the intent of this pending intent . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public artifact get input tree artifact ( ) {
 return input tree artifact ;
 }
comment:
START returns the input tree artifact . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK UNK .
returns the name of the UNK UNK

code:
public int get gravity ( ) {
 return mbitmap state . gravity ;
 }
comment:
START get the gravity used to UNK the bitmap within its bounds . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public void set selected view ( view v ) {
 mview behind . set selected view ( v ) ;
 }
comment:
START sets the selected view . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public static byte buffer get index column family ( byte [ ] column family , byte [ ] column qualifier ) {
 return wrap ( array utils . add all ( array utils . add ( column family , e ) , column qualifier ) ) ;
 }
comment:
START gets the column family of the index table based on the given column family and qualifier . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void assert scanned package valid ( package parser . package pkg ) throws package manager exception {
 if ( pkg == null || pkg . package name == null ) {
 throw new package manager exception ( install_ failed_ invalid_ k , String ) ;
 }
 array set < public key > signing keys = pkg . UNK keys ;
 if ( signing keys == null || ! ( signing keys . size ( ) > DecimalInteger ) || signing keys . contains ( null ) ) {
 throw new package manager exception ( install_ failed_ invalid_ k , String ) ;
 }
 array map < string , array set < public key > > defined mapping = pkg . mkey set mapping ;
 if ( defined mapping != null ) {
 if ( defined mapping . contains key ( null ) || defined mapping . contains value ( null ) ) {
 throw new package manager exception ( install_ failed_ invalid_ k , String ) ;
 }
 int def map size = defined mapping . size ( ) ;
 for ( int i = DecimalInteger ;
 i < def map size ;
 i ++ ) {
 if ( ! ( defined mapping . value at ( i ) . size ( ) > DecimalInteger ) || defined mapping . value at ( i ) . contains ( null ) ) {
 throw new package manager exception ( install_ failed_ invalid_ k , String ) ;
 }
 }
 }
 array set < string > upgrade aliases = pkg . UNK key sets ;
 if ( upgrade aliases != null ) {
 if ( defined mapping == null || ! ( defined mapping . key set ( ) . contains all ( upgrade aliases ) ) ) {
 throw new package manager exception ( install_ failed_ invalid_ k , String ) ;
 }
 }
 }
comment:
START returns true if the package can safely be added to the keyset metadata . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public object get rejected value ( ) {
 return this . rejected value ;
 }
comment:
START return the rejected field value . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public set < string > get in parameter names ( ) {
 return this . call meta data context . get limited in parameter names ( ) ;
 }
comment:
START get the names of in parameters to be used . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public synchronized < t > void load ( string file name , class < t > type ) {
 load ( file name , type , null ) ;
 }
comment:
START adds the given asset to the loading queue of the asset manager . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void set name ( string name ) {
 name = name ;
 }
comment:
START set the name of the app @param name name of the app END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set sip response code ( int sip response code ) {
 this . UNK response code = sip response code ;
 }
comment:
START sets the sip response code . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public int get index before ( long time ) {
 int index = arrays . binary search ( bucket start , DecimalInteger , bucket count , time ) ;
 if ( index < DecimalInteger ) {
 index = ( ~ index ) - DecimalInteger ;
 }
 else {
 index -= DecimalInteger ;
 }
 return math utils . constrain ( index , DecimalInteger , bucket count - DecimalInteger ) ;
 }
comment:
START return index of bucket that contains or is immediately before the requested time . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set anchor id ( int anchor id ) {
 manchor id = anchor id ;
 }
comment:
START sets the anchor node 's id . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public float get length2 ( ) {
 return jni get length2 ( addr ) ;
 }
comment:
START get the current length of the segment attached to body2 . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ skylark callable ( name = String , doc = String , struct field = true ) public apple bitcode mode get bitcode mode ( ) {
 return bitcode mode ;
 }
comment:
START returns the bitcode mode to use for compilation steps . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public query builder < t > order raw ( string raw order ) {
 check order builder ( ) ;
 order builder . append ( raw order ) ;
 return this ;
 }
comment:
START adds the given raw sql string to the order by section . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
private void set multipart ( string content type ) {
 string [ ] data boundary = http post request decoder . get multipart data boundary ( content type ) ;
 if ( data boundary != null ) {
 multipart data boundary = data boundary [ DecimalInteger ] ;
 if ( data boundary . length > DecimalInteger && data boundary [ DecimalInteger ] != null ) {
 charset = charset . for name ( data boundary [ DecimalInteger ] ) ;
 }
 }
 else {
 multipart data boundary = null ;
 }
 current status = multi part status . r ;
 }
comment:
START set from the request content type the multipart data boundary and the possible charset . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public string get UNK system arch ( ) {
 if ( target system name . index of ( String ) == - DecimalInteger ) {
 return target system name ;
 }
 return target system name . substring ( DecimalInteger , target system name . index of ( String ) ) ;
 }
comment:
START returns the architecture component of the gnu system name END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public row builder add ( object column value ) {
 if ( index == end index ) {
 throw new cursor index out of bounds exception ( String ) ;
 }
 data [ index ++ ] = column value ;
 return this ;
 }
comment:
START sets the next column value in this row . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public string get name ( ) {
 try {
 return UNK service . get name ( ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return null ;
 }
comment:
START get the friendly bluetooth name of the local bluetooth adapter . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set client socket factory ( UNK socket factory client socket factory ) {
 this . client socket factory = client socket factory ;
 }
comment:
START set a custom rmi client socket factory to use for UNK the service . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set parameter ( string name , string value ) {
 set parameter ( name , new string [ ] {
 value }
 ) ;
 }
comment:
START set a single value for the specified http parameter . END
BLUE1:0.428571428571
--generate--
set the list of UNK UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
set the list of UNK UNK to UNK .
set the list of UNK UNK

code:
static int measure child for cells ( view child , int cell size , int cells remaining , int parent height measure spec , int parent height padding ) {
 final layout params lp = ( layout params ) child . get layout params ( ) ;
 final int child height size = measure spec . get size ( parent height measure spec ) - parent height padding ;
 final int child height mode = measure spec . get mode ( parent height measure spec ) ;
 final int child height spec = measure spec . make measure spec ( child height size , child height mode ) ;
 int cells used = DecimalInteger ;
 if ( cells remaining > DecimalInteger ) {
 final int child width spec = measure spec . make measure spec ( cell size * cells remaining , measure spec . at_ t ) ;
 child . measure ( child width spec , child height spec ) ;
 final int measured width = child . get measured width ( ) ;
 cells used = measured width / cell size ;
 if ( measured width % cell size != DecimalInteger ) cells used ++ ;
 }
 final action menu item view item view = child instanceof action menu item view ? ( action menu item view ) child : null ;
 final boolean expandable = ! lp . is overflow button && item view != null && item view . has text ( ) ;
 lp . expandable = expandable ;
 lp . cells used = cells used ;
 final int target width = cells used * cell size ;
 child . measure ( measure spec . make measure spec ( target width , measure spec . y ) , child height spec ) ;
 return cells used ;
 }
comment:
START sets the expandable and cells used fields of layout params . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public int get stable inset left ( ) {
 return mstable insets . left ;
 }
comment:
START returns the left stable inset in pixels . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public char sequence get query ( ) {
 return mquery text view . get text ( ) ;
 }
comment:
START returns the query string currently in the text field . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set stroke ( int width , @ color int int color ) {
 set stroke ( width , color , DecimalInteger , DecimalInteger ) ;
 }
comment:
START set the stroke width and color for the drawable . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int get wallpaper id for user ( @ set wallpaper flags int which , int user id ) {
 try {
 if ( globals . service == null ) {
 log . w ( g , String ) ;
 throw new runtime exception ( new dead system exception ( ) ) ;
 }
 else {
 return globals . service . get wallpaper id for user ( which , user id ) ;
 }
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START get the id of the given user 's current wallpaper of the given kind . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public python version get python version ( python version attribute version ) {
 return ignore python version attribute || attribute version == null ? default python version : attribute version ;
 }
comment:
START returns the python version to use . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
attribute get attribute ( int attr index ) {
 return attributes . get ( attr index ) ;
 }
comment:
START returns the attribute whose index is ` attr index ' . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public sqlexception translator get fallback translator ( ) {
 return this . fallback translator ;
 }
comment:
START return the fallback exception translator , if any . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
protected boolean can print stack trace ( ) {
 return most recent element != null && most recent element . get cause ( ) != null ;
 }
comment:
START returns true when there is at least one UNK element . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether the UNK is UNK in the UNK .

code:
public builder add linkopts ( nested set < string > linkopts ) {
 this . linkopts . add transitive ( linkopts ) ;
 return this ;
 }
comment:
START adds UNK options . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public int get playback rate ( ) {
 return UNK ( ) ;
 }
comment:
START returns the current playback sample rate rate in hz . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public static string get column string ( cursor cursor , string column name ) {
 int col = cursor . get column index ( column name ) ;
 return get string or null ( cursor , col ) ;
 }
comment:
START gets the value of a string column by name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
immutable multimap < attribute , label > compute aspect dependencies ( target target , dependency filter dependency filter ) throws interrupted exception ;
comment:
START returns map of attributes and corresponding label values . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK UNK

code:
public int get execution count ( ) {
 return this . rows affected . size ( ) ;
 }
comment:
START return the number of already executed statements . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ system api public final void set status icon ( icon icon , string content description ) {
 if ( service != null ) {
 try {
 service . update status icon ( tile , icon , content description ) ;
 }
 catch ( remote exception e ) {
 }
 }
 }
comment:
START sets an icon to be shown in the status bar . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
private location request create sanitized request ( location request request , int resolution level ) {
 location request sanitized request = new location request ( request ) ;
 if ( resolution level < resolution_ level_ e ) {
 switch ( sanitized request . get quality ( ) ) {
 case location request . UNK e : sanitized request . set quality ( location request . UNK k ) ;
 break ;
 case location request . power_ h : sanitized request . set quality ( location request . power_ w ) ;
 break ;
 }
 if ( sanitized request . get interval ( ) < location UNK . UNK interval_ s ) {
 sanitized request . set interval ( location UNK . UNK interval_ s ) ;
 }
 if ( sanitized request . get fastest interval ( ) < location UNK . UNK interval_ s ) {
 sanitized request . set fastest interval ( location UNK . UNK interval_ s ) ;
 }
 }
 if ( sanitized request . get fastest interval ( ) > sanitized request . get interval ( ) ) {
 request . set fastest interval ( request . get interval ( ) ) ;
 }
 return sanitized request ;
 }
comment:
START creates a location request based upon the supplied location request that to meets resolution and UNK requirements . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
@ override public int get storage encryption status ( @ nullable string caller package , int user handle ) {
 if ( ! mhas feature ) {
 }
 enforce full cross users permission ( user handle ) ;
 ensure caller package ( caller package ) ;
 final application info ai ;
 try {
 ai = UNK manager . get application info ( caller package , DecimalInteger , user handle ) ;
 }
 catch ( remote exception e ) {
 throw new security exception ( e ) ;
 }
 boolean legacy app = false ;
 if ( ai . target sdk version <= build . version_ s . m ) {
 legacy app = true ;
 }
 else if ( String . equals ( ai . package name ) && ai . version code == DecimalInteger ) {
 legacy app = true ;
 }
 final int raw status = get encryption status ( ) ;
 if ( ( raw status == device policy manager . encryption_ status_ active_ per_ r ) && legacy app ) {
 return device policy manager . encryption_ status_ e ;
 }
 return raw status ;
 }
comment:
START get the current encryption status of the device . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set scale type ( scale type scale type ) {
 if ( objects . equal ( mscale type , scale type ) ) {
 return ;
 }
 mscale type = scale type ;
 mscale type state = null ;
 configure bounds ( ) ;
 invalidate self ( ) ;
 }
comment:
START sets the scale type . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
protected void set offset to next ifd ( int offset ) {
 moffset to next ifd = offset ;
 }
comment:
START sets the offset of next ifd . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static string get user agent ( context context , string application name ) {
 string version name ;
 try {
 string package name = context . get package name ( ) ;
 package info info = context . get package manager ( ) . get package info ( package name , DecimalInteger ) ;
 version name = info . version name ;
 }
 catch ( name not found exception e ) {
 version name = String ;
 }
 return application name + String + version name + String + build . n . e + String + String + exo player library info . n ;
 }
comment:
START returns a user agent string based on the given application name and the library version . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
private static bitmap . config get UNK bitmap config ( bitmap source ) {
 bitmap . config final config = bitmap . config . b_8888 ;
 final bitmap . config source config = source . get config ( ) ;
 if ( source config != null ) {
 switch ( source config ) {
 case b_565 : final config = bitmap . config . b_565 ;
 break ;
 case UNK : final config = bitmap . config . UNK ;
 break ;
 case UNK : case b_8888 : default : final config = bitmap . config . b_8888 ;
 break ;
 }
 }
 return final config ;
 }
comment:
START returns suitable bitmap config for the new bitmap based on the source bitmap configurations . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
string [ ] get column names ( ) throws invalid result set access exception ;
comment:
START return the column names of the table that the result set represents . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public immutable list < command > get commands ( ) {
 return immutable list . copy of ( commands ) ;
 }
comment:
START returns the application 's commands . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void body ( string body ) {
 this . body = body ;
 }
comment:
START sets the body @param body the body END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean remove all ( float array array ) {
 int size = this . size ;
 int start size = size ;
 float [ ] items = this . items ;
 for ( int i = DecimalInteger , n = array . size ;
 i < n ;
 i ++ ) {
 float item = array . get ( i ) ;
 for ( int ii = DecimalInteger ;
 ii < size ;
 ii ++ ) {
 if ( item == items [ ii ] ) {
 remove index ( ii ) ;
 size -- ;
 break ;
 }
 }
 }
 return size != start size ;
 }
comment:
START removes from this array all of elements contained in the specified array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public vector2 get linear velocity ( ) {
 jni get linear velocity ( addr , tmp ) ;
 linear velocity . x = tmp [ DecimalInteger ] ;
 linear velocity . y = tmp [ DecimalInteger ] ;
 return linear velocity ;
 }
comment:
START get the linear velocity of the center of mass . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public artifact create gensrc jar ( artifact output jar ) {
 return get rule context ( ) . get derived artifact ( file system utils . append without extension ( output jar . get root relative path ( ) , String ) , output jar . get root ( ) ) ;
 }
comment:
START returns the artifact for a jar file containing source files that were generated by annotation processors . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void set cmd id ( options cmd id cmd id ) {
 this . mcmd id = cmd id ;
 }
comment:
START sets the command id . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean get and set ( int index ) {
 final int word = index > > > DecimalInteger ;
 check capacity ( word ) ;
 long old bits = bits [ word ] ;
 bits [ word ] |= DecimalInteger << ( index & 0x3 f ) ;
 return bits [ word ] == old bits ;
 }
comment:
START returns the bit at the given index and sets it in one go . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set type ( body type type ) {
 assert ( m_world . is locked ( ) == false ) ;
 if ( m_world . is locked ( ) == true ) {
 return ;
 }
 if ( m_type == type ) {
 return ;
 }
 m_type = type ;
 reset mass data ( ) ;
 if ( m_type == body type . c ) {
 m_linear velocity . set zero ( ) ;
 m_angular velocity = DecimalFloatingPoint ;
 m_sweep . UNK = m_sweep . a ;
 m_sweep . c0 . set ( m_sweep . c ) ;
 synchronize fixtures ( ) ;
 }
 set awake ( true ) ;
 UNK . set zero ( ) ;
 UNK = DecimalFloatingPoint ;
 contact edge ce = m_contact list ;
 while ( ce != null ) {
 contact edge UNK = ce ;
 ce = ce . next ;
 m_world . m_contact manager . destroy ( UNK . contact ) ;
 }
 m_contact list = null ;
 broad phase broad phase = m_world . m_contact manager . m_broad phase ;
 for ( fixture f = m_fixture list ;
 f != null ;
 f = f . m_next ) {
 int proxy count = f . UNK count ;
 for ( int i = DecimalInteger ;
 i < proxy count ;
 ++ i ) {
 broad phase . touch proxy ( f . UNK [ i ] . proxy id ) ;
 }
 }
 }
comment:
START set the type of this body . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public void set message id ( short value ) {
 mmessage id = value ;
 }
comment:
START sets the message identifier . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public void set icon ( @ drawable res int icon res id ) {
 if ( micon res id != icon res id ) {
 micon res id = icon res id ;
 set icon ( context . get drawable ( icon res id ) ) ;
 }
 }
comment:
START sets the icon for this preference with a resource id . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ system api public boolean is connected ( ) {
 if ( service == null ) {
 return false ;
 }
 try {
 return service . get connection state ( this ) != connection_ state_ d ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 return false ;
 }
 }
comment:
START returns whether there is an open connection to this device . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .

code:
@ override public string decode ( dns response response , dns resource resource ) {
 return dns response decoder . get name ( response . content ( ) , resource . content index ( ) ) ;
 }
comment:
START returns the decoded domain name for a resource record . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
set < class < ? > > get java types ( ) ;
comment:
START returns the types which the field decoder can process . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public boolean remove all ( short array array ) {
 int size = this . size ;
 int start size = size ;
 short [ ] items = this . items ;
 for ( int i = DecimalInteger , n = array . size ;
 i < n ;
 i ++ ) {
 short item = array . get ( i ) ;
 for ( int ii = DecimalInteger ;
 ii < size ;
 ii ++ ) {
 if ( item == items [ ii ] ) {
 remove index ( ii ) ;
 size -- ;
 break ;
 }
 }
 }
 return size != start size ;
 }
comment:
START removes from this array all of elements contained in the specified array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
@ layoutlib delegate static void set density from options ( bitmap output bitmap , options opts ) {
 if ( output bitmap == null || opts == null ) return ;
 final int density = opts . in density ;
 if ( density != DecimalInteger ) {
 output bitmap . set density ( density ) ;
 final int target density = opts . in target density ;
 if ( target density == DecimalInteger || density == target density || density == opts . in screen density ) {
 return ;
 }
 if ( opts . in scaled ) {
 output bitmap . set density ( target density ) ;
 }
 }
 else if ( opts . in bitmap != null ) {
 output bitmap . set density ( bitmap . get default density ( ) ) ;
 }
 }
comment:
START set the newly decoded bitmap 's density based on the options . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ visible for testing spawn create spawn ( ) throws exception , illegal manifest file exception {
 iterable < path fragment > entries = read and check manifest entries ( ) ;
 return new populate tree artifact spawn ( output tree artifact , entries , spawn command line ( ) , UNK executable runfiles manifest ( ) , this ) ;
 }
comment:
START creates a spawn to UNK the archive members specified in the archive manifest into the tree artifact . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static float screen width ( activity activity ) {
 point size = new point ( ) ;
 activity . get window manager ( ) . get default display ( ) . get size ( size ) ;
 return size . x ;
 }
comment:
START returns the screen width in raw pixels . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public final float [ ] array ( ) {
 return protected array ( ) ;
 }
comment:
START returns the float array which this buffer is based on , if there is one . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final void set ( internal thread local map thread local map , v value ) {
 if ( value != internal thread local map . t ) {
 if ( thread local map . set indexed variable ( index , value ) ) {
 add to variables to remove ( thread local map , this ) ;
 }
 }
 else {
 remove ( thread local map ) ;
 }
 }
comment:
START set the value for the specified thread local map . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public final int get curr y ( ) {
 return mscroller y . mcurrent position ;
 }
comment:
START returns the current y offset in the scroll . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
protected int get hash ( object o ) {
 int hash = o == null ? DecimalInteger : o . hash code ( ) ;
 hash += ( hash << DecimalInteger ) ^ UNK ;
 hash ^= ( hash > > > DecimalInteger ) ;
 hash += ( hash << DecimalInteger ) ;
 hash ^= ( hash > > > DecimalInteger ) ;
 hash += ( hash << DecimalInteger ) + ( hash << DecimalInteger ) ;
 hash ^= ( hash > > > DecimalInteger ) ;
 return hash ;
 }
comment:
START get the hash for a given object , apply an additional hash function to reduce UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ guarded by ( String ) @ non null shortcut package get package shortcuts locked ( @ non null string package name , @ user id int int user id ) {
 return get user shortcuts locked ( user id ) . get package shortcuts ( this , package name ) ;
 }
comment:
START return the per-user UNK state . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static image request builder from request ( image request image request ) {
 return image request builder . new builder with source ( image request . get source uri ( ) ) . set image decode options ( image request . get image decode options ( ) ) . set cache choice ( image request . get cache choice ( ) ) . set local thumbnail UNK enabled ( image request . get local thumbnail UNK enabled ( ) ) . set lowest permitted request level ( image request . get lowest permitted request level ( ) ) . set postprocessor ( image request . get postprocessor ( ) ) . set UNK rendering enabled ( image request . get UNK rendering enabled ( ) ) . set request priority ( image request . get priority ( ) ) . set resize options ( image request . get resize options ( ) ) . set request listener ( image request . get request listener ( ) ) . set rotation options ( image request . get rotation options ( ) ) ;
 }
comment:
START creates a new request builder instance with the same parameters as the image request passed in . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public abstract void set command line arguments ( list < string > arguments ) throws invalid command line exception ;
comment:
START sets the command line arguments for this processor . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ layoutlib delegate static long current thread time millis ( ) {
 return system_ delegate . current time millis ( ) ;
 }
comment:
START returns milliseconds running in the current thread . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static uce long get uce long instance ( ) {
 return new uce long ( ) ;
 }
comment:
START gets the instance of a uce long class . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static backoff policy exponential backoff ( time value initial delay , int max number of retries ) {
 return new exponential backoff ( ( int ) check delay ( initial delay ) . millis ( ) , max number of retries ) ;
 }
comment:
START creates an new UNK backoff policy with the provided configuration . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public auto scroll helper set minimum velocity ( float horizontal min , float vertical min ) {
 mminimum velocity [ l ] = horizontal min / DecimalFloatingPoint ;
 mminimum velocity [ l ] = vertical min / DecimalFloatingPoint ;
 return this ;
 }
comment:
START sets the absolute minimum scrolling velocity . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set background color ( int background color ) {
 if ( ( background color != DecimalInteger ) && ( color . alpha ( background color ) != DecimalInteger ) ) {
 throw new runtime exception ( String ) ;
 }
 mcolor background = background color ;
 }
comment:
START sets the background color for this task description . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void set reason phrase ( string reason phrase ) {
 this . mreason phrase = reason phrase ;
 }
comment:
START sets the sip response code reason phrase . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set history size ( int size ) {
 mhistory size = size ;
 if ( mhistory size >= DecimalInteger && count undos ( null ) > mhistory size ) {
 UNK undos ( null , count undos ( null ) - mhistory size ) ;
 }
 }
comment:
START set the maximum number of undo states that will be retained . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public get request builder set parent ( string parent ) {
 request . parent ( parent ) ;
 return this ;
 }
comment:
START sets the parent id of this document . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public builder set java executable ( path fragment java executable , artifact deploy jar , string java main class , list < string > jvm args ) {
 return set java executable ( java executable , deploy jar , jvm args , String , deploy jar . get exec path string ( ) , java main class ) ;
 }
comment:
START sets the executable to be a java class executed from the given deploy jar . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public boolean is checked ( ) {
 return get boolean property ( property_ d ) ;
 }
comment:
START gets if the source is checked . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK

code:
@ override public string get string ( int index ) {
 if ( ! has value ( index ) ) {
 return null ;
 }
 integer v = resolve enum attribute ( index ) ;
 return v == null ? mresource data [ index ] . get value ( ) : string . value of ( ( int ) v ) ;
 }
comment:
START returns null if the attribute is not defined . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public float measure text ( string text ) {
 if ( text == null ) {
 throw new illegal argument exception ( String ) ;
 }
 return measure text ( text , DecimalInteger , text . length ( ) ) ;
 }
comment:
START return the width of the text . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ orientation mode public int get orientation ( ) {
 return orientation ;
 }
comment:
START returns the current orientation . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public object get state or create ( big integer txid , state initializer init ) {
 if ( UNK . contains key ( txid ) ) {
 return UNK . get ( txid ) ;
 }
 else {
 get state ( txid , init ) ;
 return null ;
 }
 }
comment:
START returns null if it was created , the value otherwise . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
private iterable < path fragment > get imports ( path fragment obj directory , path fragment object name ) {
 preconditions . check state ( lipo mode != lipo mode . f ) ;
 preconditions . check state ( imports != null , String ) ;
 path fragment key = obj directory . get relative ( file system utils . remove extension ( object name ) ) ;
 immutable collection < path fragment > imports for object = imports . get ( key ) ;
 preconditions . check state ( imports for object != null , String , key ) ;
 return imports for object ;
 }
comment:
START returns the imports from the . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final int count data authorities ( ) {
 return mdata authorities != null ? mdata authorities . size ( ) : DecimalInteger ;
 }
comment:
START return the number of data authorities in the filter . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static string start ( activity activity , list < document info > src docs , document stack stack , int operation type ) {
 if ( g ) log . d ( g , String ) ;
 switch ( operation type ) {
 case operation_ y : return file operations . copy ( activity , src docs , stack ) ;
 case operation_ e : throw new illegal argument exception ( String ) ;
 case operation_ e : throw new unsupported operation exception ( String ) ;
 default : throw new unsupported operation exception ( String + operation type ) ;
 }
 }
comment:
START returns the job id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void add parameter ( string name , string [ ] values ) {
 assert . not null ( name , String ) ;
 string [ ] old arr = this . parameters . get ( name ) ;
 if ( old arr != null ) {
 string [ ] new arr = new string [ old arr . length + values . length ] ;
 system . arraycopy ( old arr , DecimalInteger , new arr , DecimalInteger , old arr . length ) ;
 system . arraycopy ( values , DecimalInteger , new arr , old arr . length , values . length ) ;
 this . parameters . put ( name , new arr ) ;
 }
 else {
 this . parameters . put ( name , values ) ;
 }
 }
comment:
START add an array of values for the specified http parameter . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static route info select best route ( collection < route info > routes , inet address dest ) {
 if ( ( routes == null ) || ( dest == null ) ) return null ;
 route info best route = null ;
 for ( route info route : routes ) {
 if ( network utils . address type matches ( route . destination . get address ( ) , dest ) ) {
 if ( ( best route != null ) && ( best route . destination . get prefix length ( ) >= route . destination . get prefix length ( ) ) ) {
 continue ;
 }
 if ( route . matches ( dest ) ) best route = route ;
 }
 }
 return best route ;
 }
comment:
START find the route from a collection of routes that best matches a given address . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
protected class < ? > get view class ( ) {
 return this . view class ;
 }
comment:
START return the view class to be used to create views . END
BLUE1:0.428571428571
--generate--
return the list of UNK UNK .
return the list of UNK .
return the list of UNK UNK
return the list of UNK that be UNK for .
return the list of UNK that be UNK for the UNK .

code:
void set visibility and license ( input file input file , rule visibility visibility , license license ) {
 string filename = input file . get name ( ) ;
 target cache instance = targets . get ( filename ) ;
 if ( ! ( cache instance instanceof input file ) ) {
 throw new illegal argument exception ( String + filename + String + pkg . get name ( ) + String ) ;
 }
 if ( ! ( ( input file ) cache instance ) . is visibility specified ( ) || cache instance . get visibility ( ) != visibility || cache instance . get license ( ) != license ) {
 targets . put ( filename , new input file ( pkg , cache instance . get label ( ) , cache instance . get location ( ) , visibility , license ) ) ;
 }
 }
comment:
START sets the visibility and license for an input file . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static int null safe hash code ( double [ ] array ) {
 if ( array == null ) {
 return DecimalInteger ;
 }
 int hash = initial_ h ;
 for ( double element : array ) {
 hash = r * hash + hash code ( element ) ;
 }
 return hash ;
 }
comment:
START return a hash code based on the contents of the specified array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public task stack . dock state [ ] get dock states for current orientation ( ) {
 boolean is landscape = rv . get resources ( ) . get configuration ( ) . orientation == configuration . orientation_ e ;
 recents configuration config = recents . get configuration ( ) ;
 task stack . dock state [ ] dock states = is landscape ? ( config . is large screen ? dock region . UNK e : dock region . phone_ e ) : ( config . is large screen ? dock region . UNK t : dock region . phone_ t ) ;
 return dock states ;
 }
comment:
START returns the preferred dock states for the current orientation . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void add user repository ( string url ) {
 repository repository = new repository ( ) ;
 repository . set url ( url ) ;
 repository . set id ( String ) ;
 repository . set name ( String ) ;
 add repository ( repository ) ;
 }
comment:
START adds a UNK repository to the list . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void add oval ( float left , float top , float right , float bottom , direction dir ) {
 is simple path = false ;
 native_add oval ( mnative path , left , top , right , bottom , dir . native int ) ;
 }
comment:
START add a closed oval contour to the path @param dir the direction to wind the oval 's contour END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public list < pair < artifact , label > > get headers ( ) {
 return get headers ( rule context ) ;
 }
comment:
START returns the files from headers and does some sanity checks . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public connection spec get connection spec ( ) {
 return this . connection spec ;
 }
comment:
START return the cci connection spec used by this template , if any . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of all UNK .
return the number of all UNK in the given .

code:
public int get center freq ( short band ) throws illegal state exception , illegal argument exception , unsupported operation exception {
 int [ ] param = new int [ DecimalInteger ] ;
 int [ ] result = new int [ DecimalInteger ] ;
 param [ DecimalInteger ] = param_ center_ q ;
 param [ DecimalInteger ] = ( int ) band ;
 check status ( get parameter ( param , result ) ) ;
 return result [ DecimalInteger ] ;
 }
comment:
START gets the center frequency of the given band . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set basename prefix ( string basename prefix ) {
 this . basename prefix = ( basename prefix != null ? basename prefix : String ) ;
 }
comment:
START set the prefix that gets applied to the resource bundle basenames , i.e. the theme names . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public paint get paint render ( ) {
 return mrender paint ;
 }
comment:
START returns the paint object used for rendering . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public servlet context get servlet context ( ) {
 return this . servlet context ;
 }
comment:
START return the servlet context that this request is associated with . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of UNK .
return the number of all UNK .

code:
public camera streamer get camera streamer ( ) {
 if ( mcamera streamer == null ) {
 mcamera streamer = new camera streamer ( this ) ;
 }
 return mcamera streamer ;
 }
comment:
START returns the context 's shared camera streamer . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
@ override public string to string ( ) {
 string builder sb = new string builder ( String ) ;
 sb . append ( String ) ;
 sb . append ( curve to string ( channel_ d ) ) ;
 sb . append ( String ) ;
 sb . append ( curve to string ( channel_ n ) ) ;
 sb . append ( String ) ;
 sb . append ( curve to string ( channel_ e ) ) ;
 sb . append ( String ) ;
 return sb . to string ( ) ;
 }
comment:
START return the UNK curve as a string representation . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public boolean get profile proxy ( context context , bluetooth profile . service listener listener , int profile ) {
 if ( context == null || listener == null ) return false ;
 if ( profile == bluetooth profile . t ) {
 bluetooth headset headset = new bluetooth headset ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . a2 p ) {
 bluetooth a2dp a2dp = new bluetooth a2dp ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . a2 dp_ k ) {
 bluetooth a2dp sink a2dp sink = new bluetooth a2dp sink ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . UNK r ) {
 bluetooth avrcp controller avrcp = new bluetooth avrcp controller ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . input_ e ) {
 bluetooth input device dev = new bluetooth input device ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . n ) {
 bluetooth pan pan = new bluetooth pan ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . h ) {
 bluetooth health health = new bluetooth health ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . p ) {
 bluetooth map map = new bluetooth map ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . UNK t ) {
 bluetooth headset client headset client = new bluetooth headset client ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . p ) {
 bluetooth UNK UNK = new bluetooth UNK ( context , listener ) ;
 return true ;
 }
 else if ( profile == bluetooth profile . UNK t ) {
 bluetooth UNK client UNK client = new bluetooth UNK client ( context , listener ) ;
 return true ;
 }
 else {
 return false ;
 }
 }
comment:
START get the profile proxy object associated with the profile . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the view .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
map < sky key , exception > get missing and exceptions ( iterable < sky key > keys ) throws interrupted exception ;
comment:
START returns a map giving exceptions associated to the given keys for done keys . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public string get defaults package content ( options class provider options provider ) {
 return rule class provider . get defaults package content ( options provider ) ;
 }
comment:
START returns the defaults package for the given options taken from an options provider . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ override public void set transform matrix ( matrix4 transform ) {
 matrix4 real matrix = super . get transform matrix ( ) ;
 if ( check equal ( real matrix , transform ) ) {
 adjust needed = false ;
 }
 else {
 if ( is drawing ( ) ) {
 virtual matrix . set as affine ( transform ) ;
 adjust needed = true ;
 if ( have identity real matrix ) {
 adjust affine . set ( transform ) ;
 }
 else {
 tmp affine . set ( transform ) ;
 adjust affine . set ( real matrix ) . inv ( ) . mul ( tmp affine ) ;
 }
 }
 else {
 real matrix . set as affine ( transform ) ;
 have identity real matrix = check idt ( real matrix ) ;
 }
 }
 }
comment:
START sets the transform matrix to be used by this batch . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public json value require ( int index ) {
 json value current = child ;
 while ( current != null && index > DecimalInteger ) {
 index -- ;
 current = current . next ;
 }
 if ( current == null ) throw new illegal argument exception ( String + index ) ;
 return current ;
 }
comment:
START returns the child at the specified index . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public void set system tree path ( string system tree path ) {
 this . system tree path = system tree path ;
 }
comment:
START set the path in the system preferences tree to use for resolving placeholders . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public static transitive info collection launcher for target ( java semantics semantics , rule context rule context ) {
 string launcher = filter launcher for target ( rule context ) ;
 return ( launcher == null ) ? null : rule context . get prerequisite ( launcher , mode . t ) ;
 }
comment:
START returns the java launcher implementation for the given target , if any . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the list of UNK that be UNK to the UNK .
returns the list of UNK UNK

code:
private UNK change listener create mock UNK service recommendations change listener ( ) throws exception {
 return new print manager . print service recommendations change listener wrapper ( null , new handler ( looper . get main looper ( ) ) ) ;
 }
comment:
START create a UNK service UNK change listener object . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of bytes in the given UNK .
returns the number of all UNK in the given .

code:
public int get measurements key count ( ) {
 return mmeasurements keys . length ;
 }
comment:
START get the number of measurement map values in this object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public values < v > values ( ) {
 if ( values1 == null ) {
 values1 = new ordered map values ( this ) ;
 values2 = new ordered map values ( this ) ;
 }
 if ( ! values1 . valid ) {
 values1 . reset ( ) ;
 values1 . valid = true ;
 values2 . valid = false ;
 return values1 ;
 }
 values2 . reset ( ) ;
 values2 . valid = true ;
 values1 . valid = false ;
 return values2 ;
 }
comment:
START returns an iterator for the values in the map . remove is supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final int get timeout ms ( ) {
 return mretry policy . get current timeout ( ) ;
 }
comment:
START returns the socket timeout in milliseconds per retry attempt . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public cci template get cci template ( ) {
 return this . cci template ;
 }
comment:
START return the cci template used by this operation . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of all UNK .
return the number of all UNK in the given .

code:
@ non null public string get name ( ) {
 return name ( ) ;
 }
comment:
START returns the name of this severity END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ deprecated public map < string , string [ ] > get headers ( ) {
 return headers ;
 }
comment:
START returns the http response headers associated with the plugin content . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
protected bean UNK info resolver create default bean UNK info resolver ( ) {
 return new class name bean UNK info resolver ( ) ;
 }
comment:
START create the default bean UNK info resolver to be used if none was specified explicitly . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public static string get constructor descriptor ( final constructor < ? > c ) {
 class < ? > [ ] parameters = c . get parameter types ( ) ;
 string buffer buf = new string buffer ( ) ;
 buf . append ( String ) ;
 for ( int i = DecimalInteger ;
 i < parameters . length ;
 ++ i ) {
 get descriptor ( buf , parameters [ i ] ) ;
 }
 return buf . append ( String ) . to string ( ) ;
 }
comment:
START returns the descriptor corresponding to the given constructor . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public map < string , string > get hibernate properties ( data source data source ) {
 return this . hibernate . get additional properties ( this . properties , data source ) ;
 }
comment:
START get configuration properties for the initialization of the main hibernate entity manager factory . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static token binding service get instance ( ) {
 return web view factory . get provider ( ) . get token binding service ( ) ;
 }
comment:
START returns the default token binding service instance . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected final string get transaction manager bean name ( ) {
 return this . transaction manager bean name ;
 }
comment:
START return the name of the default transaction manager bean . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public builder add tag ( string tag ) {
 tags . add ( tag ) ;
 return this ;
 }
comment:
START add a custom tag stored as a string @param tag @return the same builder instance . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
add the UNK to the given UNK .
sets the UNK for the given UNK .
add the UNK to the UNK to the UNK .
add the UNK to the UNK

code:
public data source get data source ( ) {
 return this . data source ;
 }
comment:
START return the jdbc data source that this instance manages transactions for . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of UNK .
return the number of all UNK .

code:
public artifact get implicit output artifact ( implicit outputs function function ) throws interrupted exception {
 iterable < string > result ;
 try {
 result = function . get implicit outputs ( raw attribute mapper . of ( rule ) ) ;
 }
 catch ( eval exception e ) {
 throw new illegal state exception ( e ) ;
 }
 return get implicit output artifact ( iterables . get only element ( result ) ) ;
 }
comment:
START returns the implicit output artifact for a given template function . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static string null safe to string ( float [ ] array ) {
 if ( array == null ) {
 return null_ g ;
 }
 int length = array . length ;
 if ( length == DecimalInteger ) {
 return empty_ y ;
 }
 string builder sb = new string builder ( ) ;
 for ( int i = DecimalInteger ;
 i < length ;
 i ++ ) {
 if ( i == DecimalInteger ) {
 sb . append ( array_ t ) ;
 }
 else {
 sb . append ( array_ element_ r ) ;
 }
 sb . append ( array [ i ] ) ;
 }
 sb . append ( array_ d ) ;
 return sb . to string ( ) ;
 }
comment:
START return a string representation of the contents of the specified array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set intent ( intent intent ) {
 synchronized ( minstance lock ) {
 if ( intent == intent ) {
 return ;
 }
 intent = intent ;
 load activities locked ( ) ;
 }
 }
comment:
START sets an intent for which to UNK a activity . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public final boolean run with UNK ( final runnable r , long timeout ) {
 if ( r == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( timeout < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( looper . my looper ( ) == looper ) {
 r . run ( ) ;
 return true ;
 }
 blocking runnable UNK = new blocking runnable ( r ) ;
 return UNK . post and wait ( this , timeout ) ;
 }
comment:
START returns false on failure , usually because the looper processing the message queue is exiting . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public artifact get output file ( ) {
 return output file ;
 }
comment:
START returns the path where gcc should put its result . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK UNK .
returns the name of the UNK

code:
@ override public long notify r ( input application handle input application handle , input window handle input window handle , string reason ) {
 app window token app window token = null ;
 window state window state = null ;
 boolean above system = false ;
 synchronized ( service . mwindow map ) {
 if ( input window handle != null ) {
 window state = ( window state ) input window handle . window state ;
 if ( window state != null ) {
 app window token = window state . mapp token ;
 }
 }
 if ( app window token == null && input application handle != null ) {
 app window token = ( app window token ) input application handle . app window token ;
 }
 if ( window state != null ) {
 slog . i ( tag_ m , String + String + window state . attrs . get title ( ) + String + reason ) ;
 int system alert layer = service . policy . window type to layer lw ( window manager . layout params . type_ system_ t ) ;
 above system = window state . mbase layer > system alert layer ;
 }
 else if ( app window token != null ) {
 slog . i ( tag_ m , String + String + app window token . string name + String + reason ) ;
 }
 else {
 slog . i ( tag_ m , String + String + reason ) ;
 }
 service . save UNK locked ( app window token , window state , reason ) ;
 }
 if ( app window token != null && app window token . app token != null ) {
 try {
 boolean abort = app window token . app token . key UNK timed out ( reason ) ;
 if ( ! abort ) {
 return app window token . input UNK timeout nanos ;
 }
 }
 catch ( remote exception ex ) {
 }
 }
 else if ( window state != null ) {
 try {
 long timeout = activity manager native . get default ( ) . input UNK timed out ( window state . session . pid , above system , reason ) ;
 if ( timeout >= DecimalInteger ) {
 return timeout * DecimalInteger ;
 }
 }
 catch ( remote exception ex ) {
 }
 }
 return DecimalInteger ;
 }
comment:
START returns a new timeout to continue waiting in nanoseconds , or NUMBER to UNK dispatch . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK UNK that be UNK to the UNK .

code:
public stack state get stack state ( ) {
 return state ;
 }
comment:
START returns the current stack state . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static byte [ ] to utf8 bytes ( char [ ] chars , int offset , int length ) {
 char buffer cb = char buffer . allocate ( length ) ;
 cb . put ( chars , offset , length ) ;
 return f_8 . encode ( cb ) . array ( ) ;
 }
comment:
START returns a new byte array containing the bytes corresponding to the given characters , encoded in utf-8 . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public final char char at ( int index ) {
 if ( index < DecimalInteger || index >= remaining ( ) ) {
 throw new index out of bounds exception ( ) ;
 }
 return get ( position + index ) ;
 }
comment:
START returns the character located at the specified index in the buffer . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean has shortcut host permission ( ) {
 try {
 return service . has shortcut host permission ( context . get package name ( ) ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns whether the caller can access the shortcut information . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets whether the UNK is UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public static short [ ] concat ( short [ ] ... arrays ) {
 int length = DecimalInteger ;
 for ( short [ ] array : arrays ) {
 length += array . length ;
 }
 short [ ] result = new short [ length ] ;
 int pos = DecimalInteger ;
 for ( short [ ] array : arrays ) {
 system . arraycopy ( array , DecimalInteger , result , pos , array . length ) ;
 pos += array . length ;
 }
 return result ;
 }
comment:
START returns the values from each provided array combined into a single array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
public int array to array ( ) {
 int array array = new int array ( true , set . size ) ;
 while ( has next ) array . add ( next ( ) ) ;
 return array ;
 }
comment:
START returns a new array containing the remaining keys . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK UNK

code:
public iterable < action context provider > get action context providers ( ) {
 return immutable list . of ( ) ;
 }
comment:
START returns the action context providers the module contributes to blaze , if any . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static path fragment get obj directory ( label rule label ) {
 return analysis utils . get unique directory ( rule label , new path fragment ( String ) ) ;
 }
comment:
START returns the directory where object files are created . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public final input port get connected input port ( string name ) {
 return UNK input ports . get ( name ) ;
 }
comment:
START returns the input port with the given name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static type reference new type parameter bound reference ( int sort , int param index , int bound index ) {
 return new type reference ( ( sort << DecimalInteger ) | ( param index << DecimalInteger ) | ( bound index << DecimalInteger ) ) ;
 }
comment:
START returns a reference to a type parameter bound of a generic class or method . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public int get notification marker position ( ) {
 return UNK ( ) ;
 }
comment:
START returns the notification marker position expressed in frames . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public final int get active consumer count ( ) {
 synchronized ( this . lifecycle monitor ) {
 return this . active invoker count ;
 }
 }
comment:
START return the number of currently active consumers . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
set < string > process names ( ) {
 set < string > names = new hash set < string > ( ) ;
 add process names ( loads , names ) ;
 add process names ( initializations , names ) ;
 return names ;
 }
comment:
START returns names of processes that loaded this class . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public static string escaped path ( string path ) {
 return path_ r . escape ( path ) ;
 }
comment:
START returns the escaped name for a given relative path as a string . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static view stub find view stub by id ( activity a , int stub id ) {
 return ( view stub ) a . find view by id ( stub id ) ;
 }
comment:
START returns a view stub for the given view id . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
@ non null public project get main project ( @ non null project project ) {
 return project ;
 }
comment:
START returns the project to be used as the main project during analysis . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public drawable get icon ( int density ) {
 final int icon res = mactivity info . get icon resource ( ) ;
 drawable icon = null ;
 if ( density != DecimalInteger && icon res != DecimalInteger ) {
 try {
 final resources resources = pm . get resources for application ( mactivity info . application info ) ;
 icon = resources . get drawable for density ( icon res , density ) ;
 }
 catch ( name not found exception | resources . not found exception UNK ) {
 }
 }
 if ( icon == null ) {
 icon = mactivity info . load icon ( pm ) ;
 }
 return icon ;
 }
comment:
START returns the icon for this activity , without any badging for the profile . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public connection handle get connection handle ( ) {
 return this . connection handle ;
 }
comment:
START return the connection handle held by this connection holder . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the number of UNK .
return the list of UNK .
return the number of all UNK .

code:
public char sequence get logo description ( ) {
 return mlogo view != null ? mlogo view . get content description ( ) : null ;
 }
comment:
START return the description of the toolbar 's logo . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ state public int get state ( ) {
 return state ;
 }
comment:
START get the current state of playback . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
private static int get ordering ( int category order ) {
 final int index = ( category order & category_ k ) > > category_ t ;
 if ( index < DecimalInteger || index >= UNK to order . length ) {
 throw new illegal argument exception ( String ) ;
 }
 return ( UNK to order [ index ] << category_ t ) | ( category order & user_ k ) ;
 }
comment:
START returns the ordering across all items . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public final paint get paint ( ) {
 return mbitmap state . paint ;
 }
comment:
START returns the paint used to render this drawable . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static abstract statement retriever create direct retriever ( context context ) {
 return new direct statement retriever ( new fetcher ( ) , new android package info fetcher ( context ) ) ;
 }
comment:
START creates a new statement UNK that directly retrieves statements from the asset . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public float get carrier frequency hz ( ) {
 return mcarrier frequency hz ;
 }
comment:
START gets the carrier frequency at which codes and messages are UNK . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public long get interval ( ) {
 return delegate . get interval ( ) ;
 }
comment:
START get the desired interval of this request , in milliseconds . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
pip control button view get focused button ( ) {
 return mfocused child ;
 }
comment:
START returns the focused control button view to animate focused button . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public match query . zero terms query zero terms query ( ) {
 return this . zero terms query ;
 }
comment:
START returns the setting for handling zero terms queries . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public int get checked item position ( ) {
 if ( mchoice mode == choice_ mode_ e && mcheck states != null && mcheck states . size ( ) == DecimalInteger ) {
 return mcheck states . key at ( DecimalInteger ) ;
 }
 return invalid_ n ;
 }
comment:
START returns the currently checked item . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public byte [ ] icc exchange sim o ( int sub id , int file d , int command , int p1 , int p2 , int p3 , string file path ) {
 try {
 telephony telephony = get telephony ( ) ;
 if ( telephony != null ) return telephony . icc exchange sim o ( sub id , file d , command , p1 , p2 , p3 , file path ) ;
 }
 catch ( remote exception ex ) {
 }
 catch ( null pointer exception ex ) {
 }
 return null ;
 }
comment:
START returns the response apdu for a command apdu sent through sim_ o . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
item new integer ( final int value ) {
 key . set ( value ) ;
 item result = get ( key ) ;
 if ( result == null ) {
 pool . put byte ( t ) . put int ( value ) ;
 result = new item ( index ++ , key ) ;
 put ( result ) ;
 }
 return result ;
 }
comment:
START adds an integer to the constant pool of the class being build . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
@ visible for testing public void invalidate configuration collection ( ) {
 invalidate ( sky function name . function is in ( immutable set . of ( sky functions . configuration_ t , sky functions . configuration_ n ) ) ) ;
 }
comment:
START removes configuration fragment UNK and configuration collection values from the cache . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public root info get default root blocking ( state state ) {
 for ( root info root : get matching roots ( get roots blocking ( ) , state ) ) {
 if ( root . is downloads ( ) ) {
 return root ;
 }
 }
 return UNK root ;
 }
comment:
START returns the default root for the specified state . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ exported property public char sequence get UNK hour ( ) {
 return UNK ;
 }
comment:
START returns the formatting pattern used to display the date and/or time in NUMBER mode . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set instance info ( pres res instance info instance info ) {
 this . minstance info = instance info ;
 }
comment:
START sets the presence service resource instance information . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set max rows ( int max rows ) {
 this . max rows = max rows ;
 }
comment:
START set the maximum number of rows for this jdbc template . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public abstract list < intent filter > get all intent filters ( string package name ) ;
comment:
START get the list of intent filter for a specific package . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given file .
return the UNK of the given UNK .

code:
public xcode provider get xcode provider ( ) {
 xcode provider . builder xcode provider builder = new xcode provider . builder ( ) . add user header search paths ( get user header search paths ( ) ) . set compilation artifacts ( get compilation artifacts ( ) ) ;
 new xcode support ( rule context ) . add xcode settings ( xcode provider builder , get common ( ) . get objc provider ( ) , library_ c ) . add dependencies ( xcode provider builder , new attribute ( objc rule classes . proto_ UNK r , mode . t ) ) ;
 return xcode provider builder . build ( ) ;
 }
comment:
START returns the xcode provider for this target . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int set volume ( float gain ) {
 return set stereo volume ( gain , gain ) ;
 }
comment:
START sets the specified output gain value on all channels of this track . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
sets the UNK of the given UNK .

code:
processor create ( map < string , processor . factory > processor factories , string tag , map < string , object > config ) throws exception ;
comment:
START creates a processor based on the specified map of maps config . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the given .

code:
void add instance ( instance instance ) {
 instances . add ( instance ) ;
 }
comment:
START add an instance to the UNK @param instance END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
adds the UNK to the given .
add the UNK UNK to the UNK

code:
public static UNK policy get UNK policy ( ) {
 synchronized ( strict mode . class ) {
 return UNK policy ;
 }
 }
comment:
START gets the current UNK policy . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static type get type ( final string type descriptor ) {
 return get type ( type descriptor . to char array ( ) , DecimalInteger ) ;
 }
comment:
START returns the java type corresponding to the given type descriptor . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set arguments ( object [ ] arguments ) {
 this . arguments = arguments ;
 }
comment:
START set the arguments for the target method call . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK

code:
public void set default encoding ( string default encoding ) {
 this . default encoding = default encoding ;
 }
comment:
START set the default encoding for the free marker configuration . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public map < string , object > params ( ) {
 return params ;
 }
comment:
START get parameters that will be available in the init , map and combine UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final int get start x ( ) {
 return mscroller x . start ;
 }
comment:
START returns the start x offset in the scroll . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public void remove attribute ( string name ) {
 this . attributes . remove ( name ) ;
 remove destruction callback ( name ) ;
 }
comment:
START remove the attribute of the given name , if it exists . END
BLUE1:0.428571428571
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to UNK the UNK .
used to the UNK of the given UNK .

code:
@ suppress warnings ( String ) void add providers from skylark ( object to add ) {
 if ( ! ( to add instanceof iterable ) ) {
 throw new illegal argument exception ( string . format ( apple skylark common . bad_ UNK UNK r , eval utils . get data type name ( to add ) ) ) ;
 }
 else {
 iterable < object > to add iterable = ( iterable < object > ) to add ;
 for ( object to add object : to add iterable ) {
 if ( ! ( to add object instanceof objc provider ) ) {
 throw new illegal argument exception ( string . format ( apple skylark common . bad_ UNK UNK r , eval utils . get data type name ( to add object ) ) ) ;
 }
 else {
 this . add transitive and propagate ( ( objc provider ) to add object ) ;
 }
 }
 }
 }
comment:
START adds the given providers from skylark . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
@ visible for testing public variables get build variables ( ) {
 return this . variables ;
 }
comment:
START returns the build variables used to template the crosstool for this linker invocation . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public string to short string ( ) {
 return exited ( ) ? String + get exit code ( ) : timedout ? String : get signal string ( get UNK signal ( ) ) ;
 }
comment:
START returns a short string describing the termination status . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static byte string from proto ( message lite proto ) {
 md5 output stream md5 stream = new md5 output stream ( ) ;
 try {
 proto . write to ( md5 stream ) ;
 }
 catch ( exception e ) {
 throw new illegal state exception ( String , e ) ;
 }
 return to byte string ( md5 stream . get digest ( ) ) ;
 }
comment:
START gets the digest of the given proto . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public web message port [ ] get ports ( ) {
 return ports ;
 }
comment:
START returns the ports that are sent with the message , or null if no port is sent . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
@ nullable public color state list get color state list ( @ color res int id , @ nullable theme theme ) throws not found exception {
 final typed value value = obtain temp typed value ( ) ;
 try {
 final resources impl impl = mresources impl ;
 impl . get value ( id , value , true ) ;
 return impl . load color state list ( this , value , id , theme ) ;
 }
 finally {
 release temp typed value ( value ) ;
 }
 }
comment:
START returns a themed color state list associated with a particular resource id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public list < engine info > get engines ( ) {
 package manager pm = context . get package manager ( ) ;
 intent intent = new intent ( engine . intent_ action_ UNK e ) ;
 list < resolve info > resolve infos = pm . query intent services ( intent , package manager . match_ default_ y ) ;
 if ( resolve infos == null ) return collections . empty list ( ) ;
 list < engine info > engines = new array list < engine info > ( resolve infos . size ( ) ) ;
 for ( resolve info resolve info : resolve infos ) {
 engine info engine = get engine info ( resolve info , pm ) ;
 if ( engine != null ) {
 engines . add ( engine ) ;
 }
 }
 collections . sort ( engines , engine info comparator . e ) ;
 return engines ;
 }
comment:
START gets a list of all installed tts engines . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
@ non null public string get detail ( ) {
 return detail ;
 }
comment:
START returns the relation 's detail . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set max wait ( long max wait ) {
 this . max wait = max wait ;
 }
comment:
START set the maximum waiting time for fetching an object from the pool . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static float distance segment point ( vector2 start , vector2 end , vector2 point ) {
 return nearest segment point ( start , end , point , UNK ) . dst ( point ) ;
 }
comment:
START returns the distance between the given segment and point . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public bluetooth gatt characteristic get characteristic ( ) {
 return characteristic ;
 }
comment:
START returns the characteristic this descriptor belongs to . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set color ( color tint ) {
 float color = tint . to float bits ( ) ;
 float [ ] vertices = this . vertices ;
 vertices [ c1 ] = color ;
 vertices [ c2 ] = color ;
 vertices [ c3 ] = color ;
 vertices [ UNK ] = color ;
 }
comment:
START sets the color used to tint this sprite . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static void set UNK patch ( string value , nine patch chunk nine patch , object project key ) {
 if ( project key != null ) {
 map < string , soft reference < nine patch chunk > > map = UNK patch cache . get ( project key ) ;
 if ( map == null ) {
 map = new hash map < string , soft reference < nine patch chunk > > ( ) ;
 UNK patch cache . put ( project key , map ) ;
 }
 map . put ( value , new soft reference < nine patch chunk > ( nine patch ) ) ;
 }
 else {
 UNK patch cache . put ( value , new soft reference < nine patch chunk > ( nine patch ) ) ;
 }
 }
comment:
START sets a NUMBER patch chunk in a project cache or in the framework cache . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given view .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the UNK .

code:
public native void set audio source ( int UNK ) throws illegal state exception ;
comment:
START sets the audio source to be used for recording . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
void upload all results ( path exec root , collection < path > files , action result . builder result ) throws exception , interrupted exception ;
comment:
START add the files to the action result builder . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set content view ( view view ) {
 get window ( ) . set content view ( view ) ;
 }
comment:
START sets a view to be the content view for this dream . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public glyph layout add text ( char sequence str , float x , float y , int start , int end , float target width , int halign , boolean wrap , string truncate ) {
 glyph layout layout = pools . obtain ( glyph layout . class ) ;
 pooled layouts . add ( layout ) ;
 layout . set text ( font , str , start , end , color , target width , halign , wrap , truncate ) ;
 add text ( layout , x , y ) ;
 return layout ;
 }
comment:
START adds glyphs for the the specified text . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
protected locale get default locale ( ) {
 return this . default locale ;
 }
comment:
START return the fixed locale that this resolver will return if no cookie found , if any . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
float get UNK stack scroll ( float scroll ) {
 return utilities . clamp ( scroll , mlayout algorithm . mmin scroll p , mlayout algorithm . mmax scroll p ) ;
 }
comment:
START returns the UNK stack scroll END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public label get local target label ( string target name ) throws label syntax exception {
 return create ( package identifier , target name ) ;
 }
comment:
START returns a label in the same package as this label with the given target name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public array < k > to array ( ) {
 array array = new array ( true , map . size ) ;
 while ( has next ) array . add ( next ( ) ) ;
 return array ;
 }
comment:
START returns a new array containing the remaining keys . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK UNK

code:
public stomp session handler get session handler ( ) {
 return this . session handler ;
 }
comment:
START return the configured session handler . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of all UNK .
return the number of all UNK in the given .

code:
public float get line width ( int line ) {
 float margin = get paragraph leading margin ( line ) ;
 float signed extent = get line extent ( line , true ) ;
 return margin + ( signed extent >= DecimalInteger ? signed extent : - signed extent ) ;
 }
comment:
START gets the unsigned horizontal extent of the specified line , including leading margin indent and trailing whitespace . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public entries < v > entries ( ) {
 if ( entries1 == null ) {
 entries1 = new entries ( this ) ;
 entries2 = new entries ( this ) ;
 }
 if ( ! entries1 . valid ) {
 entries1 . reset ( ) ;
 entries1 . valid = true ;
 entries2 . valid = false ;
 return entries1 ;
 }
 entries2 . reset ( ) ;
 entries2 . valid = true ;
 entries1 . valid = false ;
 return entries2 ;
 }
comment:
START returns an iterator for the entries in the map . remove is supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final connection remove connection listener ( listener l ) {
 if ( l != null ) {
 listeners . remove ( l ) ;
 }
 return this ;
 }
comment:
START remove a previously assigned listener that was being notified of state changes . END
BLUE1:0.428571428571
--generate--
creates a listener to UNK UNK .
create a listener to UNK UNK .
creates a listener to UNK .
create a listener to UNK UNK to the UNK .
create a listener to UNK UNK to the given UNK .

code:
public void set restitution ( float restitution ) {
 UNK = restitution ;
 }
comment:
START set the coefficient of restitution . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public final jdbc template get jdbc template ( ) {
 return this . jdbc template ;
 }
comment:
START return the jdbc template for this dao , pre-initialized with the data source or set explicitly . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the number of all UNK .
return the number of all UNK in this .
return the number of all UNK in the given .

code:
public boolean after ( time that ) {
 return time . compare ( this , that ) > DecimalInteger ;
 }
comment:
START returns true if the time represented by this time object occurs after the given time . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .

code:
public string get artifact id ( ) {
 return this . artifact id ;
 }
comment:
START return the exclusion artifact id . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public builder host only domain ( string domain ) {
 return domain ( domain , true ) ;
 }
comment:
START set the UNK domain for this cookie . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ color int public int get color ( ) {
 return paint . get color ( ) ;
 }
comment:
START return the color of this edge effect in argb . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public object get suspended resources ( ) {
 return this . suspended resources ;
 }
comment:
START return the holder for resources that have been suspended for this transaction , if any . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public rest status status ( ) {
 throwable cause = unwrap cause ( ) ;
 if ( cause == this ) {
 return rest status . internal_ server_ r ;
 }
 else {
 return exceptions helper . status ( cause ) ;
 }
 }
comment:
START returns the rest status code associated with this exception . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public int get window decor inset bottom ( ) {
 return mwindow decor insets . bottom ;
 }
comment:
START returns the bottom window decor inset in pixels . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
public spel node get t ( ) {
 return this . ast ;
 }
comment:
START return the abstract syntax tree for the expression . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public conditional aapt command builder when ( boolean condition ) {
 if ( condition ) {
 return new successful condition command builder ( this ) ;
 }
 else {
 return new failed condition command builder ( this ) ;
 }
 }
comment:
START adds the next flag to the builder only if the condition is true . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public long get ( int index ) {
 if ( index >= size ) {
 throw new array index out of bounds exception ( size , index ) ;
 }
 return values [ index ] ;
 }
comment:
START returns the value at the specified position in this array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
void set value ( evaluation context context , object root object , object value ) throws evaluation exception ;
comment:
START set this expression in the provided context to the value provided . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
item new double ( final double value ) {
 key . set ( value ) ;
 item result = get ( key ) ;
 if ( result == null ) {
 pool . put byte ( e ) . put long ( key . long val ) ;
 result = new item ( index , key ) ;
 index += DecimalInteger ;
 put ( result ) ;
 }
 return result ;
 }
comment:
START adds a double to the constant pool of the class being build . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .

code:
private item get ( final item key ) {
 item i = items [ key . hash code % items . length ] ;
 while ( i != null && ( i . type != key . type || ! key . is equal to ( i ) ) ) {
 i = i . next ;
 }
 return i ;
 }
comment:
START returns the constant pool 's hash table item which is equal to the given item . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK

code:
public void get UNK for origin ( string origin , value callback < long > callback ) {
 }
comment:
START gets the storage UNK for the web sql database api for the given origin . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
@ override public string to string ( ) {
 time calculator calculator = new time calculator ( this . timezone ) ;
 calculator . copy fields from time ( this ) ;
 return calculator . to string internal ( ) ;
 }
comment:
START return the current time in UNK UNK format END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
public void set title margin end ( int margin ) {
 mtitle margin end = margin ;
 request layout ( ) ;
 }
comment:
START sets the ending title margin in pixels . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean add ( int key ) {
 if ( key == DecimalInteger ) {
 if ( has zero value ) return false ;
 has zero value = true ;
 size ++ ;
 return true ;
 }
 int [ ] key table = this . key table ;
 int index1 = key & mask ;
 int key1 = key table [ index1 ] ;
 if ( key1 == key ) return false ;
 int index2 = hash2 ( key ) ;
 int key2 = key table [ index2 ] ;
 if ( key2 == key ) return false ;
 int index3 = hash3 ( key ) ;
 int key3 = key table [ index3 ] ;
 if ( key3 == key ) return false ;
 for ( int i = capacity , n = i + stash size ;
 i < n ;
 i ++ ) if ( key table [ i ] == key ) return false ;
 if ( key1 == y ) {
 key table [ index1 ] = key ;
 if ( size ++ >= threshold ) resize ( capacity << DecimalInteger ) ;
 return true ;
 }
 if ( key2 == y ) {
 key table [ index2 ] = key ;
 if ( size ++ >= threshold ) resize ( capacity << DecimalInteger ) ;
 return true ;
 }
 if ( key3 == y ) {
 key table [ index3 ] = key ;
 if ( size ++ >= threshold ) resize ( capacity << DecimalInteger ) ;
 return true ;
 }
 push ( key , index1 , key1 , index2 , key2 , index3 , key3 ) ;
 return true ;
 }
comment:
START returns true if the key was not already in the set . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void add validators ( validator ... validators ) {
 assert validators ( validators ) ;
 this . validators . add all ( arrays . as list ( validators ) ) ;
 }
comment:
START add UNK to apply after each binding step . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public value holder get indexed argument value ( int index , class < ? > required type , string required name ) {
 assert . is true ( index >= DecimalInteger , String ) ;
 value holder value holder = this . indexed argument values . get ( index ) ;
 if ( value holder != null && ( value holder . get type ( ) == null || ( required type != null && class utils . matches type name ( required type , value holder . get type ( ) ) ) ) && ( value holder . get name ( ) == null || String . equals ( required name ) || ( required name != null && required name . equals ( value holder . get name ( ) ) ) ) ) {
 return value holder ;
 }
 return null ;
 }
comment:
START get argument value for the given index in the constructor argument list . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public boolean is active ( ) {
 component root = swing utilities . get root ( canvas ) ;
 return root instanceof frame ? ( ( frame ) root ) . is active ( ) : true ;
 }
comment:
START returns true when the frame containing the canvas is the foreground window . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .

code:
public void set url path helper ( url path helper url path helper ) {
 assert . not null ( url path helper , String ) ;
 this . url path helper = url path helper ;
 }
comment:
START set the url path helper to use for resolution of lookup paths . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public argument set index ( int index ) {
 if ( index < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . index = index ;
 return this ;
 }
comment:
START sets the argument index . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private blob store format < snapshot info > snapshot format ( version version ) {
 if ( legacy meta data ( version ) ) {
 return snapshot legacy format ;
 }
 else {
 return snapshot format ;
 }
 }
comment:
START returns appropriate snapshot format based on the provided version of the snapshot END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public int get type ( ) {
 return attributes & usb constants . usb_ UNK UNK k ;
 }
comment:
START returns the endpoint 's type . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static < k , v > copy on write hash map < k , v > copy of ( map < ? extends k , ? extends v > map ) {
 if ( map instanceof copy on write hash map ) {
 @ suppress warnings ( String ) final copy on write hash map < k , v > UNK map = ( copy on write hash map < k , v > ) map ;
 return UNK map ;
 }
 else {
 return new copy on write hash map < k , v > ( ) . copy and put all ( map ) ;
 }
 }
comment:
START return a copy of the provided map . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the given UNK .

code:
@ system api public long [ ] get serial numbers of users ( boolean exclude UNK ) {
 try {
 list < user info > users = service . get users ( exclude UNK ) ;
 long [ ] result = new long [ users . size ( ) ] ;
 for ( int i = DecimalInteger ;
 i < result . length ;
 i ++ ) {
 result [ i ] = users . get ( i ) . serial number ;
 }
 return result ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns serial numbers of all users on this device . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public build options clone ( @ nullable build options original options ) {
 immutable map . builder < class < ? extends fragment options > , fragment options > builder = immutable map . builder ( ) ;
 for ( map . entry < class < ? extends fragment options > , fragment options > entry : fragment options map . entry set ( ) ) {
 builder . put ( entry . get key ( ) , entry . get value ( ) . clone ( ) ) ;
 }
 return new build options ( builder . build ( ) , original options ) ;
 }
comment:
START creates a copy of the build options object that stores a set of original options . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
private void add to query ( priority queue < score term > q , boolean query . builder query ) {
 score term score term ;
 float best score = - DecimalInteger ;
 while ( ( score term = q . pop ( ) ) != null ) {
 query UNK = new term query ( new term ( score term . top field , score term . word ) ) ;
 if ( boost ) {
 if ( best score == - DecimalInteger ) {
 best score = ( score term . score ) ;
 }
 float my score = ( score term . score ) ;
 UNK = new boost query ( UNK , boost factor * my score / best score ) ;
 }
 try {
 query . add ( UNK , boolean clause . UNK . d ) ;
 }
 catch ( boolean query . UNK many clauses ignore ) {
 break ;
 }
 }
 }
comment:
START add to an existing boolean query the more like this query from this priority queue END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public byte size value get indexing buffer size ( ) {
 return indexing buffer size ;
 }
comment:
START returns the initial index buffer size . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public map < string , metadata field mapper . type parser > get metadata mapper parsers ( ) {
 return metadata mapper parsers ;
 }
comment:
START return a map of the meta mappers that have been registered . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public http headers set ( char sequence name , object value ) {
 return set ( name . to string ( ) , value ) ;
 }
comment:
START sets a header with the specified name and value . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set exception class ( class < ? > exception class ) {
 if ( ! data access exception . class . is assignable from ( exception class ) ) {
 throw new illegal argument exception ( String + exception class + String ) ;
 }
 this . exception class = exception class ;
 }
comment:
START set the exception class for the specified error codes . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
private static string random word ( random random , int length ) {
 string result = String ;
 for ( int j = DecimalInteger ;
 j < length ;
 j ++ ) {
 int base = random . next int ( DecimalInteger ) == DecimalInteger ? String : String ;
 result += ( char ) ( random . next int ( DecimalInteger ) + base ) ;
 }
 return result ;
 }
comment:
START create word of random UNK of UNK case UNK END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public static uri get lookup uri ( long contact id , string lookup key ) {
 if ( text utils . is empty ( lookup key ) ) {
 return null ;
 }
 return content uris . with appended id ( uri . with appended path ( contacts . content_ UNK i , lookup key ) , contact id ) ;
 }
comment:
START returns null if unable to construct a valid lookup uri from the provided parameters . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set database configurer ( embedded database configurer configurer ) {
 this . database configurer = configurer ;
 }
comment:
START set the strategy that will be used to configure the embedded database instance . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void on attach ( ) {
 if ( mis attached ) {
 return ;
 }
 mis attached = true ;
 for ( int i = DecimalInteger ;
 i < holders . size ( ) ;
 ++ i ) {
 holders . get ( i ) . on attach ( ) ;
 }
 }
comment:
START gets the controller ready to display the images . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static color converter new instance ( configuration config , string [ ] options ) {
 if ( options . length < DecimalInteger ) {
 r . error ( String + String , options . length ) ;
 return null ;
 }
 if ( options [ DecimalInteger ] == null ) {
 r . error ( String ) ;
 return null ;
 }
 pattern parser parser = pattern layout . create pattern parser ( config ) ;
 list < pattern formatter > formatters = parser . parse ( options [ DecimalInteger ] ) ;
 UNK element element = ( options . length == DecimalInteger ? null : s . get ( options [ DecimalInteger ] ) ) ;
 return new color converter ( formatters , element ) ;
 }
comment:
START creates a new instance of the class . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public abstract level step tracker get discharge level step tracker ( ) ;
comment:
START return the array of discharge step durations . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public double get double ( int row , int column ) {
 acquire reference ( ) ;
 try {
 return native get double ( mwindow ptr , row - mstart pos , column ) ;
 }
 finally {
 release reference ( ) ;
 }
 }
comment:
START gets the value of the field at the specified row and column index as a double . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set parameter ( string name , string value ) {
 set parameter ( name , new string [ ] {
 value }
 ) ;
 }
comment:
START set a single value for the specified http parameter . END
BLUE1:0.428571428571
--generate--
set the list of UNK UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
set the list of UNK UNK to UNK .
set the list of UNK UNK

code:
@ override public sorted set < v > get ( @ nullable k key ) {
 return ( sorted set < v > ) super . get ( key ) ;
 }
comment:
START returns a collection view of all values associated with a key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public static integer read int property ( string processor type , string processor tag , map < string , object > configuration , string property name , integer default value ) {
 object value = configuration . remove ( property name ) ;
 if ( value == null ) {
 return default value ;
 }
 try {
 return integer . parse int ( value . to string ( ) ) ;
 }
 catch ( exception e ) {
 throw new configuration exception ( processor type , processor tag , property name , String + value . to string ( ) + String ) ;
 }
 }
comment:
START returns and removes the specified property from the specified configuration map . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean is UNK controls enabled ( ) {
 try {
 return service . is UNK controls enabled ( muser id ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns the user 's UNK controls enabled state . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK of the given UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
@ override public string to string ( ) {
 return get descriptor ( ) ;
 }
comment:
START returns a string representation of this type . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static int get shared app gid ( int id ) {
 return process . first_ shared_ application_ d + ( id % per_ user_ e ) - process . first_ application_ d ;
 }
comment:
START returns the shared app gid for a given uid or app id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public final void set edge flags ( int flags ) {
 native set edge flags ( mnative ptr , flags ) ;
 }
comment:
START sets the bitfield indicating which edges , if any , were touched by this motion event . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int get max packet size ( ) {
 return mmax packet size ;
 }
comment:
START returns the endpoint 's maximum packet size . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public hdmi device info get active source ( ) {
 try {
 return service . get active source ( ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return null ;
 }
comment:
START returns the active source information . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ nullable public build configuration create configurations ( cache < string , build configuration > cache , package provider for configurations loaded package provider , build options build options , event handler error event listener ) throws invalid configuration exception , interrupted exception {
 return configuration collection factory . create configurations ( this , cache , loaded package provider , build options , error event listener ) ;
 }
comment:
START creates a set of build configurations with top-level configuration having the given options . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set res uri ( string res uri ) {
 this . mres uri = res uri ;
 }
comment:
START sets the resource uri . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given .

code:
private boolean is empty ( ) {
 return text utils . get trimmed length ( get text ( ) ) == DecimalInteger ;
 }
comment:
START returns true if the text field is empty , or contains only whitespace . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the UNK .

code:
public void set line color ( int color ) {
 mline color = color ;
 }
comment:
START sets the UNK for this limit line . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set max loop counter ( int max ) {
 this . max loop counter = max ;
 }
comment:
START set the cumulative total number of statements that can be made in all loops . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public list < string > get aliases ( ) {
 return aliases ;
 }
comment:
START returns the accepted string aliases for this xcode version . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public int get key size ( ) {
 return mkey size ;
 }
comment:
START returns the key size specified by this parameter . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public long last modified ( ) {
 throw new gdx runtime exception ( String ) ;
 }
comment:
START returns the last modified time in milliseconds for this file . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ deprecated public static parcel file descriptor from data ( byte [ ] data , string name ) throws exception {
 if ( data == null ) return null ;
 memory file file = new memory file ( name , data . length ) ;
 if ( data . length > DecimalInteger ) {
 file . write bytes ( data , DecimalInteger , DecimalInteger , data . length ) ;
 }
 file . UNK ( ) ;
 file descriptor fd = file . get file descriptor ( ) ;
 return fd != null ? new parcel file descriptor ( fd ) : null ;
 }
comment:
START gets a file descriptor for a read-only copy of the given data . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public void add log rec ( string string ) {
 sm handler smh = msm handler ;
 if ( smh == null ) return ;
 smh . mlog records . add ( this , smh . get current message ( ) , string , smh . get current state ( ) , smh . mstate stack [ smh . mstate stack top index ] . state , smh . UNK state ) ;
 }
comment:
START add the string to log records . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public void set distance ( float distance ) {
 distance = distance ;
 }
comment:
START sets the pixels to offset the shadow on the x axis . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public int get key size ( ) {
 return mkey size ;
 }
comment:
START returns the desired key size . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
int get next request code ( ) {
 synchronized ( this ) {
 return mnext request code ++ ;
 }
 }
comment:
START returns a request code that is unique for the activity . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static variable element get field ( string type name , string field name , processing environment env ) {
 type element map elt = env . get element utils ( ) . get type element ( type name ) ;
 for ( variable element var : element filter . fields in ( map elt . get enclosed elements ( ) ) ) {
 if ( var . get simple name ( ) . content equals ( field name ) ) {
 return var ;
 }
 }
 error reporter . error abort ( String ) ;
 return null ;
 }
comment:
START returns the variable element for a field declaration . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public boolean is quiet mode enabled ( user handle user handle ) {
 try {
 return service . is quiet mode enabled ( user handle . get identifier ( ) ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns whether the given profile is in UNK mode or not . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .

code:
public void set manifest file ( string manifest file ) {
 this . manifest file = manifest file ;
 }
comment:
START sets filename for the manifest content . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean is scheduled ( ) {
 return repeat count != d ;
 }
comment:
START returns true if this task is scheduled to be executed in the future by a timer . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
final fork join task < ? > next task for ( work queue w ) {
 for ( fork join task < ? > t ;
 ;
 ) {
 work queue q ;
 int b ;
 if ( ( t = w . next local task ( ) ) != null ) return t ;
 if ( ( q = find non empty steal queue ( ) ) == null ) return null ;
 if ( ( b = q . base ) - q . top < DecimalInteger && ( t = q . poll at ( b ) ) != null ) return t ;
 }
 }
comment:
START gets and removes a local or UNK task for the given worker . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public iterator < type > keys it ( ) {
 final iterator < object cursor < type > > iterator = map . keys ( ) . iterator ( ) ;
 return new iterator < type > ( ) {
 @ override public boolean has next ( ) {
 return iterator . has next ( ) ;
 }
 @ override public type next ( ) {
 return iterator . next ( ) . value ;
 }
 @ override public void remove ( ) {
 throw new unsupported operation exception ( ) ;
 }
 }
 ;
 }
comment:
START returns a direct iterator over the keys . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
@ override public synchronized int available ( ) throws exception {
 input stream local in = in ;
 if ( buf == null || local in == null ) {
 throw stream closed ( ) ;
 }
 return count - pos + local in . available ( ) ;
 }
comment:
START returns an estimated number of bytes that can be read or skipped without blocking for more input . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ skylark callable ( name = String , struct field = true , doc = String ) public string get host path separator ( ) {
 return s . get current ( ) == s . s ? String : String ;
 }
comment:
START returns the path separator for the host platform . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final void set surface in transaction locked ( surface surface ) {
 if ( mcurrent surface != surface ) {
 mcurrent surface = surface ;
 surface control . set display surface ( mdisplay token , surface ) ;
 }
 }
comment:
START sets the display surface while in a transaction . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set color ( int color ) {
 reset colors ( ) ;
 colors . add ( color ) ;
 }
comment:
START sets the one and only color that should be used for this data set . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static date time formatter hour ( ) {
 return constants . UNK ;
 }
comment:
START returns a formatter for a two digit hour of day . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public int new f8 ( final string value ) {
 key . set ( f8 , value , null , null ) ;
 item result = get ( key ) ;
 if ( result == null ) {
 pool . put byte ( f8 ) . put f8 ( value ) ;
 result = new item ( index ++ , key ) ;
 put ( result ) ;
 }
 return result . index ;
 }
comment:
START adds an utf8 string to the constant pool of the class being build . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public drawable get popup background ( ) {
 return popup . get background ( ) ;
 }
comment:
START get the background drawable for the spinner 's popup window of choices . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public synchronized long get last change time ( ) {
 return last change time ;
 }
comment:
START returns the time when the entity denoted by the current object was last changed . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string get element ( ) {
 return this . element ;
 }
comment:
START get the html element must be used to render the error messages . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public void read from parcel ( parcel in ) {
 x = in . read float ( ) ;
 y = in . read float ( ) ;
 }
comment:
START set the point 's coordinates from the data stored in the specified parcel . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set UNK ( map < string , string > UNK ) {
 this . UNK = UNK ;
 }
comment:
START set the map containing document type definition for the marshaller . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get launcher large icon density ( ) {
 final resources res = context . get resources ( ) ;
 final int density = res . get display metrics ( ) . density dpi ;
 final int sw = res . get configuration ( ) . smallest screen width dp ;
 if ( sw < DecimalInteger ) {
 return density ;
 }
 switch ( density ) {
 case display metrics . density_ w : return display metrics . density_ m ;
 case display metrics . density_ m : return display metrics . density_ h ;
 case display metrics . density_ v : return display metrics . density_ h ;
 case display metrics . density_ h : return display metrics . density_ h ;
 case display metrics . density_ h : return display metrics . density_ h ;
 case display metrics . density_ h : return display metrics . density_ h * DecimalInteger ;
 default : return ( int ) ( ( density * DecimalFloatingPoint ) + DecimalFloatingPoint ) ;
 }
 }
comment:
START get the preferred density of icons for the launcher . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
protected void set chaos instance selector ( chaos instance selector chaos instance selector ) {
 this . selector = chaos instance selector ;
 }
comment:
START sets the chaos instance selector . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public list < bar line scatter candle bubble data > get all data ( ) {
 list < bar line scatter candle bubble data > data = new array list < bar line scatter candle bubble data > ( ) ;
 if ( mline data != null ) data . add ( mline data ) ;
 if ( mbar data != null ) data . add ( mbar data ) ;
 if ( UNK data != null ) data . add ( UNK data ) ;
 if ( UNK data != null ) data . add ( UNK data ) ;
 if ( UNK data != null ) data . add ( UNK data ) ;
 return data ;
 }
comment:
START returns all data objects in row UNK if not null . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public destination resolver < d > get destination resolver ( ) {
 return this . destination resolver ;
 }
comment:
START return the configured destination resolver . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the UNK for the given UNK .
return the number of all UNK .
return the number of UNK UNK
return the number of all UNK in the given .

code:
public void set writer ( writer writer ) {
 if ( ! ( writer instanceof json writer ) ) writer = new json writer ( writer ) ;
 this . writer = ( json writer ) writer ;
 this . writer . set output type ( output type ) ;
 this . writer . set quote long values ( quote long values ) ;
 }
comment:
START sets the writer where json output will be written . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
collection < worker slot > all slots available for scheduling ( collection < supervisor details > existing supervisors , topologies topologies , set < string > topologies missing assignments ) ;
comment:
START returns all slots that are available for the next round of scheduling . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
list < string > get raw values for argument ( argument argument ) ;
comment:
START gets the raw values of the given argument . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static set < class < ? extends fragment options > > get options classes ( iterable < class < ? extends fragment > > fragment classes , rule class provider rule class provider ) {
 multimap < class < ? extends build configuration . fragment > , class < ? extends fragment options > > fragment to required options = array list multimap . create ( ) ;
 for ( configuration fragment factory fragment loader : ( ( configured rule class provider ) rule class provider ) . get configuration fragments ( ) ) {
 fragment to required options . put all ( fragment loader . UNK ( ) , fragment loader . required options ( ) ) ;
 }
 set < class < ? extends fragment options > > options = new hash set < > ( ) ;
 for ( class < ? extends build configuration . fragment > fragment class : fragment classes ) {
 options . add all ( fragment to required options . get ( fragment class ) ) ;
 }
 return options ;
 }
comment:
START returns the config fragment options classes used by the given fragment types . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the given .

code:
public void remove listener ( animator listener listener ) {
 if ( listeners == null ) {
 return ;
 }
 listeners . remove ( listener ) ;
 if ( listeners . size ( ) == DecimalInteger ) {
 listeners = null ;
 }
 }
comment:
START removes a listener from the set listening to this animation . END
BLUE1:0.428571428571
--generate--
returns the listener for UNK UNK .
returns the listener for UNK .
returns the listener that be used for the UNK .
returns the listener that be used for all UNK .
returns the listener that be used for the UNK of the UNK .

code:
public void set declaration ( variable tree decl ) {
 this . decl = decl ;
 }
comment:
START set the declaration tree for the variable . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
@ override protected void on activity result ( final int request code , final int result code , final intent data ) {
 if ( log . is loggable ( g , log . e ) ) {
 if ( data != null && data . get extras ( ) != null ) data . get extras ( ) . key set ( ) ;
 bundle extras = data != null ? data . get extras ( ) : null ;
 log . v ( g , String + request code + String + result code + String + extras + String ) ;
 }
 mpending request = request_ l ;
 if ( result code == result_ d ) {
 if ( accounts . is empty ( ) ) {
 set result ( activity . result_ d ) ;
 finish ( ) ;
 }
 return ;
 }
 if ( result code == result_ k ) {
 if ( request code == request_ UNK e ) {
 if ( data != null ) {
 string account type = data . get string extra ( account manager . key_ account_ e ) ;
 if ( account type != null ) {
 run add account for authenticator ( account type ) ;
 return ;
 }
 }
 log . d ( g , String + String ) ;
 }
 else if ( request code == request_ add_ t ) {
 string account name = null ;
 string account type = null ;
 if ( data != null ) {
 account name = data . get string extra ( account manager . key_ account_ e ) ;
 account type = data . get string extra ( account manager . key_ account_ e ) ;
 }
 if ( account name == null || account type == null ) {
 account [ ] current accounts = account manager . get ( this ) . get accounts for package ( mcalling package , mcalling uid ) ;
 set < account > pre existing accounts = new hash set < account > ( ) ;
 for ( parcelable account parcel : UNK accounts ) {
 pre existing accounts . add ( ( account ) account parcel ) ;
 }
 for ( account account : current accounts ) {
 if ( ! pre existing accounts . contains ( account ) ) {
 account name = account . name ;
 account type = account . type ;
 break ;
 }
 }
 }
 if ( account name != null || account type != null ) {
 set result and finish ( account name , account type ) ;
 return ;
 }
 }
 log . d ( g , String + String ) ;
 }
 if ( log . is loggable ( g , log . e ) ) {
 log . v ( g , String ) ;
 }
 set result ( activity . result_ d ) ;
 finish ( ) ;
 }
comment:
START return the result and UNK this activity . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set ( int left , int top , int right , int bottom ) {
 this . left = left ;
 this . top = top ;
 this . right = right ;
 this . bottom = bottom ;
 }
comment:
START set the rectangle 's coordinates to the specified values . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private float find signed distance ( final int center x , final int center y , boolean [ ] [ ] bitmap ) {
 final int width = bitmap [ DecimalInteger ] . length ;
 final int height = bitmap . length ;
 final boolean base = bitmap [ center y ] [ center x ] ;
 final int delta = ( int ) math . ceil ( spread ) ;
 final int start x = math . max ( DecimalInteger , center x - delta ) ;
 final int end x = math . min ( width - DecimalInteger , center x + delta ) ;
 final int start y = math . max ( DecimalInteger , center y - delta ) ;
 final int end y = math . min ( height - DecimalInteger , center y + delta ) ;
 int closest square dist = delta * delta ;
 for ( int y = start y ;
 y <= end y ;
 ++ y ) {
 for ( int x = start x ;
 x <= end x ;
 ++ x ) {
 if ( base != bitmap [ y ] [ x ] ) {
 final int square dist = square dist ( center x , center y , x , y ) ;
 if ( square dist < closest square dist ) {
 closest square dist = square dist ;
 }
 }
 }
 }
 float closest dist = ( float ) math . sqrt ( closest square dist ) ;
 return ( base ? DecimalInteger : - DecimalInteger ) * math . min ( closest dist , spread ) ;
 }
comment:
START returns the signed distance for a given point . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final int get line bottom ( int line ) {
 return get line top ( line + DecimalInteger ) ;
 }
comment:
START return the vertical position of the bottom of the specified line . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static boolean supports format ( string mime type ) {
 if ( ! is available ( ) ) {
 return false ;
 }
 string codec name = get codec name ( mime type ) ;
 return codec name != null && UNK has decoder ( codec name ) ;
 }
comment:
START returns whether the underlying library supports the specified mime type . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK UNK of the UNK .

code:
private static drm init data get drm init data from UNK ( list < atom . leaf atom > leaf children ) {
 array list < scheme data > scheme datas = null ;
 int leaf children size = leaf children . size ( ) ;
 for ( int i = DecimalInteger ;
 i < leaf children size ;
 i ++ ) {
 leaf atom child = leaf children . get ( i ) ;
 if ( child . type == atom . UNK ) {
 if ( scheme datas == null ) {
 scheme datas = new array list < > ( ) ;
 }
 byte [ ] pssh data = child . data . data ;
 d uuid = pssh atom util . parse uuid ( pssh data ) ;
 if ( uuid == null ) {
 log . w ( g , String ) ;
 }
 else {
 scheme datas . add ( new scheme data ( uuid , mime types . video_ UNK , pssh data ) ) ;
 }
 }
 }
 return scheme datas == null ? null : new drm init data ( scheme datas ) ;
 }
comment:
START returns drm init data from leaf UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public put index template request builder set aliases ( string source ) {
 request . aliases ( source ) ;
 return this ;
 }
comment:
START sets the aliases that will be associated with the index when it gets created END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public header discovery . dotd pruning mode get dotd pruning plan ( ) {
 return dotd pruning plan ;
 }
comment:
START returns the dotd pruning plan for compiles in this build . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set rotation ( float angle ) {
 float c = ( float ) math . cos ( angle ) , s = ( float ) math . sin ( angle ) ;
 vals [ s ] = c ;
 vals [ n ] = s ;
 }
comment:
START sets the rotation of this transform @param angle angle in radians END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ remotable view method public void set visibility ( @ visibility int visibility ) {
 set flags ( visibility , visibility_ k ) ;
 }
comment:
START set the enabled state of this view . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
rect get launch bounds ( ) {
 if ( service . UNK screen shown == lock_ screen_ n ) {
 return null ;
 }
 if ( stack == null ) {
 return null ;
 }
 final int stack id = stack . mstack id ;
 if ( stack id == home_ stack_ d || stack id == fullscreen_ workspace_ stack_ d || ( stack id == docked_ stack_ d && ! is resizeable ( ) ) ) {
 return is resizeable ( ) ? stack . bounds : null ;
 }
 else if ( ! stack id . persist task bounds ( stack id ) ) {
 return stack . bounds ;
 }
 return mlast non fullscreen bounds ;
 }
comment:
START returns the bounds that should be used to launch this task . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final void set value ( int value ) {
 if ( value != value ) {
 value = value ;
 update displayed value ( ) ;
 }
 }
comment:
START sets the currently displayed value . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public final string get name locked ( ) {
 return get display device info locked ( ) . name ;
 }
comment:
START gets the name of the display device . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
static byte [ ] new pre filled byte array ( int offset , int size ) {
 byte [ ] array = new byte [ size ] ;
 for ( int i = DecimalInteger ;
 i < size ;
 i ++ ) {
 array [ i ] = ( byte ) ( offset + i ) ;
 }
 return array ;
 }
comment:
START returns a byte array of length size that has values offset . . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public string get ( string key ) {
 return map . get ( key ) ;
 }
comment:
START returns a setting value based on the setting key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void add file ( string filename , date date , input stream in ) throws exception {
 zip file entry entry = new zip file entry ( filename ) ;
 entry . set time ( date != null ? date . get time ( ) : new date ( ) . get time ( ) ) ;
 add file ( entry , in ) ;
 }
comment:
START adds a file with the specified name and date to the combined zip file . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public object get tag ( int key ) {
 if ( UNK tags != null ) return UNK tags . get ( key ) ;
 return null ;
 }
comment:
START returns the tag associated with this view and the specified key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set default html escape ( boolean default html escape ) {
 this . default html escape = default html escape ;
 }
comment:
START set the default value for html escaping , to be put into the current page context . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static < k , v1 , v2 > map < k , v2 > transform values ( map < k , v1 > from map , function < ? super v1 , v2 > function ) {
 return transform entries ( from map , as entry transformer ( function ) ) ;
 }
comment:
START returns a view of a map where each value is transformed by a function . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public filter query provider get filter query provider ( ) {
 return mfilter query provider ;
 }
comment:
START returns the query filter provider used for filtering . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static uri add call ( caller info ci , context context , string number , string post dial digits , string via number , int presentation , int call type , int features , phone account handle account handle , long start , int duration , long data usage , boolean add for all users , user handle user to be inserted to ) {
 return add call ( ci , context , number , post dial digits , via number , presentation , call type , features , account handle , start , duration , data usage , add for all users , user to be inserted to , false ) ;
 }
comment:
START adds a call to the call log . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
add a new UNK to the UNK .
add a new UNK to the given UNK .
add a new UNK to the UNK to the given UNK .
add a new UNK to the given .

code:
@ override public string to string ( ) {
 string properties string = string . format ( String , is UNK ( ) , allows self UNK ( ) ) ;
 return string . format ( UNK string_ t , properties string , nodes ( ) , edge value map ( ) ) ;
 }
comment:
START returns a string representation of this graph . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public string to string ( ) {
 return get descriptor ( ) ;
 }
comment:
START returns a string representation of this type . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public values < v > values ( ) {
 if ( values iter1 == null ) {
 values iter1 = new values ( this ) ;
 values iter2 = new values ( this ) ;
 }
 if ( ! values iter1 . valid ) {
 values iter1 . index = DecimalInteger ;
 values iter1 . valid = true ;
 values iter2 . valid = false ;
 return values iter1 ;
 }
 values iter2 . index = DecimalInteger ;
 values iter2 . valid = true ;
 values iter1 . valid = false ;
 return values iter2 ;
 }
comment:
START returns an iterator for the values in the map . remove is supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final void set video state ( int video state ) {
 check immutable ( ) ;
 log . d ( this , String , video state ) ;
 mvideo state = video state ;
 for ( listener l : listeners ) {
 l . on video state changed ( this , mvideo state ) ;
 }
 }
comment:
START set the video state for the connection . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set service port ( int service port ) {
 this . service port = service port ;
 }
comment:
START set the port that the exported rmi service will use . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int get view horizontal drag range ( view child ) {
 return DecimalInteger ;
 }
comment:
START return the magnitude of a draggable child view 's horizontal range of motion in pixels . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set target class ( class < ? > target class ) {
 this . target classes = new class < ? > [ ] {
 target class }
 ;
 }
comment:
START set the castor target class . END
BLUE1:0.428571428571
--generate--
set the list of UNK UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
set the UNK of the given UNK .
set the UNK for the given UNK , in the UNK .

code:
public abstract array < asset descriptor > get dependencies ( string file name , file handle file , p parameter ) ;
comment:
START returns the assets this asset requires to be loaded first . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected final boolean matches ( condition context context , annotated type metadata metadata , condition condition ) {
 if ( condition instanceof spring boot condition ) {
 return ( ( spring boot condition ) condition ) . get match outcome ( context , metadata ) . is match ( ) ;
 }
 return condition . matches ( context , metadata ) ;
 }
comment:
START return true if any of the specified condition matches . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public class < ? > get persistent class ( ) {
 return ( this . persistent class instanceof class ? ( class < ? > ) this . persistent class : null ) ;
 }
comment:
START return the persistent class of the object that was not found . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public double get pseudorange rate in meters per sec ( ) {
 return mpseudorange rate in meters per sec ;
 }
comment:
START gets the pseudorange rate at the timestamp in m/s . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public void set density ( float density ) {
 jni set density ( addr , density ) ;
 }
comment:
START set the density of this fixture . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set style ( string style ) {
 this . style = style ;
 }
comment:
START set the two characters to use to format date values , in UNK time style . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
protected class < ? > required view class ( ) {
 return abstract url based view . class ;
 }
comment:
START return the required type of view for this resolver . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set user object ( object user object ) {
 this . user object = user object ;
 }
comment:
START sets an application specific object for UNK . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .

code:
public media type get content type ( ) {
 return this . content type ;
 }
comment:
START return the http request content type method that caused the failure . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public void remove range ( int start , int end ) {
 if ( end >= size ) throw new index out of bounds exception ( String + end + String + size ) ;
 if ( start > end ) throw new index out of bounds exception ( String + start + String + end ) ;
 float [ ] items = this . items ;
 int count = end - start + DecimalInteger ;
 if ( ordered ) system . arraycopy ( items , start + count , items , start , size - ( start + count ) ) ;
 else {
 int last index = this . size - DecimalInteger ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) items [ start + i ] = items [ last index - i ] ;
 }
 size -= count ;
 }
comment:
START removes the items between the specified indices , inclusive . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public list view get list view ( ) {
 ensure list ( ) ;
 return list ;
 }
comment:
START get the fragment 's list view widget . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set playback params ( @ non null playback params params ) {
 if ( params == null ) {
 throw new illegal argument exception ( String ) ;
 }
 UNK ( params ) ;
 }
comment:
START sets the playback parameters . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public static gc snapshot create default snapshot ( bitmap_ delegate bitmap ) {
 gc snapshot snapshot = new gc snapshot ( ) ;
 if ( bitmap != null ) {
 snapshot . set bitmap ( bitmap ) ;
 }
 return snapshot ;
 }
comment:
START creates the root snapshot UNK it with a given bitmap . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public void add child ( string name , json value value ) {
 value . name = name ;
 add child ( value ) ;
 }
comment:
START sets the name of the specified value and adds it after the last child . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add a new UNK to the UNK .
add the UNK UNK to the given UNK .
add the UNK UNK to the UNK

code:
public uri get data uri ( ) {
 return mdata uri ;
 }
comment:
START get the the uri pointing to the content of the message . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set exception resolvers ( list < handler exception resolver > exception resolvers ) {
 this . resolvers = exception resolvers ;
 }
comment:
START set the list of exception resolvers to delegate to . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public card emulation route get card emulation route ( ) {
 try {
 int route = service . get card emulation route ( mpackage name ) ;
 return route == card emulation route . route_ f ? route_ f : mroute on when screen on ;
 }
 catch ( remote exception e ) {
 attempt dead service recovery ( e ) ;
 return route_ f ;
 }
 }
comment:
START get the routing state of this nfc ee . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void detach ( object entity ) {
 get entity manager ( ) . detach ( entity ) ;
 }
comment:
START remove the given entity from the persistence context , UNK a managed entity to become detached . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public e coordinate ( coordinate coordinate ) {
 this . coordinates . add ( coordinate ) ;
 return this ref ( ) ;
 }
comment:
START add a new coordinate to the collection @param coordinate coordinate of the point @return this END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
nested set < artifact > get files to compile ( boolean is lipo context collector , boolean parse headers , boolean use pic ) {
 if ( is lipo context collector ) {
 return nested set builder . < artifact > empty set ( order . stable_ r ) ;
 }
 nested set builder < artifact > files = nested set builder . stable order ( ) ;
 files . add all ( get object files ( use pic ) ) ;
 if ( parse headers ) {
 files . add all ( get header token files ( ) ) ;
 }
 return files . build ( ) ;
 }
comment:
START returns the output files that are considered `` compiled '' by this c++ compile action . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static size get largest supported jpeg size by area ( camera . parameters params ) {
 check not null ( params , String ) ;
 list < size > supported jpeg sizes = convert size list ( params . get supported picture sizes ( ) ) ;
 return size area comparator . find largest by area ( supported jpeg sizes ) ;
 }
comment:
START returns the largest supported picture size , as compared by its area . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public header set get received header ( ) throws exception {
 ensure open ( ) ;
 return UNK header ;
 }
comment:
START returns the headers that have been received during the operation . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int [ ] get available hot pixel modes checked ( ) {
 key < int [ ] > key = camera characteristics . hot_ pixel_ available_ hot_ pixel_ s ;
 int [ ] modes = get value from key non null ( key ) ;
 if ( modes == null ) {
 return new int [ DecimalInteger ] ;
 }
 list < integer > mode list = arrays . as list ( camera test utils . to object ( modes ) ) ;
 if ( is hardware level full ( ) ) {
 check true for key ( key , String , mode list . contains ( camera metadata . hot_ pixel_ mode_ t ) ) ;
 }
 if ( is hardware level limited or better ( ) ) {
 list < integer > coupled modes = arrays . as list ( new integer [ ] {
 camera metadata . hot_ pixel_ mode_ t , camera metadata . hot_ pixel_ mode_ high_ y }
 ) ;
 check true for key ( key , String , contains all or none ( mode list , coupled modes ) ) ;
 }
 check element distinct ( key , mode list ) ;
 check array values in range ( key , modes , camera metadata . hot_ pixel_ mode_ f , camera metadata . hot_ pixel_ mode_ high_ y ) ;
 return modes ;
 }
comment:
START get and check the available UNK pixel map modes . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .

code:
public layout log get log ( ) {
 if ( params != null ) {
 return params . get log ( ) ;
 }
 return null ;
 }
comment:
START returns the log associated with the session . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static int binary search ( double [ ] array , double value , double tolerance ) {
 if ( array . length == DecimalInteger ) {
 return - DecimalInteger ;
 }
 return binary search ( array , DecimalInteger , array . length , value , tolerance ) ;
 }
comment:
START return the index of value in array , or -1 if there is no such index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK to the UNK .

code:
public static string start ( activity activity , list < document info > src docs , document info src parent , document stack stack , int operation type ) {
 if ( g ) log . d ( g , String ) ;
 switch ( operation type ) {
 case operation_ y : return file operations . copy ( activity , src docs , stack ) ;
 case operation_ e : return file operations . move ( activity , src docs , src parent , stack ) ;
 case operation_ e : throw new unsupported operation exception ( String ) ;
 default : throw new unsupported operation exception ( String + operation type ) ;
 }
 }
comment:
START returns the job id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public file handle child ( string name ) {
 throw new gdx runtime exception ( String ) ;
 }
comment:
START returns a handle to the child with the specified name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public split transition < ? > get split transition ( rule rule ) {
 preconditions . check state ( has split configuration transition ( ) ) ;
 return split transition provider . apply ( rule ) ;
 }
comment:
START returns the split configuration transition for this attribute . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static < t > t bean of type ( listable bean factory lbf , class < t > type ) throws beans exception {
 assert . not null ( lbf , String ) ;
 map < string , t > beans of type = lbf . get beans of type ( type ) ;
 return unique bean ( type , beans of type ) ;
 }
comment:
START return a single bean of the given type or subtypes , not looking in ancestor factories . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public path get package build file ( package identifier package name ) throws no such package exception {
 path build file = get package build file nullable ( package name , unix glob . default_ UNK f ) ;
 if ( build file == null ) {
 throw new build file not found exception ( package name , String ) ;
 }
 return build file ;
 }
comment:
START returns the path to the build file for this package . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
@ key properties . origin enum public int get origin ( ) {
 return origin ;
 }
comment:
START gets the origin of the key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public float [ ] get vertices ( ) {
 if ( ! dirty ) return vertices ;
 dirty = false ;
 final float origin x = this . origin x ;
 final float origin y = this . origin y ;
 final float scale x = this . scale x ;
 final float scale y = this . scale y ;
 final polygon region region = this . region ;
 final float [ ] vertices = this . vertices ;
 final float [ ] region vertices = region . vertices ;
 final float world origin x = x + origin x ;
 final float world origin y = y + origin y ;
 final float x = width / region . region . get region width ( ) ;
 final float y = height / region . region . get region height ( ) ;
 final float cos = math utils . cos deg ( rotation ) ;
 final float sin = math utils . sin deg ( rotation ) ;
 float fx , fy ;
 for ( int i = DecimalInteger , v = DecimalInteger , n = region vertices . length ;
 i < n ;
 i += DecimalInteger , v += DecimalInteger ) {
 fx = ( region vertices [ i ] * x - origin x ) * scale x ;
 fy = ( region vertices [ i + DecimalInteger ] * y - origin y ) * scale y ;
 vertices [ v ] = cos * fx - sin * fy + world origin x ;
 vertices [ v + DecimalInteger ] = sin * fx + cos * fy + world origin y ;
 }
 return vertices ;
 }
comment:
START returns the packed vertices , colors , and texture coordinates for this sprite . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static < t > t get ( iterable < t > iterable , int position ) {
 check not null ( iterable ) ;
 return ( iterable instanceof list ) ? ( ( list < t > ) iterable ) . get ( position ) : iterators . get ( iterable . iterator ( ) , position ) ;
 }
comment:
START returns the element at the specified position in an iterable . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public jack compilation helper . builder add processor classpath jars ( iterable < artifact > processor classpath jars ) {
 this . processor classpath jars . add all ( preconditions . check not null ( processor classpath jars ) ) ;
 return this ;
 }
comment:
START adds a set of jars which will be used as the classpath for annotation processors . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static date time formatter date hour ( ) {
 return constants . UNK ;
 }
comment:
START returns a formatter that combines a full date and two digit hour of day . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public immutable list < string > get default copts ( ) {
 return default copts ;
 }
comment:
START returns the default copts value , to which rules should append their specific copts . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private int next token index ( ) throws exception {
 if ( mline finished ) {
 return - DecimalInteger ;
 }
 int i = DecimalInteger ;
 do {
 for ( ;
 i < tail ;
 i ++ ) {
 final byte b = buffer [ i ] ;
 if ( b == String ) {
 mline finished = true ;
 return i ;
 }
 if ( b == String ) {
 return i ;
 }
 }
 }
 while ( fill buf ( ) > DecimalInteger ) ;
 throw new protocol exception ( String ) ;
 }
comment:
START find buffer index of next token delimiter , usually space or UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void set doze screen state ( int state ) {
 if ( mdoze screen state != state ) {
 mdoze screen state = state ;
 update doze ( ) ;
 }
 }
comment:
START sets the screen state to use while dozing . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set gravity scale ( float scale ) {
 body . set gravity scale ( scale ) ;
 }
comment:
START set the gravity scale of the body END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public root get output directory ( repository name repository name ) {
 return output roots . output directory ;
 }
comment:
START returns the output directory for this build configuration . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
@ override public synchronized class < ? > get target class ( ) {
 return this . target . get class ( ) ;
 }
comment:
START return the type of the current target object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public double max ( ) {
 check state ( count != DecimalInteger ) ;
 return max ;
 }
comment:
START returns the highest value in the dataset . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set validator factory ( validator factory validator factory ) {
 this . validator factory = validator factory ;
 }
comment:
START set the validator factory to obtain the target validator from . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public t get ( settings settings ) {
 string value = get raw ( settings ) ;
 try {
 return parser . apply ( value ) ;
 }
 catch ( elasticsearch parse exception ex ) {
 throw new illegal argument exception ( ex . get message ( ) , ex ) ;
 }
 catch ( number format exception ex ) {
 throw new illegal argument exception ( String + value + String + get key ( ) + String , ex ) ;
 }
 catch ( illegal argument exception ex ) {
 throw ex ;
 }
 catch ( exception t ) {
 throw new illegal argument exception ( String + value + String + get key ( ) + String , t ) ;
 }
 }
comment:
START returns the settings value . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean is socket ( ) {
 return ( st_mode & s_ t ) == s_ k ;
 }
comment:
START returns true iff this file is a UNK socket . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public void set page size ( long num bytes ) {
 exec l ( String + num bytes ) ;
 }
comment:
START sets the database page size . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public collection < auto scaling group > get auto scaling groups ( ) {
 return collections . unmodifiable collection ( auto scaling groups ) ;
 }
comment:
START gets the auto scaling groups of the auto scaling group . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public builder set pic header module ( artifact pic header module ) {
 this . pic module info . set header module ( pic header module ) ;
 return this ;
 }
comment:
START sets the c++ header module in pic mode . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public immutable list < string > get java constraints ( ) {
 return java constraints ;
 }
comment:
START returns all constraints set on the associated target . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
e get entry ( @ nullable object key ) {
 if ( key == null ) {
 return null ;
 }
 int hash = hash ( key ) ;
 return segment for ( hash ) . get entry ( key , hash ) ;
 }
comment:
START returns the internal entry for the specified key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
private iterable < string > lines ( ) {
 return new iterable < string > ( ) {
 @ override public iterator < string > iterator ( ) {
 return new abstract iterator < string > ( ) {
 iterator < string > lines = line_ r . split ( seq ) . iterator ( ) ;
 @ override protected string compute next ( ) {
 if ( lines . has next ( ) ) {
 string next = lines . next ( ) ;
 if ( lines . has next ( ) || ! next . is empty ( ) ) {
 return next ;
 }
 }
 return end of data ( ) ;
 }
 }
 ;
 }
 }
 ;
 }
comment:
START returns an iterable over the lines in the string . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public void set UNK traffic permitted ( boolean permitted ) {
 framework network security policy policy = new framework network security policy ( permitted ) ;
 UNK . net . network security policy . set instance ( policy ) ;
 }
comment:
START sets whether UNK network traffic is permitted for this process . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public builder set executable ( artifact artifact ) {
 spawn action builder . set executable ( artifact ) ;
 add common tools ( immutable list . of ( artifact ) ) ;
 this . executable = artifact . get exec path ( ) ;
 return this ;
 }
comment:
START sets the executable artifact used by expanded actions . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static boolean is24 hour format ( context context , int user handle ) {
 string value = settings . system . get string for user ( context . get content resolver ( ) , settings . system . UNK , user handle ) ;
 if ( value == null ) {
 locale locale = context . get resources ( ) . get configuration ( ) . locale ;
 synchronized ( UNK lock ) {
 if ( sis24 hour locale != null && sis24 hour locale . equals ( locale ) ) {
 return sis24 hour ;
 }
 }
 java . text . date format natural = java . text . date format . get time instance ( java . text . date format . g , locale ) ;
 if ( natural instanceof simple date format ) {
 simple date format UNK = ( simple date format ) natural ;
 string pattern = UNK . to pattern ( ) ;
 if ( pattern . index of ( String ) >= DecimalInteger ) {
 value = String ;
 }
 else {
 value = String ;
 }
 }
 else {
 value = String ;
 }
 synchronized ( UNK lock ) {
 sis24 hour locale = locale ;
 sis24 hour = value . equals ( String ) ;
 }
 return sis24 hour ;
 }
 return value . equals ( String ) ;
 }
comment:
START returns true if user preference with the given user handle is set to NUMBER format . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
private int [ ] get visible window ( int lower , int upper , int count ) {
 if ( ( lower == DecimalInteger && upper == DecimalInteger ) || lower < DecimalInteger || upper < DecimalInteger ) {
 return new int [ DecimalInteger ] ;
 }
 int [ ] window ;
 if ( lower <= upper ) {
 window = new int [ upper + DecimalInteger - lower ] ;
 for ( int i = lower , j = DecimalInteger ;
 i <= upper ;
 i ++ , j ++ ) {
 window [ j ] = i ;
 }
 }
 else {
 count = math . max ( count , lower ) ;
 window = new int [ count - lower + upper + DecimalInteger ] ;
 int j = DecimalInteger ;
 for ( int i = DecimalInteger ;
 i <= upper ;
 i ++ , j ++ ) {
 window [ j ] = i ;
 }
 for ( int i = lower ;
 i < count ;
 i ++ , j ++ ) {
 window [ j ] = i ;
 }
 }
 return window ;
 }
comment:
START returns a sorted array of all integers between lower and upper . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public boolean is full keyboard ( ) {
 return ( sources & source_ d ) == source_ d && UNK type == keyboard_ type_ c ;
 }
comment:
START returns true if the device is a full keyboard . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public long get duration ( int transition type ) {
 switch ( transition type ) {
 case change_ g : return mchanging appearing duration ;
 case change_ g : return mchanging disappearing duration ;
 case g : return mchanging duration ;
 case g : return mappearing duration ;
 case g : return mdisappearing duration ;
 }
 return DecimalInteger ;
 }
comment:
START gets the duration on one of the animation objects used by this transition . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get offset ( ) {
 if ( ( status & d ) == DecimalInteger ) {
 throw new illegal state exception ( String ) ;
 }
 return position ;
 }
comment:
START returns the offset corresponding to this label . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK UNK that be UNK to the UNK .

code:
public builder add includes ( nested set < path fragment > includes ) {
 this . includes . add transitive ( includes ) ;
 return this ;
 }
comment:
START adds include paths to be made available for compilation . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK to the UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public static string [ ] list services ( ) {
 return null ;
 }
comment:
START return a list of all currently running services . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public void set block comment end delimiter ( string block comment end delimiter ) {
 assert . has text ( block comment end delimiter , String ) ;
 this . block comment end delimiter = block comment end delimiter ;
 }
comment:
START set the end delimiter that identifies block comments within the sql scripts . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public color filter get color filter ( ) {
 return mcolor filter ;
 }
comment:
START returns the active color filter for this image view . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public map < string , string > extract field and part parameters ( executable element element ) {
 map < string , string > post parameter name to element name = new hash map < string , string > ( ) ;
 for ( variable element parameter : element . get parameters ( ) ) {
 string parameter name = null ;
 if ( parameter . get annotation ( field . class ) != null ) {
 parameter name = extract parameter ( parameter , field . class ) ;
 }
 else if ( parameter . get annotation ( part . class ) != null ) {
 parameter name = extract parameter ( parameter , part . class ) ;
 }
 if ( parameter name != null ) {
 if ( post parameter name to element name . contains key ( parameter name ) ) {
 return null ;
 }
 post parameter name to element name . put ( parameter name , parameter . get simple name ( ) . to string ( ) ) ;
 }
 }
 return post parameter name to element name ;
 }
comment:
START returns the post parameter name to method parameter name mapping , or null if duplicate names found . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public boolean contains value ( float value , float UNK ) {
 if ( has zero value && math . abs ( zero value - value ) <= UNK ) return true ;
 float [ ] value table = this . value table ;
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( math . abs ( value table [ i ] - value ) <= UNK ) return true ;
 return false ;
 }
comment:
START returns true if the specified value is in the map . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether the given UNK is UNK .
sets whether the UNK UNK is UNK .
sets whether to UNK UNK UNK .
sets whether the given UNK is UNK , in the UNK .

code:
protected final boolean set without UNK ( subscription s ) {
 objects . require non null ( s , String ) ;
 for ( ;
 ;
 ) {
 subscription a = this . s ;
 if ( a == UNK . cancelled subscription ( ) ) {
 s . cancel ( ) ;
 return false ;
 }
 if ( a != null ) {
 s . cancel ( ) ;
 UNK . report subscription set ( ) ;
 return false ;
 }
 if ( s . compare and set ( this , null , s ) ) {
 return true ;
 }
 }
 }
comment:
START sets the subscription once but does not request anything . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public static void static file location ( string folder ) {
 get instance ( ) . static file location ( folder ) ;
 }
comment:
START sets the folder in classpath serving static files . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
@ can ignore return value public to string helper add value ( @ nullable object value ) {
 return add holder ( value ) ;
 }
comment:
START adds an unnamed value to the formatted output . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add the given UNK to the UNK .
add the UNK UNK to the given UNK .
add the UNK UNK to the UNK

code:
public void set id ( @ id res int id ) {
 d = id ;
 if ( d == view . no_ d && mlabel for id != view . no_ d ) {
 d = generate view id ( ) ;
 }
 }
comment:
START sets the identifier for this view . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public node < t > get node maybe ( t label ) {
 if ( label == null ) {
 throw new null pointer exception ( ) ;
 }
 return nodes . get ( label ) ;
 }
comment:
START find the node with the specified label . returns null if it does n't exist . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public double get UNK shift in hz ( ) {
 return mdoppler shift in hz ;
 }
comment:
START gets the UNK shift in hz . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public string get settings activity ( ) {
 return msettings activity name ;
 }
comment:
START return the class name of an activity that provides a settings ui . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ system api public wifi configuration get wifi ap configuration ( ) {
 try {
 return service . get wifi ap configuration ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START gets the wi- fi UNK configuration . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public synchronized service web socket idle timeout millis ( int timeout millis ) {
 if ( initialized ) {
 throw before route mapping exception ( ) ;
 }
 if ( is running from servlet ( ) ) {
 throw new illegal state exception ( String ) ;
 }
 web socket idle timeout millis = optional . of ( timeout millis ) ;
 return this ;
 }
comment:
START sets the max idle timeout in milliseconds for web socket connections . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set name ( char sequence name ) {
 name = name ;
 route updated ( ) ;
 }
comment:
START set the user-visible name of this route . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ override public string to string ( ) {
 more objects . to string helper s = more objects . to string helper ( this ) ;
 if ( initial capacity != unset_ t ) {
 s . add ( String , initial capacity ) ;
 }
 if ( concurrency level != unset_ t ) {
 s . add ( String , concurrency level ) ;
 }
 if ( key strength != null ) {
 s . add ( String , ascii . to lower case ( key strength . to string ( ) ) ) ;
 }
 if ( value strength != null ) {
 s . add ( String , ascii . to lower case ( value strength . to string ( ) ) ) ;
 }
 if ( key equivalence != null ) {
 s . add value ( String ) ;
 }
 return s . to string ( ) ;
 }
comment:
START returns a string representation for this map UNK instance . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public final float get precision ( ) {
 return native get precision ( mnative ptr ) ;
 }
comment:
START return the precision of the x coordinates being reported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set right width ( float right width ) {
 this . right width = right width ;
 }
comment:
START set the draw-time width of the three right edge patches END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
@ view debug . exported property public boolean is enabled ( ) {
 return ( mview flags & enabled_ k ) == d ;
 }
comment:
START returns the enabled status for this view . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
protected settings prepare backwards data dir ( path backwards index , object ... settings ) throws exception {
 path index dir = create temp dir ( ) ;
 path data dir = index dir . resolve ( String ) ;
 try ( input stream stream = files . new input stream ( backwards index ) ) {
 test util . UNK ( stream , index dir ) ;
 }
 assert true ( files . exists ( data dir ) ) ;
 final path [ ] list ;
 try ( directory stream < path > stream = files . new directory stream ( data dir ) ) {
 list < path > dirs = new array list < > ( ) ;
 for ( path p : stream ) {
 if ( ! p . get file name ( ) . to string ( ) . starts with ( String ) ) {
 dirs . add ( p ) ;
 }
 }
 list = dirs . to array ( new path [ DecimalInteger ] ) ;
 }
 if ( list . length != DecimalInteger ) {
 string builder builder = new string builder ( String ) ;
 for ( path line : list ) {
 builder . append ( line . to string ( ) ) . append ( String ) ;
 }
 throw new illegal state exception ( builder . to string ( ) ) ;
 }
 path src = list [ DecimalInteger ] . resolve ( node environment . UNK r ) ;
 path dest = data dir . resolve ( node environment . UNK r ) ;
 assert true ( files . exists ( src ) ) ;
 files . move ( src , dest ) ;
 assert false ( files . exists ( src ) ) ;
 assert true ( files . exists ( dest ) ) ;
 settings . builder builder = settings . builder ( ) . put ( settings ) . put ( environment . path_ data_ g . get key ( ) , data dir . to absolute path ( ) ) ;
 path config dir = index dir . resolve ( String ) ;
 if ( files . exists ( config dir ) ) {
 builder . put ( environment . path_ conf_ g . get key ( ) , config dir . to absolute path ( ) ) ;
 }
 return builder . build ( ) ;
 }
comment:
START return settings that could be used to start a node that has the given UNK home directory . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public list < notification > get pages ( ) {
 return pages ;
 }
comment:
START get the array of additional pages of content for displaying this notification . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public int get record count ( ) {
 return records == null ? DecimalInteger : records . size ( ) ;
 }
comment:
START gets the number of records contained in the event . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void add ( local node master listener listener ) {
 local node master listeners . add ( listener ) ;
 }
comment:
START add a listener for on/off local node master events END
BLUE1:0.428571428571
--generate--
add a listener to UNK UNK .
add a listener to UNK .
sets the listener to be used to the UNK .
sets the listener to be used to the UNK of the given UNK .
sets the listener to be used to the UNK

code:
public string get user identifier ( ) {
 return user identifier ;
 }
comment:
START returns a string that identifies the user . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
protected void set introspection class ( class < ? > clazz ) {
 if ( this . cached introspection results != null && this . cached introspection results . get bean class ( ) != clazz ) {
 this . cached introspection results = null ;
 }
 }
comment:
START set the class to UNK . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static artifact launcher artifact for target ( java semantics semantics , rule context rule context ) {
 string launcher = filter launcher for target ( rule context ) ;
 return ( launcher == null ) ? null : rule context . get prerequisite artifact ( launcher , mode . t ) ;
 }
comment:
START returns the java launcher artifact for the given target , if any . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public set < string > get this streams ( ) {
 return get component streams ( get this component id ( ) ) ;
 }
comment:
START gets the set of streams declared for the component of this task . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
private boolean handle link properties update ( boolean send callbacks ) {
 final link properties new lp = UNK link properties ( ) ;
 if ( link properties UNK ( new lp ) ) {
 return true ;
 }
 final provisioning change delta = set link properties ( new lp ) ;
 if ( send callbacks ) {
 dispatch callback ( delta , new lp ) ;
 }
 return ( delta != provisioning change . UNK g ) ;
 }
comment:
START returns false if we have UNK provisioning , true otherwise . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public float get percent rating ( ) {
 if ( ( mrating style != rating_ e ) || ! is UNK ( ) ) {
 return - DecimalFloatingPoint ;
 }
 else {
 return mrating value ;
 }
 }
comment:
START return the UNK rating value . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected label read label ( int offset , label [ ] labels ) {
 if ( labels [ offset ] == null ) {
 labels [ offset ] = new label ( ) ;
 }
 return labels [ offset ] ;
 }
comment:
START returns the label corresponding to the given offset . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
protected filter context get filter context ( ) {
 return UNK context . mfilter context ;
 }
comment:
START returns the active filter context for this effect . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
private static bundle get alloc counts ( ) {
 bundle results = new bundle ( ) ;
 results . put long ( metric_ key_ global_ UNK t , debug . get global alloc count ( ) ) ;
 results . put long ( metric_ key_ global_ UNK e , debug . get global alloc size ( ) ) ;
 results . put long ( metric_ key_ global_ UNK t , debug . get global UNK count ( ) ) ;
 results . put long ( metric_ key_ global_ UNK e , debug . get global UNK size ( ) ) ;
 results . put long ( metric_ key_ UNK invocation_ t , debug . get global gc invocation count ( ) ) ;
 return results ;
 }
comment:
START returns a bundle with the current results from the allocation counting . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to the given UNK .
returns the list of UNK UNK UNK

code:
public chart bar type look up type ( string name ) {
 chart bar type type = types . get ( name ) ;
 if ( type == null ) {
 type = unknown_ e ;
 types . put ( type . get name ( ) , type ) ;
 }
 return type ;
 }
comment:
START returns the type with the given name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .

code:
public term vectors request builder set routing ( string routing ) {
 request . routing ( routing ) ;
 return this ;
 }
comment:
START sets the routing . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get frame index ( ) {
 return state . frame loader . get current index ( ) ;
 }
comment:
START returns the current frame index in the range NUMBER . . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public list < string > get settings filter ( ) {
 return collections . empty list ( ) ;
 }
comment:
START returns a list of additional settings filter for this plugin END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public boolean reduce classpath ( ) {
 return strict classpath mode ;
 }
comment:
START returns whether classpath UNK is enabled for this invocation . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public boolean get and clear ( int index ) {
 final int word = index > > > DecimalInteger ;
 if ( word >= bits . length ) return false ;
 long old bits = bits [ word ] ;
 bits [ word ] &= ~ ( DecimalInteger << ( index & 0x3 f ) ) ;
 return bits [ word ] != old bits ;
 }
comment:
START returns the bit at the given index and clears it in one go . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public final t get ( settings primary , settings secondary ) {
 if ( exists ( primary ) ) {
 return get ( primary ) ;
 }
 if ( fallback setting == null ) {
 return get ( secondary ) ;
 }
 if ( exists ( secondary ) ) {
 return get ( secondary ) ;
 }
 if ( fallback setting . exists ( primary ) ) {
 return fallback setting . get ( primary ) ;
 }
 return fallback setting . get ( secondary ) ;
 }
comment:
START returns the value for this setting but UNK back to the second provided settings object END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static byte [ ] to bytes ( bytes reference reference ) {
 final bytes ref bytes ref = reference . to bytes ref ( ) ;
 if ( bytes ref . offset == DecimalInteger && bytes ref . length == bytes ref . bytes . length ) {
 return bytes ref . bytes ;
 }
 return bytes ref . deep copy of ( bytes ref ) . bytes ;
 }
comment:
START returns a compact array from the given bytes reference . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
@ system api public builder set device ( @ non null audio device info device ) throws illegal argument exception {
 if ( device == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( ! device . is sink ( ) ) {
 throw new illegal argument exception ( String ) ;
 }
 mdevice system type = audio device info . convert device type to internal device ( device . get type ( ) ) ;
 mdevice address = device . get address ( ) ;
 return this ;
 }
comment:
START sets the audio device used for playback . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
protected view make controller view ( ) {
 layout inflater inflate = ( layout inflater ) context . get system service ( context . layout_ UNK e ) ;
 root = inflate . inflate ( com . android . internal . r . layout . UNK , null ) ;
 init controller view ( root ) ;
 return root ;
 }
comment:
START create the view that holds the widgets that control playback . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static double get elapsed millis ( long log time ) {
 return ( get log time ( ) - log time ) * UNK r ;
 }
comment:
START returns the time elapsed since the given log time in millis . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean post ( runnable action ) {
 final attach info attach info = mattach info ;
 if ( attach info != null ) {
 return attach info . handler . post ( action ) ;
 }
 get run queue ( ) . post ( action ) ;
 return true ;
 }
comment:
START returns false on failure , usually because the looper processing the message queue is exiting . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set service interface ( class < ? > service interface ) {
 if ( service interface == null || ! service interface . is interface ( ) ) {
 throw new illegal argument exception ( String ) ;
 }
 this . service interface = service interface ;
 }
comment:
START set the interface that the proxy must implement . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given view .
set the UNK for the given UNK .

code:
public static string print path and line ( location location ) {
 return ( location == null ) ? String : location . print path and line ( ) ;
 }
comment:
START returns the location in the format `` filename line '' . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static final native string get pid context ( int pid ) ;
comment:
START gets the security context of a given process id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
void set video state ( string call id , int video state ) {
 log . v ( this , String , video state ) ;
 for ( UNK service adapter adapter : adapters ) {
 try {
 adapter . set video state ( call id , video state ) ;
 }
 catch ( remote exception ignored ) {
 }
 }
 }
comment:
START sets the video state associated with a call . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public boolean is UNK ( ) {
 try {
 return mbattery stats . is UNK ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START return true if the battery is currently considered to be charging . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the UNK .

code:
public keys < k > keys ( ) {
 if ( keys1 == null ) {
 keys1 = new keys ( this ) ;
 keys2 = new keys ( this ) ;
 }
 if ( ! keys1 . valid ) {
 keys1 . reset ( ) ;
 keys1 . valid = true ;
 keys2 . valid = false ;
 return keys1 ;
 }
 keys2 . reset ( ) ;
 keys2 . valid = true ;
 keys1 . valid = false ;
 return keys2 ;
 }
comment:
START returns an iterator for the keys in the map . remove is supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public string get group id ( ) {
 return this . group id ;
 }
comment:
START return the dependency group id . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public void set audio sampling rate ( int sampling rate ) {
 if ( sampling rate <= DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 set parameter ( String + sampling rate ) ;
 }
comment:
START sets the audio sampling rate for recording . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ override public void set up ( ) throws exception {
 final basic animator activity activity = get activity ( ) ;
 button button = ( button ) activity . find view by id ( r . id . animating button ) ;
 animator = button . animate ( ) . x ( DecimalInteger ) . y ( DecimalInteger ) ;
 super . set up ( ) ;
 listener = new animator listener adapter ( ) {
 @ override public void on animation start ( animator animation ) {
 assert false ( started ) ;
 assert true ( running ) ;
 started = true ;
 }
 @ override public void on animation cancel ( animator animation ) {
 assert false ( canceled ) ;
 assert true ( running ) ;
 assert true ( started ) ;
 canceled = true ;
 }
 @ override public void on animation end ( animator animation ) {
 assert true ( running ) ;
 assert true ( started ) ;
 running = false ;
 started = false ;
 super . on animation end ( animation ) ;
 }
 }
 ;
 animator . set listener ( listener ) ;
 animator . set duration ( anim_ n ) ;
 future = new future UNK ( ) ;
 running = false ;
 canceled = false ;
 started = false ;
 }
comment:
START sets up the fields used by each test . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
public method parameter [ ] get method parameters ( ) {
 return this . parameters ;
 }
comment:
START returns the method parameters for this handler method . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public final string get ( string key ) {
 string result = properties . get ( key ) ;
 if ( result == null ) {
 if ( parent != null ) result = parent . get ( key ) ;
 if ( result == null ) {
 if ( exception on missing key ) throw new missing resource exception ( String + key , this . get class ( ) . get name ( ) , key ) ;
 else return String + key + String ;
 }
 }
 return result ;
 }
comment:
START gets a string for the given key from this bundle or one of its parents . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
int get activity background color ( activity manager . task description td ) {
 if ( td != null && td . get background color ( ) != DecimalInteger ) {
 return td . get background color ( ) ;
 }
 return mdefault task view background color ;
 }
comment:
START returns the task 's background color if possible . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static byte buf copy int ( int ... values ) {
 if ( values == null || values . length == DecimalInteger ) {
 return empty_ r ;
 }
 byte buf buffer = buffer ( values . length * DecimalInteger ) ;
 for ( int v : values ) {
 buffer . write int ( v ) ;
 }
 return buffer ;
 }
comment:
START create a big-endian buffer that holds a sequence of the specified NUMBER integers . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public int get measurement key count ( ) {
 return mmeasurement keys . length ;
 }
comment:
START get the number of measurement values in this object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public int get first day of week ( ) {
 return delegate . get first day of week ( ) ;
 }
comment:
START gets the first day of week . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static void set secure ( string keystore file , string keystore password , string truststore file , string truststore password ) {
 get instance ( ) . secure ( keystore file , keystore password , truststore file , truststore password ) ;
 }
comment:
START set the connection to be secure , using the specified keystore and truststore . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public bounding box get bounding box ( ) {
 if ( bounds == null ) bounds = new bounding box ( ) ;
 particle [ ] UNK = this . UNK ;
 boolean [ ] active = this . active ;
 bounding box bounds = this . bounds ;
 bounds . UNK ( ) ;
 for ( int i = DecimalInteger , n = active . length ;
 i < n ;
 i ++ ) if ( active [ i ] ) {
 rectangle r = UNK [ i ] . get bounding rectangle ( ) ;
 bounds . ext ( r . x , r . y , DecimalInteger ) ;
 bounds . ext ( r . x + r . width , r . y + r . height , DecimalInteger ) ;
 }
 return bounds ;
 }
comment:
START returns the bounding box for all active particles . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static mock state callback mock ( ) {
 return UNK . UNK ( new mock state callback ( ) ) ;
 }
comment:
START create a UNK UNK state callback . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set mode ( int mode ) {
 if ( mode != t && mode != t && mode != left_ t ) {
 throw new illegal state exception ( String ) ;
 }
 mview behind . set mode ( mode ) ;
 }
comment:
START sets which side the sliding menu should appear on . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
@ deprecated public static string get month string ( int month , int UNK ) {
 locale data d = locale data . get ( locale . get default ( ) ) ;
 string [ ] names ;
 switch ( UNK ) {
 case length_ g : names = d . long month names ;
 break ;
 case length_ m : names = d . short month names ;
 break ;
 case length_ t : names = d . short month names ;
 break ;
 case length_ r : names = d . short month names ;
 break ;
 case length_ t : names = d . tiny month names ;
 break ;
 default : names = d . short month names ;
 break ;
 }
 return names [ month ] ;
 }
comment:
START return a localized string for the month of the year . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
string get vpc id ( string instance id ) {
 instance aws instance = describe instance ( instance id ) ;
 string vpc id = aws instance . get vpc id ( ) ;
 if ( strings . is null or empty ( vpc id ) ) {
 return null ;
 }
 return vpc id ;
 }
comment:
START gets the UNK id for the given instance . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public dotd file get dotd file ( ) {
 return cpp compile command line . dotd file ;
 }
comment:
START returns the path where gcc should put the discovered dependency information . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ non null public list < resolution > get resolutions ( ) {
 return collections . unmodifiable list ( resolutions ) ;
 }
comment:
START gets the supported UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public int get status code value ( ) {
 if ( this . status code instanceof http status ) {
 return ( ( http status ) this . status code ) . value ( ) ;
 }
 else {
 return ( integer ) this . status code ;
 }
 }
comment:
START return the http status code of the response . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public list < handler method argument resolver > get argument resolvers ( ) {
 return this . argument resolvers ;
 }
comment:
START return the configured argument resolvers . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of all UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the current .
return the number of bytes that be UNK for the given .

code:
public final string get filename ( ) {
 return get string ( e , get ( m ) ) ;
 }
comment:
START returns the filename for this entry . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public builder add source jars ( collection < artifact > source jars ) {
 check not null ( source jars , String ) ;
 this . source jars . add all ( source jars ) ;
 return this ;
 }
comment:
START adds a jar archive of java sources to compile . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public float get min ( ) {
 return data . get min ( ) ;
 }
comment:
START returns the current UNK value across all data sets @return END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set status ( http status status ) {
 this . status = status ;
 }
comment:
START set the http status to use for the response . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK

code:
public synchronized < t > t get instance ( class < t > clazz , final string node ) {
 return get instance ( clazz , nc -> node == null || node . equals ( nc . name ) ) ;
 }
comment:
START returns a reference to the given nodes instances of the given class > t < END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set color ( @ color int int color ) {
 if ( mcolor state . mbase color != color || mcolor state . muse color != color ) {
 mcolor state . mbase color = mcolor state . muse color = color ;
 invalidate self ( ) ;
 }
 }
comment:
START sets the drawable 's color value . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public byte [ ] get object ( string device name , int object handle , int object size ) {
 UNK device device = get device ( device name ) ;
 if ( device == null ) {
 return null ;
 }
 return device . get object ( object handle , object size ) ;
 }
comment:
START returns the data for an object as a byte array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set screen size ( int screen width , int screen height ) {
 this . screen width = screen width ;
 this . screen height = screen height ;
 }
comment:
START sets the viewport 's size in screen coordinates . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ deprecated public static void set header ( http message message , char sequence name , iterable < ? > values ) {
 message . headers ( ) . set ( name , values ) ;
 }
comment:
START sets a new header with the specified name and values . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static completable timer ( long delay , time unit unit ) {
 return timer ( delay , unit , schedulers . computation ( ) ) ;
 }
comment:
START returns a completable instance that fires its on complete event after the given delay elapsed . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set output mode ( mode mode ) {
 close sinks ( ) ;
 mcurrent mode = mode ;
 try {
 switch ( mode ) {
 case e : if ( moutput file == null ) {
 throw new illegal argument exception ( String + String ) ;
 }
 sinks . add ( new file sink ( moutput file ) ) ;
 break ;
 case t : sinks . add ( new UNK sink ( ) ) ;
 break ;
 case l : sinks . add ( new UNK sink ( ) ) ;
 if ( moutput file == null ) {
 throw new illegal argument exception ( String + String ) ;
 }
 sinks . add ( new file sink ( moutput file ) ) ;
 break ;
 default : break ;
 }
 }
 catch ( file not found exception e ) {
 log . w ( String , String + e . get message ( ) ) ;
 }
 }
comment:
START sets where the trace output will go . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
@ override public string get message ( ) {
 return this . binding result . to string ( ) ;
 }
comment:
START returns diagnostic information about the errors held in this object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
void put ( string url , object request , object ... uri variables ) throws rest client exception ;
comment:
START create or update a resource by putting the given object to the uri . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public static native int [ ] get capture size range ( ) ;
comment:
START returns the capture size range . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static string [ ] create fixed random strings ( int count ) {
 string [ ] strings = new string [ count ] ;
 random length random = new random ( ) ;
 length random . set seed ( d ) ;
 random string random = new random ( ) ;
 string random . set seed ( d ) ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) {
 int next length = min_ h + length random . next int ( max_ h - min_ h - DecimalInteger ) ;
 char [ ] chars = new char [ next length ] ;
 for ( int j = DecimalInteger ;
 j < next length ;
 j ++ ) {
 chars [ j ] = s [ string random . next int ( s . length ) ] ;
 }
 strings [ i ] = new string ( chars ) ;
 }
 return strings ;
 }
comment:
START creates the same random sequence of strings . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public string get last task name ( ) throws illegal state exception {
 if ( this . last task info == null ) {
 throw new illegal state exception ( String ) ;
 }
 return this . last task info . get task name ( ) ;
 }
comment:
START return the name of the last task . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public bean definition get bean definition ( ) {
 return this . bean definition ;
 }
comment:
START return the wrapped bean definition . END
BLUE1:0.428571428571
--generate--
return the list of UNK UNK .
return the number of UNK UNK .
return the list of UNK .
return the number of all UNK .
return the list of UNK UNK

code:
private boolean can scroll in all direction ( ) {
 return mtransformed image bounds . left < mview bounds . left - s && mtransformed image bounds . top < mview bounds . top - s && mtransformed image bounds . right > mview bounds . right + s && mtransformed image bounds . bottom > mview bounds . bottom + s ;
 }
comment:
START returns whether the scroll can happen in all UNK . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static vector2 nearest segment point ( float start x , float start y , float end x , float end y , float point x , float point y , vector2 nearest ) {
 final float diff = end x - start x ;
 final float diff = end y - start y ;
 float length2 = diff * diff + diff * diff ;
 if ( length2 == DecimalInteger ) return nearest . set ( start x , start y ) ;
 float t = ( ( point x - start x ) * ( end x - start x ) + ( point y - start y ) * ( end y - start y ) ) / length2 ;
 if ( t < DecimalInteger ) return nearest . set ( start x , start y ) ;
 if ( t > DecimalInteger ) return nearest . set ( end x , end y ) ;
 return nearest . set ( start x + t * ( end x - start x ) , start y + t * ( end y - start y ) ) ;
 }
comment:
START returns a point on the segment nearest to the specified point . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public int get timers key count ( ) {
 return mtimers keys . length ;
 }
comment:
START get the number of timer map values in this object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
private string get cache key ( string url ) {
 return hash utils . compute weak hash ( url . trim ( ) ) + string . format ( String , url . length ( ) ) ;
 }
comment:
START returns the cache key to be used to store the given url . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final fragment manager get child fragment manager ( ) {
 if ( mchild fragment manager == null ) {
 instantiate child fragment manager ( ) ;
 if ( state >= d ) {
 mchild fragment manager . dispatch resume ( ) ;
 }
 else if ( state >= d ) {
 mchild fragment manager . dispatch start ( ) ;
 }
 else if ( state >= activity_ d ) {
 mchild fragment manager . dispatch activity created ( ) ;
 }
 else if ( state >= d ) {
 mchild fragment manager . dispatch create ( ) ;
 }
 }
 return mchild fragment manager ;
 }
comment:
START return a private fragment manager for placing and UNK fragments inside of this fragment . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ system api public builder set icon ( icon icon , int state ) {
 if ( state == tv input manager . input_ state_ d ) {
 this . icon = icon ;
 }
 else if ( state == tv input manager . input_ state_ UNK y ) {
 this . micon UNK = icon ;
 }
 else if ( state == tv input manager . input_ state_ d ) {
 this . micon disconnected = icon ;
 }
 else {
 throw new illegal argument exception ( String + state ) ;
 }
 return this ;
 }
comment:
START sets the icon for a given input state . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static details fragment new instance ( int index ) {
 details fragment f = new details fragment ( ) ;
 bundle args = new bundle ( ) ;
 args . put int ( String , index ) ;
 f . set arguments ( args ) ;
 return f ;
 }
comment:
START create a new instance of details fragment , initialized to show the text at ` index ' . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public query builder < t > where or ( where condition cond1 , where condition cond2 , where condition ... cond more ) {
 where collector . add ( or ( cond1 , cond2 , cond more ) ) ;
 return this ;
 }
comment:
START adds the given conditions to the where clause using an logical or . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public string get voice name ( ) {
 return mvoice name ;
 }
comment:
START gets the name of the voice to use . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set velocity scale ( float scale ) {
 UNK scale = scale ;
 }
comment:
START sets a scale factor for the UNK velocity . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public realm results < e > distinct ( string field name ) {
 check query is not UNK ( ) ;
 long column index = get and validate distinct column index ( field name , this . table . get table ( ) ) ;
 table view table view = this . query . find all ( ) ;
 table view . distinct ( column index ) ;
 realm results < e > realm results ;
 if ( is dynamic query ( ) ) {
 realm results = ( realm results < e > ) realm results . create from dynamic table or view ( realm , table view , class name ) ;
 }
 else {
 realm results = realm results . create from table or view ( realm , table view , clazz ) ;
 }
 return realm results ;
 }
comment:
START returns a distinct set of objects of a specific class . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set content type ( string content type ) {
 this . content type = content type ;
 }
comment:
START set the content type to use for the response . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public int get delivery mode ( ) {
 return this . delivery mode ;
 }
comment:
START return the delivery mode to use when sending a message . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public abstract int get mobile radio active unknown count ( int which ) ;
comment:
START return count of number of times radio was up that could not be UNK on apps . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static class < ? > find common element type ( collection < ? > collection ) {
 if ( is empty ( collection ) ) {
 return null ;
 }
 class < ? > candidate = null ;
 for ( object val : collection ) {
 if ( val != null ) {
 if ( candidate == null ) {
 candidate = val . get class ( ) ;
 }
 else if ( candidate != val . get class ( ) ) {
 return null ;
 }
 }
 }
 return candidate ;
 }
comment:
START find the common element type of the given collection , if any . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public collection < resource > get marked resources ( ) {
 return collections . unmodifiable collection ( marked resources ) ;
 }
comment:
START gets the resources marked in the last run of the janitor . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public client options base set metrics name ( string metrics name ) {
 this . metrics name = metrics name ;
 return this ;
 }
comment:
START set the metrics name identifying the reported metrics , useful for grouping metrics with the same name . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get source technologies ( ) {
 return msource technologies ;
 }
comment:
START returns the source technologies to track this geofence . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public string get subtype name ( ) {
 synchronized ( this ) {
 return msubtype name ;
 }
 }
comment:
START return a human-readable name describing the subtype of the network . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public int get last UNK error ( string iface ) {
 try {
 return service . get last UNK error ( iface ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START get a more detailed error code after a UNK or UNK request asynchronously failed . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void set accuracy ( float accuracy ) {
 accuracy = accuracy ;
 mfields mask |= has_ UNK k ;
 }
comment:
START set the estimated accuracy of this location , meters . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public message header initializer get header initializer ( ) {
 return this . header initializer ;
 }
comment:
START return the configured header initializer . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of UNK .
return the number of all UNK .

code:
public void update date ( int year , int month , int day of month ) {
 UNK picker . update date ( year , month , day of month ) ;
 }
comment:
START sets the current date . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ test api public void set UNK db hz ( double value ) {
 mcn0 db hz = value ;
 }
comment:
START sets the carrier-to-noise density in db- hz . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
navigable set < cache span > get cached spans ( string key ) ;
comment:
START returns the cached spans for a given cache key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public float get curr velocity ( ) {
 return mode == UNK e ? mcurr velocity : velocity - deceleration * time passed ( ) / DecimalFloatingPoint ;
 }
comment:
START returns the current velocity . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set sim country iso ( string iso ) {
 int phone id = get default phone ( ) ;
 set sim country iso for phone ( phone id , iso ) ;
 }
comment:
START set telephony properties. y _ icc_ operator_ UNK y for the default phone . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public string get status text ( ) {
 return this . status text ;
 }
comment:
START return the http status text . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public void add ( runnable runnable ) {
 delta queue . add ( tick remaining , runnable ) ;
 }
comment:
START adds a task to the queue that is ready to be executed . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
add the UNK to the given UNK .
sets the UNK for the given UNK .
add the UNK to the UNK to the UNK .
add the UNK to the UNK

code:
public void set delay ( long delay ) {
 this . delay = delay ;
 }
comment:
START set the delay before starting the task for the first time , in milliseconds . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK

code:
public void add regions ( texture atlas atlas ) {
 array < atlas region > regions = atlas . get regions ( ) ;
 for ( int i = DecimalInteger , n = regions . size ;
 i < n ;
 i ++ ) {
 atlas region region = regions . get ( i ) ;
 string name = region . name ;
 if ( region . index != - DecimalInteger ) {
 name += String + region . index ;
 }
 add ( name , region , texture region . class ) ;
 }
 }
comment:
START adds all named texture regions from the atlas . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
void set writable ( boolean writable ) {
 is writable = writable ;
 mark change time ( ) ;
 }
comment:
START sets whether the current file is writable . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get body count ( ) {
 return world . get body count ( ) ;
 }
comment:
START get the number of bodies . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set fullscreen mode ( display mode mode ) {
 this . fullscreen mode = ( UNK display mode ) mode ;
 }
comment:
START sets the app to use fullscreen mode . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int get minimum width ( ) {
 final int intrinsic width = get intrinsic width ( ) ;
 return intrinsic width > DecimalInteger ? intrinsic width : DecimalInteger ;
 }
comment:
START returns the minimum width suggested by this drawable . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK of the given UNK , in the UNK .

code:
public final long max bucket ord ( ) {
 return doc counts . size ( ) ;
 }
comment:
START return an upper bound of the maximum bucket ordinal seen so far . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public set < string > key set ( ) {
 return bundle . key set ( ) ;
 }
comment:
START returns a set containing the strings used as keys in this metadata . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public discovery node [ ] pending nodes ( ) {
 return pending nodes . to array ( new discovery node [ DecimalInteger ] ) ;
 }
comment:
START returns a list of nodes which did n't respond yet END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
protected boolean is primary ( string bean name , object bean instance ) {
 if ( contains bean definition ( bean name ) ) {
 return get merged local bean definition ( bean name ) . is primary ( ) ;
 }
 bean factory parent = get parent bean factory ( ) ;
 return ( parent instanceof default listable bean factory && ( ( default listable bean factory ) parent ) . is primary ( bean name , bean instance ) ) ;
 }
comment:
START return whether the bean definition for the given bean name has been marked as a primary bean . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether the given UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether the given UNK is UNK , in the UNK .

code:
public void set screen brightness ( int brightness ) {
 if ( mscreen brightness != brightness ) {
 if ( g ) {
 slog . d ( g , String + brightness ) ;
 }
 mscreen brightness = brightness ;
 if ( mscreen state != display . state_ f ) {
 mscreen ready = false ;
 schedule screen update ( ) ;
 }
 }
 }
comment:
START sets the display brightness . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public < t > void set value ( camera metadata native metadata , t value ) ;
comment:
START set the value in the given metadata . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public string get request url ( ) {
 return mrequest url ;
 }
comment:
START returns the requested url for this container . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public native void set video source ( int UNK ) throws illegal state exception ;
comment:
START sets the video source to be used for recording . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public int get element id ( ) {
 return melement id ;
 }
comment:
START returns the frame type 's element id . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public boolean has headers ( ) {
 return get list view ( ) . get visibility ( ) == view . e && mpreference manager == null ;
 }
comment:
START returns true if this activity is currently showing the header list . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the .

code:
public nine patch drawable tint ( color tint ) {
 nine patch drawable drawable = new nine patch drawable ( this ) ;
 drawable . set patch ( new nine patch ( drawable . get patch ( ) , tint ) ) ;
 return drawable ;
 }
comment:
START creates a new drawable that renders the same as this drawable tinted the specified color . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public float [ ] get available apertures checked ( ) {
 key < float [ ] > key = camera characteristics . lens_ info_ available_ s ;
 float [ ] apertures = get value from key non null ( key ) ;
 check true for key ( key , String , apertures . length >= DecimalInteger ) ;
 for ( int i = DecimalInteger ;
 i < apertures . length ;
 i ++ ) {
 check true for key ( key , string . format ( String , i , apertures [ i ] ) , apertures [ i ] > DecimalInteger ) ;
 }
 check element distinct ( key , arrays . as list ( camera test utils . to object ( apertures ) ) ) ;
 return apertures ;
 }
comment:
START get available UNK and do the sanity check . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public list < engine info > get engines ( ) {
 return UNK helper . get engines ( ) ;
 }
comment:
START gets a list of all installed tts engines . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
private model node [ ] nodes array ( ) {
 return nodes . values ( ) . to array ( new model node [ nodes . size ( ) ] ) ;
 }
comment:
START returns an array view on the nodes in the balancer . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public v set value at ( int index , v value ) {
 index = ( index << DecimalInteger ) + DecimalInteger ;
 v old = ( v ) array [ index ] ;
 array [ index ] = value ;
 return old ;
 }
comment:
START set the value at a given index in the array . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public byte [ ] get response body as byte array ( ) {
 return this . response body ;
 }
comment:
START return the response body as a byte array . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of all UNK .
return the number of all UNK in the UNK .
return the number of UNK UNK

code:
private avl node < e > remove max ( avl node < e > node ) {
 if ( right == null ) {
 return left ;
 }
 else {
 right = right . remove max ( node ) ;
 distinct elements -- ;
 total count -= node . elem count ;
 return UNK ( ) ;
 }
 }
comment:
START removes the maximum node from this UNK to be reused UNK END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public string get mime type ( ) {
 return mime type ;
 }
comment:
START gets the mime type of this cache entry . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public void set version ( int version ) {
 this . version = version ;
 }
comment:
START sets the version . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public int get max num focus areas ( ) {
 return get int ( key_ max_ num_ focus_ s , DecimalInteger ) ;
 }
comment:
START gets the maximum number of focus areas supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public abstract < e extends realm model > e create detached copy ( e realm object , int max depth , map < realm model , realm object proxy . cache data < realm model > > cache ) ;
comment:
START creates a deep UNK copy of a realm object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
@ nullable public exit code get pending exit code ( ) {
 abrupt exit exception exception = get pending exception ( ) ;
 return exception == null ? null : exception . get exit code ( ) ;
 }
comment:
START returns the current exit code requested by modules , or null if no exit has been requested . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public entries < k , v > entries ( ) {
 if ( entries1 == null ) {
 entries1 = new entries ( this ) ;
 entries2 = new entries ( this ) ;
 }
 if ( ! entries1 . valid ) {
 entries1 . index = DecimalInteger ;
 entries1 . valid = true ;
 entries2 . valid = false ;
 return entries1 ;
 }
 entries2 . index = DecimalInteger ;
 entries2 . valid = true ;
 entries1 . valid = false ;
 return entries2 ;
 }
comment:
START returns an iterator for the entries in the map . remove is supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set property ( property property ) {
 property = property ;
 }
comment:
START sets the property that will be animated . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public get request parent ( string parent ) {
 this . parent = parent ;
 return this ;
 }
comment:
START sets the parent id of this document . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set user id ( int user id ) {
 if ( muser id != user id ) {
 muser id = user id ;
 synchronized ( lock ) {
 if ( is UNK ( ) ) {
 reset ( false ) ;
 }
 }
 }
 }
comment:
START sets the currently active user id . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ override public view on create view ( layout inflater inflater , view group container , bundle saved instance state ) {
 view v = inflater . inflate ( r . layout . UNK , container , false ) ;
 view tv = v . find view by id ( r . id . text ) ;
 ( ( text view ) tv ) . set text ( label != null ? label : String ) ;
 tv . set background drawable ( get resources ( ) . get drawable ( android . r . drawable . UNK ) ) ;
 return v ;
 }
comment:
START create the view for this fragment , using the arguments given to it . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public static callback set test case for thread ( @ nullable callback callback ) {
 callback previous callback = callback for thread . get ( ) ;
 if ( callback == null ) {
 callback for thread . remove ( ) ;
 }
 else {
 callback for thread . set ( callback ) ;
 }
 return previous callback ;
 }
comment:
START sets the UNK callback . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void put ( string url , object request , object ... url variables ) throws rest client exception {
 this . rest template . put ( url , request , url variables ) ;
 }
comment:
START create or update a resource by putting the given object to the uri . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static void create empty file ( path path ) throws exception {
 path . get output stream ( ) . close ( ) ;
 }
comment:
START creates an empty regular file with the name of the current path , following symbolic links . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set children cursor ( int group position , cursor children cursor ) {
 my cursor helper children cursor helper = get children cursor helper ( group position , false ) ;
 children cursor helper . change cursor ( children cursor , false ) ;
 }
comment:
START sets the children cursor for a particular group . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public string get context path ( ) {
 return this . context path ;
 }
comment:
START return the jaxb context path . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
protected final string get test tmp dir ( ) throws exception {
 return new file ( test utils . tmp dir ( ) ) . get canonical path ( ) + String ;
 }
comment:
START returns the directory to use as the file system 's working directory . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public vector2 get world vector ( vector2 local vector ) {
 tmp . set ( local vector . x , local vector . y ) ;
 vec2 UNK = body . get world vector ( tmp ) ;
 return world vector . set ( UNK . x , UNK . y ) ;
 }
comment:
START get the world coordinates of a vector given the local coordinates . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override @ nullable public index service index service ( index index ) {
 return indices . get ( index . get d ( ) ) ;
 }
comment:
START returns an index service for the specified index if exists otherwise returns null . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public string to string ( ) {
 string builder relation = new string builder ( ) ;
 relation . append ( get kind ( ) ) ;
 relation . append ( String ) ;
 relation . append ( get detail ( ) ) ;
 return relation . to string ( ) ;
 }
comment:
START returns a string representation of this relation . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean is connected ( ) {
 return queue != null ;
 }
comment:
START returns true , if the port is connected . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
@ nullable skylark class object get ( skylark class object constructor . key provider key ) ;
comment:
START returns the declared provider requested , or null , if the information is not found . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public map < string , settings > get as groups ( ) throws settings exception {
 return get as groups ( false ) ;
 }
comment:
START returns group settings for the given setting prefix . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int new local ( final type type ) {
 object t ;
 switch ( type . get sort ( ) ) {
 case type . n : case type . r : case type . e : case type . t : case type . t : t = opcodes . r ;
 break ;
 case type . t : t = opcodes . t ;
 break ;
 case type . g : t = opcodes . g ;
 break ;
 case type . e : t = opcodes . e ;
 break ;
 case type . y : t = type . get descriptor ( ) ;
 break ;
 default : t = type . get internal name ( ) ;
 break ;
 }
 int local = new local mapping ( type ) ;
 set local type ( local , type ) ;
 set frame local ( local , t ) ;
 return local ;
 }
comment:
START creates a new local variable of the given type . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ override public int remove ( @ nullable object element , int occurrences ) {
 if ( occurrences == DecimalInteger ) {
 return count ( element ) ;
 }
 check argument ( occurrences > DecimalInteger , String , occurrences ) ;
 while ( true ) {
 int current = count ( element ) ;
 if ( current == DecimalInteger ) {
 return DecimalInteger ;
 }
 if ( occurrences >= current ) {
 if ( count map . remove ( element , current ) ) {
 return current ;
 }
 }
 else {
 @ suppress warnings ( String ) e UNK = ( e ) element ;
 if ( count map . replace ( UNK , current , current - occurrences ) ) {
 return current ;
 }
 }
 }
 }
comment:
START removes a number of occurrences of the specified element from this multiset . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public void set user data ( final account account , final string key , final string value ) {
 if ( account == null ) throw new illegal argument exception ( String ) ;
 if ( key == null ) throw new illegal argument exception ( String ) ;
 try {
 service . set user data ( account , key , value ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START sets one UNK key for an account . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public abstract long compute battery realtime ( long cur time , int which ) ;
comment:
START returns the total , last , or current battery realtime in microseconds . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK in the UNK .
returns the list of UNK UNK
returns the number of UNK in the UNK

code:
public void set include headers ( boolean include headers ) {
 this . include headers = include headers ;
 }
comment:
START set whether the request headers should be included in the log message . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set drop down horizontal offset ( int pixels ) {
 popup . set horizontal offset ( pixels ) ;
 }
comment:
START set a horizontal offset in pixels for the spinner 's popup window of choices . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public file new folder ( string folder ) throws exception {
 return new folder ( new string [ ] {
 folder }
 ) ;
 }
comment:
START returns a new fresh folder with the given name under the temporary folder . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public void set value typeface ( typeface tf ) {
 for ( idata set set : mdata sets ) {
 set . set value typeface ( tf ) ;
 }
 }
comment:
START sets the typeface for all value-labels for all data sets this data object contains . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ nullable public static locale qualifier get locale ( @ non null xml context context ) {
 element root = context . document . get document element ( ) ;
 if ( root != null ) {
 string locale = root . get attribute s ( UNK i , attr_ e ) ;
 if ( locale != null && ! locale . is empty ( ) ) {
 return get locale ( locale ) ;
 }
 }
 return get locale ( context . file . get parent file ( ) . get name ( ) ) ;
 }
comment:
START returns the locale for the given context . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public void set file size threshold ( string file size threshold ) {
 this . file size threshold = ( int ) parse size ( file size threshold ) ;
 }
comment:
START sets the size threshold after which files will be written to disk . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
void set latest ( object value ) {
 latest = value ;
 }
comment:
START set the latest notification UNK value . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public static double buffer new double buffer ( int capacity ) {
 return new read write double array buffer ( capacity ) ;
 }
comment:
START returns a new array based double buffer with the specified capacity . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void add init parameter ( string name , string value ) {
 assert . not null ( name , String ) ;
 this . init parameters . put ( name , value ) ;
 }
comment:
START add a single UNK , replacing any existing parameter with the same name . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public set < annotation > get annotations ( ) {
 return annotations ;
 }
comment:
START returns an immutable set of all annotations on this method parameter , never null . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static system update policy create UNK install policy ( ) {
 system update policy policy = new system update policy ( ) ;
 policy . mpolicy type = type_ e ;
 return policy ;
 }
comment:
START create a policy object and set it to block installation for a maximum period of NUMBER UNK . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public string get descriptor ( ) {
 string buffer buf = new string buffer ( ) ;
 get descriptor ( buf ) ;
 return buf . to string ( ) ;
 }
comment:
START returns the descriptor corresponding to this java type . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public filters aggregation builder other bucket key ( string other bucket key ) {
 if ( other bucket key == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . other bucket key = other bucket key ;
 return this ;
 }
comment:
START set the key to use for the bucket for documents not matching any filter . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public final completable repeat ( ) {
 return from observable ( to observable ( ) . repeat ( ) ) ;
 }
comment:
START returns a completable that UNK subscribes to this completable until cancelled . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public boolean get inset hint lw ( window manager . layout params attrs , rect task bounds , int display rotation , int display width , int display height , rect out content insets , rect out stable insets , rect out UNK ) ;
comment:
START return the insets for the areas covered by system windows . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public values < v > values ( ) {
 if ( values1 == null ) {
 values1 = new values ( this ) ;
 values2 = new values ( this ) ;
 }
 if ( ! values1 . valid ) {
 values1 . reset ( ) ;
 values1 . valid = true ;
 values2 . valid = false ;
 return values1 ;
 }
 values2 . reset ( ) ;
 values2 . valid = true ;
 values1 . valid = false ;
 return values2 ;
 }
comment:
START returns an iterator for the values in the map . remove is supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public long get disconnect delay ( ) {
 return this . disconnect delay ;
 }
comment:
START return the amount of time in milliseconds before a client is considered disconnected . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
@ suppress warnings ( String ) public nested set builder < e > add all ( iterable < ? extends e > elements ) {
 preconditions . check not null ( elements ) ;
 iterables . add all ( items , elements ) ;
 return this ;
 }
comment:
START adds a collection of elements to the set . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
@ visible for testing public list < string > get compiler options ( ) {
 return cpp compile command line . get compiler options ( null ) ;
 }
comment:
START returns the compiler options . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public static int [ ] get device ids ( ) {
 return input manager . get instance ( ) . get input device ids ( ) ;
 }
comment:
START gets the ids of all input devices in the system . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public jack compilation helper . builder set rule context ( rule context rule context ) {
 this . rule context = preconditions . check not null ( rule context ) ;
 return this ;
 }
comment:
START sets the rule context in which this compilation helper will operate . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get process user ( ) {
 if ( um == null ) return DecimalInteger ;
 return um . get user handle ( ) ;
 }
comment:
START returns the processes user id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ nullable public porter duff . mode get secondary progress tint mode ( ) {
 return mprogress tint info != null ? mprogress tint info . msecondary progress tint mode : null ;
 }
comment:
START returns the blending mode used to apply the tint to the secondary progress drawable , if specified . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public intent create UNK UNK intent ( ) {
 if ( g ) slog . d ( g , String ) ;
 synchronized ( lock ) {
 return get manage intent locked ( manage_ action_ UNK l ) ;
 }
 }
comment:
START creates an intent to start the UNK for the associated keyphrase . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set safe mode ( boolean safe mode ) {
 UNK mode = safe mode ;
 }
comment:
START sets the safe mode flag for services to query . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public final void set pending count ( int count ) {
 pending = count ;
 }
comment:
START sets the pending count to the given value . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public set < string > get names for property ( string property name ) {
 return get names ( property to constant name prefix ( property name ) ) ;
 }
comment:
START return all names of the group of constants for the given bean property name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private static location extract location ( exception original , node UNK ) {
 if ( UNK != null && UNK . get location ( ) != null ) {
 return UNK . get location ( ) ;
 }
 return ( original instanceof eval exception ) ? ( ( eval exception ) original ) . get location ( ) : null ;
 }
comment:
START returns the appropriate location for this exception . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public string get default deprecation ( ) {
 return default deprecation ;
 }
comment:
START returns the default deprecation value . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
path get path ( package pkg , string file name ) throws interrupted exception ;
comment:
START returns a path for the given file within the given package . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public void capture transitioning views ( list < view > transitioning views ) {
 if ( get visibility ( ) == view . e ) {
 transitioning views . add ( this ) ;
 }
 }
comment:
START gets the views in the hierarchy affected by entering and exiting activity scene transitions . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public static resource leak detector factory instance ( ) {
 return factory instance ;
 }
comment:
START get the singleton instance of this factory class . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public long get if UNK since ( ) {
 return get first date ( if_ UNK e , false ) ;
 }
comment:
START returns -1 when the date is unknown . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static drawable make cubic gradient scrim drawable ( @ color int int base color , int num stops , int gravity ) {
 num stops = math . max ( num stops , DecimalInteger ) ;
 paint drawable paint drawable = new paint drawable ( ) ;
 paint drawable . set shape ( new rect shape ( ) ) ;
 final int [ ] stop colors = new int [ num stops ] ;
 int alpha = color . alpha ( base color ) ;
 for ( int i = DecimalInteger ;
 i < num stops ;
 i ++ ) {
 float x = i * DecimalFloatingPoint / ( num stops - DecimalInteger ) ;
 float opacity = math utils . constrain ( DecimalInteger , DecimalInteger , ( float ) math . pow ( x , DecimalInteger ) ) ;
 stop colors [ i ] = color utils . UNK alpha ( base color , ( int ) ( alpha * opacity ) ) ;
 }
 final float x0 , x1 , y0 , y1 ;
 switch ( gravity & gravity . horizontal_ gravity_ k ) {
 case gravity . t : x0 = DecimalInteger ;
 x1 = DecimalInteger ;
 break ;
 case gravity . t : x0 = DecimalInteger ;
 x1 = DecimalInteger ;
 break ;
 default : x0 = DecimalInteger ;
 x1 = DecimalInteger ;
 break ;
 }
 switch ( gravity & gravity . vertical_ gravity_ k ) {
 case gravity . p : y0 = DecimalInteger ;
 y1 = DecimalInteger ;
 break ;
 case gravity . m : y0 = DecimalInteger ;
 y1 = DecimalInteger ;
 break ;
 default : y0 = DecimalInteger ;
 y1 = DecimalInteger ;
 break ;
 }
 paint drawable . set shader factory ( new shape drawable . shader factory ( ) {
 @ override public shader resize ( int width , int height ) {
 linear gradient linear gradient = new linear gradient ( width * x0 , height * y0 , width * x1 , height * y1 , stop colors , null , shader . tile mode . p ) ;
 return linear gradient ;
 }
 }
 ) ;
 return paint drawable ;
 }
comment:
START creates an UNK UNK gradient using a UNK linear gradient . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
private static string get cache key ( string url , int max width , int max height ) {
 return new string builder ( url . length ( ) + DecimalInteger ) . append ( String ) . append ( max width ) . append ( String ) . append ( max height ) . append ( url ) . to string ( ) ;
 }
comment:
START creates a cache key for use with the UNK cache . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set limit ( final int limit ) {
 limit = limit ;
 UNK ids . clear ( ) ;
 notify data set changed ( ) ;
 }
comment:
START set the maximum number of items allowed to be expanded . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public double get code phase in chips ( ) {
 return mcode phase in chips ;
 }
comment:
START gets the fraction of the current c/ a code cycle . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static class < ? > get target class ( object candidate ) {
 assert . not null ( candidate , String ) ;
 class < ? > result = null ;
 if ( candidate instanceof target class aware ) {
 result = ( ( target class aware ) candidate ) . get target class ( ) ;
 }
 if ( result == null ) {
 result = ( is UNK proxy ( candidate ) ? candidate . get class ( ) . get superclass ( ) : candidate . get class ( ) ) ;
 }
 return result ;
 }
comment:
START returns the target class for an aop proxy or the plain class otherwise . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set rating type ( @ rating . style int type ) {
 try {
 binder . set rating type ( type ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 }
comment:
START set the style of rating used by this session . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public int get active display state ( ) {
 return mactive display state ;
 }
comment:
START get the state of the currently active display . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public int remove index ( int index ) {
 if ( index >= size ) throw new index out of bounds exception ( String + index + String + size ) ;
 int [ ] items = this . items ;
 int value = items [ index ] ;
 size -- ;
 if ( ordered ) system . arraycopy ( items , index + DecimalInteger , items , index , size - index ) ;
 else items [ index ] = items [ size ] ;
 return value ;
 }
comment:
START removes and returns the item at the specified index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public long first ( ) {
 if ( size == DecimalInteger ) throw new illegal state exception ( String ) ;
 return items [ DecimalInteger ] ;
 }
comment:
START returns the first item . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ beta public static < k , v > immutable multimap < k , v > copy of ( iterable < ? extends entry < ? extends k , ? extends v > > entries ) {
 return immutable list multimap . copy of ( entries ) ;
 }
comment:
START returns an immutable multimap containing the specified entries . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
protected int get suggested minimum width ( ) {
 return ( background == null ) ? mmin width : max ( mmin width , background . get minimum width ( ) ) ;
 }
comment:
START returns the suggested minimum width that the view should use . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string force get value as string ( ) {
 if ( value == null ) {
 return String ;
 }
 else if ( value instanceof byte [ ] ) {
 if ( mdata type == type_ i ) {
 return new string ( ( byte [ ] ) value , us_ i ) ;
 }
 else {
 return arrays . to string ( ( byte [ ] ) value ) ;
 }
 }
 else if ( value instanceof long [ ] ) {
 if ( ( ( long [ ] ) value ) . length == DecimalInteger ) {
 return string . value of ( ( ( long [ ] ) value ) [ DecimalInteger ] ) ;
 }
 else {
 return arrays . to string ( ( long [ ] ) value ) ;
 }
 }
 else if ( value instanceof object [ ] ) {
 if ( ( ( object [ ] ) value ) . length == DecimalInteger ) {
 object val = ( ( object [ ] ) value ) [ DecimalInteger ] ;
 if ( val == null ) {
 return String ;
 }
 else {
 return val . to string ( ) ;
 }
 }
 else {
 return arrays . to string ( ( object [ ] ) value ) ;
 }
 }
 else {
 return value . to string ( ) ;
 }
 }
comment:
START gets a string representation of the value . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public int [ ] get available control modes checked ( ) {
 key < int [ ] > modes key = camera characteristics . control_ available_ s ;
 int [ ] modes = get value from key non null ( modes key ) ;
 if ( modes == null ) {
 modes = new int [ DecimalInteger ] ;
 }
 list < integer > mode list = arrays . as list ( camera test utils . to object ( modes ) ) ;
 check true for key ( modes key , String , ! mode list . is empty ( ) ) ;
 check true for key ( modes key , String + mode list . to string ( ) + String , mode list . contains ( camera metadata . control_ mode_ o ) ) ;
 boolean is ae off supported = arrays . as list ( camera test utils . to object ( get ae available modes checked ( ) ) ) . contains ( camera metadata . control_ ae_ mode_ f ) ;
 boolean is af off supported = arrays . as list ( camera test utils . to object ( get af available modes checked ( ) ) ) . contains ( camera metadata . control_ af_ mode_ f ) ;
 boolean is awb off supported = arrays . as list ( camera test utils . to object ( get awb available modes checked ( ) ) ) . contains ( camera metadata . control_ UNK mode_ f ) ;
 if ( is ae off supported && is af off supported && is awb off supported ) {
 check true for key ( modes key , String + mode list . to string ( ) + String , mode list . contains ( camera metadata . control_ mode_ f ) ) ;
 }
 if ( is scene mode supported ( ) ) {
 check true for key ( modes key , String + mode list . to string ( ) + String + String , mode list . contains ( camera metadata . control_ mode_ use_ scene_ e ) ) ;
 }
 return modes ;
 }
comment:
START get UNK modes and do the sanity check . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void set radius ( float radius ) {
 this . radius = radius ;
 }
comment:
START sets the radius of circle @param radius the radius END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public void set service ver ( string service ver ) {
 this . mservice ver = service ver ;
 }
comment:
START sets the service version . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public layout animation controller get layout animation ( ) {
 return mlayout animation controller ;
 }
comment:
START returns the layout animation controller used to animate the group 's children . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public e get and null value ( ) {
 e temp = lp value ( ) ;
 sp value ( null ) ;
 return temp ;
 }
comment:
START gets the current value and UNK out the reference to it from this node . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public boolean is descendant of ( actor actor ) {
 if ( actor == null ) throw new illegal argument exception ( String ) ;
 actor parent = this ;
 while ( true ) {
 if ( parent == null ) return false ;
 if ( parent == actor ) return true ;
 parent = parent . parent ;
 }
 }
comment:
START returns true if this actor is the same as or is the descendant of the specified actor . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
static immutable map < string , string > apple toolchain environment ( apple configuration apple configuration , platform target platform ) {
 return immutable map . < string , string > builder ( ) . put all ( apple configuration . get target apple environment ( target platform ) ) . put all ( apple configuration . get apple host system env ( ) ) . build ( ) ;
 }
comment:
START returns apple environment variables that are typically needed by the apple toolchain . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public geo bounding box query builder set corners c ( geo point bottom left , geo point top right ) {
 return set corners ( top right . get lat ( ) , bottom left . get lon ( ) , bottom left . get lat ( ) , top right . get lon ( ) ) ;
 }
comment:
START adds corners in UNK standard UNK / UNK format . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public int get added count ( ) {
 return UNK count ;
 }
comment:
START gets the number of added characters . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set source ( view source ) {
 set source ( source , undefined_ item_ d ) ;
 }
comment:
START sets the source . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public path fragment get bin fragment ( ) {
 return get bin directory ( ) . get exec path ( ) ;
 }
comment:
START returns a relative path to the bin directory at execution time . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public abstract int get intent verification status as user ( string package name , @ user id int int user id ) ;
comment:
START get the status of a domain verification result for an intent filter . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public builder set connectable ( boolean connectable ) {
 connectable = connectable ;
 return this ;
 }
comment:
START set whether the advertisement type should be connectable or UNK . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public boolean is set wallpaper allowed ( ) {
 if ( globals . service == null ) {
 log . w ( g , String ) ;
 throw new runtime exception ( new dead system exception ( ) ) ;
 }
 else {
 try {
 return globals . service . is set wallpaper allowed ( context . get op package name ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
 }
comment:
START returns whether the calling package is allowed to set the wallpaper for the calling user . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the given view .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
public int get particle group count ( ) {
 return m_particle system . get particle group count ( ) ;
 }
comment:
START get the number of particle groups . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ suppress warnings ( String ) public static < e extends comparable < ? super e > > immutable sorted set < e > of ( e e1 , e e2 , e e3 ) {
 return construct ( ordering . natural ( ) , DecimalInteger , e1 , e2 , e3 ) ;
 }
comment:
START returns an immutable sorted set containing the given elements sorted by their natural ordering . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public final alignment get paragraph alignment ( int line ) {
 alignment align = alignment ;
 if ( UNK text ) {
 spanned sp = ( spanned ) text ;
 alignment span [ ] spans = get paragraph spans ( sp , get line start ( line ) , get line end ( line ) , alignment span . class ) ;
 int span length = spans . length ;
 if ( span length > DecimalInteger ) {
 align = spans [ span length - DecimalInteger ] . get alignment ( ) ;
 }
 }
 return align ;
 }
comment:
START get the alignment of the specified paragraph , taking into account markup attached to it . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public abstract nested set < artifact > get transitive UNK ( ) ;
comment:
START returns the apk files generated in the transitive closure . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public static type get type ( final constructor < ? > c ) {
 return get type ( get constructor descriptor ( c ) ) ;
 }
comment:
START returns the java method type corresponding to the given constructor . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
protected object create refreshable proxy ( target source ts , class < ? > [ ] interfaces , boolean proxy target class ) {
 proxy factory proxy factory = new proxy factory ( ) ;
 proxy factory . set target source ( ts ) ;
 class loader class loader = this . bean class loader ;
 if ( interfaces == null ) {
 interfaces = class utils . get all interfaces for class ( ts . get target class ( ) , this . bean class loader ) ;
 }
 proxy factory . set interfaces ( interfaces ) ;
 if ( proxy target class ) {
 class loader = null ;
 proxy factory . set proxy target class ( true ) ;
 }
 delegating introduction interceptor introduction = new delegating introduction interceptor ( ts ) ;
 introduction . suppress interface ( target source . class ) ;
 proxy factory . add advice ( introduction ) ;
 return proxy factory . get proxy ( class loader ) ;
 }
comment:
START create a UNK proxy for the given aop target source . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public int get fetch size ( ) {
 return this . fetch size ;
 }
comment:
START return the fetch size specified for this jdbc template . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public void test failure ( description description , throwable throwable ) {
 test node test = get test ( description ) ;
 if ( test != null ) {
 if ( throwable instanceof dynamic test exception ) {
 dynamic test exception dynamic failure = ( dynamic test exception ) throwable ;
 test . dynamic test failure ( dynamic failure . get test ( ) , dynamic failure . get cause ( ) , current millis ( ) ) ;
 }
 else {
 test . test failure ( throwable , current millis ( ) ) ;
 }
 }
 }
comment:
START adds a failure to the test with the given key . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public synchronized text size get text size ( ) {
 text size closest size = null ;
 int smallest delta = integer . max_ e ;
 int text size = get text zoom ( ) ;
 for ( text size size : text size . values ( ) ) {
 int delta = math . abs ( text size - size . value ) ;
 if ( delta == DecimalInteger ) {
 return size ;
 }
 if ( delta < smallest delta ) {
 smallest delta = delta ;
 closest size = size ;
 }
 }
 return closest size != null ? closest size : text size . l ;
 }
comment:
START gets the text size of the page . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ deprecated public adapter view . on item selected listener get item selected listener ( ) {
 return mitem selected listener ;
 }
comment:
START returns the listener that is notified whenever the user selects an item in the drop down list . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the .
returns the number of all UNK in the given .

code:
@ android . view . remotable view method public void set text size ( float size ) {
 set text size ( typed value . complex_ unit_ p , size ) ;
 }
comment:
START set the default text size to the given value , interpreted as `` scaled pixel '' units . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
sets the UNK of the given UNK .

code:
public char first ( ) {
 if ( size == DecimalInteger ) throw new illegal state exception ( String ) ;
 return items [ DecimalInteger ] ;
 }
comment:
START returns the first item . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
UNK server socket channel config set so timeout ( int timeout ) ;
comment:
START sets the maximal time a operation on the underlying socket may block . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public http status get status ( ) {
 return this . status ;
 }
comment:
START return the configured http status for the response , if any . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public void set application ( application application ) {
 application = application ;
 }
comment:
START sets the application that is used during the test . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK

code:
public static native string get UNK memory ( int limit , boolean contents ) ;
comment:
START get description of UNK native memory . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set cache dir ( file cache dir ) {
 assert . not null ( cache dir , String ) ;
 assert . is true ( cache dir . is directory ( ) , String ) ;
 this . cache dir = cache dir ;
 }
comment:
START sets the cache directory . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public date get deadline ( ) {
 return this . deadline ;
 }
comment:
START return the expiration deadline of this object . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public static camera open ( ) {
 int number of cameras = get number of cameras ( ) ;
 camera info camera info = new camera info ( ) ;
 for ( int i = DecimalInteger ;
 i < number of cameras ;
 i ++ ) {
 get camera info ( i , camera info ) ;
 if ( camera info . facing == camera info . camera_ facing_ k ) {
 return new camera ( i ) ;
 }
 }
 return null ;
 }
comment:
START creates a new camera object to access the first UNK camera on the device . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public map < string , supervisor details > get supervisors ( ) {
 return this . supervisors ;
 }
comment:
START get all the UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public list < string > indices ( ) {
 return indices ;
 }
comment:
START returns list of indices @return list of indices END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ gnss navigation message type public int get type ( ) {
 return type ;
 }
comment:
START gets the type of the navigation message contained in the object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public static template for string ( final string template text ) {
 return new template ( ) {
 @ override protected string get content ( ) {
 return template text ;
 }
 @ override protected string get key ( ) {
 return template text ;
 }
 }
 ;
 }
comment:
START returns a template for the given text string . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public data source get data source ( ) {
 return this . data source ;
 }
comment:
START return the jdbc data source that this instance manages transactions for . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of UNK .
return the number of all UNK .

code:
public void set user data ( int user data ) {
 this . muser data = user data ;
 }
comment:
START sets the user data . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given request .
set the UNK for the given UNK .

code:
public void add all ( iterator < ? extends number > values ) {
 while ( values . has next ( ) ) {
 add ( values . next ( ) . double value ( ) ) ;
 }
 }
comment:
START adds the given values to the dataset . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
add the UNK to the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public object get values ( ) {
 object value = super . get value ( ) ;
 if ( value == null || value . get class ( ) . is array ( ) ) {
 return super . get value ( ) ;
 }
 else {
 object [ ] array = ( object [ ] ) array . new instance ( value . get class ( ) , DecimalInteger ) ;
 array [ DecimalInteger ] = value ;
 return array ;
 }
 }
comment:
START returns the values in the frame as an array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void set reason phrase ( string reason phrase ) {
 this . mreason phrase = reason phrase ;
 }
comment:
START sets the sip response code reason phrase . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set network selection mode automatic ( int sub id ) {
 try {
 telephony telephony = get telephony ( ) ;
 if ( telephony != null ) telephony . set network selection mode automatic ( sub id ) ;
 }
 catch ( remote exception ex ) {
 rlog . e ( g , String , ex ) ;
 }
 catch ( null pointer exception ex ) {
 rlog . e ( g , String , ex ) ;
 }
 }
comment:
START sets the network selection mode to automatic . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public java library helper set javac opts ( iterable < string > javac opts ) {
 this . javac opts = immutable list . copy of ( javac opts ) ;
 return this ;
 }
comment:
START sets the compiler options . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public int get max rows ( ) {
 return this . max rows ;
 }
comment:
START return the maximum number of rows specified for this jdbc template . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set reason ( string reason ) {
 this . reason = reason ;
 }
comment:
START sets the reason phrase associated with the sip response code . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public void set argument names ( string arg names ) {
 string [ ] tokens = string utils . comma delimited list to string array ( arg names ) ;
 set argument names from string array ( tokens ) ;
 }
comment:
START set by creator of this advice object if the argument names are known . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public list adapter get list adapter ( ) {
 return adapter ;
 }
comment:
START get the list adapter associated with this activity 's list view . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ int range ( from = - DecimalInteger ) public int get page count ( ) {
 return mpage count ;
 }
comment:
START gets the total number of pages . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public exception exception ( path path ) throws exception {
 string m = path + String + message + String ;
 if ( this == s ) {
 throw new file access exception with error ( m , this ) ;
 }
 else if ( this == t ) {
 throw new file not found exception with error ( m , this ) ;
 }
 else {
 throw new UNK with error ( m , this ) ;
 }
 }
comment:
START returns a new ioexception for the error . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ override public void set screen capture disabled ( component name who , boolean disabled ) {
 if ( ! mhas feature ) {
 return ;
 }
 preconditions . check not null ( who , String ) ;
 final int user handle = user handle . get calling user id ( ) ;
 synchronized ( this ) {
 active admin ap = get active admin for caller locked ( who , device admin info . UNK policy_ profile_ r ) ;
 if ( ap . disable screen capture != disabled ) {
 ap . disable screen capture = disabled ;
 save settings locked ( user handle ) ;
 update screen capture disabled in window manager ( user handle , disabled ) ;
 }
 }
 }
comment:
START set whether the screen capture is disabled for the user managed by the specified admin . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public void set parameter names ( string ... names ) {
 this . pointcut parameter names = names ;
 }
comment:
START set the parameter names for the pointcut . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set dim alpha ( float dim alpha ) {
 mdim alpha = dim alpha ;
 mthumbnail view . set dim alpha ( dim alpha ) ;
 mheader view . set dim alpha ( dim alpha ) ;
 }
comment:
START sets the current dim . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ nullable public static < t extends closeable > closeable reference < t > of ( @ nullable t t ) {
 if ( t == null ) {
 return null ;
 }
 else {
 return new closeable reference < t > ( t , ( resource UNK < t > ) default_ UNK r ) ;
 }
 }
comment:
START returns null if the parameter is null . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public float get font spacing ( ) {
 return get font metrics ( null ) ;
 }
comment:
START return the UNK line spacing based on the current typeface and text size . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get max num output streams raw checked ( ) {
 integer max num streams = get value from key non null ( camera characteristics . request_ max_ num_ output_ w ) ;
 if ( max num streams == null ) return DecimalInteger ;
 return max num streams ;
 }
comment:
START get max number of output raw streams and do the basic sanity check . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
@ night mode public int get night mode ( ) {
 if ( service != null ) {
 try {
 return service . get night mode ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
 return - DecimalInteger ;
 }
comment:
START returns the currently configured night mode . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static void add standard rules ( configured rule class provider . builder builder ) {
 try {
 class < ? > provider class = class . for name ( test constants . test_ rule_ class_ r ) ;
 builder . set tools repository ( test constants . UNK y ) ;
 method setup method = provider class . get method ( String , configured rule class provider . builder . class ) ;
 setup method . invoke ( null , builder ) ;
 }
 catch ( exception e ) {
 throw new illegal state exception ( e ) ;
 }
 }
comment:
START adds all the rule classes supported internally within the build tool to the given builder . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set to UNK to UNK .

code:
protected long get last opt in milliseconds ( instance group group ) {
 string prop = s + group . type ( ) + String + group . name ( ) + String ;
 long last opt in time in milliseconds = ( long ) cfg . get num or else ( prop , - DecimalInteger ) ;
 return last opt in time in milliseconds ;
 }
comment:
START returns last opt in time in milliseconds from the . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get telecom call id ( ) {
 return UNK call id ;
 }
comment:
START returns the internal telecom id associated with the connection request . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public abstract array map < string , ? extends wakelock > get wakelock stats ( ) ;
comment:
START returns a mapping containing UNK statistics . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public infc tag get tag service ( ) {
 is enabled ( ) ;
 return UNK service ;
 }
comment:
START returns the binder interface to the tag service . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void get vertex ( int index , vector2 vertex ) {
 vec2 v = shape . m_vertices [ index ] ;
 vertex . set ( v . x , v . y ) ;
 }
comment:
START returns the vertex at the given position . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public string to short string ( ) {
 string builder sb = new string builder ( DecimalInteger ) ;
 to short string ( sb ) ;
 return sb . to string ( ) ;
 }
comment:
START return a string representation of the transformation in a compact form . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
public static final native string get file context ( string path ) ;
comment:
START get the security context of a file object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the given .

code:
private boolean is value ( string token ) {
 return ! is option ( token ) || is negative number ( token ) ;
 }
comment:
START returns true is the token is a valid value . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public float get linear damping ( ) {
 return jni get linear damping ( addr ) ;
 }
comment:
START get the linear damping of the body . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .

code:
public bean definition builder add property reference ( string name , string bean name ) {
 this . bean definition . get property values ( ) . add ( name , new runtime bean reference ( bean name ) ) ;
 return this ;
 }
comment:
START add a reference to the specified bean name under the property specified . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void add ( texture texture , float x , float y ) {
 final float fx2 = x + texture . get width ( ) ;
 final float fy2 = y + texture . get height ( ) ;
 temp vertices [ DecimalInteger ] = x ;
 temp vertices [ DecimalInteger ] = y ;
 temp vertices [ DecimalInteger ] = color ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = x ;
 temp vertices [ DecimalInteger ] = fy2 ;
 temp vertices [ DecimalInteger ] = color ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = fx2 ;
 temp vertices [ DecimalInteger ] = fy2 ;
 temp vertices [ DecimalInteger ] = color ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 if ( mesh . get num indices ( ) > DecimalInteger ) {
 temp vertices [ DecimalInteger ] = fx2 ;
 temp vertices [ DecimalInteger ] = y ;
 temp vertices [ DecimalInteger ] = color ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 add ( texture , temp vertices , DecimalInteger , DecimalInteger ) ;
 }
 else {
 temp vertices [ DecimalInteger ] = fx2 ;
 temp vertices [ DecimalInteger ] = fy2 ;
 temp vertices [ DecimalInteger ] = color ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = fx2 ;
 temp vertices [ DecimalInteger ] = y ;
 temp vertices [ DecimalInteger ] = color ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = x ;
 temp vertices [ DecimalInteger ] = y ;
 temp vertices [ DecimalInteger ] = color ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 temp vertices [ DecimalInteger ] = DecimalInteger ;
 add ( texture , temp vertices , DecimalInteger , DecimalInteger ) ;
 }
 }
comment:
START adds the specified texture to the cache . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public final int count actions ( ) {
 return actions . size ( ) ;
 }
comment:
START return the number of actions in the filter . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public graph reader get graph reader ( ) {
 if ( UNK reader == null ) {
 UNK reader = new text graph reader ( ) ;
 }
 return UNK reader ;
 }
comment:
START returns the used graph reader . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get report delay millis ( ) {
 return UNK delay millis ;
 }
comment:
START returns report delay timestamp based on the device clock . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
@ test api public void set received sv time nanos ( long value ) {
 mreceived sv time nanos = value ;
 }
comment:
START sets the received gnss time in nanoseconds . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void on create ( abstract statement retriever statement retriever , looper looper , file cache dir ) {
 super . on create ( ) ;
 UNK retriever = statement retriever ;
 handler = new handler ( looper ) ;
 try {
 file http cache dir = new file ( cache dir , cache_ e ) ;
 UNK response cache = http response cache . install ( http cache dir , http_ cache_ size_ in_ s ) ;
 }
 catch ( exception e ) {
 log . i ( g , String + e ) ;
 }
 }
comment:
START creates a direct statement service with the dependencies passed in for UNK testing . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public conversion service get conversion service ( ) {
 return this . conversion service ;
 }
comment:
START return the configured conversion service . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of UNK .
return the number of all UNK .

code:
public view get video surface view ( ) {
 return surface view ;
 }
comment:
START get the view UNK which video is rendered . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static path fragment get lipo data bin fragment ( build configuration configuration ) {
 path fragment parent = configuration . get bin fragment ( ) . get parent directory ( ) ;
 return parent . replace name ( parent . get base name ( ) + String ) . get child ( configuration . get bin fragment ( ) . get base name ( ) ) ;
 }
comment:
START returns a relative path to the bin directory for data in auto o lipo mode . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean is valid locked ( ) {
 return UNK display device != null ;
 }
comment:
START returns true if the logical display is in a valid state . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set selectors ( int selectors ) {
 this . selectors = selectors ;
 }
comment:
START set the number of selector threads to use . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public final float length ( ) {
 return math utils . sqrt ( x * x + y * y ) ;
 }
comment:
START return the length of this vector . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static geo validation method UNK ( boolean coerce , boolean ignore malformed ) {
 if ( coerce ) {
 return geo validation method . e ;
 }
 else if ( ignore malformed ) {
 return geo validation method . ignore_ d ;
 }
 else {
 return geo validation method . t ;
 }
 }
comment:
START returns validation method corresponding to given UNK and ignore malformed values . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public int get routing num shards ( ) {
 return routing num shards == null ? number of shards ( ) : routing num shards ;
 }
comment:
START returns number of shards that should be used for routing . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public create index request builder set wait for active shards ( active shard count wait for active shards ) {
 request . wait for active shards ( wait for active shards ) ;
 return this ;
 }
comment:
START sets the number of shard copies that should be active for index creation to return . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK of UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .

code:
public resources get resources ( ) {
 if ( recycled ) {
 throw new runtime exception ( String ) ;
 }
 return resources ;
 }
comment:
START returns the resources object this array was loaded from . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK
returns the list of UNK UNK that be UNK to the UNK .

code:
nodes hot threads request builder prepare nodes hot threads ( string ... nodes ids ) ;
comment:
START returns a request builder to fetch top n UNK samples per node . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
private static long calculate jpeg stall duration ( camera . size size ) {
 long base duration = UNK capture_ delay_ s * ns_ per_ s ;
 long area = size . width * ( long ) size . height ;
 long stall per area = UNK jpeg_ UNK time_ s * ns_ per_ s / UNK sensor_ UNK x ;
 return base duration + area * stall per area ;
 }
comment:
START return the UNK duration for a given output jpeg size in nanoseconds . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
void set locale ( http servlet request request , http servlet response response , locale locale ) ;
comment:
START set the current locale to the given one . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public int peek ( ) {
 return items [ size - DecimalInteger ] ;
 }
comment:
START returns the last item . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public target get loaded target ( label label ) throws no such package exception , no such target exception , interrupted exception {
 return package provider . get target ( event handler , label ) ;
 }
comment:
START returns a target if it was recently loaded , i.e. , since the most recent cache sync . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public builder < e > value ( skylark computed default template skylark computed default template ) {
 preconditions . check state ( ! value set , String ) ;
 value = skylark computed default template ;
 value source = attribute value source . UNK t ;
 value set = true ;
 return this ;
 }
comment:
START sets the attribute default value to a skylark computed default template . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set response code ( int response code ) {
 this . response code = response code ;
 }
comment:
START sets the response code for this message . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public void set background processor delay ( int delay ) {
 this . background processor delay = delay ;
 }
comment:
START sets the background processor delay in seconds . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void add test ( test test ) {
 tests . add ( test ) ;
 }
comment:
START adds a test to the suite . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
add the UNK to UNK .
add the UNK UNK to the UNK .
add the UNK UNK to the given UNK .
add the UNK UNK to the UNK

code:
public builder add ( rule context rule context , function < transitive info collection , runfiles > mapping ) {
 preconditions . check not null ( rule context ) ;
 preconditions . check not null ( mapping ) ;
 for ( transitive info collection dep : get non data deps ( rule context ) ) {
 runfiles runfiles = mapping . apply ( dep ) ;
 if ( runfiles != null ) {
 merge ( runfiles ) ;
 }
 }
 return this ;
 }
comment:
START adds the files specified by a mapping from the transitive info collection to the runfiles . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public entry get entry by touch point ( float x , float y ) {
 highlight h = get highlight by touch point ( x , y ) ;
 if ( h != null ) {
 return data . get entry for highlight ( h ) ;
 }
 return null ;
 }
comment:
START returns the entry object displayed at the touched position of the chart @param x @param y @return END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
private static collection < build options > get split options ( rule rule , attribute attribute , build configuration rule config ) {
 if ( ! attribute . has split configuration transition ( ) ) {
 return immutable list . < build options > of ( ) ;
 }
 @ suppress warnings ( String ) attribute . split transition < build options > transition = ( attribute . split transition < build options > ) attribute . get split transition ( rule ) ;
 return transition . split ( rule config . get options ( ) ) ;
 }
comment:
START returns true if the rule 's attribute triggers a split in this configuration . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public graph runner get runner ( ) {
 if ( runner == null ) {
 graph runner runner = new graph runner ( context ) ;
 attach to runner ( runner ) ;
 }
 return runner ;
 }
comment:
START returns the graph runner for this graph . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public boolean is o ( ) {
 return ( st_mode & s_ t ) == s_ o ;
 }
comment:
START returns true iff this file is a UNK . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public void on initialize accessibility node info ( accessibility node info node info ) {
 for ( int i = DecimalInteger ;
 i < maccessibility actions . size ( ) ;
 i ++ ) {
 node info . add action ( maccessibility actions . value at ( i ) ) ;
 }
 }
comment:
START adds `` UNK t '' accessibility actions to the specified accessibility node info . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public int get new pointer count ( ) {
 return detector . get new pointer count ( ) ;
 }
comment:
START gets the number of pointers after the current gesture END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static string get current proxied bean name ( ) {
 return current proxied bean name . get ( ) ;
 }
comment:
START return the name of the currently proxied bean instance . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
float get UNK x ( view group scene root , view view , float fraction ) ;
comment:
START returns the translation value for view when it goes out of the scene END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set parameter ( string name , string [ ] values ) {
 assert . not null ( name , String ) ;
 this . parameters . put ( name , values ) ;
 }
comment:
START set an array of values for the specified http parameter . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public final void set density ( int target density ) {
 if ( density != target density ) {
 final int source density = density ;
 density = target density ;
 on density changed ( source density , target density ) ;
 }
 }
comment:
START sets the constant state density . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public put index template request builder set aliases ( bytes reference source ) {
 request . aliases ( source ) ;
 return this ;
 }
comment:
START sets the aliases that will be associated with the index when it gets created END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public boolean matches index name ( string expression ) {
 return index name matcher . test ( expression ) ;
 }
comment:
START returns true if the given expression matches the index name or one of it 's aliases END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the given view .
set to UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ suppress warnings ( String ) public b set ( int field id < ? extends b > id , int value ) {
 buffer . put int ( id . address ( ) , value ) ;
 return ( b ) this ;
 }
comment:
START sets the value of an identified integer field . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public abstract void set default fixed font size ( int size ) ;
comment:
START sets the default fixed font size . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static func1 < scheduler , scheduler > get on scheduler ( ) {
 return on scheduler ;
 }
comment:
START returns the current io scheduler hook function or null if it is set to the default pass-through . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
private frame needed result is frame needed for rendering ( int index ) {
 animated drawable frame info frame info = UNK drawable backend . get frame info ( index ) ;
 disposal method disposal method = frame info . disposal method ;
 if ( disposal method == disposal method . UNK UNK t ) {
 return frame needed result . d ;
 }
 else if ( disposal method == disposal method . UNK to_ d ) {
 if ( is full frame ( frame info ) ) {
 return frame needed result . not_ d ;
 }
 else {
 return frame needed result . d ;
 }
 }
 else if ( disposal method == disposal method . UNK to_ s ) {
 return frame needed result . p ;
 }
 else {
 return frame needed result . t ;
 }
 }
comment:
START returns whether the specified frame is needed for rendering the next frame . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ override public field visitor visit field ( final int access , final string name , final string desc , final string signature , final object value ) {
 if ( compute d ) {
 if ( String . equals ( name ) ) {
 compute d = false ;
 has d = true ;
 }
 if ( ( access & opcodes . acc_ e ) == DecimalInteger || ( access & ( opcodes . acc_ c | opcodes . acc_ t ) ) == DecimalInteger ) {
 int mods = access & ( opcodes . acc_ c | opcodes . acc_ e | opcodes . acc_ d | opcodes . acc_ c | opcodes . acc_ l | opcodes . acc_ e | opcodes . acc_ t ) ;
 UNK fields . add ( new item ( name , mods , desc ) ) ;
 }
 }
 return super . visit field ( access , name , desc , signature , value ) ;
 }
comment:
START gets class field information for step NUMBER of the algorithm . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
http client request request ( http method method , string host , string request i ) ;
comment:
START create an http request to send to the server at the specified host and default port . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
@ view debug . exported property ( category = String ) public final int get height ( ) {
 return bottom - top ;
 }
comment:
START return the height of your view . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
private static < k > k [ ] compact ( k [ ] a , int [ ] index ) {
 int size = a . length ;
 class < ? > component type = a . get class ( ) . get component type ( ) ;
 k [ ] result = ( k [ ] ) array . new instance ( component type , UNK ( index , - DecimalInteger ) + DecimalInteger ) ;
 for ( int i = DecimalInteger ;
 i < size ;
 i ++ ) {
 result [ index [ i ] ] = a [ i ] ;
 }
 return result ;
 }
comment:
START create a compact array of keys or values using the supplied index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
static < t > general range < t > all ( comparator < ? super t > comparator ) {
 return new general range < t > ( comparator , false , null , n , false , null , n ) ;
 }
comment:
START returns the whole range relative to the specified comparator . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public boolean set poly to poly ( float [ ] src , int src index , float [ ] dst , int dst index , int point count ) {
 if ( point count > DecimalInteger ) {
 throw new illegal argument exception ( ) ;
 }
 check point arrays ( src , src index , dst , dst index , point count ) ;
 return native_set poly to poly ( native_instance , src , src index , dst , dst index , point count ) ;
 }
comment:
START set the matrix such that the specified src points would map to the specified dst points . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set default activity ( int index ) {
 activity resolve info new default activity = activites . get ( index ) ;
 activity resolve info old default activity = activites . get ( DecimalInteger ) ;
 final float weight ;
 if ( old default activity != null ) {
 weight = old default activity . weight - new default activity . weight + default_ activity_ n ;
 }
 else {
 weight = default_ UNK UNK t ;
 }
 component name default name = new component name ( new default activity . resolve info . activity info . package name , new default activity . resolve info . activity info . name ) ;
 historical record historical record = new historical record ( default name , system . current time millis ( ) , weight ) ;
 add UNK record ( historical record ) ;
 }
comment:
START sets the default activity . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public static bt indexed mesh obtain ( final object tag , final float buffer vertices , int size in bytes of each vertex , int vertex count , int position offset in bytes , final short buffer indices , int index offset , int index count ) {
 if ( tag == null ) throw new gdx runtime exception ( String ) ;
 bt indexed mesh result = get instance ( tag ) ;
 if ( result == null ) {
 result = new bt indexed mesh ( vertices , size in bytes of each vertex , vertex count , position offset in bytes , indices , index offset , index count ) ;
 result . tag = tag ;
 instances . add ( result ) ;
 }
 result . obtain ( ) ;
 return result ;
 }
comment:
START create or reuse a UNK indexed mesh instance based on the specified tag . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public bounding box UNK ( ) {
 return this . set ( min . set ( DecimalInteger , DecimalInteger , DecimalInteger ) , max . set ( DecimalInteger , DecimalInteger , DecimalInteger ) ) ;
 }
comment:
START sets the minimum and maximum vector to UNK . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set stream volume ( int stream type , int index , int flags ) {
 iaudio service service = get service ( ) ;
 try {
 service . set stream volume ( stream type , index , flags , get context ( ) . get op package name ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START sets the volume index for a particular stream . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void set pres subscription state ( int UNK subscription state ) {
 this . UNK subscription state = UNK subscription state ;
 }
comment:
START sets the presence subscription state . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ override public boolean delete last from realm ( ) {
 realm . check if valid ( ) ;
 if ( size ( ) > DecimalInteger ) {
 table or view table = get table or view ( ) ;
 table . remove last ( ) ;
 return true ;
 }
 else {
 return false ;
 }
 }
comment:
START removes the last object in the list . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
public static type get value type ( type type ) {
 return type . get type parameters ( ) . get ( DecimalInteger ) ;
 }
comment:
START gets the value type of the given map type . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
private static void add select values to set ( build type . selector < ? > select , set < label > set ) {
 type < ? > type = select . get original type ( ) ;
 if ( type == build type . l || type == build type . nodep_ l ) {
 set . add all ( ( ( build type . selector < label > ) select ) . get entries ( ) . values ( ) ) ;
 }
 else if ( type == build type . label_ t || type == build type . nodep_ label_ t ) {
 for ( list < label > labels : ( ( build type . selector < list < label > > ) select ) . get entries ( ) . values ( ) ) {
 set . add all ( labels ) ;
 }
 }
 else if ( type == build type . label_ UNK y ) {
 for ( map < string , label > map entry : ( ( build type . selector < map < string , label > > ) select ) . get entries ( ) . values ( ) ) {
 set . add all ( map entry . values ( ) ) ;
 }
 }
 else {
 throw new illegal state exception ( String ) ;
 }
 }
comment:
START adds all label values from the given select to the given set . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ override public socket address get remote address ( ) {
 return channel . get remote address ( ) ;
 }
comment:
START returns the remote address where this rest request channel is `` connected to '' . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public abstract immutable map < aspect descriptor , build configuration > get aspect configurations ( ) ;
comment:
START returns the mapping from aspects to the static configurations they should be evaluated with . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public time interpolator get interpolator ( int transition type ) {
 switch ( transition type ) {
 case change_ g : return mchanging appearing interpolator ;
 case change_ g : return mchanging disappearing interpolator ;
 case g : return mchanging interpolator ;
 case g : return mappearing interpolator ;
 case g : return mdisappearing interpolator ;
 }
 return null ;
 }
comment:
START gets the interpolator on one of the animation objects used by this transition . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public int get mode ( ) {
 return mview behind . get mode ( ) ;
 }
comment:
START returns the current side that the sliding menu is on . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get suggestion info ( suggestion info [ ] suggestion infos , @ nullable suggestion span info misspelled span info ) {
 final spannable spannable = ( spannable ) mtext view . get text ( ) ;
 final suggestion span [ ] suggestion spans = get sorted suggestion spans ( ) ;
 final int nb spans = suggestion spans . length ;
 if ( nb spans == DecimalInteger ) return DecimalInteger ;
 int number of suggestions = DecimalInteger ;
 for ( final suggestion span suggestion span : suggestion spans ) {
 final int span start = spannable . get span start ( suggestion span ) ;
 final int span end = spannable . get span end ( suggestion span ) ;
 if ( misspelled span info != null && ( suggestion span . get flags ( ) & suggestion span . flag_ d ) != DecimalInteger ) {
 misspelled span info . msuggestion span = suggestion span ;
 misspelled span info . mspan start = span start ;
 misspelled span info . mspan end = span end ;
 }
 final string [ ] suggestions = suggestion span . get suggestions ( ) ;
 final int nb suggestions = suggestions . length ;
 suggestion loop : for ( int suggestion index = DecimalInteger ;
 suggestion index < nb suggestions ;
 suggestion index ++ ) {
 final string suggestion = suggestions [ suggestion index ] ;
 for ( int i = DecimalInteger ;
 i < number of suggestions ;
 i ++ ) {
 final suggestion info other suggestion info = suggestion infos [ i ] ;
 if ( other suggestion info . text . to string ( ) . equals ( suggestion ) ) {
 final int other span start = other suggestion info . msuggestion span info . mspan start ;
 final int other span end = other suggestion info . msuggestion span info . mspan end ;
 if ( span start == other span start && span end == other span end ) {
 continue suggestion loop ;
 }
 }
 }
 suggestion info suggestion info = suggestion infos [ number of suggestions ] ;
 suggestion info . set span info ( suggestion span , span start , span end ) ;
 suggestion info . msuggestion index = suggestion index ;
 suggestion info . msuggestion start = DecimalInteger ;
 suggestion info . msuggestion end = suggestion . length ( ) ;
 suggestion info . text . replace ( DecimalInteger , suggestion info . text . length ( ) , suggestion ) ;
 number of suggestions ++ ;
 if ( number of suggestions >= suggestion infos . length ) {
 return number of suggestions ;
 }
 }
 }
 return number of suggestions ;
 }
comment:
START gets the suggestion info list that contains suggestion information at the current cursor position . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static byte buf copy short ( int ... values ) {
 if ( values == null || values . length == DecimalInteger ) {
 return empty_ r ;
 }
 byte buf buffer = buffer ( values . length * DecimalInteger ) ;
 for ( int v : values ) {
 buffer . write short ( v ) ;
 }
 return buffer ;
 }
comment:
START create a new big-endian buffer that holds a sequence of the specified NUMBER integers . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ visible for testing public build configuration get configuration for testing ( event handler event handler , set < class < ? extends build configuration . fragment > > fragments , build options options ) throws interrupted exception {
 sky key key = build configuration value . key ( fragments , options ) ;
 build configuration value result = ( build configuration value ) build driver . evaluate ( immutable list . of ( key ) , false , default_ thread_ t , event handler ) . get ( key ) ;
 return result . get configuration ( ) ;
 }
comment:
START returns a dynamic configuration constructed from the given configuration fragments and build options . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public view tree observer get view tree observer ( ) {
 if ( mattach info != null ) {
 return mattach info . UNK observer ;
 }
 if ( UNK tree observer == null ) {
 UNK tree observer = new view tree observer ( ) ;
 }
 return UNK tree observer ;
 }
comment:
START returns the view tree observer for this view 's hierarchy . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK that be UNK to the UNK .
returns the list of UNK UNK

code:
public entries < k , v > entries ( ) {
 if ( entries1 == null ) {
 entries1 = new entries ( this ) ;
 entries2 = new entries ( this ) ;
 }
 if ( ! entries1 . valid ) {
 entries1 . reset ( ) ;
 entries1 . valid = true ;
 entries2 . valid = false ;
 return entries1 ;
 }
 entries2 . reset ( ) ;
 entries2 . valid = true ;
 entries1 . valid = false ;
 return entries2 ;
 }
comment:
START returns an iterator for the entries in the map . remove is supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int get desired minimum width ( ) {
 if ( globals . service == null ) {
 log . w ( g , String ) ;
 throw new runtime exception ( new dead system exception ( ) ) ;
 }
 try {
 return globals . service . get width hint ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns the desired minimum width for the wallpaper . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ system api public void clear accounts ( ) {
 try {
 if ( is service connected ( ) ) {
 get telecom service ( ) . clear accounts ( context . get package name ( ) ) ;
 }
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 }
comment:
START remove all accounts that belong to the calling package from the system . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given file .

code:
public string get workspace name ( ) {
 return rule . get package ( ) . get workspace name ( ) ;
 }
comment:
START returns the workspace name for the rule . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static final native int get process group ( int pid ) throws illegal argument exception , security exception ;
comment:
START return the scheduling group of requested process . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public boolean has wildcard ( ) {
 return d . equals ( type ) || d . equals ( subtype ) ;
 }
comment:
START returns true if either the type or subtype is the wildcard . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public final string get comment ( ) {
 return get string ( e + get ( m ) + get ( t ) , get ( m ) ) ;
 }
comment:
START return the comment of this entry . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set data source supplier ( @ nullable supplier < data source < e > > data source supplier ) {
 mdata source supplier = data source supplier ;
 }
comment:
START sets the data source supplier to be used . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void set content inset start with navigation ( int inset start with navigation ) {
 if ( inset start with navigation < DecimalInteger ) {
 inset start with navigation = rtl spacing helper . d ;
 }
 if ( inset start with navigation != mcontent inset start with navigation ) {
 mcontent inset start with navigation = inset start with navigation ;
 if ( get navigation icon ( ) != null ) {
 request layout ( ) ;
 }
 }
 }
comment:
START sets the start content inset to use when a navigation button is present . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ color int public int get color ( ) {
 return color ;
 }
comment:
START gets the UNK color . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set time ( long time ) {
 time = time ;
 }
comment:
START set the utc time of this fix , in milliseconds since january NUMBER , NUMBER . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
set the UNK for the given UNK .
returns the UNK of the UNK

code:
public builder add search domain ( string domain ) {
 if ( config . search domains == null ) {
 config . search domains = new array list < string > ( ) ;
 }
 config . search domains . add ( domain ) ;
 return this ;
 }
comment:
START add a search domain to the dns resolver . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public list < string > field names ( ) {
 return field names ;
 }
comment:
START gets the field names to load and return as part of the search request . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public cell < t > min size ( value width , value height ) {
 if ( width == null ) throw new illegal argument exception ( String ) ;
 if ( height == null ) throw new illegal argument exception ( String ) ;
 min width = width ;
 min height = height ;
 return this ;
 }
comment:
START sets the min width and min height to the specified values . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void init ( ) {
 try {
 r . info ( String , table ) ;
 string sql = string . format ( String + String + String + String + String + String + String + String + String + String + String + String + String + String + String , table , resource . field_ resource_ d , resource . field_ resource_ e , resource . field_ n , resource . field_ owner_ l , resource . field_ n , resource . field_ e , resource . field_ UNK n , resource . field_ UNK UNK e , resource . field_ UNK UNK e , resource . field_ notification_ e , resource . field_ UNK e , resource . field_ UNK e , resource . field_ UNK out_ of_ r , String ) ;
 r . debug ( String , sql ) ;
 jdbc template . execute ( sql ) ;
 }
 catch ( amazon client exception e ) {
 r . warn ( String , e ) ;
 }
 }
comment:
START creates the UNK table , if it does not already exist . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public component name get global search activity ( ) {
 try {
 return service . get global search activity ( ) ;
 }
 catch ( remote exception ex ) {
 throw ex . rethrow from system server ( ) ;
 }
 }
comment:
START gets the name of the global search activity . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override @ can ignore return value public boolean add ( e e ) {
 check not null ( e ) ;
 if ( max size == DecimalInteger ) {
 return true ;
 }
 if ( size ( ) == max size ) {
 delegate . remove ( ) ;
 }
 delegate . add ( e ) ;
 return true ;
 }
comment:
START adds the given element to this queue . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
returns the UNK for the given UNK .
add the UNK to the given UNK .
returns the UNK of the given UNK .
add the UNK to the UNK to the UNK .

code:
public object instantiate item ( view container , int position ) {
 throw new unsupported operation exception ( String ) ;
 }
comment:
START create the page for the given position . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set exclude UNK ( string [ ] exclude UNK ) {
 UNK UNK = exclude UNK ;
 }
comment:
START set a list of specific UNK to exclude and not display . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public builder put ( string setting prefix , string group name , string [ ] settings , string [ ] values ) throws settings exception {
 if ( settings . length != values . length ) {
 throw new settings exception ( String ) ;
 }
 for ( int i = DecimalInteger ;
 i < settings . length ;
 i ++ ) {
 if ( values [ i ] == null ) {
 continue ;
 }
 put ( setting prefix + String + group name + String + settings [ i ] , values [ i ] ) ;
 }
 return this ;
 }
comment:
START sets the setting group . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
private static float get closest value in array ( float [ ] values , float target ) {
 int min idx = DecimalInteger ;
 float min distance = math . abs ( values [ DecimalInteger ] - target ) ;
 for ( int i = DecimalInteger ;
 i < values . length ;
 i ++ ) {
 float distance = math . abs ( values [ i ] - target ) ;
 if ( min distance > distance ) {
 min distance = distance ;
 min idx = i ;
 }
 }
 return values [ min idx ] ;
 }
comment:
START return the closest value in an array of floats . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public rect get bounds ( ) throws ui object not found exception {
 tracer . trace ( ) ;
 accessibility node info node = find accessibility node info ( config . get wait for selector timeout ( ) ) ;
 if ( node == null ) {
 throw new ui object not found exception ( get selector ( ) . to string ( ) ) ;
 }
 rect node rect = new rect ( ) ;
 node . get bounds in screen ( node rect ) ;
 return node rect ;
 }
comment:
START returns the view 's bounds property . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static string get current timezone ( ) {
 return time zone . get default ( ) . get d ( ) ;
 }
comment:
START returns the timezone string that is currently set for the device . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public int get current sticky footer selected position ( ) {
 return mdrawer builder . mcurrent sticky footer selection ;
 }
comment:
START get the current position of the selected sticky footer element @return END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static byte buffer new byte buffer ( int capacity ) {
 return new read write heap byte buffer ( capacity ) ;
 }
comment:
START returns a new array based byte buffer with the specified capacity . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static view action long press on text at index ( int index ) {
 return action with assertions ( new view click action ( tap . g , new text coordinates ( index ) , press . r ) ) ;
 }
comment:
START returns an action that long presses on text at an index on the text view . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static thread policy get thread policy ( ) {
 return new thread policy ( get thread policy mask ( ) ) ;
 }
comment:
START returns the current thread 's policy . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public string get long option separator ( ) {
 return long opt separator ;
 }
comment:
START returns the separator displayed between a long option and its value . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public int get content size ( ) {
 return this . content . size ( ) ;
 }
comment:
START return the current size of the cached content . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static immutable list < string > remove bazel specific flags ( iterable < string > javacopts ) {
 return filter javacopts ( javacopts ) . standard javacopts ( ) ;
 }
comment:
START returns an immutable list containing all the non- bazel specific javac flags . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .

code:
public static int green ( int color ) {
 return ( color > > DecimalInteger ) & 0x f ;
 }
comment:
START return the green component of a color int . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void add header ( string key , string ... value ) {
 this . headers . put ( key , arrays . as list ( value ) ) ;
 }
comment:
START adds a new header with the given key . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
protected abstract void add filter ( string http method , filter impl filter ) ;
comment:
START adds a filter @param http method the http method @param filter the route implementation END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the given UNK .

code:
public void add or override attribute ( attribute attribute ) {
 string name = attribute . get name ( ) ;
 preconditions . check argument ( ! attributes . contains key ( name ) , String , name ) ;
 add attribute ( attribute ) ;
 }
comment:
START adds or overrides the attribute in the rule class . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
add the UNK to the given UNK .
add the UNK to the UNK to the UNK .

code:
public void set template loader path ( string template loader path ) {
 this . template loader paths = new string [ ] {
 template loader path }
 ;
 }
comment:
START set the UNK template loader path via a spring resource location . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ nullable public final activity get owner activity ( ) {
 return mowner activity ;
 }
comment:
START returns the activity that owns this dialog . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static string [ ] list services ( ) {
 try {
 return get UNK manager ( ) . list services ( ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 return null ;
 }
 }
comment:
START return a list of all currently running services . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ non null public builder set channel index mask ( int channel index mask ) {
 if ( channel index mask == DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 else if ( mchannel mask != DecimalInteger && integer . bit count ( channel index mask ) != integer . bit count ( mchannel mask ) ) {
 throw new illegal argument exception ( String + integer . to hex string ( channel index mask ) . to upper case ( ) ) ;
 }
 mchannel index mask = channel index mask ;
 mproperty set mask |= audio_ format_ has_ property_ channel_ index_ k ;
 return this ;
 }
comment:
START sets the channel index mask . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void add aspect ( object aspect instance ) {
 class < ? > aspect class = aspect instance . get class ( ) ;
 string aspect name = aspect class . get name ( ) ;
 aspect metadata am = create aspect metadata ( aspect class , aspect name ) ;
 if ( am . get aj type ( ) . get per clause ( ) . get kind ( ) != per clause kind . n ) {
 throw new illegal argument exception ( String + aspect class . get name ( ) + String ) ;
 }
 add advisors from aspect instance factory ( new singleton metadata aware aspect instance factory ( aspect instance , aspect name ) ) ;
 }
comment:
START add the supplied aspect instance to the chain . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
private void disable unsupported UNK ( ) {
 queue < crosstool selectable > check = new array deque < > ( enabled ) ;
 while ( ! check . is empty ( ) ) {
 check UNK ( check . poll ( ) ) ;
 }
 }
comment:
START remove all UNK features from the enabled feature set . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static platform type get platform type ( rule context rule context ) throws rule error exception {
 string attribute value = rule context . attributes ( ) . get ( multi arch platform rule . platform_ type_ attr_ e , g ) ;
 try {
 return get platform type ( attribute value ) ;
 }
 catch ( illegal argument exception exception ) {
 throw rule context . throw with attribute error ( multi arch platform rule . platform_ type_ attr_ e , string . format ( UNK platform_ type_ error_ t , attribute value ) ) ;
 }
 }
comment:
START returns the apple platform type in the current rule context . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void read from parcel ( parcel in ) {
 x = in . read int ( ) ;
 y = in . read int ( ) ;
 }
comment:
START set the point 's coordinates from the data stored in the specified parcel . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public random access data get central directory ( random access data data ) {
 long offset = bytes . little endian value ( this . block , this . offset + DecimalInteger , DecimalInteger ) ;
 long length = bytes . little endian value ( this . block , this . offset + DecimalInteger , DecimalInteger ) ;
 return data . get UNK ( offset , length ) ;
 }
comment:
START return the bytes of the `` central directory '' based on the offset indicated in this record . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public multi value map < string , string > get query params ( ) {
 return this . query params ;
 }
comment:
START returns the map of query parameters . END
BLUE1:0.428571428571
--generate--
return the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
return the list of UNK UNK
return the list of UNK UNK that be UNK .

code:
private static array header search paths ( iterable < string > paths ) {
 immutable list . builder < string > result = new immutable list . builder < > ( ) ;
 for ( string path : paths ) {
 if ( ! path . starts with ( String ) ) {
 path = String + path ;
 }
 result . add ( path ) ;
 }
 return ( array ) object . wrap ( result . build ( ) ) ;
 }
comment:
START returns the final header search paths to be placed in a build configuration . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK to the UNK .

code:
public int get density ( ) {
 if ( recycled ) {
 log . w ( g , String ) ;
 }
 return density ;
 }
comment:
START returns the density for this bitmap . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public void set connect timeout ( int connect timeout ) {
 this . client = this . client . new builder ( ) . connect timeout ( connect timeout , time unit . s ) . build ( ) ;
 }
comment:
START sets the underlying connect timeout in milliseconds . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public long sum ( ) {
 long sum = base ;
 cell [ ] as = cells ;
 if ( as != null ) {
 int n = as . length ;
 for ( int i = DecimalInteger ;
 i < n ;
 ++ i ) {
 cell a = as [ i ] ;
 if ( a != null ) sum += a . value ;
 }
 }
 return sum ;
 }
comment:
START returns the current sum . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public int get write index ( ) {
 return info queue . get write index ( ) ;
 }
comment:
START returns the current absolute write index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
< t > list < t > load all ( class < t > entity class ) throws data access exception ;
comment:
START return all persistent instances of the given entity class . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set single line width indention ( int single line width indention ) {
 if ( single line width indention != msingle line width indention ) {
 msingle line width indention = single line width indention ;
 UNK notification . force layout ( ) ;
 force layout ( ) ;
 }
 }
comment:
START set by how much the single line view should be UNK . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set server socket factory ( rmiserver socket factory server socket factory ) {
 this . server socket factory = server socket factory ;
 }
comment:
START set a custom rmi server socket factory to use for UNK the service . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public cell < t > width ( value width ) {
 if ( width == null ) throw new illegal argument exception ( String ) ;
 min width = width ;
 pref width = width ;
 max width = width ;
 return this ;
 }
comment:
START sets the min width , pref width , and max width to the specified value . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
sets the UNK of the given UNK .

code:
public object get target object ( ) {
 return this . target object ;
 }
comment:
START return the target object on which the field is defined . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public dotted version get default ios sdk version ( ) {
 return default ios sdk version ;
 }
comment:
START returns the default ios sdk version to use if this xcode version is in use . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
float next tab ( float h ) {
 if ( tabs != null ) {
 return tabs . next tab ( h ) ;
 }
 return tab stops . next default stop ( h , tab_ t ) ;
 }
comment:
START returns the next tab position . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private string get process name ( string package name ) {
 try {
 package info pi = mpackage manager . get package info ( package name , DecimalInteger ) ;
 return pi . application info . process name ;
 }
 catch ( name not found exception e ) {
 return package name ;
 }
 }
comment:
START returns the process name that the package is going to use . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set pointer speed ( context context , int speed ) {
 if ( speed < min_ pointer_ d || speed > max_ pointer_ d ) {
 throw new illegal argument exception ( String ) ;
 }
 settings . system . put int ( context . get content resolver ( ) , settings . system . pointer_ d , speed ) ;
 }
comment:
START sets the mouse pointer speed . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
public synchronized client non master client ( ) {
 ensure open ( ) ;
 node and client random node and client = get random node and client ( new master node predicate ( get master name ( ) ) . UNK ( ) ) ;
 if ( random node and client != null ) {
 return random node and client . node client ( ) ;
 }
 assert . fail ( String ) ;
 return null ;
 }
comment:
START returns a node client to random node but not the master . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set publish UNK type ( int UNK trigger type ) {
 this . UNK trigger type = UNK trigger type ;
 }
comment:
START sets the publish trigger type . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
private static vector3 center point ( vector3 point0 , vector3 point1 , vector3 point2 ) {
 tmp v0 . set ( point1 ) . sub ( point0 ) . scl ( DecimalFloatingPoint ) ;
 tmp v1 . set ( point0 ) . add ( tmp v0 ) ;
 tmp v0 . set ( point2 ) . sub ( point1 ) . scl ( DecimalFloatingPoint ) ;
 return tmp v1 . add ( tmp v0 ) ;
 }
comment:
START return center point 's rectangle @param UNK @param UNK @param UNK @return the center point END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void remove view state for view ( view view ) {
 mcurrent stack scroll state . remove view state for view ( view ) ;
 }
comment:
START remove the a given view from the UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
protected boolean is allowed ( string field ) {
 string [ ] allowed = get allowed fields ( ) ;
 string [ ] disallowed = get disallowed fields ( ) ;
 return ( ( object utils . is empty ( allowed ) || pattern match utils . simple match ( allowed , field ) ) && ( object utils . is empty ( disallowed ) || ! pattern match utils . simple match ( disallowed , field ) ) ) ;
 }
comment:
START return if the given field is allowed for binding . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether the given UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether the given UNK is UNK , in the UNK .

code:
public long get max file size ( ) {
 return mmax file size ;
 }
comment:
START returns maximum file size for the storage , or zero if it is unbounded . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public boolean is long clickable ( ) {
 return get boolean property ( boolean_ property_ long_ e ) ;
 }
comment:
START gets whether this node is long clickable . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK to .

code:
public int get last visible position ( ) {
 return mfirst position + get child count ( ) - DecimalInteger ;
 }
comment:
START returns the position within the adapter 's data set for the last item displayed on screen . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static cell defaults ( ) {
 if ( files == null || files != gdx . files ) {
 files = gdx . files ;
 defaults = new cell ( ) ;
 defaults . min width = value . min width ;
 defaults . min height = value . min height ;
 defaults . pref width = value . pref width ;
 defaults . pref height = value . pref height ;
 defaults . max width = value . max width ;
 defaults . max height = value . max height ;
 defaults . space top = value . zero ;
 defaults . space left = value . zero ;
 defaults . space bottom = value . zero ;
 defaults . space right = value . zero ;
 defaults . pad top = value . zero ;
 defaults . pad left = value . zero ;
 defaults . pad bottom = value . zero ;
 defaults . pad right = value . zero ;
 defaults . fill x = zerof ;
 defaults . fill y = zerof ;
 defaults . align = UNK ;
 defaults . expand x = UNK ;
 defaults . expand y = UNK ;
 defaults . UNK = onei ;
 defaults . uniform x = null ;
 defaults . uniform y = null ;
 }
 return defaults ;
 }
comment:
START returns the defaults to use for all cells . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean is shift pressed ( motion event e ) {
 return has shift bit ( e . get meta state ( ) ) ;
 }
comment:
START returns true if the shift is pressed . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether the UNK is UNK in the UNK .
sets whether the UNK is UNK in .

code:
private static void get start location ( view v , int gravity , int [ ] xy ) {
 v . get location on screen ( xy ) ;
 final int view width = v . get width ( ) ;
 final int view height = v . get height ( ) ;
 switch ( gravity & gravity . vertical_ gravity_ k ) {
 case gravity . p : break ;
 case gravity . center_ l : xy [ DecimalInteger ] += view height / DecimalInteger ;
 break ;
 case gravity . m : xy [ DecimalInteger ] += view height - DecimalInteger ;
 break ;
 default : }
 switch ( gravity & gravity . horizontal_ gravity_ k ) {
 case gravity . t : break ;
 case gravity . center_ l : xy [ DecimalInteger ] += view width / DecimalInteger ;
 break ;
 case gravity . t : xy [ DecimalInteger ] += view width - DecimalInteger ;
 break ;
 default : }
 }
comment:
START get the location of a view . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean get animate first view ( ) {
 return UNK first time ;
 }
comment:
START returns whether the current view should be animated the first time the view animator is displayed . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public abstract linked binding builder < v > add binding ( k key ) ;
comment:
START returns a binding builder used to add a new entry in the map . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public final int get banner resource ( ) {
 return banner != DecimalInteger ? banner : application info . banner ;
 }
comment:
START return the UNK resource identifier to use for this component . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final int get current listener hints ( ) {
 if ( ! is bound ( ) ) return DecimalInteger ;
 try {
 return get notification interface ( ) . get hints from listener ( wrapper ) ;
 }
 catch ( android . os . remote exception ex ) {
 log . v ( g , String , ex ) ;
 return DecimalInteger ;
 }
 }
comment:
START gets the set of hints representing current state . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public void set background image ( @ nullable drawable drawable ) {
 set child drawable at index ( background_ image_ x , drawable ) ;
 }
comment:
START sets the background image if allowed . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set title ( @ string res int title res id ) {
 set title ( context . get string ( title res id ) ) ;
 mtitle res = title res id ;
 }
comment:
START sets the title for this preference with a resource id . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ non null public class < ? extends detector > replace detector ( @ non null class < ? extends detector > detector class ) {
 return detector class ;
 }
comment:
START returns an UNK detector , if applicable . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public validator factory get validator factory ( ) {
 return validator factory ;
 }
comment:
START returns the application 's validator factory . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public file handle child ( string name ) {
 return new gwt file handle ( preloader , ( file . is empty ( ) ? String : ( file + ( file . ends with ( String ) ? String : String ) ) ) + name , file type . internal ) ;
 }
comment:
START returns a handle to the child with the specified name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
protected prepared statement setter new arg prepared statement setter ( object [ ] args ) {
 return new argument prepared statement setter ( args ) ;
 }
comment:
START create a new UNK prepared statement setter using the args passed in . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set null value ( object null value ) {
 check if frozen ( ) ;
 this . null value = null value ;
 this . null value as string = null value == null ? null : null value . to string ( ) ;
 }
comment:
START sets the null value and initializes the string version END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public long get storage bytes until low ( file path ) {
 return path . get UNK space ( ) - get storage full bytes ( path ) ;
 }
comment:
START return the number of available bytes until the given path is considered running low on storage . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public string get alias ( ) {
 if ( service == null ) {
 log . e ( g , String ) ;
 return null ;
 }
 try {
 return service . get remote alias ( this ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return null ;
 }
comment:
START get the bluetooth alias of the remote device . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public void set main class ( string main class ) {
 this . main class = main class ;
 }
comment:
START sets the main class that should be run . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
void insert entry ( int entry index , e object , int hash ) {
 this . entries [ entry index ] = ( ( long ) hash << DecimalInteger ) | ( next_ k & t ) ;
 this . elements [ entry index ] = object ;
 }
comment:
START creates a fresh entry with the specified object at the specified position in the entry arrays . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ override public int get current retry count ( ) {
 return mcurrent retry count ;
 }
comment:
START returns the current retry count . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK .
returns the number of all UNK .

code:
public int get width ( ) {
 return native_get width ( mnative canvas wrapper ) ;
 }
comment:
START returns the width of the current drawing layer @return the width of the current drawing layer END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
void add formatter for field annotation ( annotation formatter factory < ? extends annotation > annotation formatter factory ) ;
comment:
START adds a formatter to format fields annotated with a specific format annotation . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .
adds the UNK to the UNK to the given UNK .

code:
public float get shard balance ( ) {
 return weight function . shard balance ;
 }
comment:
START returns the shard related weight factor . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get attribute resource value ( string namespace , string attribute , int default value ) ;
comment:
START return the value of ` attribute ' as a resource identifier . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public to string helper add value ( char value ) {
 return add holder ( string . value of ( value ) ) ;
 }
comment:
START adds an unnamed value to the formatted output . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
adds a new UNK to the UNK .
adds a new UNK to the given UNK .
add a new UNK to the given UNK .
adds a new UNK to the given .

code:
public void set telecom call id ( string call id ) {
 UNK call id = call id ;
 }
comment:
START sets the telecom call id associated with this connection . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set button panel layout hint ( int layout hint ) {
 mbutton panel layout hint = layout hint ;
 }
comment:
START sets a hint for the best button panel layout . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set resource base ( string resource base ) {
 handler . set resource base ( resource base ) ;
 }
comment:
START sets the base resource for this context . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public static < e > immutable sorted multiset < e > copy of ( iterable < ? extends e > elements ) {
 @ suppress warnings ( String ) ordering < e > natural order = ( ordering < e > ) ordering . < comparable > natural ( ) ;
 return copy of ( natural order , elements ) ;
 }
comment:
START returns an immutable sorted multiset containing the given elements sorted by their natural ordering . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public builder add arguments ( iterable < string > arguments ) {
 preconditions . check state ( command line == null ) ;
 arguments builder . add ( collection utils . make immutable ( arguments ) ) ;
 return this ;
 }
comment:
START add multiple arguments in the order they are returned by the collection . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public void set pressed ( boolean pressed ) {
 final boolean needs refresh = pressed != ( ( mprivate flags & pflag_ d ) == pflag_ d ) ;
 if ( pressed ) {
 mprivate flags |= pflag_ d ;
 }
 else {
 mprivate flags &= ~ pflag_ d ;
 }
 if ( needs refresh ) {
 refresh drawable state ( ) ;
 }
 dispatch set pressed ( pressed ) ;
 }
comment:
START sets the pressed state for this view . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set object ( string field name , dynamic realm object value ) {
 long column index = proxy state . get row$realm ( ) . get column index ( field name ) ;
 if ( value == null ) {
 proxy state . get row$realm ( ) . UNK link ( column index ) ;
 }
 else {
 if ( value . proxy state . get realm$realm ( ) == null || value . proxy state . get row$realm ( ) == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( proxy state . get realm$realm ( ) != value . proxy state . get realm$realm ( ) ) {
 throw new illegal argument exception ( String ) ;
 }
 table table = proxy state . get row$realm ( ) . get table ( ) . get link target ( column index ) ;
 table input table = value . proxy state . get row$realm ( ) . get table ( ) ;
 if ( ! table . has same schema ( input table ) ) {
 throw new illegal argument exception ( string . format ( String , input table . get name ( ) , table . get name ( ) ) ) ;
 }
 proxy state . get row$realm ( ) . set link ( column index , value . proxy state . get row$realm ( ) . get index ( ) ) ;
 }
 }
comment:
START sets a reference to another object on the given field . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public void set notification policy ( @ non null policy policy ) {
 check required ( String , policy ) ;
 inotification manager service = get service ( ) ;
 try {
 service . set notification policy ( context . get op package name ( ) , policy ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START sets the current notification policy . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public abstract bundle add account ( account authenticator response response , string account type , string auth token type , string [ ] required features , bundle options ) throws network error exception ;
comment:
START adds an account of the specified account type . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public float get visible range ( ) {
 return math . abs ( get highest visible x ( ) - get lowest visible x ( ) ) ;
 }
comment:
START returns the range visible on the x-axis . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set target gain ( int UNK b ) throws illegal state exception , illegal argument exception , unsupported operation exception {
 check status ( set parameter ( param_ target_ gain_ b , UNK b ) ) ;
 }
comment:
START set the target gain for the audio effect . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public version get index version created ( ) {
 return version ;
 }
comment:
START returns the version the index was created on . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public static string get stripped UNK ( string phone number ) {
 string np = extract network portion alt ( phone number ) ;
 if ( np == null ) return null ;
 return internal get stripped UNK ( np , np . length ( ) ) ;
 }
comment:
START returns the network portion reversed . returns null if phone number == null END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
message consumer < t > set max buffered messages ( int max buffered messages ) ;
comment:
START set the number of messages this registration will buffer when this stream is paused . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set full bias in ns ( long value ) {
 set flag ( has_ full_ s ) ;
 mfull bias in ns = value ;
 }
comment:
START sets the full bias in nanoseconds . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public final class < ? > get root class ( ) {
 return ( this . root object != null ? this . root object . get class ( ) : null ) ;
 }
comment:
START return the class of the root object at the top of the path of this accessor . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ override public int get connection state ( bluetooth device device ) {
 if ( service != null && is enabled ( ) && is valid device ( device ) ) {
 try {
 return service . get health device connection state ( device ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , e . to string ( ) ) ;
 }
 }
 else {
 log . w ( g , String ) ;
 if ( g ) log . d ( g , log . get stack trace string ( new throwable ( ) ) ) ;
 }
 return state_ d ;
 }
comment:
START get the current connection state of the profile . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static digits key listener get instance ( ) {
 return get instance ( false , false ) ;
 }
comment:
START returns a digits key listener that accepts the digits NUMBER through NUMBER . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
private void remove long press callback ( ) {
 if ( mpending check for long press != null ) {
 remove callbacks ( mpending check for long press ) ;
 }
 }
comment:
START remove the UNK detection timer . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public zip file entry get entry ( @ nullable string name ) {
 return entries . get ( name ) ;
 }
comment:
START returns the entry with the given name , or null if it does not exist . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final boolean is caps lock on ( ) {
 return ( mmeta state & meta_ UNK lock_ n ) != DecimalInteger ;
 }
comment:
START returns the locked state of the UNK lock meta key . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public final bundle read bundle ( ) {
 return read bundle ( null ) ;
 }
comment:
START returns null if the previously written bundle object was null . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public void set hierarchy ( @ nullable drawee hierarchy hierarchy ) {
 if ( log . is loggable ( log . e ) ) {
 log . v ( g , String , system . identity hash code ( this ) , id , hierarchy ) ;
 }
 mevent tracker . record event ( ( hierarchy != null ) ? event . on_ set_ y : event . on_ clear_ y ) ;
 if ( mis request submitted ) {
 mdeferred UNK . cancel deferred release ( this ) ;
 release ( ) ;
 }
 if ( msettable drawee hierarchy != null ) {
 msettable drawee hierarchy . set controller overlay ( null ) ;
 msettable drawee hierarchy = null ;
 }
 if ( hierarchy != null ) {
 preconditions . check argument ( hierarchy instanceof settable drawee hierarchy ) ;
 msettable drawee hierarchy = ( settable drawee hierarchy ) hierarchy ;
 msettable drawee hierarchy . set controller overlay ( mcontroller overlay ) ;
 }
 }
comment:
START sets the hierarchy . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public void set rotate ( int axis , float degrees ) {
 reset ( ) ;
 double radians = degrees * math . i / DecimalFloatingPoint ;
 float UNK = ( float ) math . cos ( radians ) ;
 float sine = ( float ) math . sin ( radians ) ;
 switch ( axis ) {
 case DecimalInteger : array [ DecimalInteger ] = array [ DecimalInteger ] = UNK ;
 array [ DecimalInteger ] = sine ;
 array [ DecimalInteger ] = - sine ;
 break ;
 case DecimalInteger : array [ DecimalInteger ] = array [ DecimalInteger ] = UNK ;
 array [ DecimalInteger ] = - sine ;
 array [ DecimalInteger ] = sine ;
 break ;
 case DecimalInteger : array [ DecimalInteger ] = array [ DecimalInteger ] = UNK ;
 array [ DecimalInteger ] = sine ;
 array [ DecimalInteger ] = - sine ;
 break ;
 default : throw new runtime exception ( ) ;
 }
 }
comment:
START set the rotation on a color axis by the specified values . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
private static string remove dot segments ( string builder uri , int offset , int limit ) {
 if ( offset >= limit ) {
 return uri . to string ( ) ;
 }
 if ( uri . char at ( offset ) == String ) {
 offset ++ ;
 }
 int segment start = offset ;
 int i = offset ;
 while ( i <= limit ) {
 int next segment start ;
 if ( i == limit ) {
 next segment start = i ;
 }
 else if ( uri . char at ( i ) == String ) {
 next segment start = i + DecimalInteger ;
 }
 else {
 i ++ ;
 continue ;
 }
 if ( i == segment start + DecimalInteger && uri . char at ( segment start ) == String ) {
 uri . delete ( segment start , next segment start ) ;
 limit -= next segment start - segment start ;
 i = segment start ;
 }
 else if ( i == segment start + DecimalInteger && uri . char at ( segment start ) == String && uri . char at ( segment start + DecimalInteger ) == String ) {
 int prev segment start = uri . last index of ( String , segment start - DecimalInteger ) + DecimalInteger ;
 int remove from = prev segment start > offset ? prev segment start : offset ;
 uri . delete ( remove from , next segment start ) ;
 limit -= next segment start - remove from ;
 segment start = prev segment start ;
 i = prev segment start ;
 }
 else {
 i ++ ;
 segment start = i ;
 }
 }
 return uri . to string ( ) ;
 }
comment:
START removes dot segments from the path of a uri . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void remove range ( int start , int end ) {
 if ( end >= size ) throw new index out of bounds exception ( String + end + String + size ) ;
 if ( start > end ) throw new index out of bounds exception ( String + start + String + end ) ;
 boolean [ ] items = this . items ;
 int count = end - start + DecimalInteger ;
 if ( ordered ) system . arraycopy ( items , start + count , items , start , size - ( start + count ) ) ;
 else {
 int last index = this . size - DecimalInteger ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) items [ start + i ] = items [ last index - i ] ;
 }
 size -= count ;
 }
comment:
START removes the items between the specified indices , inclusive . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public void part ( final mesh part UNK , final material material ) {
 if ( node == null ) node ( ) ;
 node . parts . add ( new node part ( UNK , material ) ) ;
 }
comment:
START adds the specified mesh part to the current node . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public static variable element find field in type ( type element type , string name ) {
 for ( variable element field : element filter . fields in ( type . get enclosed elements ( ) ) ) {
 if ( field . get simple name ( ) . to string ( ) . equals ( name ) ) {
 return field ;
 }
 }
 return null ;
 }
comment:
START returns the field of the class END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final short get fork join task tag ( ) {
 return ( short ) status ;
 }
comment:
START returns the tag for this task . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public build configuration collection get build configuration collection ( ) {
 return configurations ;
 }
comment:
START returns the build configuration collection used for the build . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set enter transition ( @ nullable transition enter transition ) {
 menter transition = enter transition ;
 }
comment:
START sets the enter transition to be used when the popup window is shown . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public int get child location ( view child ) {
 stack view state child view state = mcurrent stack scroll state . get view state for view ( child ) ;
 if ( child view state == null ) {
 return stack view state . location_ n ;
 }
 if ( child view state . UNK ) {
 return stack view state . location_ e ;
 }
 return child view state . location ;
 }
comment:
START returns the location the given child is currently rendered at . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean remove all ( byte array array ) {
 int size = this . size ;
 int start size = size ;
 byte [ ] items = this . items ;
 for ( int i = DecimalInteger , n = array . size ;
 i < n ;
 i ++ ) {
 int item = array . get ( i ) ;
 for ( int ii = DecimalInteger ;
 ii < size ;
 ii ++ ) {
 if ( item == items [ ii ] ) {
 remove index ( ii ) ;
 size -- ;
 break ;
 }
 }
 }
 return size != start size ;
 }
comment:
START removes from this array all of elements contained in the specified array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
private multimap < attribute , configured target > get configured deps ( string target label ) throws exception {
 update ( target label ) ;
 sky key key = compute dependencies function . key ( get target ( target label ) , get target configuration ( ) ) ;
 skyframe executor . get skyframe build view ( ) . enable analysis ( true ) ;
 object eval result = skyframe executor test utils . evaluate ( skyframe executor , key , false , reporter ) ;
 skyframe executor . get skyframe build view ( ) . enable analysis ( false ) ;
 sky value value = ( ( evaluation result < compute dependencies function . value > ) eval result ) . get ( key ) ;
 return ( ( compute dependencies function . value ) value ) . dep map ;
 }
comment:
START returns the configured deps for a given target , assuming the target uses the target configuration . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void set prefix ( string prefix ) {
 this . prefix = ( prefix != null ? prefix : String ) ;
 }
comment:
START set the text that will get appended to the trace data . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
private static int get ifd hint from tag number ( int tag number ) {
 for ( int i = DecimalInteger ;
 i < ifd_ pointer_ tag_ s . length ;
 ++ i ) {
 if ( ifd_ pointer_ s [ i ] . number == tag number ) {
 return ifd_ pointer_ tag_ s [ i ] ;
 }
 }
 return - DecimalInteger ;
 }
comment:
START gets the corresponding ifd group index of the given tag number for writing exif tags . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK for the .

code:
public void remove target ( @ non null surface output target ) {
 request . msurface set . remove ( output target ) ;
 }
comment:
START remove a surface from the list of targets for this request . END
BLUE1:0.428571428571
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given UNK .
used to the UNK of the given .

code:
public int get task id ( ) {
 try {
 return activity manager native . get default ( ) . get task for activity ( token , false ) ;
 }
 catch ( remote exception e ) {
 return - DecimalInteger ;
 }
 }
comment:
START return the identifier of the task this activity is in . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set window size limits ( int min width , int min height , int max width , int max height ) {
 window min width = min width ;
 window min height = min height ;
 window max width = max width ;
 window max height = max height ;
 }
comment:
START sets minimum and maximum size limits for the window . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ system api public builder exclude mix rule ( int rule , object property ) throws illegal argument exception {
 if ( ! is valid system api rule ( rule ) ) {
 throw new illegal argument exception ( String + rule ) ;
 }
 return check add rule obj internal ( rule | rule_ UNK k , property ) ;
 }
comment:
START add a rule by exclusion for the selection of which streams are mixed together . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
public final boolean is private ( ) {
 return modifier . is private ( get modifiers ( ) ) ;
 }
comment:
START returns true if the element is private . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
@ override public string get content type ( ) {
 return this . content type ;
 }
comment:
START return the content type for this view . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public void set color ( int color ) {
 r = ( color > > > DecimalInteger ) & 0xff ;
 g = ( color > > > DecimalInteger ) & 0xff ;
 b = ( color > > > DecimalInteger ) & 0xff ;
 a = ( color & 0xff ) / DecimalFloatingPoint ;
 this . color = make ( r , g , b , a ) ;
 context . set fill style ( this . color ) ;
 context . set stroke style ( this . color ) ;
 }
comment:
START sets the color for the following drawing operations @param color the color , encoded as rgba8888 END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
void remove ( string device address ) {
 remove ( get network id ( device address ) ) ;
 }
comment:
START remove the group with the specified device address from this group list . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public component name get component name ( ) {
 return component ;
 }
comment:
START returns complete component name of this instrumentation . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public static string read string property ( string processor type , string processor tag , map < string , object > configuration , string property name ) {
 return read string property ( processor type , processor tag , configuration , property name , null ) ;
 }
comment:
START returns and removes the specified property from the specified configuration map . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public float pop ( ) {
 return items [ -- size ] ;
 }
comment:
START removes and returns the last item . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
@ override public int get connection state ( bluetooth device device ) {
 if ( g ) log ( String + device + String ) ;
 if ( service != null && is enabled ( ) && is valid device ( device ) ) {
 try {
 return service . get connection state ( device ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , log . get stack trace string ( new throwable ( ) ) ) ;
 return bluetooth profile . state_ d ;
 }
 }
 if ( service == null ) log . w ( g , String ) ;
 return bluetooth profile . state_ d ;
 }
comment:
START returns state of the device @param device a remote device @return the state of connection of the device END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public variable source get variable ( string name ) {
 filter result = mfilter map . get ( name ) ;
 if ( result != null && result instanceof variable source ) {
 return ( variable source ) result ;
 }
 else {
 throw new illegal argument exception ( String + name + String ) ;
 }
 }
comment:
START returns the variable source for the specified variable . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get next frame number ( ) {
 synchronized ( lock ) {
 return native get next frame number ( mnative object ) ;
 }
 }
comment:
START returns the next frame number which will be dequeued for rendering . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set rounding params ( @ nullable rounding params rounding params ) {
 mrounding params = rounding params ;
 UNK utils . update overlay color rounding ( mtop level drawable , mrounding params ) ;
 for ( int i = DecimalInteger ;
 i < mfade drawable . get number of layers ( ) ;
 i ++ ) {
 UNK utils . update leaf rounding ( get parent drawable at index ( i ) , mrounding params , resources ) ;
 }
 }
comment:
START sets the rounding params . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
protected executor service get default thread pool ( ) {
 return executors . new cached thread pool ( ) ;
 }
comment:
START get the default UNK pool to be used for this http client . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the .

code:
public query params map get ( string ... keys ) {
 query params map ret = this ;
 for ( string key : keys ) {
 if ( ret . query map . contains key ( key ) ) {
 ret = ret . query map . get ( key ) ;
 }
 else {
 ret = l ;
 }
 }
 return ret ;
 }
comment:
START returns an element from the specified key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public void set year ( final int year ) {
 adapter . set selection ( year ) ;
 post ( new runnable ( ) {
 @ override public void run ( ) {
 final int position = adapter . get position for year ( year ) ;
 if ( position >= DecimalInteger && position < get count ( ) ) {
 set selection UNK ( position ) ;
 }
 }
 }
 ) ;
 }
comment:
START sets the currently selected year . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public static bitmap create bitmap ( display metrics display , int width , int height , config config ) {
 return create bitmap ( display , width , height , config , true ) ;
 }
comment:
START returns a mutable bitmap with the specified width and height . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set url mappings ( collection < string > url mappings ) {
 assert . not null ( url mappings , String ) ;
 this . url mappings = new linked hash set < string > ( url mappings ) ;
 }
comment:
START set the url mappings for the servlet . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public string get sql ( ) {
 return this . sql ;
 }
comment:
START return the sql that caused the problem . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public long get total cpu idle time in jiffies ( ) {
 return total cpu idle time in jiffies ;
 }
comment:
START returns the current total cpu idle since system boot in jiffies . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public joint get joint list ( ) {
 return m_joint list ;
 }
comment:
START get the world joint list . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected void add output port ( string name , frame format format ) {
 output port port = new output port ( this , name ) ;
 if ( mlog verbose ) log . v ( g , String + this + String + port ) ;
 port . set port format ( format ) ;
 moutput ports . put ( name , port ) ;
 }
comment:
START adds an output port to the filter with a fixed output format . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public int get max receive packet size ( ) {
 return mmax rx packet size ;
 }
comment:
START get the maximum supported receive packet size for the underlying transport . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
private string get badged label ( string label , int user id ) {
 if ( user id != user handle . my user id ( ) ) {
 label = pm . get user badged label ( label , new user handle ( user id ) ) . to string ( ) ;
 }
 return label ;
 }
comment:
START returns the given label for a user , badging if necessary . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static string get method descriptor ( final method m ) {
 class < ? > [ ] parameters = m . get parameter types ( ) ;
 string buffer buf = new string buffer ( ) ;
 buf . append ( String ) ;
 for ( int i = DecimalInteger ;
 i < parameters . length ;
 ++ i ) {
 get descriptor ( buf , parameters [ i ] ) ;
 }
 buf . append ( String ) ;
 get descriptor ( buf , m . get return type ( ) ) ;
 return buf . to string ( ) ;
 }
comment:
START returns the descriptor corresponding to the given method . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public object get bean ( ) {
 return this . bean ;
 }
comment:
START returns the bean for this handler method . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public void put ( int key , int value ) {
 if ( key < DecimalInteger ) context . code bug ( ) ;
 int index = ensure index ( key , true ) ;
 if ( ivalues shift == DecimalInteger ) {
 int n = DecimalInteger << power ;
 if ( keys . length != n * DecimalInteger ) {
 int [ ] tmp = new int [ n * DecimalInteger ] ;
 system . arraycopy ( keys , DecimalInteger , tmp , DecimalInteger , n ) ;
 keys = tmp ;
 }
 ivalues shift = n ;
 }
 keys [ ivalues shift + index ] = value ;
 }
comment:
START set int value of the key . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public boolean get video UNK ( ) {
 string str = get ( key_ video_ n ) ;
 return e . equals ( str ) ;
 }
comment:
START get the current state of video stabilization . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public user transaction get user transaction ( ) {
 return this . user transaction ;
 }
comment:
START return the jta user transaction that this transaction manager uses . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the number of UNK .
return the list of UNK .
return the number of all UNK .

code:
@ deprecated @ view debug . exported property ( category = String ) public float get scale ( ) {
 check thread ( ) ;
 return provider . get scale ( ) ;
 }
comment:
START gets the current scale of this web view . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public map < string , long > get time UNK ( ) {
 return collections . unmodifiable map ( timings ) ;
 }
comment:
START returns the timing UNK for this particular query node END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public synchronized legacy vpn info get legacy vpn info privileged ( ) {
 if ( UNK vpn runner == null ) return null ;
 final legacy vpn info info = new legacy vpn info ( ) ;
 info . key = config . user ;
 info . state = legacy vpn info . state from network info ( mnetwork info ) ;
 if ( mnetwork info . is connected ( ) ) {
 info . intent = mstatus intent ;
 }
 return info ;
 }
comment:
START return the information of the current ongoing legacy vpn . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public string get http method ( ) {
 return this . method ;
 }
comment:
START return the http method for the failed request . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public long [ ] get value as longs ( ) {
 if ( value instanceof long [ ] ) {
 return ( long [ ] ) value ;
 }
 return null ;
 }
comment:
START gets the value as an array of longs . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public params set footer view count ( int footer view count ) {
 mfooter view count = footer view count ;
 return this ;
 }
comment:
START set the number of footer views to appear within the list END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public float measure text ( char [ ] text , int index , int count ) {
 if ( text == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( ( index | count ) < DecimalInteger || index + count > text . length ) {
 throw new array index out of bounds exception ( ) ;
 }
 if ( text . length == DecimalInteger || count == DecimalInteger ) {
 return DecimalFloatingPoint ;
 }
 if ( ! mhas compat scaling ) {
 return ( float ) math . ceil ( nget text advances ( mnative paint , mnative typeface , text , index , count , index , count , mbidi flags , null , DecimalInteger ) ) ;
 }
 final float old size = get text size ( ) ;
 set text size ( old size * mcompat scaling ) ;
 float w = nget text advances ( mnative paint , mnative typeface , text , index , count , index , count , mbidi flags , null , DecimalInteger ) ;
 set text size ( old size ) ;
 return ( float ) math . ceil ( w * minv compat scaling ) ;
 }
comment:
START return the width of the text . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .
returns the list of UNK UNK

code:
public void set traversal after ( view root , int virtual descendant id ) {
 enforce not sealed ( ) ;
 final int root accessibility view id = ( root != null ) ? root . get accessibility view id ( ) : undefined_ item_ d ;
 UNK after = make node id ( root accessibility view id , virtual descendant id ) ;
 }
comment:
START sets the node after which this one is visited in accessibility traversal . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public list < string > get extensions ( ) {
 return immutable list . of ( ) ;
 }
comment:
START get a list of filename extensions this matcher handles . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public values values ( ) {
 if ( values1 == null ) {
 values1 = new values ( this ) ;
 values2 = new values ( this ) ;
 }
 if ( ! values1 . valid ) {
 values1 . reset ( ) ;
 values1 . valid = true ;
 values2 . valid = false ;
 return values1 ;
 }
 values2 . reset ( ) ;
 values2 . valid = true ;
 values1 . valid = false ;
 return values2 ;
 }
comment:
START returns an iterator for the values in the map . remove is supported . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public k find key ( object value , boolean identity ) {
 v [ ] value table = this . value table ;
 if ( value == null ) {
 k [ ] key table = this . key table ;
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( key table [ i ] != null && value table [ i ] == null ) return key table [ i ] ;
 }
 else if ( identity ) {
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( value table [ i ] == value ) return key table [ i ] ;
 }
 else {
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( value . equals ( value table [ i ] ) ) return key table [ i ] ;
 }
 return null ;
 }
comment:
START returns the key for the specified value , or null if it is not in the map . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public string get password ( ) {
 return get field value ( password_ y ) ;
 }
comment:
START get the password . returns locally set password value . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set web view client ( web view client client ) {
 check thread ( ) ;
 provider . set web view client ( client ) ;
 }
comment:
START sets the web view client that will receive various notifications and requests . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public string get persistent class name ( ) {
 if ( this . persistent class instanceof class ) {
 return ( ( class < ? > ) this . persistent class ) . get name ( ) ;
 }
 return ( this . persistent class != null ? this . persistent class . to string ( ) : null ) ;
 }
comment:
START return the name of the persistent class of the object for which the locking failed . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public static < k , v > optional < v > of ( map < k , v > map , k key ) {
 preconditions . check not null ( key ) ;
 return optional . from nullable ( map . get ( key ) ) ;
 }
comment:
START returns the value mapped to the given key for a map . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public final mime message get mime message ( ) {
 return this . mime message ;
 }
comment:
START return the underlying mime message object . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the number of UNK .
return the list of UNK .
return the number of all UNK .

code:
private static int get offset for forward delete key ( char sequence text , int offset , paint paint ) {
 final int len = text . length ( ) ;
 if ( offset >= len - DecimalInteger ) {
 return len ;
 }
 offset = paint . get text run cursor ( text , offset , len , paint . direction_ r , offset , paint . cursor_ r ) ;
 return adjust replacement span ( text , offset , false ) ;
 }
comment:
START returns the end offset to be deleted by a forward delete key from the given offset . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int get stable inset top ( ) {
 return mstable insets . top ;
 }
comment:
START returns the top stable inset in pixels . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public particle group [ ] get particle group list ( ) {
 return m_particle system . get particle group list ( ) ;
 }
comment:
START get the world particle group list . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public void after properties set ( ) throws exception , template exception {
 if ( this . configuration == null ) {
 this . configuration = create configuration ( ) ;
 }
 }
comment:
START sets up a class template loader to use for loading spring UNK . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
reference entry < k , v > get next in access queue ( ) ;
comment:
START returns the next entry in the access queue . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public string get id ( ) {
 return this . id ;
 }
comment:
START return the id of this stop watch , as specified on construction . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set data ( byte buffer byte buffer data ) {
 this . byte buffer data = byte buffer data ;
 this . extractor input = null ;
 this . temp buffer = null ;
 }
comment:
START sets data to be parsed by UNK . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static string get folder ( ) throws android location exception {
 if ( sprefs location == null ) {
 sprefs location = find home folder ( ) ;
 }
 file f = new file ( sprefs location ) ;
 if ( ! f . exists ( ) ) {
 try {
 file utils . mkdirs ( f ) ;
 }
 catch ( security exception e ) {
 android location exception e2 = new android location exception ( string . format ( String + String , sprefs location ) ) ;
 e2 . init cause ( e ) ;
 throw e2 ;
 }
 }
 else if ( f . is file ( ) ) {
 throw new android location exception ( string . format ( String + String , sprefs location ) ) ;
 }
 return sprefs location ;
 }
comment:
START returns the folder used to store android related files . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public session factory get session factory ( ) {
 return this . session factory ;
 }
comment:
START return the hibernate session factory that should be used to create hibernate sessions . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public long get index current ( ) {
 return index current ;
 }
comment:
START returns the currently in-flight indexing operations . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public boolean is system only ( ) {
 return is system only ( id ) ;
 }
comment:
START returns true if the user is a split system user . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public void set time ( float time ) {
 this . time = time ;
 }
comment:
START sets the transition time so far . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
@ override public socket address get remote address ( ) {
 return channel . remote address ( ) ;
 }
comment:
START returns the remote address where this rest request channel is `` connected to '' . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string get schema name ( ) {
 return this . table meta data context . get schema name ( ) ;
 }
comment:
START get the name of the schema for this insert . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public executor service get thread pool ( ) {
 return thread pool ;
 }
comment:
START returns the current executor service used . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public int get adapter state ( ) {
 try {
 return service . get state ( ) ;
 }
 catch ( remote exception e ) {
 attempt dead service recovery ( e ) ;
 return nfc adapter . state_ f ;
 }
 }
comment:
START return the state of this nfc adapter . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set drawing cache quality ( @ drawing cache quality int quality ) {
 set flags ( quality , drawing_ cache_ quality_ k ) ;
 }
comment:
START set the drawing cache quality of this view . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
final void UNK worker ( fork join worker thread wt , throwable ex ) {
 work queue w = null ;
 if ( wt != null && ( w = wt . work queue ) != null ) {
 int ps ;
 long sc ;
 w . UNK = - DecimalInteger ;
 do {
 }
 while ( ! u . compare and swap long ( this , t , sc = steal count , sc + w . UNK ) ) ;
 if ( ( ( ps = UNK ) & UNK k ) != DecimalInteger || ! u . compare and swap int ( this , k , ps , ps += UNK k ) ) ps = acquire UNK ( ) ;
 int UNK = ( ps & n ) | ( ( ps + UNK k ) & ~ n ) ;
 try {
 int idx = w . pool index ;
 work queue [ ] ws = work queues ;
 if ( ws != null && idx >= DecimalInteger && idx < ws . length && ws [ idx ] == w ) ws [ idx ] = null ;
 }
 finally {
 if ( ! u . compare and swap int ( this , k , ps , UNK ) ) release UNK ( UNK ) ;
 }
 }
 long c ;
 do {
 }
 while ( ! u . compare and swap long ( this , l , c = ctl , ( ( ( c - ac_ t ) & ac_ k ) | ( ( c - UNK t ) & UNK k ) | ( c & ~ ( ac_ k | UNK k ) ) ) ) ) ;
 if ( ! try terminate ( false , false ) && w != null && w . array != null ) {
 w . cancel all ( ) ;
 work queue [ ] ws ;
 work queue v ;
 thread p ;
 int u , i , e ;
 while ( ( u = ( int ) ( ( c = ctl ) > > > DecimalInteger ) ) < DecimalInteger && ( e = ( int ) c ) >= DecimalInteger ) {
 if ( e > DecimalInteger ) {
 if ( ( ws = work queues ) == null || ( i = e & k ) >= ws . length || ( v = ws [ i ] ) == null ) break ;
 long nc = ( ( ( long ) ( v . next wait & e_ k ) ) | ( ( long ) ( u + UNK t ) << DecimalInteger ) ) ;
 if ( v . event count != ( e | int_ n ) ) break ;
 if ( u . compare and swap long ( this , l , c , nc ) ) {
 v . event count = ( e + e_ q ) & e_ k ;
 if ( ( p = v . UNK ) != null ) u . UNK ( p ) ;
 break ;
 }
 }
 else {
 if ( ( short ) u < DecimalInteger ) try add worker ( ) ;
 break ;
 }
 }
 }
 if ( ex == null ) fork join task . help UNK stale exceptions ( ) ;
 else fork join task . rethrow ( ex ) ;
 }
comment:
START removes record of worker from array , and UNK counts . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
final void internal reset ( long initial value ) {
 cell [ ] as = cells ;
 base = initial value ;
 if ( as != null ) {
 int n = as . length ;
 for ( int i = DecimalInteger ;
 i < n ;
 ++ i ) {
 cell a = as [ i ] ;
 if ( a != null ) a . value = initial value ;
 }
 }
 }
comment:
START sets base and all cells to the given value . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int index of ( field field ) {
 return require non null ( field indexes . get ( field ) ) ;
 }
comment:
START gets the index of the specified field or -1 if not found . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public string get bean class name ( ) {
 return this . bean class name ;
 }
comment:
START return the name of the class we were trying to load . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
private artifact output artifact ( rule context rule context , path fragment path ) {
 path fragment framework root = new path fragment ( new path fragment ( String ) , new path fragment ( bundle name ( rule context ) + String ) , path ) ;
 return rule context . get package relative artifact ( framework root , rule context . get bin or genfiles directory ( ) ) ;
 }
comment:
START returns an artifact at given path under `` package / _ UNK name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set label ( string label ) {
 label = label ;
 }
comment:
START sets the label for this task description . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public void remove at ( int index ) {
 if ( values [ index ] != d ) {
 values [ index ] = d ;
 garbage = true ;
 }
 }
comment:
START removes the mapping at the specified index . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given file .

code:
public void add pair ( pw pair pw pair ) {
 UNK pairs . add ( pw pair ) ;
 }
comment:
START add a pw pair to this group . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add the UNK UNK to the given UNK .
add the UNK UNK to the given .
add the UNK UNK to the UNK

code:
public type get type ( ) {
 shape type type = fixture . get type ( ) ;
 if ( type == shape type . e ) return type . circle ;
 if ( type == shape type . e ) return type . edge ;
 if ( type == shape type . n ) return type . polygon ;
 if ( type == shape type . n ) return type . chain ;
 return type . circle ;
 }
comment:
START get the type of the child shape . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static observable < long > interval ( long interval , time unit unit ) {
 return interval ( interval , interval , unit , schedulers . computation ( ) ) ;
 }
comment:
START returns an observable that emits a sequential number every specified interval of time . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set content negotiation manager ( content negotiation manager content negotiation manager ) {
 this . content negotiation manager = content negotiation manager ;
 }
comment:
START set the content negotiation manager to use for the produces request condition . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
private boolean is graphic ascii ( int code point ) {
 return 0x20 < code point && code point < 0x7 f ;
 }
comment:
START returns true if the code point is ascii and graph . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public void set data network type ( int type ) {
 int phone id = get default phone ( ) ;
 set data network type for phone ( phone id , type ) ;
 }
comment:
START set the network type currently in use on the device for data transmission . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ override public string to string ( ) {
 string properties string = string . format ( String , is UNK ( ) , allows self UNK ( ) ) ;
 return string . format ( UNK string_ t , properties string , nodes ( ) , edges ( ) ) ;
 }
comment:
START returns a string representation of this graph . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public float get text skew x ( ) {
 return nget text skew x ( mnative paint ) ;
 }
comment:
START return the paint 's horizontal UNK factor for text . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
protected void set UNK ( object span , int start , int end , int flags ) {
 ( ( editable ) text ) . set span ( span , start , end , flags ) ;
 }
comment:
START sets a span on the specified range of text END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static int get current animations count ( ) {
 return animation handler . get animation count ( ) ;
 }
comment:
START return the number of animations currently running . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void add ( double value ) {
 if ( count == DecimalInteger ) {
 count = DecimalInteger ;
 mean = value ;
 min = value ;
 max = value ;
 if ( ! is finite ( value ) ) {
 sum of squares of deltas = na n ;
 }
 }
 else {
 count ++ ;
 if ( is finite ( value ) && is finite ( mean ) ) {
 double delta = value - mean ;
 mean += delta / count ;
 sum of squares of deltas += delta * ( value - mean ) ;
 }
 else {
 mean = calculate new mean non finite ( mean , value ) ;
 sum of squares of deltas = na n ;
 }
 min = math . min ( min , value ) ;
 max = math . max ( max , value ) ;
 }
 }
comment:
START adds the given value to the dataset . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
@ suppress warnings ( String ) public b field ( string field ) {
 if ( field == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . field = field ;
 return ( b ) this ;
 }
comment:
START sets the field to use for this aggregation . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static int null safe hash code ( int [ ] array ) {
 if ( array == null ) {
 return DecimalInteger ;
 }
 int hash = initial_ h ;
 for ( int element : array ) {
 hash = r * hash + element ;
 }
 return hash ;
 }
comment:
START return a hash code based on the contents of the specified array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public user info get user info ( @ user id int int user handle ) {
 try {
 return service . get user info ( user handle ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns the user info object describing a specific user . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public float avg shards per node ( ) {
 return avg shards per node ;
 }
comment:
START returns the global average of shards per node END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final void set projection in transaction locked ( int orientation , rect layer stack rect , rect display rect ) {
 if ( mcurrent orientation != orientation || mcurrent layer stack rect == null || ! mcurrent layer stack rect . equals ( layer stack rect ) || mcurrent display rect == null || ! mcurrent display rect . equals ( display rect ) ) {
 mcurrent orientation = orientation ;
 if ( mcurrent layer stack rect == null ) {
 mcurrent layer stack rect = new rect ( ) ;
 }
 mcurrent layer stack rect . set ( layer stack rect ) ;
 if ( mcurrent display rect == null ) {
 mcurrent display rect = new rect ( ) ;
 }
 mcurrent display rect . set ( display rect ) ;
 surface control . set display projection ( mdisplay token , orientation , layer stack rect , display rect ) ;
 }
 }
comment:
START sets the display projection while in a transaction . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public void set y ( float y ) {
 this . y = y ;
 }
comment:
START sets the y-value for the entry . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
@ override public void set duration ( long duration millis ) {
 flags |= property_ duration_ k ;
 super . set duration ( duration millis ) ;
 mlast end = mstart offset + duration ;
 }
comment:
START sets the duration of every child animation . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public string get originating query string ( http servlet request request ) {
 if ( ( request . get attribute ( web utils . forward_ request_ uri_ e ) != null ) || ( request . get attribute ( web utils . error_ request_ uri_ e ) != null ) ) {
 return ( string ) request . get attribute ( web utils . forward_ query_ string_ e ) ;
 }
 else {
 return request . get query string ( ) ;
 }
 }
comment:
START return the query string part of the given request 's url . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static final int get meta state ( char sequence text , int meta ) {
 switch ( meta ) {
 case meta_ shift_ n : return get active ( text , p , pressed_ return_ e , locked_ return_ e ) ;
 case meta_ alt_ n : return get active ( text , t , pressed_ return_ e , locked_ return_ e ) ;
 case meta_ sym_ n : return get active ( text , m , pressed_ return_ e , locked_ return_ e ) ;
 case meta_ g : return get active ( text , g , pressed_ return_ e , locked_ return_ e ) ;
 default : return DecimalInteger ;
 }
 }
comment:
START gets the state of a particular meta key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public builder url ( string url ) {
 if ( url == null ) throw new null pointer exception ( String ) ;
 if ( url . region matches ( true , DecimalInteger , String , DecimalInteger , DecimalInteger ) ) {
 url = String + url . substring ( DecimalInteger ) ;
 }
 else if ( url . region matches ( true , DecimalInteger , String , DecimalInteger , DecimalInteger ) ) {
 url = String + url . substring ( DecimalInteger ) ;
 }
 http url parsed = http url . parse ( url ) ;
 if ( parsed == null ) throw new illegal argument exception ( String + url ) ;
 return url ( parsed ) ;
 }
comment:
START sets the url target of this request . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ non null public final media format get output format ( int index ) {
 return new media format ( get output format native ( index ) ) ;
 }
comment:
START returns the output format for a specific output buffer . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public context get jaxb context ( ) {
 if ( this . jaxb context != null ) {
 return this . jaxb context ;
 }
 synchronized ( this . jaxb context monitor ) {
 if ( this . jaxb context == null ) {
 try {
 if ( string utils . has length ( this . context path ) ) {
 this . jaxb context = create jaxb context from context path ( ) ;
 }
 else if ( ! object utils . is empty ( this . classes to be bound ) ) {
 this . jaxb context = create jaxb context from classes ( ) ;
 }
 else if ( ! object utils . is empty ( this . packages to scan ) ) {
 this . jaxb context = create jaxb context from packages ( ) ;
 }
 }
 catch ( exception ex ) {
 throw convert jaxb exception ( ex ) ;
 }
 }
 return this . jaxb context ;
 }
 }
comment:
START return the UNK used by this marshaller , lazily building it if necessary . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ main thread public void set progress ( @ float range ( from = DecimalFloatingPoint , to = DecimalFloatingPoint ) float progress ) {
 print service . throw if not called on main thread ( ) ;
 try {
 mprint service client . set progress ( mcached info . get id ( ) , progress ) ;
 }
 catch ( remote exception re ) {
 log . e ( log_ g , String + mcached info . get id ( ) , re ) ;
 }
 }
comment:
START sets the progress of this print job as a fraction of NUMBER . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public audio mix port port ( ) {
 return ( audio mix port ) port ;
 }
comment:
START returns the audio mix port this audio mix port config is issued from . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
node get initial head ( ) {
 return get ( ) ;
 }
comment:
START returns the current head for initializing the replay location for a new subscriber . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set indent ( int indent ) {
 this . indent = indent ;
 }
comment:
START set the number of nesting indent spaces . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public class < ? > get serialization view ( ) {
 return this . serialization view ;
 }
comment:
START return the serialization view to use . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
returns the UNK of the UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the given .

code:
@ deprecated public float [ ] get supported refresh rates ( ) {
 synchronized ( this ) {
 update display info locked ( ) ;
 return mdisplay info . get default refresh rates ( ) ;
 }
 }
comment:
START get the supported refresh rates of this display in frames per second . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set url patterns ( collection < string > url patterns ) {
 assert . not null ( url patterns , String ) ;
 this . url patterns = new linked hash set < string > ( url patterns ) ;
 }
comment:
START set the url patterns that the filter will be registered against . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public time value get max task wait time ( ) {
 if ( get queue ( ) . size ( ) == DecimalInteger ) {
 return no_ wait_ time_ e ;
 }
 long now = system . nano time ( ) ;
 long oldest creation date in nanos = now ;
 for ( runnable queued runnable : get queue ( ) ) {
 if ( queued runnable instanceof prioritized runnable ) {
 oldest creation date in nanos = math . min ( oldest creation date in nanos , ( ( prioritized runnable ) queued runnable ) . get creation date in nanos ( ) ) ;
 }
 }
 return time value . time value nanos ( now - oldest creation date in nanos ) ;
 }
comment:
START returns the waiting time of the first task in the queue END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public int get local test count ( ) {
 return local test count ;
 }
comment:
START returns the local test count used . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
protected artifact create ijar action ( artifact input jar , boolean add prefix ) {
 artifact interface jar = get ijar artifact ( input jar , add prefix ) ;
 files to run provider ijar target = java toolchain . get ijar ( ) ;
 if ( ! rule context . has errors ( ) ) {
 rule context . register action ( new spawn action . builder ( ) . add input ( input jar ) . add output ( interface jar ) . set executable ( ijar target ) . use default shell environment ( ) . add argument ( input jar . get exec path string ( ) ) . add argument ( interface jar . get exec path string ( ) ) . set progress message ( String + rule context . get label ( ) ) . set mnemonic ( String ) . build ( rule context ) ) ;
 }
 return interface jar ;
 }
comment:
START creates the action that creates UNK from jar files . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK to the given UNK .

code:
public top hits aggregation builder script field ( string name , script script , boolean ignore failure ) {
 if ( name == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 if ( script == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 if ( script fields == null ) {
 script fields = new hash set < > ( ) ;
 }
 script fields . add ( new script field ( name , script , ignore failure ) ) ;
 return this ;
 }
comment:
START adds a script field under the given name with the provided script . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void set list name ( string list name ) {
 this . mlist name = list name ;
 }
comment:
START sets the rlmi list name . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public int get stats key count ( ) {
 return mstats keys . length ;
 }
comment:
START get the number of health stat map values in this object . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ nullable public integer get capture session ( ) {
 if ( UNK available ) {
 return UNK session ;
 }
 else {
 return null ;
 }
 }
comment:
START gets the session id to start a capture from the UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ nullable public sky value get old value ( ) {
 return old value ;
 }
comment:
START returns the old value , if any . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK

code:
@ test api @ nullable public char sequence get status ( @ non null package manager pm ) {
 if ( mstatus res == DecimalInteger ) {
 return status ;
 }
 else {
 try {
 return pm . get resources for application ( mstatus res app package name . to string ( ) ) . get string ( mstatus res ) ;
 }
 catch ( package manager . name not found exception | resources . not found exception e ) {
 return null ;
 }
 }
 }
comment:
START get the status of this job . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public float get density ( ) {
 return jni get density ( addr ) ;
 }
comment:
START get the density of this fixture . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get audio session id ( ) {
 return msession id ;
 }
comment:
START returns the audio session id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static < e > immutable sorted set < e > copy of ( iterator < ? extends e > elements ) {
 @ suppress warnings ( String ) ordering < e > natural order = ( ordering < e > ) ordering . < comparable > natural ( ) ;
 return copy of ( natural order , elements ) ;
 }
comment:
START returns an immutable sorted set containing the given elements sorted by their natural ordering . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ thread safe static label extract label ( sky key value ) {
 object value name = value . argument ( ) ;
 preconditions . check state ( value name instanceof configured target key , value name ) ;
 return ( ( configured target key ) value name ) . get label ( ) ;
 }
comment:
START returns a label of configured target value . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ view debug . exported property ( mapping = {
 @ view debug . int to string ( from = e , to = String ) , @ view debug . int to string ( from = e , to = String ) , @ view debug . int to string ( from = e , to = String ) }
 ) @ visibility public int get visibility ( ) {
 return mview flags & visibility_ k ;
 }
comment:
START returns the visibility status for this view . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public settings diff ( settings source , settings default settings ) {
 settings . builder builder = settings . builder ( ) ;
 for ( setting < ? > setting : key settings . values ( ) ) {
 if ( setting . exists ( source ) == false ) {
 builder . put ( setting . get key ( ) , setting . get raw ( default settings ) ) ;
 }
 }
 return builder . build ( ) ;
 }
comment:
START returns a settings object that contains all settings that are not already set in the given source . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set type ( body type type ) {
 jni set type ( addr , type . get value ( ) ) ;
 }
comment:
START set the type of this body . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
@ override public void remove country listener ( UNK listener listener ) throws remote exception {
 if ( ! msystem ready ) {
 throw new remote exception ( ) ;
 }
 remove listener ( listener . as binder ( ) ) ;
 }
comment:
START remove the UNK listener from the listener list . END
BLUE1:0.428571428571
--generate--
create a listener to UNK UNK .
returns the UNK of the given UNK .
create a listener for the given UNK .
create a listener to UNK UNK to the given UNK .
create a listener to UNK UNK for the given UNK .

code:
private string to short string ( ) {
 return string . format ( String , red , UNK even , UNK odd , blue ) ;
 }
comment:
START return the UNK channel vector as a string in compact form . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ nullable private char sequence get text for accessibility ( ) {
 if ( text utils . is empty ( text ) ) {
 return hint ;
 }
 if ( has password transformation method ( ) && should UNK passwords for accessibility ( ) ) {
 return text ;
 }
 return transformed ;
 }
comment:
START returns the text that should be exposed to accessibility services . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ nullable caching analysis environment create analysis environment ( artifact owner owner , boolean is system env , event handler event handler , environment env , build configuration config ) throws interrupted exception {
 if ( config != null && ! get workspace status values ( env , config ) ) {
 return null ;
 }
 boolean extended sanity checks = config != null && config . extended sanity checks ( ) ;
 boolean allow UNK actions = config == null || config . is actions enabled ( ) ;
 return new caching analysis environment ( artifact factory , owner , is system env , extended sanity checks , event handler , env , allow UNK actions , bin tools ) ;
 }
comment:
START returns null if any UNK values are not ready . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public long find ( ) {
 validate query ( ) ;
 return native find ( native ptr , DecimalInteger ) ;
 }
comment:
START returns the table row index for the first element matching the query . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public int get last UNK stream volume ( int stream type ) {
 ensure valid stream type ( stream type ) ;
 int device = get device for stream ( stream type ) ;
 return ( mstream states [ stream type ] . get index ( device ) + DecimalInteger ) / DecimalInteger ;
 }
comment:
START get last UNK volume before stream was UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final resource loader get resource loader ( ) {
 return this . resource loader ;
 }
comment:
START return the resource loader that this metadata reader factory has been constructed with . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the number of UNK .
return the list of UNK .
return the number of all UNK .

code:
public static UNK get instance ( ) {
 return UNK instance . get ( ) ;
 }
comment:
START gets the UNK for the calling thread . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static sound trigger module attach module ( int module id , status listener listener , handler handler ) {
 if ( listener == null ) {
 return null ;
 }
 sound trigger module module = new sound trigger module ( module id , listener , handler ) ;
 return module ;
 }
comment:
START get an interface on a hardware module to control sound UNK and UNK on this module . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
private static void parse copy fields ( parse context context , list < string > copy to fields ) throws exception {
 if ( ! context . is within copy to ( ) && copy to fields . is empty ( ) == false ) {
 context = context . create copy to context ( ) ;
 for ( string field : copy to fields ) {
 parse context . document target doc = null ;
 for ( parse context . document doc = context . doc ( ) ;
 doc != null ;
 doc = doc . get parent ( ) ) {
 if ( field . starts with ( doc . get prefix ( ) ) ) {
 target doc = doc ;
 break ;
 }
 }
 assert target doc != null ;
 final parse context copy to context ;
 if ( target doc == context . doc ( ) ) {
 copy to context = context ;
 }
 else {
 copy to context = context . switch doc ( target doc ) ;
 }
 parse copy ( field , copy to context ) ;
 }
 }
 }
comment:
START creates instances of the fields that the current field should be copied to END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public final int get frame count ( ) {
 return mframes presented time nano != null ? mframes presented time nano . length : DecimalInteger ;
 }
comment:
START gets the number of frames for which there is data . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
boolean is layout mode optical ( ) {
 return mlayout mode == layout_ mode_ UNK s ;
 }
comment:
START return true if this view group is UNK out using optical bounds . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public string get bean name ( ) {
 return this . bean name ;
 }
comment:
START return the view 's name . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public list < UNK > get UNK ( ) {
 return this . UNK ;
 }
comment:
START return the dependency UNK . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void read from parcel ( parcel in ) {
 left = in . read int ( ) ;
 top = in . read int ( ) ;
 right = in . read int ( ) ;
 bottom = in . read int ( ) ;
 }
comment:
START set the rectangle 's coordinates from the data stored in the specified parcel . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public boolean from zygote ( ) {
 return parent != null && parent . name . equals ( String ) && ! name . equals ( String ) ;
 }
comment:
START returns true if this process comes from the UNK . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public string get workspace name ( ) {
 return workspace name ;
 }
comment:
START returns this package 's workspace name . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
protected mime type get default content type ( object payload ) {
 list < mime type > mime types = get supported mime types ( ) ;
 return ( ! mime types . is empty ( ) ? mime types . get ( DecimalInteger ) : null ) ;
 }
comment:
START returns the default content type for the payload . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
private boolean remove task by id locked ( int task id , boolean UNK process , boolean remove from recents ) {
 final task record tr = mstack supervisor . any task for id locked ( task id , ! UNK from_ s , invalid_ stack_ d ) ;
 if ( tr != null ) {
 tr . remove task activities locked ( ) ;
 clean up removed task locked ( tr , UNK process , remove from recents ) ;
 if ( tr . is persistable ) {
 notify task persister locked ( null , true ) ;
 }
 return true ;
 }
 slog . w ( g , String + task id ) ;
 return false ;
 }
comment:
START removes the task with the specified task id . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
create a listener for the UNK .
create a listener for the given UNK .

code:
public boolean is clickable ( ) {
 return ( flags & view node . flags_ e ) != DecimalInteger ;
 }
comment:
START returns true if this node is clickable by the user . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void add nodes ( list < ? extends node > ts ) {
 for ( node t : ts ) {
 add node ( t ) ;
 }
 }
comment:
START add multiple nodes to the contents of this basic block . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
list < map < string , object > > get key list ( ) ;
comment:
START return a reference to the list that contains the keys . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public builder add allowed application ( string package name ) throws package manager . name not found exception {
 if ( config . disallowed applications != null ) {
 throw new unsupported operation exception ( String ) ;
 }
 verify app ( package name ) ;
 if ( config . allowed applications == null ) {
 config . allowed applications = new array list < string > ( ) ;
 }
 config . allowed applications . add ( package name ) ;
 return this ;
 }
comment:
START adds an application that 's allowed to access the vpn connection . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public static thread pool executor new UNK pool ( int threads , string name ) {
 thread pool executor pool = new thread pool executor ( threads , threads , DecimalInteger , time unit . s , new synchronous queue < runnable > ( ) ) ;
 pool . allow core thread time out ( true ) ;
 pool . set thread factory ( new thread factory builder ( ) . set name format ( name + String ) . build ( ) ) ;
 pool . set rejected execution handler ( new rejected execution handler ( ) {
 @ override public void rejected execution ( runnable r , thread pool executor executor ) {
 r . run ( ) ;
 }
 }
 ) ;
 return pool ;
 }
comment:
START create a `` UNK '' thread pool which has the following properties NUMBER . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static int blue ( int color ) {
 return color & 0x f ;
 }
comment:
START return the blue component of a color int . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public date get refresh date ( ) {
 return this . refresh date ;
 }
comment:
START return the last time the list has been fetched from the source provider . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
private http content next chunk ( ) throws error data encoder exception {
 if ( is last chunk ) {
 is last chunk sent = true ;
 return last http content . empty_ last_ t ;
 }
 byte buf buffer ;
 int size = http post body util . chunk size ;
 if ( current buffer != null ) {
 size -= current buffer . readable bytes ( ) ;
 }
 if ( size <= DecimalInteger ) {
 buffer = fill byte buf ( ) ;
 return new default http content ( buffer ) ;
 }
 if ( current data != null ) {
 if ( is multipart ) {
 http content chunk = encode next chunk multipart ( size ) ;
 if ( chunk != null ) {
 return chunk ;
 }
 }
 else {
 http content chunk = encode next chunk url encoded ( size ) ;
 if ( chunk != null ) {
 return chunk ;
 }
 }
 size = http post body util . chunk size - current buffer . readable bytes ( ) ;
 }
 if ( ! iterator . has next ( ) ) {
 is last chunk = true ;
 buffer = current buffer ;
 current buffer = null ;
 return new default http content ( buffer ) ;
 }
 while ( size > DecimalInteger && iterator . has next ( ) ) {
 current data = iterator . next ( ) ;
 http content chunk ;
 if ( is multipart ) {
 chunk = encode next chunk multipart ( size ) ;
 }
 else {
 chunk = encode next chunk url encoded ( size ) ;
 }
 if ( chunk == null ) {
 size = http post body util . chunk size - current buffer . readable bytes ( ) ;
 continue ;
 }
 return chunk ;
 }
 is last chunk = true ;
 if ( current buffer == null ) {
 is last chunk sent = true ;
 return last http content . empty_ last_ t ;
 }
 buffer = current buffer ;
 current buffer = null ;
 return new default http content ( buffer ) ;
 }
comment:
START returns the next available http chunk . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
item new long ( final long value ) {
 key . set ( value ) ;
 item result = get ( key ) ;
 if ( result == null ) {
 pool . put byte ( g ) . put long ( value ) ;
 result = new item ( index , key ) ;
 index += DecimalInteger ;
 put ( result ) ;
 }
 return result ;
 }
comment:
START adds a long to the constant pool of the class being build . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .

code:
public static int get version code ( ) {
 return DecimalInteger ;
 }
comment:
START gets the version of the library . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public static string to string ( long x ) {
 return to string ( x , DecimalInteger ) ;
 }
comment:
START returns a string representation of x , where x is treated as unsigned . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public cc library helper from common ( cc common common ) {
 this . add copts ( common . get copts ( ) ) . add defines ( common . get defines ( ) ) . add deps ( rule context . get prerequisites ( String , mode . t ) ) . add loose include dirs ( common . get loose include dirs ( ) ) . add non code linker inputs ( common . get linker scripts ( ) ) . add system include dirs ( common . get system include dirs ( ) ) . set no copts ( common . get no copts ( ) ) . set headers checking mode ( semantics . determine headers checking mode ( rule context ) ) ;
 return this ;
 }
comment:
START sets fields that overlap for UNK and cc_binary rules . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
@ nullable public t get ( long key , @ nullable theme theme ) {
 synchronized ( this ) {
 final long sparse array < weak reference < t > > themed entries = get themed locked ( theme , false ) ;
 if ( themed entries != null ) {
 final weak reference < t > themed entry = themed entries . get ( key ) ;
 if ( themed entry != null ) {
 return themed entry . get ( ) ;
 }
 }
 final long sparse array < weak reference < t > > unthemed entries = get unthemed locked ( false ) ;
 if ( unthemed entries != null ) {
 final weak reference < t > unthemed entry = unthemed entries . get ( key ) ;
 if ( unthemed entry != null ) {
 return unthemed entry . get ( ) ;
 }
 }
 }
 return null ;
 }
comment:
START returns an entry from the cache . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public void set parameter types ( class < ? > ... types ) {
 this . pointcut parameter types = types ;
 }
comment:
START set the parameter types for the pointcut . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
multi value map < string , response cookie > get cookies ( ) ;
comment:
START return a read-only map of response cookies received from the server . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
@ nullable public string get message ( ) {
 return message ;
 }
comment:
START returns the custom message for this location , if any . END
BLUE1:0.428571428571
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public v at ( int row index , int column index ) {
 check element index ( row index , row list . size ( ) ) ;
 check element index ( column index , column list . size ( ) ) ;
 return array [ row index ] [ column index ] ;
 }
comment:
START returns the value corresponding to the specified row and column indices . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public boolean UNK in frustum ( float x , float y , float z , float radius ) {
 for ( int i = DecimalInteger ;
 i < DecimalInteger ;
 i ++ ) if ( ( planes [ i ] . normal . x * x + planes [ i ] . normal . y * y + planes [ i ] . normal . z * z ) < ( - radius - planes [ i ] . d ) ) return false ;
 return true ;
 }
comment:
START returns whether the given sphere is in the frustum . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ override public void set string ( string str ) {
 if ( null == str ) {
 throw new illegal argument exception ( String ) ;
 }
 this . str = str ;
 }
comment:
START sets the string content . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public boolean remove all ( char array array ) {
 int size = this . size ;
 int start size = size ;
 char [ ] items = this . items ;
 for ( int i = DecimalInteger , n = array . size ;
 i < n ;
 i ++ ) {
 char item = array . get ( i ) ;
 for ( int ii = DecimalInteger ;
 ii < size ;
 ii ++ ) {
 if ( item == items [ ii ] ) {
 remove index ( ii ) ;
 size -- ;
 break ;
 }
 }
 }
 return size != start size ;
 }
comment:
START removes from this array all of elements contained in the specified array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
builder add debug artifacts ( dsym output type dsym output type ) {
 this . dsym output type = dsym output type ;
 return this ;
 }
comment:
START sets which type of dsym output this rule generated to be propagated to dependers . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static extended whitespace throwable pattern converter new instance ( string [ ] options ) {
 return new extended whitespace throwable pattern converter ( options ) ;
 }
comment:
START creates a new instance of the class . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static long find first sync position ( rc file data source data source , long offset , long length , long sync first , long sync second ) throws exception {
 require non null ( data source , String ) ;
 check argument ( offset >= DecimalInteger , String ) ;
 check argument ( length >= DecimalInteger , String ) ;
 check argument ( offset + length <= data source . get size ( ) , String ) ;
 slice sync = slices . allocate ( size_ of_ t + size_ of_ g + size_ of_ g ) ;
 sync . set int ( DecimalInteger , 0x UNK f ) ;
 sync . set long ( size_ of_ t , sync first ) ;
 sync . set long ( size_ of_ t + size_ of_ g , sync second ) ;
 byte [ ] buffer = new byte [ ints . checked cast ( min ( DecimalInteger << DecimalInteger , length + ( sync_ UNK h - DecimalInteger ) ) ) ] ;
 slice buffer slice = slices . wrapped buffer ( buffer ) ;
 for ( long position = DecimalInteger ;
 position < length ;
 position += buffer slice . length ( ) - ( sync_ UNK h - DecimalInteger ) ) {
 int buffer size = ints . checked cast ( min ( buffer . length , length + ( sync_ UNK h - DecimalInteger ) - position ) ) ;
 buffer size = ints . checked cast ( min ( buffer size , data source . get size ( ) - offset - position ) ) ;
 data source . read fully ( offset + position , buffer , DecimalInteger , buffer size ) ;
 int index = buffer slice . index of ( sync ) ;
 if ( index >= DecimalInteger ) {
 if ( position + index < length ) {
 long start of sync sequence = offset + position + index ;
 return start of sync sequence ;
 }
 else {
 return - DecimalInteger ;
 }
 }
 }
 return - DecimalInteger ;
 }
comment:
START find the beginning of the first full sync sequence that starts within the specified range . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public string value ( ) {
 if ( has value ( ) ) {
 return values [ DecimalInteger ] ;
 }
 else {
 return null ;
 }
 }
comment:
START returns the value for this key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public abstract display info get display info ( int display id ) ;
comment:
START returns information about the specified logical display . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public int get query timeout ( ) {
 return this . query timeout ;
 }
comment:
START return the query timeout for statements that this jdbc template executes . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public void set receipt id ( string receipt id ) {
 set ( UNK d , receipt id ) ;
 }
comment:
START set the UNK header . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public static < t extends comparable < ? super t > > range < t > create ( final t lower , final t upper ) {
 return new range < t > ( lower , upper ) ;
 }
comment:
START create a new immutable range , with the argument types UNK . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public builder add placeholder tree artifact formatted exec path ( string template , artifact tree artifact ) {
 if ( template != null && tree artifact != null ) {
 arguments . add ( new tree file artifact exec path with template arg ( template , tree artifact ) ) ;
 }
 return this ;
 }
comment:
START adds a formatted string containing the exec path of a placeholder tree artifact . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set info ( @ nullable string info ) {
 view info container = view . find view by id ( r . id . UNK ) ;
 if ( info != null ) {
 text view info text = ( text view ) view . find view by id ( r . id . UNK ) ;
 info text . set text ( info ) ;
 info container . set visibility ( view . e ) ;
 }
 else {
 info container . set visibility ( view . e ) ;
 }
 }
comment:
START sets the info message . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public int get offset for index ( int column , int row ) {
 if ( row < DecimalInteger || column < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 return UNK offsets [ ( ( row & DecimalInteger ) << DecimalInteger ) | ( column & DecimalInteger ) ] ;
 }
comment:
START return the color channel offset for a given index into the array of raw pixel values . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public recycler view get recycler view ( ) {
 return mdrawer builder . UNK view ;
 }
comment:
START get the list view of the current drawer @return END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public double get accumulated delta range in meters ( ) {
 return maccumulated delta range in meters ;
 }
comment:
START gets the accumulated delta range since the last channel reset , in meters . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set current tab ( int index ) {
 if ( index < DecimalInteger || index >= get tab count ( ) || index == mselected tab ) {
 return ;
 }
 if ( mselected tab != - DecimalInteger ) {
 get child tab view at ( mselected tab ) . set selected ( false ) ;
 }
 mselected tab = index ;
 get child tab view at ( mselected tab ) . set selected ( true ) ;
 mstrip UNK = true ;
 }
comment:
START sets the current tab . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static locale list get locales ( ) {
 try {
 return activity manager native . get default ( ) . get configuration ( ) . get locales ( ) ;
 }
 catch ( remote exception e ) {
 return locale list . get default ( ) ;
 }
 }
comment:
START get the locale list . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ override public iterator < lv buffer utils . lv element > iterator ( ) {
 return new iterator < lv buffer utils . lv element > ( ) {
 private iterator < tlv buffer utils . tlv element > mtlv iterator = mtlv iterable . iterator ( ) ;
 @ override public boolean has next ( ) {
 return mtlv iterator . has next ( ) ;
 }
 @ override public lv buffer utils . lv element next ( ) {
 tlv buffer utils . tlv element tlv e = mtlv iterator . next ( ) ;
 return new lv element ( tlv e . length , tlv e . ref array , tlv e . offset ) ;
 }
 @ override public void remove ( ) {
 throw new unsupported operation exception ( ) ;
 }
 }
 ;
 }
comment:
START returns an iterator to step through a UNK formatted byte-array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
public pw pair get top UNK pw pair by group id ( string group id , comparator < pw pair > comparator ) {
 for ( pw pair pw pair : get grouped pw pairs sorted by rank ( comparator ) ) {
 if ( pw pair . get pws result ( ) . get group id ( ) . equals ( group id ) ) {
 return pw pair ;
 }
 }
 return null ;
 }
comment:
START return the UNK pw pair for a given group id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that UNK UNK .
returns the list of UNK that UNK UNK the UNK .

code:
public static color action color ( color color ) {
 return color ( color , DecimalInteger , null ) ;
 }
comment:
START sets the actor 's color UNK . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public final byte [ ] bytes ( ) throws exception {
 long content length = content length ( ) ;
 if ( content length > integer . max_ e ) {
 throw new exception ( String + content length ) ;
 }
 buffered source source = source ( ) ;
 byte [ ] bytes ;
 try {
 bytes = source . read byte array ( ) ;
 }
 finally {
 util . close quietly ( source ) ;
 }
 if ( content length != - DecimalInteger && content length != bytes . length ) {
 throw new exception ( String + content length + String + bytes . length + String ) ;
 }
 return bytes ;
 }
comment:
START returns the response as a byte array . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public activity info get activity info ( component name cn , int user id ) {
 if ( UNK == null ) return null ;
 if ( recents debug flags . static . enable mock tasks ) return new activity info ( ) ;
 try {
 return UNK . get activity info ( cn , package manager . get_ meta_ a , user id ) ;
 }
 catch ( remote exception e ) {
 e . print stack trace ( ) ;
 return null ;
 }
 }
comment:
START returns the activity info for a given component name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
long get field index ( string field name ) {
 return column indices . get ( field name ) ;
 }
comment:
START returns the column index in the underlying table for the given field name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
@ suppress warnings ( String ) @ override public final b query name ( string query name ) {
 this . query name = query name ;
 return ( b ) this ;
 }
comment:
START sets the query name for the query . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
sets the UNK of the given UNK .

code:
@ nullable public color state list get secondary progress tint list ( ) {
 return mprogress tint info != null ? mprogress tint info . msecondary progress tint list : null ;
 }
comment:
START returns the tint applied to the secondary progress drawable , if specified . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static view stub find view stub by id ( view v , int stub id ) {
 return ( view stub ) v . find view by id ( stub id ) ;
 }
comment:
START returns a view stub for the given view id . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public void get focus UNK ( float [ ] output ) {
 if ( output == null || output . length != DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 split float ( get ( key_ focus_ s ) , output ) ;
 }
comment:
START gets the UNK from the camera to where an object appears to be in focus . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .
returns the list of UNK that be UNK in the .

code:
public void set scale UNK ( float scale x , float scale y ) {
 mview port handler . set minimum scale x ( scale x ) ;
 mview port handler . set minimum scale y ( scale y ) ;
 }
comment:
START sets the minimum scale factor value to which can be zoomed out . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public final int count data types ( ) {
 return mdata types != null ? mdata types . size ( ) : DecimalInteger ;
 }
comment:
START return the number of data types in the filter . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is specified ( ) {
 return melement id != element_ e && dimensions >= DecimalInteger ;
 }
comment:
START returns true , if the frame type is fully specified . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public byte [ ] get data holder ( ) {
 return data ;
 }
comment:
START returns the array in which the data is held . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public transition add target ( class target type ) {
 if ( target type != null ) {
 if ( mtarget types == null ) {
 mtarget types = new array list < class > ( ) ;
 }
 mtarget types . add ( target type ) ;
 }
 return this ;
 }
comment:
START adds the class of a target view that this transition is interested in animating . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set mix ins ( map < class < ? > , class < ? > > mix ins ) {
 this . builder . mix ins ( mix ins ) ;
 }
comment:
START add UNK annotations to use for UNK specified class or interface . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public float get angle around rad ( final vector3 axis ) {
 return get angle around rad ( axis . x , axis . y , axis . z ) ;
 }
comment:
START get the angle in radians of the rotation around the specified axis . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
protected check [ ] get checks ( ) {
 return new check [ ] {
 new component scan package check ( ) }
 ;
 }
comment:
START returns the checks that should be applied . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected list < string > get candidate configurations ( annotation metadata metadata , annotation attributes attributes ) {
 list < string > configurations = spring factories loader . load factory names ( get spring factories loader factory class ( ) , get bean class loader ( ) ) ;
 assert . not empty ( configurations , String + String ) ;
 return configurations ;
 }
comment:
START return the UNK class names that should be considered . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
protected class < ? > get annotation class ( ) {
 return enable auto configuration . class ;
 }
comment:
START return the source annotation class used by the selector . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
public static string get ( request request , proxy . type proxy type ) {
 string builder result = new string builder ( ) ;
 result . append ( request . method ( ) ) ;
 result . append ( String ) ;
 if ( include authority in request line ( request , proxy type ) ) {
 result . append ( request . url ( ) ) ;
 }
 else {
 result . append ( request path ( request . url ( ) ) ) ;
 }
 result . append ( String ) ;
 return result . to string ( ) ;
 }
comment:
START returns the request status line , like `` get / http/1 .1 '' . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean contains value ( object value , boolean identity ) {
 v [ ] value table = this . value table ;
 if ( value == null ) {
 k [ ] key table = this . key table ;
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( key table [ i ] != null && value table [ i ] == null ) return true ;
 }
 else if ( identity ) {
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( value table [ i ] == value ) return true ;
 }
 else {
 for ( int i = capacity + stash size ;
 i -- > DecimalInteger ;
 ) if ( value . equals ( value table [ i ] ) ) return true ;
 }
 return false ;
 }
comment:
START returns true if the specified value is in the map . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether the given UNK is UNK .
sets whether the UNK UNK is UNK .
sets whether to UNK UNK UNK .
sets whether the given UNK is UNK , in the UNK .

code:
public create index request wait for active shards ( active shard count wait for active shards ) {
 this . wait for active shards = wait for active shards ;
 return this ;
 }
comment:
START sets the number of shard copies that should be active for index creation to return . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ non null public locale list get locales ( ) {
 fix up locale list ( ) ;
 return mlocale list ;
 }
comment:
START get the locale list . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ requires permission ( manifest . permission . h ) @ adapter state public int get state ( ) {
 int state = bluetooth adapter . state_ f ;
 try {
 mservice lock . read lock ( ) . lock ( ) ;
 if ( service != null ) {
 state = service . get state ( ) ;
 }
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 finally {
 mservice lock . read lock ( ) . unlock ( ) ;
 }
 if ( state == bluetooth adapter . state_ UNK n || state == bluetooth adapter . state_ UNK UNK n || state == bluetooth adapter . state_ UNK UNK f ) {
 if ( g ) log . d ( g , String ) ;
 state = bluetooth adapter . state_ f ;
 }
 if ( g ) log . d ( g , String + hash code ( ) + String + state ) ;
 return state ;
 }
comment:
START get the current state of the local bluetooth adapter . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get attribute value ( ) {
 return to string ( ) . to lower case ( ) ;
 }
comment:
START returns the attribute value that specifies this mode . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void add bar ( long id , long start , long stop , chart bar type type , boolean highlight , string label ) {
 chart row slot = add slot if absent ( id ) ;
 chart bar bar = new chart bar ( slot , start , stop , type , highlight , label ) ;
 slot . add bar ( bar ) ;
 max stop = math . max ( max stop , stop ) ;
 }
comment:
START adds a bar to a row of the chart . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public synchronized iterator < snapshot > snapshots ( ) throws exception {
 initialize ( ) ;
 return new iterator < snapshot > ( ) {
 final iterator < entry > delegate = new array list < > ( lru entries . values ( ) ) . iterator ( ) ;
 snapshot next snapshot ;
 snapshot remove snapshot ;
 @ override public boolean has next ( ) {
 if ( next snapshot != null ) return true ;
 synchronized ( disk lru cache . this ) {
 if ( closed ) return false ;
 while ( delegate . has next ( ) ) {
 entry entry = delegate . next ( ) ;
 snapshot snapshot = entry . snapshot ( ) ;
 if ( snapshot == null ) continue ;
 next snapshot = snapshot ;
 return true ;
 }
 }
 return false ;
 }
 @ override public snapshot next ( ) {
 if ( ! has next ( ) ) throw new no such element exception ( ) ;
 remove snapshot = next snapshot ;
 next snapshot = null ;
 return remove snapshot ;
 }
 @ override public void remove ( ) {
 if ( remove snapshot == null ) throw new illegal state exception ( String ) ;
 try {
 disk lru cache . this . remove ( remove snapshot . key ) ;
 }
 catch ( exception ignored ) {
 }
 finally {
 remove snapshot = null ;
 }
 }
 }
 ;
 }
comment:
START returns an iterator over the cache 's current entries . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
protected abstract byte [ ] get UNK ( server http request request ) ;
comment:
START get the UNK to write to the response before any other data . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public instrumentation spec with source attributes ( string ... instrumented attributes ) {
 return new instrumentation spec ( instrumented file types , immutable list . copy of ( instrumented attributes ) , dependency attributes , true ) ;
 }
comment:
START returns a new instrumentation spec with the given attribute names replacing the ones stored in this object . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private boolean is orientation angle UNK locked ( int rotation , int orientation angle ) {
 final int current rotation = mcurrent rotation ;
 if ( current rotation >= DecimalInteger ) {
 if ( rotation == current rotation || rotation == ( current rotation + DecimalInteger ) % DecimalInteger ) {
 int lower bound = rotation * DecimalInteger - DecimalInteger + UNK orientation_ UNK p / DecimalInteger ;
 if ( rotation == DecimalInteger ) {
 if ( orientation angle >= DecimalInteger && orientation angle < lower bound + DecimalInteger ) {
 return false ;
 }
 }
 else {
 if ( orientation angle < lower bound ) {
 return false ;
 }
 }
 }
 if ( rotation == current rotation || rotation == ( current rotation + DecimalInteger ) % DecimalInteger ) {
 int upper bound = rotation * DecimalInteger + DecimalInteger - UNK orientation_ UNK p / DecimalInteger ;
 if ( rotation == DecimalInteger ) {
 if ( orientation angle <= DecimalInteger && orientation angle > upper bound ) {
 return false ;
 }
 }
 else {
 if ( orientation angle > upper bound ) {
 return false ;
 }
 }
 }
 }
 return true ;
 }
comment:
START returns true if the orientation angle is acceptable for a given UNK rotation . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK UNK .

code:
public standalone mock mvc builder add mapped interceptors ( string [ ] path patterns , handler interceptor ... interceptors ) {
 for ( handler interceptor interceptor : interceptors ) {
 this . mapped interceptors . add ( new mapped interceptor ( path patterns , interceptor ) ) ;
 }
 return this ;
 }
comment:
START add interceptors mapped to a set of path patterns . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the UNK to the UNK .

code:
public extended stack trace element [ ] get extended stack trace ( ) {
 return this . extended stack trace ;
 }
comment:
START gets the stack trace including UNK information . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
@ override public boolean remove ( @ nullable object o ) {
 if ( o == null ) return false ;
 final e [ ] items = this . items ;
 final monitor monitor = this . monitor ;
 monitor . enter ( ) ;
 try {
 int i = take index ;
 int k = DecimalInteger ;
 for ( ;
 ;
 ) {
 if ( k ++ >= count ) return false ;
 if ( o . equals ( items [ i ] ) ) {
 remove at ( i ) ;
 return true ;
 }
 i = inc ( i ) ;
 }
 }
 finally {
 monitor . leave ( ) ;
 }
 }
comment:
START removes a single instance of the specified element from this queue , if it is present . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public bitmap create icon bitmap ( drawable icon ) {
 int width = micon width ;
 int height = micon height ;
 if ( icon instanceof paint drawable ) {
 paint drawable painter = ( paint drawable ) icon ;
 painter . set intrinsic width ( width ) ;
 painter . set intrinsic height ( height ) ;
 }
 else if ( icon instanceof bitmap drawable ) {
 bitmap drawable bitmap drawable = ( bitmap drawable ) icon ;
 bitmap bitmap = bitmap drawable . get bitmap ( ) ;
 if ( bitmap . get density ( ) == bitmap . density_ e ) {
 bitmap drawable . set target density ( mdisplay metrics ) ;
 }
 }
 int source width = icon . get intrinsic width ( ) ;
 int source height = icon . get intrinsic height ( ) ;
 if ( source width > DecimalInteger && source height > DecimalInteger ) {
 if ( width < source width || height < source height ) {
 final float ratio = ( float ) source width / source height ;
 if ( source width > source height ) {
 height = ( int ) ( width / ratio ) ;
 }
 else if ( source height > source width ) {
 width = ( int ) ( height * ratio ) ;
 }
 }
 else if ( source width < width && source height < height ) {
 width = source width ;
 height = source height ;
 }
 }
 int texture width = micon texture width ;
 int texture height = micon texture height ;
 final bitmap bitmap = bitmap . create bitmap ( texture width , texture height , bitmap . config . b_8888 ) ;
 final canvas canvas = canvas ;
 canvas . set bitmap ( bitmap ) ;
 final int left = ( texture width - width ) / DecimalInteger ;
 final int top = ( texture height - height ) / DecimalInteger ;
 if ( false ) {
 canvas . draw color ( colors [ mcolor index ] ) ;
 if ( ++ mcolor index >= colors . length ) mcolor index = DecimalInteger ;
 paint debug paint = new paint ( ) ;
 debug paint . set color ( UNK ) ;
 canvas . draw rect ( left , top , left + width , top + height , debug paint ) ;
 }
 mold bounds . set ( icon . get bounds ( ) ) ;
 icon . set bounds ( left , top , left + width , top + height ) ;
 icon . draw ( canvas ) ;
 icon . set bounds ( mold bounds ) ;
 return bitmap ;
 }
comment:
START returns a bitmap suitable for the all apps view . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
reference entry < k , v > get previous in write queue ( ) ;
comment:
START returns the previous entry in the write queue . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
@ non null public list < file > get resource folders ( @ non null project project ) {
 file res = new file ( project . get dir ( ) , UNK r ) ;
 if ( res . exists ( ) ) {
 return collections . singleton list ( res ) ;
 }
 return collections . empty list ( ) ;
 }
comment:
START returns the resource folders . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public int get state ( ) throws remote exception {
 throw on dead server ( ) ;
 return utils . transact get int ( method_ get_ e , state_ d ) ;
 }
comment:
START gets the current state of this clock 's common time service in the the master election algorithm . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get long ( int row , int column ) {
 acquire reference ( ) ;
 try {
 return native get long ( mwindow ptr , row - mstart pos , column ) ;
 }
 finally {
 release reference ( ) ;
 }
 }
comment:
START gets the value of the field at the specified row and column index as a long . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set data source ( context context , uri uri ) throws illegal argument exception , security exception {
 if ( uri == null ) {
 throw new illegal argument exception ( ) ;
 }
 string scheme = uri . get scheme ( ) ;
 if ( scheme == null || scheme . equals ( String ) ) {
 set data source ( uri . get path ( ) ) ;
 return ;
 }
 asset file descriptor fd = null ;
 try {
 content resolver resolver = context . get content resolver ( ) ;
 try {
 fd = resolver . open asset file descriptor ( uri , String ) ;
 }
 catch ( file not found exception e ) {
 throw new illegal argument exception ( ) ;
 }
 if ( fd == null ) {
 throw new illegal argument exception ( ) ;
 }
 file descriptor descriptor = fd . get file descriptor ( ) ;
 if ( ! descriptor . valid ( ) ) {
 throw new illegal argument exception ( ) ;
 }
 if ( fd . get declared length ( ) < DecimalInteger ) {
 set data source ( descriptor ) ;
 }
 else {
 set data source ( descriptor , fd . get start offset ( ) , fd . get declared length ( ) ) ;
 }
 return ;
 }
 catch ( security exception ex ) {
 }
 finally {
 try {
 if ( fd != null ) {
 fd . close ( ) ;
 }
 }
 catch ( exception io ex ) {
 }
 }
 set data source ( uri . to string ( ) ) ;
 }
comment:
START sets the data source as a content uri . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public builder read timeout ( long timeout , time unit unit ) {
 if ( timeout < DecimalInteger ) throw new illegal argument exception ( String ) ;
 if ( unit == null ) throw new null pointer exception ( String ) ;
 long millis = unit . to millis ( timeout ) ;
 if ( millis > integer . max_ e ) throw new illegal argument exception ( String ) ;
 if ( millis == DecimalInteger && timeout > DecimalInteger ) throw new illegal argument exception ( String ) ;
 read timeout = ( int ) millis ;
 return this ;
 }
comment:
START sets the default read timeout for new connections . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void scale by ( float scale ) {
 scale x += scale ;
 scale y += scale ;
 }
comment:
START adds the specified scale to the current scale . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set behind canvas transformer ( canvas transformer t ) {
 mview behind . set canvas transformer ( t ) ;
 }
comment:
START sets the behind canvas transformer . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public UNK line scatter candle bubble data set get data set by touch point ( float x , float y ) {
 highlight h = get highlight by touch point ( x , y ) ;
 if ( h != null ) {
 return data . get data set by index ( h . get data set index ( ) ) ;
 }
 return null ;
 }
comment:
START returns the data set object displayed at the touched position of the chart @param x @param y @return END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected void add property sources ( configurable environment environment , resource loader resource loader ) {
 random value property source . add to environment ( environment ) ;
 try {
 new loader ( environment , resource loader ) . load ( ) ;
 }
 catch ( exception ex ) {
 throw new illegal state exception ( String , ex ) ;
 }
 }
comment:
START add config file property sources to the specified environment . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the UNK to the UNK .

code:
private boolean can UNK locked ( ) {
 if ( UNK != UNK g || ! mdreams supported config || ! mdreams enabled setting || ! mdisplay power request . is UNK or dim ( ) || ( muser activity summary & ( user_ activity_ screen_ t | user_ activity_ screen_ m | user_ activity_ screen_ m ) ) == DecimalInteger || ! UNK completed ) {
 return false ;
 }
 if ( ! is being kept awake locked ( ) ) {
 if ( ! mis powered && ! mdreams enabled on battery config ) {
 return false ;
 }
 if ( ! mis powered && mdreams battery level minimum when not powered config >= DecimalInteger && mbattery level < mdreams battery level minimum when not powered config ) {
 return false ;
 }
 if ( mis powered && mdreams battery level minimum when powered config >= DecimalInteger && mbattery level < mdreams battery level minimum when powered config ) {
 return false ;
 }
 }
 return true ;
 }
comment:
START returns true if the device is allowed to dream in its current state . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
set whether to UNK UNK UNK .
sets whether the UNK is UNK to .
sets whether the UNK is UNK in the UNK .

code:
public void add settings changed callback ( location settings change callback cb ) {
 msettings change callbacks . add ( cb ) ;
 handler . send empty message ( h . msg_ location_ settings_ d ) ;
 }
comment:
START add a callback to listen for changes in location settings . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the UNK to the UNK .

code:
public abstract long compute battery screen off uptime ( long cur time , int which ) ;
comment:
START returns the total , last , or current battery screen off uptime in microseconds . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public stomp sub protocol error handler get error handler ( ) {
 return this . error handler ;
 }
comment:
START return the configured error handler . END
BLUE1:0.428571428571
--generate--
return the list of UNK UNK .
return the number of UNK UNK .
return the number of all UNK .
return the number of all UNK in this .
return the number of all UNK in the given .

code:
private string encode to string ( string in , int flags ) throws exception {
 string UNK = base64 . encode to string ( in . get bytes ( ) , flags ) ;
 string dec = decode string ( UNK ) ;
 assert equals ( in , dec ) ;
 return UNK ;
 }
comment:
START returns the encoded string . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set over scroll mode ( int over scroll mode ) {
 if ( over scroll mode != UNK scroll_ s && over scroll mode != UNK scroll_ if_ content_ s && over scroll mode != UNK scroll_ r ) {
 throw new illegal argument exception ( String + over scroll mode ) ;
 }
 UNK scroll mode = over scroll mode ;
 }
comment:
START set the UNK mode for this view . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
protected string get multipart resolver bean name ( ) {
 return this . multipart resolver bean name ;
 }
comment:
START return the bean name of the multipart resolver to fetch from spring 's root application context . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public final stream get stream ( ) {
 if ( this . UNK == null ) {
 this . UNK = build stream ( ) ;
 }
 return this . UNK ;
 }
comment:
START return the native UNK delegate used by this marshaller . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static int utf8 max bytes ( char sequence seq ) {
 return seq . length ( ) * max_ bytes_ per_ char_ f8 ;
 }
comment:
START returns max bytes length of utf8 character sequence . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public long force get value as long ( long default value ) {
 long [ ] l = get value as longs ( ) ;
 if ( l != null && l . length >= DecimalInteger ) {
 return l [ DecimalInteger ] ;
 }
 byte [ ] b = get value as bytes ( ) ;
 if ( b != null && b . length >= DecimalInteger ) {
 return b [ DecimalInteger ] ;
 }
 rational [ ] r = get value as UNK ( ) ;
 if ( r != null && r . length >= DecimalInteger && r [ DecimalInteger ] . get denominator ( ) != DecimalInteger ) {
 return ( long ) r [ DecimalInteger ] . to double ( ) ;
 }
 return default value ;
 }
comment:
START gets a long representation of the value . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public int get audio state ( bluetooth device device ) {
 if ( g ) log ( String ) ;
 if ( service != null && is enabled ( ) ) {
 try {
 return service . get audio state ( device ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , e . to string ( ) ) ;
 }
 }
 else {
 log . w ( g , String ) ;
 if ( g ) log . d ( g , log . get stack trace string ( new throwable ( ) ) ) ;
 }
 return bluetooth headset client . state_ audio_ d ;
 }
comment:
START returns current audio state of audio gateway . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static UNK method parameter for parameter ( parameter parameter ) {
 return for executable ( parameter . get declaring executable ( ) , find parameter index ( parameter ) ) ;
 }
comment:
START create a new UNK method parameter for the given parameter descriptor . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public rect get bounds ( ) {
 rect r = new rect ( ) ;
 native get bounds ( mnative region , r ) ;
 return r ;
 }
comment:
START return a new rect set to the bounds of the region . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public int get and increment ( k key , int default value , int increment ) {
 int hash code = key . hash code ( ) ;
 int index = hash code & mask ;
 if ( ! key . equals ( key table [ index ] ) ) {
 index = hash2 ( hash code ) ;
 if ( ! key . equals ( key table [ index ] ) ) {
 index = hash3 ( hash code ) ;
 if ( ! key . equals ( key table [ index ] ) ) return get and increment stash ( key , default value , increment ) ;
 }
 }
 int value = value table [ index ] ;
 value table [ index ] = value + increment ;
 return value ;
 }
comment:
START returns the key 's current value and increments the stored value . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private static brace status check for UNK closing brace ( @ not null editor editor , @ not null psi file file , @ not null move info info , boolean down ) {
 psi element closing brace = get standalone closing brace ( file , editor ) ;
 if ( closing brace == null ) return brace status . not_ d ;
 psi element block like element = closing brace . get parent ( ) ;
 if ( ! ( block like element instanceof kt block expression ) ) return brace status . not_ e ;
 psi element block parent = block like element . get parent ( ) ;
 if ( block parent instanceof kt when entry ) return brace status . not_ d ;
 if ( psi tree util . instance of ( block parent , UNK element_ s ) ) return brace status . not_ d ;
 psi element enclosing expression = psi tree util . get parent of type ( block like element , kt expression . class ) ;
 if ( enclosing expression instanceof kt do while expression ) return brace status . not_ e ;
 if ( enclosing expression instanceof kt if expression ) {
 kt if expression if expression = ( kt if expression ) enclosing expression ;
 if ( block like element == if expression . get then ( ) && if expression . get else ( ) != null ) return brace status . not_ e ;
 }
 return down ? check for UNK down closing brace ( closing brace , block like element , editor , info ) : check for UNK up closing brace ( closing brace , block like element , editor , info ) ;
 }
comment:
START returns null if UNK UNK UNK is not found END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK UNK that be UNK to the UNK .
returns the list of UNK UNK that be UNK to .

code:
public void add header ( string name , object value ) {
 if ( content_ type_ r . equals ignore case ( name ) ) {
 set content type ( ( string ) value ) ;
 return ;
 }
 do add header value ( name , value , false ) ;
 }
comment:
START add a header entry for the given name . END
BLUE1:0.428571428571
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
add the UNK to the given UNK .
sets the UNK of the given UNK .

code:
public t get actor ( ) {
 return ( t ) actor ;
 }
comment:
START returns the actor for this cell , or null . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public float array to array ( ) {
 float array array = new float array ( true , map . size ) ;
 while ( has next ) array . add ( next ( ) ) ;
 return array ;
 }
comment:
START returns a new array containing the remaining values . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
public float get mass ( ) {
 return jni get mass ( addr ) ;
 }
comment:
START get the total mass of the body . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public char remove index ( int index ) {
 if ( index >= size ) throw new index out of bounds exception ( String + index + String + size ) ;
 char [ ] items = this . items ;
 char value = items [ index ] ;
 size -- ;
 if ( ordered ) system . arraycopy ( items , index + DecimalInteger , items , index , size - index ) ;
 else items [ index ] = items [ size ] ;
 return value ;
 }
comment:
START removes and returns the item at the specified index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
public static < e extends comparable < ? super e > > immutable sorted multiset < e > copy of ( e [ ] elements ) {
 return copy of ( ordering . natural ( ) , arrays . as list ( elements ) ) ;
 }
comment:
START returns an immutable sorted multiset containing the given elements sorted by their natural ordering . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public static int select default theme ( int cur theme , int target sdk version ) {
 return select system theme ( cur theme , target sdk version , com . android . internal . r . style . theme , com . android . internal . r . style . theme_ UNK , com . android . internal . r . style . theme_ device default , com . android . internal . r . style . theme_ device default_ light_ UNK action bar ) ;
 }
comment:
START returns the most appropriate default theme for the specified target sdk version . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public legacy vpn info get legacy vpn info ( int user id ) {
 enforce cross user permission ( user id ) ;
 synchronized ( vpns ) {
 return vpns . get ( user id ) . get legacy vpn info ( ) ;
 }
 }
comment:
START return the information of the ongoing legacy vpn . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
private static view create menu item button ( context context , menu item menu item ) {
 if ( is icon only menu item ( menu item ) ) {
 view image menu item button = layout inflater . from ( context ) . inflate ( r . layout . UNK , null ) ;
 ( ( image button ) image menu item button . find view by id ( r . id . UNK ) ) . set image drawable ( menu item . get icon ( ) ) ;
 return image menu item button ;
 }
 button menu item button = ( button ) layout inflater . from ( context ) . inflate ( r . layout . UNK , null ) ;
 menu item button . set text ( menu item . get title ( ) ) ;
 menu item button . set content description ( menu item . get title ( ) ) ;
 return menu item button ;
 }
comment:
START creates and returns a menu button for the specified menu item . END
BLUE1:0.428571428571
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
@ override public realm field type get column type ( long column index ) {
 return realm field type . from native value ( native get column type ( native ptr , column index ) ) ;
 }
comment:
START gets the type of a column identified by the column index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get port or default ( int default port ) {
 return has port ( ) ? port : default port ;
 }
comment:
START returns the current port number , with a default if no port is defined . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static mime mappings unmodifiable mappings ( mime mappings mappings ) {
 return new mime mappings ( mappings , false ) ;
 }
comment:
START create a new unmodifiable view of the specified mapping . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
boolean is opaque drawn ( ) {
 return ( ( ! mis wallpaper && attrs . format == pixel format . e ) || ( mis wallpaper && UNK visible ) ) && is drawn lw ( ) && mwin animator . animation == null && ( mapp token == null || mapp token . mapp animator . animation == null ) ;
 }
comment:
START return true if the window is opaque and fully drawn . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public void add ( leaf atom atom ) {
 leaf children . add ( atom ) ;
 }
comment:
START adds a child leaf to this container . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
adds the UNK to the UNK to .
adds the UNK to the UNK to the UNK .

code:
public void set title ( @ string res int res id ) {
 set title ( get context ( ) . get text ( res id ) ) ;
 }
comment:
START set the title of this toolbar . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public static < t > predicate < t > or ( predicate < ? super t > ... components ) {
 return predicates . < t > or ( arrays . as list ( components ) ) ;
 }
comment:
START returns a predicate that evaluates to true iff any one of its components evaluates to true . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public option set arg name ( string arg name ) {
 objects . require non null ( arg name ) ;
 this . arg name = arg name ;
 return this ;
 }
comment:
START sets UNK arg name for this option . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static user handle get user handle for uid ( int uid ) {
 return of ( get user id ( uid ) ) ;
 }
comment:
START returns the user for a given uid . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static int [ ] filter public formats ( int [ ] formats ) {
 if ( formats == null ) {
 return null ;
 }
 int [ ] my copy = arrays . copy of ( formats , formats . length ) ;
 int size = DecimalInteger ;
 for ( int i = DecimalInteger ;
 i < my copy . length ;
 i ++ ) {
 if ( is public encoding ( my copy [ i ] ) ) {
 if ( size != i ) {
 my copy [ size ] = my copy [ i ] ;
 }
 size ++ ;
 }
 }
 return arrays . copy of ( my copy , size ) ;
 }
comment:
START returns an array of public encoding values extracted from an array of encoding values . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static boolean set active scorer ( context context , string package name ) {
 string old package name = settings . global . get string ( context . get content resolver ( ) , settings . global . network_ UNK p ) ;
 if ( text utils . equals ( old package name , package name ) ) {
 return true ;
 }
 log . i ( g , String + old package name + String + package name ) ;
 if ( package name == null ) {
 settings . global . put string ( context . get content resolver ( ) , settings . global . network_ UNK p , null ) ;
 return true ;
 }
 else {
 if ( get scorer ( context , package name ) != null ) {
 settings . global . put string ( context . get content resolver ( ) , settings . global . network_ UNK p , package name ) ;
 return true ;
 }
 else {
 log . w ( g , String + package name ) ;
 return false ;
 }
 }
 }
comment:
START set the specified package as the default scorer application . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given view .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public transition add target ( int target id ) {
 if ( target id > DecimalInteger ) {
 mtarget ids . add ( target id ) ;
 }
 return this ;
 }
comment:
START adds the id of a target view that this transition is interested in animating . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public int get view horizontal drag range ( view child ) {
 return DecimalInteger ;
 }
comment:
START return the magnitude of a draggable child view 's horizontal range of motion in pixels . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static final int get meta state ( long state , int meta ) {
 switch ( meta ) {
 case meta_ shift_ n : if ( ( state & meta_ cap_ d ) != DecimalInteger ) return locked_ return_ e ;
 if ( ( state & meta_ shift_ n ) != DecimalInteger ) return pressed_ return_ e ;
 return DecimalInteger ;
 case meta_ alt_ n : if ( ( state & meta_ alt_ d ) != DecimalInteger ) return locked_ return_ e ;
 if ( ( state & meta_ alt_ n ) != DecimalInteger ) return pressed_ return_ e ;
 return DecimalInteger ;
 case meta_ sym_ n : if ( ( state & meta_ sym_ d ) != DecimalInteger ) return locked_ return_ e ;
 if ( ( state & meta_ sym_ n ) != DecimalInteger ) return pressed_ return_ e ;
 return DecimalInteger ;
 default : return DecimalInteger ;
 }
 }
comment:
START gets the state of a particular meta key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public nested set < artifact > get merge zips ( ) {
 return merge zips ;
 }
comment:
START returns all zip files whose contents should be merged into this bundle under the main bundle directory . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public static int get animation count ( ) {
 animation handler handler = UNK handler . get ( ) ;
 if ( handler == null ) {
 return DecimalInteger ;
 }
 return handler . get callback size ( ) ;
 }
comment:
START return the number of callbacks that have registered for frame callbacks . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public static void add filter library ( string library path ) {
 if ( mlog verbose ) log . v ( g , String + library path ) ;
 synchronized ( mclass loader guard ) {
 if ( libraries . contains ( library path ) ) {
 if ( mlog verbose ) log . v ( g , String ) ;
 return ;
 }
 libraries . add ( library path ) ;
 mcurrent class loader = new path class loader ( library path , mcurrent class loader ) ;
 }
 }
comment:
START adds a new java library to the list to be UNK for filters . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static drawable get default user icon ( int user id , boolean light ) {
 int color res id = light ? r . color . UNK : r . color . UNK ;
 if ( user id != user handle . user_ l ) {
 color res id = user_ icon_ s [ user id % user_ icon_ s . length ] ;
 }
 drawable icon = resources . get system ( ) . get drawable ( r . drawable . UNK , null ) . mutate ( ) ;
 icon . set color filter ( resources . get system ( ) . get color ( color res id , null ) , mode . src_ n ) ;
 icon . set bounds ( DecimalInteger , DecimalInteger , icon . get intrinsic width ( ) , icon . get intrinsic height ( ) ) ;
 return icon ;
 }
comment:
START returns a default user icon for the given user . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public static overridden module builder override ( iterable < ? extends module > modules ) {
 return new real overridden module builder ( modules ) ;
 }
comment:
START returns a builder that creates a module that overlays override modules over the given modules . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public boolean is UNK text ( ) {
 check focus ( ) ;
 return mserved input connection wrapper != null && mserved input connection wrapper . get input connection ( ) != null ;
 }
comment:
START return true if the currently served view is UNK full text edits . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public final vec2 get local center ( ) {
 return m_sweep . local center ;
 }
comment:
START get the local position of the center of mass . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public protobuf support add files to build ( nested set builder < artifact > files to build ) {
 for ( immutable set < artifact > input proto files : inputs to outputs map . key set ( ) ) {
 immutable set < artifact > output proto files = inputs to outputs map . get ( input proto files ) ;
 iterable < artifact > generated sources = get generated proto outputs ( output proto files , String ) ;
 iterable < artifact > generated headers = get generated proto outputs ( output proto files , String ) ;
 files to build . add all ( generated sources ) . add all ( generated headers ) ;
 }
 int action id = DecimalInteger ;
 for ( immutable set < artifact > input protos : inputs to outputs map . key set ( ) ) {
 immutable set < artifact > output protos = inputs to outputs map . get ( input protos ) ;
 intermediate artifacts intermediate artifacts = get unique intermediate artifacts ( action id ) ;
 compilation artifacts compilation artifacts = get compilation artifacts ( intermediate artifacts , input protos , output protos ) ;
 objc common common = get common ( intermediate artifacts , compilation artifacts ) ;
 files to build . add all ( common . get compiled archive ( ) . as set ( ) ) ;
 action id ++ ;
 }
 return this ;
 }
comment:
START adds the generated files to the set of files to be output when this rule is built . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of all UNK .
returns the list of UNK UNK to the given UNK .

code:
public void add group ( task grouping group ) {
 groups . add ( group ) ;
 UNK groups . put ( group . UNK , group ) ;
 }
comment:
START adds a group to the set END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public vector2 get world point ( vector2 local point ) {
 tmp . set ( local point . x , local point . y ) ;
 vec2 wp = body . get world point ( tmp ) ;
 return world point . set ( wp . x , wp . y ) ;
 }
comment:
START get the world coordinates of a point given the local coordinates . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
@ system api public int get all flags ( ) {
 return ( flags & flag_ l ) ;
 }
comment:
START return all the flags , even the UNK ones . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public web http handler builder exception handlers ( web exception handler ... exception handlers ) {
 if ( ! object utils . is empty ( exception handlers ) ) {
 this . exception handlers . add all ( arrays . as list ( exception handlers ) ) ;
 }
 return this ;
 }
comment:
START add the given exception handler to apply at the end of request processing . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK to the UNK .

code:
public long get upper bound at ( final int index ) {
 return upper bounds [ index ] ;
 }
comment:
START get the upper bound of an interval for an index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static uri parse ( string uri string ) {
 return new string uri ( uri string ) ;
 }
comment:
START creates a uri which UNK the given encoded uri string . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static int get true ifd ( int tag ) {
 return tag > > > DecimalInteger ;
 }
comment:
START returns the default ifd for a tag constant . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
@ deprecated public static date get date header ( http message message , char sequence name , date default value ) {
 final string value = get header ( message , name ) ;
 if ( value == null ) {
 return default value ;
 }
 try {
 return http header date format . get ( ) . parse ( value ) ;
 }
 catch ( parse exception ignored ) {
 return default value ;
 }
 }
comment:
START returns the date header value with the specified header name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public static element create vector ( render script rs , data type dt , int size ) {
 if ( size < DecimalInteger || size > DecimalInteger ) {
 throw new rsillegal argument exception ( String ) ;
 }
 switch ( dt ) {
 case UNK : case UNK : case UNK : case UNK : case UNK : case UNK : case UNK : case UNK : case UNK : case UNK : case UNK : case n : {
 data kind dk = data kind . r ;
 boolean norm = false ;
 long id = rs . UNK create ( dt . d , dk . d , norm , size ) ;
 return new element ( id , rs , dt , dk , norm , size ) ;
 }
 default : {
 throw new rsillegal argument exception ( String + String ) ;
 }
 }
 }
comment:
START create a custom vector element of the specified data type and vector size . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public json value get ( string name ) {
 json value current = child ;
 while ( current != null && ! current . name . equals ignore case ( name ) ) current = current . next ;
 return current ;
 }
comment:
START returns the child with the specified name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean remove index ( int index ) {
 if ( index >= size ) throw new index out of bounds exception ( String + index + String + size ) ;
 boolean [ ] items = this . items ;
 boolean value = items [ index ] ;
 size -- ;
 if ( ordered ) system . arraycopy ( items , index + DecimalInteger , items , index , size - index ) ;
 else items [ index ] = items [ size ] ;
 return value ;
 }
comment:
START removes and returns the item at the specified index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
max bytes UNK byte buf allocator max bytes per read ( int max bytes per read ) ;
comment:
START sets the maximum number of bytes to read per read loop . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public iterable < artifact > get runtime class path for archive ( ) {
 iterable < artifact > runtime classpath = get runtime class path ( ) ;
 if ( get excluded artifacts ( ) . is empty ( ) ) {
 return runtime classpath ;
 }
 else {
 return iterables . filter ( runtime classpath , predicates . not ( predicates . in ( get excluded artifacts ( ) . to set ( ) ) ) ) ;
 }
 }
comment:
START returns the classpath artifacts needed in a deploy jar for this target . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int get phone type ( ) {
 if ( ! is voice capable ( ) ) {
 return phone_ type_ e ;
 }
 return get current phone type ( ) ;
 }
comment:
START returns a constant indicating the device phone type . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean get baseline align bottom ( ) {
 return UNK align bottom ;
 }
comment:
START return whether this view 's baseline will be considered the bottom of the view . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public observable < boolean > is network used ( ) {
 return repository . network in use ( ) . distinct until changed ( ) ;
 }
comment:
START returns the current state of network usage . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static < t > operator merge < t > instance ( boolean delay errors , int max concurrent ) {
 if ( max concurrent <= DecimalInteger ) {
 throw new illegal argument exception ( String + max concurrent ) ;
 }
 if ( max concurrent == integer . max_ e ) {
 return instance ( delay errors ) ;
 }
 return new operator merge < t > ( delay errors , max concurrent ) ;
 }
comment:
START creates a new instance of the operator with the given delay error and max concurrency settings . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
private static void add sticky footer divider ( context ctx , view group footer view ) {
 linear layout divider = new linear layout ( ctx ) ;
 linear layout . layout params divider params = new linear layout . layout params ( view group . layout params . match_ t , view group . layout params . wrap_ t ) ;
 divider . set minimum height ( ( int ) utils . convert dp to pixel ( DecimalInteger , ctx ) ) ;
 divider . set orientation ( linear layout . l ) ;
 divider . set background color ( utils . get theme color from attr or res ( ctx , r . attr . UNK , r . color . UNK ) ) ;
 footer view . add view ( divider , divider params ) ;
 }
comment:
START adds the shadow to the sticky footer @param UNK @param footer view END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static type get type ( final constructor < ? > c ) {
 return get type ( get constructor descriptor ( c ) ) ;
 }
comment:
START returns the java method type corresponding to the given constructor . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public final boolean add connection ( connection connection ) {
 log . d ( this , String , connection ) ;
 if ( connection != null && ! mchild connections . contains ( connection ) ) {
 if ( connection . set conference ( this ) ) {
 mchild connections . add ( connection ) ;
 on connection added ( connection ) ;
 for ( listener l : listeners ) {
 l . on connection added ( this , connection ) ;
 }
 return true ;
 }
 }
 return false ;
 }
comment:
START adds the specified connection as a child of this conference . END
BLUE1:0.428571428571
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public int get validation mode ( ) {
 return this . validation mode ;
 }
comment:
START return the validation mode to use . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
private static long init nano time ( long timeout nanos ) {
 if ( timeout nanos <= DecimalInteger ) {
 return DecimalInteger ;
 }
 else {
 long start time = system . nano time ( ) ;
 return ( start time == DecimalInteger ) ? DecimalInteger : start time ;
 }
 }
comment:
START returns NUMBER if and only if the timeout has already elapsed . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int remove index ( int index ) {
 if ( index >= size ) throw new index out of bounds exception ( String + index + String + size ) ;
 byte [ ] items = this . items ;
 int value = items [ index ] ;
 size -- ;
 if ( ordered ) system . arraycopy ( items , index + DecimalInteger , items , index , size - index ) ;
 else items [ index ] = items [ size ] ;
 return value ;
 }
comment:
START removes and returns the item at the specified index . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
list < cluster > get all clusters ( string ... regions ) ;
comment:
START gets the list of clusters in a list of regions . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given file .
returns the UNK of the UNK UNK .

code:
public model and view container add attribute ( object value ) {
 get model ( ) . add attribute ( value ) ;
 return this ;
 }
comment:
START add the supplied attribute to the underlying model . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public string get destination name ( ) {
 return ( this . destination instanceof string ? ( string ) this . destination : null ) ;
 }
comment:
START return the name of the destination to receive messages from . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
static < t > unmodifiable iterator < t > empty iterator ( ) {
 return empty list iterator ( ) ;
 }
comment:
START returns the empty iterator . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public void set autowire ( string autowire ) {
 this . autowire = autowire ;
 }
comment:
START set the default autowire setting for the document that 's currently parsed . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
@ override public synchronized boolean is closed ( ) {
 return mbitmap reference == null ;
 }
comment:
START returns whether this instance is closed . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
set whether to UNK UNK UNK .
sets whether to UNK the UNK .

code:
int length ( ) {
 return dynamic table . length ( ) ;
 }
comment:
START return the number of header fields in the dynamic table . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set adapter ( expandable list adapter adapter ) {
 adapter = adapter ;
 if ( adapter != null ) {
 connector = new expandable list connector ( adapter ) ;
 }
 else {
 connector = null ;
 }
 super . set adapter ( connector ) ;
 }
comment:
START sets the adapter that provides data to this view . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public abstract xml resource parser get xml ( string package name , @ xml res int resid , application info app info ) ;
comment:
START returns null if the xml resource could not be found for any reason . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
protected string get entity manager factory bean name ( ) {
 return this . entity manager factory bean name ;
 }
comment:
START return the bean name of the entity manager factory to fetch from spring 's root application context . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public int get current selected position ( ) {
 return mdrawer builder . adapter . get selections ( ) . size ( ) == DecimalInteger ? - DecimalInteger : mdrawer builder . adapter . get selections ( ) . iterator ( ) . next ( ) ;
 }
comment:
START get the current position of the selected drawer element @return END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public synchronized long get long ( int key , long default value ) throws illegal argument exception {
 if ( metadata_ keys_ e . get ( key , metadata_ type_ d ) != metadata_ type_ g ) {
 throw ( new illegal argument exception ( String + key ) ) ;
 }
 return UNK metadata . get long ( string . value of ( key ) , default value ) ;
 }
comment:
START returns the long value for the key . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final method get aspect UNK method ( ) {
 return this . aspect UNK method ;
 }
comment:
START return the aspect UNK advice method . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set window id ( int window id ) {
 msource window id = window id ;
 }
comment:
START sets the window id . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public static string find address ( string addr ) {
 return get factory ( ) . get UNK ( ) . find address ( addr ) ;
 }
comment:
START gets the first substring consisting of the address of a physical location . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void on gnss navigation message received ( gnss navigation message event event ) {
 }
comment:
START returns the latest collected gnss navigation message . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set scroll y ( int value ) {
 scroll to ( mscroll x , value ) ;
 }
comment:
START set the vertical scrolled position of your view . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public string encoded password ( ) {
 if ( password . is empty ( ) ) return String ;
 int password start = url . index of ( String , scheme . length ( ) + DecimalInteger ) + DecimalInteger ;
 int password end = url . index of ( String ) ;
 return url . substring ( password start , password end ) ;
 }
comment:
START returns the password , or an empty string if none is set . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static internal logger factory get default factory ( ) {
 return default factory ;
 }
comment:
START returns the default factory . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public static skylark module get top level module ( ) {
 return top level module . class . get annotation ( skylark module . class ) ;
 }
comment:
START returns the skylark module annotation for the top-level skylark module . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public nested set < symlink entry > get root symlinks ( ) {
 return root symlinks ;
 }
comment:
START returns the root symlinks . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public url path helper get url path helper ( ) {
 return url path helper ;
 }
comment:
START return the url path helper implementation to use for resolution of lookup paths . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
@ non null public location get location ( @ non null node node ) {
 return parser . get location ( this , node ) ;
 }
comment:
START returns the location for the given node , which may be an element or an attribute . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set values ( property values holder ... values ) {
 int num values = values . length ;
 values = values ;
 mvalues map = new hash map < string , property values holder > ( num values ) ;
 for ( int i = DecimalInteger ;
 i < num values ;
 ++ i ) {
 property values holder values holder = values [ i ] ;
 mvalues map . put ( values holder . get property name ( ) , values holder ) ;
 }
 initialized = false ;
 }
comment:
START sets the values , per property , being animated between . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
private motion event get transformed motion event ( motion event event , view child ) {
 final float offset x = mscroll x - child . left ;
 final float offset y = mscroll y - child . top ;
 final motion event transformed event = motion event . obtain ( event ) ;
 transformed event . offset location ( offset x , offset y ) ;
 if ( ! child . has identity matrix ( ) ) {
 transformed event . transform ( child . get inverse matrix ( ) ) ;
 }
 return transformed event ;
 }
comment:
START returns a motion event that 's been transformed into the child 's local coordinates . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public UNK build phase build ( ) {
 UNK build phase build phase = new UNK build phase ( ) ;
 for ( file reference reference : file references ) {
 UNK reference file ref = file reference cache . get ( reference ) ;
 build phase . get files ( ) . add ( new UNK file ( file ref ) ) ;
 file to main group references . put ( reference , file ref ) ;
 }
 return build phase ;
 }
comment:
START returns a new build phase containing the added libraries . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public object get target object ( ) {
 return this . target object ;
 }
comment:
START return the target object on which to call the target method . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public link target type get link type ( ) {
 return this . link type ;
 }
comment:
START returns the type of the linking of this target . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
private static int merge maps ( map < string , integer > map , map < string , integer > other ) {
 int delta size = DecimalInteger ;
 for ( map . entry < string , integer > entry : other . entry set ( ) ) {
 if ( ! map . contains key ( entry . get key ( ) ) ) {
 delta size += entry . get key ( ) . get bytes ( ) . length + size_ of_ t ;
 }
 map . put ( entry . get key ( ) , map . get or default ( entry . get key ( ) , DecimalInteger ) + other . get or default ( entry . get key ( ) , DecimalInteger ) ) ;
 }
 return delta size ;
 }
comment:
START returns the estimated memory UNK in map END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in any .
returns the UNK for the given UNK , in the UNK .

code:
public void remove active admin ( @ non null component name admin ) {
 throw if parent instance ( String ) ;
 if ( service != null ) {
 try {
 service . remove active admin ( admin , my user id ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
 }
comment:
START remove a current UNK component . END
BLUE1:0.428571428571
--generate--
remove the UNK of the UNK .
returns the list of UNK UNK .
remove the UNK of the given UNK .
remove the UNK of the given file .
returns the list of UNK UNK

code:
< t > t get bean ( class < t > required type , object ... args ) throws beans exception ;
comment:
START return an instance , which may be shared or independent , of the specified bean . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static string escape label ( label label ) {
 return path_ r . escape ( label . get package name ( ) + String + label . get name ( ) ) ;
 }
comment:
START returns a string that is UNK as a unique path component for a label . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public set < string > get names for suffix ( string name suffix ) {
 string suffix to use = ( name suffix != null ? name suffix . trim ( ) . to upper case ( locale . h ) : String ) ;
 set < string > names = new hash set < > ( ) ;
 for ( string code : this . field cache . key set ( ) ) {
 if ( code . ends with ( suffix to use ) ) {
 names . add ( code ) ;
 }
 }
 return names ;
 }
comment:
START return all names of the given group of constants . END
BLUE1:0.428571428571
--generate--
returns the value of the UNK .
returns the value for the given index .
returns the value of the UNK UNK .
returns the value of the given UNK .
returns the value for the given UNK .

code:
public int do read ( byte [ ] b , int off , int len ) throws exception {
 if ( len == DecimalInteger ) {
 return DecimalInteger ;
 }
 int UNK len = cap ( len ) ;
 if ( UNK len <= DecimalInteger ) {
 return - DecimalInteger ;
 }
 random access file file = this . file ;
 if ( file == null ) {
 file = random access data file . this . file pool . acquire ( ) ;
 file . seek ( random access data file . this . offset + this . position ) ;
 }
 try {
 if ( b == null ) {
 int rtn = file . read ( ) ;
 move on ( rtn == - DecimalInteger ? DecimalInteger : DecimalInteger ) ;
 return rtn ;
 }
 else {
 return ( int ) move on ( file . read ( b , off , UNK len ) ) ;
 }
 }
 finally {
 if ( this . file == null ) {
 random access data file . this . file pool . release ( file ) ;
 }
 }
 }
comment:
START returns -1 when the end of the stream is reached @throws ioexception in case of i/ o errors END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set subtitle ( char sequence subtitle ) {
 if ( ! text utils . is empty ( subtitle ) ) {
 if ( msubtitle text view == null ) {
 final context context = get context ( ) ;
 msubtitle text view = new text view ( context ) ;
 msubtitle text view . set single line ( ) ;
 msubtitle text view . set ellipsize ( text utils . truncate at . d ) ;
 if ( msubtitle text appearance != DecimalInteger ) {
 msubtitle text view . set text appearance ( msubtitle text appearance ) ;
 }
 if ( msubtitle text color != DecimalInteger ) {
 msubtitle text view . set text color ( msubtitle text color ) ;
 }
 }
 if ( ! is child or hidden ( msubtitle text view ) ) {
 add system view ( msubtitle text view , true ) ;
 }
 }
 else if ( msubtitle text view != null && is child or hidden ( msubtitle text view ) ) {
 remove view ( msubtitle text view ) ;
 UNK views . remove ( msubtitle text view ) ;
 }
 if ( msubtitle text view != null ) {
 msubtitle text view . set text ( subtitle ) ;
 }
 msubtitle text = subtitle ;
 }
comment:
START set the subtitle of this toolbar . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public explain request builder set routing ( string routing ) {
 request ( ) . routing ( routing ) ;
 return this ;
 }
comment:
START sets the routing for sharding . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set range info ( range info range info ) {
 enforce not sealed ( ) ;
 UNK info = range info ;
 }
comment:
START sets the range info if this node is a range . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public locale locale ( ) {
 return this . settings . locale ( ) ;
 }
comment:
START returns the locale for parsing terms for this query . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set cmd id ( options cmd id cmd id ) {
 this . mcmd id = cmd id ;
 }
comment:
START sets the options command id . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public message header initializer get header initializer ( ) {
 return this . header initializer ;
 }
comment:
START return the configured header initializer . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the list of UNK .
return the number of UNK .
return the number of all UNK .

code:
public static < e extends comparable < ? super e > > immutable sorted set < e > copy of ( e [ ] elements ) {
 return construct ( ordering . natural ( ) , elements . length , elements . clone ( ) ) ;
 }
comment:
START returns an immutable sorted set containing the given elements sorted by their natural ordering . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public static matcher < class > in package ( final package target package ) {
 return new in package ( target package ) ;
 }
comment:
START returns a matcher which matches classes in the given package . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public void load rotate ( float rot ) {
 float c , s ;
 rot *= ( float ) ( java . lang . math . i / DecimalFloatingPoint ) ;
 c = ( float ) java . lang . math . cos ( rot ) ;
 s = ( float ) java . lang . math . sin ( rot ) ;
 mat [ DecimalInteger ] = c ;
 mat [ DecimalInteger ] = - s ;
 mat [ DecimalInteger ] = s ;
 mat [ DecimalInteger ] = c ;
 }
comment:
START sets current values to be a rotation matrix of given angle @param UNK rotation angle END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public final thread factory get thread factory ( ) {
 return this . thread factory ;
 }
comment:
START return the external factory to use for creating new threads , if any . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the list of UNK UNK .
return the number of UNK .
return the list of UNK .
return the number of all UNK .

code:
public session factory get session factory ( ) {
 return this . session factory ;
 }
comment:
START return the session factory that this instance should manage transactions for . END
BLUE1:0.428571428571
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public android resources provider to provider ( label label ) {
 if ( UNK ) {
 return resource dependencies . empty ( ) . to provider ( label ) ;
 }
 return android resources provider . create ( label , transitive resources , direct resources ) ;
 }
comment:
START create a new android resources provider from the dependencies of this library . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public static float buffer new float buffer ( int capacity ) {
 return new read write float array buffer ( capacity ) ;
 }
comment:
START returns a new array based float buffer with the specified capacity . END
BLUE1:0.428571428571
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ deprecated default list < string > get raw values ( option option ) {
 return get raw values for option ( option ) ;
 }
comment:
START gets the raw values of the given option . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public float get scale ( ) {
 return mcurrent magnification spec . scale ;
 }
comment:
START returns the magnification scale . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
public update request doc ( string field , object value ) {
 safe doc ( ) . source ( field , value ) ;
 return this ;
 }
comment:
START sets the doc to use for updates when a script is not specified . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public file descriptor child ( string name ) {
 if ( file . get path ( ) . length ( ) == DecimalInteger ) return new file descriptor ( new file ( name ) , type ) ;
 return new file descriptor ( new file ( file , name ) , type ) ;
 }
comment:
START returns a handle to the child with the specified name . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK UNK

code:
@ override public quality info get quality info ( ) {
 return immutable quality info . full_ y ;
 }
comment:
START returns quality information for the image . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set environment ( environment gl environment ) {
 context . init environment ( gl environment ) ;
 }
comment:
START set the environment 's gl environment to the specified environment . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public immutable map < service , long > startup times ( ) {
 return state . startup times ( ) ;
 }
comment:
START returns the service load times . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public list < dependency < ? > > get dependencies ( ) {
 return dependencies ;
 }
comment:
START returns the dependencies for this injection point . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public boolean is cancelled ( ) {
 return get info ( ) . get state ( ) == print job info . state_ d ;
 }
comment:
START gets whether this print job is cancelled . END
BLUE1:0.428571428571
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the UNK .

code:
@ deprecated public static void set date header ( http message message , char sequence name , date value ) {
 if ( value != null ) {
 message . headers ( ) . set ( name , http header date format . get ( ) . format ( value ) ) ;
 }
 else {
 message . headers ( ) . set ( name , null ) ;
 }
 }
comment:
START sets a new date header with the specified name and value . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
float metrics ( font metrics int fmi ) {
 return measure ( len , false , fmi ) ;
 }
comment:
START returns metrics information for the entire line . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public path get exec root ( ) {
 return directories . get exec root ( ) ;
 }
comment:
START returns the execution root directory associated with this blaze server process . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public builder set message ( @ string res int message id ) {
 p . message = p . context . get text ( message id ) ;
 return this ;
 }
comment:
START set the message to display using the given resource id . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set switch text on ( @ string res int res id ) {
 set switch text on ( get context ( ) . get string ( res id ) ) ;
 }
comment:
START set the text displayed on the switch widget in the on state . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
@ user id int public int get user handle ( ) {
 return user handle . my user id ( ) ;
 }
comment:
START returns the user handle for the user that this process is running under . END
BLUE1:0.428571428571
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ gen ignore multi map set ( string name , iterable < string > values ) ;
comment:
START sets values for the specified name . END
BLUE1:0.428571428571
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public array list < app entry > rebuild ( app filter filter , comparator < app entry > comparator ) {
 return rebuild ( filter , comparator , true ) ;
 }
comment:
START creates a new list of app entries with the given filter and comparator . END
BLUE1:0.416666666667
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given file .

code:
@ beta public final single < t > delay subscription ( observable < ? > other ) {
 if ( other == null ) {
 throw new null pointer exception ( ) ;
 }
 return create ( new single on subscribe delay subscription other < t > ( this , other ) ) ;
 }
comment:
START returns a single that delays the subscription to this single until the observable completes . END
BLUE1:0.416666666667
--generate--
returns a immutable array of the values for the given file .
returns a immutable array of the values .
returns a immutable array of the values for the given type .
returns a immutable array of the values for the given UNK .
returns a immutable array of the UNK .

code:
public abstract void add on menu visibility listener ( on menu visibility listener listener ) ;
comment:
START add a listener that will respond to menu visibility change events . END
BLUE1:0.416666666667
--generate--
sets the listener that will be added to the given UNK .
sets the listener that will be used to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be added to the UNK .
sets the listener that will be used to the UNK of the given .

code:
public abstract void add on menu visibility listener ( on menu visibility listener listener ) ;
comment:
START add a listener that will respond to menu visibility change events . END
BLUE1:0.416666666667
--generate--
sets the listener that will be added to the given UNK .
sets the listener that will be used to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be added to the UNK .
sets the listener that will be used to the UNK of the given .

code:
public bulk index by scroll response matcher failures ( matcher < integer > failures matcher ) {
 this . failures matcher = failures matcher ;
 return this ;
 }
comment:
START set the matcher for the size of the failures list . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cache control stale if error ( long stale if error , time unit unit ) {
 this . stale if error = unit . to seconds ( stale if error ) ;
 return this ;
 }
comment:
START add a `` UNK '' directive . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cc library helper add link action input ( artifact input ) {
 preconditions . check not null ( input ) ;
 this . link action inputs . add ( input ) ;
 return this ;
 }
comment:
START adds the given artifact to the input of any generated link actions . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public address resolver options set max queries ( int max queries ) {
 if ( max queries < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . max queries = max queries ;
 return this ;
 }
comment:
START set the maximum number of queries when an hostname is resolved . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set uri ( @ non null uri uri ) {
 if ( uri == null ) {
 throw new illegal argument exception ( String ) ;
 }
 this . uri = uri ;
 this . resource id = DecimalInteger ;
 return this ;
 }
comment:
START set the target image uri . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public matrix4 trn ( float x , float y , float z ) {
 val [ m03 ] += x ;
 val [ m13 ] += y ;
 val [ m23 ] += z ;
 return this ;
 }
comment:
START adds a translational component to the matrix in the NUMBER column . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public address resolver options set search domains ( list < string > search domains ) {
 this . search domains = search domains ;
 return this ;
 }
comment:
START set the lists of dns search domains . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public auth filter builder < c , p , t > set prefix ( string prefix ) {
 this . prefix = prefix ;
 return this ;
 }
comment:
START sets the given prefix @param prefix a prefix @return the current builder END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public more like this query builder max doc freq ( int max doc freq ) {
 this . max doc freq = max doc freq ;
 return this ;
 }
comment:
START set the maximum frequency in which words may still appear . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set smooth scrolling enabled ( boolean smooth scrolling enabled ) {
 UNK scrolling enabled = smooth scrolling enabled ;
 }
comment:
START set whether arrow scrolling will animate its transition . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of the user .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder set state ( @ state int state , long position , float playback speed , long update time ) {
 state = state ;
 position = position ;
 mupdate time = update time ;
 speed = playback speed ;
 return this ;
 }
comment:
START set the current state of playback . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public url device builder set private ( ) {
 add extra ( UNK y , false ) ;
 return this ;
 }
comment:
START set the public key to false . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public void set native connection necessary for native statements ( boolean native connection necessary for native statements ) {
 this . native connection necessary for native statements = native connection necessary for native statements ;
 }
comment:
START set whether it is necessary to work on the native connection to receive native statements . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK to be used for the UNK .
sets the UNK to be used to the UNK .
sets the UNK to be used to the UNK of the UNK .

code:
public builder set cancelable ( boolean cancelable ) {
 p . cancelable = cancelable ;
 return this ;
 }
comment:
START sets whether the dialog is UNK or not . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public transition set remove transition ( transition transition ) {
 transitions . remove ( transition ) ;
 transition . parent = null ;
 return this ;
 }
comment:
START removes the specified child transition from this set . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public address resolver options set cache negative time to live ( int cache negative time to live ) {
 if ( cache negative time to live < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . cache negative time to live = cache negative time to live ;
 return this ;
 }
comment:
START set the negative cache ttl value in seconds . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set fixed rate ( boolean fixed rate ) {
 this . fixed rate = fixed rate ;
 }
comment:
START set whether to schedule as fixed-rate execution , rather than UNK execution . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public builder set paint ( text paint paint ) {
 paint = paint ;
 return this ;
 }
comment:
START set the paint . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
@ override public indices shard stores request indices ( string ... indices ) {
 this . indices = indices ;
 return this ;
 }
comment:
START sets the indices for the shard stores request END
BLUE1:0.4
--generate--
sets the UNK UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public void set hessian2 ( boolean hessian2 ) {
 this . proxy factory . set hessian2 request ( hessian2 ) ;
 this . proxy factory . set hessian2 reply ( hessian2 ) ;
 }
comment:
START set whether version NUMBER of the hessian protocol should be used for parsing requests and replies . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public close index request builder set indices ( string ... indices ) {
 request . indices ( indices ) ;
 return this ;
 }
comment:
START sets the indices to be closed @param indices the indices to be closed @return the request itself END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public drawer builder with drawer width px ( int drawer width px ) {
 this . mdrawer width = drawer width px ;
 return this ;
 }
comment:
START set the drawer builder width with a pixel value @param drawer width UNK @return END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
boolean allows multiple values ( string option name ) {
 option details option data = transitive options map . get ( option name ) ;
 return ( option data == null ) ? false : option data . allows multiple ;
 }
comment:
START returns false for UNK options . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set ( UNK a ) {
 this . x = a . x ;
 this . y = a . y ;
 this . z = a . z ;
 this . w = a . w ;
 }
comment:
START set vector value by UNK @param a END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cache control smax age ( long smax age , time unit unit ) {
 this . smax age = unit . to seconds ( smax age ) ;
 return this ;
 }
comment:
START add an `` UNK '' directive . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set draw hole enabled ( boolean enabled ) {
 this . mdraw hole = enabled ;
 }
comment:
START set this to true to draw the pie center empty @param enabled END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public void set is prefetch ( boolean is prefetch ) {
 base producer context . call on is prefetch changed ( set is prefetch no callbacks ( is prefetch ) ) ;
 }
comment:
START set whether the request is a prefetch request or not . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the request .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the request to be UNK .

code:
private drawable holder add animation ( object animator anim , boolean overwrite ) {
 if ( anim != null ) animators . add ( anim ) ;
 UNK to start . add ( anim ) ;
 return this ;
 }
comment:
START adds the given animation to the list of animations for this object . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public static void remove native binaries from dir i ( file native library root , boolean delete root dir ) {
 if ( debug_ e ) {
 slog . w ( g , String + native library root . get path ( ) ) ;
 }
 if ( native library root . exists ( ) ) {
 final file [ ] files = native library root . list files ( ) ;
 if ( files != null ) {
 for ( int nn = DecimalInteger ;
 nn < files . length ;
 nn ++ ) {
 if ( debug_ e ) {
 slog . d ( g , String + files [ nn ] . get name ( ) ) ;
 }
 if ( files [ nn ] . is directory ( ) ) {
 remove native binaries from dir i ( files [ nn ] , true ) ;
 }
 else if ( ! files [ nn ] . delete ( ) ) {
 slog . w ( g , String + files [ nn ] . get path ( ) ) ;
 }
 }
 }
 if ( delete root dir ) {
 if ( ! native library root . delete ( ) ) {
 slog . w ( g , String + native library root . get path ( ) ) ;
 }
 }
 }
 }
comment:
START remove the native binaries of a given package . END
BLUE1:0.4
--generate--
creates a new instance .
creates a new instance for the given UNK .
creates a new instance of the UNK .
creates a new instance for the UNK .
creates a new instance for the given file .

code:
public indices aliases request builder add alias ( string indices [ ] , string alias , string filter ) {
 request . add alias action ( alias actions . add ( ) . indices ( indices ) . alias ( alias ) . filter ( filter ) ) ;
 return this ;
 }
comment:
START adds an alias to the index . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public significant terms aggregation builder min doc count ( long min doc count ) {
 if ( min doc count < DecimalInteger ) {
 throw new illegal argument exception ( String + min doc count + String + name + String ) ;
 }
 bucket count UNK . set min doc count ( min doc count ) ;
 return this ;
 }
comment:
START set the minimum document count terms should have in order to appear in the response . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cpp link action builder add object file ( artifact input ) {
 add object file ( linker inputs . simple linker input ( input , artifact category . object_ e ) ) ;
 return this ;
 }
comment:
START adds a single object file to the set of inputs . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set publish events ( boolean publish events ) {
 this . publish events = publish events ;
 }
comment:
START set whether this servlet should publish a servlet request handled event at the end of each request . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public aapt command builder add ( string flag ) {
 flags . add ( flag ) ;
 return this ;
 }
comment:
START adds a single flag to the builder . END
BLUE1:0.4
--generate--
sets the UNK UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
add the UNK to the given UNK .
add the UNK to the UNK to the UNK .

code:
public uri components builder replace path ( string path ) {
 this . path builder = new composite path component builder ( path ) ;
 reset scheme specific part ( ) ;
 return this ;
 }
comment:
START set the path of this builder overriding all existing path and path segment values . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public upgrade settings cluster state update request versions ( map < string , tuple < version , string > > versions ) {
 this . versions = versions ;
 return this ;
 }
comment:
START sets the index to version map for indices that should be updated END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set lazy init ( string lazy init ) {
 this . lazy init = lazy init ;
 }
comment:
START set the default lazy-init flag for the document that 's currently parsed . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set user defined UNK ( int index , boolean writable ) {
 if ( writable ) {
 set user defined UNK ( index ) ;
 }
 else {
 clear user defined UNK ( index ) ;
 }
 }
comment:
START sets a user-defined UNK flag at the specified index . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
public rectangle set x ( float x ) {
 this . x = x ;
 return this ;
 }
comment:
START sets the x-coordinate of the bottom left corner @param x the x-coordinate @return this rectangle for chaining END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public drawer builder with header ( @ non null view header view ) {
 this . mheader view = header view ;
 return this ;
 }
comment:
START add a header to the drawer builder list view . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean set message access permission ( int value ) {
 if ( service == null ) {
 return false ;
 }
 try {
 return service . set message access permission ( this , value ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return false ;
 }
comment:
START sets whether the message access is allowed to this device . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public animated image result builder set preview bitmap ( closeable reference < bitmap > preview bitmap ) {
 mpreview bitmap = closeable reference . clone or null ( preview bitmap ) ;
 return this ;
 }
comment:
START sets a preview bitmap . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public params set num items ( int num items ) {
 mnum items = num items ;
 return this ;
 }
comment:
START set the number of items in the list . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public noop search request builder add aggregation ( aggregation builder aggregation ) {
 source builder ( ) . aggregation ( aggregation ) ;
 return this ;
 }
comment:
START adds an aggregation to the search operation . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public builder set reject call ( boolean should reject call ) {
 mshould reject call = should reject call ;
 return this ;
 }
comment:
START sets whether the incoming call should be disconnected as if the user had UNK rejected it . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
set to UNK to UNK .
sets the UNK of the UNK .
sets the UNK of the UNK to .

code:
public UNK aggregation builder execution hint ( string execution hint ) {
 this . execution hint = execution hint ;
 return this ;
 }
comment:
START set the execution hint . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public histogram aggregation builder offset ( double offset ) {
 this . offset = offset ;
 return this ;
 }
comment:
START set the offset on this builder , and return the builder so that calls can be chained . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public wearable extender set background ( bitmap background ) {
 background = background ;
 return this ;
 }
comment:
START set a background image to be displayed behind the notification content . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public cell < t > fill ( boolean x , boolean y ) {
 fill x = x ? onef : zerof ;
 fill y = y ? onef : zerof ;
 return this ;
 }
comment:
START sets fill x and fill y to NUMBER if true , NUMBER if false . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public apf generator add add r1 ( ) {
 instruction instruction = new instruction ( opcodes . d , register . r1 ) ;
 add instruction ( instruction ) ;
 return this ;
 }
comment:
START add an instruction to the end of the program to add register r1 to register r0 . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public UNK request builder set requests per second ( float requests per second ) {
 request . set requests per second ( requests per second ) ;
 return this ;
 }
comment:
START set the throttle to apply to all matching requests in sub-requests per second . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public static locale add UNK UNK ( locale locale ) {
 return UNK . UNK . u . add UNK UNK ( locale ) ;
 }
comment:
START adds the likely UNK for a provided locale id . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
set to UNK to UNK .
sets the UNK of the given UNK .

code:
@ deprecated public void set show week number ( boolean show week number ) {
 delegate . set show week number ( show week number ) ;
 }
comment:
START sets whether to show the week number . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public cache control must revalidate ( ) {
 this . must revalidate = true ;
 return this ;
 }
comment:
START add a `` UNK '' directive . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ deprecated public static void add header ( http message message , char sequence name , object value ) {
 message . headers ( ) . add ( name , value ) ;
 }
comment:
START adds a new header with the specified name and value . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean explicit jre deps ( ) {
 return explicit jre deps ;
 }
comment:
START returns whether explicit UNK dependencies are required . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK of the given UNK .
set to UNK for the given UNK .

code:
public void set looping ( long sound id , boolean looping ) ;
comment:
START sets the sound instance with the given id to be looping . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public UNK client builder with provider ( object provider ) {
 singletons . add ( require non null ( provider ) ) ;
 return this ;
 }
comment:
START adds the given object as a jersey provider . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public void set is24 hour view ( @ non null boolean is24 hour view ) {
 if ( is24 hour view == null ) {
 return ;
 }
 delegate . set is24 hour ( is24 hour view ) ;
 }
comment:
START sets whether this widget displays time in NUMBER mode or NUMBER mode with an UNK m picker . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public go away set last stream id ( int last stream id ) {
 this . last stream id = last stream id ;
 return this ;
 }
comment:
START set the last stream id . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cell < t > uniform y ( ) {
 uniform y = boolean . e ;
 return this ;
 }
comment:
START sets uniform y to true . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public generic drawee hierarchy builder set background ( @ nullable drawable background ) {
 background = background ;
 return this ;
 }
comment:
START sets a background . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set indent ( boolean indent ) {
 this . indent = indent ;
 }
comment:
START set whether the xslt transformer may add additional whitespace when outputting the result tree . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public location request set num updates ( int num updates ) {
 if ( num updates <= DecimalInteger ) throw new illegal argument exception ( String + num updates ) ;
 mnum updates = num updates ;
 return this ;
 }
comment:
START set the number of location updates . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public query string query builder field ( string field , float boost ) {
 this . fields and weights . put ( field , boost ) ;
 return this ;
 }
comment:
START adds a field to run the query string against with a specific boost . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public abstract void set display show custom enabled ( boolean show custom ) ;
comment:
START set whether a custom view should be displayed , if set . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public search source builder script field ( string name , script script ) {
 script field ( name , script , false ) ;
 return this ;
 }
comment:
START adds a script field under the given name with the provided script . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
spdy settings frame set clear UNK persisted settings ( boolean clear ) ;
comment:
START sets if previously persisted settings should be UNK . END
BLUE1:0.4
--generate--
sets the listener that will be used to UNK .
sets the listener that will be used to the UNK .
sets the listener that will be used to UNK the UNK .
sets the listener that will be used to UNK
sets the listener that will be used to the UNK of the current .

code:
@ gwt compatible ( serializable = true ) @ beta public static < k extends enum < k > , v > immutable map < k , v > immutable enum map ( map < k , ? extends v > map ) {
 if ( map instanceof immutable enum map ) {
 @ suppress warnings ( String ) immutable enum map < k , v > result = ( immutable enum map < k , v > ) map ;
 return result ;
 }
 else if ( map . is empty ( ) ) {
 return immutable map . of ( ) ;
 }
 else {
 for ( map . entry < k , ? extends v > entry : map . entry set ( ) ) {
 check not null ( entry . get key ( ) ) ;
 check not null ( entry . get value ( ) ) ;
 }
 return immutable enum map . as immutable ( new enum map < k , v > ( map ) ) ;
 }
 }
comment:
START returns an immutable map instance containing the given entries . END
BLUE1:0.4
--generate--
returns a immutable array of the list of UNK .
returns a immutable array of the UNK .
returns a immutable array of the list of the given UNK .
returns a immutable array of the list of the given file .
returns a immutable array of the list of the given values .

code:
public cell < t > grow ( ) {
 expand x = onei ;
 expand y = onei ;
 fill x = onef ;
 fill y = onef ;
 return this ;
 }
comment:
START sets expand x , expand y , fill x , and fill y to NUMBER . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder < e > condition ( predicate < attribute map > condition ) {
 preconditions . check state ( this . condition == null , String ) ;
 this . condition = condition ;
 return this ;
 }
comment:
START sets a condition predicate . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public message set data ( string data mime type , uri data uri ) {
 mdata mime type = data mime type ;
 mdata uri = data uri ;
 return this ;
 }
comment:
START sets a binary blob of data and an associated mime type for a message . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public launch options set x ( int xstart arg , int UNK arg ) {
 if ( xstart arg < DecimalInteger || UNK arg <= xstart arg ) {
 throw new rsillegal argument exception ( String ) ;
 }
 xstart = xstart arg ;
 UNK = UNK arg ;
 return this ;
 }
comment:
START set the x range . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public indices aliases request builder add alias ( string [ ] indices , string alias , map < string , object > filter ) {
 request . add alias action ( alias actions . add ( ) . indices ( indices ) . alias ( alias ) . filter ( filter ) ) ;
 return this ;
 }
comment:
START adds an alias to the index . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public entity add protobuf entity ( string class name ) {
 entity entity = add entity ( class name ) ;
 entity . use protobuf ( ) ;
 return entity ;
 }
comment:
START adds a new protocol buffers entity to the schema . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public void set draw grid background ( boolean enabled ) {
 mdraw grid background = enabled ;
 }
comment:
START set this to true to draw the grid background , false if not @param enabled END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public drawer builder with drawer items ( @ non null list < idrawer item > drawer items ) {
 this . get item adapter ( ) . set ( drawer items ) ;
 return this ;
 }
comment:
START set the initial list of UNK items for the drawer @param drawer items @return END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cell < t > grow x ( ) {
 expand x = onei ;
 fill x = onef ;
 return this ;
 }
comment:
START sets expand x and fill x to NUMBER . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder delay before loading ( int delay in millis ) {
 this . delay before loading = delay in millis ;
 return this ;
 }
comment:
START sets delay time before starting loading task . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public boolean set exception ( throwable exception ) {
 assert . not null ( exception , String ) ;
 boolean success = this . settable task . set exception ( exception ) ;
 if ( success ) {
 this . listenable future . run ( ) ;
 }
 return success ;
 }
comment:
START set the exception of this future . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public indices shard store request builder set indices ( string ... indices ) {
 request . indices ( indices ) ;
 return this ;
 }
comment:
START sets the indices for the shard stores request END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set abbreviating ( boolean abbreviating ) {
 abbreviating = abbreviating ;
 }
comment:
START sets whether lint should UNK output when appropriate . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public color set ( int rgba ) {
 UNK to color ( this , rgba ) ;
 return this ;
 }
comment:
START sets this color 's component values through an integer representation . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public terms aggregation builder min doc count ( long min doc count ) {
 if ( min doc count < DecimalInteger ) {
 throw new illegal argument exception ( String + min doc count + String + name + String ) ;
 }
 bucket count UNK . set min doc count ( min doc count ) ;
 return this ;
 }
comment:
START set the minimum document count terms should have in order to appear in the response . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set local override ( boolean local override ) {
 this . local override = local override ;
 }
comment:
START set whether local properties override properties from files . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public url based view resolver registration prefix ( string prefix ) {
 this . view resolver . set prefix ( prefix ) ;
 return this ;
 }
comment:
START set the prefix that gets prepended to view names when building a url . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public sampler aggregation builder shard size ( int shard size ) {
 this . shard size = shard size ;
 return this ;
 }
comment:
START set the max num docs to be returned from each shard . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public upgrade settings request versions ( map < string , tuple < version , string > > versions ) {
 this . versions = versions ;
 return this ;
 }
comment:
START sets the index versions to be updated END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set ( UNK a ) {
 this . x = a . x ;
 this . y = a . y ;
 this . z = a . z ;
 this . w = a . w ;
 }
comment:
START set vector value by UNK @param a END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set always use full path ( boolean always use full path ) {
 this . url path helper . set always use full path ( always use full path ) ;
 }
comment:
START set if url lookup should always use the full path within the current servlet context . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
set to UNK to UNK .
sets the UNK of the UNK .
sets the UNK of the UNK to .

code:
public builder set category ( string category ) {
 n . category = category ;
 return this ;
 }
comment:
START set the notification category . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public create snapshot request settings ( settings settings ) {
 this . settings = settings ;
 return this ;
 }
comment:
START sets repository-specific snapshot settings . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .

code:
public path match configurer set url path helper ( url path helper url path helper ) {
 this . url path helper = url path helper ;
 return this ;
 }
comment:
START set the url path helper to use for resolution of lookup paths . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set native connection necessary for native callable statements ( boolean native connection necessary ) {
 this . native connection necessary for native callable statements = native connection necessary ;
 }
comment:
START set whether it is necessary to work on the native connection to receive native callable statements . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public indices aliases request builder add alias ( string indices [ ] , string alias , query builder filter builder ) {
 request . add alias action ( alias actions . add ( ) . indices ( indices ) . alias ( alias ) . filter ( filter builder ) ) ;
 return this ;
 }
comment:
START adds an alias to the index . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public final void set nested transaction allowed ( boolean nested transaction allowed ) {
 this . nested transaction allowed = nested transaction allowed ;
 }
comment:
START set whether nested transactions are allowed . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private void remove item at int ( int index , boolean update children on menu views ) {
 if ( ( index < DecimalInteger ) || ( index >= items . size ( ) ) ) return ;
 items . remove ( index ) ;
 if ( update children on menu views ) on items changed ( true ) ;
 }
comment:
START remove the item at the given index and optionally forces menu views to update . END
BLUE1:0.4
--generate--
for the UNK UNK .
for the UNK .
set the UNK for the given UNK .
for the UNK of the given UNK .
set the UNK for the given file .

code:
public builder set break strategy ( @ break strategy int break strategy ) {
 mbreak strategy = break strategy ;
 return this ;
 }
comment:
START set break strategy , useful for selecting high quality or UNK paragraph layout options . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cpp link action builder set crosstool inputs ( nested set < artifact > inputs ) {
 this . crosstool inputs = inputs ;
 return this ;
 }
comment:
START set the crosstool inputs required for the action . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set hessian2 request ( boolean hessian2 ) {
 this . proxy factory . set hessian2 request ( hessian2 ) ;
 }
comment:
START set whether version NUMBER of the hessian protocol should be used for parsing requests . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public url based view resolver registration prefix ( string prefix ) {
 this . view resolver . set prefix ( prefix ) ;
 return this ;
 }
comment:
START set the prefix that gets prepended to view names when building a url . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public r set tap to retry enabled ( boolean enabled ) {
 UNK to retry enabled = enabled ;
 return get this ( ) ;
 }
comment:
START sets whether UNK is enabled . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .

code:
public address resolver options set cache min time to live ( int cache min time to live ) {
 if ( cache min time to live < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 this . cache min time to live = cache min time to live ;
 return this ;
 }
comment:
START set the cache minimum ttl value in seconds . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder UNK behavior ( @ non null UNK behavior behavior ) {
 this . UNK behavior = behavior ;
 return this ;
 }
comment:
START sets action button UNK behavior . END
BLUE1:0.4
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
set to UNK to UNK .
sets the UNK of the given UNK .

code:
public search source builder highlighter ( highlight builder highlight builder ) {
 this . highlight builder = highlight builder ;
 return this ;
 }
comment:
START adds highlight to perform as part of the search . END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public rectangle set size ( float size y ) {
 this . width = size y ;
 this . height = size y ;
 return this ;
 }
comment:
START sets the squared size of this rectangle @param size y the size @return this rectangle for chaining END
BLUE1:0.4
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public static runfiles support with executable ( rule context rule context , runfiles runfiles , artifact executable , boolean create symlinks ) {
 return new runfiles support ( rule context , executable , runfiles , immutable list . < string > of ( ) , create symlinks ) ;
 }
comment:
START creates and returns a runfiles support object for the given rule and executable . END
BLUE1:0.384615384615
--generate--
returns a immutable buffer that containing the given elements , in milliseconds .
returns a immutable buffer that containing the given entries , in milliseconds .
returns a immutable buffer that containing the given elements , in pixels .
returns a immutable buffer that containing the given elements , in bytes .
returns a immutable buffer that containing the given entries , in pixels .

code:
public int get all field count ( ) {
 return all fields . size ( ) ;
 }
comment:
START gets the count of all fields including hidden fields . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the data for the given file .
returns a immutable array of the data for the given type .
returns a immutable array of the data for the given UNK .

code:
@ override public string to string ( ) {
 if ( length == DecimalInteger ) return String ;
 return new string ( chars , DecimalInteger , length ) ;
 }
comment:
START returns the current string representation . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable instance of the given file , in any .
returns a immutable array of the given file .
returns a immutable instance of the given file .
returns a immutable array of the given UNK .

code:
public image decode options builder set force static image ( boolean force static image ) {
 mforce static image = force static image ;
 return this ;
 }
comment:
START sets whether to force animated image formats to be decoded as static , UNK images . END
BLUE1:0.375
--generate--
sets the listener that should be enabled .
sets the listener that will be applied to the user .
sets the listener that will be applied to the UNK .
sets the listener that will be applied to the UNK of the UNK .
sets the listener that will be applied to the current .

code:
default xcontent generator create generator ( output stream os ) throws exception {
 return create generator ( os , collections . empty set ( ) , collections . empty set ( ) ) ;
 }
comment:
START creates a new generator using the provided output stream . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable buffer that will be added by the specified key .
returns a immutable buffer that will be applied to the given key .
returns a immutable buffer that will be applied to the current list of the specified array .
returns a immutable buffer that will be applied to the current list of the specified .

code:
private static sun . misc . unsafe get unsafe ( ) {
 try {
 return sun . misc . unsafe . get unsafe ( ) ;
 }
 catch ( security exception try reflection instead ) {
 }
 try {
 return java . security . access controller . do privileged ( new java . security . privileged exception action < sun . misc . unsafe > ( ) {
 public sun . misc . unsafe run ( ) throws exception {
 class < sun . misc . unsafe > k = sun . misc . unsafe . class ;
 for ( java . lang . reflect . field f : k . get declared fields ( ) ) {
 f . set accessible ( true ) ;
 object x = f . get ( null ) ;
 if ( k . is instance ( x ) ) return k . cast ( x ) ;
 }
 throw new no such field error ( String ) ;
 }
 }
 ) ;
 }
 catch ( java . security . privileged action exception e ) {
 throw new runtime exception ( String , e . get cause ( ) ) ;
 }
 }
comment:
START returns a sun.misc. unsafe . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data for the given file .
returns a immutable array of the data for the given UNK .

code:
public model get model ( d sound model id ) {
 try {
 return new model ( UNK trigger service . get sound model ( new parcel uuid ( sound model id ) ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns the sound trigger model represented by the given uuid . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable instance of the given file .
returns a immutable array of the UNK UNK .
returns a immutable instance of the given file , in any .
returns a immutable array of the given UNK .

code:
public static sqlite database open database ( string path , cursor factory factory , int flags ) {
 return open database ( path , factory , flags , null ) ;
 }
comment:
START sets the locale of the database to the the system 's current locale . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .
returns a immutable array of the data in the given file .

code:
public update request builder set id ( string id ) {
 request . id ( id ) ;
 return this ;
 }
comment:
START sets the id of the indexed document . END
BLUE1:0.375
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
public void set start element listener ( start element listener start element listener ) {
 if ( this . start element listener != null ) {
 throw new illegal state exception ( String ) ;
 }
 this . start element listener = start element listener ;
 }
comment:
START sets a listener for the start of this element . END
BLUE1:0.375
--generate--
set the listener that should be enabled .
set the listener that should be used to UNK .
set the listener that should be used to UNK the UNK .
set the listener that should be used to UNK the UNK UNK .
set the listener that should be used to UNK the UNK

code:
public static boolean is multi valued ( sorted numeric doc values values ) {
 return doc values . unwrap singleton ( values ) == null ;
 }
comment:
START returns whether the provided values might be multi-valued . END
BLUE1:0.375
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
l get base url ( ) throws exception {
 string finalizer path = UNK class_ e . replace ( String , String ) + String ;
 l finalizer url = get class ( ) . get class loader ( ) . get resource ( finalizer path ) ;
 if ( finalizer url == null ) {
 throw new file not found exception ( finalizer path ) ;
 }
 string url string = finalizer url . to string ( ) ;
 if ( ! url string . ends with ( finalizer path ) ) {
 throw new exception ( String + url string ) ;
 }
 url string = url string . substring ( DecimalInteger , url string . length ( ) - finalizer path . length ( ) ) ;
 return new l ( finalizer url , url string ) ;
 }
comment:
START gets url for base of path containing UNK . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the UNK UNK .
returns a immutable array of the data .
returns a immutable array of the data in the given UNK .
returns a immutable array of the data in the given file .

code:
public event handler group < t > handle events with worker pool ( final work handler < ? super t > ... handlers ) {
 return disruptor . create worker pool ( sequences , handlers ) ;
 }
comment:
START set up a worker pool to handle events from the ring buffer . END
BLUE1:0.375
--generate--
returns a immutable array of the data .
returns a immutable array of the UNK .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .
returns a immutable array of the data in the given file .

code:
@ suppress warnings ( String ) public event handler group < t > after ( final event handler < t > ... handlers ) {
 final sequence [ ] sequences = new sequence [ handlers . length ] ;
 for ( int i = DecimalInteger , handlers length = handlers . length ;
 i < handlers length ;
 i ++ ) {
 sequences [ i ] = consumer repository . get sequence for ( handlers [ i ] ) ;
 }
 return new event handler group < t > ( this , consumer repository , sequences ) ;
 }
comment:
START create a group of event handlers to be used as a dependency . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public void set on system ui visibility change listener ( on system ui visibility change listener l ) {
 get listener info ( ) . mon system ui visibility change listener = l ;
 if ( parent != null && mattach info != null && ! mattach info . UNK global attributes ) {
 parent . UNK view attributes ( this ) ;
 }
 }
comment:
START set a listener to receive callbacks when the visibility of the system bar changes . END
BLUE1:0.375
--generate--
sets the listener that should be enabled .
sets the listener that will be used for the UNK .
sets the listener that will be used to the UNK .
sets the listener that should be used to the UNK .
sets the listener that will be used to the UNK of the UNK .

code:
private producer < closeable reference < closeable image > > new bitmap cache get to local transform sequence ( producer < encoded image > input producer ) {
 thumbnail producer < encoded image > [ ] default thumbnail producers = new thumbnail producer [ DecimalInteger ] ;
 default thumbnail producers [ DecimalInteger ] = UNK factory . new local exif thumbnail producer ( ) ;
 return new bitmap cache get to local transform sequence ( input producer , default thumbnail producers ) ;
 }
comment:
START creates a new fetch sequence that just needs the source producer . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable instance of the given file , in any .
returns a immutable array of the given file .
returns a immutable instance of the given file .
returns a immutable array of the given UNK .

code:
public static boolean is same logical package ( package identifier this package , package identifier prerequisite package ) {
 if ( this package . equals ( prerequisite package ) ) {
 return true ;
 }
 if ( ! this package . get repository ( ) . equals ( prerequisite package . get repository ( ) ) ) {
 return false ;
 }
 string this package path = this package . get package fragment ( ) . get path string ( ) ;
 string prerequisite package path = prerequisite package . get package fragment ( ) . get path string ( ) ;
 return this package path . starts with ( String ) && prerequisite package path . starts with ( String ) && this package path . substring ( String . length ( ) ) . equals ( prerequisite package path . substring ( String . length ( ) ) ) ;
 }
comment:
START returns whether two packages are considered the same for purposes of deprecation warnings . END
BLUE1:0.375
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
@ beta public static < r , c , v > table < r , c , v > new custom table ( map < r , map < c , v > > backing map , supplier < ? extends map < c , v > > factory ) {
 check argument ( backing map . is empty ( ) ) ;
 check not null ( factory ) ;
 return new standard table < r , c , v > ( backing map , factory ) ;
 }
comment:
START creates a table that uses the specified backing map and factory . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data for the given file .
returns a immutable array of the data for the given UNK .

code:
public open options set create new ( boolean create new ) {
 this . create new = create new ;
 return this ;
 }
comment:
START set whether the file should be created and fail if it does exist already . END
BLUE1:0.375
--generate--
set whether to use to UNK UNK .
set whether to UNK the UNK UNK .
set whether to UNK the UNK .
set whether to use to UNK UNK to .
set whether to use to UNK UNK of the UNK .

code:
public static sqlite database open database ( string path , cursor factory factory , int flags , database error handler error handler ) {
 sqlite database db = new sqlite database ( path , flags , factory , error handler ) ;
 db . open ( ) ;
 return db ;
 }
comment:
START sets the locale of the database to the the system 's current locale . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .
returns a immutable array of the data in the given file .

code:
public open options set create ( boolean create ) {
 this . create = create ;
 return this ;
 }
comment:
START set whether the file should be created if it does not already exist . END
BLUE1:0.375
--generate--
sets whether to UNK the UNK UNK .
sets whether to use to UNK UNK .
sets whether to UNK the UNK .
sets whether to use to UNK UNK to .
sets whether to UNK the UNK UNK

code:
public void set on suggestion listener ( on suggestion listener listener ) {
 mon suggestion listener = listener ;
 }
comment:
START sets a listener to inform when a suggestion is focused or clicked . END
BLUE1:0.375
--generate--
sets the listener that will be enabled .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .

code:
@ override public iterator < e > iterator ( ) {
 final monitor monitor = this . monitor ;
 monitor . enter ( ) ;
 try {
 return new itr ( ) ;
 }
 finally {
 monitor . leave ( ) ;
 }
 }
comment:
START returns an iterator over the elements in this queue in proper sequence . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public static boolean is application uid ( int uid ) {
 return user handle . is app ( uid ) ;
 }
comment:
START returns whether the given uid belongs to an application . END
BLUE1:0.375
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public builder set dependency set ( dependency set dep set ) {
 this . dep set = dep set ;
 return this ;
 }
comment:
START sets the dependency set capturing used headers by this compile . END
BLUE1:0.375
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the user .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
@ can ignore return value @ override public boolean add ( e element ) {
 offer ( element ) ;
 return true ;
 }
comment:
START adds the given element to this queue . END
BLUE1:0.375
--generate--
removes the UNK from the given UNK .
creates a new instance for the given UNK .
creates a new instance for the given file .
creates a new instance for the UNK .
removes the UNK from the given UNK , in the UNK .

code:
item new field item ( final string owner , final string name , final string desc ) {
 key3 . set ( d , owner , name , desc ) ;
 item result = get ( key3 ) ;
 if ( result == null ) {
 put122 ( d , new class ( owner ) , new name type ( name , desc ) ) ;
 result = new item ( index ++ , key3 ) ;
 put ( result ) ;
 }
 return result ;
 }
comment:
START adds a field reference to the constant pool of the class being build . END
BLUE1:0.375
--generate--
sets the UNK for the given UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static boolean is graphic ( char sequence str ) {
 final int len = str . length ( ) ;
 for ( int cp , i = DecimalInteger ;
 i < len ;
 i += character . char count ( cp ) ) {
 cp = character . code point at ( str , i ) ;
 int gc = character . get type ( cp ) ;
 if ( gc != character . l && gc != character . t && gc != character . e && gc != character . d && gc != character . line_ r && gc != character . UNK r && gc != character . UNK r ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START returns whether the given char sequence contains any printable characters . END
BLUE1:0.375
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static wifi p2p dns sd service request new instance ( string instance name , string service type ) {
 if ( instance name == null || service type == null ) {
 throw new illegal argument exception ( String ) ;
 }
 string full domain name = instance name + String + service type + String ;
 return new wifi p2p dns sd service request ( full domain name , wifi p2p dns sd service info . dns_ type_ t , wifi p2p dns sd service info . n_1 ) ;
 }
comment:
START create a service discovery request to get the txt data from the specified bonjour service . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
private static boolean should emit deprecation warning for ( string this deprecation , package identifier this package , string prerequisite deprecation , package identifier prerequisite package , boolean for aspect ) {
 return ( ! for aspect && prerequisite deprecation != null && ! is same logical package ( this package , prerequisite package ) && this deprecation == null ) ;
 }
comment:
START returns whether a deprecation warning should be printed for the prerequisite described . END
BLUE1:0.375
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
@ suppress warnings ( String ) public static void set on single create ( func1 < single . on subscribe , single . on subscribe > on single create ) {
 if ( lockdown ) {
 return ;
 }
 rx java hooks . on single create = on single create ;
 }
comment:
START sets the single on create hook function unless a lockdown is in effect . END
BLUE1:0.375
--generate--
sets the listener that will be enabled .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .

code:
public static boolean is report UNK action ( sky key key ) {
 return key . function name ( ) . equals ( sky functions . action_ n ) && is report UNK action ( ( action ) key . argument ( ) ) ;
 }
comment:
START returns whether the key corresponds to a action execution value worth reporting status about . END
BLUE1:0.375
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
private static sun . misc . unsafe get unsafe ( ) {
 try {
 return sun . misc . unsafe . get unsafe ( ) ;
 }
 catch ( security exception try reflection instead ) {
 }
 try {
 return java . security . access controller . do privileged ( new java . security . privileged exception action < sun . misc . unsafe > ( ) {
 public sun . misc . unsafe run ( ) throws exception {
 class < sun . misc . unsafe > k = sun . misc . unsafe . class ;
 for ( java . lang . reflect . field f : k . get declared fields ( ) ) {
 f . set accessible ( true ) ;
 object x = f . get ( null ) ;
 if ( k . is instance ( x ) ) return k . cast ( x ) ;
 }
 throw new no such field error ( String ) ;
 }
 }
 ) ;
 }
 catch ( java . security . privileged action exception e ) {
 throw new runtime exception ( String , e . get cause ( ) ) ;
 }
 }
comment:
START returns a sun.misc. unsafe . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data for the given file .
returns a immutable array of the data for the given UNK .

code:
public string get value as string ( ) {
 if ( value == null ) {
 return null ;
 }
 else if ( value instanceof string ) {
 return ( string ) value ;
 }
 else if ( value instanceof byte [ ] ) {
 return new string ( ( byte [ ] ) value , us_ i ) ;
 }
 return null ;
 }
comment:
START gets the value as a string . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable instance of the given file .
returns a immutable array of the UNK UNK .
returns a immutable array of the given UNK .
returns a immutable instance of the given file , in any .

code:
public menu item set on menu item click listener ( menu item . on menu item click listener menu item click listener ) ;
comment:
START set a custom listener for invocation of this menu item . END
BLUE1:0.375
--generate--
set the listener that should be used .
set the listener that should be added to the request .
set the listener that should be added to the given UNK .
set the listener that should be added to the user .
set the listener that should be added to the request

code:
private static sun . misc . unsafe get unsafe ( ) {
 try {
 return sun . misc . unsafe . get unsafe ( ) ;
 }
 catch ( security exception try reflection instead ) {
 }
 try {
 return java . security . access controller . do privileged ( new java . security . privileged exception action < sun . misc . unsafe > ( ) {
 public sun . misc . unsafe run ( ) throws exception {
 class < sun . misc . unsafe > k = sun . misc . unsafe . class ;
 for ( java . lang . reflect . field f : k . get declared fields ( ) ) {
 f . set accessible ( true ) ;
 object x = f . get ( null ) ;
 if ( k . is instance ( x ) ) return k . cast ( x ) ;
 }
 throw new no such field error ( String ) ;
 }
 }
 ) ;
 }
 catch ( java . security . privileged action exception e ) {
 throw new runtime exception ( String , e . get cause ( ) ) ;
 }
 }
comment:
START returns a sun.misc. unsafe . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data for the given file .
returns a immutable array of the data for the given UNK .

code:
public glyph layout add text ( char sequence str , float x , float y ) {
 return add text ( str , x , y , DecimalInteger , str . length ( ) , DecimalInteger , align . left , false , null ) ;
 }
comment:
START adds glyphs for the specified text . END
BLUE1:0.375
--generate--
sets the UNK for the given UNK .
add a new UNK to the UNK .
sets the UNK of the UNK .
add a new UNK to the given UNK .
add a new UNK to the given .

code:
public builder set title ( @ nullable char sequence title ) {
 title = title ;
 return this ;
 }
comment:
START sets the title . END
BLUE1:0.375
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
public transition remove listener ( transition listener listener ) {
 if ( listeners == null ) {
 return this ;
 }
 listeners . remove ( listener ) ;
 if ( listeners . size ( ) == DecimalInteger ) {
 listeners = null ;
 }
 return this ;
 }
comment:
START removes a listener from the set listening to this animation . END
BLUE1:0.375
--generate--
sets the listener that should be enabled .
sets the listener that will be used for the UNK .
sets the listener that should be used to the UNK .
sets the listener that will be used to the UNK .
sets the listener that will be used to the UNK of the UNK .

code:
public set < string > get limited in parameter names ( ) {
 return this . limited in parameter names ;
 }
comment:
START get a limited set of in parameters to be used . END
BLUE1:0.375
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .
returns a immutable array of the data in the given file .

code:
public void set listener ( listener listener ) {
 listener = listener ;
 }
comment:
START sets the listener . END
BLUE1:0.363636363636
--generate--
sets the listener that will be applied to the request .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .
sets the listener that will be applied to the request

code:
public void set video listener ( video listener listener ) {
 video listener = listener ;
 }
comment:
START sets a listener to receive video events . END
BLUE1:0.363636363636
--generate--
sets the listener that will be applied to the request .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .
sets the listener that will be applied to the request

code:
value animator . animator update listener create animator update listener ( ) ;
comment:
START creates an animator update listener that will animate the drawable directly . END
BLUE1:0.363636363636
--generate--
return the listener that should be added to the user .
return the listener that should be added to the given UNK .
return the listener that should be added to the UNK .
return the listener that should be added to the UNK of the UNK .
return the listener that should be added to the user

code:
public void set click listener ( click listener click listener ) {
 UNK listener = click listener ;
 }
comment:
START sets the click listener . END
BLUE1:0.363636363636
--generate--
sets the listener that will be applied to the request .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .
sets the listener that will be applied to the request

code:
public quaternion set ( quaternion quaternion ) {
 return this . set ( quaternion . x , quaternion . y , quaternion . z , quaternion . w ) ;
 }
comment:
START sets the quaternion components from the given quaternion . END
BLUE1:0.363636363636
--generate--
sets the listener that will be applied to the UNK .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the UNK of the UNK .

code:
public color set ( color color ) {
 this . r = color . r ;
 this . g = color . g ;
 this . b = color . b ;
 this . a = color . a ;
 return this ;
 }
comment:
START sets this color to the given color . END
BLUE1:0.363636363636
--generate--
sets the listener that should be applied to the UNK .
sets the listener that should be applied to the given UNK .
sets the listener that should be applied to the current UNK .
sets the listener that should be applied to the current .
sets the listener that should be applied to the UNK of the UNK .

code:
@ nullable public string get content description ( ) {
 return mcontent description ;
 }
comment:
START gets the accessibility content description . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final void set transaction synchronization ( int transaction synchronization ) {
 this . transaction synchronization = transaction synchronization ;
 }
comment:
START set when this transaction manager should activate the thread-bound transaction synchronization support . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get max volume ( ) {
 return mmax volume ;
 }
comment:
START get the maximum volume that may be set for this session . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public long get frame number ( ) {
 return mframe number ;
 }
comment:
START get the frame number associated with this failed capture . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get parameter type ( ) {
 return parameter type ;
 }
comment:
START get the parameter type . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public void set current item ( int item , boolean smooth scroll ) {
 set current item internal ( item , smooth scroll , false ) ;
 }
comment:
START set the currently selected page . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean contains ( vector3 v ) {
 return min . x <= v . x && max . x >= v . x && min . y <= v . y && max . y >= v . y && min . z <= v . z && max . z >= v . z ;
 }
comment:
START returns whether the given vector is contained in this bounding box . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
@ deprecated public boolean is screen on ( ) {
 return is UNK ( ) ;
 }
comment:
START returns true if the device is in an UNK state . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is first page ( ) {
 return get page ( ) == DecimalInteger ;
 }
comment:
START return if the current page is the first one . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK

code:
public boolean is process external entities ( ) {
 return this . process external entities ;
 }
comment:
START returns the configured value for whether xml external entities are allowed . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public void set zoom ( int value ) {
 set ( key_ m , value ) ;
 }
comment:
START sets current zoom value . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public abstract immutable list < artifact > get source jars ( ) ;
comment:
START return the source jars that are to be built when the target is on the command line . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set template engine ( UNK template engine engine ) {
 this . engine = engine ;
 }
comment:
START set the markup template engine to use in this view . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
@ override public resources get resources ( ) {
 return UNK resources ;
 }
comment:
START return the resources object this array was loaded from . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public audio port config active config ( ) {
 return mactive config ;
 }
comment:
START get currently active configuration of this audio port . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public boolean remove edge ( node < t > from node , node < t > to node ) {
 check node ( from node ) ;
 check node ( to node ) ;
 boolean changed = from node . remove successor ( to node ) ;
 if ( changed ) {
 to node . remove predecessor ( from node ) ;
 }
 return changed ;
 }
comment:
START removes the edge between the specified nodes . END
BLUE1:0.333333333333
--generate--
UNK UNK .
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK to be UNK .

code:
public void set jndi template ( jndi template jndi template ) {
 this . jndi locator . set jndi template ( jndi template ) ;
 }
comment:
START set the jndi template to use for jndi lookups . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
protected boolean allow passthrough ( string mime type ) {
 return audio track . is passthrough supported ( mime type ) ;
 }
comment:
START returns whether encoded audio passthrough should be used for playing back the input format . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
@ nullable public drawable get background ( ) {
 return background ;
 }
comment:
START gets the background . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public directory entry get dir entry ( ) {
 return entry ;
 }
comment:
START gets the central directory entry for this zip entry , if any . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public double get pseudorange rate meters per second ( ) {
 return mpseudorange rate meters per second ;
 }
comment:
START gets the pseudorange rate at the timestamp in m/s . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public float element sum ( ) {
 return x + y ;
 }
comment:
START return the element sum of vector @return END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public void set accessibility focused ( boolean focused ) {
 set boolean property ( boolean_ property_ accessibility_ d , focused ) ;
 }
comment:
START sets whether this node is accessibility focused . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean is UNK ( ) {
 synchronized ( this ) {
 return mis UNK ;
 }
 }
comment:
START returns if this network is UNK . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public float get upper limit ( ) {
 return UNK translation ;
 }
comment:
START get the upper joint limit , usually in meters . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean fuzzy transpositions ( ) {
 return this . fuzzy transpositions ;
 }
comment:
START gets the fuzzy query UNK setting . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK UNK

code:
public boolean use dynamic configurations ( ) {
 return get target configurations ( ) . get ( DecimalInteger ) . use dynamic configurations ( ) ;
 }
comment:
START returns whether this build uses dynamic configurations . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
protected amazon simple b get simple client ( ) {
 return simple client ;
 }
comment:
START gets the simple b client . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public boolean get force static image ( ) {
 return mforce static image ;
 }
comment:
START gets whether to force animated image formats to be decoded as static , UNK images . END
BLUE1:0.333333333333
--generate--
returns the UNK of UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .

code:
public final char sequence get text ( ) {
 return text ;
 }
comment:
START return the text that is displayed by this layout . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
protected string get prefix ( ) {
 return this . prefix ;
 }
comment:
START return the prefix that gets prepended to view names when building a url . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public static spline create UNK cubic spline ( float [ ] x , float [ ] y ) {
 return new UNK cubic spline ( x , y ) ;
 }
comment:
START creates a UNK UNK UNK from a given set of control points . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given key , in any .
returns a immutable instance of the given file .

code:
public int get data type ( ) {
 return mdata type ;
 }
comment:
START return the data type associated with this application configuration . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public int get latency ( ) {
 return UNK ( ) ;
 }
comment:
START returns this track 's estimated latency in milliseconds . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set transaction manager ( transaction manager transaction manager ) {
 this . transaction manager = transaction manager ;
 }
comment:
START set the jta transaction manager to use as direct reference . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get focus state ( ) {
 return mfocus state ;
 }
comment:
START gets the focused state . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public float get pitch ( ) {
 return get pitch rad ( ) * math utils . radians to degrees ;
 }
comment:
START get the pitch euler angle in degrees , which is the rotation around the x axis . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public principal get user ( ) {
 return this . user ;
 }
comment:
START return the user for the session associated with the event . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the current number of UNK .
returns the number of all UNK .
returns the number of UNK UNK

code:
public float get peak mips ( ) {
 return UNK mips ;
 }
comment:
START get the peak processing mips the hub can support @return float peak mips that this hub can UNK END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is translations disabled ( ) {
 return bundle translations == tri state . o ;
 }
comment:
START returns whether translations were explicitly disabled . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public boolean is transform available ( task task , task stack layout algorithm stack layout ) {
 if ( stack layout . mnum freeform tasks == DecimalInteger || task == null ) {
 return false ;
 }
 return mtask rect map . contains key ( task . key ) ;
 }
comment:
START returns whether the transform is available for the given task . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public final boolean has marker ( ) {
 return has marker ;
 }
comment:
START returns whether this data descriptor has the optional signature . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is in range ( float abs x ) {
 return ( abs x >= math . floor ( min ) ) && ( abs x <= math . ceil ( max ) ) ;
 }
comment:
START returns whether a value at an absolute x would be within range . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public cell < label > add ( char sequence text , string label style name ) {
 if ( skin == null ) throw new illegal state exception ( String ) ;
 return add ( new label ( text , skin . get ( label style name , label style . class ) ) ) ;
 }
comment:
START adds a new cell with a label . END
BLUE1:0.333333333333
--generate--
creates a new instance for the given UNK .
creates a new instance for the given file .
creates a new instance of the given UNK .
creates a new instance of the UNK .
creates a new instance for the UNK .

code:
public builder set extras ( bundle extras ) {
 extras = extras ;
 return this ;
 }
comment:
START set any custom extras to be included with the playback state . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set granularity ( float granularity ) {
 granularity = granularity ;
 UNK enabled = true ;
 }
comment:
START set a minimum interval for the axis when zooming in . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK

code:
public void set ignore unresolvable placeholders ( boolean ignore unresolvable placeholders ) {
 this . ignore unresolvable placeholders = ignore unresolvable placeholders ;
 }
comment:
START set whether to ignore UNK placeholders . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public string get prefix ( ) {
 return this . prefix ;
 }
comment:
START get the prefix used in mappings . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public boolean is query refinement enabled ( ) {
 return mquery refinement ;
 }
comment:
START returns whether query refinement is enabled for all items or only specific ones . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets the UNK of the UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public final boolean is multipart ( ) {
 return ( this . root mime multipart != null ) ;
 }
comment:
START return whether this helper is in multipart mode , i.e. whether it holds a multipart message . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is resource ref ( ) {
 return this . resource ref ;
 }
comment:
START return whether the lookup occurs in a j2 e container . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
@ nullable public artifact get interface output ( ) {
 return interface output ;
 }
comment:
START returns an interface shared object output artifact produced during linking . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is pinned ( ) {
 return has flags ( flag_ d ) ;
 }
comment:
START return whether a shortcut is pinned . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
public void set annotated classes ( class < ? > ... annotated classes ) {
 this . annotated classes = annotated classes ;
 }
comment:
START set annotated classes for which aliases will be read from UNK annotation metadata . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public int get user data ( ) {
 return muser data ;
 }
comment:
START gets the user data . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public int get UNK advance ( ) {
 return UNK advance ;
 }
comment:
START get the timing advance value for lte . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean lenient ( ) {
 return this . settings . lenient ( ) ;
 }
comment:
START returns whether query parsing should be lenient . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public path get translog path ( ) {
 return translog path ;
 }
comment:
START returns the translog path for this engine END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK

code:
public final vec2 get position ( ) {
 return m_xf . p ;
 }
comment:
START get the world body origin position . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean is skip analysis time file type check ( ) {
 return get property flag ( property flag . skip_ UNK time_ UNK k ) ;
 }
comment:
START returns true if this label type parameter skips the analysis time UNK check . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is held ( ) {
 synchronized ( token ) {
 return held ;
 }
 }
comment:
START returns true if the wake lock has been UNK but not yet released . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean has access ( int uid ) {
 return display . has access ( uid , flags , owner uid ) ;
 }
comment:
START returns true if the specified uid has access to this display . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public string get mime type ( ) {
 return mmime type ;
 }
comment:
START gets the resource response 's mime type . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public long get start time ( ) {
 return mstart time ;
 }
comment:
START get the stroke 's start time @return the start time for this stroke . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set security handler ( security handler security handler ) {
 handler . set security enabled ( security handler != null ) ;
 handler . set security handler ( security handler ) ;
 }
comment:
START set the security handler . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ nullable public string get interface name ( ) {
 return UNK name ;
 }
comment:
START gets the interface name for this link . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set tab title text appearance ( int text appearance ) {
 title text appearance = text appearance ;
 refresh tabs ( ) ;
 }
comment:
START set custom text UNK for all bottom bar tabs . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean is checkable ( ) {
 return get boolean property ( boolean_ property_ e ) ;
 }
comment:
START gets whether this node is checkable . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public void remove ( object entity ) {
 get entity manager ( ) . remove ( entity ) ;
 }
comment:
START remove the entity instance . END
BLUE1:0.333333333333
--generate--
UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public boolean remove on show mode changed listener ( @ non null on show mode changed listener listener ) {
 if ( listeners == null ) {
 return false ;
 }
 synchronized ( lock ) {
 final int key index = listeners . index of key ( listener ) ;
 final boolean has key = key index >= DecimalInteger ;
 if ( has key ) {
 listeners . remove at ( key index ) ;
 }
 if ( has key && listeners . is empty ( ) ) {
 set soft keyboard callback enabled ( false ) ;
 }
 return has key ;
 }
 }
comment:
START removes all instances of the specified change listener from the list of magnification change listeners . END
BLUE1:0.333333333333
--generate--
UNK UNK .
UNK UNK UNK .
create a listener to UNK UNK .
create a listener to UNK UNK to the given UNK .
create a listener to UNK UNK to the UNK .

code:
@ deprecated public static uri create person in my contacts group ( content resolver resolver , content values values ) {
 uri contact uri = resolver . insert ( people . content_ i , values ) ;
 if ( contact uri == null ) {
 log . e ( g , String ) ;
 return null ;
 }
 if ( add to my contacts group ( resolver , content uris . parse id ( contact uri ) ) == null ) {
 resolver . delete ( contact uri , null , null ) ;
 return null ;
 }
 return contact uri ;
 }
comment:
START creates a new contacts and adds it to the `` my contacts '' group . END
BLUE1:0.333333333333
--generate--
UNK UNK .
UNK UNK UNK .
returns the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public int get mode id ( ) {
 return UNK id ;
 }
comment:
START returns this mode 's id . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set namespace aware ( boolean namespace aware ) {
 this . namespace aware = namespace aware ;
 }
comment:
START set whether or not the xml parser should be xml namespace aware . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public cell < t > clear actor ( ) {
 set actor ( null ) ;
 return this ;
 }
comment:
START removes the current actor for the cell , if any . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in use .
returns a immutable instance of the UNK .

code:
public script . field d get field id_ input ( ) {
 return create field d ( DecimalInteger , null ) ;
 }
comment:
START get a field d for the input field of this intrinsic . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given file , if any .
returns a immutable buffer that containing the given elements , in milliseconds .
returns a immutable buffer that containing the given elements , in pixels .
returns a immutable array of the UNK .
returns a immutable instance of the given file .

code:
public query like ( int doc num ) throws exception {
 if ( field names == null ) {
 collection < string > fields = multi fields . get indexed fields ( ir ) ;
 field names = fields . to array ( new string [ fields . size ( ) ] ) ;
 }
 return create query ( retrieve terms ( doc num ) ) ;
 }
comment:
START return a query that will return docs like the passed lucene document id . END
BLUE1:0.333333333333
--generate--
returns a immutable array of the given values .
returns a immutable array of the given values , in any .
returns a immutable array of the UNK .
returns a immutable instance of the given file .
returns a immutable array of the given values , in any

code:
public buffered reader reader ( int buffer size , string charset ) {
 try {
 return new buffered reader ( new input stream reader ( read ( ) , charset ) , buffer size ) ;
 }
 catch ( unsupported encoding exception ex ) {
 throw new gdx runtime exception ( String + this , ex ) ;
 }
 }
comment:
START returns a buffered reader for reading this file as characters . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given key , in any .

code:
@ nullable public drawee controller get old controller ( ) {
 return mold controller ;
 }
comment:
START gets the old controller to be reused . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ non null public margins get min margins ( ) {
 return mmin margins ;
 }
comment:
START gets the minimal margins . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is active ( ) {
 return profile start time != DecimalInteger ;
 }
comment:
START returns true iff UNK is currently enabled . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public void set reparent with overlay ( boolean reparent with overlay ) {
 muse overlay = reparent with overlay ;
 }
comment:
START sets whether changes to parent should use an overlay or not . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public long get timeout ( ) {
 return this . timeout ;
 }
comment:
START return the configured timeout value , if any . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
@ override public float [ ] get radii ( ) {
 return radii ;
 }
comment:
START gets the radii . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public object get handler ( ) {
 return this . handler ;
 }
comment:
START return the handler object to execute . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public void set custom ( legend entry [ ] entries ) {
 entries = entries ;
 mis legend custom = true ;
 }
comment:
START sets a custom legend 's entries array . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK

code:
public boolean is UNK ( boolean do UNK checks ) {
 if ( socket . is closed ( ) || socket . is input shutdown ( ) || socket . is output shutdown ( ) ) {
 return false ;
 }
 if ( http2 connection != null ) {
 return true ;
 }
 if ( do UNK checks ) {
 try {
 int read timeout = socket . get so timeout ( ) ;
 try {
 socket . set so timeout ( DecimalInteger ) ;
 if ( source . exhausted ( ) ) {
 return false ;
 }
 return true ;
 }
 finally {
 socket . set so timeout ( read timeout ) ;
 }
 }
 catch ( socket timeout exception ignored ) {
 }
 catch ( exception e ) {
 return false ;
 }
 }
 return true ;
 }
comment:
START returns true if this connection is ready to host new streams . END
BLUE1:0.333333333333
--generate--
set whether to UNK UNK .
set whether to UNK UNK UNK .
set whether to UNK UNK UNK UNK .
set whether to UNK the UNK UNK .
set whether to UNK UNK UNK UNK

code:
@ non null public issue set enabled by default ( boolean enabled by default ) {
 menabled by default = enabled by default ;
 return this ;
 }
comment:
START sets whether this issue is enabled by default . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
public final object get user data ( ) {
 return m_user data ;
 }
comment:
START get the user data pointer that was provided in the body definition . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public boolean is enable timestamp ( ) {
 return this . enable timestamp ;
 }
comment:
START return whether the timestamp header is enabled or not . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public void set sim state for phone ( int phone id , string state ) {
 set telephony property ( phone id , telephony properties . property_ sim_ e , state ) ;
 }
comment:
START set telephony properties. y _ sim_ e for the given phone . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get app id ( ) {
 return mapp id ;
 }
comment:
START sets the owning application id . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get display id ( ) {
 return mdisplay id ;
 }
comment:
START gets the display id . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string get encoding ( ) {
 return this . encoding ;
 }
comment:
START return the specific character encoding used for this message , if any . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public static uri from parts ( string scheme , string ssp , string fragment ) {
 if ( scheme == null ) {
 throw new null pointer exception ( String ) ;
 }
 if ( ssp == null ) {
 throw new null pointer exception ( String ) ;
 }
 return new opaque uri ( scheme , part . from decoded ( ssp ) , part . from decoded ( fragment ) ) ;
 }
comment:
START creates an opaque uri from the given components . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given type , in any .

code:
public buffered reader reader ( int buffer size ) {
 return new buffered reader ( new input stream reader ( read ( ) ) , buffer size ) ;
 }
comment:
START returns a buffered reader for reading this file as characters . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given key , in any .

code:
public synchronized boolean in use ( ) {
 return used cpu != DecimalFloatingPoint || used ram != DecimalFloatingPoint || used io != DecimalFloatingPoint || used local test count != DecimalInteger || ! request list . is empty ( ) ;
 }
comment:
START return true if any resources have been UNK through this manager . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is speed required ( ) {
 return UNK required ;
 }
comment:
START returns whether the provider must provide speed information . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is bearing required ( ) {
 return UNK required ;
 }
comment:
START returns whether the provider must provide bearing information . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean remove all ( collection < ? > collection ) {
 return map collections . remove all helper ( this , collection ) ;
 }
comment:
START remove all keys in the array map that exist in the given collection . END
BLUE1:0.333333333333
--generate--
UNK UNK .
UNK UNK UNK .
UNK UNK UNK of the UNK .
UNK UNK UNK of the given UNK .
returns the UNK of the given UNK .

code:
private priority queue < score term > retrieve terms ( reader r , string field name ) throws exception {
 map < string , int > words = new hash map < > ( ) ;
 add term frequencies ( r , words , field name ) ;
 return create queue ( words ) ;
 }
comment:
START find words for a UNK query former . END
BLUE1:0.333333333333
--generate--
creates a new instance for the given type .
creates a new instance for the given UNK .
creates a new instance for the given file .
creates a new instance of the UNK .
creates a new instance for the UNK .

code:
public int get retry after ( ) {
 return mretry after ;
 }
comment:
START gets the sip retry after sec value . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
@ override public float [ ] get radii ( ) {
 return radii ;
 }
comment:
START gets the radii . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get track type ( ) {
 return mtrack type ;
 }
comment:
START gets the track type . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public boolean remove user ( int user handle ) {
 check manage or create users permission ( String ) ;
 if ( get user restrictions ( user handle . get calling user id ( ) ) . get boolean ( user manager . UNK remove_ r , false ) ) {
 log . w ( log_ g , String ) ;
 return false ;
 }
 long ident = binder . clear calling identity ( ) ;
 try {
 final user data user data ;
 int current user = activity manager . get current user ( ) ;
 if ( current user == user handle ) {
 log . w ( log_ g , String ) ;
 return false ;
 }
 synchronized ( mpackages lock ) {
 synchronized ( musers lock ) {
 user data = users . get ( user handle ) ;
 if ( user handle == DecimalInteger || user data == null || UNK user ids . get ( user handle ) ) {
 return false ;
 }
 UNK user ids . put ( user handle , true ) ;
 }
 try {
 mapp ops service . remove user ( user handle ) ;
 }
 catch ( remote exception e ) {
 log . w ( log_ g , String , e ) ;
 }
 user data . info . partial = true ;
 user data . info . flags |= user info . flag_ d ;
 write user p ( user data ) ;
 }
 if ( user data . info . profile group id != user info . no_ profile_ group_ d && user data . info . is managed profile ( ) ) {
 send profile removed broadcast ( user data . info . profile group id , user data . info . id ) ;
 }
 if ( g ) slog . i ( log_ g , String + user handle ) ;
 int res ;
 try {
 res = activity manager native . get default ( ) . stop user ( user handle , true , new UNK user callback . stub ( ) {
 @ override public void user stopped ( int user id ) {
 finish remove user ( user id ) ;
 }
 @ override public void user stop UNK ( int user id ) {
 }
 }
 ) ;
 }
 catch ( remote exception e ) {
 return false ;
 }
 return res == activity manager . user_ op_ s ;
 }
 finally {
 binder . restore calling identity ( ident ) ;
 }
 }
comment:
START removes a user and all data directories created for that user . END
BLUE1:0.333333333333
--generate--
UNK UNK .
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void clear ( ) {
 values . clear ( ) ;
 }
comment:
START removes all values . END
BLUE1:0.333333333333
--generate--
UNK UNK .
in the UNK of the UNK .
returns the UNK of the UNK .
in the UNK .
returns the UNK of the given UNK .

code:
public void remove at range ( int index , int size ) {
 final int end = math . min ( size , index + size ) ;
 for ( int i = index ;
 i < end ;
 i ++ ) {
 remove at ( i ) ;
 }
 }
comment:
START remove a range of mappings as a batch . END
BLUE1:0.333333333333
--generate--
UNK UNK .
UNK UNK for the UNK .
UNK UNK for the given UNK .
for the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ nullable public abstract sky value get ( ) throws e1 , e2 ;
comment:
START gets the stored value . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ non null public gnss clock get clock ( ) {
 return clock ;
 }
comment:
START gets the gnss receiver clock information associated with the measurements for the current event . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean has hierarchy ( ) {
 return mdrawee holder . has hierarchy ( ) ;
 }
comment:
START returns whether the hierarchy is set or not . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
final numeric type numeric type ( ) {
 return numeric type ;
 }
comment:
START get the associated UNK type END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public indices stats request builder all ( ) {
 request . all ( ) ;
 return this ;
 }
comment:
START sets all flags to return all stats . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set locations ( resource ... locations ) {
 this . locations = locations ;
 }
comment:
START set locations of properties files to be loaded . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public long number of parts ( ) {
 return number of parts ;
 }
comment:
START returns number of parts @return number of parts END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
public params set header focusable ( boolean header focusable ) {
 mheader focusable = header focusable ;
 return this ;
 }
comment:
START set whether the headers should be focusable . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
public int get column index ( ) {
 return mcolumn index ;
 }
comment:
START gets the column index at which the item is located . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
@ override public int get discard threshold ( ) {
 return discard threshold ;
 }
comment:
START return the threshold in bytes after which read data in the buffer should be discarded . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
public void set ( circle circle ) {
 this . x = circle . x ;
 this . y = circle . y ;
 this . radius = circle . radius ;
 }
comment:
START sets a new location and radius for this circle , based upon another circle . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public matrix4 set ( vector3 position , quaternion orientation ) {
 return set ( position . x , position . y , position . z , orientation . x , orientation . y , orientation . z , orientation . w ) ;
 }
comment:
START set this matrix to the specified translation and rotation . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public final void set disconnected ( disconnect cause disconnect cause ) {
 mdisconnect cause = disconnect cause ;
 ;
 set state ( connection . state_ d ) ;
 for ( listener l : listeners ) {
 l . on disconnected ( this , mdisconnect cause ) ;
 }
 }
comment:
START sets state to disconnected . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public boolean is frozen ( ) {
 return this . frozen ;
 }
comment:
START return whether the config is frozen , and no advice changes can be made . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public final int get vertex count ( ) {
 return m_count ;
 }
comment:
START get the vertex count . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is touch exploration enabled ( ) {
 return true ;
 }
comment:
START returns if the touch UNK in the system is enabled . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK UNK UNK

code:
public boolean can switch users ( ) {
 boolean allow user switching when system user locked = settings . global . get int ( context . get content resolver ( ) , settings . global . allow_ user_ UNK when_ system_ user_ d , DecimalInteger ) != DecimalInteger ;
 boolean is system user unlocked = is user unlocked ( user handle . m ) ;
 boolean in call = telephony manager . get default ( ) . get call state ( ) != telephony manager . UNK state_ e ;
 return ( allow user switching when system user locked || is system user unlocked ) && ! in call ;
 }
comment:
START returns whether switching users is currently allowed . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
protected abstract boolean should invalidate entry ( @ non null t entry , int config changes ) ;
comment:
START returns whether a cached entry has been invalidated by a configuration change . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public void set scale x ( float scale ) {
 this . scale . x = scale ;
 updated = false ;
 }
comment:
START sets scale along the x axis @param scale new scale along x axis END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void for each src ( allocation ain , allocation aout ) {
 for each src ( ain , aout , null ) ;
 }
comment:
START sets dst = src @param ain the source buffer @param aout the destination buffer END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
public static void set app UNK allowed ( boolean allowed ) {
 native set app UNK allowed ( allowed ) ;
 cache enabled tags ( ) ;
 }
comment:
START set whether application UNK is allowed for this process . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public int get session id ( ) {
 return session id ;
 }
comment:
START return the id for this session . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public params set items focusable ( boolean items focusable ) {
 UNK focusable = items focusable ;
 return this ;
 }
comment:
START set whether the items are focusable . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public void set max motor torque ( float torque ) {
 jni set max motor torque ( addr , torque ) ;
 }
comment:
START set the maximum motor torque , usually in n-m . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public time value get publish timeout ( ) {
 return publish timeout ;
 }
comment:
START returns the current publish timeout END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final boolean is validate existing transaction ( ) {
 return this . validate existing transaction ;
 }
comment:
START return whether existing transactions should be validated before participating in them . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
public abstract nested set < artifact > get runtime jars ( ) ;
comment:
START returns transitive runtime jars . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ override public int get phase ( ) {
 return this . phase ;
 }
comment:
START return the phase in which this scheduler will be started and stopped . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of all UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public boolean is front facing ( vector3 direction ) {
 float dot = normal . dot ( direction ) ;
 return dot <= DecimalInteger ;
 }
comment:
START returns whether the plane is facing the direction vector . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public void set overlay with decor caption enabled ( boolean enabled ) {
 window . set overlay with decor caption enabled ( enabled ) ;
 }
comment:
START set whether the caption should displayed directly on the content rather than push it down . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set jndi template ( jndi template jndi template ) {
 assert . not null ( jndi template , String ) ;
 this . jndi template = jndi template ;
 }
comment:
START set the jndi template to use for jndi lookups . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get capacity bytes ( ) {
 return msize bytes ;
 }
comment:
START get the capacity of the memory region in bytes @return int the memory capacity in bytes END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is skip results processing ( ) {
 return this . skip results processing ;
 }
comment:
START return whether results processing should be skipped . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public void clear all tabs ( ) {
 mtab widget . remove all views ( ) ;
 init tab host ( ) ;
 mtab content . remove all views ( ) ;
 mtab specs . clear ( ) ;
 request layout ( ) ;
 invalidate ( ) ;
 }
comment:
START removes all tabs from the tab widget associated with this tab host . END
BLUE1:0.333333333333
--generate--
UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of UNK .

code:
public static < t > observable < t > concat ( single < ? extends t > t1 , single < ? extends t > t2 ) {
 return observable . concat ( as observable ( t1 ) , as observable ( t2 ) ) ;
 }
comment:
START returns an observable that emits the items emitted by two singles , one after the other . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given key , in any .
returns a immutable array of the UNK .
returns a immutable instance of the given file .

code:
public closeable reference < bitmap > create bitmap ( display metrics display , int [ ] colors , int offset , int stride , int width , int height , bitmap . config config ) {
 return create bitmap ( display , colors , offset , stride , width , height , config , null ) ;
 }
comment:
START creates a bitmap with the specified width and height . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given key , in any .

code:
public final int get current volume ( ) {
 return mcurrent volume ;
 }
comment:
START gets the current volume . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is running ( ) {
 return this . running ;
 }
comment:
START return whether the stop watch is currently running . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
@ override public float [ ] get radii ( ) {
 return UNK radii ;
 }
comment:
START gets the radii . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public void set hour ( int hour ) {
 set hour internal ( hour , false , true ) ;
 }
comment:
START set the current hour . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private class < ? > create UNK subclass ( root bean definition bean definition ) {
 enhancer enhancer = new enhancer ( ) ;
 enhancer . set superclass ( bean definition . get bean class ( ) ) ;
 enhancer . set naming policy ( spring naming policy . e ) ;
 if ( this . owner instanceof configurable bean factory ) {
 class loader cl = ( ( configurable bean factory ) this . owner ) . get bean class loader ( ) ;
 enhancer . set strategy ( new class loader aware generator strategy ( cl ) ) ;
 }
 enhancer . set callback filter ( new method override callback filter ( bean definition ) ) ;
 enhancer . set callback types ( callback_ s ) ;
 return enhancer . create class ( ) ;
 }
comment:
START create an UNK subclass of the bean class for the provided bean definition , using UNK . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file , in use .

code:
public static < t > observable < t > concat ( single < ? extends t > t1 , single < ? extends t > t2 , single < ? extends t > t3 , single < ? extends t > t4 , single < ? extends t > t5 , single < ? extends t > t6 , single < ? extends t > t7 ) {
 return observable . concat ( as observable ( t1 ) , as observable ( t2 ) , as observable ( t3 ) , as observable ( t4 ) , as observable ( t5 ) , as observable ( t6 ) , as observable ( t7 ) ) ;
 }
comment:
START returns an observable that emits the items emitted by seven singles , one after the other . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given key , in any .

code:
public string remove ( string key ) {
 return map . remove ( key ) ;
 }
comment:
START removes the provided setting from the internal map holding the current list of settings . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given type .
returns a immutable instance of the given data .
returns a immutable instance of the given UNK .

code:
public string get contact uri ( ) {
 return UNK uri ;
 }
comment:
START gets the contact uri . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set refresh check delay ( long refresh check delay ) {
 this . refresh check delay = refresh check delay ;
 }
comment:
START set the delay between refresh checks , in milliseconds . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean is submit button enabled ( ) {
 return UNK button enabled ;
 }
comment:
START returns whether the submit button is enabled when necessary or never displayed . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public int get suggest threshold ( ) {
 return msuggest threshold ;
 }
comment:
START gets the suggestion threshold . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public term vectors request offsets ( boolean offsets ) {
 set flag ( flag . offsets , offsets ) ;
 return this ;
 }
comment:
START return the start and stop offsets for each term if they were stored or skip offsets . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean contains task ( task t ) {
 return mtask key indices . contains key ( t . key ) ;
 }
comment:
START returns whether a task is in this grouping . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
@ non null public native sync params get sync params ( ) ;
comment:
START gets the a/ v sync mode . END
BLUE1:0.333333333333
--generate--
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes of the given UNK .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public pres cmd id get cmd id ( ) {
 return mcmd id ;
 }
comment:
START gets the presence command id . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public task id get task id ( ) {
 return task id ;
 }
comment:
START get the task id to look up . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public long get last time active ( ) {
 return mlast time active ;
 }
comment:
START get the last time this configuration was active , measured in milliseconds since the epoch . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
public static date time formatter weekyear ( ) {
 return constants . UNK ;
 }
comment:
START returns a formatter for a four digit weekyear . END
BLUE1:0.333333333333
--generate--
returns the UNK of UNK .
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public reader reader ( string charset ) {
 try {
 return new input stream reader ( read ( ) , charset ) ;
 }
 catch ( unsupported encoding exception ex ) {
 throw new runtime exception ( String + this , ex ) ;
 }
 }
comment:
START returns a reader for reading this file as characters . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given key , in any .

code:
public reader reader ( string charset ) {
 try {
 return new input stream reader ( read ( ) , charset ) ;
 }
 catch ( unsupported encoding exception ex ) {
 throw new gdx runtime exception ( String + this , ex ) ;
 }
 }
comment:
START returns a reader for reading this file as characters . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key , in any .

code:
public boolean is wifi enabled ( ) {
 return get wifi state ( ) == wifi_ state_ d ;
 }
comment:
START return whether wi- fi is enabled or disabled . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public long get start time ( ) {
 return start time ;
 }
comment:
START returns the task start time END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set instantiation strategy ( instantiation strategy instantiation strategy ) {
 this . instantiation strategy = instantiation strategy ;
 }
comment:
START set the instantiation strategy to use for creating bean instances . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public void set mapping locations ( resource [ ] mapping locations ) {
 this . mapping locations = mapping locations ;
 }
comment:
START set location of properties files to be loaded , containing object name mappings . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
protected boolean is include client info ( ) {
 return this . include client info ;
 }
comment:
START return whether the client address and session id should be included in the log message . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
public void set motor speed ( float speed ) {
 jni set motor speed ( addr , speed ) ;
 }
comment:
START set the motor speed , usually in radians per second . END
BLUE1:0.333333333333
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean is translation enabled ( ) {
 return mis translation enabled ;
 }
comment:
START gets whether the translations gesture is enabled or not . END
BLUE1:0.333333333333
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public double get min progress ( ) {
 return min progress ;
 }
comment:
START get the minimum progress . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public text formatter get text formatter ( ) {
 return text formatter ;
 }
comment:
START get the text formatter . END
BLUE1:0.333333333333
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public model and view model and view ( object model , string view name ) {
 return new model and view ( model , view name ) ;
 }
comment:
START creates a new model and view object with given arguments . END
BLUE1:0.333333333333
--generate--
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable array of the UNK UNK .

code:
public boolean remove listener ( event listener listener ) {
 return root . remove listener ( listener ) ;
 }
comment:
START removes a listener from the root . END
BLUE1:0.3
--generate--
returns the listener that be enabled in the view .
returns the listener that be enabled in the list .
returns the listener that be used for the UNK .
returns the listener that be enabled in the view
returns the listener that be enabled in the list of the current .

code:
@ override public void set up ( ) throws exception {
 super . set up ( ) ;
 listener = new animator listener adapter ( ) {
 @ override public void on animation start ( animator animation ) {
 assert false ( started ) ;
 assert true ( running ) ;
 started = true ;
 }
 @ override public void on animation cancel ( animator animation ) {
 assert false ( canceled ) ;
 assert true ( running || started ) ;
 canceled = true ;
 }
 @ override public void on animation end ( animator animation ) {
 assert true ( running || started ) ;
 running = false ;
 started = false ;
 super . on animation end ( animation ) ;
 }
 }
 ;
 animator . add listener ( listener ) ;
 animator . set duration ( anim_ n ) ;
 future = new future UNK ( ) ;
 running = false ;
 canceled = false ;
 started = false ;
 }
comment:
START sets up the fields used by each test . END
BLUE1:0.3
--generate--
set the listener to be used for the UNK .
set the listener to be used to the UNK .
set the listener to be used to the UNK of the UNK .
set the listener to be used for the UNK
set the listener to be used to the UNK of the UNK

code:
public abstract void add user restrictions listener ( user restrictions listener listener ) ;
comment:
START adds a listener to user restriction changes . END
BLUE1:0.3
--generate--
sets the listener that will be used to UNK .
sets the listener that will be used to the UNK .
sets the listener that will be used to the given UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to UNK the UNK .

code:
public void remove test provider ( string provider ) {
 try {
 service . remove test provider ( provider , context . get op package name ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START removes the mock location provider with the given name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public create index request source ( xcontent builder source ) {
 return source ( source . bytes ( ) ) ;
 }
comment:
START sets the settings and mappings as a single source . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ non null public insets get optical insets ( ) {
 return insets . e ;
 }
comment:
START return in insets the layout insets suggested by this drawable for use with alignment operations during layout . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void set expression suffix ( string expression suffix ) {
 assert . has text ( expression suffix , String ) ;
 this . expression suffix = expression suffix ;
 }
comment:
START set the suffix that an expression string ends with . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public realm object schema create ( string class name ) {
 check empty ( class name , empty_ string_ g ) ;
 if ( realm == null ) {
 realm object schema realm object schema = new realm object schema ( class name ) ;
 dynamic class to schema . put ( class name , realm object schema ) ;
 return realm object schema ;
 }
 else {
 string internal table name = table_ x + class name ;
 if ( internal table name . length ( ) > table . table_ max_ h ) {
 throw new illegal argument exception ( String + class name . length ( ) ) ;
 }
 if ( realm . shared realm . has table ( internal table name ) ) {
 throw new illegal argument exception ( String + class name ) ;
 }
 table table = realm . shared realm . get table ( internal table name ) ;
 realm object schema . dynamic column map column indices = new realm object schema . dynamic column map ( table ) ;
 return new realm object schema ( realm , table , column indices ) ;
 }
 }
comment:
START adds a new class to the realm . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
binary memcache message set total body length ( int total body length ) ;
comment:
START sets the total body length . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void set url decode ( boolean url decode ) {
 this . url path helper . set url decode ( url decode ) ;
 }
comment:
START set if the context path and request uri should be url-decoded . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set transform and clip ( int page index , @ nullable matrix transform , @ nullable rect clip ) {
 throw if closed ( ) ;
 throw if page not in document ( page index ) ;
 throw if not null and not UNK ( transform ) ;
 if ( transform == null ) {
 transform = matrix . identity_ x ;
 }
 if ( clip == null ) {
 point size = new point ( ) ;
 get page size ( page index , size ) ;
 native set transform and clip ( mnative document , page index , transform . native_instance , DecimalInteger , DecimalInteger , size . x , size . y ) ;
 }
 else {
 native set transform and clip ( mnative document , page index , transform . native_instance , clip . left , clip . top , clip . right , clip . bottom ) ;
 }
 }
comment:
START sets a transformation and clip for a given page . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public resource chain registration add transformer ( resource transformer transformer ) {
 assert . not null ( transformer , String ) ;
 this . transformers . add ( transformer ) ;
 if ( transformer instanceof UNK link resource transformer ) {
 this . has UNK link transformer = true ;
 }
 return this ;
 }
comment:
START add a resource transformer to the chain . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
private int get points for time ( long time , touch point [ ] touch points ) {
 int num points found = DecimalInteger ;
 for ( int i = DecimalInteger ;
 i < strokes . size ( ) ;
 i ++ ) {
 stroke description stroke description = strokes . get ( i ) ;
 if ( stroke description . has point for time ( time ) ) {
 touch points [ num points found ] . mpath index = i ;
 touch points [ num points found ] . mis start of path = ( time == stroke description . mstart time ) ;
 touch points [ num points found ] . mis end of path = ( time == stroke description . mend time ) ;
 stroke description . get pos for time ( time , mtemp pos ) ;
 touch points [ num points found ] . x = math . round ( mtemp pos [ DecimalInteger ] ) ;
 touch points [ num points found ] . y = math . round ( mtemp pos [ DecimalInteger ] ) ;
 num points found ++ ;
 }
 }
 return num points found ;
 }
comment:
START get the points that correspond to a particular moment in time . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ system api @ requires permission ( android . manifest . permission . install_ grant_ UNK s ) public void set granted runtime permissions ( string [ ] permissions ) {
 install flags |= package manager . install_ grant_ UNK s ;
 this . granted runtime permissions = permissions ;
 }
comment:
START sets which runtime permissions to be granted to the package at installation . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
urlclass loader new loader ( l base ) {
 return new urlclass loader ( new l [ ] {
 base }
 , null ) ;
 }
comment:
START creates a class loader with the given base url as its classpath . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
http client request get ( int port , string host , string request i ) ;
comment:
START create an http get request to send to the server at the specified host and port . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public create index request source ( byte [ ] source , int offset , int length ) {
 return source ( new bytes array ( source , offset , length ) ) ;
 }
comment:
START sets the settings and mappings as a single source . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
int find closest motion row ( int y ) {
 final int child count = get child count ( ) ;
 if ( child count == DecimalInteger ) {
 return invalid_ n ;
 }
 final int motion row = find motion row ( y ) ;
 return motion row != invalid_ n ? motion row : mfirst position + child count - DecimalInteger ;
 }
comment:
START find the row closest to y . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set video i ( uri uri ) {
 set video i ( uri , null ) ;
 }
comment:
START sets video uri . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public float get ratio ( ) {
 return joint . get ratio ( ) ;
 }
comment:
START get the gear ratio . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static long get scan time millis ( url device url device ) {
 try {
 return url device . get extra long ( UNK y ) ;
 }
 catch ( exception e ) {
 throw new runtime exception ( String + url device . get id ( ) , e ) ;
 }
 }
comment:
START get the scan time for a device if available . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ can ignore return value public builder < k , v > put ( k key , v value ) {
 check entry not null ( key , value ) ;
 builder multimap . put ( key , value ) ;
 return this ;
 }
comment:
START adds a key-value mapping to the built multimap . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
@ requires permission ( android . manifest . permission . read_ phone_ e ) public string get voice mail number ( phone account handle account handle ) {
 try {
 if ( is service connected ( ) ) {
 return get telecom service ( ) . get voice mail number ( account handle , context . get op package name ( ) ) ;
 }
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return null ;
 }
comment:
START return the voicemail number for a given phone account . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public long get value as long ( long default value ) {
 long [ ] l = get value as longs ( ) ;
 if ( l == null || l . length < DecimalInteger ) {
 return default value ;
 }
 return l [ DecimalInteger ] ;
 }
comment:
START gets the value or null if none exists . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public synchronized void unload ( string file name ) {
 if ( tasks . size ( ) > DecimalInteger ) {
 asset loading task curr asset = tasks . first element ( ) ;
 if ( curr asset . asset desc . file name . equals ( file name ) ) {
 curr asset . cancel = true ;
 log . debug ( String + file name ) ;
 return ;
 }
 }
 int found index = - DecimalInteger ;
 for ( int i = DecimalInteger ;
 i < load queue . size ;
 i ++ ) {
 if ( load queue . get ( i ) . file name . equals ( file name ) ) {
 found index = i ;
 break ;
 }
 }
 if ( found index != - DecimalInteger ) {
 to load -- ;
 load queue . remove index ( found index ) ;
 log . debug ( String + file name ) ;
 return ;
 }
 class type = asset types . get ( file name ) ;
 if ( type == null ) throw new gdx runtime exception ( String + file name ) ;
 ref counted container asset ref = assets . get ( type ) . get ( file name ) ;
 asset ref . dec ref count ( ) ;
 if ( asset ref . get ref count ( ) <= DecimalInteger ) {
 log . debug ( String + file name ) ;
 if ( asset ref . get object ( object . class ) instanceof disposable ) ( ( disposable ) asset ref . get object ( object . class ) ) . dispose ( ) ;
 asset types . remove ( file name ) ;
 assets . get ( type ) . remove ( file name ) ;
 }
 else {
 log . debug ( String + file name ) ;
 }
 array < string > dependencies = asset dependencies . get ( file name ) ;
 if ( dependencies != null ) {
 for ( string dependency : dependencies ) {
 if ( is loaded ( dependency ) ) unload ( dependency ) ;
 }
 }
 if ( asset ref . get ref count ( ) <= DecimalInteger ) {
 asset dependencies . remove ( file name ) ;
 }
 }
comment:
START removes the asset and all its dependencies , if they are not used by other assets . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
private static int get phase2 ( string phase2 ) {
 if ( String . equals ignore case ( phase2 ) ) {
 return wifi enterprise config . phase2 . p ;
 }
 if ( String . equals ignore case ( phase2 ) ) {
 return wifi enterprise config . phase2 . p ;
 }
 if ( String . equals ignore case ( phase2 ) ) {
 return wifi enterprise config . phase2 . v2 ;
 }
 if ( String . equals ignore case ( phase2 ) ) {
 return wifi enterprise config . phase2 . c ;
 }
 throw new illegal argument exception ( String ) ;
 }
comment:
START get the phase NUMBER method from a string . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void set title ( string title ) {
 this . title = title ;
 }
comment:
START sets the window title . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public final int get support ( final vec2 d ) {
 int best index = DecimalInteger ;
 float best value = vec2 . dot ( m_vertices [ DecimalInteger ] , d ) ;
 for ( int i = DecimalInteger ;
 i < m_count ;
 i ++ ) {
 float value = vec2 . dot ( m_vertices [ i ] , d ) ;
 if ( value > best value ) {
 best index = i ;
 best value = value ;
 }
 }
 return best index ;
 }
comment:
START get the supporting vertex index in the given direction . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public media session record get default media button session ( int user id , boolean include not playing ) {
 if ( mglobal priority session != null && mglobal priority session . is active ( ) ) {
 return mglobal priority session ;
 }
 if ( mcached button receiver != null ) {
 return mcached button receiver ;
 }
 array list < media session record > records = get priority list locked ( true , media session . flag_ UNK media_ s , user id ) ;
 if ( records . size ( ) > DecimalInteger ) {
 media session record record = records . get ( DecimalInteger ) ;
 if ( record . is playback active ( false ) ) {
 mlast interesting record = record ;
 mcached button receiver = record ;
 }
 else if ( mlast interesting record != null ) {
 if ( records . contains ( mlast interesting record ) ) {
 mcached button receiver = mlast interesting record ;
 }
 else {
 mlast interesting record = null ;
 }
 }
 if ( include not playing && mcached button receiver == null ) {
 mcached button receiver = record ;
 }
 }
 return mcached button receiver ;
 }
comment:
START get the highest priority session that can handle media buttons . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private static string unique name ( ) {
 return String + uid ++ ;
 }
comment:
START return a new unique label name that can not be UNK with a java source code label . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final class < ? extends annotation > get annotation type ( ) {
 return annotation strategy . get annotation type ( ) ;
 }
comment:
START gets the annotation type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean contains ( string existing file ) {
 return metadata . contains key ( existing file ) ;
 }
comment:
START returns true iff this metadata contains the given file . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
int exclusive time micros ( ) {
 long exclusive = UNK time nanos ( ) ;
 for ( operation child : UNK ) {
 exclusive -= child . UNK time nanos ( ) ;
 }
 if ( exclusive < DecimalInteger ) {
 throw new assertion error ( loaded class . name ) ;
 }
 return nanos to micros ( exclusive ) ;
 }
comment:
START returns how long this class initialization took . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected model and view get model and view ( string view name , exception ex ) {
 model and view mv = new model and view ( view name ) ;
 if ( this . exception attribute != null ) {
 if ( logger . is debug enabled ( ) ) {
 logger . debug ( String + this . exception attribute + String ) ;
 }
 mv . add object ( this . exception attribute , ex ) ;
 }
 return mv ;
 }
comment:
START return a model and view for the given view name and exception . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public UNK aggregation builder UNK ( double ... percents ) {
 if ( percents == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 double [ ] sorted percents = arrays . copy of ( percents , percents . length ) ;
 arrays . sort ( sorted percents ) ;
 this . percents = sorted percents ;
 return this ;
 }
comment:
START set the values to compute percentiles from . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public abstract array map < string , ? extends pkg > get package stats ( ) ;
comment:
START returns a mapping containing package statistics . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public interval stats get latest usage stats ( int interval type ) {
 synchronized ( lock ) {
 if ( interval type < DecimalInteger || interval type >= UNK dirs . length ) {
 throw new illegal argument exception ( String + interval type ) ;
 }
 final int file count = msorted stat files [ interval type ] . size ( ) ;
 if ( file count == DecimalInteger ) {
 return null ;
 }
 try {
 final atomic file f = msorted stat files [ interval type ] . value at ( file count - DecimalInteger ) ;
 interval stats stats = new interval stats ( ) ;
 usage stats xml . read ( f , stats ) ;
 return stats ;
 }
 catch ( exception e ) {
 slog . e ( g , String , e ) ;
 }
 }
 return null ;
 }
comment:
START get the latest stats that exist for this interval type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public mppoint f create from parcel ( parcel in ) {
 mppoint f r = new mppoint f ( DecimalInteger , DecimalInteger ) ;
 r . UNK from parcel ( in ) ;
 return r ;
 }
comment:
START return a new point from the data in the specified parcel . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public abstract void set UNK mode immediate ( boolean enabled , @ non null component name package name , int user id , @ non null component name calling ) ;
comment:
START set the current vr mode state immediately . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given view .
sets the UNK of the given UNK .

code:
public float get exposure compensation step ( ) {
 return get float ( key_ exposure_ compensation_ p , DecimalInteger ) ;
 }
comment:
START gets the exposure compensation step . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public abstract boolean set default UNK package name as user ( string package name , @ user id int int user id ) ;
comment:
START set the default browser package name for a specific user . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public string get cookie path ( ) {
 return this . cookie path ;
 }
comment:
START return the path for cookies created by this generator . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set ratio ( float ratio ) {
 jni set ratio ( addr , ratio ) ;
 }
comment:
START set the gear ratio . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private named value info update named value info ( method parameter parameter , named value info info ) {
 string name = info . name ;
 if ( info . name . length ( ) == DecimalInteger ) {
 name = parameter . get parameter name ( ) ;
 if ( name == null ) {
 string type = parameter . get nested parameter type ( ) . get name ( ) ;
 throw new illegal argument exception ( String + type + String + String ) ;
 }
 }
 string default value = ( value constants . default_ e . equals ( info . default value ) ? null : info . default value ) ;
 return new named value info ( name , info . required , default value ) ;
 }
comment:
START create a new named value info based on the given named value info with sanitized values . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK UNK

code:
public numeric double values get double values ( ) {
 return values ;
 }
comment:
START return the wrapped values . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public static < t > t single result ( collection < t > results ) throws incorrect result size data access exception {
 int size = ( results != null ? results . size ( ) : DecimalInteger ) ;
 if ( size == DecimalInteger ) {
 return null ;
 }
 if ( results . size ( ) > DecimalInteger ) {
 throw new incorrect result size data access exception ( DecimalInteger , size ) ;
 }
 return results . iterator ( ) . next ( ) ;
 }
comment:
START return a single result object from the given collection . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public action execution exception to action execution exception ( action action ) {
 return to action execution exception ( String , true , action ) ;
 }
comment:
START returns a new action execution exception without a message prefix . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set title ( string title ) throws exception {
 write bytes ( set_ UNK e , title . get bytes ( ) , new byte [ ] {
 l }
 ) ;
 }
comment:
START set the terminal title . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public abstract table create table ( class < ? extends realm model > clazz , shared realm shared realm ) ;
comment:
START creates the backing table in realm for the given realm object class . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set jndi template ( jndi template jndi template ) {
 this . jndi template = ( jndi template != null ? jndi template : new jndi template ( ) ) ;
 }
comment:
START set the jndi template to use for jndi lookups . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int get caller uid ( ) {
 return UNK uid ;
 }
comment:
START gets the request caller uid . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
static void add active context ( search context context ) {
 active_ UNK s . put ( context , new runtime exception ( context . to string ( ) ) ) ;
 }
comment:
START add an active search context to the list of tracked contexts . END
BLUE1:0.285714285714
--generate--
removes the UNK from the UNK .
remove the UNK from the given UNK .
removes the UNK from the given UNK .
remove the UNK of the given UNK .
removes the UNK from the specified UNK .

code:
public output stream write ( boolean append , int buffer size ) {
 return new buffered output stream ( write ( append ) , buffer size ) ;
 }
comment:
START returns a buffered stream for writing to this file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set extra info ( string extra info ) {
 synchronized ( this ) {
 this . mextra info = extra info ;
 }
 }
comment:
START set the extra info field . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public void remove cookie ( string name ) {
 cookie cookie = new cookie ( name , String ) ;
 cookie . set max age ( DecimalInteger ) ;
 response . add cookie ( cookie ) ;
 }
comment:
START removes the cookie . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK .
used to the UNK of the given .

code:
public static icon create from stream ( input stream stream ) throws exception {
 data input stream input stream = new data input stream ( stream ) ;
 final int version = input stream . read int ( ) ;
 if ( version >= version_ stream_ r ) {
 final int type = input stream . read byte ( ) ;
 switch ( type ) {
 case type_ p : return create with bitmap ( bitmap factory . decode stream ( input stream ) ) ;
 case type_ a : final int length = input stream . read int ( ) ;
 final byte [ ] data = new byte [ length ] ;
 input stream . read ( data , DecimalInteger , length ) ;
 return create with data ( data , DecimalInteger , length ) ;
 case type_ e : final string package name = input stream . read f ( ) ;
 final int res id = input stream . read int ( ) ;
 return create with resource ( package name , res id ) ;
 case type_ i : final string uri or path = input stream . read f ( ) ;
 return create with content uri ( uri or path ) ;
 }
 }
 return null ;
 }
comment:
START create an icon from the specified stream . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK UNK of the given UNK .

code:
public void set resource ( resource resource ) {
 this . resource = resource ;
 }
comment:
START set the resource . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public static synchronized cookie manager get instance ( ) {
 return web view factory . get provider ( ) . get cookie manager ( ) ;
 }
comment:
START gets the singleton cookie manager instance . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public requested content type resolver builder default content type ( media type content type ) {
 this . content type resolver = new fixed content type resolver ( content type ) ;
 return this ;
 }
comment:
START set the default content type to use when no content type is requested . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public content negotiation manager get content negotiation manager ( ) {
 return this . content negotiation manager ;
 }
comment:
START return the content negotiation manager to use for the produces request condition , if any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
@ non null public cpu usage info [ ] get cpu UNK ( ) {
 try {
 return service . get cpu UNK ( context . get op package name ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START return an array of cpu usage info for each core . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
@ requires permission ( manifest . permission . access_ UNK s ) public abstract list < ephemeral application info > get ephemeral applications ( ) ;
comment:
START gets the ephemeral applications the user recently used . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
@ non null public final list < printer id > get tracked printers ( ) {
 print service . throw if not called on main thread ( ) ;
 if ( mis destroyed ) {
 return collections . empty list ( ) ;
 }
 return new array list < printer id > ( UNK printers ) ;
 }
comment:
START gets the printers that should be tracked . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public builder set advertise mode ( int advertise mode ) {
 if ( advertise mode < UNK mode_ low_ r || advertise mode > UNK mode_ low_ y ) {
 throw new illegal argument exception ( String + advertise mode ) ;
 }
 mode = advertise mode ;
 return this ;
 }
comment:
START set advertise mode to control the advertising power and latency . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set title ( string title ) {
 this . title = title ;
 }
comment:
START sets the window title . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public static body builder patch ( i url ) {
 return method ( http method . h , url ) ;
 }
comment:
START create an http patch builder with the given url . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public immutable map < string , string > get execution info ( ) {
 return execution info ;
 }
comment:
START returns a map to indicate special execution requirements , such as hardware platforms , etc. . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ actions public long get actions ( ) {
 return actions ;
 }
comment:
START get the current actions available on this session . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set background ( drawable header background ) {
 maccount header builder . maccount header background . set image drawable ( header background ) ;
 }
comment:
START set the background for the header @param header background END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ suppress warnings ( String ) public b pre tags ( string ... pre tags ) {
 this . pre tags = pre tags ;
 return ( b ) this ;
 }
comment:
START set the pre tags that will be used for highlighting . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
protected abstract simple decoder < decoder input buffer , ? extends simple output buffer , ? extends audio decoder exception > create decoder ( format format ) throws audio decoder exception ;
comment:
START creates a decoder for the given format . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
private static long cur time ( ) {
 return system . current time millis ( ) / DecimalInteger ;
 }
comment:
START returns seconds since unix epoch . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
void clear metadata ( ) {
 final file pm state = new file ( mstate dir , package_ UNK l ) ;
 if ( pm state . exists ( ) ) pm state . delete ( ) ;
 }
comment:
START remove the pm metadata state . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ fluent context exception handler ( @ nullable handler < throwable > handler ) ;
comment:
START set an exception handler called when the context runs an action throwing an uncaught throwable . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public writer writer ( boolean append , string charset ) {
 if ( type == file type . classpath ) throw new gdx runtime exception ( String + file ) ;
 if ( type == file type . internal ) throw new gdx runtime exception ( String + file ) ;
 parent ( ) . mkdirs ( ) ;
 try {
 file output stream output = new file output stream ( file ( ) , append ) ;
 if ( charset == null ) return new output stream writer ( output ) ;
 else return new output stream writer ( output , charset ) ;
 }
 catch ( exception ex ) {
 if ( file ( ) . is directory ( ) ) throw new gdx runtime exception ( String + file + String + type + String , ex ) ;
 throw new gdx runtime exception ( String + file + String + type + String , ex ) ;
 }
 }
comment:
START returns a writer for writing to this file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public intent put extra ( string name , short [ ] value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put short array ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public static < t > boolean is immutable ( iterable < t > iterable ) {
 return iterable instanceof immutable list < ? > || iterable instanceof immutable set < ? > || iterable instanceof iterables chain < ? > || iterable instanceof nested set < ? > || iterable instanceof immutable iterable < ? > ;
 }
comment:
START returns true if the given iterable can be verified to be immutable . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void validate ( ) {
 array < t > array = this . array ;
 if ( array . size == DecimalInteger ) {
 clear ( ) ;
 return ;
 }
 for ( iterator < t > iter = items ( ) . iterator ( ) ;
 iter . has next ( ) ;
 ) {
 t selected = iter . next ( ) ;
 if ( ! array . contains ( selected , false ) ) iter . remove ( ) ;
 }
 if ( required && selected . size == DecimalInteger ) set ( array . first ( ) ) ;
 }
comment:
START removes objects from the selection that are no longer in the items array . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
@ thread safe public static sky key key ( repository name repository , rooted path rooted path , immutable set < path fragment > excluded paths , filtering policy filtering policy ) {
 return sky key . create ( sky functions . UNK UNK of_ UNK UNK y , new prepare deps of targets under directory key ( new recursive pkg key ( repository , rooted path , excluded paths ) , filtering policy ) ) ;
 }
comment:
START create a prepare deps of targets under directory request , specifying a filtering policy for targets . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK to the UNK .

code:
public static void create table ( database db , boolean if not exists ) {
 string constraint = if not exists ? String : String ;
 db . exec l ( String + constraint + String + String ) ;
 }
comment:
START creates the underlying database table . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set message codes resolver ( message codes resolver message codes resolver ) {
 get internal binding result ( ) . set message codes resolver ( message codes resolver ) ;
 }
comment:
START set the strategy to use for resolving errors into message codes . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public float get reference angle ( ) {
 return jni get reference angle ( addr ) ;
 }
comment:
START get the current motor torque , usually in n-m . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static int get orientation ( byte [ ] jpeg ) {
 return get orientation ( new byte array input stream ( jpeg ) ) ;
 }
comment:
START gets orientation information from jpeg byte array . returns NUMBER if there is no valid orientation information . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set default encoding ( string default encoding ) {
 this . default encoding = default encoding ;
 }
comment:
START set the default charset to use for parsing properties files . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public result set extractor < ? > get result set extractor ( ) {
 return this . result set extractor ;
 }
comment:
START return the result set extractor held by this parameter , if any . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set heartbeat ( long [ ] heartbeat ) {
 if ( heartbeat == null || heartbeat . length != DecimalInteger ) {
 throw new illegal argument exception ( String + ( heartbeat != null ? heartbeat . length : String ) ) ;
 }
 string value = heartbeat [ DecimalInteger ] + String + heartbeat [ DecimalInteger ] ;
 if ( heartbeat [ DecimalInteger ] < DecimalInteger || heartbeat [ DecimalInteger ] < DecimalInteger ) {
 throw new illegal argument exception ( String + value ) ;
 }
 set ( t , value ) ;
 }
comment:
START set the heartbeat header . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given view .

code:
public float get motor speed ( ) {
 return jni get motor speed ( addr ) ;
 }
comment:
START get the motor speed in radians per second . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public static byte buf copy long ( long value ) {
 byte buf buf = buffer ( DecimalInteger ) ;
 buf . write long ( value ) ;
 return buf ;
 }
comment:
START creates a new NUMBER big-endian buffer that holds the specified NUMBER integer . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public float get angle ( ) {
 return jni get angle ( addr ) ;
 }
comment:
START get the angle in radians . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set cell location data ( int base station id , int base station latitude , int base station longitude ) {
 this . mbase station id = base station id ;
 this . mbase station latitude = base station latitude ;
 this . mbase station longitude = base station longitude ;
 }
comment:
START set the cell location data . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public int number of files ( ) {
 return number of files ;
 }
comment:
START returns number of files that where snapshotted END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ fluent multi map set ( string name , string value ) ;
comment:
START sets a value under the specified name . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public string [ ] get error codes ( ) {
 return this . error codes ;
 }
comment:
START return the sql error codes to match . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
return the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
@ suppress warnings ( String ) public c set string argument ( string arg , string value ) {
 args . put string ( arg , value ) ;
 return ( c ) this ;
 }
comment:
START sets an argument to a string value . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public get repositories request repositories ( string [ ] repositories ) {
 this . repositories = repositories ;
 return this ;
 }
comment:
START sets the list or repositories . END
BLUE1:0.285714285714
--generate--
returns the current number of UNK .
returns the current number of UNK UNK .
returns the UNK for the given UNK .
returns the current number of all UNK .
returns the current number of UNK UNK

code:
public synchronized long get queued time ( ) {
 return mjob start time - mjob submit time ;
 }
comment:
START gets the queued time in milliseconds for the currently running job . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
private test suite create descending suite ( final feature specific test suite builder < ? , ? extends one size test container generator < map < k , v > , entry < k , v > > > parent builder ) {
 final test sorted map generator < k , v > delegate = ( test sorted map generator < k , v > ) parent builder . get subject generator ( ) . get inner generator ( ) ;
 list < feature < ? > > features = new array list < feature < ? > > ( ) ;
 features . add ( no UNK . g ) ;
 features . add all ( parent builder . get features ( ) ) ;
 return sub suite using ( new descending test map generator < k , v > ( delegate ) ) . named ( parent builder . get name ( ) + String ) . with features ( features ) . suppressing ( parent builder . get suppressed tests ( ) ) . create test suite ( ) ;
 }
comment:
START create a suite whose maps are descending views of other maps . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public static int buffer wrap ( int [ ] array , int start , int len ) {
 if ( array == null ) {
 throw new null pointer exception ( ) ;
 }
 if ( start < DecimalInteger || len < DecimalInteger || ( long ) len + ( long ) start > array . length ) {
 throw new index out of bounds exception ( ) ;
 }
 int buffer buf = buffer factory . new int buffer ( array ) ;
 buf . position = start ;
 buf . limit = start + len ;
 return buf ;
 }
comment:
START creates a new int buffer by wrapping the given int array . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
< t > message producer < t > sender ( string address ) ;
comment:
START create a message sender against the specified address . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public void set required annotation type ( class < ? extends annotation > required annotation type ) {
 assert . not null ( required annotation type , String ) ;
 this . required annotation type = required annotation type ;
 }
comment:
START set the ` required ' annotation type , to be used on bean property setter methods . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public boolean set preferred network type ( int sub id , int network type ) {
 try {
 telephony telephony = get telephony ( ) ;
 if ( telephony != null ) return telephony . set preferred network type ( sub id , network type ) ;
 }
 catch ( remote exception ex ) {
 rlog . e ( g , String , ex ) ;
 }
 catch ( null pointer exception ex ) {
 rlog . e ( g , String , ex ) ;
 }
 return false ;
 }
comment:
START set the preferred network type . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set motor speed ( float speed ) {
 joint . set motor speed ( speed ) ;
 }
comment:
START set the motor speed , usually in radians per second . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void add enum ( int tag , int value ) {
 int tag type = keymaster defs . get tag type ( tag ) ;
 if ( ( tag type != keymaster defs . km_ m ) && ( tag type != keymaster defs . km_ UNK p ) ) {
 throw new illegal argument exception ( String + tag ) ;
 }
 add enum tag ( tag , value ) ;
 }
comment:
START adds an enum tag with the provided value . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
private int get color ( float x , float y ) {
 float pos ;
 if ( dx == DecimalInteger ) {
 pos = ( y - y0 ) / dy ;
 }
 else if ( dy == DecimalInteger ) {
 pos = ( x - x0 ) / dx ;
 }
 else {
 float UNK = ( dx * dy * ( y - y0 ) + dy * dy * x0 + dx * dx * x ) / UNK ;
 pos = ( UNK - x0 ) / dx ;
 }
 return get gradient color ( pos ) ;
 }
comment:
START returns a color for an arbitrary point . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set conversion service ( conversion service conversion service ) {
 this . conversion service = conversion service ;
 }
comment:
START set the conversion service used to convert property values . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public list < t > get mappings by url ( string url path ) {
 return this . url lookup . get ( url path ) ;
 }
comment:
START return matches for the given url path . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public event handler group < t > and ( final event handler group < t > other handler group ) {
 final sequence [ ] combined sequences = new sequence [ this . sequences . length + other handler group . sequences . length ] ;
 system . arraycopy ( this . sequences , DecimalInteger , combined sequences , DecimalInteger , this . sequences . length ) ;
 system . arraycopy ( other handler group . sequences , DecimalInteger , combined sequences , this . sequences . length , other handler group . sequences . length ) ;
 return new event handler group < t > ( disruptor , consumer repository , combined sequences ) ;
 }
comment:
START create a new event handler group that combines the consumers in this group with other handler group . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public prepared statement creator new prepared statement creator ( list < ? > params ) {
 return new prepared statement creator impl ( params != null ? params : collections . empty list ( ) ) ;
 }
comment:
START return a new prepared statement creator for the given parameters . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean has granted policy ( @ non null component name admin , int uses policy ) {
 throw if parent instance ( String ) ;
 if ( service != null ) {
 try {
 return service . has granted policy ( admin , uses policy , my user id ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
 return false ;
 }
comment:
START returns true if an UNK has been granted a particular device policy . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public double get kurtosis ( string field ) {
 check field ( field , results . kurtosis ) ;
 return results . kurtosis . get ( field ) ;
 }
comment:
START return the UNK for the requested field END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ visible for testing public boolean has errors ( configured target configured target ) {
 return configured target == null ;
 }
comment:
START returns whether the given configured target has errors . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public void set debug flags ( int debug flags ) {
 mdebug flags = debug flags ;
 }
comment:
START set the debug flags to a new value . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ override public skylark class object get ( skylark class object constructor . key provider key ) {
 return get provider ( skylark providers . class ) . get declared provider ( provider key ) ;
 }
comment:
START returns a declared provider provided by this target . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void init client ( rest client client , list < http host > hosts ) throws exception {
 rest test client = new client yaml test client ( rest spec , client , hosts ) ;
 }
comment:
START creates the embedded rest client when needed . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
protected object get proxy ( aop proxy aop proxy ) {
 return aop proxy . get proxy ( this . proxy class loader ) ;
 }
comment:
START return the proxy object to expose . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static void create table ( database db , boolean if not exists ) {
 string constraint = if not exists ? String : String ;
 db . exec l ( String + constraint + String + String + String ) ;
 }
comment:
START creates the underlying database table . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public wearable extender add action ( action action ) {
 actions . add ( action ) ;
 return this ;
 }
comment:
START add a wearable action to this notification . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public boolean register ( e callback , object cookie ) {
 synchronized ( callbacks ) {
 if ( UNK ) {
 return false ;
 }
 binder binder = callback . as binder ( ) ;
 try {
 callback cb = new callback ( callback , cookie ) ;
 binder . link to death ( cb , DecimalInteger ) ;
 callbacks . put ( binder , cb ) ;
 return true ;
 }
 catch ( remote exception e ) {
 return false ;
 }
 }
 }
comment:
START add a new callback to the list . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public query string query builder field ( string field ) {
 this . fields and weights . put ( field , abstract query builder . default_ t ) ;
 return this ;
 }
comment:
START adds a field to run the query string against . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void add interface ( class < ? > intf ) {
 assert . not null ( intf , String ) ;
 if ( ! intf . is interface ( ) ) {
 throw new illegal argument exception ( String + intf . get name ( ) + String ) ;
 }
 if ( ! this . interfaces . contains ( intf ) ) {
 this . interfaces . add ( intf ) ;
 advice changed ( ) ;
 }
 }
comment:
START add a new proxied interface . END
BLUE1:0.285714285714
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
private UNK services change listener create mock UNK services change listener ( ) throws exception {
 return new print manager . print services change listener wrapper ( null , new handler ( looper . get main looper ( ) ) ) ;
 }
comment:
START create a UNK services change listener object . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of bytes in the given UNK .
returns the number of all UNK in the given .

code:
public static size get size of rotated rectangle by degrees ( float rectangle width , float rectangle height , float degrees ) {
 final float radians = degrees * UNK d ;
 return get size of rotated rectangle by radians ( rectangle width , rectangle height , radians ) ;
 }
comment:
START returns a recyclable fsize instance . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void register observer ( t observer ) {
 if ( observer == null ) {
 throw new illegal argument exception ( String ) ;
 }
 synchronized ( observers ) {
 if ( observers . contains ( observer ) ) {
 throw new illegal state exception ( String + observer + String ) ;
 }
 observers . add ( observer ) ;
 }
 }
comment:
START adds an observer to the list . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public map < t , handler method > get mappings ( ) {
 return this . mapping lookup ;
 }
comment:
START return all mappings and handler methods . END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the given .

code:
public void set iso ( o iso ) {
 this . iso = iso ;
 }
comment:
START set the iso format used for this date . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public void set repeat count ( int value ) {
 mrepeat count = value ;
 }
comment:
START sets how many times the animation should be repeated . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public list < task info > get tasks ( ) {
 return tasks ;
 }
comment:
START get the tasks found by this request . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
private menu item add internal ( int group , int id , int category order , char sequence title ) {
 final int ordering = get ordering ( category order ) ;
 final menu item impl item = create new menu item ( group , id , category order , ordering , title , mdefault show as action ) ;
 if ( mcurrent menu info != null ) {
 item . set menu info ( mcurrent menu info ) ;
 }
 items . add ( find insert index ( items , ordering ) , item ) ;
 on items changed ( true ) ;
 return item ;
 }
comment:
START adds an item to the menu . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public void set relay port ( int relay port ) {
 this . relay port = relay port ;
 }
comment:
START set the stomp message broker port . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public void set transaction attribute source ( transaction attribute source transaction attribute source ) {
 this . transaction attribute source = transaction attribute source ;
 }
comment:
START set the transaction attribute source which is used to find transaction attributes . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
@ override public bean definition [ ] get inner bean definitions ( ) {
 return new bean definition [ DecimalInteger ] ;
 }
comment:
START returns an empty array . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private int get next unique index ( string unique id prefix ) {
 if ( UNK display devices . is empty ( ) ) {
 return DecimalInteger ;
 }
 int next unique index = DecimalInteger ;
 iterator < virtual display device > it = UNK display devices . values ( ) . iterator ( ) ;
 while ( it . has next ( ) ) {
 virtual display device device = it . next ( ) ;
 if ( device . get unique id ( ) . starts with ( unique id prefix ) && device . munique index >= next unique index ) {
 next unique index = device . munique index + DecimalInteger ;
 }
 }
 return next unique index ;
 }
comment:
START returns the next unique index for the unique id prefix END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public get request builder set version type ( version type version type ) {
 request . version type ( version type ) ;
 return this ;
 }
comment:
START sets the versioning type . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public final observable < t > take ( long time , time unit unit ) {
 return take ( time , unit , schedulers . computation ( ) ) ;
 }
comment:
START returns an observable that emits those items emitted by source observable before a specified time runs out . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void add measurements ( int key , string name , long value ) {
 final int index = constants . get index ( health keys . type_ s , key ) ;
 array map < string , long > map = mmeasurements values [ index ] ;
 if ( map == null ) {
 map = mmeasurements values [ index ] = new array map < string , long > ( DecimalInteger ) ;
 }
 map . put ( name , value ) ;
 }
comment:
START add a measurement for the given key and string name . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public intent edit intent at ( int index ) {
 return intents . get ( index ) ;
 }
comment:
START return the intent at the specified index for modification . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public short as short ( ) {
 switch ( type ) {
 case string value : return short . parse short ( string value ) ;
 case double value : return ( short ) double value ;
 case long value : return ( short ) long value ;
 case boolean value : return long value != DecimalInteger ? ( short ) DecimalInteger : DecimalInteger ;
 }
 throw new illegal state exception ( String + type ) ;
 }
comment:
START returns this value as a short . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public void set max pool size ( int max pool size ) {
 this . max pool size = max pool size ;
 }
comment:
START set the thread pool executor 's maximum pool size . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public boolean is draw finished lw ( ) {
 return mhas surface && ! UNK && ( mwin animator . mdraw state == window state animator . UNK UNK g || mwin animator . mdraw state == window state animator . UNK to_ w || mwin animator . mdraw state == window state animator . has_ n ) ;
 }
comment:
START returns true if the window has a surface that it has drawn a complete ui in to . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public build result process request ( build request request , target validator validator ) {
 build result result = new build result ( request . get start time ( ) ) ;
 env . get event bus ( ) . register ( result ) ;
 maybe set stop on first failure ( request , result ) ;
 throwable catastrophe = null ;
 exit code exit code = exit code . blaze_ internal_ r ;
 try {
 build targets ( request , result , validator ) ;
 exit code = exit code . s ;
 }
 catch ( build failed exception e ) {
 if ( e . is error already shown ( ) ) {
 }
 else {
 report exception error ( e ) ;
 }
 if ( e . is UNK ( ) ) {
 result . set catastrophe ( ) ;
 }
 exit code = e . get exit code ( ) != null ? e . get exit code ( ) : exit code . build_ e ;
 }
 catch ( interrupted exception e ) {
 exit code = env . get pending exit code ( ) ;
 if ( exit code == null ) {
 exit code = exit code . d ;
 env . get reporter ( ) . handle ( event . error ( String ) ) ;
 env . get event bus ( ) . post ( new build interrupted event ( ) ) ;
 }
 else {
 report exception error ( env . get pending exception ( ) ) ;
 result . set catastrophe ( ) ;
 }
 }
 catch ( target parsing exception | loading failed exception | view creation failed exception e ) {
 exit code = exit code . UNK e ;
 report exception error ( e ) ;
 }
 catch ( test exec exception e ) {
 exit code = exit code . s ;
 report exception error ( e ) ;
 }
 catch ( invalid configuration exception e ) {
 exit code = exit code . UNK line_ r ;
 report exception error ( e ) ;
 }
 catch ( abrupt exit exception e ) {
 exit code = e . get exit code ( ) ;
 report exception error ( e ) ;
 result . set catastrophe ( ) ;
 }
 catch ( throwable throwable ) {
 catastrophe = throwable ;
 throwables . propagate ( throwable ) ;
 }
 finally {
 stop request ( result , catastrophe , exit code ) ;
 }
 return result ;
 }
comment:
START returns normally iff successful , throws an exception otherwise . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public item adapter < idrawer item > get item adapter ( ) {
 return mdrawer builder . mitem adapter ;
 }
comment:
START get the item adapter of the current drawer @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public boolean is annotation present ( class < ? extends java . lang . annotation . annotation > annotation type ) {
 java . lang . annotation . annotation [ ] annotations = field . get declared annotations ( ) ;
 for ( java . lang . annotation . annotation annotation : annotations ) {
 if ( annotation . annotation type ( ) . equals ( annotation type ) ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START returns true if the field includes an annotation of the provided class type . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether the UNK UNK is UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK .
sets whether to UNK to UNK .

code:
@ non null public string get name ( ) {
 return name ;
 }
comment:
START get the printer name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public int get next index to load ( ) {
 synchronized ( mindices to load ) {
 int index = mindices to load . index of value ( true ) ;
 if ( index < DecimalInteger ) {
 index = mindices to load . index of value ( false ) ;
 }
 if ( index < DecimalInteger ) {
 return - DecimalInteger ;
 }
 else {
 int key = mindices to load . key at ( index ) ;
 mindices to load . remove at ( index ) ;
 return key ;
 }
 }
 }
comment:
START returns the next index to load END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set shared element return transition ( transition transition ) {
 }
comment:
START sets the transition that will be used for shared elements transferred back to a calling activity . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of bytes in the request .
returns the number of bytes in the UNK .
returns the number of bytes in the request

code:
@ can ignore return value v check value ( @ nullable v value ) {
 return value ;
 }
comment:
START returns its input , or throws an exception if this is not a valid value . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public final void set zero ( ) {
 ex . x = DecimalFloatingPoint ;
 ey . x = DecimalFloatingPoint ;
 ex . y = DecimalFloatingPoint ;
 ey . y = DecimalFloatingPoint ;
 }
comment:
START set as the zero matrix . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static int get native type ( int tag ) {
 return native get type from tag ( tag ) ;
 }
comment:
START get the underlying native type for a tag . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
protected final servlet context get servlet context ( ) throws illegal state exception {
 if ( this . servlet context != null ) {
 return this . servlet context ;
 }
 web application context UNK = get web application context ( ) ;
 if ( UNK == null ) {
 return null ;
 }
 servlet context servlet context = UNK . get servlet context ( ) ;
 if ( servlet context == null && is context required ( ) ) {
 throw new illegal state exception ( String + this + String ) ;
 }
 return servlet context ;
 }
comment:
START return the current servlet context . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get code ( ) {
 return this . code ;
 }
comment:
START return the status code . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public string get parameter name ( ) {
 return this . parameter name ;
 }
comment:
START get the parameter name . END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public list < area > get metering areas ( ) {
 return split area ( get ( key_ UNK s ) ) ;
 }
comment:
START gets the current metering areas . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void remove frame metrics listener ( window . on frame metrics available listener listener ) {
 UNK renderer renderer = get hardware renderer ( ) ;
 frame metrics observer fmo = find frame metrics observer ( listener ) ;
 if ( fmo == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( mframe metrics observers != null ) {
 mframe metrics observers . remove ( fmo ) ;
 if ( renderer != null ) {
 renderer . remove frame metrics observer ( fmo ) ;
 }
 }
 }
comment:
START remove observer configured to collect frame stats for this view . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given UNK .
used to the UNK of the given .

code:
public boolean get sms receive capable ( boolean default value ) {
 int phone id = get default phone ( ) ;
 return get sms receive capable for phone ( phone id , default value ) ;
 }
comment:
START get sms receive capable from system property for the default phone . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public final int get edge flags ( ) {
 return native get edge flags ( mnative ptr ) ;
 }
comment:
START returns a bitfield indicating which edges , if any , were touched by this motion event . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public list < http message converter < ? > > get message converters ( ) {
 return this . sync template . get message converters ( ) ;
 }
comment:
START return the message body converters . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
@ override protected void init template config ( ) {
 this . named parameter jdbc template = new named parameter jdbc template ( get jdbc template ( ) ) ;
 }
comment:
START create a named parameter jdbc template based on the configured jdbc template . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public UNK bucket pipeline aggregation builder percents ( double [ ] percents ) {
 if ( percents == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 for ( double p : percents ) {
 if ( p == null || p < DecimalFloatingPoint || p > DecimalFloatingPoint ) {
 throw new illegal argument exception ( UNK d . get preferred name ( ) + String ) ;
 }
 }
 this . percents = percents ;
 return this ;
 }
comment:
START set the UNK to calculate percentiles for in this aggregation END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public byte element sum ( ) {
 return ( byte ) ( x + y ) ;
 }
comment:
START return the element sum of vector @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
private static string get action symbolic name ( int action ) {
 switch ( action ) {
 case action_ s : return String ;
 case action_ clear_ s : return String ;
 case action_ t : return String ;
 case action_ clear_ n : return String ;
 case action_ k : return String ;
 case action_ long_ k : return String ;
 case action_ accessibility_ s : return String ;
 case action_ clear_ accessibility_ s : return String ;
 case action_ next_ at_ movement_ y : return String ;
 case action_ UNK at_ movement_ y : return String ;
 case action_ next_ UNK t : return String ;
 case action_ UNK UNK t : return String ;
 case action_ scroll_ d : return String ;
 case action_ scroll_ d : return String ;
 case action_ t : return String ;
 case action_ y : return String ;
 case action_ e : return String ;
 case action_ set_ n : return String ;
 case action_ d : return String ;
 case action_ e : return String ;
 case action_ s : return String ;
 case action_ set_ t : return String ;
 case r . id . accessibility action show on screen : return String ;
 case r . id . accessibility action scroll to position : return String ;
 case r . id . accessibility action scroll up : return String ;
 case r . id . accessibility action scroll left : return String ;
 case r . id . accessibility action scroll down : return String ;
 case r . id . accessibility action scroll right : return String ;
 case r . id . accessibility action set progress : return String ;
 case r . id . accessibility action context click : return String ;
 default : return String ;
 }
 }
comment:
START gets the human readable action symbolic name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return d ;
 case DecimalInteger : return d ;
 case DecimalInteger : return UNK ms_ g ;
 default : return null ;
 }
 }
comment:
START find the _ fields constant that matches field id , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public properties get hibernate properties ( ) {
 if ( this . hibernate properties == null ) {
 this . hibernate properties = new properties ( ) ;
 }
 return this . hibernate properties ;
 }
comment:
START return the hibernate properties , if any . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
public void set advisor chain factory ( advisor chain factory advisor chain factory ) {
 assert . not null ( advisor chain factory , String ) ;
 this . advisor chain factory = advisor chain factory ;
 }
comment:
START set the advisor chain factory to use . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static < r , c , v > builder < r , c , v > builder ( ) {
 return new builder < r , c , v > ( ) ;
 }
comment:
START returns a new builder . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public transaction synchronization registry get transaction synchronization registry ( ) {
 return this . transaction synchronization registry ;
 }
comment:
START return the jta NUMBER transaction synchronization registry that this transaction manager uses , if any . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
public int get sensitivity minimum or default ( int default value ) {
 range < integer > range = get value from key non null ( camera characteristics . sensor_ info_ sensitivity_ e ) ;
 if ( range == null ) {
 fail key check ( camera characteristics . sensor_ info_ sensitivity_ e , String + default value ) ;
 return default value ;
 }
 return range . get lower ( ) ;
 }
comment:
START get the minimum value for a sensitivity range from android.sensor.info.sensitivity range . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set count ( int count ) {
 count = count ;
 }
comment:
START set the count for this timer . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set application event class ( class < ? > application event class ) {
 if ( application event . class == application event class || ! application event . class . is assignable from ( application event class ) ) {
 throw new illegal argument exception ( String ) ;
 }
 try {
 this . application event class constructor = application event class . get constructor ( new class < ? > [ ] {
 object . class }
 ) ;
 }
 catch ( no such method exception ex ) {
 throw new illegal argument exception ( String + application event class . get name ( ) + String + ex ) ;
 }
 }
comment:
START set the application event class to publish . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
set the UNK for the given view .
sets the UNK of the given UNK .

code:
public void delete ( int key ) {
 int i = container helpers . binary search ( keys , size , key ) ;
 if ( i >= DecimalInteger ) {
 remove at ( i ) ;
 }
 }
comment:
START removes the mapping from the specified key , if there was any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public void set system audio mode ( boolean enabled , select callback callback ) {
 try {
 service . set system audio mode ( enabled , get callback wrapper ( callback ) ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 }
comment:
START sets system audio mode . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public intent put extra ( string name , short value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put short ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
@ suppress warnings ( String ) public t get ( ) {
 if ( hystrix request context . get context for current thread ( ) == null ) {
 throw new illegal state exception ( hystrix request context . class . get simple name ( ) + String ) ;
 }
 concurrent hash map < hystrix request variable default < ? > , lazy initializer < ? > > variable map = hystrix request context . get context for current thread ( ) . state ;
 lazy initializer < ? > v = variable map . get ( this ) ;
 if ( v != null ) {
 return ( t ) v . get ( ) ;
 }
 lazy initializer < t > l = new lazy initializer < t > ( this ) ;
 lazy initializer < ? > existing = variable map . put if absent ( this , l ) ;
 if ( existing == null ) {
 return l . get ( ) ;
 }
 else {
 return ( t ) existing . get ( ) ;
 }
 }
comment:
START get the current value for this variable for the current request context . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void remove parameter ( string name ) {
 assert . not null ( name , String ) ;
 this . parameters . remove ( name ) ;
 }
comment:
START remove already registered values for the specified http parameter , if any . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to UNK the UNK .
used to the UNK of the given .

code:
public void set header background ( image holder image holder ) {
 image holder . apply to ( image holder , maccount header builder . maccount header background ) ;
 }
comment:
START set the background for the header via the image holder class @param image holder END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
list < call parameter meta data > get call parameter meta data ( ) ;
comment:
START get the call parameter metadata that is currently used . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public media router . route info get route ( ) {
 return route ;
 }
comment:
START gets the route that this dialog is controlling . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public producer < void > get decoded image prefetch producer sequence ( image request image request ) {
 return get decoded image prefetch sequence ( get basic decoded image sequence ( image request ) ) ;
 }
comment:
START returns a sequence that can be used for a prefetch request for a decoded image . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ override public index field term get ( object key ) {
 return get ( key , index lookup . flag_ s ) ;
 }
comment:
START returns a term info object that can be used to access information on specific terms . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
@ override public void set servlet context ( servlet context servlet context ) {
 this . servlet context = servlet context ;
 }
comment:
START set the servlet context that this web application context runs in . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
void get temp inset bounds ( rect out ) {
 out . set ( mtemp inset bounds ) ;
 }
comment:
START gets the bounds used to calculate the insets . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public list < string > get vary ( ) {
 return get values as list ( y ) ;
 }
comment:
START return the request header names subject to content negotiation . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public index meta data get index meta data ( ) {
 return index meta data ;
 }
comment:
START returns the current index meta data for this index END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void write request ( headers headers , string request line ) throws exception {
 if ( state != state_ e ) throw new illegal state exception ( String + state ) ;
 sink . write utf8 ( request line ) . write utf8 ( String ) ;
 for ( int i = DecimalInteger , size = headers . size ( ) ;
 i < size ;
 i ++ ) {
 sink . write utf8 ( headers . name ( i ) ) . write utf8 ( String ) . write utf8 ( headers . value ( i ) ) . write utf8 ( String ) ;
 }
 sink . write utf8 ( String ) ;
 state = state_ UNK request_ y ;
 }
comment:
START returns bytes of a request header for sending on an http transport . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set arguments ( object [ ] arguments ) {
 this . arguments = ( arguments != null ? arguments : new object [ DecimalInteger ] ) ;
 }
comment:
START set arguments for the method invocation . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
simple drawee controller builder set uri ( @ nullable string uri string ) ;
comment:
START sets the uri from a string . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public boolean handle sig int ( ) {
 if ( has just ended ( ) ) {
 return true ;
 }
 return do UNK ( ) ;
 }
comment:
START return if the process was stopped . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public http request get request ( ) {
 return this . request ;
 }
comment:
START return the wrapped request . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public string get scene mode ( ) {
 return get ( key_ scene_ e ) ;
 }
comment:
START gets the current scene mode setting . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static < t > t create ( string value , typed argument < t > argument ) {
 objects . require non null ( argument ) ;
 if ( value == null ) {
 value = argument . get default value ( ) ;
 }
 if ( value == null ) {
 return null ;
 }
 try {
 if ( argument . get converter ( ) != null ) {
 return converters . create ( value , argument . get converter ( ) ) ;
 }
 else {
 return converters . create ( argument . get type ( ) , value ) ;
 }
 }
 catch ( exception e ) {
 throw new invalid value exception ( argument , value , e ) ;
 }
 }
comment:
START creates the value for the given argument from the given raw value . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public float get ratio ( ) {
 return jni get ratio ( addr ) ;
 }
comment:
START get the gear ratio . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ visible for testing synchronized disk storage get ( ) throws exception {
 if ( should create new storage ( ) ) {
 delete old storage if necessary ( ) ;
 create storage ( ) ;
 }
 return preconditions . check not null ( mcurrent state . delegate ) ;
 }
comment:
START gets a concrete UNK instance . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static void set clock ( clock clock ) {
 UNK f . set ( clock ) ;
 }
comment:
START sets the clock to use . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ system api public boolean is hdmi system audio supported ( ) {
 try {
 return get service ( ) . is hdmi system audio supported ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns true if hdmi cec system audio mode is supported . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .

code:
private void remove admin artifacts ( final component name admin receiver , final int user handle ) {
 synchronized ( this ) {
 final active admin admin = get active admin unchecked locked ( admin receiver , user handle ) ;
 if ( admin == null ) {
 return ;
 }
 final device policy data policy = get user data ( user handle ) ;
 final boolean do proxy cleanup = admin . info . uses policy ( device admin info . UNK policy_ UNK global_ y ) ;
 policy . madmin list . remove ( admin ) ;
 policy . madmin map . remove ( admin receiver ) ;
 validate password owner locked ( policy ) ;
 if ( do proxy cleanup ) {
 reset global proxy locked ( policy ) ;
 }
 save settings locked ( user handle ) ;
 update maximum time to lock locked ( user handle ) ;
 policy . UNK admins . remove ( admin receiver ) ;
 }
 push user restrictions ( user handle ) ;
 }
comment:
START removes the admin from the policy . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK

code:
protected abstract set < string > get direct lookup destinations ( t mapping ) ;
comment:
START return destinations contained in the mapping that are not patterns and are therefore suitable for direct lookups . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static list < size > get sorted sizes for format ( string camera id , camera manager camera manager , int format , size bound ) throws camera access exception {
 comparator < size > comparator = new size comparator ( ) ;
 size [ ] sizes = get supported size for format ( format , camera id , camera manager ) ;
 list < size > sorted sizes = null ;
 if ( bound != null ) {
 sorted sizes = new array list < size > ( DecimalInteger ) ;
 for ( size sz : sizes ) {
 if ( comparator . compare ( sz , bound ) <= DecimalInteger ) {
 sorted sizes . add ( sz ) ;
 }
 }
 }
 else {
 sorted sizes = arrays . as list ( sizes ) ;
 }
 assert true ( String , sorted sizes . size ( ) > DecimalInteger ) ;
 collections . sort ( sorted sizes , comparator ) ;
 collections . reverse ( sorted sizes ) ;
 return sorted sizes ;
 }
comment:
START remove the sizes larger than the bound . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set placeholder prefix ( string placeholder prefix ) {
 this . placeholder prefix = placeholder prefix ;
 }
comment:
START set the prefix that a placeholder string starts with . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public optional < artifact > get archive ( ) {
 return archive ;
 }
comment:
START returns absent if there are no such source files for which to create an archive library . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public component name resolve activity ( package manager pm ) {
 if ( component != null ) {
 return component ;
 }
 resolve info info = pm . resolve activity ( this , package manager . match_ default_ y ) ;
 if ( info != null ) {
 return new component name ( info . activity info . application info . package name , info . activity info . name ) ;
 }
 return null ;
 }
comment:
START return the activity component that should be used to handle this intent . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
protected l [ ] get urls ( thread thread ) {
 return UNK urls . from url class loader ( ( urlclass loader ) thread . get context class loader ( ) ) . to array ( ) ;
 }
comment:
START return the urls that should be used with initialization . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
void create global traffic counter ( scheduled executor service executor ) {
 if ( executor == null ) {
 throw new null pointer exception ( String ) ;
 }
 traffic counter tc = new traffic counter ( this , executor , String , check interval ) ;
 set traffic counter ( tc ) ;
 tc . start ( ) ;
 }
comment:
START create the global traffic counter . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public builder add stroke ( @ non null stroke description stroke description ) {
 if ( strokes . size ( ) >= max_ UNK t ) {
 throw new illegal state exception ( String ) ;
 }
 strokes . add ( stroke description ) ;
 if ( get total duration ( strokes ) > max_ gesture_ duration_ s ) {
 strokes . remove ( stroke description ) ;
 throw new illegal state exception ( String ) ;
 }
 return this ;
 }
comment:
START add a stroke to the gesture description . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public url based view resolver registration view class ( class < ? > view class ) {
 this . view resolver . set view class ( view class ) ;
 return this ;
 }
comment:
START set the view class that should be used to create views . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
private static byte [ ] find ipv4 address ( link properties lp ) {
 byte [ ] ipv4 address = null ;
 for ( inet address inet addr : lp . get addresses ( ) ) {
 byte [ ] addr = inet addr . get address ( ) ;
 if ( addr . length != DecimalInteger ) continue ;
 if ( ipv4 address != null && ! arrays . equals ( ipv4 address , addr ) ) return null ;
 ipv4 address = addr ;
 }
 return ipv4 address ;
 }
comment:
START find the single ipv4 address if there is one , otherwise return null . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void remove ( network agent info nai , boolean was default ) {
 if ( g ) log ( String + nai + String + was default ) ;
 for ( int type = DecimalInteger ;
 type < mtype lists . length ;
 type ++ ) {
 remove ( type , nai , was default ) ;
 }
 }
comment:
START removes the given network from all legacy type lists . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
used to the UNK of the given UNK .

code:
@ system api @ user restriction source public int get user restriction source ( string restriction key , user handle user handle ) {
 try {
 return service . get user restriction source ( restriction key , user handle . get identifier ( ) ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns who set a user restriction on a user . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public static final native void set thread strict mode policy ( int policy mask ) ;
comment:
START sets the native thread-local strict mode policy mask . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public search source builder sort ( string name ) {
 if ( name . equals ( score sort builder . e ) ) {
 return sort ( sort builders . score sort ( ) ) ;
 }
 return sort ( sort builders . field sort ( name ) ) ;
 }
comment:
START add a sort against the given field name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set logging level ( int log level ) {
 log . set logging level ( log level ) ;
 }
comment:
START sets log level to be used across all library default implementation default setting is verbose log level . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public boolean blocks changed ( ) {
 return state . blocks ( ) != previous state . blocks ( ) ;
 }
comment:
START returns true iff the cluster level blocks have changed between cluster states . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK .

code:
void get field mappings ( get field mappings request request , action listener < get field mappings response > listener ) ;
comment:
START get the mappings of specific fields END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
public intent put extra ( string name , parcelable [ ] value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put parcelable array ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
protected string [ ] get property method suffixes ( string property name ) {
 string suffix = get property method suffix ( property name ) ;
 if ( suffix . length ( ) > DecimalInteger && character . is upper case ( suffix . char at ( DecimalInteger ) ) ) {
 return new string [ ] {
 suffix }
 ;
 }
 return new string [ ] {
 suffix , string utils . capitalize ( suffix ) }
 ;
 }
comment:
START return the method suffixes for a given property name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public void set logo ( @ drawable res int res id ) {
 }
comment:
START set the logo for this window . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
protected model and view get model and view ( string view name , exception ex , http servlet request request ) {
 return get model and view ( view name , ex ) ;
 }
comment:
START return a model and view for the given request , view name and exception . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void remove bearing ( ) {
 bearing = DecimalFloatingPoint ;
 mfields mask &= ~ has_ UNK k ;
 }
comment:
START remove the bearing from this location . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
remove the UNK of the given UNK .
returns the list of UNK .
returns the list of UNK UNK to be UNK .
returns the list of UNK UNK

code:
public boolean is checked ( ) {
 return ( flags & view node . flags_ d ) != DecimalInteger ;
 }
comment:
START returns true if this node is currently in a checked state . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public boolean has connection ( ) {
 return connection != null ;
 }
comment:
START returns true if the session has an active database connection . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set page size ( int page size ) {
 if ( page size != this . page size ) {
 this . page size = page size ;
 if ( ! this . new page set ) {
 this . page = DecimalInteger ;
 }
 }
 }
comment:
START set the current page size . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
@ override public synchronized void initialize ( ) {
 if ( ! mroot directory . exists ( ) ) {
 if ( ! mroot directory . mkdirs ( ) ) {
 volley log . e ( String , mroot directory . get absolute path ( ) ) ;
 }
 return ;
 }
 file [ ] files = mroot directory . list files ( ) ;
 if ( files == null ) {
 return ;
 }
 for ( file file : files ) {
 file input stream fis = null ;
 try {
 fis = new file input stream ( file ) ;
 cache header entry = cache header . read header ( fis ) ;
 entry . size = file . length ( ) ;
 put entry ( entry . key , entry ) ;
 }
 catch ( exception e ) {
 if ( file != null ) {
 file . delete ( ) ;
 }
 }
 finally {
 try {
 if ( fis != null ) {
 fis . close ( ) ;
 }
 }
 catch ( exception ignored ) {
 }
 }
 }
 }
comment:
START creates the root directory if necessary . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set time ( long millis ) {
 try {
 service . set time ( millis ) ;
 }
 catch ( remote exception ex ) {
 throw ex . rethrow from system server ( ) ;
 }
 }
comment:
START set the system wall clock time . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public class < ? > get raw type ( ) {
 return raw type ;
 }
comment:
START gets the parameter type as declared on the method . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public final completable do on error ( action1 < ? super throwable > on error ) {
 return do on lifecycle ( actions . empty ( ) , on error , actions . empty ( ) , actions . empty ( ) , actions . empty ( ) ) ;
 }
comment:
START returns a completable which calls the given on error callback if this completable emits an error . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
void set resized while not drag resizing ( boolean resized while not drag resizing ) {
 UNK while not drag resizing = resized while not drag resizing ;
 UNK while not drag resizing UNK = ! resized while not drag resizing ;
 }
comment:
START set whether we UNK resized but drag resizing flag was false . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public builder add sdk includes ( nested set < path fragment > sdk includes ) {
 this . sdk includes . add transitive ( sdk includes ) ;
 return this ;
 }
comment:
START adds paths for sdk includes . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public runnable request display state locked ( int state , int brightness ) {
 return null ;
 }
comment:
START sets the display state , if supported . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public quaternion set from cross ( final vector3 v1 , final vector3 v2 ) {
 final float dot = math utils . clamp ( v1 . dot ( v2 ) , - DecimalFloatingPoint , DecimalFloatingPoint ) ;
 final float angle = ( float ) math . acos ( dot ) ;
 return set from axis rad ( v1 . y * v2 . z - v1 . z * v2 . y , v1 . z * v2 . x - v1 . x * v2 . z , v1 . x * v2 . y - v1 . y * v2 . x , angle ) ;
 }
comment:
START set this quaternion to the rotation between two vectors . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
private object get property value ( object obj ) {
 try {
 this . bean wrapper . set wrapped instance ( obj ) ;
 return this . bean wrapper . get property value ( this . sort definition . get property ( ) ) ;
 }
 catch ( beans exception ex ) {
 logger . info ( String , ex ) ;
 return null ;
 }
 }
comment:
START get the sort definition 's property value for the given object . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public builder add custom style ( final class < ? extends text view > style class , final int style resource attribute ) {
 if ( style class == null || style resource attribute == DecimalInteger ) return this ;
 UNK class map . put ( style class , style resource attribute ) ;
 return this ;
 }
comment:
START add a custom style to get looked up . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
private property editor get custom editor ( class < ? > required type ) {
 if ( required type == null || this . custom editors == null ) {
 return null ;
 }
 property editor editor = this . custom editors . get ( required type ) ;
 if ( editor == null ) {
 if ( this . custom editor cache != null ) {
 editor = this . custom editor cache . get ( required type ) ;
 }
 if ( editor == null ) {
 for ( iterator < class < ? > > it = this . custom editors . key set ( ) . iterator ( ) ;
 it . has next ( ) && editor == null ;
 ) {
 class < ? > key = it . next ( ) ;
 if ( key . is assignable from ( required type ) ) {
 editor = this . custom editors . get ( key ) ;
 if ( this . custom editor cache == null ) {
 this . custom editor cache = new hash map < > ( ) ;
 }
 this . custom editor cache . put ( required type , editor ) ;
 }
 }
 }
 }
 return editor ;
 }
comment:
START get custom editor for the given type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
public static void create table ( database db , boolean if not exists ) {
 string constraint = if not exists ? String : String ;
 db . exec l ( String + constraint + String + String + String + String + String + String + String ) ;
 }
comment:
START creates the underlying database table . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
private path construct focused curve ( ) {
 float top peek height pct = ( float ) mfocused top peek height / mstack rect . height ( ) ;
 float bottom peek height pct = ( float ) ( mstack bottom offset + mfocused bottom peek height ) / mstack rect . height ( ) ;
 float min bottom peek height pct = ( float ) ( mfocused top peek height + mtask rect . height ( ) - mmin margin ) / mstack rect . height ( ) ;
 path p = new path ( ) ;
 p . move to ( DecimalFloatingPoint , DecimalFloatingPoint ) ;
 p . line to ( DecimalFloatingPoint , DecimalFloatingPoint - top peek height pct ) ;
 p . line to ( DecimalFloatingPoint - ( DecimalFloatingPoint / mfocused range . relative max ) , math . max ( DecimalFloatingPoint - min bottom peek height pct , bottom peek height pct ) ) ;
 p . line to ( DecimalFloatingPoint , DecimalFloatingPoint ) ;
 return p ;
 }
comment:
START creates a new path for the focused curve . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public boolean bind app widget id if allowed ( int app widget id , component name provider , bundle options ) {
 if ( service == null ) {
 return false ;
 }
 return bind app widget id if allowed ( app widget id , user handle . my user id ( ) , provider , options ) ;
 }
comment:
START set the component for a given app widget id . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public glyph and bitmap generate glyph and bitmap ( int c , int size , boolean flip ) {
 set pixel sizes ( DecimalInteger , size ) ;
 size metrics font metrics = face . get size ( ) . get metrics ( ) ;
 int baseline = free type . to int ( font metrics . get UNK ( ) ) ;
 if ( face . get char index ( c ) == DecimalInteger ) {
 return null ;
 }
 if ( ! load char ( c ) ) {
 throw new gdx runtime exception ( String ) ;
 }
 glyph slot slot = face . get glyph ( ) ;
 bitmap bitmap ;
 if ( UNK ) {
 bitmap = slot . get bitmap ( ) ;
 }
 else if ( ! slot . render glyph ( free type . UNK UNK mode_ l ) ) {
 bitmap = null ;
 }
 else {
 bitmap = slot . get bitmap ( ) ;
 }
 glyph metrics metrics = slot . get metrics ( ) ;
 glyph glyph = new glyph ( ) ;
 if ( bitmap != null ) {
 glyph . width = bitmap . get width ( ) ;
 glyph . height = bitmap . get rows ( ) ;
 }
 else {
 glyph . width = DecimalInteger ;
 glyph . height = DecimalInteger ;
 }
 glyph . UNK = slot . get bitmap left ( ) ;
 glyph . UNK = flip ? - slot . get bitmap top ( ) + baseline : - ( glyph . height - slot . get bitmap top ( ) ) - baseline ;
 glyph . UNK = free type . to int ( metrics . get UNK advance ( ) ) ;
 glyph . src x = DecimalInteger ;
 glyph . src y = DecimalInteger ;
 glyph . id = c ;
 glyph and bitmap result = new glyph and bitmap ( ) ;
 result . glyph = glyph ;
 result . bitmap = bitmap ;
 return result ;
 }
comment:
START returns null if glyph was not found . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , or null if it is not .
returns the UNK for the given UNK , or null .

code:
private int consume int literal ( ) throws query exception {
 string int string = consume ( token kind . d ) ;
 try {
 return integer . parse int ( int string ) ;
 }
 catch ( number format exception e ) {
 throw new query exception ( String + int string + String ) ;
 }
 }
comment:
START returns that integer , or throws a query exception otherwise . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public accessibility record get record ( int index ) {
 if ( records == null ) {
 throw new index out of bounds exception ( String + index + String ) ;
 }
 return records . get ( index ) ;
 }
comment:
START gets the record at a given index . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean is suppressed with comment ( int start offset , @ non null issue issue ) {
 string prefix = get suppress comment prefix ( ) ;
 if ( prefix == null ) {
 return false ;
 }
 if ( start offset <= DecimalInteger ) {
 return false ;
 }
 string contents = get contents ( ) ;
 assert contents != null ;
 if ( start offset >= contents . length ( ) ) {
 return false ;
 }
 int line start = contents . last index of ( String , start offset ) + DecimalInteger ;
 if ( line start <= DecimalInteger ) {
 return false ;
 }
 int index = find prefix on previous line ( contents , line start , prefix ) ;
 if ( index != - DecimalInteger && index + prefix . length ( ) < line start ) {
 string line = contents . substring ( index + prefix . length ( ) , line start ) ;
 return line . contains ( issue . get id ( ) ) || line . contains ( UNK l ) && line . trim ( ) . starts with ( UNK l ) ;
 }
 return false ;
 }
comment:
START returns true if the given issue is suppressed at the given character offset in the file 's contents END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK UNK .
sets the UNK of the given UNK .

code:
public void remove callback ( callback cb ) {
 int index = find callback info ( cb ) ;
 if ( index >= DecimalInteger ) {
 static . callbacks . remove ( index ) ;
 static . update discovery request ( ) ;
 }
 else {
 log . w ( g , String + cb + String ) ;
 }
 }
comment:
START remove the specified callback . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to UNK the UNK .
used to the UNK of the given UNK .

code:
public static image writer make image writer ( surface input surface , int max images , image writer . on image released listener listener , handler handler ) {
 image writer writer = image writer . new instance ( input surface , max images ) ;
 writer . set on image released listener ( listener , handler ) ;
 return writer ;
 }
comment:
START create an image writer and hook up the image listener . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public shard id shard id ( ) {
 return this . shard id ;
 }
comment:
START returns the shard id this segment belongs to . END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public android resources provider to resource provider ( label label ) {
 if ( primary resource == null ) {
 return resource deps . to provider ( label ) ;
 }
 return resource deps . to provider ( label , primary resource ) ;
 }
comment:
START creates an provider from the resources in the resource apk . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get name ( ) {
 return this . name ;
 }
comment:
START return the name for bean . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set attributes ( map < string , serializable > attributes ) {
 this . attributes = attributes ;
 }
comment:
START set the attributes map . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public boolean get back button visibility with done ( ) {
 return is wizard mode ;
 }
comment:
START get the state of wizard mode END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
public static string get tag name ( int tag ) {
 read tags file ( ) ;
 return UNK names . get ( tag ) ;
 }
comment:
START get the name associated with an event type tag code . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final parse context switch doc ( final document document ) {
 return new filter parse context ( this ) {
 @ override public document doc ( ) {
 return document ;
 }
 }
 ;
 }
comment:
START return a new context that has the provided document as the current document . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
action future < get response > get ( get request request ) ;
comment:
START gets the document that was indexed from an index with a type and id . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public wifi display get active display ( ) {
 return mactive display ;
 }
comment:
START gets the wifi display that is currently active . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
static boolean add batch locked ( array list < batch > list , batch new batch ) {
 int index = collections . binary search ( list , new batch , UNK order ) ;
 if ( index < DecimalInteger ) {
 index = DecimalInteger - index - DecimalInteger ;
 }
 list . add ( index , new batch ) ;
 return ( index == DecimalInteger ) ;
 }
comment:
START returns true if the batch was added at the head END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public string get fallback bundle id ( ) {
 return fallback bundle id ;
 }
comment:
START returns fallback bundle id to use when primary is n't set . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public entity manager factory get entity manager factory ( ) {
 return this . entity manager factory ;
 }
comment:
START return the entity manager factory that this instance should manage transactions for . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
return the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static quad from rect ( float x , float y , float width , float height ) {
 return new quad ( new point f ( x , y ) , new point f ( x + width , y ) , new point f ( x , y + height ) , new point f ( x + width , y + height ) ) ;
 }
comment:
START return a quad from the specified rectangle coordinates . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public float get tree quality ( ) {
 return m_contact manager . m_broad phase . get tree quality ( ) ;
 }
comment:
START gets the quality of the dynamic tree @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ view debug . exported property ( category = String , mapping = {
 @ view debug . int to string ( from = text_ alignment_ t , to = String ) , @ view debug . int to string ( from = text_ alignment_ y , to = String ) , @ view debug . int to string ( from = text_ alignment_ text_ t , to = String ) , @ view debug . int to string ( from = text_ alignment_ text_ d , to = String ) , @ view debug . int to string ( from = text_ alignment_ r , to = String ) , @ view debug . int to string ( from = text_ alignment_ view_ t , to = String ) , @ view debug . int to string ( from = text_ alignment_ view_ d , to = String ) }
 ) @ text alignment public int get text alignment ( ) {
 return ( mprivate flags2 & pflag2_ text_ alignment_ resolved_ k ) > > pflag2_ text_ alignment_ resolved_ mask_ t ;
 }
comment:
START return the resolved text alignment . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public dash path effect get grid dash path effect ( ) {
 return mgrid dash path effect ;
 }
comment:
START returns the dash path effect that is set for grid line @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public range < integer > get ae max target fps range ( ) {
 range < integer > [ ] fps ranges = get ae available target fps ranges checked ( ) ;
 range < integer > target range = fps ranges [ DecimalInteger ] ;
 for ( range < integer > candidate range : fps ranges ) {
 if ( candidate range . get lower ( ) > target range . get lower ( ) ) {
 target range = candidate range ;
 }
 }
 for ( range < integer > candidate range : fps ranges ) {
 if ( candidate range . get lower ( ) >= target range . get lower ( ) && candidate range . get upper ( ) > target range . get upper ( ) ) {
 target range = candidate range ;
 }
 }
 return target range ;
 }
comment:
START get the highest supported target fps range . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public buffered input stream read ( int buffer size ) {
 throw new gdx runtime exception ( String ) ;
 }
comment:
START returns a buffered stream for reading this file as bytes . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
int get byte length ( ) {
 int length = DecimalInteger + type . length + id . length + payload . length ;
 boolean sr = payload . length < DecimalInteger ;
 boolean UNK = id . length > DecimalInteger ;
 if ( ! sr ) length += DecimalInteger ;
 if ( UNK ) length += DecimalInteger ;
 return length ;
 }
comment:
START get byte length of serialized record . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public float get angular velocity ( ) {
 return jni get angular velocity ( addr ) ;
 }
comment:
START get the angular velocity . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
@ override public native pooled byte buffer to byte buffer ( ) {
 ensure valid ( ) ;
 return new native pooled byte buffer ( UNK ref , count ) ;
 }
comment:
START gets a pooled byte buffer from the current contents . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public static string UNK ( string s ) {
 if ( s == null || s . length ( ) == DecimalInteger ) {
 return s ;
 }
 int pos = s . length ( ) ;
 while ( pos > DecimalInteger && character . is whitespace ( s . char at ( pos - DecimalInteger ) ) ) {
 -- pos ;
 }
 return s . substring ( DecimalInteger , pos ) ;
 }
comment:
START remove the trailing whitespace from the specified string . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public UNK cors config builder preflight response header ( final char sequence name , final object ... values ) {
 if ( values . length == DecimalInteger ) {
 preflight headers . put ( name , new constant value generator ( values [ DecimalInteger ] ) ) ;
 }
 else {
 preflight response header ( name , arrays . as list ( values ) ) ;
 }
 return this ;
 }
comment:
START returns http response headers that should be added to a cors preflight response . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
protected default listable bean factory get internal bean factory for bean ( string bean name ) {
 synchronized ( this . internal bean factories ) {
 default listable bean factory internal bean factory = this . internal bean factories . get ( bean name ) ;
 if ( internal bean factory == null ) {
 internal bean factory = build internal bean factory ( this . bean factory ) ;
 this . internal bean factories . put ( bean name , internal bean factory ) ;
 }
 return internal bean factory ;
 }
 }
comment:
START return the internal bean factory to be used for the specified bean . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public aspect metadata get aspect metadata ( ) {
 return this . aspect instance factory . get aspect metadata ( ) ;
 }
comment:
START return the aspect j aspect metadata for this advisor . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public builder base url ( http url base url ) {
 check not null ( base url , String ) ;
 list < string > path segments = base url . path segments ( ) ;
 if ( ! String . equals ( path segments . get ( path segments . size ( ) - DecimalInteger ) ) ) {
 throw new illegal argument exception ( String + base url ) ;
 }
 this . base url = base url ;
 return this ;
 }
comment:
START set the api base url . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set option commands ( class < ? > ... command classes ) {
 assert . not null ( command classes , String ) ;
 this . option command classes = command classes ;
 }
comment:
START set the command classes which should be considered option commands . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
private path construct unfocused dim curve ( ) {
 float focus x = get normalized xfrom unfocused y ( minitial top offset , from_ p ) ;
 float cpoint2 x = focus x + ( DecimalFloatingPoint - focus x ) / DecimalInteger ;
 path p = new path ( ) ;
 p . move to ( DecimalFloatingPoint , max_ m ) ;
 p . cubic to ( focus x * DecimalFloatingPoint , max_ m , focus x * DecimalFloatingPoint , max_ m * DecimalFloatingPoint , focus x , DecimalFloatingPoint ) ;
 p . cubic to ( cpoint2 x , DecimalFloatingPoint , cpoint2 x , UNK m , DecimalFloatingPoint , UNK m ) ;
 return p ;
 }
comment:
START creates a new path for the unfocused dim curve . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set field marker prefix ( string field marker prefix ) {
 this . field marker prefix = field marker prefix ;
 }
comment:
START set this to null if you want to turn off the empty field check completely . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public char as char ( ) {
 switch ( type ) {
 case string value : return string value . length ( ) == DecimalInteger ? DecimalInteger : string value . char at ( DecimalInteger ) ;
 case double value : return ( char ) double value ;
 case long value : return ( char ) long value ;
 case boolean value : return long value != DecimalInteger ? ( char ) DecimalInteger : DecimalInteger ;
 }
 throw new illegal state exception ( String + type ) ;
 }
comment:
START returns this value as a char . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public long find ( long key ) {
 final long slot = slot ( hash ( key ) , mask ) ;
 for ( long index = slot ;
 ;
 index = next slot ( index , mask ) ) {
 final long id = id ( index ) ;
 if ( id == - DecimalInteger || keys . get ( id ) == key ) {
 return id ;
 }
 }
 }
comment:
START get the id associated with key or -1 if the key is not contained in the hash . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public method type get method type ( ) {
 if ( handle != null ) {
 return handle . type ( ) ;
 }
 final class < ? > params [ ] ;
 final class < ? > return value ;
 if ( UNK ) {
 params = new class < ? > [ DecimalInteger + arguments . size ( ) ] ;
 params [ DecimalInteger ] = UNK . class ;
 for ( int i = DecimalInteger ;
 i < arguments . size ( ) ;
 i ++ ) {
 params [ i + DecimalInteger ] = arguments . get ( i ) . clazz ;
 }
 return value = rtn . clazz ;
 }
 else if ( modifier . is static ( modifiers ) ) {
 params = new class < ? > [ arguments . size ( ) ] ;
 for ( int i = DecimalInteger ;
 i < arguments . size ( ) ;
 i ++ ) {
 params [ i ] = arguments . get ( i ) . clazz ;
 }
 return value = rtn . clazz ;
 }
 else if ( String . equals ( name ) ) {
 params = new class < ? > [ arguments . size ( ) ] ;
 for ( int i = DecimalInteger ;
 i < arguments . size ( ) ;
 i ++ ) {
 params [ i ] = arguments . get ( i ) . clazz ;
 }
 return value = owner . clazz ;
 }
 else {
 params = new class < ? > [ DecimalInteger + arguments . size ( ) ] ;
 params [ DecimalInteger ] = owner . clazz ;
 for ( int i = DecimalInteger ;
 i < arguments . size ( ) ;
 i ++ ) {
 params [ i + DecimalInteger ] = arguments . get ( i ) . clazz ;
 }
 return value = rtn . clazz ;
 }
 return method type . method type ( return value , params ) ;
 }
comment:
START returns method type for this method . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public set < string > get file extensions ( ) {
 requested content type resolver resolver = get content type resolver ( ) ;
 if ( use registered suffix pattern match ( ) && resolver != null ) {
 if ( resolver instanceof mapping content type resolver ) {
 return ( ( mapping content type resolver ) resolver ) . get keys ( ) ;
 }
 }
 return null ;
 }
comment:
START return the file extensions to use for suffix pattern matching . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public class < ? > get UNK payload class ( ) {
 return this . UNK payload class ;
 }
comment:
START return the configured preferred serialization payload class . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public list < app widget provider info > get installed providers for profile ( @ nullable user handle profile ) {
 if ( service == null ) {
 return collections . empty list ( ) ;
 }
 return get installed providers for profile ( app widget provider info . UNK category_ home_ n , profile ) ;
 }
comment:
START gets the app widget providers for the given user profile . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
protected abstract input stream get input stream ( path path ) throws exception ;
comment:
START creates an input stream accessing the file denoted by the path . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public void set async annotation type ( class < ? extends annotation > async annotation type ) {
 assert . not null ( async annotation type , String ) ;
 this . async annotation type = async annotation type ;
 }
comment:
START set the ` async ' annotation type to be detected at either class or method level . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public boolean contains ( short id ) {
 return entries . contains key ( id ) ;
 }
comment:
START returns if the list contains an extra data record with the specified id . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public file get file ( ) {
 return this . file ;
 }
comment:
START return the library file . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
@ override public string to string ( ) {
 string builder str = new string builder ( ) ;
 str . append ( String ) ;
 final string channel prefix [ ] = {
 String , String , String , String }
 ;
 for ( int ch = DecimalInteger ;
 ch < t ;
 ch ++ ) {
 str . append ( channel prefix [ ch ] ) ;
 for ( int r = DecimalInteger ;
 r < rows ;
 r ++ ) {
 str . append ( String ) ;
 for ( int c = DecimalInteger ;
 c < columns ;
 c ++ ) {
 float gain = get gain factor ( ch , c , r ) ;
 str . append ( gain ) ;
 if ( c < columns - DecimalInteger ) {
 str . append ( String ) ;
 }
 }
 str . append ( String ) ;
 if ( r < rows - DecimalInteger ) {
 str . append ( String ) ;
 }
 }
 str . append ( String ) ;
 if ( ch < t - DecimalInteger ) {
 str . append ( String ) ;
 }
 }
 str . append ( String ) ;
 return str . to string ( ) ;
 }
comment:
START return the lens shading map as a string representation . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ can ignore return value k check key ( @ nullable k key ) {
 return key ;
 }
comment:
START returns its input , or throws an exception if this is not a valid key . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public path get path ( string path name ) {
 return get path ( new path fragment ( path name ) ) ;
 }
comment:
START returns an absolute path instance , given an absolute path name , without double slashes , . . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set color ( color color ) {
 this . color = color ;
 }
comment:
START sets the color to modify . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK UNK
returns the UNK of the UNK

code:
public void set summary ( @ string res int summary res id ) {
 set summary ( context . get string ( summary res id ) ) ;
 }
comment:
START sets the summary for this preference with a resource id . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
@ override protected void set up ( ) throws exception {
 super . set up ( ) ;
 msystem context = get context ( ) ;
 }
comment:
START gets the current system context and stores it . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ override protected void on finish inflate ( ) {
 super . on finish inflate ( ) ;
 if ( mdrag view res id != - DecimalInteger ) {
 set drag view ( find view by id ( mdrag view res id ) ) ;
 }
 if ( UNK view res id != - DecimalInteger ) {
 set scrollable view ( find view by id ( UNK view res id ) ) ;
 }
 }
comment:
START set the drag view after the view is inflated END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
public void set content view ( @ layout res int layout res d ) {
 get window ( ) . set content view ( layout res d ) ;
 init window decor action bar ( ) ;
 }
comment:
START set the activity content from a layout resource . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public multi match query builder field ( string field ) {
 if ( strings . is empty ( field ) ) {
 throw new illegal argument exception ( String ) ;
 }
 this . fields UNK . put ( field , abstract query builder . default_ t ) ;
 return this ;
 }
comment:
START adds a field to run the multi match against . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public collection < field > get visible fields ( ) {
 return visible fields ;
 }
comment:
START gets only the visible fields . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public linked multi value map < k , v > deep copy ( ) {
 linked multi value map < k , v > copy = new linked multi value map < > ( this . target map . size ( ) ) ;
 for ( map . entry < k , list < v > > entry : this . target map . entry set ( ) ) {
 copy . put ( entry . get key ( ) , new linked list < > ( entry . get value ( ) ) ) ;
 }
 return copy ;
 }
comment:
START create a deep copy of this map . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public boolean is enabled ( @ non null issue issue ) {
 return get severity ( issue ) != severity . e ;
 }
comment:
START returns false if the given issue has been disabled . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public cc library helper add public textual headers ( iterable < artifact > textual headers ) {
 iterables . add all ( this . public textual headers , textual headers ) ;
 for ( artifact header : textual headers ) {
 this . additional exported headers . add ( header . get exec path ( ) ) ;
 }
 return this ;
 }
comment:
START add the corresponding files as public textual header files . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void set time zone ( zone id time zone ) {
 this . time zone = time zone ;
 }
comment:
START set the user 's time zone . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public prepared statement setter new prepared statement setter ( list < ? > params ) {
 return new prepared statement creator impl ( params != null ? params : collections . empty list ( ) ) ;
 }
comment:
START return a new prepared statement setter for the given parameters . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public doc builder set doc ( map doc ) {
 return set doc ( doc , requests . content_ e ) ;
 }
comment:
START sets the document to be percolated . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public short get density ( ) throws illegal state exception , illegal argument exception , unsupported operation exception {
 byte [ ] param = new byte [ DecimalInteger ] ;
 check status ( get parameter ( param_ y , param ) ) ;
 return byte array to short ( param ) ;
 }
comment:
START gets the density level . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public where condition and ( where condition cond1 , where condition cond2 , where condition ... cond more ) {
 return where collector . combine where conditions ( String , cond1 , cond2 , cond more ) ;
 }
comment:
START creates a where condition by combining the given conditions using and . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public usb accessory get current accessory ( ) {
 return handler . get current accessory ( ) ;
 }
comment:
START returns the currently attached usb accessory END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public builder add symlinks to artifacts ( iterable < artifact > artifacts ) {
 for ( artifact artifact : artifacts ) {
 add symlink ( artifact . get exec path ( ) , artifact ) ;
 }
 return this ;
 }
comment:
START adds symlinks to given artifacts at their exec paths . END
BLUE1:0.285714285714
--generate--
add a UNK to the UNK .
add the UNK to the UNK .
add a UNK to UNK .
add the UNK to the given UNK .
add the UNK to the UNK to the UNK .

code:
@ can ignore return value public builder add escape ( char c , string replacement ) {
 check not null ( replacement ) ;
 replacement map . put ( c , replacement ) ;
 return this ;
 }
comment:
START adds a replacement string for the given input character . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public class < ? > get bean class ( ) {
 return bean class ;
 }
comment:
START return the offending bean class . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public int shard id ( ) {
 return this . shard id ;
 }
comment:
START get the shard id @return id of the shard END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public boolean get UNK text ( ) {
 return UNK text ;
 }
comment:
START return whether this text view is including its entire text contents in frozen UNK . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
abstract class < ? extends closure command > get closure command type ( ) ;
comment:
START gets type of expected closure type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int add speech ( string text , string filename ) {
 synchronized ( mstart lock ) {
 UNK . put ( text , uri . parse ( filename ) ) ;
 return s ;
 }
 }
comment:
START adds a mapping between a string of text and a sound file . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK to the UNK .
returns the UNK for the given UNK .
adds the UNK to the UNK to the UNK .

code:
public string get type ( ) {
 return this . type ;
 }
comment:
START return the primary type . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
private e UNK last ( ) {
 node < e > l = last ;
 if ( l == null ) return null ;
 node < e > p = l . prev ;
 e item = l . item ;
 l . item = null ;
 l . prev = l ;
 last = p ;
 if ( p == null ) first = null ;
 else p . next = null ;
 -- count ;
 not full . signal ( ) ;
 return item ;
 }
comment:
START removes and returns last element , or null if empty . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public boolean is attached to window ( ) {
 return mattach info != null ;
 }
comment:
START returns true if this view is currently attached to a window . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public int get subscription expire time ( ) {
 return msubscription expire time ;
 }
comment:
START gets the presence subscription expiration time . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
static context create storage test context ( context context , string authority ) {
 final mock content resolver test resolver = new mock content resolver ( ) ;
 test content provider provider = new test content provider ( ) ;
 test resolver . add provider ( authority , provider ) ;
 return new context wrapper ( context ) {
 @ override public content resolver get content resolver ( ) {
 return test resolver ;
 }
 }
 ;
 }
comment:
START returns a context configured with test provider for authority . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public char sequence get iterable text for accessibility ( ) {
 return get content description ( ) ;
 }
comment:
START gets the text reported for accessibility purposes . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public bundle get default guest restrictions ( ) {
 try {
 return service . get default guest restrictions ( ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START gets the default guest restrictions . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public put repository request builder set name ( string name ) {
 request . name ( name ) ;
 return this ;
 }
comment:
START sets the repository name @param name repository name @return this builder END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public window animation frame stats get window animation frame stats ( ) {
 synchronized ( lock ) {
 throw if not connected locked ( ) ;
 }
 try {
 if ( g ) {
 log . i ( log_ g , String ) ;
 }
 return mui UNK connection . get window animation frame stats ( ) ;
 }
 catch ( remote exception re ) {
 log . e ( log_ g , String , re ) ;
 }
 return null ;
 }
comment:
START gets the window animation frame statistics . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get string ( string name , string default value ) {
 json value child = get ( name ) ;
 return ( child == null || ! child . is value ( ) || child . is null ( ) ) ? default value : child . as string ( ) ;
 }
comment:
START returns default value if not found . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get host ( ) {
 return get first ( t ) ;
 }
comment:
START get the host header . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public set < string > get all file extensions ( ) {
 set < string > file extensions = new linked hash set < string > ( ) ;
 for ( property source loader loader : this . loaders ) {
 file extensions . add all ( arrays . as list ( loader . get file extensions ( ) ) ) ;
 }
 return file extensions ;
 }
comment:
START returns all file extensions that could be loaded . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public vector2 get position ( ) {
 vec2 pos = body . get position ( ) ;
 position . set ( pos . x , pos . y ) ;
 return position ;
 }
comment:
START get the world body origin position . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get time delta ( ) {
 return mcurr time - mprev time ;
 }
comment:
START return the time difference in milliseconds between the previous accepted scaling event and the current scaling event . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public header adapter < idrawer item > get header adapter ( ) {
 return mdrawer builder . mheader adapter ;
 }
comment:
START get the header adapter of the current drawer @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static date time formatter local time parser ( ) {
 return constants . UNK ;
 }
comment:
START returns a generic iso time parser for parsing local times . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
@ visible for testing protected UNK UNK probe result send http probe ( l url , int probe type ) {
 http connection url connection = null ;
 int http response code = DecimalInteger ;
 string redirect url = null ;
 final stopwatch probe timer = new stopwatch ( ) . start ( ) ;
 try {
 url connection = ( http connection ) mnetwork agent info . network . open connection ( url ) ;
 url connection . set instance follow redirects ( probe type == validation probe event . UNK c ) ;
 url connection . set connect timeout ( socket_ timeout_ s ) ;
 url connection . set read timeout ( socket_ timeout_ s ) ;
 url connection . set use caches ( false ) ;
 long request timestamp = system clock . elapsed realtime ( ) ;
 http response code = url connection . get response code ( ) ;
 redirect url = url connection . get header field ( String ) ;
 long response timestamp = system clock . elapsed realtime ( ) ;
 validation log ( validation probe event . get probe name ( probe type ) + String + url + String + ( response timestamp - request timestamp ) + String + String + http response code + String + url connection . get header fields ( ) ) ;
 if ( http response code == DecimalInteger && url connection . get content length ( ) == DecimalInteger ) {
 validation log ( String ) ;
 http response code = DecimalInteger ;
 }
 if ( http response code == DecimalInteger && probe type == validation probe event . UNK c ) {
 validation log ( String ) ;
 http response code = DecimalInteger ;
 }
 }
 catch ( exception e ) {
 validation log ( String + e ) ;
 if ( http response code == DecimalInteger ) {
 }
 }
 finally {
 if ( url connection != null ) {
 url connection . disconnect ( ) ;
 }
 }
 validation probe event . log event ( UNK id , probe timer . stop ( ) , probe type , http response code ) ;
 return new UNK UNK probe result ( http response code , redirect url ) ;
 }
comment:
START returns http response code . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public abstract int get uid for shared user ( string shared user name ) throws name not found exception ;
comment:
START return the user id associated with a shared user name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public void set encoding scheme ( string encoding scheme ) {
 this . encoding scheme = encoding scheme ;
 }
comment:
START set the encoding scheme for this view . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public string [ ] get UNK list ( ) {
 return UNK string list ;
 }
comment:
START get the technologies available in this tag , as fully qualified class names . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public method parameter get return type ( ) {
 return new handler method parameter ( - DecimalInteger ) ;
 }
comment:
START return the handler method return type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
static boring fragment new instance ( int num ) {
 boring fragment f = new boring fragment ( ) ;
 bundle args = new bundle ( ) ;
 args . put int ( String , num ) ;
 f . set arguments ( args ) ;
 return f ;
 }
comment:
START create a new instance of counting fragment , providing `` num '' as an argument . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public void remove all tasks ( ) {
 array list < task > tasks = mstack task list . get tasks ( ) ;
 for ( int i = tasks . size ( ) - DecimalInteger ;
 i >= DecimalInteger ;
 i -- ) {
 task t = tasks . get ( i ) ;
 remove task impl ( mstack task list , t ) ;
 mraw task list . remove ( t ) ;
 }
 if ( cb != null ) {
 cb . on stack tasks removed ( this ) ;
 }
 }
comment:
START removes all tasks from the stack . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set iso ( o iso ) {
 this . iso = iso ;
 }
comment:
START set the iso format used to format date values . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public void set allow UNK with traffic ( int enabled ) {
 try {
 service . set allow UNK with traffic ( enabled ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START set setting for allowing UNK when traffic is ongoing . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public int get tab width ( ) {
 return tab . get measured width ( ) ;
 }
comment:
START get the measured tab width . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set drag view ( view drag view ) {
 if ( mdrag view != null ) {
 mdrag view . set on click listener ( null ) ;
 }
 mdrag view = drag view ;
 if ( mdrag view != null ) {
 mdrag view . set clickable ( true ) ;
 mdrag view . set focusable ( false ) ;
 mdrag view . set focusable in touch mode ( false ) ;
 mdrag view . set on click listener ( new on click listener ( ) {
 @ override public void on click ( view v ) {
 if ( ! is enabled ( ) || ! is touch enabled ( ) ) return ;
 if ( mslide state != panel state . d && mslide state != panel state . d ) {
 if ( manchor point < DecimalFloatingPoint ) {
 set panel state ( panel state . d ) ;
 }
 else {
 set panel state ( panel state . d ) ;
 }
 }
 else {
 set panel state ( panel state . d ) ;
 }
 }
 }
 ) ;
 ;
 }
 }
comment:
START set the draggable view portion . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
set the UNK for the given UNK .

code:
long get highest published sequence ( long next sequence , long available sequence ) ;
comment:
START get the highest sequence number that can be safely read from the ring buffer . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final vec2 mul ( float a ) {
 return new vec2 ( x * a , y * a ) ;
 }
comment:
START return this vector multiplied by a UNK does not alter this vector . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public client configuration get aws client config ( ) {
 return aws client config ;
 }
comment:
START gets the aws client configuration . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
void set ( final double double val ) {
 this . type = class writer . e ;
 this . long val = double . double to raw long bits ( double val ) ;
 this . hash code = 0x7 f & ( type + ( int ) double val ) ;
 }
comment:
START sets this item to a double item . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void set path matcher ( path matcher path matcher ) {
 this . path matcher = path matcher ;
 }
comment:
START set a custom path matcher to use for the patterns request condition . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .

code:
int get cursor horizontal position ( layout layout , int offset ) {
 return ( int ) ( get horizontal ( layout , offset ) - DecimalFloatingPoint ) ;
 }
comment:
START return the clamped horizontal position for the first cursor . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public boolean is draw inside enabled ( ) {
 return mdraw inside ;
 }
comment:
START returns whether the legend will draw inside the chart or outside @return END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
protected map < string , object > find autowire candidates ( string bean name , class < ? > required type , dependency descriptor descriptor ) {
 string [ ] candidate names = bean factory utils . bean names for type including ancestors ( this , required type , true , descriptor . is eager ( ) ) ;
 map < string , object > result = new linked hash map < > ( candidate names . length ) ;
 for ( class < ? > autowiring type : this . resolvable dependencies . key set ( ) ) {
 if ( autowiring type . is assignable from ( required type ) ) {
 object autowiring value = this . resolvable dependencies . get ( autowiring type ) ;
 autowiring value = autowire utils . resolve autowiring value ( autowiring value , required type ) ;
 if ( required type . is instance ( autowiring value ) ) {
 result . put ( object utils . identity to string ( autowiring value ) , autowiring value ) ;
 break ;
 }
 }
 }
 for ( string candidate name : candidate names ) {
 if ( ! is self reference ( bean name , candidate name ) && is autowire candidate ( candidate name , descriptor ) ) {
 add candidate entry ( result , candidate name , descriptor , required type ) ;
 }
 }
 if ( result . is empty ( ) && ! UNK multiple beans ( required type ) ) {
 dependency descriptor fallback descriptor = descriptor . for fallback match ( ) ;
 for ( string candidate name : candidate names ) {
 if ( ! is self reference ( bean name , candidate name ) && is autowire candidate ( candidate name , fallback descriptor ) ) {
 add candidate entry ( result , candidate name , descriptor , required type ) ;
 }
 }
 if ( result . is empty ( ) ) {
 for ( string candidate name : candidate names ) {
 if ( is self reference ( bean name , candidate name ) && is autowire candidate ( candidate name , fallback descriptor ) ) {
 add candidate entry ( result , candidate name , descriptor , required type ) ;
 }
 }
 }
 }
 return result ;
 }
comment:
START find bean instances that match the required type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK UNK

code:
public < e > builder add for direct dependents ( key < e > key , e to add ) {
 unchecked add all ( key , immutable list . of ( to add ) , this . strict dependency items ) ;
 return this ;
 }
comment:
START add element to add , and propagate it only to direct dependents of this provider . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add a new UNK to the UNK .
add the UNK UNK to the UNK .
add the UNK UNK to the UNK

code:
public static unchecked row get by row index ( context context , table table , long index ) {
 long native row pointer = table . native get row ptr ( table . native ptr , index ) ;
 unchecked row row = new unchecked row ( context , table , native row pointer ) ;
 context . add reference ( native object reference . type_ w , row ) ;
 return row ;
 }
comment:
START gets the row object associated to an index in a table . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public digraph < t > get graph ( ) {
 return graph ;
 }
comment:
START returns the recorded graph END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public time zone get default time zone ( ) {
 return this . default time zone ;
 }
comment:
START return the default time zone that this resolver is supposed to fall back to , if any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public long get exposure maximum or default ( ) {
 return get exposure maximum or default ( sensor_ info_ exposure_ time_ range_ max_ at_ t ) ;
 }
comment:
START get the maximum value for an exposure range from android.sensor.info.exposure time range . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public UNK server socket channel config set reuse port ( boolean reuse port ) {
 try {
 native . set reuse port ( channel . fd ( ) . int value ( ) , reuse port ? DecimalInteger : DecimalInteger ) ;
 return this ;
 }
 catch ( exception e ) {
 throw new channel exception ( e ) ;
 }
 }
comment:
START set the so_ t option on the underlying channel . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set interpolator ( interpolator interpolator ) {
 interpolator = interpolator ;
 }
comment:
START sets the optional interpolator for this keyframe . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
protected set < resource > do find all class path resources ( string path ) throws exception {
 set < resource > result = new linked hash set < > ( DecimalInteger ) ;
 class loader cl = get class loader ( ) ;
 enumeration < l > resource urls = ( cl != null ? cl . get resources ( path ) : class loader . get system resources ( path ) ) ;
 while ( resource urls . has more elements ( ) ) {
 l url = resource urls . next element ( ) ;
 result . add ( convert class loader l ( url ) ) ;
 }
 if ( String . equals ( path ) ) {
 add all class loader jar roots ( cl , result ) ;
 }
 return result ;
 }
comment:
START find all class location resources with the given path via the class loader . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the given .

code:
string get label ( ) {
 synchronized ( lock ) {
 return mconfiguration locked . label ;
 }
 }
comment:
START gets a label to use when describing the database in log messages . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return output_ s ;
 case DecimalInteger : return t ;
 default : return null ;
 }
 }
comment:
START find the _ fields constant that matches field id , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
protected supplier < data source < e > > get data source supplier for request ( final t image request , final cache level cache level ) {
 final object caller context = get caller context ( ) ;
 return new supplier < data source < e > > ( ) {
 @ override public data source < e > get ( ) {
 return get data source for request ( image request , caller context , cache level ) ;
 }
 @ override public string to string ( ) {
 return objects . to string helper ( this ) . add ( String , image request . to string ( ) ) . to string ( ) ;
 }
 }
 ;
 }
comment:
START creates a data source supplier for the given image request . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
void set persistence provider package name ( string persistence provider package name ) ;
comment:
START set the persistence provider 's own package name , for exclusion from class transformation . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ override public void set message source ( message source message source ) {
 this . message source = message source ;
 }
comment:
START set the message source . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given request .
set the UNK for the given UNK .

code:
@ guarded by ( String ) @ non null shortcut user get user shortcuts locked ( @ user id int int user id ) {
 shortcut user user packages = users . get ( user id ) ;
 if ( user packages == null ) {
 user packages = load user locked ( user id ) ;
 if ( user packages == null ) {
 user packages = new shortcut user ( user id ) ;
 }
 users . put ( user id , user packages ) ;
 }
 return user packages ;
 }
comment:
START return the per-user state . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the given .

code:
private string get active name ( long current time millis ) {
 string oldest active name = null ;
 long oldest active start = long . max_ e ;
 final file info info = new file info ( prefix ) ;
 for ( string name : mbase path . list ( ) ) {
 if ( ! info . parse ( name ) ) continue ;
 if ( info . is active ( ) && info . start millis < current time millis && info . start millis < oldest active start ) {
 oldest active name = name ;
 oldest active start = info . start millis ;
 }
 }
 if ( oldest active name != null ) {
 return oldest active name ;
 }
 else {
 info . start millis = current time millis ;
 info . end millis = long . max_ e ;
 return info . build ( ) ;
 }
 }
comment:
START return the currently active file , which may not exist yet . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
protected object get session bean instance ( ) throws naming exception , invocation target exception {
 return new session bean instance ( ) ;
 }
comment:
START return an ejb instance to delegate the call to . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static credentials custom ( string identity provider , string user identifier , map < string , object > user info ) {
 if ( identity provider == null || identity provider . equals ( String ) ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( user identifier == null || user identifier . equals ( String ) ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( user info == null ) {
 user info = new hash map < string , object > ( ) ;
 }
 return new credentials ( identity provider , user identifier , user info ) ;
 }
comment:
START creates a custom set of credentials . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
@ nullable static ordered set multimap < attribute , configured target > compute dependencies ( environment env , skyframe dependency resolver resolver , target and configuration ctg value , aspect aspect , immutable map < label , config matching provider > config conditions , rule class provider rule class provider , build configuration host configuration , nested set builder < package > transitive packages , nested set builder < label > transitive loading root causes ) throws dependency evaluation exception , aspect creation exception , interrupted exception {
 ordered set multimap < attribute , dependency > dep value names ;
 try {
 dep value names = resolver . dependent node map ( ctg value , host configuration , aspect , config conditions , transitive loading root causes ) ;
 }
 catch ( eval exception e ) {
 env . get listener ( ) . handle ( event . error ( e . get location ( ) , e . get message ( ) ) ) ;
 throw new dependency evaluation exception ( new configured value creation exception ( e . print ( ) , ctg value . get label ( ) ) ) ;
 }
 catch ( invalid configuration exception e ) {
 throw new dependency evaluation exception ( e ) ;
 }
 if ( use dynamic configurations ( ctg value . get configuration ( ) ) ) {
 dep value names = get dynamic configurations ( env , ctg value , dep value names , host configuration , rule class provider ) ;
 if ( dep value names == null ) {
 return null ;
 }
 }
 map < sky key , configured target > dep values = resolve configured target dependencies ( env , dep value names . values ( ) , transitive packages , transitive loading root causes ) ;
 if ( dep values == null ) {
 return null ;
 }
 ordered set multimap < sky key , configured aspect > dep aspects = resolve aspect dependencies ( env , dep values , dep value names . values ( ) , transitive packages ) ;
 if ( dep aspects == null ) {
 return null ;
 }
 return merge aspects ( dep value names , dep values , dep aspects ) ;
 }
comment:
START returns null if skyframe has n't evaluated the required dependencies yet . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
protected boolean in scope ( int parent depth , path fragment normalized path ) {
 if ( scope root == null || ! enable scope checking ) {
 return true ;
 }
 else if ( normalized path . is absolute ( ) ) {
 return normalized path . starts with ( scope root ) ;
 }
 else {
 return parent depth - leading parent references ( normalized path ) >= scope root . segment count ( ) ;
 }
 }
comment:
START returns true if the given path is within this file system 's scope , false otherwise . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public void set motor speed ( float speed ) {
 joint . set motor speed ( speed ) ;
 }
comment:
START set the motor speed , usually in meters per second . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public builder add default values ( iterable < string > default values ) {
 for ( string default value : default values ) {
 this . default values . add ( default value ) ;
 }
 return this ;
 }
comment:
START add set of default values to the mapping END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
iterable < metric < ? > > find all ( string prefix ) ;
comment:
START find all metrics whose name starts with the given prefix . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public output stream write ( boolean append ) {
 if ( type == file type . classpath ) throw new gdx runtime exception ( String + file ) ;
 if ( type == file type . internal ) throw new gdx runtime exception ( String + file ) ;
 parent ( ) . mkdirs ( ) ;
 try {
 return new file output stream ( file ( ) , append ) ;
 }
 catch ( exception ex ) {
 if ( file ( ) . is directory ( ) ) throw new gdx runtime exception ( String + file + String + type + String , ex ) ;
 throw new gdx runtime exception ( String + file + String + type + String , ex ) ;
 }
 }
comment:
START returns a stream for writing to this file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public static < t > cached observable < t > from ( observable < ? extends t > source , int capacity hint ) {
 if ( capacity hint < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 cache state < t > state = new cache state < t > ( source , capacity hint ) ;
 cached subscribe < t > on subscribe = new cached subscribe < t > ( state ) ;
 return new cached observable < t > ( on subscribe , state ) ;
 }
comment:
START creates a cached observable with the given capacity hint . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void remove all update listeners ( ) {
 if ( mupdate listeners == null ) {
 return ;
 }
 mupdate listeners . clear ( ) ;
 mupdate listeners = null ;
 }
comment:
START removes all listeners from the set listening to frame updates for this animation . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK
returns the UNK of the UNK

code:
public void set field ( string field , string contents ) throws remote exception ;
comment:
START set a field in the crypto header . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
builder message writer ( http message writer < ? > message writer ) ;
comment:
START add the given message writer to this builder . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void add sample ( int weight , float value ) {
 ensure sorted by index ( ) ;
 sample new sample = recycled sample count > DecimalInteger ? recycled samples [ -- recycled sample count ] : new sample ( ) ;
 new sample . index = next sample index ++ ;
 new sample . weight = weight ;
 new sample . value = value ;
 samples . add ( new sample ) ;
 total weight += weight ;
 while ( total weight > max weight ) {
 int UNK weight = total weight - max weight ;
 sample oldest sample = samples . get ( DecimalInteger ) ;
 if ( oldest sample . weight <= UNK weight ) {
 total weight -= oldest sample . weight ;
 samples . remove ( DecimalInteger ) ;
 if ( recycled sample count < max_ UNK s ) {
 recycled samples [ recycled sample count ++ ] = oldest sample ;
 }
 }
 else {
 oldest sample . weight -= UNK weight ;
 total weight -= UNK weight ;
 }
 }
 }
comment:
START adds a new UNK value . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
sets the UNK for the UNK .

code:
public static int get primitive type size ( int native type ) {
 switch ( native type ) {
 case type_ e : return sizeof_ e ;
 case type_ t32 : return sizeof_ t32 ;
 case type_ t : return sizeof_ t ;
 case type_ UNK : return sizeof_ UNK ;
 case type_ e : return sizeof_ e ;
 case type_ l : return sizeof_ l ;
 }
 throw new unsupported operation exception ( String + native type ) ;
 }
comment:
START get the size in bytes for the native camera metadata type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public pres subscription state get pres subscription state ( ) {
 return UNK subscription state ;
 }
comment:
START gets the presence subscription state . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public layout transition get layout transition ( ) {
 return transition ;
 }
comment:
START gets the layout transition object for this view group . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public void get bounds in screen ( rect out bounds ) {
 out bounds . set ( mbounds in screen . left , mbounds in screen . top , mbounds in screen . right , mbounds in screen . bottom ) ;
 }
comment:
START gets the node bounds in screen coordinates . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean is empty ( ) throws exception {
 optional < long > size if known = size if known ( ) ;
 if ( size if known . is present ( ) && size if known . get ( ) == DecimalInteger ) {
 return true ;
 }
 closer closer = closer . create ( ) ;
 try {
 input stream in = closer . register ( open stream ( ) ) ;
 return in . read ( ) == - DecimalInteger ;
 }
 catch ( throwable e ) {
 throw closer . rethrow ( e ) ;
 }
 finally {
 closer . close ( ) ;
 }
 }
comment:
START returns whether the source has zero bytes . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
void add package group ( string name , collection < string > packages , collection < label > includes , event handler event handler , location location ) throws name conflict exception , label syntax exception {
 package group group = new package group ( create label ( name ) , pkg , packages , includes , event handler , location ) ;
 target existing = targets . get ( group . get name ( ) ) ;
 if ( existing != null ) {
 throw name conflict ( group , existing ) ;
 }
 targets . put ( group . get name ( ) , group ) ;
 if ( group . contains errors ( ) ) {
 set contains errors ( ) ;
 }
 }
comment:
START adds a package group to the package . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set mode ( line data set . mode mode ) {
 mode = mode ;
 }
comment:
START returns the drawing mode for this line data set @return END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .

code:
protected void set request body ( http invoker client configuration config , http post http post , byte array output stream baos ) throws exception {
 byte array entity entity = new byte array entity ( baos . to byte array ( ) ) ;
 entity . set content type ( get content type ( ) ) ;
 http post . set entity ( entity ) ;
 }
comment:
START set the given serialized remote invocation as request body . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
protected callable statement creator new callable statement creator ( parameter mapper in param mapper ) {
 return this . callable statement factory . new callable statement creator ( in param mapper ) ;
 }
comment:
START return a callable statement creator to perform an operation with the parameters returned from this parameter mapper . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public static byte buf wrapped buffer ( int max num components , byte [ ] ... arrays ) {
 switch ( arrays . length ) {
 case DecimalInteger : break ;
 case DecimalInteger : if ( arrays [ DecimalInteger ] . length != DecimalInteger ) {
 return wrapped buffer ( arrays [ DecimalInteger ] ) ;
 }
 break ;
 default : final list < byte buf > components = new array list < byte buf > ( arrays . length ) ;
 for ( byte [ ] a : arrays ) {
 if ( a == null ) {
 break ;
 }
 if ( a . length > DecimalInteger ) {
 components . add ( wrapped buffer ( a ) ) ;
 }
 }
 if ( ! components . is empty ( ) ) {
 return new composite byte buf ( c , false , max num components , components ) ;
 }
 }
 return empty_ r ;
 }
comment:
START creates a new big-endian composite buffer which wraps the specified arrays without copying them . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK to the UNK .

code:
public list < user info > get users ( ) {
 try {
 return service . get users ( false ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START returns information for all users on this device , including ones marked for deletion . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set bean name generator ( bean name generator bean name generator ) {
 this . bean name generator = ( bean name generator != null ? bean name generator : new annotation bean name generator ( ) ) ;
 }
comment:
START set the bean name generator to use for detected bean classes . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public long get available restore token ( string package name ) {
 context . enforce calling or self permission ( android . manifest . permission . p , String ) ;
 long token = UNK token ;
 synchronized ( UNK lock ) {
 if ( mever stored apps . contains ( package name ) ) {
 if ( more_ g ) {
 slog . i ( g , String ) ;
 }
 token = mcurrent token ;
 }
 }
 if ( more_ g ) slog . i ( g , String + token ) ;
 return token ;
 }
comment:
START returns zero if none available . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ nullable map < string , string > get extra map ( UNK e fetch state , int byte size ) ;
comment:
START gets a map containing extra parameters to pass to the listeners . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
public string get short log message ( ) {
 int args = this . method . get parameter count ( ) ;
 return get bean type ( ) . get name ( ) + String + this . method . get name ( ) + String + args + String ;
 }
comment:
START return a short representation of this handler method for log message purposes . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public final native int get buffer parameter ( int target , int pname ) ;
comment:
START return the value for the passed pname . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
static work queue common UNK queue ( ) {
 int [ ] z ;
 fork join pool p ;
 work queue [ ] ws ;
 int m , r ;
 return ( ( z = UNK . get ( ) ) != null && ( p = common ) != null && ( ws = p . work queues ) != null && ( m = ws . length - DecimalInteger ) >= DecimalInteger ) ? ws [ m & z [ DecimalInteger ] & k ] : null ;
 }
comment:
START returns common pool queue for a thread that has submitted at least one task . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
public environment new build environment ( ) {
 return environment . builder ( mutability ) . set globals ( environment . d ) . set event handler ( get event handler ( ) ) . set tools repository ( test constants . UNK y ) . set phase ( phase . g ) . build ( ) ;
 }
comment:
START creates a standard environment for tests in the build language . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public deploy archive builder add runtime jars ( iterable < artifact > jars ) {
 this . runtime jars builder . add ( jars ) ;
 return this ;
 }
comment:
START adds additional jars that should be on the classpath at runtime . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK of the UNK to the UNK .

code:
@ override public void set next aggregation value ( object value ) {
 this . aggregation value = value ;
 }
comment:
START set the next aggregation value . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public void set x ( int x ) {
 if ( madapted allocation . get type ( ) . get x ( ) <= x ) {
 throw new rsinvalid state exception ( String ) ;
 }
 if ( window . get x ( ) == madapted allocation . get type ( ) . get x ( ) ) {
 throw new rsinvalid state exception ( String ) ;
 }
 if ( ( window . get x ( ) + x ) >= madapted allocation . get type ( ) . get x ( ) ) {
 throw new rsinvalid state exception ( String ) ;
 }
 mselected x = x ;
 update offsets ( ) ;
 }
comment:
START set the active x . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
public e remove at ( int index ) {
 final object old = array [ index ] ;
 if ( size <= DecimalInteger ) {
 if ( g ) log . d ( g , String + hashes . length + String ) ;
 free arrays ( hashes , array , size ) ;
 hashes = empty array . t ;
 array = empty array . t ;
 size = DecimalInteger ;
 }
 else {
 if ( hashes . length > ( base_ e * DecimalInteger ) && size < hashes . length / DecimalInteger ) {
 final int n = size > ( base_ e * DecimalInteger ) ? ( size + ( size > > DecimalInteger ) ) : ( base_ e * DecimalInteger ) ;
 if ( g ) log . d ( g , String + hashes . length + String + n ) ;
 final int [ ] ohashes = hashes ;
 final object [ ] oarray = array ;
 alloc arrays ( n ) ;
 size -- ;
 if ( index > DecimalInteger ) {
 if ( g ) log . d ( g , String + index + String ) ;
 system . arraycopy ( ohashes , DecimalInteger , hashes , DecimalInteger , index ) ;
 system . arraycopy ( oarray , DecimalInteger , array , DecimalInteger , index ) ;
 }
 if ( index < size ) {
 if ( g ) log . d ( g , String + ( index + DecimalInteger ) + String + size + String + index ) ;
 system . arraycopy ( ohashes , index + DecimalInteger , hashes , index , size - index ) ;
 system . arraycopy ( oarray , index + DecimalInteger , array , index , size - index ) ;
 }
 }
 else {
 size -- ;
 if ( index < size ) {
 if ( g ) log . d ( g , String + ( index + DecimalInteger ) + String + size + String + index ) ;
 system . arraycopy ( hashes , index + DecimalInteger , hashes , index , size - index ) ;
 system . arraycopy ( array , index + DecimalInteger , array , index , size - index ) ;
 }
 array [ size ] = null ;
 }
 }
 return ( e ) old ;
 }
comment:
START remove the key/value mapping at the given index . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
private void add action ( action a ) {
 if ( has landscape and portrait layouts ( ) ) {
 throw new runtime exception ( String + String + String ) ;
 }
 if ( actions == null ) {
 actions = new array list < action > ( ) ;
 }
 actions . add ( a ) ;
 a . update memory usage estimate ( mmemory usage counter ) ;
 }
comment:
START add an action to be executed on the remote side when apply is called . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public boolean get audio route allowed ( ) {
 if ( g ) log ( String ) ;
 if ( service != null && is enabled ( ) ) {
 try {
 return service . get audio route allowed ( ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , e . to string ( ) ) ;
 }
 }
 else {
 log . w ( g , String ) ;
 if ( g ) log . d ( g , log . get stack trace string ( new throwable ( ) ) ) ;
 }
 return false ;
 }
comment:
START returns whether audio routing is allowed . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public int get flags ( ) {
 return ( flags & ( flag_ all_ c ) ) ;
 }
comment:
START return the flags . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public builder encoded path ( string path ) {
 return path ( path part . from encoded ( path ) ) ;
 }
comment:
START sets the previously encoded path . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public int get message id ( ) {
 return mmessage id ;
 }
comment:
START gets the message identifier . END
BLUE1:0.285714285714
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public void set view ( view view ) {
 alert . set view ( view ) ;
 }
comment:
START set the view to display in that dialog . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
private void create rule mapping ( iterable < rule documentation > doc entries , map < string , list multimap < rule type , rule documentation > > rule mapping ) throws build encyclopedia doc exception {
 for ( rule documentation rule doc : doc entries ) {
 rule class rule class = rule class provider . get rule class map ( ) . get ( rule doc . get rule name ( ) ) ;
 if ( rule class != null ) {
 string rule family = rule doc . get rule family ( ) ;
 if ( ! rule mapping . contains key ( rule family ) ) {
 rule mapping . put ( rule family , linked list multimap . < rule type , rule documentation > create ( ) ) ;
 }
 if ( rule class . is documented ( ) ) {
 rule mapping . get ( rule family ) . put ( rule doc . get rule type ( ) , rule doc ) ;
 }
 }
 else {
 throw rule doc . create exception ( String + rule doc . get rule name ( ) ) ;
 }
 }
 }
comment:
START create a mapping of rules based on rule type and family . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int get cdma asu level ( ) {
 final int cdma dbm = get cdma dbm ( ) ;
 final int cdma ecio = get cdma ecio ( ) ;
 int cdma asu level ;
 int ecio asu level ;
 if ( cdma dbm >= - DecimalInteger ) cdma asu level = DecimalInteger ;
 else if ( cdma dbm >= - DecimalInteger ) cdma asu level = DecimalInteger ;
 else if ( cdma dbm >= - DecimalInteger ) cdma asu level = DecimalInteger ;
 else if ( cdma dbm >= - DecimalInteger ) cdma asu level = DecimalInteger ;
 else if ( cdma dbm >= - DecimalInteger ) cdma asu level = DecimalInteger ;
 else cdma asu level = DecimalInteger ;
 if ( cdma ecio >= - DecimalInteger ) ecio asu level = DecimalInteger ;
 else if ( cdma ecio >= - DecimalInteger ) ecio asu level = DecimalInteger ;
 else if ( cdma ecio >= - DecimalInteger ) ecio asu level = DecimalInteger ;
 else if ( cdma ecio >= - DecimalInteger ) ecio asu level = DecimalInteger ;
 else if ( cdma ecio >= - DecimalInteger ) ecio asu level = DecimalInteger ;
 else ecio asu level = DecimalInteger ;
 int level = ( cdma asu level < ecio asu level ) ? cdma asu level : ecio asu level ;
 if ( g ) log ( String + level ) ;
 return level ;
 }
comment:
START get the cdma signal level as an asu value between NUMBER . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
@ suppress warnings ( String ) public b post tags ( string ... post tags ) {
 this . post tags = post tags ;
 return ( b ) this ;
 }
comment:
START set the post tags that will be used for highlighting . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public line and column get start line and column ( ) {
 return null ;
 }
comment:
START returns null if this information is not available . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public int get version ( ) {
 return ( ( long ) database utils . long for query ( this , String , null ) ) . int value ( ) ;
 }
comment:
START gets the database version . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public query caching policy get query caching policy ( ) {
 return query caching policy ;
 }
comment:
START return the policy to use when caching queries . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set suffix ( string suffix ) {
 this . suffix = ( suffix != null ? suffix : String ) ;
 }
comment:
START set the suffix that gets appended to view names when building a url . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set printer ( printer printer ) {
 this . printer = ( printer == null ) ? no_ r : printer ;
 }
comment:
START set the printer that will log diagnostics from this layout . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
http2 stream UNK push stream ( int stream id , http2 stream parent ) throws http2 exception ;
comment:
START creates a push stream in the reserved state for this endpoint and notifies all listeners . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public create index request builder set source ( xcontent builder source ) {
 request . source ( source ) ;
 return this ;
 }
comment:
START sets the settings and mappings as a single source . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public synchronized < t > void add settings update consumer ( setting < t > setting , consumer < t > consumer ) {
 add settings update consumer ( setting , consumer , ( s ) -> {
 }
 ) ;
 }
comment:
START adds a settings consumer . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public writer writer ( boolean append , string charset ) {
 throw new gdx runtime exception ( String ) ;
 }
comment:
START returns a writer for writing to this file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public static match query builder match query ( string name , object text ) {
 return new match query builder ( name , text ) ;
 }
comment:
START creates a match query with type `` boolean '' for the provided field name and text . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void set type pattern ( string type pattern ) {
 assert . not null ( type pattern ) ;
 this . type pattern = type pattern ;
 this . aspect UNK pattern matcher = pointcut parser . get pointcut parser UNK all primitives and using context classloader for resolution ( ) . parse type pattern ( replace boolean UNK ( type pattern ) ) ;
 }
comment:
START set the aspect j type pattern to match . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public string field name ( ) {
 return this . field name ;
 }
comment:
START returns the field name used in this query . END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public void put ( string key , input stream stream , string name , string content type , boolean auto close ) {
 if ( key != null && stream != null ) {
 stream params . put ( key , stream wrapper . new instance ( stream , name , content type , auto close ) ) ;
 }
 }
comment:
START adds an input stream to the request . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public int find position for tab with id ( @ id res int tab id ) {
 return get tab with id ( tab id ) . get index in tab container ( ) ;
 }
comment:
START find the tabs ' position in the container by id . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static integer get current transaction isolation level ( ) {
 return current transaction isolation level . get ( ) ;
 }
comment:
START return the isolation level for the current transaction , if any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK to the UNK .

code:
public static dwo artifacts collector direct collector ( cc compilation outputs compilation outputs ) {
 return new dwo artifacts collector ( compilation outputs , immutable list . < transitive info collection > of ( ) ) ;
 }
comment:
START returns a new instance that collects direct outputs only . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
private drawable get drawable ( uri uri ) {
 try {
 string scheme = uri . get scheme ( ) ;
 if ( content resolver . scheme_ android_ e . equals ( scheme ) ) {
 try {
 return get the drawable ( uri ) ;
 }
 catch ( resources . not found exception ex ) {
 throw new file not found exception ( String + uri ) ;
 }
 }
 else {
 input stream stream = mprovider context . get content resolver ( ) . open input stream ( uri ) ;
 if ( stream == null ) {
 throw new file not found exception ( String + uri ) ;
 }
 try {
 return drawable . create from stream ( stream , null ) ;
 }
 finally {
 try {
 stream . close ( ) ;
 }
 catch ( exception ex ) {
 log . e ( log_ g , String + uri , ex ) ;
 }
 }
 }
 }
 catch ( file not found exception UNK ) {
 log . w ( log_ g , String + uri + String + UNK . get message ( ) ) ;
 return null ;
 }
 }
comment:
START gets a drawable by uri , without using the cache . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static accessibility event obtain ( ) {
 accessibility event event = pool . acquire ( ) ;
 return ( event != null ) ? event : new accessibility event ( ) ;
 }
comment:
START returns a cached instance if such is available or a new one is instantiated . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .

code:
@ override public boolean is empty ( ) {
 return size <= DecimalInteger ;
 }
comment:
START return true if the array map contains no items . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in .

code:
private boolean jpeg type ( surface s ) throws legacy exception utils . buffer queue abandoned exception {
 return legacy camera device . contains surface id ( s , UNK surface ids ) ;
 }
comment:
START returns true if the given surface requires jpeg buffers . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return UNK o ;
 case DecimalInteger : return component_ d ;
 case DecimalInteger : return t ;
 case DecimalInteger : return t ;
 case DecimalInteger : return UNK s ;
 case DecimalInteger : return s ;
 default : return null ;
 }
 }
comment:
START find the _ fields constant that matches field id , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public interceptor registration add path patterns ( string ... patterns ) {
 this . include patterns . add all ( arrays . as list ( patterns ) ) ;
 return this ;
 }
comment:
START add url patterns to which the registered interceptor should apply to . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private static char sequence UNK ( char sequence a , char sequence b , char sequence c ) {
 return a == null ? ( b == null ? c : b ) : a ;
 }
comment:
START returns a if not null , else return b if not null , else return UNK END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
protected method find setter for property ( string property name , class < ? > clazz , boolean must be static ) {
 return find method for property ( get property method suffixes ( property name ) , String , clazz , must be static , DecimalInteger , any_ s ) ;
 }
comment:
START find a setter method for the specified property . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK UNK

code:
public dash path effect get dash path effect ( ) {
 return UNK path effect ;
 }
comment:
START returns the dash path effect that is set for this limit line @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void add gesture ( string entry name , gesture gesture ) {
 if ( entry name == null || entry name . length ( ) == DecimalInteger ) {
 return ;
 }
 array list < gesture > gestures = mnamed gestures . get ( entry name ) ;
 if ( gestures == null ) {
 gestures = new array list < gesture > ( ) ;
 mnamed gestures . put ( entry name , gestures ) ;
 }
 gestures . add ( gesture ) ;
 classifier . add instance ( instance . create instance ( msequence type , UNK style , gesture , entry name ) ) ;
 changed = true ;
 }
comment:
START add a gesture for the entry @param entry name entry name @param gesture END
BLUE1:0.285714285714
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public resource chain registration add transformer ( resource transformer transformer ) {
 assert . not null ( transformer , String ) ;
 this . transformers . add ( transformer ) ;
 if ( transformer instanceof UNK link resource transformer ) {
 this . has UNK link transformer = true ;
 }
 return this ;
 }
comment:
START add a resource transformer to the chain . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public int get key at ( int i ) {
 return table [ i ] ;
 }
comment:
START get the key at the given index in our table . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set stroke join ( join join ) {
 nset stroke join ( mnative paint , join . native int ) ;
 }
comment:
START set the paint 's join . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public output stream get exif writer stream ( string exif out file name ) throws file not found exception {
 if ( exif out file name == null ) {
 throw new illegal argument exception ( null_ UNK g ) ;
 }
 output stream out = null ;
 try {
 out = ( output stream ) new file output stream ( exif out file name ) ;
 }
 catch ( file not found exception e ) {
 close UNK ( out ) ;
 throw e ;
 }
 return get exif writer stream ( out ) ;
 }
comment:
START returns an output stream object that writes to a file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
artifact get launcher ( final rule context rule context , final java common common , deploy archive builder deploy archive builder , runfiles . builder runfiles builder , list < string > jvm flags , java target attributes . builder attributes builder , boolean should strip ) throws interrupted exception ;
comment:
START get the launcher artifact for a java binary , creating the necessary actions for it . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
boolean is user initiated UNK ( ) {
 return device . is UNK initiated locally ( ) ;
 }
comment:
START return true if user initiated UNK on this device . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
START find the _ fields constant that matches name , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
cache builder < object , object > to cache builder ( ) {
 cache builder < object , object > builder = cache builder . new builder ( ) ;
 if ( initial capacity != null ) {
 builder . initial capacity ( initial capacity ) ;
 }
 if ( maximum size != null ) {
 builder . maximum size ( maximum size ) ;
 }
 if ( maximum weight != null ) {
 builder . maximum weight ( maximum weight ) ;
 }
 if ( concurrency level != null ) {
 builder . concurrency level ( concurrency level ) ;
 }
 if ( key strength != null ) {
 switch ( key strength ) {
 case k : builder . weak keys ( ) ;
 break ;
 default : throw new assertion error ( ) ;
 }
 }
 if ( value strength != null ) {
 switch ( value strength ) {
 case t : builder . soft values ( ) ;
 break ;
 case k : builder . weak values ( ) ;
 break ;
 default : throw new assertion error ( ) ;
 }
 }
 if ( record stats != null && record stats ) {
 builder . record stats ( ) ;
 }
 if ( write expiration time unit != null ) {
 builder . expire after write ( write expiration duration , write expiration time unit ) ;
 }
 if ( access expiration time unit != null ) {
 builder . expire after access ( access expiration duration , access expiration time unit ) ;
 }
 if ( refresh time unit != null ) {
 builder . refresh after write ( refresh duration , refresh time unit ) ;
 }
 return builder ;
 }
comment:
START returns a cache builder configured according to this instance 's specification . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .

code:
public long runtime ( time unit unit ) {
 return unit . convert ( get nanos ( ) , time unit . s ) ;
 }
comment:
START gets the runtime for the test . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static int get packed position group ( long packed position ) {
 if ( packed position == packed_ position_ value_ l ) return - DecimalInteger ;
 return ( int ) ( ( packed position & packed_ position_ mask_ p ) > > packed_ position_ shift_ p ) ;
 }
comment:
START gets the group position from a packed position . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
@ override public string get first ( string header name ) {
 list < string > header values = headers . get ( header name ) ;
 return header values != null ? header values . get ( DecimalInteger ) : null ;
 }
comment:
START return the first header value for the given header name , if any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static stats of ( iterator < ? extends number > values ) {
 stats accumulator accumulator = new stats accumulator ( ) ;
 accumulator . add all ( values ) ;
 return accumulator . snapshot ( ) ;
 }
comment:
START returns statistics over a dataset containing the given values . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
private boolean needs new session ( ) {
 if ( session credentials == null ) {
 return true ;
 }
 long time remaining = session credentials expiration . get time ( ) - system . current time millis ( ) ;
 return time remaining < UNK time_ s ;
 }
comment:
START returns true if a new UNK session needs to be started . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set native header ( string name , string value ) {
 assert . state ( is mutable ( ) , String ) ;
 map < string , list < string > > map = get native headers ( ) ;
 if ( value == null ) {
 if ( map != null && map . get ( name ) != null ) {
 set modified ( true ) ;
 map . remove ( name ) ;
 }
 return ;
 }
 if ( map == null ) {
 map = new linked multi value map < > ( DecimalInteger ) ;
 set header ( native_ s , map ) ;
 }
 list < string > values = new linked list < > ( ) ;
 values . add ( value ) ;
 if ( ! object utils . null safe equals ( values , get header ( name ) ) ) {
 set modified ( true ) ;
 map . put ( name , values ) ;
 }
 }
comment:
START set the specified native header value replacing existing values . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public json content < object > from ( byte [ ] source ) {
 verify ( ) ;
 return get json content ( this . loader . get json ( source ) ) ;
 }
comment:
START create json content from the specified json bytes . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get config display width ( int full width , int full height , int rotation , int ui mode ) ;
comment:
START return the available screen width that we should report for the configuration . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
protected void UNK connection ( http connection con ) throws exception {
 con . set request method ( String ) ;
 }
comment:
START sets request method `` head '' by default . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public nested set builder < library to link > get libraries ( ) {
 return libraries ;
 }
comment:
START returns linker inputs that are libraries . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected field find field ( string name , class < ? > clazz , boolean must be static ) {
 field [ ] fields = clazz . get fields ( ) ;
 for ( field field : fields ) {
 if ( field . get name ( ) . equals ( name ) && ( ! must be static || modifier . is static ( field . get modifiers ( ) ) ) ) {
 return field ;
 }
 }
 if ( clazz . get superclass ( ) != null ) {
 field field = find field ( name , clazz . get superclass ( ) , must be static ) ;
 if ( field != null ) {
 return field ;
 }
 }
 for ( class < ? > implemented interface : clazz . get interfaces ( ) ) {
 field field = find field ( name , implemented interface , must be static ) ;
 if ( field != null ) {
 return field ;
 }
 }
 return null ;
 }
comment:
START find a field of a certain name on a specified class . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public ui object get visible object by id ( string id ) {
 ui object ui object = device . find object ( new ui selector ( ) . resource id ( id ) ) ;
 assert true ( String + id + String , ui object . exists ( ) ) ;
 return ui object ;
 }
comment:
START gets an object which is guaranteed to be present in the current ui . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
void add task ( task t ) {
 if ( ! queue . contains ( t ) ) {
 queue . add ( t ) ;
 }
 synchronized ( this ) {
 notify all ( ) ;
 }
 }
comment:
START adds a new task to the load queue END
BLUE1:0.285714285714
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public long get value ( int key , int index ) {
 assert UNK ( ) ;
 try {
 final long [ ] array = parent . longs . get ( get array from key ( key ) ) ;
 return array [ get index from key ( key ) + index ] ;
 }
 catch ( index out of bounds exception ex ) {
 log or throw ( String + integer . to hex string ( key ) + String + index + String + dump internal state ( ) , ex ) ;
 return DecimalInteger ;
 }
 }
comment:
START get the value for the given key and offset from that key . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public string get default destination name ( ) {
 return ( this . default destination instanceof string ? ( string ) this . default destination : null ) ;
 }
comment:
START return the destination name to be used on send/receive operations that do not have a destination parameter . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean is pattern UNK chosen ( int user id ) {
 return get boolean ( pattern_ UNK UNK y , false , user id ) ;
 }
comment:
START return true if the user has ever chosen a pattern . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public static factory of ( path asset root ) {
 return new factory ( preconditions . check not null ( asset root ) ) ;
 }
comment:
START creates a new factory with the asset directory that contains assets . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ override public void set document ( final int doc ) {
 if ( lookup != null ) {
 lookup . set document ( doc ) ;
 }
 }
comment:
START sets the current document . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ main thread public print job id get id ( ) {
 print service . throw if not called on main thread ( ) ;
 return mcached info . get id ( ) ;
 }
comment:
START gets the unique print job id . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set on key event result ( service service , boolean handled , int sequence ) {
 synchronized ( lock ) {
 pending key event pending event = remove event from list locked ( mpending events map . get ( service ) , sequence ) ;
 if ( pending event != null ) {
 if ( handled && ! pending event . handled ) {
 pending event . handled = handled ;
 final long identity = binder . clear calling identity ( ) ;
 try {
 mpower manager . user activity ( pending event . event . get event time ( ) , power manager . user_ activity_ event_ y , DecimalInteger ) ;
 }
 finally {
 binder . restore calling identity ( identity ) ;
 }
 }
 remove reference to pending event locked ( pending event ) ;
 }
 }
 }
comment:
START set the result from on key event from one service . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public static string get google api key ( context context ) {
 int resource id = get google api key resource id ( context ) ;
 return resource id != DecimalInteger ? context . get string ( resource id ) : String ;
 }
comment:
START get the google api key if available . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public int get timer count ( int key ) {
 final int index = get index ( mtimer keys , key ) ;
 if ( index < DecimalInteger ) {
 throw new index out of bounds exception ( String + mdata type + String + key ) ;
 }
 return mtimer counts [ index ] ;
 }
comment:
START get the count for the timer for the given key . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public static char [ ] get date format order ( context context ) {
 return u . get date format order ( get date format string ( ) ) ;
 }
comment:
START gets the current date format stored as a char array . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public string get context path ( ) {
 return this . context path ;
 }
comment:
START returns the context path for the embedded servlet container . END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public static parcel file descriptor from socket ( socket socket ) {
 file descriptor fd = socket . get file UNK ( ) ;
 return fd != null ? new parcel file descriptor ( fd ) : null ;
 }
comment:
START create a new parcel file descriptor from the specified socket . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public list < query builder > filter ( ) {
 return this . filter clauses ;
 }
comment:
START gets the queries that <b> must </b> appear in the matching documents but do n't contribute to scoring END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
return the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public date histogram aggregation builder order ( histogram . order order ) {
 if ( order == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 this . order = ( internal order ) order ;
 return this ;
 }
comment:
START set a new order on this builder and return the builder so that calls can be chained . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get max exposure compensation ( ) {
 return get int ( key_ max_ exposure_ n , DecimalInteger ) ;
 }
comment:
START gets the maximum exposure compensation index . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
protected string get download started file path ( ) {
 string path = environment . get external storage directory ( ) . get path ( ) ;
 return path + file . separator char + UNK UNK g ;
 }
comment:
START gets the path to the file that flags that a download has started . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static void set UNK enabled ( boolean enabled ) {
 native set UNK enabled ( enabled ) ;
 cache enabled tags ( ) ;
 }
comment:
START set whether UNK is enabled in this process . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
protected abstract table < string , integer , character > create ( object ... data ) ;
comment:
START creates a table with the specified data . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
public static < t > replay subject < t > create with time and size ( long time , time unit unit , int size , final scheduler scheduler ) {
 replay buffer < t > buffer = new replay size and time bound buffer < t > ( size , unit . to millis ( time ) , scheduler ) ;
 replay state < t > state = new replay state < t > ( buffer ) ;
 return new replay subject < t > ( state ) ;
 }
comment:
START creates a time and UNK replay subject . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK UNK .

code:
@ service thread only int add logical address ( int new logical address ) {
 assert run on service thread ( ) ;
 if ( hdmi utils . is valid address ( new logical address ) ) {
 return native add logical address ( mnative ptr , new logical address ) ;
 }
 else {
 return - DecimalInteger ;
 }
 }
comment:
START add a new logical address to the device . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
protected object get session bean instance ( ) throws naming exception , invocation target exception {
 if ( this . cache session bean ) {
 synchronized ( this . bean instance monitor ) {
 if ( this . bean instance == null ) {
 this . bean instance = new session bean instance ( ) ;
 }
 return this . bean instance ;
 }
 }
 else {
 return new session bean instance ( ) ;
 }
 }
comment:
START return an ejb component instance to delegate the call to . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
boolean set ( long index ) {
 if ( ! get ( index ) ) {
 data [ ( int ) ( index > > > DecimalInteger ) ] |= ( DecimalInteger << index ) ;
 bit count ++ ;
 return true ;
 }
 return false ;
 }
comment:
START returns true if the bit changed value . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public final iterator < string > types iterator ( ) {
 return mdata types != null ? mdata types . iterator ( ) : null ;
 }
comment:
START return an iterator over the filter 's data types . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set connection spec ( connection spec connection spec ) {
 this . connection spec = connection spec ;
 }
comment:
START set the connection spec that this adapter should use for retrieving connections . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static string get short name ( class < ? > clazz ) {
 return get short name ( get qualified name ( clazz ) ) ;
 }
comment:
START get the class name without the qualified package name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public boolean add stacked link ( link properties link ) {
 if ( link != null && link . get interface name ( ) != null ) {
 mstacked links . put ( link . get interface name ( ) , link ) ;
 return true ;
 }
 return false ;
 }
comment:
START adds a stacked link . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public set < ? > get stop words ( ) {
 return stop words ;
 }
comment:
START get the current stop words being used . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that UNK UNK .
returns the list of UNK that UNK UNK the UNK .

code:
public int get permission flags ( string name , int user id ) {
 permission state install perm state = get install permission state ( name ) ;
 if ( install perm state != null ) {
 return install perm state . get flags ( ) ;
 }
 permission state runtime perm state = get runtime permission state ( name , user id ) ;
 if ( runtime perm state != null ) {
 return runtime perm state . get flags ( ) ;
 }
 return DecimalInteger ;
 }
comment:
START gets the flags for a permission regardless if it is install or runtime permission . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get rate limit reset time ( ) {
 try {
 return service . get rate limit reset time ( context . get package name ( ) , inject my user id ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START return when the rate limit count will be reset next time , in milliseconds since the epoch . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public output stream write ( boolean append ) {
 if ( type == file type . classpath ) throw new gdx runtime exception ( String + file ) ;
 if ( type == file type . internal ) throw new gdx runtime exception ( String + file ) ;
 parent ( ) . mkdirs ( ) ;
 try {
 return new file output stream ( file ( ) , append ) ;
 }
 catch ( exception ex ) {
 if ( file ( ) . is directory ( ) ) throw new gdx runtime exception ( String + file + String + type + String , ex ) ;
 throw new gdx runtime exception ( String + file + String + type + String , ex ) ;
 }
 }
comment:
START returns a stream for writing to this file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
@ override public void visit end ( ) {
 if ( compute d && ! has d ) {
 try {
 add d ( compute d ( ) ) ;
 }
 catch ( throwable e ) {
 throw new runtime exception ( String + name , e ) ;
 }
 }
 super . visit end ( ) ;
 }
comment:
START add the UNK if class does n't have one END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
@ nullable public < t extends fragment > t get fragment ( class < t > fragment , configuration transition config ) {
 return get fragment ( fragment , fragment . get simple name ( ) , String , config ) ;
 }
comment:
START returns a configuration fragment for this this target . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set width ( float width ) {
 this . dimensions . x = width ;
 updated = false ;
 }
comment:
START sets the width in world units @param width width in world units END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
protected void attach base context ( context base ) {
 if ( base != null ) {
 throw new illegal state exception ( String ) ;
 }
 base = base ;
 }
comment:
START set the base context for this context wrapper . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public content negotiation configurer default content type ( media type default content type ) {
 this . factory . set default content type ( default content type ) ;
 return this ;
 }
comment:
START set the default content type to use when no content type is requested . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set mtu ( int mtu ) {
 mtu = mtu ;
 }
comment:
START sets the maximum transmission unit size to use on this link . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void invalidate auth token ( final string account type , final string auth token ) {
 if ( account type == null ) throw new illegal argument exception ( String ) ;
 try {
 if ( auth token != null ) {
 service . invalidate auth token ( account type , auth token ) ;
 }
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START removes an auth token from the account manager 's cache . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public boolean is managed profile ( @ non null component name admin ) {
 throw if parent instance ( String ) ;
 try {
 return service . is managed profile ( admin ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START return if this user is a managed profile of another user . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the UNK .

code:
public set < name value expression < string > > get expressions ( ) {
 return new linked hash set < > ( this . expressions ) ;
 }
comment:
START return the contained request parameter expressions . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void add transactional method ( string method name , transaction attribute attr ) {
 if ( logger . is debug enabled ( ) ) {
 logger . debug ( String + method name + String + attr + String ) ;
 }
 this . name map . put ( method name , attr ) ;
 }
comment:
START add an attribute for a transactional method . END
BLUE1:0.285714285714
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the UNK to the UNK .

code:
public void set pipeline ( string pipeline ) {
 this . pipeline = pipeline ;
 }
comment:
START set the ingest pipeline to set on index requests made by this action . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public float get joint speed ( ) {
 return jni get joint speed ( addr ) ;
 }
comment:
START get the current joint angle speed in radians per second . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public static rx java call adapter factory create ( ) {
 return new rx java call adapter factory ( null ) ;
 }
comment:
START returns an instance which creates synchronous observables that do not operate on any scheduler by default . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public collection < string > get failed components ( ) {
 return collections . unmodifiable collection ( failed components ) ;
 }
comment:
START gets the components that cause the conformity check to fail . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ nullable public trigger content uri [ ] get trigger content uris ( ) {
 return trigger content uris ;
 }
comment:
START returns null if there are none required . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final parse context create external value context ( final object external value ) {
 return new filter parse context ( this ) {
 @ override public boolean external value set ( ) {
 return true ;
 }
 @ override public object external value ( ) {
 return external value ;
 }
 }
 ;
 }
comment:
START return a new context that will have the external value set . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
boolean get bool or else ( string property , boolean UNK ) ;
comment:
START gets the boolean associated with property string . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public http client get http client ( ) {
 return this . http client ;
 }
comment:
START get the underlying http client instance . END
BLUE1:0.285714285714
--generate--
return the list of UNK UNK .
return the number of UNK UNK .
return the number of all UNK .
return the number of all UNK in this .
return the number of all UNK in the given .

code:
public promise < t > on error ( consumer < ? super throwable > exception handler ) {
 this . exception handler = exception handler ;
 return this ;
 }
comment:
START set the exception handler on this promise . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
protected abstract processor < data buffer , void > create body processor ( ) ;
comment:
START creates a new processor for UNK to a body chunk . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
public music new music ( file descriptor fd ) {
 if ( sound pool == null ) {
 throw new gdx runtime exception ( String ) ;
 }
 media player media player = new media player ( ) ;
 try {
 media player . set data source ( fd ) ;
 media player . prepare ( ) ;
 android music music = new android music ( this , media player ) ;
 synchronized ( UNK ) {
 UNK . add ( music ) ;
 }
 return music ;
 }
 catch ( exception ex ) {
 throw new gdx runtime exception ( String , ex ) ;
 }
 }
comment:
START creates a new music instance from the provided file descriptor . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static long buffer wrap ( long [ ] array , int start , int len ) {
 if ( array == null ) {
 throw new null pointer exception ( ) ;
 }
 if ( start < DecimalInteger || len < DecimalInteger || ( long ) len + ( long ) start > array . length ) {
 throw new index out of bounds exception ( ) ;
 }
 long buffer buf = buffer factory . new long buffer ( array ) ;
 buf . position = start ;
 buf . limit = start + len ;
 return buf ;
 }
comment:
START creates a new long buffer by wrapping the given long array . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
protected integer find order ( object obj ) {
 return ( obj instanceof ordered ? ( ( ordered ) obj ) . get order ( ) : null ) ;
 }
comment:
START find an order value indicated by the given object . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
action future < get mappings response > get mappings ( get mappings request request ) ;
comment:
START get the complete mappings of one or more types END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public void add param ( string name , string value ) {
 if ( name == null ) {
 throw new null pointer exception ( String ) ;
 }
 params . add ( new param ( name , value ) ) ;
 }
comment:
START adds a parameter with the specified name and value to this encoder . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
static user store get user store ( ) {
 return user store ;
 }
comment:
START return the currently configured user store . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK to the UNK .

code:
public display get display ( ) {
 return mattach info != null ? mattach info . display : null ;
 }
comment:
START gets the logical display to which the view 's window has been attached . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void prepare ( ) throws remote exception {
 check service ( ) ;
 if ( this . service name == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( this . client socket factory instanceof rmiserver socket factory ) {
 this . server socket factory = ( rmiserver socket factory ) this . client socket factory ;
 }
 if ( ( this . client socket factory != null && this . server socket factory == null ) || ( this . client socket factory == null && this . server socket factory != null ) ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( this . registry client socket factory instanceof rmiserver socket factory ) {
 this . registry server socket factory = ( rmiserver socket factory ) this . registry client socket factory ;
 }
 if ( this . registry client socket factory == null && this . registry server socket factory != null ) {
 throw new illegal argument exception ( String ) ;
 }
 this . created registry = false ;
 if ( this . registry == null ) {
 this . registry = get registry ( this . registry host , this . registry port , this . registry client socket factory , this . registry server socket factory ) ;
 this . created registry = true ;
 }
 this . exported object = get object to export ( ) ;
 if ( logger . is info enabled ( ) ) {
 logger . info ( String + this . service name + String + this . registry ) ;
 }
 if ( this . client socket factory != null ) {
 unicast remote object . export object ( this . exported object , this . service port , this . client socket factory , this . server socket factory ) ;
 }
 else {
 unicast remote object . export object ( this . exported object , this . service port ) ;
 }
 try {
 if ( this . replace existing binding ) {
 this . registry . UNK ( this . service name , this . exported object ) ;
 }
 else {
 this . registry . bind ( this . service name , this . exported object ) ;
 }
 }
 catch ( already bound exception ex ) {
 UNK object UNK ( ) ;
 throw new illegal state exception ( String + this . service name + String + ex . to string ( ) ) ;
 }
 catch ( remote exception ex ) {
 UNK object UNK ( ) ;
 throw ex ;
 }
 }
comment:
START creates an rmi registry on the specified port if none exists . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .
set the UNK for the given UNK .

code:
public display adjustments get display adjustments ( ) {
 return mdisplay adjustments ;
 }
comment:
START gets the compatibility info used by this display instance . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public list < integer > get durations ( ) {
 return durations ;
 }
comment:
START gets the frame durations . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public dialog button ( string text ) {
 return button ( text , null ) ;
 }
comment:
START adds a text button to the button table . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ nullable public page range [ ] get pages ( ) {
 return mpage ranges ;
 }
comment:
START gets the included pages . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public uri get default root ( ) {
 return shared . should show documents root ( this , get intent ( ) ) ? documents contract . build home uri ( ) : documents contract . build root uri ( String , String ) ;
 }
comment:
START get the default directory to be presented after starting the activity . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public synchronized void mark ( int UNK ) {
 UNK = math . max ( UNK , UNK ) ;
 UNK = pos ;
 }
comment:
START sets a mark position in this stream . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public boolean wps UNK supported ( ) {
 return ( wps config methods supported & UNK config_ d ) != DecimalInteger ;
 }
comment:
START returns true if UNK UNK configuration is supported END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public static quad from transformed rect ( rect f rect , matrix matrix ) {
 return quad . from rect ( rect ) . transformed ( matrix ) ;
 }
comment:
START return a quad that represents the specified transformed rectangle . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public boolean was failure ( ) {
 return ( this . failure cause != null ) ;
 }
comment:
START return whether the request failed . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public builder encoded query ( string query ) {
 return query ( part . from encoded ( query ) ) ;
 }
comment:
START sets the previously encoded query . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
final test suite create UNK suite ( final feature specific test suite builder < ? , ? extends one size test container generator < map < k , v > , entry < k , v > > > parent builder , final bound from , final bound to ) {
 final test sorted map generator < k , v > delegate = ( test sorted map generator < k , v > ) parent builder . get subject generator ( ) . get inner generator ( ) ;
 list < feature < ? > > features = new array list < feature < ? > > ( ) ;
 features . add ( no UNK . p ) ;
 features . add all ( parent builder . get features ( ) ) ;
 return new builder using ( delegate , to , from ) . named ( parent builder . get name ( ) + String + from + String + to ) . with features ( features ) . suppressing ( parent builder . get suppressed tests ( ) ) . create test suite ( ) ;
 }
comment:
START creates a suite whose map has some elements filtered out of view . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void add preferred locale ( locale locale ) {
 assert . not null ( locale , String ) ;
 this . locales . add ( DecimalInteger , locale ) ;
 }
comment:
START add a new preferred locale , before any existing locales . END
BLUE1:0.285714285714
--generate--
add the UNK to the UNK .
add the UNK to the given UNK .
sets the UNK for the given UNK .
add the UNK to the UNK to the UNK .
add the UNK to the UNK

code:
public collection < string > get excluded rules ( ) {
 return collections . unmodifiable collection ( excluded conformity rules ) ;
 }
comment:
START gets names of all excluded conformity rules for this cluster . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public fixture get fixture b ( ) {
 return m_fixture b ;
 }
comment:
START get the second fixture in this contact . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public e remove return old ( int key ) {
 int i = container helpers . binary search ( keys , size , key ) ;
 if ( i >= DecimalInteger ) {
 if ( values [ i ] != d ) {
 final e old = ( e ) values [ i ] ;
 values [ i ] = d ;
 garbage = true ;
 return old ;
 }
 }
 return null ;
 }
comment:
START removes the mapping from the specified key , if there was any , returning the old value . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set message codes resolver ( message codes resolver message codes resolver ) {
 assert . not null ( message codes resolver , String ) ;
 this . message codes resolver = message codes resolver ;
 }
comment:
START set the strategy to use for resolving errors into message codes . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public object get header value ( string name ) {
 header value holder header = header value holder . get by name ( this . headers , name ) ;
 return ( header != null ? header . get value ( ) : null ) ;
 }
comment:
START return the primary value for the given header , if any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ suppress warnings ( String ) @ suppress forbidden ( reason = String ) protected boolean stop node threads ( string node , set < thread > node threads ) {
 thread [ ] all threads = null ;
 while ( all threads == null ) {
 all threads = new thread [ thread . active count ( ) ] ;
 if ( thread . UNK ( all threads ) > all threads . length ) {
 all threads = null ;
 }
 }
 boolean live threads found = false ;
 final string node thread name part = String + node + String ;
 for ( thread thread : all threads ) {
 if ( thread == null ) {
 continue ;
 }
 string name = thread . get name ( ) ;
 if ( name . contains ( node thread name part ) ) {
 if ( thread . is alive ( ) && node threads . add ( thread ) ) {
 live threads found = true ;
 logger . trace ( String , name ) ;
 thread . UNK ( ) ;
 boolean safe = true ;
 safe : for ( stack trace element stack element : thread . get stack trace ( ) ) {
 string class name = stack element . get class name ( ) ;
 for ( pattern unsafe pattern : get unsafe classes ( ) ) {
 if ( unsafe pattern . matcher ( class name ) . find ( ) ) {
 safe = false ;
 break safe ;
 }
 }
 }
 if ( ! safe ) {
 logger . trace ( String , name ) ;
 thread . resume ( ) ;
 node threads . remove ( thread ) ;
 }
 }
 }
 }
 return live threads found ;
 }
comment:
START returns true if some live threads were found . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ override public void set resource loader ( resource loader resource loader ) {
 this . resource loader = resource loader ;
 }
comment:
START set the resource loader . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public map < executor details , worker slot > get executor to slot ( ) ;
comment:
START get the executor > slot map . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 default : return null ;
 }
 }
comment:
START find the _ fields constant that matches field id , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .

code:
public int get channel count ( ) {
 final int channel index count = integer . bit count ( get channel index mask ( ) ) ;
 int channel count = channel count from out channel mask ( get channel mask ( ) ) ;
 if ( channel count == DecimalInteger ) {
 channel count = channel index count ;
 }
 else if ( channel count != channel index count && channel index count != DecimalInteger ) {
 channel count = DecimalInteger ;
 }
 return channel count ;
 }
comment:
START return the channel count . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public file descriptor get file descriptor ( ) {
 return impl . get file descriptor ( ) ;
 }
comment:
START returns file descriptor or null if not yet UNK closed @return fd or null END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set wrapper ( wrapper gl wrapper ) {
 wrapper = gl wrapper ;
 }
comment:
START set the gl wrapper . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public intent put extra ( string name , char sequence [ ] value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put char sequence array ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set toolchain ( string toolchain ) {
 toolchain = toolchain ;
 }
comment:
START set tool chain string @param toolchain description of the tool chain END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public file get dir ( ) {
 if ( this . dir == null ) {
 synchronized ( this ) {
 byte [ ] hash = generate hash ( this . source class ) ;
 this . dir = new file ( get temp directory ( ) , to hex string ( hash ) ) ;
 this . dir . mkdirs ( ) ;
 assert . state ( this . dir . exists ( ) , String + this . dir ) ;
 }
 }
 return this . dir ;
 }
comment:
START return the directory to be used for application specific temp files . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public set < media type expression > get expressions ( ) {
 return new linked hash set < > ( this . expressions ) ;
 }
comment:
START return the contained media type expressions . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ override public class < ? > get declaring class ( ) {
 return method . get declaring class ( ) ;
 }
comment:
START returns the class where the method is actually declared END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ deprecated public inner hit builder set field names ( list < string > field names ) {
 return set stored field names ( field names ) ;
 }
comment:
START sets the stored fields to load and return . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private drawable get activity icon with cache ( component name component ) {
 string component icon key = component . flatten to short string ( ) ;
 if ( moutside drawables cache . contains key ( component icon key ) ) {
 drawable . constant state cached = moutside drawables cache . get ( component icon key ) ;
 return cached == null ? null : cached . new drawable ( mprovider context . get resources ( ) ) ;
 }
 drawable drawable = get activity icon ( component ) ;
 drawable . constant state to cache = drawable == null ? null : drawable . get constant state ( ) ;
 moutside drawables cache . put ( component icon key , to cache ) ;
 return drawable ;
 }
comment:
START gets the activity or application icon for an activity . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
protected abstract tree path scanner < ? , ? > create tree path scanner ( compilation unit tree root ) ;
comment:
START create a tree path scanner at the given root . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to the given UNK .
returns the list of UNK UNK UNK

code:
public boolean has primary clip ( ) {
 try {
 return get service ( ) . has primary clip ( context . get op package name ( ) ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START returns true if there is currently a primary clip on the clipboard . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether the UNK is UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the UNK .

code:
public int get min decode interval ms ( ) {
 return mmin decode interval ms ;
 }
comment:
START gets the minimum decode interval . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public boolean get save temps ( ) {
 return cpp options . save temps ;
 }
comment:
START returns whether temporary outputs from gcc will be saved . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
public integer get cookie max age ( ) {
 return this . cookie max age ;
 }
comment:
START return the maximum age for cookies created by this generator . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public static library to link precompiled library to link ( artifact artifact , artifact category category ) {
 return new compound library to link ( artifact , category , cc linking outputs . library identifier of ( artifact ) , null , null ) ;
 }
comment:
START creates an input library for which we do not know what objects files it consists of . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
private static int get default voice sub id ( ) {
 return subscription manager . get default voice subscription id ( ) ;
 }
comment:
START returns default voice subscription id . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static optional < file > find ( @ non null file base , @ non null final string name ) {
 check argument ( base . is directory ( ) , String ) ;
 return files . file tree traverser ( ) . pre order traversal ( base ) . filter ( predicates . compose ( predicates . equal to ( name ) , get_ e ) ) . last ( ) ;
 }
comment:
START find a file with the specified name in a given directory . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public byte [ ] UNK ( ) {
 try {
 return bytes reference . to bytes ( UNK factory . UNK ( new bytes array ( bytes ) ) ) ;
 }
 catch ( exception e ) {
 throw new illegal state exception ( String , e ) ;
 }
 }
comment:
START return the uncompressed bytes . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public explain request builder set query ( query builder query ) {
 request . query ( query ) ;
 return this ;
 }
comment:
START sets the query to get a score explanation for . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void clear all ( ) {
 final list < encoded image > old ;
 synchronized ( this ) {
 old = new array list < > ( map . values ( ) ) ;
 map . clear ( ) ;
 }
 for ( int i = DecimalInteger ;
 i < old . size ( ) ;
 i ++ ) {
 encoded image encoded image = old . get ( i ) ;
 if ( encoded image != null ) {
 encoded image . close ( ) ;
 }
 }
 }
comment:
START removes all items from the staging area . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
l create l ( ) {
 l gl = megl context . get l ( ) ;
 UNK view i18 view = UNK view weak ref . get ( ) ;
 if ( view != null ) {
 if ( view . wrapper != null ) {
 gl = view . wrapper . wrap ( gl ) ;
 }
 if ( ( view . mdebug flags & ( debug_ check_ gl_ r | debug_ log_ gl_ s ) ) != DecimalInteger ) {
 int config flags = DecimalInteger ;
 writer log = null ;
 if ( ( view . mdebug flags & debug_ check_ gl_ r ) != DecimalInteger ) {
 config flags |= UNK helper . config_ check_ gl_ r ;
 }
 if ( ( view . mdebug flags & debug_ log_ gl_ s ) != DecimalInteger ) {
 log = new log writer ( ) ;
 }
 gl = UNK helper . wrap ( gl , config flags , log ) ;
 }
 }
 return gl ;
 }
comment:
START create a gl object for the current egl context . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
void set ( final int type , final string str val1 , final string str val2 , final string str val3 ) {
 this . type = type ;
 this . str val1 = str val1 ;
 this . str val2 = str val2 ;
 this . str val3 = str val3 ;
 switch ( type ) {
 case class writer . f8 : case class writer . r : case class writer . s : case class writer . e : case class writer . type_ l : hash code = 0x7 f & ( type + str val1 . hash code ( ) ) ;
 return ;
 case class writer . name_ e : {
 hash code = 0x7 f & ( type + str val1 . hash code ( ) * str val2 . hash code ( ) ) ;
 return ;
 }
 default : hash code = 0x7 f & ( type + str val1 . hash code ( ) * str val2 . hash code ( ) * str val3 . hash code ( ) ) ;
 }
 }
comment:
START sets this item to an item that do not hold a primitive value . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public accessibility node info get traversal before ( ) {
 enforce sealed ( ) ;
 return get node for accessibility id ( UNK before ) ;
 }
comment:
START gets the node before which this one is visited during traversal . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
protected string get attribute description ( property descriptor property descriptor , string bean key ) {
 return property descriptor . get display name ( ) ;
 }
comment:
START get the description for a particular attribute . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public request get active request ( string name ) {
 synchronized ( mactive requests ) {
 final int n = mactive requests . size ( ) ;
 for ( int i = DecimalInteger ;
 i < n ;
 i ++ ) {
 request req = mactive requests . value at ( i ) ;
 if ( name == req . get name ( ) || ( name != null && name . equals ( req . get name ( ) ) ) ) {
 return req ;
 }
 }
 }
 return null ;
 }
comment:
START return any currently active request that was submitted with the given name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK for the given .

code:
public static key < ? > get key ( type literal < ? > type , member member , annotation [ ] annotations , errors errors ) throws errors exception {
 int num errors before = errors . size ( ) ;
 annotation found = find binding annotation ( errors , member , annotations ) ;
 errors . throw if new errors ( num errors before ) ;
 return found == null ? key . get ( type ) : key . get ( type , found ) ;
 }
comment:
START gets a key for the given type , member and annotations . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean is directory ( ) {
 return preloader . is directory ( file ) ;
 }
comment:
START returns true if this file is a directory . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set country code ( string country , boolean persist ) {
 try {
 service . set country code ( country , persist ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START set the country code . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public v remove at ( int index ) {
 final object old = array [ ( index << DecimalInteger ) + DecimalInteger ] ;
 if ( size <= DecimalInteger ) {
 if ( g ) log . d ( g , String + hashes . length + String ) ;
 free arrays ( hashes , array , size ) ;
 hashes = empty array . t ;
 array = empty array . t ;
 size = DecimalInteger ;
 }
 else {
 if ( hashes . length > ( base_ e * DecimalInteger ) && size < hashes . length / DecimalInteger ) {
 final int n = size > ( base_ e * DecimalInteger ) ? ( size + ( size > > DecimalInteger ) ) : ( base_ e * DecimalInteger ) ;
 if ( g ) log . d ( g , String + hashes . length + String + n ) ;
 final int [ ] ohashes = hashes ;
 final object [ ] oarray = array ;
 alloc arrays ( n ) ;
 size -- ;
 if ( index > DecimalInteger ) {
 if ( g ) log . d ( g , String + index + String ) ;
 system . arraycopy ( ohashes , DecimalInteger , hashes , DecimalInteger , index ) ;
 system . arraycopy ( oarray , DecimalInteger , array , DecimalInteger , index << DecimalInteger ) ;
 }
 if ( index < size ) {
 if ( g ) log . d ( g , String + ( index + DecimalInteger ) + String + size + String + index ) ;
 system . arraycopy ( ohashes , index + DecimalInteger , hashes , index , size - index ) ;
 system . arraycopy ( oarray , ( index + DecimalInteger ) << DecimalInteger , array , index << DecimalInteger , ( size - index ) << DecimalInteger ) ;
 }
 }
 else {
 size -- ;
 if ( index < size ) {
 if ( g ) log . d ( g , String + ( index + DecimalInteger ) + String + size + String + index ) ;
 system . arraycopy ( hashes , index + DecimalInteger , hashes , index , size - index ) ;
 system . arraycopy ( array , ( index + DecimalInteger ) << DecimalInteger , array , index << DecimalInteger , ( size - index ) << DecimalInteger ) ;
 }
 array [ size << DecimalInteger ] = null ;
 array [ ( size << DecimalInteger ) + DecimalInteger ] = null ;
 }
 }
 return ( v ) old ;
 }
comment:
START remove the key/value mapping at the given index . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return g ;
 default : return null ;
 }
 }
comment:
START find the _ fields constant that matches field id , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public final int get flags ( ) {
 return native get flags ( mnative ptr ) ;
 }
comment:
START gets the motion event flags . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public list < motion range > get motion ranges ( ) {
 return UNK ranges ;
 }
comment:
START gets the ranges for all axes supported by the device . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public builder add connection ( type t , script . kernel d from , script . field d to ) {
 node nf = find node ( from ) ;
 if ( nf == null ) {
 throw new rsinvalid state exception ( String ) ;
 }
 node nt = find node ( to . script ) ;
 if ( nt == null ) {
 throw new rsinvalid state exception ( String ) ;
 }
 connect line cl = new connect line ( t , from , to ) ;
 lines . add ( new connect line ( t , from , to ) ) ;
 nf . outputs . add ( cl ) ;
 nt . inputs . add ( cl ) ;
 validate cycle ( nf , nf ) ;
 return this ;
 }
comment:
START adds a connection to the group . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public string to hex string ( ) {
 byte [ ] bytes = this . data . array ( ) ;
 char [ ] hex = new char [ this . data . remaining ( ) * DecimalInteger ] ;
 for ( int i = this . data . position ( ) ;
 i < this . data . remaining ( ) ;
 i ++ ) {
 int b = bytes [ i ] & 0x f ;
 hex [ i * DecimalInteger ] = UNK s [ b > > > DecimalInteger ] ;
 hex [ i * DecimalInteger + DecimalInteger ] = UNK s [ b & 0x0 f ] ;
 }
 return new string ( hex ) ;
 }
comment:
START return the payload as a hexadecimal string . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
private static annotation [ ] get annotations ( test case test ) {
 try {
 method m = test . get class ( ) . get method ( test . get name ( ) ) ;
 return m . get declared annotations ( ) ;
 }
 catch ( security exception e ) {
 }
 catch ( no such method exception e ) {
 }
 return new annotation [ DecimalInteger ] ;
 }
comment:
START get the annotations associated with given test case . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public string get jndi name ( ) {
 return this . jndi name ;
 }
comment:
START return the jndi name to look up . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set password ( string password ) {
 this . password = password ;
 }
comment:
START set the password that this adapter should use for retrieving connections . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK

code:
protected blocking queue < runnable > create queue ( int queue capacity ) {
 if ( queue capacity > DecimalInteger ) {
 return new linked blocking queue < > ( queue capacity ) ;
 }
 else {
 return new synchronous queue < > ( ) ;
 }
 }
comment:
START create the blocking queue to use for the thread pool executor . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public double get correlation ( string field x , string field y ) {
 if ( field x . equals ( field y ) ) {
 return DecimalFloatingPoint ;
 }
 return get val from upper UNK matrix ( correlation , field x , field y ) ;
 }
comment:
START return the UNK coefficient between two fields END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public static string get title ( url device url device ) {
 try {
 return url device . get extra string ( UNK y ) ;
 }
 catch ( exception e ) {
 throw new runtime exception ( String + url device . get id ( ) , e ) ;
 }
 }
comment:
START gets the url device title . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK

code:
public int [ ] get available optical UNK checked ( ) {
 key < int [ ] > key = camera characteristics . lens_ info_ available_ UNK n ;
 int [ ] modes = get value from key non null ( key ) ;
 if ( modes == null ) {
 return new int [ DecimalInteger ] ;
 }
 check array values in range ( key , modes , camera metadata . lens_ UNK stabilization_ mode_ f , camera metadata . lens_ UNK stabilization_ mode_ n ) ;
 return modes ;
 }
comment:
START get available optical stabilization and do the sanity check . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
public static void set linger ( final http params params , int value ) {
 if ( params == null ) {
 throw new illegal argument exception ( String ) ;
 }
 params . set int parameter ( core connection names . UNK r , value ) ;
 }
comment:
START returns UNK timeout . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public pres res instance info get instance info ( ) {
 return minstance info ;
 }
comment:
START gets the presence service resource instance information . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
v get live value ( e entry ) {
 if ( entry . get key ( ) == null ) {
 return null ;
 }
 v value = entry . get value ( ) ;
 if ( value == null ) {
 return null ;
 }
 return value ;
 }
comment:
START gets the value from an entry . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static sslsocket factory get fixed socket factory ( ) {
 sslsocket factory socket factory ;
 try {
 socket factory = new my sslsocket factory ( get keystore ( ) ) ;
 socket factory . set hostname verifier ( sslsocket factory . allow_ all_ UNK r ) ;
 }
 catch ( throwable t ) {
 t . print stack trace ( ) ;
 socket factory = sslsocket factory . get socket factory ( ) ;
 }
 return socket factory ;
 }
comment:
START returns a ssl socket factory which trusts all certificates @return UNK factory END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public recents task load plan create load plan ( context context ) {
 recents task load plan plan = new recents task load plan ( context ) ;
 return plan ;
 }
comment:
START creates a new plan for loading the recent tasks . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static socket factory get default ( int handshake timeout millis ) {
 return new UNK socket factory ( handshake timeout millis , null , true ) ;
 }
comment:
START returns a new socket factory instance with an optional handshake timeout . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static notification visibility obtain ( string key , int rank , boolean visible ) {
 notification visibility vo = obtain ( ) ;
 vo . key = key ;
 vo . rank = rank ;
 vo . visible = visible ;
 return vo ;
 }
comment:
START return a new notification visibility instance from the global pool . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public static void create table ( database db , boolean if not exists ) {
 string constraint = if not exists ? String : String ;
 db . exec l ( String + constraint + String + String + String ) ;
 }
comment:
START creates the underlying database table . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public int get pointer count ( ) {
 return detector . get pointer count ( ) ;
 }
comment:
START gets the number of pointers in the current gesture END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
int get supported features ( int port id ) {
 return no_ supported_ s ;
 }
comment:
START get the bit flags describing the features supported by the system . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ option ( long name = String , arg name = String ) @ description ( String + String ) @ default value ( String ) public void set quorum ( int quorum ) {
 this . quorum = quorum ;
 }
comment:
START sets the quorum option . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ suppress warnings ( String ) public static < e > immutable multiset < e > of ( e element ) {
 return copy from elements ( element ) ;
 }
comment:
START returns an immutable multiset containing a single element . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public int get reverb delay ( ) throws illegal state exception , illegal argument exception , unsupported operation exception {
 byte [ ] param = new byte [ DecimalInteger ] ;
 check status ( get parameter ( param_ UNK y , param ) ) ;
 return byte array to int ( param ) ;
 }
comment:
START gets the reverb delay . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
protected class < ? > get class to expose ( class < ? > bean class ) {
 return UNK utils . get class to expose ( bean class ) ;
 }
comment:
START return the class or interface to expose for the given bean class . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public activity info get activity info ( ) {
 return mactivity info ;
 }
comment:
START return the raw information about the receiver implementing this device admin . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
static buffer buffer ( int initial size hint ) {
 return factory . buffer ( initial size hint ) ;
 }
comment:
START create a new buffer given the initial size hint . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private jack compilation helper . builder add dependencies internal ( iterable < ? extends transitive info collection > deps , collection < artifact > non library files , nested set builder < artifact > jack libs ) {
 for ( transitive info collection dep : deps ) {
 jack library provider jack library provider = dep . get provider ( jack library provider . class ) ;
 if ( jack library provider != null ) {
 jack libs . add transitive ( jack library provider . get transitive jack classpath libraries ( ) ) ;
 }
 else {
 nested set < artifact > files to build = dep . get provider ( file provider . class ) . get files to build ( ) ;
 for ( artifact file : file type . filter ( files to build , java semantics . r , UNK library_ e ) ) {
 non library files . add ( file ) ;
 }
 }
 }
 return this ;
 }
comment:
START adds all libraries from deps to non library files and jack UNK based on their type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of all UNK .
returns the list of UNK UNK to the UNK .

code:
@ override public bean definition [ ] get bean definitions ( ) {
 return new bean definition [ DecimalInteger ] ;
 }
comment:
START returns an empty array . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public float get joint speed ( ) {
 return joint . get joint speed ( ) ;
 }
comment:
START get the current joint translation speed , usually in meters per second . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get path ( ) {
 return this . path ;
 }
comment:
START return the path that this tag applies to . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
protected UNK . jms . message create message for payload ( object payload , session session , object conversion hint ) throws exception {
 return this . payload converter . to message ( payload , session ) ;
 }
comment:
START create a jms message for the specified payload and conversion hint . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ nullable public drawable get navigation icon ( ) {
 return mnav button view != null ? mnav button view . get drawable ( ) : null ;
 }
comment:
START return the current drawable used as the navigation icon . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean is any axis inverted ( ) {
 if ( maxis left . is inverted ( ) ) return true ;
 if ( maxis right . is inverted ( ) ) return true ;
 return false ;
 }
comment:
START returns true if either the left or the right or both axes are inverted . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public static string [ ] bean names for type including ancestors ( listable bean factory lbf , class < ? > type , boolean include non singletons , boolean allow eager init ) {
 assert . not null ( lbf , String ) ;
 string [ ] result = lbf . get bean names for type ( type , include non singletons , allow eager init ) ;
 if ( lbf instanceof hierarchical bean factory ) {
 hierarchical bean factory hbf = ( hierarchical bean factory ) lbf ;
 if ( hbf . get parent bean factory ( ) instanceof listable bean factory ) {
 string [ ] parent result = bean names for type including ancestors ( ( listable bean factory ) hbf . get parent bean factory ( ) , type , include non singletons , allow eager init ) ;
 list < string > result list = new array list < > ( ) ;
 result list . add all ( arrays . as list ( result ) ) ;
 for ( string bean name : parent result ) {
 if ( ! result list . contains ( bean name ) && ! hbf . contains local bean ( bean name ) ) {
 result list . add ( bean name ) ;
 }
 }
 result = string utils . to string array ( result list ) ;
 }
 }
 return result ;
 }
comment:
START get all bean names for the given type , including those defined in ancestor factories . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public static method get declared method ( class < ? > type , string method name , class < ? > ... parameter types ) {
 method method = null ;
 try {
 method = type . get declared method ( method name , parameter types ) ;
 if ( method . is bridge ( ) ) {
 method = method provider . get instance ( ) . UNK ( method , type ) ;
 }
 }
 catch ( no such method exception e ) {
 class < ? > superclass = type . get superclass ( ) ;
 if ( superclass != null ) {
 method = get declared method ( superclass , method name , parameter types ) ;
 }
 }
 catch ( class not found exception e ) {
 throwables . propagate ( e ) ;
 }
 catch ( exception e ) {
 throwables . propagate ( e ) ;
 }
 return method ;
 }
comment:
START gets declared method from specified type by UNK and parameters types . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK

code:
public cpp link action builder add object files ( iterable < artifact > inputs ) {
 for ( artifact input : inputs ) {
 add object file ( linker inputs . simple linker input ( input , artifact category . object_ e ) ) ;
 }
 return this ;
 }
comment:
START adds object files to the linker action . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public void set focus areas ( list < area > focus areas ) {
 set ( key_ focus_ s , focus areas ) ;
 }
comment:
START sets focus areas . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
void add bean post processor ( bean post processor bean post processor ) ;
comment:
START add a new bean post processor that will get applied to beans created by this factory . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public static void add ( object identifier , embedded server factory factory ) {
 factories . put ( identifier , factory ) ;
 }
comment:
START adds an embedded server factory for the provided identifier . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to UNK the UNK .
used to the UNK of the UNK

code:
public cc library helper add pic object files ( iterable < artifact > pic object files ) {
 for ( artifact object file : object files ) {
 preconditions . check argument ( link . object_ s . matches ( object file . get filename ( ) ) ) ;
 }
 iterables . add all ( this . pic object files , pic object files ) ;
 return this ;
 }
comment:
START add the corresponding files as linker inputs for pic links . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public boolean exists ( ) {
 return file system . exists ( this , true ) ;
 }
comment:
START returns true iff this path denotes an existing file of any kind . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public int get tree balance ( ) {
 return m_contact manager . m_broad phase . get tree balance ( ) ;
 }
comment:
START gets the balance of the dynamic tree @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final parse context create multi field context ( ) {
 return new filter parse context ( this ) {
 @ override public boolean is within multi fields ( ) {
 return true ;
 }
 }
 ;
 }
comment:
START return a new context that will be within UNK . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected void do set rollback only ( default transaction status status ) throws transaction exception {
 throw new illegal transaction state exception ( String + String ) ;
 }
comment:
START set the given transaction rollback-only . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public void set max header table size ( byte buf out , long max header table size ) throws http2 exception {
 if ( max header table size < min_ header_ table_ e || max header table size > max_ header_ table_ e ) {
 throw connection error ( UNK r , String , min_ header_ table_ e , max_ header_ table_ e , max header table size ) ;
 }
 if ( this . max header table size == max header table size ) {
 return ;
 }
 this . max header table size = max header table size ;
 ensure capacity ( DecimalInteger ) ;
 encode integer ( out , 0x20 , DecimalInteger , ( int ) max header table size ) ;
 }
comment:
START set the maximum table size . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public boolean remove address ( inet address address , int prefix length ) {
 check ( address , prefix length ) ;
 try {
 return get service ( ) . remove vpn address ( address . get host address ( ) , prefix length ) ;
 }
 catch ( remote exception e ) {
 throw new illegal state exception ( e ) ;
 }
 }
comment:
START removes a network address from the vpn interface . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
@ override public void set placeholder prefix ( string placeholder prefix ) {
 this . placeholder prefix = placeholder prefix ;
 }
comment:
START set the prefix that placeholders replaced by this resolver must begin with . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static property matches for property ( string property name , class < ? > bean class ) {
 return for property ( property name , bean class , default_ max_ e ) ;
 }
comment:
START create property matches for the given bean property . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void add callback ( listenable future callback < ? super t > callback ) {
 assert . not null ( callback , String ) ;
 synchronized ( this . mutex ) {
 switch ( this . state ) {
 case w : this . success callbacks . add ( callback ) ;
 this . failure callbacks . add ( callback ) ;
 break ;
 case s : notify success ( callback ) ;
 break ;
 case e : notify failure ( callback ) ;
 break ;
 }
 }
 }
comment:
START add the given callback to this registry . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public void set port ( int port ) {
 this . port = port ;
 }
comment:
START set the proxy port . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public static int get UNK size ( long i ) {
 if ( i >= - DecimalInteger && i <= DecimalInteger ) {
 return DecimalInteger ;
 }
 if ( i < DecimalInteger ) {
 i ^= - DecimalInteger ;
 }
 int data bits = long . e - long . number of leading zeros ( i ) ;
 return ( data bits + DecimalInteger ) / DecimalInteger + DecimalInteger ;
 }
comment:
START get the encoded length if an integer is stored in a UNK format @return the encoded length END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
private void add test classes from jars ( ) {
 string jars = params . get string ( UNK m ) ;
 if ( jars == null ) return ;
 string [ ] jar file names = jars . split ( UNK r ) ;
 for ( string file name : jar file names ) {
 file name = file name . trim ( ) ;
 if ( file name . is empty ( ) ) continue ;
 try {
 dex file dex file = new dex file ( file name ) ;
 for ( enumeration < string > e = dex file . entries ( ) ;
 e . has more elements ( ) ;
 ) {
 string class name = e . next element ( ) ;
 if ( is test class ( class name ) ) {
 UNK classes . add ( class name ) ;
 }
 }
 dex file . close ( ) ;
 }
 catch ( exception e ) {
 log . w ( g , string . format ( String , file name , e . get message ( ) ) ) ;
 }
 }
 }
comment:
START add test classes from jars passed on the command line . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static < k , v > immutable multimap < k , v > of ( ) {
 return immutable list multimap . of ( ) ;
 }
comment:
START returns an empty multimap . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ override public bean reference [ ] get bean references ( ) {
 return new bean reference [ DecimalInteger ] ;
 }
comment:
START returns an empty array . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public string get namespace i ( node node ) {
 return node . get namespace i ( ) ;
 }
comment:
START get the namespace uri for the supplied node . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public builder set remote input history ( char sequence [ ] text ) {
 if ( text == null ) {
 n . extras . put char sequence array ( extra_ UNK input_ y , null ) ;
 }
 else {
 final int n = math . min ( max_ UNK y , text . length ) ;
 char sequence [ ] safe = new char sequence [ n ] ;
 for ( int i = DecimalInteger ;
 i < n ;
 i ++ ) {
 safe [ i ] = safe char sequence ( text [ i ] ) ;
 }
 n . extras . put char sequence array ( extra_ UNK input_ y , safe ) ;
 }
 return this ;
 }
comment:
START set the remote input history . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void set ignore warnings ( boolean ignore warnings ) {
 this . ignore warnings = ignore warnings ;
 }
comment:
START set whether or not we want to ignore UNK . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
protected void set default deprecation ( string deprecation ) {
 default deprecation = deprecation ;
 }
comment:
START set the default ` deprecation ' value for this package . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
< t > async result < t > start process ( callable < t > task , async callback < t > callback ) ;
comment:
START returns immediately with async result . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public string get cookie name ( ) {
 return this . cookie name ;
 }
comment:
START return the given name for cookies created by this generator . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
public intent put extra ( string name , int value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put int ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
bundle support add xcode settings ( builder xcode provider builder ) {
 if ( bundling . get bundle infoplist ( ) . is present ( ) ) {
 xcode provider builder . set bundle infoplist ( bundling . get bundle infoplist ( ) . get ( ) ) ;
 }
 return this ;
 }
comment:
START adds any xcode settings related to this bundle to the given provider builder . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .

code:
@ override public void add event to pool ( schedulable event event ) {
 if ( event instanceof midi event ) {
 midi event midi event = ( midi event ) event ;
 if ( midi event . data . length == pool_ event_ e ) {
 super . add event to pool ( event ) ;
 }
 }
 }
comment:
START return events to a pool so they can be reused . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public void set default content type ( media type content type ) {
 this . default negotiation strategy = new fixed content negotiation strategy ( content type ) ;
 }
comment:
START set the default content type to use when no content type is requested . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public boolean is write UNK logging enabled ( ) {
 synchronized ( lock ) {
 throw if not open locked ( ) ;
 return ( mconfiguration locked . open flags & UNK UNK UNK g ) != DecimalInteger ;
 }
 }
comment:
START returns true if UNK logging has been enabled for this database . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether the UNK is UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public boolean include lower ( ) {
 return this . include lower ;
 }
comment:
START gets the include lower flag for this query . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public final set < artifact > get linkstamps ( ) {
 return this . linkstamps ;
 }
comment:
START returns linkstamps for this link action . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static network scorer app data get active scorer ( context context ) {
 string scorer package = settings . global . get string ( context . get content resolver ( ) , settings . global . network_ UNK p ) ;
 return get scorer ( context , scorer package ) ;
 }
comment:
START get the application to use for scoring networks . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set y ( int y ) {
 if ( madapted allocation . get type ( ) . get y ( ) == DecimalInteger ) {
 throw new rsinvalid state exception ( String ) ;
 }
 if ( madapted allocation . get type ( ) . get y ( ) <= y ) {
 throw new rsinvalid state exception ( String ) ;
 }
 if ( window . get y ( ) == madapted allocation . get type ( ) . get y ( ) ) {
 throw new rsinvalid state exception ( String ) ;
 }
 if ( ( window . get y ( ) + y ) >= madapted allocation . get type ( ) . get y ( ) ) {
 throw new rsinvalid state exception ( String ) ;
 }
 mselected y = y ;
 update offsets ( ) ;
 }
comment:
START set the active y . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
@ override protected string UNK id ( ) throws jsp exception {
 return tag id generator . next id ( super . UNK id ( ) , this . page context ) ;
 }
comment:
START return a unique id for the bound name within the current page context . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public cluster UNK request add ( allocation command ... commands ) {
 this . commands . add ( commands ) ;
 return this ;
 }
comment:
START adds allocation commands to be applied to the cluster . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
@ int range ( from = DecimalInteger ) public long get data size ( ) {
 return mdata size ;
 }
comment:
START gets the document data size in bytes . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void put ( string key , byte [ ] value ) {
 values . put ( key , value ) ;
 }
comment:
START adds a value to the set . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public final int get max concurrent consumers ( ) {
 synchronized ( this . lifecycle monitor ) {
 return this . max concurrent consumers ;
 }
 }
comment:
START return the `` max concurrent consumer '' setting . END
BLUE1:0.285714285714
--generate--
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of bytes in the given UNK .
returns the number of all UNK in the .
returns the number of all UNK in the given .

code:
public byte get pipeline max depth checked ( ) {
 key < byte > key = camera characteristics . request_ UNK max_ h ;
 byte max depth = get value from key non null ( key ) ;
 if ( max depth == null ) {
 return request_ UNK max_ depth_ x ;
 }
 check true for key ( key , String + request_ UNK max_ depth_ x , max depth <= request_ UNK max_ depth_ x ) ;
 return max depth ;
 }
comment:
START get max pipeline depth and do the sanity check . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
private static < t extends enum < t > > int get enum value ( t enum value ) {
 int [ ] values ;
 values = UNK values . get ( enum value . get class ( ) ) ;
 int ordinal = enum value . ordinal ( ) ;
 if ( values != null ) {
 return values [ ordinal ] ;
 }
 return ordinal ;
 }
comment:
START get the numeric value from an enum . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the given .

code:
public static final java . net . proxy get proxy ( context ctx , string url ) {
 string host = String ;
 if ( ( url != null ) && ! is local host ( host ) ) {
 i uri = i . create ( url ) ;
 proxy selector proxy selector = proxy selector . get default ( ) ;
 list < java . net . proxy > proxy list = proxy selector . select ( uri ) ;
 if ( proxy list . size ( ) > DecimalInteger ) {
 return proxy list . get ( DecimalInteger ) ;
 }
 }
 return java . net . proxy . no_ y ;
 }
comment:
START return the proxy object to be used for the url given as parameter . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public multi match query builder field ( string field , float boost ) {
 if ( strings . is empty ( field ) ) {
 throw new illegal argument exception ( String ) ;
 }
 this . fields UNK . put ( field , boost ) ;
 return this ;
 }
comment:
START adds a field to run the multi match against with a specific boost . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public string field name ( ) {
 return this . field name ;
 }
comment:
START returns the field name used in this query . END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes in the request

code:
public float get text scale x ( ) {
 return nget text scale x ( mnative paint ) ;
 }
comment:
START return the paint 's horizontal scale factor for text . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set block ( block b ) {
 block = b ;
 }
comment:
START set the basic block this node belongs to . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
protected final object get bound value ( ) throws jsp exception {
 return get bind status ( ) . get value ( ) ;
 }
comment:
START get the bound value . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ non null public list < category > get categories ( ) {
 if ( categories == null ) {
 final set < category > categories = new hash set < category > ( ) ;
 for ( issue issue : get issues ( ) ) {
 categories . add ( issue . get category ( ) ) ;
 }
 list < category > sorted = new array list < category > ( categories ) ;
 collections . sort ( sorted ) ;
 categories = collections . unmodifiable list ( sorted ) ;
 }
 return categories ;
 }
comment:
START returns the available categories @return an iterator for all the categories , never null END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
protected abstract bean definition create bean definition ( string class name , string parent name ) throws class not found exception {
 return bean definition reader utils . create bean definition ( parent name , class name , this . reader context . get bean class loader ( ) ) ;
 }
comment:
START create a bean definition for the given class name and parent name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public ip configuration get configuration ( ) {
 try {
 return service . get configuration ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START get UNK configuration . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void add frame slot ( string name , frame type type , int flags ) {
 assert not running ( ) ;
 frame slot old slot = mframe slots . get ( name ) ;
 if ( old slot != null ) {
 remove frame slot ( name ) ;
 }
 frame slot slot = new frame slot ( type , flags ) ;
 mframe slots . put ( name , slot ) ;
 }
comment:
START adds a new frame slot to the frame manager . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
configuration stats get or create configuration stats ( configuration config ) {
 configuration stats config stats = configurations . get ( config ) ;
 if ( config stats == null ) {
 config stats = new configuration stats ( ) ;
 config stats . mbegin time stamp = begin time ;
 config stats . mend time stamp = end time ;
 config stats . configuration = config ;
 configurations . put ( config , config stats ) ;
 }
 return config stats ;
 }
comment:
START gets the configuration stats object for the given configuration , or creates one and adds it internally . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
@ non null public string get label ( @ non null package manager package manager ) {
 if ( ! text utils . is empty ( mpackage name ) && mlabel res id > DecimalInteger ) {
 try {
 return package manager . get resources for application ( mpackage name ) . get string ( mlabel res id ) ;
 }
 catch ( not found exception | name not found exception e ) {
 log . w ( log_ g , String + mlabel res id + String + mpackage name ) ;
 }
 }
 return label ;
 }
comment:
START gets the human readable media size label . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that UNK UNK .
returns the list of UNK that UNK UNK the UNK .

code:
private address http address ( ) {
 return new address ( uri host , uri port , dns , socket factory , null , null , null , authenticator , null , protocols , connection specs , proxy selector ) ;
 }
comment:
START returns an address that 's without an ssl socket factory or hostname verifier . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
protected handler method create handler method ( object handler , method method ) {
 handler method handler method ;
 if ( handler instanceof string ) {
 string bean name = ( string ) handler ;
 handler method = new handler method ( bean name , get application context ( ) . get autowire capable bean factory ( ) , method ) ;
 }
 else {
 handler method = new handler method ( handler , method ) ;
 }
 return handler method ;
 }
comment:
START create the handler method instance . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK to the UNK .

code:
public void set interaction spec ( interaction spec interaction spec ) {
 this . interaction spec = interaction spec ;
 }
comment:
START set the cci interaction spec for this operation . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public put index template request alias ( alias alias ) {
 aliases . add ( alias ) ;
 return this ;
 }
comment:
START adds an alias that will be added when the index gets created . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set to UNK to UNK .
set to UNK to UNK to UNK .
set to UNK to UNK to .
set to UNK to UNK to UNK

code:
public object get value ( ) {
 return this . value ;
 }
comment:
START return the pojo that needs to be serialized . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public static active shard count from ( final int value ) {
 if ( value < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 return get ( value ) ;
 }
comment:
START get an active shard count instance for the given value . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public byte [ ] compressed ( ) {
 return this . bytes ;
 }
comment:
START return the compressed bytes . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public intent put extra ( string name , boolean value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put boolean ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public final void set session factory ( session factory session factory ) {
 if ( this . hibernate template == null || session factory != this . hibernate template . get session factory ( ) ) {
 this . hibernate template = create hibernate template ( session factory ) ;
 }
 }
comment:
START set the hibernate session factory to be used by this dao . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public final nested set builder < artifact > get compilation inputs ( ) {
 return this . compilation inputs ;
 }
comment:
START returns compilation inputs for this link action . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set progress ( @ non null print job id print job id , @ float range ( from = DecimalFloatingPoint , to = DecimalFloatingPoint ) float progress ) {
 synchronized ( lock ) {
 get print job info ( print job id , print manager . app_ id_ y ) . set progress ( progress ) ;
 mnotification controller . on update notifications ( mprint jobs ) ;
 }
 }
comment:
START set the progress for a print job . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
protected runner create runner ( request delegate ) {
 return delegate . get runner ( ) ;
 }
comment:
START creates the runner . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
protected search service new search service ( cluster service cluster service , indices service indices service , thread pool thread pool , script service script service , big arrays big arrays , fetch phase fetch phase ) {
 return new search service ( cluster service , indices service , thread pool , script service , big arrays , fetch phase ) ;
 }
comment:
START creates a new the search service . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public string get stats info ( ) {
 return this . stats . to string ( ) ;
 }
comment:
START return a string describing internal state and UNK . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static date time formatter date parser ( ) {
 return constants . dp ;
 }
comment:
START returns a generic iso date parser for parsing dates with a possible zone . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public void set text output ( text renderer . output output ) {
 text output = output ;
 }
comment:
START sets an output to receive text events . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public static method invocation current invocation ( ) throws illegal state exception {
 method invocation mi = invocation . get ( ) ;
 if ( mi == null ) throw new illegal state exception ( String + String + String ) ;
 return mi ;
 }
comment:
START return the aop alliance method invocation object associated with the current invocation . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
< t > t get native response ( class < t > required type ) ;
comment:
START return the underlying native response object , if available . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get delimiter ( ) {
 return this . delimiter ;
 }
comment:
START return the delimiter to be used between error messages . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the current number of UNK .
returns the current number of UNK UNK .
returns the current number of all UNK .
returns the current number of UNK

code:
public boolean is UNK over ( ) {
 return UNK over ;
 }
comment:
START returns true if the rollover was not UNK and the conditions were met END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
void add argument resolvers ( list < handler method argument resolver > argument resolvers ) ;
comment:
START add resolvers to support custom controller method argument types . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public static completable error ( final func0 < ? extends throwable > error func0 ) {
 require non null ( error func0 ) ;
 return create ( new on subscribe ( ) {
 @ override public void call ( rx . completable subscriber s ) {
 s . on subscribe ( subscriptions . unsubscribed ( ) ) ;
 throwable error ;
 try {
 error = error func0 . call ( ) ;
 }
 catch ( throwable e ) {
 error = e ;
 }
 if ( error == null ) {
 error = new null pointer exception ( String ) ;
 }
 s . on error ( error ) ;
 }
 }
 ) ;
 }
comment:
START creates a completable which calls the given error supplier for each subscriber and emits its returned throwable . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void set username ( string username ) {
 this . username = username ;
 }
comment:
START set the default username that this adapter should use for retrieving connections . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK

code:
public builder add symlinks ( map < path fragment , artifact > symlinks ) {
 runfiles builder . add symlinks ( symlinks ) ;
 return this ;
 }
comment:
START adds a map of symlinks . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
@ override public float get reaction torque ( float inv_dt ) {
 return DecimalFloatingPoint ;
 }
comment:
START get the reaction torque given the inverse time step . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public long get delete current ( ) {
 return delete current ;
 }
comment:
START returns the currently in-flight delete operations END
BLUE1:0.285714285714
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public void put ( string key , long value ) {
 if ( key != null ) {
 url params . put ( key , string . value of ( value ) ) ;
 }
 }
comment:
START adds a long value to the request . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public entry get values ( long start , long end , entry recycle ) {
 return get values ( start , end , long . max_ e , recycle ) ;
 }
comment:
START return interpolated data usage across the requested range . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK to the UNK .

code:
private remote views update summary notification remote views ( list < pw pair > pw pairs ) {
 remote views remote views = new remote views ( get package name ( ) , r . layout . UNK ) ;
 update summary notification remote views first beacon ( pw pairs . get ( DecimalInteger ) , remote views ) ;
 update summary notification remote views second beacon ( pw pairs . get ( DecimalInteger ) , remote views ) ;
 pending intent pending intent = create return to app pending intent ( ) ;
 remote views . set on click pending intent ( r . id . other beacons layout , pending intent ) ;
 return remote views ;
 }
comment:
START create the big view for the summary notification . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public static iterable < source file > all source files ( file system file system , target control control ) {
 immutable list . builder < source file > result = new immutable list . builder < > ( ) ;
 for ( path plain source : relative paths . from strings ( file system , control . get source file list ( ) ) ) {
 result . add ( new source file ( build type . d , plain source ) ) ;
 }
 for ( path non arc source : relative paths . from strings ( file system , control . get non arc source file list ( ) ) ) {
 result . add ( new source file ( build type . non_ UNK d , non arc source ) ) ;
 }
 for ( path support source : relative paths . from strings ( file system , control . get support file list ( ) ) ) {
 result . add ( new source file ( build type . no_ d , support source ) ) ;
 }
 if ( control . has infoplist ( ) ) {
 result . add ( new source file ( build type . no_ d , relative paths . from string ( file system , control . get infoplist ( ) ) ) ) ;
 }
 return result . build ( ) ;
 }
comment:
START returns information on all source files in a target . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set path matcher ( path matcher path matcher ) {
 this . path matcher = path matcher ;
 }
comment:
START set a custom path matcher to use for the patterns request condition . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .

code:
public void set method ( method method ) {
 this . method = method ;
 }
comment:
START set the method to invoke for processing a message managed by this endpoint . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
< t > optional < t > get attribute ( string name ) ;
comment:
START return the request attribute value if present . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public string get catalog ( ) {
 return this . catalog ;
 }
comment:
START return the database catalog to be applied to each connection , if any . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set expression prefix ( string expression prefix ) {
 assert . has text ( expression prefix , String ) ;
 this . expression prefix = expression prefix ;
 }
comment:
START set the prefix that an expression string starts with . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public program store create ( ) {
 s . validate ( ) ;
 long id = s . UNK store create ( mcolor mask r , mcolor mask g , mcolor mask b , mcolor mask a , mdepth mask , dither , mblend src . d , mblend dst . d , mdepth func . d ) ;
 program store program store = new program store ( id , s ) ;
 program store . mdepth func = mdepth func ;
 program store . mdepth mask = mdepth mask ;
 program store . mcolor mask r = mcolor mask r ;
 program store . mcolor mask g = mcolor mask g ;
 program store . mcolor mask b = mcolor mask b ;
 program store . mcolor mask a = mcolor mask a ;
 program store . mblend src = mblend src ;
 program store . mblend dst = mblend dst ;
 program store . dither = dither ;
 return program store ;
 }
comment:
START creates a program store from the current state of the builder END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public void set multi party ( boolean multi party ) {
 mmulti party = multi party ;
 }
comment:
START sets this call as multi party call . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
static string get default device name ( int address ) {
 if ( is valid address ( address ) ) {
 return default_ s [ address ] ;
 }
 return String ;
 }
comment:
START return the default device name for a logical address . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK that UNK the UNK .
returns the list of UNK UNK UNK

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
START find the _ fields constant that matches name , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
default optional < string > path variable ( string name ) {
 return optional . of nullable ( this . path variables ( ) . get ( name ) ) ;
 }
comment:
START return the path variable with the given name , if present . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static int get tag code ( string name ) {
 read tags file ( ) ;
 integer code = UNK codes . get ( name ) ;
 return code != null ? code : - DecimalInteger ;
 }
comment:
START get the event type tag code associated with an event name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return d ;
 case DecimalInteger : return d ;
 case DecimalInteger : return process_ ms_ g ;
 case DecimalInteger : return d ;
 case DecimalInteger : return UNK ms_ g ;
 default : return null ;
 }
 }
comment:
START find the _ fields constant that matches field id , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .

code:
@ override public void remove ( long row index ) {
 check immutable ( ) ;
 native remove ( native ptr , row index ) ;
 }
comment:
START removes a row from the specific index . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
remove the UNK of the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void set target cache manager ( cache manager target cache manager ) {
 this . target cache manager = target cache manager ;
 }
comment:
START set the target cache manager to proxy . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void set state ( short value ) {
 state = value ;
 }
comment:
START sets the sync state . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public field get field ( ) {
 return this . field ;
 }
comment:
START return the wrapped field , if any . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public accessibility window info get window ( ) {
 enforce sealed ( ) ;
 if ( ! can perform request over connection ( msource node id ) ) {
 return null ;
 }
 accessibility interaction client client = accessibility interaction client . get instance ( ) ;
 return client . get window ( mconnection id , mwindow id ) ;
 }
comment:
START gets the window to which this node belongs . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set scale ( float scale y ) {
 this . scale x = scale y ;
 this . scale y = scale y ;
 }
comment:
START sets the scale for both x and y END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
builder add escape ( char c , string replacement ) {
 if ( replacement == null ) {
 throw new null pointer exception ( ) ;
 }
 replacement map . put ( c , replacement ) ;
 return this ;
 }
comment:
START adds a replacement string for the given input character . END
BLUE1:0.285714285714
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the UNK to the UNK .

code:
public static error info from child errors ( sky key current value , collection < error info > child errors ) {
 preconditions . check not null ( current value , String ) ;
 preconditions . check state ( ! child errors . is empty ( ) , String ) ;
 nested set builder < sky key > root causes builder = nested set builder . stable order ( ) ;
 immutable list . builder < cycle info > cycle builder = immutable list . builder ( ) ;
 exception first exception = null ;
 sky key first child key = null ;
 boolean is transient = false ;
 boolean is UNK = false ;
 for ( error info child : child errors ) {
 if ( first exception == null ) {
 first exception = child . get exception ( ) ;
 first child key = child . get root cause of exception ( ) ;
 }
 root causes builder . add transitive ( child . root causes ) ;
 cycle builder . add all ( cycle info . prepare cycles ( current value , child . cycles ) ) ;
 is transient |= child . is transient ( ) ;
 is UNK |= child . is UNK ( ) ;
 }
 return new error info ( root causes builder . build ( ) , first exception , first child key , cycle builder . build ( ) , is transient , is UNK ) ;
 }
comment:
START create an error info from a collection of existing errors . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
sets the UNK for the UNK .

code:
public void set retry after ( int retry after ) {
 this . mretry after = retry after ;
 }
comment:
START sets the sip retry after sec value END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public account header builder add profiles ( @ non null profile ... profiles ) {
 if ( this . profiles == null ) {
 this . profiles = new array list < > ( ) ;
 }
 collections . add all ( this . profiles , id UNK . check ids ( profiles ) ) ;
 return this ;
 }
comment:
START add single UNK more drawer items to the drawer @param profiles @return END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void set mapped class ( class < t > mapped class ) {
 if ( this . mapped class == null ) {
 initialize ( mapped class ) ;
 }
 else {
 if ( this . mapped class != mapped class ) {
 throw new invalid data access api usage exception ( String + mapped class + String + this . mapped class ) ;
 }
 }
 }
comment:
START set the class that each row should be mapped to . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public boolean contains ( string field ) {
 return UNK . contains key ( field ) ;
 }
comment:
START returns true if this contains the specified name of the field . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public static key serializer < integer > get int key serializer ( ) {
 return int key serializer . e ;
 }
comment:
START returns a map key serializer for integer keys . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
private test xml output parser exception create bad element exception ( string expected , xmlstream reader parser ) {
 return new test xml output parser exception ( String + expected + String + parser . get local name ( ) + String + parser . get location ( ) . get line number ( ) + String + parser . get location ( ) . get column number ( ) ) ;
 }
comment:
START creates an exception suitable to be thrown when and a UNK end tag appears . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK value of the UNK .
returns the UNK value of the given UNK .
returns the UNK value of the given file .
returns the UNK value of the given type .

code:
public boolean set power save mode ( boolean mode ) {
 try {
 return service . set power save mode ( mode ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START set the current power save mode . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static long get address from direct byte buffer ( byte buffer buffer ) {
 try {
 field address field = buffer . class . get declared field ( String ) ;
 address field . set accessible ( true ) ;
 return address field . get long ( buffer ) ;
 }
 catch ( exception e ) {
 throw new runtime exception ( String , e ) ;
 }
 }
comment:
START gets the address value for the memory that backs a direct byte buffer . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public string as string ( ) {
 switch ( type ) {
 case string value : return string value ;
 case double value : return string value != null ? string value : double . to string ( double value ) ;
 case long value : return string value != null ? string value : long . to string ( long value ) ;
 case boolean value : return long value != DecimalInteger ? String : String ;
 case null value : return null ;
 }
 throw new illegal state exception ( String + type ) ;
 }
comment:
START returns this value as a string . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public void set ( vector2 position , float radius ) {
 this . x = position . x ;
 this . y = position . y ;
 this . radius = radius ;
 }
comment:
START sets a new location and radius for this circle . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
protected string get raw progress message ( ) {
 return default progress message ( ) ;
 }
comment:
START returns a progress message string that is specific for this action . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public int get fade duration ( ) {
 return mfade drawable . get transition duration ( ) ;
 }
comment:
START gets the fade duration . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
private void setup exec root ( ) {
 try {
 file system utils . create directory and parents ( directories . get exec root ( ) ) ;
 }
 catch ( exception e ) {
 g . warning ( String + directories . get exec root ( ) + String + e . get message ( ) ) ;
 }
 }
comment:
START creates the exec root dir under output base . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public predicate < rule class > get allowed rule classes predicate ( ) {
 return allowed rule classes for labels ;
 }
comment:
START returns a predicate that evaluates to true for rule classes that are allowed labels in this attribute . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get launcher large icon size ( ) {
 return get launcher large icon size inner ( context ) ;
 }
comment:
START get the preferred launcher icon size . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
@ requires permission ( android . manifest . permission . read_ phone_ e ) public boolean is voice mail number ( phone account handle account handle , string number ) {
 try {
 if ( is service connected ( ) ) {
 return get telecom service ( ) . is voice mail number ( account handle , number , context . get op package name ( ) ) ;
 }
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 return false ;
 }
comment:
START return whether a given phone number is the configured voicemail number for a particular phone account . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public abstract void set id ( int id , string package name , string type name , string entry name ) ;
comment:
START set the identifier for this view . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public label get jvm label ( ) {
 return jvm label ;
 }
comment:
START returns a label . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public void set data source ( data source data source ) {
 this . jdbc template = new jdbc template ( data source ) ;
 }
comment:
START set the data source to use to obtain database connections . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public list < integer > get supported picture formats ( ) {
 string str = get ( key_ picture_ t + supported_ values_ x ) ;
 array list < integer > formats = new array list < integer > ( ) ;
 for ( string s : split ( str ) ) {
 int f = pixel format for camera format ( s ) ;
 if ( f == image format . n ) continue ;
 formats . add ( f ) ;
 }
 return formats ;
 }
comment:
START gets the supported picture formats . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int get defined tag default ifd ( int tag id ) {
 int info = get tag info ( ) . get ( tag id ) ;
 if ( info == UNK l ) {
 return ifd_ l ;
 }
 return get true ifd ( tag id ) ;
 }
comment:
START gets the default ifd for a tag . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ suppress warnings ( String ) public < t > t get proxy ( ) {
 return ( t ) create aop proxy ( ) . get proxy ( ) ;
 }
comment:
START create a new proxy according to the settings in this factory . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .
returns the list of UNK UNK

code:
protected boolean update node values ( node node , transfer result < a , s > transfer result ) {
 a new val = transfer result . get result value ( ) ;
 boolean node value changed = false ;
 if ( new val != null ) {
 a old val = node values . get ( node ) ;
 node values . put ( node , new val ) ;
 node value changed = ! objects . equals ( old val , new val ) ;
 }
 return node value changed || transfer result . store changed ( ) ;
 }
comment:
START returns true if the node 's value changed , or a store was updated . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
private object [ ] get method argument values ( message < ? > message , object ... provided args ) throws exception {
 method parameter [ ] parameters = get method parameters ( ) ;
 object [ ] args = new object [ parameters . length ] ;
 for ( int i = DecimalInteger ;
 i < parameters . length ;
 i ++ ) {
 method parameter parameter = parameters [ i ] ;
 parameter . init parameter name discovery ( this . parameter name discoverer ) ;
 generic type resolver . resolve parameter type ( parameter , get bean ( ) . get class ( ) ) ;
 args [ i ] = resolve provided argument ( parameter , provided args ) ;
 if ( args [ i ] != null ) {
 continue ;
 }
 if ( this . argument resolvers . supports parameter ( parameter ) ) {
 try {
 args [ i ] = this . argument resolvers . resolve argument ( parameter , message ) ;
 continue ;
 }
 catch ( exception ex ) {
 if ( logger . is debug enabled ( ) ) {
 logger . debug ( get argument resolution error message ( String , i ) , ex ) ;
 }
 throw ex ;
 }
 }
 if ( args [ i ] == null ) {
 string msg = get argument resolution error message ( String , i ) ;
 throw new illegal state exception ( msg ) ;
 }
 }
 return args ;
 }
comment:
START get the method argument values for the current request . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public void set reuse objects ( boolean reuse objects ) {
 this . reuse objects = reuse objects ;
 }
comment:
START set whether this unmarshaller should UNK objects . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public data source get target data source ( ) {
 return this . target data source ;
 }
comment:
START return the target data source that this data source should delegate to . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public static synchronized http response cache install ( file directory , long max size ) throws exception {
 response cache installed = response cache . get default ( ) ;
 if ( installed instanceof http response cache ) {
 http response cache installed response cache = ( http response cache ) installed ;
 android shim response cache true response cache = installed response cache . shim response cache ;
 if ( true response cache . is UNK ( directory , max size ) ) {
 return installed response cache ;
 }
 else {
 true response cache . close ( ) ;
 }
 }
 android shim response cache true response cache = android shim response cache . create ( directory , max size ) ;
 http response cache new response cache = new http response cache ( true response cache ) ;
 response cache . set default ( new response cache ) ;
 return new response cache ;
 }
comment:
START creates a new http response cache and sets it as the system default cache . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void add success callback ( success callback < ? super t > callback ) {
 assert . not null ( callback , String ) ;
 synchronized ( this . mutex ) {
 switch ( this . state ) {
 case w : this . success callbacks . add ( callback ) ;
 break ;
 case s : notify success ( callback ) ;
 break ;
 }
 }
 }
comment:
START add the given success callback to this registry . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
public void set default charset ( charset default charset ) {
 this . default charset = default charset ;
 }
comment:
START set the default character set , if any . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set callback ( @ nullable callback cb , @ nullable handler handler ) {
 if ( cb != null ) {
 synchronized ( mlistener lock ) {
 event handler new handler = get event handler on ( handler , mcallback handler ) ;
 if ( new handler != mcallback handler ) {
 mcallback handler . remove messages ( event_ set_ k ) ;
 mcallback handler . remove messages ( event_ k ) ;
 mcallback handler = new handler ;
 }
 }
 }
 else if ( mcallback handler != null ) {
 mcallback handler . remove messages ( event_ set_ k ) ;
 mcallback handler . remove messages ( event_ k ) ;
 }
 if ( mcallback handler != null ) {
 message msg = mcallback handler . obtain message ( event_ set_ k , DecimalInteger , DecimalInteger , cb ) ;
 mcallback handler . send message ( msg ) ;
 native_set callback ( cb ) ;
 }
 }
comment:
START sets an asynchronous callback for actionable media codec events . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
@ non null public media session . token get session token ( ) {
 return token ;
 }
comment:
START get the token for the session this is connected to . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set limits ( float lower , float upper ) {
 assert ( lower <= upper ) ;
 if ( lower != UNK translation || upper != UNK translation ) {
 m_body a . set awake ( true ) ;
 m_body b . set awake ( true ) ;
 UNK translation = lower ;
 UNK translation = upper ;
 UNK . z = DecimalFloatingPoint ;
 }
 }
comment:
START set the joint limits , usually in meters . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
protected void remove session bean instance ( object ejb ) {
 if ( ejb != null && ! this . home as component ) {
 try {
 ejb . remove ( ) ;
 }
 catch ( throwable ex ) {
 logger . warn ( String , ex ) ;
 }
 }
 }
comment:
START remove the given ejb instance . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
remove the UNK of the given UNK .
returns the list of UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
public set < media type expression > get expressions ( ) {
 return new linked hash set < > ( this . expressions ) ;
 }
comment:
START return the contained `` produces '' expressions . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static long get long ( string key , long def ) {
 if ( key . length ( ) > prop_ name_ x ) {
 throw new illegal argument exception ( String + prop_ name_ x ) ;
 }
 return UNK ( key , def ) ;
 }
comment:
START get the value for the given key , and return as a long . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void set schema ( resource schema resource ) {
 this . schema resources = new resource [ ] {
 schema resource }
 ;
 }
comment:
START set the schema resource to use for validation . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
@ override public e get ( long sequence ) {
 return element at ( sequence ) ;
 }
comment:
START get the event for a given sequence in the ring buffer . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public double element sum ( ) {
 return x + y + z + w ;
 }
comment:
START return the element sum of vector @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
builder add lenient ( string line ) {
 int index = line . index of ( String , DecimalInteger ) ;
 if ( index != - DecimalInteger ) {
 return add lenient ( line . substring ( DecimalInteger , index ) , line . substring ( index + DecimalInteger ) ) ;
 }
 else if ( line . starts with ( String ) ) {
 return add lenient ( String , line . substring ( DecimalInteger ) ) ;
 }
 else {
 return add lenient ( String , line ) ;
 }
 }
comment:
START add a header line without any validation . END
BLUE1:0.285714285714
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add a new UNK to the UNK .
add the UNK UNK to the given UNK .
add the UNK UNK to the UNK

code:
public void set evaluator ( type evaluator evaluator ) {
 evaluator = evaluator ;
 }
comment:
START sets the type evaluator to be used when calculating animated values . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
private pointcut expression get fallback pointcut expression ( class < ? > target class ) {
 try {
 class loader class loader = target class . get class loader ( ) ;
 if ( class loader != null && class loader != this . pointcut class loader ) {
 return build pointcut expression ( class loader ) ;
 }
 }
 catch ( throwable ex ) {
 logger . debug ( String , ex ) ;
 }
 return null ;
 }
comment:
START get a new pointcut expression based on a target class 's loader rather than the default . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean verify drawable ( drawable who ) {
 for ( int i = DecimalInteger ;
 i < holders . size ( ) ;
 ++ i ) {
 if ( who == get ( i ) . get top level drawable ( ) ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START returns true if the argument is a top-level drawable in this holder . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public abstract list < runtime permission presentation info > on get app permissions ( string package name ) ;
comment:
START gets the runtime permissions for an app . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
protected void get image bounds ( rect f out bounds ) {
 get hierarchy ( ) . get actual image bounds ( out bounds ) ;
 }
comment:
START gets the original image bounds , in view-absolute coordinates . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
protected abstract response new response ( request request , int total shards , int successful shards , int failed shards , list < shard operation result > results , list < shard operation failed exception > shard failures , cluster state cluster state ) ;
comment:
START creates a new response to the underlying request . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
listenable future < ? > put ( string url , http entity < ? > request , map < string , ? > uri variables ) throws rest client exception ;
comment:
START creates a new resource by putting the given object to uri template . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK for the given file .

code:
public path [ ] available shard paths ( shard id shard id ) {
 assert env is locked ( ) ;
 final node path [ ] node paths = node paths ( ) ;
 final path [ ] shard locations = new path [ node paths . length ] ;
 for ( int i = DecimalInteger ;
 i < node paths . length ;
 i ++ ) {
 shard locations [ i ] = node paths [ i ] . resolve ( shard id ) ;
 }
 return shard locations ;
 }
comment:
START returns all shard paths excluding custom shard path . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
private static view group find ancestor to take focus in touch mode ( view focused ) {
 view parent parent = focused . get parent ( ) ;
 while ( parent instanceof view group ) {
 final view group vg parent = ( view group ) parent ;
 if ( vg parent . get descendant focusability ( ) == view group . focus_ after_ s && vg parent . is focusable in touch mode ( ) ) {
 return vg parent ;
 }
 if ( vg parent . is root namespace ( ) ) {
 return null ;
 }
 else {
 parent = vg parent . get parent ( ) ;
 }
 }
 return null ;
 }
comment:
START find an ancestor of focused that wants focus after its descendants and is focusable in touch mode . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
@ non null public string get root ( ) {
 if ( ! is connected ( ) ) {
 throw new illegal state exception ( String + get state label ( state ) + String ) ;
 }
 return mroot id ;
 }
comment:
START gets the root id . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK for .

code:
public void set host ( string host ) {
 set ( t , host ) ;
 }
comment:
START set the host header . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
default void create table ( connector session session , connector table metadata table metadata ) {
 throw new presto exception ( not_ d , String ) ;
 }
comment:
START creates a table using the specified table metadata . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public string get component id ( int task id ) {
 if ( task id == constants . system_ task_ d ) {
 return constants . system_ component_ d ;
 }
 else {
 return UNK to component . get ( task id ) ;
 }
 }
comment:
START gets the component id for the specified task id . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static late directory info create ( path target , path fragment src , UNK mode pkg mode , string metadata , fileset entry . symlink behavior symlink behavior ) {
 return new late directory info ( target , src , pkg mode , metadata , symlink behavior ) ;
 }
comment:
START create a late directory info object with the specified attributes . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set servlet names ( collection < string > servlet names ) {
 assert . not null ( servlet names , String ) ;
 this . servlet names = new linked hash set < string > ( servlet names ) ;
 }
comment:
START set servlet names that the filter will be registered against . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public boolean UNK ( tuple domain < t > other ) {
 return ! this . intersect ( other ) . is none ( ) ;
 }
comment:
START returns true only if there exists a strict intersection between the tuple domains . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
protected boolean is bean definition lazy init ( listable bean factory bean factory , string bean name ) {
 return ( bean factory instanceof configurable listable bean factory && bean factory . contains bean definition ( bean name ) && ( ( configurable listable bean factory ) bean factory ) . get bean definition ( bean name ) . is lazy init ( ) ) ;
 }
comment:
START return whether the specified bean definition should be considered as lazy-init . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public char sequence get undo label ( undo owner [ ] owners ) {
 undo state state = get top undo ( owners ) ;
 return state != null ? state . get label ( ) : null ;
 }
comment:
START return the user-visible label for the top undo state on the stack . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static date time context get date time context ( ) {
 return date time context holder . get ( ) ;
 }
comment:
START return the date time context associated with the current thread , if any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static < k , v > builder < k , v > ordered by ( comparator < k > comparator ) {
 return new builder < k , v > ( comparator ) ;
 }
comment:
START returns a builder that creates immutable sorted maps with an explicit comparator . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public static uri with appended path ( uri base uri , string path segment ) {
 builder builder = base uri . build UNK ( ) ;
 builder = builder . append encoded path ( path segment ) ;
 return builder . build ( ) ;
 }
comment:
START creates a new uri by appending an UNK path segment to a base uri . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void add file ( multipart file file ) {
 assert . not null ( file , String ) ;
 this . multipart files . add ( file . get name ( ) , file ) ;
 }
comment:
START add a file to this request . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public static drawable create from resource stream ( resources res , typed value value , input stream is , string src name , bitmap factory . options opts ) {
 if ( is == null ) {
 return null ;
 }
 rect pad = new rect ( ) ;
 if ( opts == null ) opts = new bitmap factory . options ( ) ;
 opts . in screen density = drawable . resolve density ( res , DecimalInteger ) ;
 bitmap bm = bitmap factory . decode resource stream ( res , value , is , pad , opts ) ;
 if ( bm != null ) {
 byte [ ] np = bm . get nine patch chunk ( ) ;
 if ( np == null || ! nine patch . is nine patch chunk ( np ) ) {
 np = null ;
 pad = null ;
 }
 final rect optical insets = new rect ( ) ;
 bm . get optical insets ( optical insets ) ;
 return drawable from bitmap ( res , bm , np , pad , optical insets , src name ) ;
 }
 return null ;
 }
comment:
START create a drawable from an inputstream , using the given resources and value to determine density information . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
completable future < buffer result > get task results ( task id task id , output buffer id buffer id , long starting sequence id , data size max size ) ;
comment:
START gets results from a task either immediately or in the future . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void set session factory ( session factory session factory ) {
 this . session factory = session factory ;
 }
comment:
START set the session factory that this instance should manage transactions for . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static empty target source for class ( class < ? > target class ) {
 return for class ( target class , true ) ;
 }
comment:
START return an empty target source for the given target class . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public builder domain ( string domain ) {
 return domain ( domain , false ) ;
 }
comment:
START set the domain pattern for this cookie . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private int get end ( int offset , boolean get next word end on two word boundary ) {
 final int shifted offset = offset - moffset shift ;
 check offset is valid ( shifted offset ) ;
 if ( is after letter or digit ( shifted offset ) ) {
 if ( iterator . is boundary ( shifted offset ) && ( ! is on letter or digit ( shifted offset ) || ! get next word end on two word boundary ) ) {
 return shifted offset + moffset shift ;
 }
 else {
 return iterator . UNK ( shifted offset ) + moffset shift ;
 }
 }
 else {
 if ( is on letter or digit ( shifted offset ) ) {
 return iterator . UNK ( shifted offset ) + moffset shift ;
 }
 }
 return break iterator . e ;
 }
comment:
START returns break iterator. e if there is no next boundary . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK UNK that be UNK for the UNK .

code:
protected message create response message ( message request , session session , remote invocation result result ) throws exception {
 message response = this . message converter . to message ( result , session ) ;
 string correlation = request . get UNK d ( ) ;
 if ( correlation == null ) {
 correlation = request . get UNK d ( ) ;
 }
 response . set UNK d ( correlation ) ;
 return response ;
 }
comment:
START create the invocation result response message . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static < k , v > function < k , v > for map ( map < k , v > map ) {
 return new function for map no default < k , v > ( map ) ;
 }
comment:
START returns a function which performs a map lookup . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
public float get joint translation ( ) {
 return joint . get joint translation ( ) ;
 }
comment:
START get the current joint translation , usually in meters . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public view find nearest touchable ( view group root , int x , int y , int direction , int [ ] deltas ) {
 array list < view > touchables = root . get touchables ( ) ;
 int min distance = integer . max_ e ;
 view closest = null ;
 int num touchables = touchables . size ( ) ;
 int edge slop = view configuration . get ( root . context ) . get scaled edge slop ( ) ;
 rect closest bounds = new rect ( ) ;
 rect touchable bounds = UNK rect ;
 for ( int i = DecimalInteger ;
 i < num touchables ;
 i ++ ) {
 view touchable = touchables . get ( i ) ;
 touchable . get drawing rect ( touchable bounds ) ;
 root . offset rect between parent and child ( touchable , touchable bounds , true , true ) ;
 if ( ! is touch candidate ( x , y , touchable bounds , direction ) ) {
 continue ;
 }
 int distance = integer . max_ e ;
 switch ( direction ) {
 case view . focus_ t : distance = x - touchable bounds . right + DecimalInteger ;
 break ;
 case view . focus_ t : distance = touchable bounds . left ;
 break ;
 case view . focus_ p : distance = y - touchable bounds . bottom + DecimalInteger ;
 break ;
 case view . focus_ n : distance = touchable bounds . top ;
 break ;
 }
 if ( distance < edge slop ) {
 if ( closest == null || closest bounds . contains ( touchable bounds ) || ( ! touchable bounds . contains ( closest bounds ) && distance < min distance ) ) {
 min distance = distance ;
 closest = touchable ;
 closest bounds . set ( touchable bounds ) ;
 switch ( direction ) {
 case view . focus_ t : deltas [ DecimalInteger ] = - distance ;
 break ;
 case view . focus_ t : deltas [ DecimalInteger ] = distance ;
 break ;
 case view . focus_ p : deltas [ DecimalInteger ] = - distance ;
 break ;
 case view . focus_ n : deltas [ DecimalInteger ] = distance ;
 break ;
 }
 }
 }
 }
 return closest ;
 }
comment:
START find the nearest touchable view to the specified view . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK

code:
public map < global stream id , grouping > get sources ( string component id ) {
 return get component common ( component id ) . UNK ( ) ;
 }
comment:
START gets the declared inputs to the specified component . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public rect get pre corrected active array size checked ( ) {
 key < rect > key = camera characteristics . sensor_ info_ UNK correction_ active_ array_ e ;
 rect active array = get value from key non null ( key ) ;
 if ( active array == null ) {
 return new rect ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger ) ;
 }
 size pixel array size = get pixel array size checked ( ) ;
 check true for key ( key , String , active array . left >= DecimalInteger && active array . top >= DecimalInteger ) ;
 check true for key ( key , String , active array . width ( ) <= pixel array size . get width ( ) && active array . height ( ) <= pixel array size . get height ( ) ) ;
 return active array ;
 }
comment:
START get and check UNK active array size . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
public static < e > builder < e > ordered by ( comparator < e > comparator ) {
 return new builder < e > ( comparator ) ;
 }
comment:
START returns a builder that creates immutable sorted sets with an explicit comparator . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public collection < configured target > get targets to build ( ) {
 return targets to build ;
 }
comment:
START returns configured targets to build . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public aggregated critical path < simple critical path component > aggregate ( ) {
 immutable list . builder < simple critical path component > components = immutable list . builder ( ) ;
 simple critical path component max critical path = get max critical path ( ) ;
 if ( max critical path == null ) {
 return new aggregated critical path < > ( DecimalInteger , components . build ( ) ) ;
 }
 simple critical path component child = max critical path ;
 while ( child != null ) {
 components . add ( child ) ;
 child = child . get child ( ) ;
 }
 return new aggregated critical path < > ( max critical path . get aggregated elapsed time millis ( ) , components . build ( ) ) ;
 }
comment:
START return the critical path stats for the current command execution . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public environment new environment ( ) throws exception {
 if ( test mode == null ) {
 throw new illegal argument exception ( String + String ) ;
 }
 return test mode . create environment ( get event handler ( ) , null ) ;
 }
comment:
START creates a new environment suitable for the test case . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public java compilation args build ( java semantics semantics ) {
 preconditions . check state ( output != null , String ) ;
 java target attributes . builder attributes = new java target attributes . builder ( semantics ) ;
 attributes . add source jars ( source jars ) ;
 add deps to attributes ( attributes ) ;
 attributes . set strict java deps ( strict deps mode ) ;
 attributes . set rule kind ( rule context . get rule ( ) . get rule class ( ) ) ;
 attributes . set target label ( rule context . get label ( ) ) ;
 if ( is strict ( ) && classpath mode != java classpath mode . f ) {
 java compilation helper . add dependency artifacts to attributes ( attributes , deps ) ;
 }
 java compilation artifacts . builder artifacts builder = new java compilation artifacts . builder ( ) ;
 java compilation helper helper = new java compilation helper ( rule context , semantics , javac opts , attributes , implicit attributes suffix ) ;
 artifact output deps proto = helper . create output deps proto artifact ( output , artifacts builder ) ;
 helper . create compile action ( output , null , null , output deps proto , null ) ;
 helper . create compile time jar action ( output , artifacts builder ) ;
 artifacts builder . add runtime jar ( output ) ;
 return java compilation args . builder ( ) . merge ( artifacts builder . build ( ) ) . build ( ) ;
 }
comment:
START creates the compile actions . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set progress bar image ( int resource id ) {
 set progress bar image ( resources . get drawable ( resource id ) ) ;
 }
comment:
START sets a new progress bar drawable with old scale type . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
byte buf slice ( int data , int padding , boolean end of stream ) {
 if ( data != prev data || padding != prev padding || end of stream != flags . end of stream ( ) || frame header == null ) {
 prev data = data ;
 prev padding = padding ;
 flags . padding present ( padding > DecimalInteger ) ;
 flags . end of stream ( end of stream ) ;
 frame header = buffer . read slice ( data_ frame_ header_ h ) . writer index ( DecimalInteger ) ;
 int payload length = data + padding ;
 write frame header internal ( frame header , payload length , a , flags , stream id ) ;
 write padding length ( frame header , padding ) ;
 }
 return frame header . slice ( ) ;
 }
comment:
START gets the frame header buffer configured for the current frame . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public query cache stats get stats ( shard id shard ) {
 final map < shard id , query cache stats > stats = new hash map < > ( ) ;
 for ( map . entry < shard id , stats > entry : shard stats . entry set ( ) ) {
 stats . put ( entry . get key ( ) , entry . get value ( ) . to query cache stats ( ) ) ;
 }
 query cache stats shard stats = new query cache stats ( ) ;
 query cache stats info = stats . get ( shard ) ;
 if ( info == null ) {
 info = new query cache stats ( ) ;
 }
 shard stats . add ( info ) ;
 long total size = DecimalInteger ;
 for ( query cache stats s : stats . values ( ) ) {
 total size += s . get cache size ( ) ;
 }
 final double weight = total size == DecimalInteger ? DecimalFloatingPoint / stats . size ( ) : shard stats . get cache size ( ) / total size ;
 final long additional ram bytes used = math . round ( weight * shared ram bytes used ) ;
 shard stats . add ( new query cache stats ( additional ram bytes used , DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger ) ) ;
 return shard stats ;
 }
comment:
START get usage statistics for the given shard . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
private int get position by identifier ( long identifier ) {
 int found = - DecimalInteger ;
 if ( maccount header builder . profiles != null && identifier >= DecimalInteger ) {
 for ( int i = DecimalInteger ;
 i < maccount header builder . profiles . size ( ) ;
 i ++ ) {
 if ( maccount header builder . profiles . get ( i ) != null ) {
 if ( maccount header builder . profiles . get ( i ) . get identifier ( ) == identifier ) {
 found = i ;
 break ;
 }
 }
 }
 }
 return found ;
 }
comment:
START gets the position of a profile by it 's identifier @param identifier @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public boolean is insert ( ) {
 return type == type_ t ;
 }
comment:
START returns true if the operation represents an insertion . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
final fork join task < ? > peek ( ) {
 fork join task < ? > [ ] a = array ;
 int m ;
 if ( a == null || ( m = a . length - DecimalInteger ) < DecimalInteger ) return null ;
 int i = mode == DecimalInteger ? top - DecimalInteger : base ;
 int j = ( ( i & m ) << t ) + e ;
 return ( fork join task < ? > ) u . get object volatile ( a , j ) ;
 }
comment:
START returns next task , if one exists , in order specified by mode . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean before ( time that ) {
 return time . compare ( this , that ) < DecimalInteger ;
 }
comment:
START returns true if the time represented by this time object occurs before the given time . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public filter function builder [ ] filter function builders ( ) {
 return this . filter function builders ;
 }
comment:
START returns the filters and functions END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public boolean has mime type ( string mime type ) {
 return mime utils . has mime type ( mime type ) ;
 }
comment:
START return true if the given mime type has an entry in the map . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public jack compilation helper . builder add compiled jars ( collection < artifact > compiled jars ) {
 this . exported non library files . add all ( preconditions . check not null ( compiled jars ) ) ;
 this . classpath non library files . add all ( compiled jars ) ;
 this . dex jars . add all ( compiled jars ) ;
 return this ;
 }
comment:
START adds a collection of jar files to be converted to jack libraries . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static < t > t required unique result ( collection < t > results ) throws incorrect result size data access exception {
 int size = ( results != null ? results . size ( ) : DecimalInteger ) ;
 if ( size == DecimalInteger ) {
 throw new empty result data access exception ( DecimalInteger ) ;
 }
 if ( ! collection utils . has unique object ( results ) ) {
 throw new incorrect result size data access exception ( DecimalInteger , size ) ;
 }
 return results . iterator ( ) . next ( ) ;
 }
comment:
START return a unique result object from the given collection . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
START find the _ fields constant that matches name , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set collector ( internal profile collector collector ) {
 if ( this . collector != null ) {
 throw new illegal state exception ( String ) ;
 }
 this . collector = objects . require non null ( collector ) ;
 }
comment:
START set the collector that is associated with this profiler . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given view .
sets the UNK of the given UNK .

code:
public validator get validator ( ) {
 return ( this . validators . size ( ) > DecimalInteger ? this . validators . get ( DecimalInteger ) : null ) ;
 }
comment:
START return the primary validator to apply after each binding step , if any . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public bundle get app widget options ( int app widget id ) {
 if ( service == null ) {
 return bundle . y ;
 }
 try {
 return service . get app widget options ( mpackage name , app widget id ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START get the extras associated with a given widget instance . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static query create ( query shard context context , base geo point field mapper . legacy geo point field type field type , string geohash , @ nullable list < char sequence > geohashes ) {
 mapped field type geo hash mapper = field type . geo hash field type ( ) ;
 if ( geo hash mapper == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( geohashes == null || geohashes . size ( ) == DecimalInteger ) {
 return geo hash mapper . term query ( geohash , context ) ;
 }
 else {
 geohashes . add ( geohash ) ;
 return geo hash mapper . terms query ( geohashes , context ) ;
 }
 }
comment:
START create a new geohash filter for a given set of geohashes . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
used to the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK , in the UNK .

code:
public static string get missing permission message ( @ non null permission requirement requirement , @ non null string call name , @ non null permission holder permissions ) {
 return string . format ( String , call name , requirement . describe missing permissions ( permissions ) ) ;
 }
comment:
START returns the error message shown when a given call is missing one or more permissions END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public mock http servlet request builder headers ( http headers http headers ) {
 media type media type = http headers . get content type ( ) ;
 if ( media type != null ) {
 this . content type = media type . to string ( ) ;
 }
 for ( string name : http headers . key set ( ) ) {
 object [ ] values = object utils . to object array ( http headers . get ( name ) . to array ( ) ) ;
 add to multi value map ( this . headers , name , values ) ;
 }
 return this ;
 }
comment:
START add all headers to the request . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of the UNK .
returns the list of all UNK .
returns the list of UNK UNK to the UNK .

code:
@ override public sync adapter type [ ] get sync adapter types ( ) {
 return get sync adapter types as user ( user handle . get calling user id ( ) ) ;
 }
comment:
START get information about the sync adapters that are known to the system . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
final void add reverse dep to signal ( sky key new reverse dep ) {
 UNK UNK l . add reverse deps ( this , collections . singleton ( new reverse dep ) ) ;
 }
comment:
START adds a reverse dependency that should be notified when this entry is done . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
add the UNK UNK to the given UNK .

code:
public list < plugin info > get plugin infos ( ) {
 list < plugin info > plugins = new array list < > ( this . plugins ) ;
 collections . sort ( plugins , ( p1 , p2 ) -> p1 . get name ( ) . compare to ( p2 . get name ( ) ) ) ;
 return plugins ;
 }
comment:
START returns an ordered list based on plugins name END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void put ( string key , boolean value ) {
 values . put ( key , value ) ;
 }
comment:
START adds a value to the set . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public long remaining capacity ( ) {
 return sequencer . remaining capacity ( ) ;
 }
comment:
START get the remaining capacity for this ring buffer . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
protected object get principal ( map < string , object > map ) {
 object principal = this . principal extractor . extract principal ( map ) ;
 return ( principal == null ? String : principal ) ;
 }
comment:
START return the principal that should be used for the token . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
protected long get file timestamp ( string resource url ) {
 servlet context resource resource = new servlet context resource ( get servlet context ( ) , resource url ) ;
 try {
 long last modified time = resource . last modified ( ) ;
 if ( logger . is debug enabled ( ) ) {
 logger . debug ( String + resource + String + last modified time ) ;
 }
 return last modified time ;
 }
 catch ( exception ex ) {
 logger . warn ( String + resource + String ) ;
 return - DecimalInteger ;
 }
 }
comment:
START return the file timestamp for the given resource . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private file get UNK file ( string dir name , string file name ) {
 file UNK file = new file ( system . get property ( String ) + String + system . get property ( String ) + String + dir name , file name ) ;
 if ( can write ( UNK file ) ) return UNK file ;
 try {
 file file = file . create temp file ( dir name , null ) ;
 if ( file . delete ( ) ) {
 file = new file ( file , file name ) ;
 if ( can write ( file ) ) return file ;
 }
 }
 catch ( exception ignored ) {
 }
 file file = new file ( system . get property ( String ) + String + dir name , file name ) ;
 if ( can write ( file ) ) return file ;
 file = new file ( String + dir name , file name ) ;
 if ( can write ( file ) ) return file ;
 if ( system . getenv ( String ) != null ) return UNK file ;
 return null ;
 }
comment:
START returns a path to a file that can be written . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public < t > t get sticky event ( class < t > event type ) {
 synchronized ( sticky events ) {
 return event type . cast ( sticky events . get ( event type ) ) ;
 }
 }
comment:
START gets the most recent sticky event for the given type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get value as int ( int default value ) {
 int [ ] i = get value as ints ( ) ;
 if ( i == null || i . length < DecimalInteger ) {
 return default value ;
 }
 return i [ DecimalInteger ] ;
 }
comment:
START gets the value as an int . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected static void add tlv ( byte buffer buf , byte type , string str ) {
 try {
 add tlv ( buf , type , str . get bytes ( String ) ) ;
 }
 catch ( unsupported encoding exception e ) {
 throw new illegal argument exception ( String + str ) ;
 }
 }
comment:
START adds an optional parameter containing an ascii string . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add an UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK to the UNK .

code:
map < k , value difference < v > > entries UNK ( ) ;
comment:
START returns an unmodifiable map describing keys that appear in both maps , but with different values . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public properties get jndi environment ( ) {
 return this . jndi template . get environment ( ) ;
 }
comment:
START return the jndi environment to use for jndi lookups . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public map < string , string > per field analyzer ( ) {
 return per field analyzer ;
 }
comment:
START return the overridden analyzers at each field . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
void get ( get request request , action listener < get response > listener ) ;
comment:
START gets the document that was indexed from an index with a type and id . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
protected blocking queue < runnable > create queue ( int queue capacity ) {
 if ( queue capacity > DecimalInteger ) {
 return new linked blocking queue < > ( queue capacity ) ;
 }
 else {
 return new synchronous queue < > ( ) ;
 }
 }
comment:
START create the blocking queue to use for the thread pool executor . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public boolean build runfiles ( ) {
 return options . build runfiles ;
 }
comment:
START returns true if we are building runfiles symlinks for this configuration . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public mesh part part ( final string id , final mesh mesh , int primitive type , final material material ) {
 return part ( id , mesh , primitive type , DecimalInteger , mesh . get num indices ( ) , material ) ;
 }
comment:
START adds the specified mesh part to the current node . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ override public synchronized void remove ( string key ) {
 boolean deleted = get file for key ( key ) . delete ( ) ;
 remove entry ( key ) ;
 if ( ! deleted ) {
 volley log . d ( String , key , get filename for key ( key ) ) ;
 }
 }
comment:
START removes the specified key from the cache if it exists . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean is closed ( ) {
 return state == state_ d ;
 }
comment:
START returns true if this connection is closed . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set status ( char sequence status ) {
 set status int ( status ) ;
 }
comment:
START set the current user-visible status for this route . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ thread safe public static path fragment remove extension ( path fragment path ) {
 return path . replace name ( remove extension ( path . get base name ( ) ) ) ;
 }
comment:
START removes the shortest suffix beginning with ' . ' END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public list < integer > get supported preview formats ( ) {
 string str = get ( key_ preview_ t + supported_ values_ x ) ;
 array list < integer > formats = new array list < integer > ( ) ;
 for ( string s : split ( str ) ) {
 int f = pixel format for camera format ( s ) ;
 if ( f == image format . n ) continue ;
 formats . add ( f ) ;
 }
 return formats ;
 }
comment:
START gets the supported preview formats . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public array set < string > get pinned shortcut ids ( @ non null string package name , @ user id int int package user id ) {
 return UNK shortcuts . get ( package with user . of ( package user id , package name ) ) ;
 }
comment:
START return the pinned shortcut ids for the publisher package . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set validator ( validator validator ) {
 validator = validator ;
 }
comment:
START sets the validator used to perform text validation . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of UNK UNK

code:
@ override public boolean is drawn lw ( ) {
 return mhas surface && ! UNK && ( mwin animator . mdraw state == window state animator . UNK to_ w || mwin animator . mdraw state == window state animator . has_ n ) ;
 }
comment:
START returns true if the window has a surface that it has drawn a complete ui in to . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public file handle get file handle ( string path , file type type ) ;
comment:
START returns a handle representing a file or directory . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public static string identity to string ( object obj ) {
 if ( obj == null ) {
 return empty_ g ;
 }
 return obj . get class ( ) . get name ( ) + String + get identity hex string ( obj ) ;
 }
comment:
START return a string representation of an object 's overall identity . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean has vertical scroll bar ( ) {
 return compute vertical scroll range ( ) > compute vertical scroll extent ( ) ;
 }
comment:
START return true if the edit text is currently showing a scroll bar . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set domains ( string domains ) {
 domains = domains ;
 }
comment:
START sets the dns domain search path used on this link . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public event bus options set cluster public host ( string cluster public host ) {
 this . cluster public host = cluster public host ;
 return this ;
 }
comment:
START set the public facing hostname to be used for clustering . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static < f , t > function < f , t > function ( checked function < f , t > function ) {
 return input -> {
 try {
 return function . apply ( input ) ;
 }
 catch ( exception e ) {
 if ( e instanceof runtime exception ) {
 throw ( runtime exception ) e ;
 }
 throw new runtime exception ( e ) ;
 }
 }
 ;
 }
comment:
START return a function which UNK possible checked exceptions as runtime exception . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void remove accuracy ( ) {
 accuracy = DecimalFloatingPoint ;
 mfields mask &= ~ has_ UNK k ;
 }
comment:
START remove the accuracy from this location . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
remove the UNK of the given UNK .
returns the list of UNK .
returns the list of UNK UNK to be UNK .
returns the list of UNK UNK

code:
@ system api public int get wifi ap state ( ) {
 try {
 return service . get wifi ap enabled state ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START gets the wi- fi enabled state . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public subtitle track add track ( media format format ) {
 synchronized ( renderers ) {
 for ( renderer renderer : renderers ) {
 if ( renderer . supports ( format ) ) {
 subtitle track track = renderer . create track ( format ) ;
 if ( track != null ) {
 synchronized ( tracks ) {
 if ( tracks . size ( ) == DecimalInteger ) {
 UNK manager . add UNK change listener ( UNK change listener ) ;
 }
 tracks . add ( track ) ;
 }
 return track ;
 }
 }
 }
 }
 return null ;
 }
comment:
START adds a new , external subtitle track to the manager . END
BLUE1:0.285714285714
--generate--
returns the value of the UNK .
returns the value for the given index .
returns the value of the UNK UNK .
returns the value of the given UNK .
returns the value for the given UNK .

code:
@ style public int get rating style ( ) {
 return mrating style ;
 }
comment:
START return the rating style . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public builder set width ( int width ) {
 width = width ;
 if ( ellipsize == null ) {
 mellipsized width = width ;
 }
 return this ;
 }
comment:
START set the width . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes in the UNK .
returns the number of bytes in the request

code:
public char sequence get confirm label ( ) {
 return UNK label ;
 }
comment:
START get the label to display to confirm that the action should be executed . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public boolean has access ( int uid ) {
 return display . has access ( uid ) ;
 }
comment:
START returns true if the specified uid has access to this display . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public static string find main class ( jar file jar file , string classes location ) throws exception {
 return do with main classes ( jar file , classes location , new class name callback < string > ( ) {
 @ override public string do with ( string class name ) {
 return class name ;
 }
 }
 ) ;
 }
comment:
START find the main class in a given jar file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
@ deprecated public static string get string ( int UNK ) {
 return locale data . get ( locale . get default ( ) ) . am pm [ UNK - calendar . m ] ;
 }
comment:
START return a localized string for UNK or pm . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public float get motor torque ( float inv dt ) {
 return joint . get motor torque ( inv dt ) ;
 }
comment:
START get the current motor torque given the inverse time step , usually in n-m . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private final state info add state ( state state , state parent ) {
 if ( dbg ) {
 sm . log ( String + state . get name ( ) + String + ( ( parent == null ) ? String : parent . get name ( ) ) ) ;
 }
 state info parent state info = null ;
 if ( parent != null ) {
 parent state info = mstate info . get ( parent ) ;
 if ( parent state info == null ) {
 parent state info = add state ( parent , null ) ;
 }
 }
 state info state info = mstate info . get ( state ) ;
 if ( state info == null ) {
 state info = new state info ( ) ;
 mstate info . put ( state , state info ) ;
 }
 if ( ( state info . parent state info != null ) && ( state info . parent state info != parent state info ) ) {
 throw new runtime exception ( String ) ;
 }
 state info . state = state ;
 state info . parent state info = parent state info ;
 state info . active = false ;
 if ( dbg ) sm . log ( String + state info ) ;
 return state info ;
 }
comment:
START add a new state to the state machine . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public t UNK object ( ) {
 t object ;
 if ( ( object = pool . poll ( ) ) == null ) {
 object = create object ( ) ;
 }
 return object ;
 }
comment:
START gets the next free object from the pool . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK

code:
@ view debug . exported property public object get tag ( ) {
 return tag ;
 }
comment:
START returns this view 's tag . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static double get distance ( url device url device ) {
 return region_ r . get distance ( url device . get id ( ) ) ;
 }
comment:
START gets the distance for device from the region resolver . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public node < t > create node ( t label ) {
 if ( label == null ) {
 throw new null pointer exception ( ) ;
 }
 node < t > n = nodes . get ( label ) ;
 if ( n == null ) {
 nodes . put ( label , n = new node < t > ( label , next hash code ++ ) ) ;
 }
 return n ;
 }
comment:
START find or create a node with the specified label . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public float get scale factor ( ) {
 if ( in UNK scale mode ( ) ) {
 final boolean scale up = ( mevent before or above starting gesture event && ( mcurr span < mprev span ) ) || ( ! mevent before or above starting gesture event && ( mcurr span > mprev span ) ) ;
 final float span diff = ( math . abs ( DecimalInteger - ( mcurr span / mprev span ) ) * scale_ r ) ;
 return mprev span <= DecimalInteger ? DecimalInteger : scale up ? ( DecimalInteger + span diff ) : ( DecimalInteger - span diff ) ;
 }
 return mprev span > DecimalInteger ? mcurr span / mprev span : DecimalInteger ;
 }
comment:
START return the scaling factor from the previous scale event to the current event . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public entry get total ( entry recycle ) {
 return get total ( recycle , null , UNK l , false ) ;
 }
comment:
START return total of all fields represented by this snapshot object . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean set value ( string value ) {
 if ( mdata type != type_ i && mdata type != type_ d ) {
 return false ;
 }
 byte [ ] buf = value . get bytes ( us_ i ) ;
 byte [ ] final buf = buf ;
 if ( buf . length > DecimalInteger ) {
 final buf = ( buf [ buf . length - DecimalInteger ] == DecimalInteger || mdata type == type_ d ) ? buf : arrays . copy of ( buf , buf . length + DecimalInteger ) ;
 }
 else if ( mdata type == type_ i && mcomponent count actual == DecimalInteger ) {
 final buf = new byte [ ] {
 DecimalInteger }
 ;
 }
 int count = final buf . length ;
 if ( check bad component count ( count ) ) {
 return false ;
 }
 mcomponent count actual = count ;
 value = final buf ;
 return true ;
 }
comment:
START sets a string value into this tag . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set exit message ( string exit message ) {
 assert . has text ( exit message , String ) ;
 check for invalid placeholders ( exit message ) ;
 assert . does not contain ( exit message , placeholder_ n , String + placeholder_ n + String ) ;
 this . exit message = exit message ;
 }
comment:
START set the template used for method exit log messages . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void create generate apk action ( artifact apk , string rename manifest package , list < string > aapt opts , list < string > densities ) {
 list < string > args ;
 if ( rename manifest package == null ) {
 args = create aapt command ( String , apk , null , true , String , apk . get exec path string ( ) ) ;
 }
 else {
 args = create aapt command ( String , apk , null , true , String , apk . get exec path string ( ) , String , rename manifest package ) ;
 }
 if ( ! densities . is empty ( ) ) {
 args . add ( DecimalInteger , String ) ;
 args . add ( DecimalInteger , String ) ;
 args . add all ( DecimalInteger , densities ) ;
 }
 args . add all ( aapt opts ) ;
 rule context . register action ( new spawn action . builder ( ) . add inputs ( get inputs ( ) ) . add tool ( android sdk provider . from rule context ( rule context ) . get aapt ( ) ) . add output ( apk ) . set executable ( rule context . get executable prerequisite ( String , mode . t ) ) . set command line ( command line . of ( args , false ) ) . use parameter file ( parameter file type . d ) . set progress message ( String ) . set mnemonic ( String ) . build ( rule context ) ) ;
 }
comment:
START creates an action that will invoke aapt to package the android resources into an apk file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public static long get total rx bytes ( ) {
 return native get total stat ( type_ UNK s ) ;
 }
comment:
START return number of bytes received since device boot . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void set geo pull ft supported ( boolean geo pull ft supported ) {
 this . UNK pull ft supported = geo pull ft supported ;
 }
comment:
START sets geo location pull using file transfer as supported or not supported . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set max motor torque ( float torque ) {
 joint . set max motor torque ( torque ) ;
 }
comment:
START set the maximum motor torque , usually in n-m . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private UNK list popup window get list popup window ( ) {
 if ( mlist popup window == null ) {
 mlist popup window = new UNK list popup window ( get context ( ) ) ;
 mlist popup window . set adapter ( adapter ) ;
 mlist popup window . set anchor view ( activity chooser view . this ) ;
 mlist popup window . set modal ( true ) ;
 mlist popup window . set on item click listener ( callbacks ) ;
 mlist popup window . set on dismiss listener ( callbacks ) ;
 }
 return mlist popup window ;
 }
comment:
START gets the list popup window which is lazily initialized . END
BLUE1:0.285714285714
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public void set motor speed ( float speed ) {
 m_body a . set awake ( true ) ;
 m_body b . set awake ( true ) ;
 UNK speed = speed ;
 }
comment:
START set the motor speed , usually in meters per second . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK to .

code:
@ nullable closeable reference < v > get ( k key ) ;
comment:
START gets the item with the given key , or null if there is no such item . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
boolean is next thumbnail transition scale up ( ) {
 return mnext app transition scale up ;
 }
comment:
START returns whether the next thumbnail transition is scaling up . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .

code:
public set < string > get field names ( ) {
 int column count = ( int ) table . get column count ( ) ;
 set < string > column names = new linked hash set < > ( column count ) ;
 for ( int i = DecimalInteger ;
 i < column count ;
 i ++ ) {
 column names . add ( table . get column name ( i ) ) ;
 }
 return column names ;
 }
comment:
START returns all fields in this class . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of the UNK .
returns the list of UNK that UNK the UNK .

code:
public void set id ( string id ) {
 set ( d , id ) ;
 }
comment:
START set the id header . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public object get header value ( string name ) {
 header value holder header = header value holder . get by name ( this . headers , name ) ;
 return ( header != null ? header . get value ( ) : null ) ;
 }
comment:
START return the primary value for the given header , if any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
private int get minimum resolution level for provider use ( string provider ) {
 if ( location manager . gps_ r . equals ( provider ) || location manager . UNK r . equals ( provider ) ) {
 return resolution_ level_ e ;
 }
 else if ( location manager . network_ r . equals ( provider ) || location manager . UNK r . equals ( provider ) ) {
 return resolution_ level_ e ;
 }
 else {
 location provider interface lp = UNK providers . get ( provider ) ;
 if ( lp != null ) {
 provider properties properties = lp . get properties ( ) ;
 if ( properties != null ) {
 if ( properties . UNK UNK ) {
 return resolution_ level_ e ;
 }
 else if ( properties . UNK network || properties . UNK cell ) {
 return resolution_ level_ e ;
 }
 }
 }
 }
 return resolution_ level_ e ;
 }
comment:
START return the minimum resolution level required to use the specified location provider . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
target source get target source ( class < ? > bean class , string bean name ) ;
comment:
START create a special target source for the given bean , if any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public char sequence get package name ( ) {
 return mpackage name ;
 }
comment:
START gets the package this node comes from . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public void plug in ( group plug plug , int group ) {
 UNK . put ( group , plug ) ;
 }
comment:
START set the plug used for a specific group . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ view debug . exported property public boolean is in touch mode ( ) {
 if ( mattach info != null ) {
 return mattach info . min touch mode ;
 }
 else {
 return view root impl . is in touch mode ( ) ;
 }
 }
comment:
START returns whether the device is currently in touch mode . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public package identifier get package identifier ( ) {
 return package identifier ;
 }
comment:
START returns this packages ' identifier . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public component name resolve system service ( package manager pm , int flags ) {
 if ( component != null ) {
 return component ;
 }
 list < resolve info > results = pm . query intent services ( this , flags ) ;
 if ( results == null ) {
 return null ;
 }
 component name comp = null ;
 for ( int i = DecimalInteger ;
 i < results . size ( ) ;
 i ++ ) {
 resolve info ri = results . get ( i ) ;
 if ( ( ri . service info . application info . flags & application info . flag_ m ) == DecimalInteger ) {
 continue ;
 }
 component name found comp = new component name ( ri . service info . application info . package name , ri . service info . name ) ;
 if ( comp != null ) {
 throw new illegal state exception ( String + this + String + comp + String + found comp ) ;
 }
 comp = found comp ;
 }
 return comp ;
 }
comment:
START returns null if there are no matches . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set resource loader ( resource loader resource loader ) {
 this . resource loader = resource loader ;
 }
comment:
START set the spring resource loader to use for loading free marker template files . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public boolean is service discovery capable ( ) {
 return ( device capability & device_ UNK service_ y ) != DecimalInteger ;
 }
comment:
START returns true if the device is capable of service discovery END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public boolean contains key ( object key ) {
 return map . contains key ( key ) ;
 }
comment:
START returns true if this map contains a mapping for the specified key . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .

code:
public uri get source uri ( ) {
 return msource uri ;
 }
comment:
START gets the source uri . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public component name get activity component ( ) {
 ensure data ( ) ;
 return mactivity component ;
 }
comment:
START return the activity this assist structure came from . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public final annotation get annotation ( ) {
 return annotation strategy . get annotation ( ) ;
 }
comment:
START gets the annotation . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get schema name ( ) {
 return this . call meta data context . get schema name ( ) ;
 }
comment:
START get the schema name used . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public builder can have any provider ( ) {
 preconditions . check state ( advertised providers . is empty ( ) ) ;
 can have any provider = true ;
 return this ;
 }
comment:
START set if the rule can have any provider . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
final node < k , v > find ( int h , object k ) {
 if ( k != null ) {
 for ( node < k , v > e = first ;
 e != null ;
 e = e . next ) {
 int s ;
 k UNK ;
 if ( ( ( s = lock state ) & ( r | r ) ) != DecimalInteger ) {
 if ( e . hash == h && ( ( UNK = e . key ) == k || ( UNK != null && k . equals ( UNK ) ) ) ) return e ;
 }
 else if ( u . compare and swap int ( this , e , s , s + r ) ) {
 tree node < k , v > r , p ;
 try {
 p = ( ( r = root ) == null ? null : r . find tree node ( h , k , null ) ) ;
 }
 finally {
 thread w ;
 int ls ;
 do {
 }
 while ( ! u . compare and swap int ( this , e , ls = lock state , ls - r ) ) ;
 if ( ls == ( r | r ) && ( w = UNK ) != null ) lock support . UNK ( w ) ;
 }
 return p ;
 }
 }
 }
 return null ;
 }
comment:
START returns matching node or null if none . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public void set failure image ( int resource id , scale type scale type ) {
 set failure image ( resources . get drawable ( resource id ) , scale type ) ;
 }
comment:
START sets a new failure drawable with scale type . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public static string permission to op ( string permission ) {
 final integer op code = UNK perm to op . get ( permission ) ;
 if ( op code == null ) {
 return null ;
 }
 return UNK to string [ op code ] ;
 }
comment:
START gets the app op name associated with a given permission . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
xcontent generator create generator ( output stream os , set < string > includes , set < string > excludes ) throws exception ;
comment:
START creates a new generator using the provided output stream and some inclusive and/or exclusive filters . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
void set pitch ( int pitch ) {
 pitch = pitch ;
 }
comment:
START sets the pitch . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the request .
returns the UNK of the view .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
private void remove entry ( string key ) {
 cache header entry = entries . get ( key ) ;
 if ( entry != null ) {
 mtotal size -= entry . size ;
 entries . remove ( key ) ;
 }
 }
comment:
START removes the entry identified by ` key ' from the cache . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used for the UNK .
used to the UNK of the given UNK .
used to the UNK of the given .

code:
private string add output prefix ( string base name , string artifact name ) {
 if ( ! output prefix . is empty ( ) ) {
 return string . format ( String , base name , output prefix , artifact name ) ;
 }
 return string . format ( String , base name , artifact name ) ;
 }
comment:
START returns artifact name prefixed with an output prefix if specified . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public char get number ( ) {
 return get key character map ( ) . get number ( mkey code ) ;
 }
comment:
START gets the number or symbol associated with the key . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public body get body b ( ) {
 return world . bodies . get ( joint . get body b ( ) ) ;
 }
comment:
START get the second body attached to this joint . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public constructor < ? > get constructor ( ) {
 return this . constructor ;
 }
comment:
START return the offending constructor , if known . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void delete ( int key ) {
 int i = container helpers . binary search ( keys , size , key ) ;
 if ( i >= DecimalInteger ) {
 remove at ( i ) ;
 }
 }
comment:
START removes the mapping from the specified key , if there was any . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public boolean can start ( ) {
 return mcamera runner . can start ( ) ;
 }
comment:
START returns true if the camera can be started at this point . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
default boolean can create UNK tables ( connector session session ) {
 return false ;
 }
comment:
START returns true if this catalog supports creation of sampled tables END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void set hostname ( string hostname ) {
 this . hostname = hostname ;
 }
comment:
START set the proxy host name . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public abstract view get embedded view ( int p , context context ) ;
comment:
START return a custom embedded view to draw the plugin . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean is draw labels enabled ( ) {
 return mdraw labels ;
 }
comment:
START returns true if drawing the labels is enabled for this axis . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK .

code:
public body get body a ( ) {
 return world . bodies . get ( joint . get body a ( ) ) ;
 }
comment:
START get the first body attached to this joint . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected boolean has connection ( ) {
 return ( this . connection handle != null ) ;
 }
comment:
START return whether this holder currently has a connection . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
@ json any getter public map < string , object > get details ( ) {
 return this . details ;
 }
comment:
START return the content . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public static int get wifi port ( url device url device ) {
 try {
 return url device . get extra int ( UNK UNK y ) ;
 }
 catch ( exception e ) {
 throw new runtime exception ( String + url device . get id ( ) , e ) ;
 }
 }
comment:
START gets the url device port . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public int get timers key at ( int index ) {
 return mtimers keys [ index ] ;
 }
comment:
START get the key for the timer map at the given index . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK for the given .

code:
@ nullable public keyphrase sound model get sound model ( int keyphrase id , string bcp47 locale ) {
 if ( keyphrase id <= DecimalInteger ) {
 log . e ( g , String ) ;
 return null ;
 }
 keyphrase sound model model = null ;
 try {
 model = UNK management service . get keyphrase sound model ( keyphrase id , bcp47 locale ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String ) ;
 }
 if ( model == null ) {
 log . w ( g , String ) ;
 return null ;
 }
 else {
 return model ;
 }
 }
comment:
START gets the sound model for the given keyphrase , null if none exists . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public action graph get action graph ( final event handler event handler ) {
 return new action graph ( ) {
 @ override public action analysis metadata get generating action ( final artifact artifact ) {
 try {
 return call UNK ( new callable < action analysis metadata > ( ) {
 @ override public action analysis metadata call ( ) throws interrupted exception {
 return skyframe executor . this . get generating action ( event handler , artifact ) ;
 }
 }
 ) ;
 }
 catch ( exception e ) {
 throw new illegal state exception ( String + artifact . pretty print ( ) , e ) ;
 }
 }
 }
 ;
 }
comment:
START returns an action graph . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public vector2 get local point ( vector2 world point ) {
 tmp . set ( world point . x , world point . y ) ;
 vec2 lp = body . get local point ( tmp ) ;
 return local point2 . set ( lp . x , lp . y ) ;
 }
comment:
START gets a local point relative to the body 's origin given a world point . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get gsm asu level ( ) {
 int level = get gsm signal strength ( ) ;
 if ( g ) log ( String + level ) ;
 return level ;
 }
comment:
START get the gsm signal level as an asu value between NUMBER . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public abstract int get package uid ( string package name , @ package info flags int flags ) throws name not found exception ;
comment:
START return the uid associated with the given package name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK in the given UNK .
returns the list of UNK UNK

code:
private void add global advisor ( listable bean factory bean factory , string prefix ) {
 string [ ] global advisor names = bean factory utils . bean names for type including ancestors ( bean factory , advisor . class ) ;
 string [ ] global interceptor names = bean factory utils . bean names for type including ancestors ( bean factory , interceptor . class ) ;
 list < object > beans = new array list < > ( global advisor names . length + global interceptor names . length ) ;
 map < object , string > names = new hash map < > ( beans . size ( ) ) ;
 for ( string name : global advisor names ) {
 object bean = bean factory . get bean ( name ) ;
 beans . add ( bean ) ;
 names . put ( bean , name ) ;
 }
 for ( string name : global interceptor names ) {
 object bean = bean factory . get bean ( name ) ;
 beans . add ( bean ) ;
 names . put ( bean , name ) ;
 }
 annotation aware order comparator . sort ( beans ) ;
 for ( object bean : beans ) {
 string name = names . get ( bean ) ;
 if ( name . starts with ( prefix ) ) {
 add advisor on chain creation ( bean , name ) ;
 }
 }
 }
comment:
START add all global interceptors and UNK . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public string get sock js task scheduler stats info ( ) {
 return ( this . sock js task scheduler != null ? get executor stats info ( this . sock js task scheduler ) : String ) ;
 }
comment:
START get stats about the sock s task scheduler . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public collection < artifact > get source jars ( ) {
 return source jars ;
 }
comment:
START gets the original source jars provided as inputs to this rule . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
long get child id ( int group position , int child position ) ;
comment:
START gets the id for the given child within the given group . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public matrix4 set to rotation ( final float x1 , final float y1 , final float z1 , final float x2 , final float y2 , final float z2 ) {
 return set ( quat . set from cross ( x1 , y1 , z1 , x2 , y2 , z2 ) ) ;
 }
comment:
START set the matrix to a rotation matrix between two vectors . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set jsonp parameter names ( set < string > jsonp parameter names ) {
 this . jsonp parameter names = jsonp parameter names ;
 }
comment:
START set UNK request parameter names . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public void set period ( long period ) {
 this . period = period ;
 }
comment:
START set the period between repeated task executions , in milliseconds . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public string get receipt id ( ) {
 return get first ( UNK d ) ;
 }
comment:
START get the receipt header . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public builder set progress ( int max , int progress , boolean indeterminate ) {
 n . extras . put int ( extra_ s , progress ) ;
 n . extras . put int ( extra_ progress_ x , max ) ;
 n . extras . put boolean ( extra_ progress_ e , indeterminate ) ;
 return this ;
 }
comment:
START set the progress this notification represents . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public float get right ( ) {
 return x + width ;
 }
comment:
START returns x plus width . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set receive timeout ( long receive timeout ) {
 this . receive timeout = receive timeout ;
 }
comment:
START set the timeout to use for receive calls , in <b> milliseconds </b> . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public jar status add resources from jar ( file jar file ) throws apk creation exception , sealed apk exception , duplicate file exception {
 if ( mis sealed ) {
 throw new sealed apk exception ( String ) ;
 }
 try {
 verbose println ( String , jar file ) ;
 filter . reset ( jar file ) ;
 file input stream fis = new file input stream ( jar file ) ;
 builder . write zip ( fis , filter ) ;
 fis . close ( ) ;
 return new jar status impl ( filter . get native libs ( ) , filter . get native libs conflict ( ) ) ;
 }
 catch ( duplicate file exception e ) {
 builder . clean up ( ) ;
 throw e ;
 }
 catch ( exception e ) {
 builder . clean up ( ) ;
 throw new apk creation exception ( e , String , jar file ) ;
 }
 }
comment:
START adds the resources from a jar file . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public map < string , version strategy > get strategy map ( ) {
 return this . version strategy map ;
 }
comment:
START return the map with version strategies keyed by path pattern . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void send notifications ( ) {
 validate UNK ( ) ;
 map < string , collection < resource > > email to resources = new hash map < string , collection < resource > > ( ) ;
 invalid email to resources . clear ( ) ;
 for ( resource r : get marked resources ( ) ) {
 if ( r . is opt out of janitor ( ) ) {
 r . info ( string . format ( String , r . get id ( ) ) ) ;
 continue ;
 }
 if ( can notify ( r ) ) {
 string email = r . get owner email ( ) ;
 if ( email != null && ! email . contains ( String ) && string utils . is not UNK ( this . owner email domain ) ) {
 email = string . format ( String , email , this . owner email domain ) ;
 }
 if ( ! is valid email ( email ) ) {
 if ( default email != null ) {
 r . info ( string . format ( String , email , default email ) ) ;
 put email and resource ( email to resources , default email , r ) ;
 }
 else {
 if ( email == null ) {
 email = unknown_ l ;
 }
 r . info ( string . format ( String , email , r . get id ( ) ) ) ;
 put email and resource ( invalid email to resources , email , r ) ;
 }
 }
 else {
 put email and resource ( email to resources , email , r ) ;
 }
 }
 else {
 r . debug ( string . format ( String , r . get id ( ) ) ) ;
 }
 }
 email builder . set email to resources ( email to resources ) ;
 date now = calendar . now ( ) . get time ( ) ;
 for ( map . entry < string , collection < resource > > entry : email to resources . entry set ( ) ) {
 string email = entry . get key ( ) ;
 string email body = email builder . build email body ( email ) ;
 string subject = build email subject ( email ) ;
 send email ( email , subject , email body ) ;
 for ( resource r : entry . get value ( ) ) {
 r . debug ( string . format ( String , r . get id ( ) ) ) ;
 r . set notification time ( now ) ;
 resource tracker . add or update ( r ) ;
 }
 r . info ( string . format ( String , email , entry . get value ( ) . size ( ) ) ) ;
 }
 }
comment:
START gets all the resources that are marked and no notifications have been sent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public string get client inbound executor stats info ( ) {
 return ( this . inbound channel executor != null ? get executor stats info ( this . inbound channel executor ) : String ) ;
 }
comment:
START get stats about the executor processing incoming messages from web socket clients . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set follow redirects ( boolean follow redirects ) throws illegal argument exception {
 if ( follow redirects == true || gdx . app . get type ( ) != application type . web l ) {
 this . follow redirects = follow redirects ;
 }
 else {
 throw new illegal argument exception ( String ) ;
 }
 }
comment:
START sets whether NUMBER and NUMBER redirects are followed . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public intent put extra ( string name , byte [ ] value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put byte array ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public short get short ( string name , short default value ) {
 json value child = get ( name ) ;
 return ( child == null || ! child . is value ( ) ) ? default value : child . as short ( ) ;
 }
comment:
START returns default value if not found . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public boolean is directory ( ) {
 if ( type == file type . classpath ) return false ;
 return file ( ) . is directory ( ) ;
 }
comment:
START returns true if this file is a directory . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public t get ( final long sequence ) {
 return ring buffer . get ( sequence ) ;
 }
comment:
START get the event for a given sequence in the ring buffer . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
@ nullable public intent get intent no extras ( ) {
 return intent ;
 }
comment:
START return `` raw '' intent , which is the original intent without the extras . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public string get context config location ( ) {
 return this . context config location ;
 }
comment:
START return the explicit context config location , if any . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public void set initial background color ( color color ) {
 initial background color = color ;
 }
comment:
START sets the initial background color . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public user info create user ( string name , int flags ) {
 user info user = null ;
 try {
 user = service . create user ( name , flags ) ;
 if ( user != null && ! user . is admin ( ) ) {
 service . set user restriction ( UNK s , true , user . id ) ;
 service . set user restriction ( UNK UNK s , true , user . id ) ;
 }
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 return user ;
 }
comment:
START creates a user with the specified name and options . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public static exit code create ( int code , string name ) {
 return new exit code ( code , name , false , true ) ;
 }
comment:
START creates and returns an exit code . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public t read object ( input stream input stream ) throws exception {
 verify ( ) ;
 return read ( input stream ) . get object ( ) ;
 }
comment:
START return the object created from reading from the specified input stream . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get eap method ( ) {
 return UNK method ;
 }
comment:
START get the UNK method . END
BLUE1:0.285714285714
--generate--
returns the name of the request .
returns the name of the UNK .
returns the name of the given UNK .
returns the name of the UNK
returns the name of the request

code:
public string get mime type from extension ( string extension ) {
 return mime utils . guess mime type from extension ( extension ) ;
 }
comment:
START return the mime type for the given extension . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set prefix ( string prefix ) {
 this . prefix = ( prefix != null ? prefix : String ) ;
 }
comment:
START set the prefix that gets prepended to view names when building a url . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
protected abstract model mbean operation info [ ] get operation info ( object managed bean , string bean key ) throws exception ;
comment:
START get the operation metadata for the mbean resource . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK in the given UNK .
returns the list of UNK UNK

code:
private synchronized closeable reference < v > new client reference ( final entry < k , v > entry ) {
 UNK client count ( entry ) ;
 return closeable reference . of ( entry . value ref . get ( ) , new resource UNK < v > ( ) {
 @ override public void release ( v unused ) {
 release client reference ( entry ) ;
 }
 }
 ) ;
 }
comment:
START creates a new reference for the client . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
private priority queue < score term > retrieve terms ( int doc num ) throws exception {
 map < string , int > term freq map = new hash map < > ( ) ;
 for ( string field name : field names ) {
 final fields vectors = ir . get term vectors ( doc num ) ;
 final terms vector ;
 if ( vectors != null ) {
 vector = vectors . terms ( field name ) ;
 }
 else {
 vector = null ;
 }
 if ( vector == null ) {
 document d = ir . document ( doc num ) ;
 UNK field fields [ ] = d . get fields ( field name ) ;
 for ( UNK field field : fields ) {
 final string string value = field . string value ( ) ;
 if ( string value != null ) {
 add term frequencies ( new fast string reader ( string value ) , term freq map , field name ) ;
 }
 }
 }
 else {
 add term frequencies ( term freq map , vector , field name ) ;
 }
 }
 return create queue ( term freq map ) ;
 }
comment:
START find words for a UNK query former . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns an UNK UNK for the given UNK .
returns an UNK UNK for the UNK .
returns an UNK UNK for the given file .

code:
public void install handler ( signal signal , final signal handler signal handler ) {
 final atomic reference < signal handler > previous handler reference = new atomic reference < > ( ) ;
 previous handler reference . set ( handler installer . install ( signal , new signal handler ( ) {
 @ override public void handle ( signal signal ) {
 signal handler . handle ( signal ) ;
 signal handler previous handler = previous handler reference . get ( ) ;
 if ( previous handler != null ) {
 previous handler . handle ( signal ) ;
 }
 }
 }
 ) ) ;
 }
comment:
START adds the given signal handler to the existing ones . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public void set jdbc template ( jdbc template jdbc template ) {
 assert . not null ( jdbc template , String ) ;
 this . jdbc template = jdbc template ;
 }
comment:
START set the jdbc template to be used by this bean factory . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
default column handle get update row id column handle ( connector session session , connector table handle table handle ) {
 throw new presto exception ( not_ d , String ) ;
 }
comment:
START get the column handle that will generate row ids for the delete operation . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean UNK expanded terms ( ) {
 return this . settings . UNK expanded terms ( ) ;
 }
comment:
START returns whether parsed terms should be lower UNK for this query . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK .

code:
public void set selector ( @ drawable res int res d ) {
 set selector ( get context ( ) . get drawable ( res d ) ) ;
 }
comment:
START set a drawable that should be used to highlight the currently selected item . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
protected void set activity ( activity test activity ) {
 activity = test activity ;
 }
comment:
START set the activity under test . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public float get vertical margin ( ) {
 return n . mvertical margin ;
 }
comment:
START return the vertical margin . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
private static recursive filesystem traversal value result for UNK symlink ( rooted path link name , file info info ) {
 preconditions . check state ( info . type . is symlink ( ) && ! info . type . exists ( ) , String , link name , info . type ) ;
 return recursive filesystem traversal value . of ( resolved file factory . UNK symlink ( link name , info . UNK symlink target , info . metadata ) ) ;
 }
comment:
START creates result for a UNK symlink . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public configuration fragment policy get configuration fragment policy ( ) {
 return configuration fragment policy ;
 }
comment:
START returns this rule 's policy for configuration fragment access . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set failure exception ( throwable t ) {
 if ( t == null ) {
 throw new null pointer exception ( String ) ;
 }
 this . failure exception = t ;
 }
comment:
START set the exception to be used when a failure is triggered . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set monitor transitions ( int monitor transitions ) {
 UNK transitions = monitor transitions ;
 }
comment:
START set the transitions to be monitored . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public UNK client get http client ( ) {
 return this . http client ;
 }
comment:
START return UNK 's native http client END
BLUE1:0.285714285714
--generate--
return the list of UNK UNK .
return the number of UNK UNK .
return the number of all UNK .
return the number of all UNK in this .
return the number of all UNK in the given .

code:
public void set supported media types ( list < media type > supported media types ) {
 assert . not empty ( supported media types , String ) ;
 this . media types . clear ( ) ;
 if ( supported media types != null ) {
 this . media types . add all ( supported media types ) ;
 }
 }
comment:
START set the supported media types for this view . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given request .

code:
public body create body ( body def def ) {
 assert ( is locked ( ) == false ) ;
 if ( is locked ( ) ) {
 return null ;
 }
 body b = new body ( def , this ) ;
 b . m_prev = null ;
 b . m_next = m_body list ;
 if ( m_body list != null ) {
 m_body list . m_prev = b ;
 }
 m_body list = b ;
 ++ m_body count ;
 return b ;
 }
comment:
START create a UNK body given a definition . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public int add earcon ( string earcon , file file ) {
 synchronized ( mstart lock ) {
 UNK . put ( earcon , uri . from file ( file ) ) ;
 return s ;
 }
 }
comment:
START adds a mapping between a string of text and a sound file . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK to the UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public byte [ ] UNK key ( ) {
 return key . get UNK key ( ) . clone ( ) ;
 }
comment:
START get UNK key . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public pending intent get reply pending intent ( ) {
 return UNK pending intent ;
 }
comment:
START gets the pending intent that will be triggered when the user replies to this notification . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
private int put listener if absent ( object listener ) {
 if ( listener == null ) return invalid_ y ;
 synchronized ( mlistener map lock ) {
 int key = get listener key ( listener ) ;
 if ( key != invalid_ y ) {
 return key ;
 }
 do {
 key = mlistener key ++ ;
 }
 while ( key == invalid_ y ) ;
 mlistener map . put ( key , listener ) ;
 return key ;
 }
 }
comment:
START returns the key of the listener . END
BLUE1:0.285714285714
--generate--
creates a listener to UNK UNK .
creates a listener for the UNK UNK .
creates a listener for the UNK .
creates a listener to the UNK .
creates a listener to the UNK of the UNK .

code:
public dependency descriptor for fallback match ( ) {
 return new dependency descriptor ( this ) {
 @ override public boolean fallback match allowed ( ) {
 return true ;
 }
 }
 ;
 }
comment:
START return a variant of this descriptor that is intended for a fallback match . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public UNK get cross UNK ( ) {
 return UNK UNK ;
 }
comment:
START get the UNK used for this mini drawer @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
private method [ ] get sorted class methods ( class < ? > clazz ) {
 method [ ] methods = clazz . get methods ( ) ;
 arrays . sort ( methods , new comparator < method > ( ) {
 @ override public int compare ( method o1 , method o2 ) {
 return ( o1 . is bridge ( ) == o2 . is bridge ( ) ) ? DecimalInteger : ( o1 . is bridge ( ) ? DecimalInteger : - DecimalInteger ) ;
 }
 }
 ) ;
 return methods ;
 }
comment:
START returns class methods ordered with non bridge methods appearing higher . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the UNK for the given UNK , in the UNK .

code:
public jack compilation helper . builder add java sources ( collection < artifact > java sources ) {
 this . java sources . add all ( preconditions . check not null ( java sources ) ) ;
 return this ;
 }
comment:
START adds a collection of java source files to be compiled by jack . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public enum set < cluster health status > shard statuses ( ) {
 return statuses ;
 }
comment:
START returns the shard criteria to get store information on END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static void restore UNK ( context context ) {
 UNK urls = new hash set < > ( preference manager . get default shared preferences ( context ) . get string set ( UNK y , new hash set < string > ( ) ) ) ;
 }
comment:
START get UNK from shared preferences . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static int set permissions ( string path , int mode , int uid , int gid ) {
 try {
 os . UNK ( path , mode ) ;
 }
 catch ( errno exception e ) {
 slog . w ( g , String + path + String + e ) ;
 return e . errno ;
 }
 if ( uid >= DecimalInteger || gid >= DecimalInteger ) {
 try {
 os . UNK ( path , uid , gid ) ;
 }
 catch ( errno exception e ) {
 slog . w ( g , String + path + String + e ) ;
 return e . errno ;
 }
 }
 return DecimalInteger ;
 }
comment:
START set owner and mode of of given path . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected database get database ( ) {
 return this . database ;
 }
comment:
START return the target database to operate on . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public writer writer ( boolean append , string charset ) {
 if ( type == file type . classpath ) throw new runtime exception ( String + file ) ;
 parent ( ) . mkdirs ( ) ;
 try {
 file output stream output = new file output stream ( file ( ) , append ) ;
 if ( charset == null ) return new output stream writer ( output ) ;
 else return new output stream writer ( output , charset ) ;
 }
 catch ( exception ex ) {
 if ( file ( ) . is directory ( ) ) throw new runtime exception ( String + file + String + type + String , ex ) ;
 throw new runtime exception ( String + file + String + type + String , ex ) ;
 }
 }
comment:
START returns a writer for writing to this file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
private intent get add printer intent ( @ non null print service info service ) {
 string add printer activity name = service . get add printers activity name ( ) ;
 if ( ! text utils . is empty ( add printer activity name ) ) {
 intent intent = new intent ( intent . action_ n ) ;
 intent . set component ( new component name ( service . get component name ( ) . get package name ( ) , add printer activity name ) ) ;
 list < resolve info > resolved activities = get package manager ( ) . query intent activities ( intent , DecimalInteger ) ;
 if ( ! resolved activities . is empty ( ) ) {
 if ( resolved activities . get ( DecimalInteger ) . activity info . exported ) {
 return intent ;
 }
 }
 }
 return null ;
 }
comment:
START get the intent used to launch the add printers activity . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK to the given UNK .

code:
future < v > add listeners ( generic future listener < ? extends future < ? super v > > ... listeners ) ;
comment:
START adds the specified listeners to this future . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the given .

code:
private string get model id ( view view ) {
 view item view = UNK view . find containing item view ( view ) ;
 if ( item view != null ) {
 recycler view . view holder UNK = UNK view . get child view holder ( item view ) ;
 if ( UNK instanceof document holder ) {
 return ( ( document holder ) UNK ) . model id ;
 }
 }
 return null ;
 }
comment:
START gets the model id for a given recycler view item . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static discovery node create local ( settings settings , transport address publish address , string node id ) {
 map < string , string > attributes = new hash map < > ( node . node_ s . get ( settings ) . get as map ( ) ) ;
 set < discovery node . role > roles = new hash set < > ( ) ;
 if ( node . node_ UNK g . get ( settings ) ) {
 roles . add ( discovery node . role . t ) ;
 }
 if ( node . node_ master_ g . get ( settings ) ) {
 roles . add ( discovery node . role . r ) ;
 }
 if ( node . node_ data_ g . get ( settings ) ) {
 roles . add ( discovery node . role . a ) ;
 }
 return new discovery node ( node . node_ name_ g . get ( settings ) , node id , publish address , attributes , roles , version . t ) ;
 }
comment:
START creates a discovery node representing the local node . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public spell checker info get spell checker ( ) {
 return mspell checker info ;
 }
comment:
START get the spell checker service info this spell checker session has . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static state get state ( string service ) {
 final string raw state = system properties . get ( String + service ) ;
 final state state = states . get ( raw state ) ;
 if ( state != null ) {
 return state ;
 }
 else {
 return state . d ;
 }
 }
comment:
START return current state of given service . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public set < string > get file extensions ( ) {
 return this . config . get file extensions ( ) ;
 }
comment:
START return the file extensions to use for suffix pattern matching . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public string get resource package name ( @ any res int resid ) throws not found exception {
 return mresources impl . get resource package name ( resid ) ;
 }
comment:
START return the package name for a given resource identifier . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public stored context stash context ( ) {
 final thread context struct context = thread local . get ( ) ;
 thread local . set ( null ) ;
 return ( ) -> thread local . set ( context ) ;
 }
comment:
START removes the current context and resets a default context . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void add measurement ( int measurement id , long value ) {
 final int index = constants . get index ( health keys . type_ t , measurement id ) ;
 mmeasurement fields [ index ] = true ;
 mmeasurement values [ index ] = value ;
 }
comment:
START add a measurement for the given key . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
add the UNK to the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public string get broadcast destination ( ) {
 return ( this . broadcast handler != null ? this . broadcast handler . get broadcast destination ( ) : null ) ;
 }
comment:
START return the configured destination for unresolved messages . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private request create request ( long started ) {
 int id = next id . get and increment ( ) ;
 request request = data . build ( ) ;
 request . id = id ;
 request . started = started ;
 boolean logging enabled = UNK . logging enabled ;
 if ( logging enabled ) {
 log ( owner_ n , UNK d , request . plain id ( ) , request . to string ( ) ) ;
 }
 request transformed = UNK . transform request ( request ) ;
 if ( transformed != request ) {
 transformed . id = id ;
 transformed . started = started ;
 if ( logging enabled ) {
 log ( owner_ n , UNK d , transformed . log id ( ) , String + transformed ) ;
 }
 }
 return transformed ;
 }
comment:
START create the request optionally passing it through the request transformer . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public boolean is changing layout ( ) {
 return ( current changing animations . size ( ) > DecimalInteger ) ;
 }
comment:
START returns true if animations are running which animate UNK properties . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public intent put extra ( string name , bundle value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put bundle ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
void create executable ( rule context rule context , py common common , cc link params store cc link params store , nested set < path fragment > imports ) throws interrupted exception ;
comment:
START create the actual executable artifact . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public final v get ( ) {
 return get ( internal thread local map . get ( ) ) ;
 }
comment:
START returns the current value for the current thread END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
protected method find getter for property ( string property name , class < ? > clazz , boolean must be static ) {
 method method = find method for property ( get property method suffixes ( property name ) , String , clazz , must be static , DecimalInteger , any_ s ) ;
 if ( method == null ) {
 method = find method for property ( get property method suffixes ( property name ) , String , clazz , must be static , DecimalInteger , boolean_ s ) ;
 }
 return method ;
 }
comment:
START find a getter method for the specified property . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK UNK

code:
protected abstract status aggregate status ( list < status > candidates ) ;
comment:
START return the single ` aggregate ' status that should be used from the specified candidates . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static final string get default host ( ) {
 string host = system . get property ( String ) ;
 if ( text utils . is empty ( host ) ) return null ;
 return host ;
 }
comment:
START return the default proxy host specified by the carrier . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public executor executor ( string name ) {
 executor executor = executors . get ( name ) . executor ( ) ;
 if ( executor == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 return executor ;
 }
comment:
START get the executor with the given name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean is auto white balance lock supported ( ) {
 string str = get ( key_ auto_ UNK lock_ d ) ;
 return e . equals ( str ) ;
 }
comment:
START returns true if auto-white balance locking is supported . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the UNK .

code:
public int get raw status code ( ) {
 return this . raw status code ;
 }
comment:
START return the raw http status code value . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
private file get canonical document root ( ) {
 try {
 file root = get valid document root ( ) ;
 root = ( root != null ? root : create temp dir ( String ) ) ;
 return root . get canonical file ( ) ;
 }
 catch ( exception e ) {
 throw new illegal state exception ( String , e ) ;
 }
 }
comment:
START return the document root in canonical form . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public float get line left ( int line ) {
 int dir = get paragraph direction ( line ) ;
 alignment align = get paragraph alignment ( line ) ;
 if ( align == alignment . align_ t ) {
 return DecimalInteger ;
 }
 else if ( align == alignment . align_ l ) {
 if ( dir == dir_ right_ to_ t ) return get paragraph right ( line ) - get line max ( line ) ;
 else return DecimalInteger ;
 }
 else if ( align == alignment . align_ t ) {
 return width - get line max ( line ) ;
 }
 else if ( align == alignment . align_ e ) {
 if ( dir == dir_ right_ to_ t ) return DecimalInteger ;
 else return width - get line max ( line ) ;
 }
 else {
 int left = get paragraph left ( line ) ;
 int right = get paragraph right ( line ) ;
 int max = ( ( int ) get line max ( line ) ) & ~ DecimalInteger ;
 return left + ( ( right - left ) - max ) / DecimalInteger ;
 }
 }
comment:
START get the leftmost position that should be exposed for horizontal scrolling on the specified line . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public method parameter get return value type ( object return value ) {
 return new return value method parameter ( return value ) ;
 }
comment:
START return the actual return value type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public static body builder status ( int status ) {
 return new default builder ( status ) ;
 }
comment:
START create a builder with the given status . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static UNK lock get lock ( ) {
 return lock ;
 }
comment:
START returns the lock for the bridge END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ override public string to string ( ) {
 return integer . to string ( this . value ) ;
 }
comment:
START return a string representation of this status code . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public rect get crop rect ( ) {
 throw UNK image is invalid ( ) ;
 if ( mcrop rect == null ) {
 return new rect ( DecimalInteger , DecimalInteger , get width ( ) , get height ( ) ) ;
 }
 else {
 return new rect ( mcrop rect ) ;
 }
 }
comment:
START get the crop rectangle associated with this frame . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public intent put extra ( string name , string [ ] value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put string array ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public int get channel mask ( ) {
 if ( ( mproperty set mask & audio_ format_ has_ property_ channel_ k ) == DecimalInteger ) {
 return channel_ d ;
 }
 return mchannel mask ;
 }
comment:
START return the channel mask . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public analyze request builder add char filter ( map < string , ? > char filter ) {
 request . add char filter ( char filter ) ;
 return this ;
 }
comment:
START add char filter setting that will be used on top of a tokenizer provided . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
void nodes hot threads ( nodes hot threads request request , action listener < nodes hot threads response > listener ) ;
comment:
START returns top n UNK samples per node . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public icon get custom printer icon ( printer id printer id ) {
 return mcustom icon cache . get icon ( printer id ) ;
 }
comment:
START get the custom icon for a printer . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
public void set formatter ( date formatter date formatter ) {
 assert . not null ( date formatter , String ) ;
 this . date formatter = date formatter ;
 }
comment:
START set the date formatter to register . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private boolean is bean definition abstract ( listable bean factory bean factory , string bean name ) {
 return ( bean factory instanceof configurable listable bean factory && bean factory . contains bean definition ( bean name ) && ( ( configurable listable bean factory ) bean factory ) . get bean definition ( bean name ) . is abstract ( ) ) ;
 }
comment:
START return whether the specified bean definition should be considered as abstract . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether the UNK is UNK to .

code:
public void set touch delegate ( touch delegate delegate ) {
 mtouch delegate = delegate ;
 }
comment:
START sets the touch delegate for this view . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public boolean is default network active ( ) {
 try {
 return get network management service ( ) . is network active ( ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START return whether the data network is currently active . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether the UNK is UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .

code:
public final string get shell escaped exec path string ( ) {
 return shell utils . shell escape ( get exec path string ( ) ) ;
 }
comment:
START returns get exec path string escaped for potential use in a shell command . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final validator get validator ( ) {
 return this . validator ;
 }
comment:
START return the validator to apply after each binding step , if any . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
@ non null public drawable new drawable ( @ nullable resources res ) {
 return new drawable ( ) ;
 }
comment:
START creates a new drawable instance from its constant state using the specified resources . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the view .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .

code:
public frame fetch available frame ( int [ ] dimensions ) {
 frame frame = get queue ( ) . fetch available frame ( dimensions ) ;
 if ( frame != null ) {
 filter . add auto release frame ( frame ) ;
 }
 return frame ;
 }
comment:
START returns a frame for writing . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the UNK of the given UNK .
returns the list of the UNK UNK .

code:
public get field mappings request builder set fields ( string ... fields ) {
 request . fields ( fields ) ;
 return this ;
 }
comment:
START sets the fields to retrieve . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void set acknowledge mode ( int acknowledge mode ) {
 this . acknowledge mode = acknowledge mode ;
 }
comment:
START set the jms acknowledgement mode to use . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public tcp operations < byte [ ] > get tcp client ( ) {
 return this . tcp client ;
 }
comment:
START get the configured tcp client . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public void remove credentials from current thread ( ) {
 this . thread bound credentials . remove ( ) ;
 }
comment:
START remove any user credentials for this proxy from the current thread . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to the UNK .
used to UNK to UNK .
used to the UNK of UNK

code:
private input stream get test UNK input stream ( ) {
 return get test image input stream ( String ) ;
 }
comment:
START return input stream for UNK UNK @return input stream instance END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public permission state get runtime permission state ( string name , int user id ) {
 enforce valid user id ( user id ) ;
 return get permission state ( name , user id ) ;
 }
comment:
START gets the state for a runtime permission or null if no such . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public cpp link action builder add linkopts ( collection < string > linkopts ) {
 this . linkopts . add all ( linkopts ) ;
 return this ;
 }
comment:
START adds multiple linker options at once . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
adds the UNK to the UNK to .
adds the UNK to the UNK to the UNK .

code:
public cache control no transform ( ) {
 this . no transform = true ;
 return this ;
 }
comment:
START add a `` UNK '' directive . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
private list < internal aggregation > create internal aggregations ( ) {
 UNK heuristic UNK heuristic = get random UNK ( ) ;
 test agg factory < ? , ? > factory = random boolean ( ) ? new string test agg factory ( ) : new long test agg factory ( ) ;
 list < internal aggregation > UNK = new array list < > ( ) ;
 UNK . add ( factory . create aggregation ( UNK heuristic , DecimalInteger , DecimalInteger , DecimalInteger , ( f , i ) -> f . create bucket ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger ) ) ) ;
 UNK . add ( factory . create aggregation ( UNK heuristic , DecimalInteger , DecimalInteger , DecimalInteger , ( f , i ) -> f . create bucket ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger ) ) ) ;
 UNK . add ( factory . create aggregation ( UNK heuristic , DecimalInteger , DecimalInteger , DecimalInteger , ( f , i ) -> f . create bucket ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , i ) ) ) ;
 return UNK ;
 }
comment:
START create aggregations as they might come from three different shards and return as list . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to the UNK .

code:
public float get query weight ( ) {
 return this . query weight ;
 }
comment:
START gets the original query weight for rescoring . END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
@ override public void get reaction force ( float inv_dt , vec2 arg out ) {
 arg out . x = UNK * UNK . x * inv_dt ;
 arg out . y = UNK * UNK . y * inv_dt ;
 }
comment:
START get the reaction force given the inverse time step . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public void set filter data ( filter filter ) {
 jni set filter data ( addr , filter . category bits , filter . mask bits , filter . group index ) ;
 }
comment:
START set the contact filtering data . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
protected abstract bean definition get bean definition ( string bean name ) throws beans exception ;
comment:
START return the bean definition for the given bean name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public final configuration get configuration ( ) {
 if ( this . configuration == null ) {
 throw new illegal state exception ( String ) ;
 }
 return this . configuration ;
 }
comment:
START return the hibernate configuration object used to build the session factory . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public string get white balance ( ) {
 return get ( key_ UNK e ) ;
 }
comment:
START gets the current white balance setting . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public set < class < ? > > get extra interfaces ( ) {
 return this . extra interfaces ;
 }
comment:
START return the extra interfaces . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public put index template request builder add mapping ( string type , string source ) {
 request . mapping ( type , source ) ;
 return this ;
 }
comment:
START adds mapping that will be added when the index template gets created . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public int get lte asu level ( ) {
 int lte asu level = DecimalInteger ;
 int lte dbm = get lte dbm ( ) ;
 if ( lte dbm == signal strength . d ) lte asu level = DecimalInteger ;
 else lte asu level = lte dbm + DecimalInteger ;
 if ( g ) log ( String + lte asu level ) ;
 return lte asu level ;
 }
comment:
START get the lte signal level as an asu value between NUMBER . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public matrix4 set ( vector3 position , quaternion orientation , vector3 scale ) {
 return set ( position . x , position . y , position . z , orientation . x , orientation . y , orientation . z , orientation . w , scale . x , scale . y , scale . z ) ;
 }
comment:
START set this matrix to the specified translation , rotation and scale . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public int get fd ( ) {
 if ( wrapped != null ) {
 return wrapped . get fd ( ) ;
 }
 else {
 if ( closed ) {
 throw new illegal state exception ( String ) ;
 }
 return fd . get UNK ( ) ;
 }
 }
comment:
START return the native fd int for this parcel file descriptor . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ override public void set bean factory ( bean factory bean factory ) {
 this . bean factory = bean factory ;
 }
comment:
START set the bean factory to use for retrieving platform transaction manager beans . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public accessibility window info get parent ( ) {
 if ( mconnection id == d || mparent id == d ) {
 return null ;
 }
 accessibility interaction client client = accessibility interaction client . get instance ( ) ;
 return client . get window ( mconnection id , mparent id ) ;
 }
comment:
START gets the parent window . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return initial_ s ;
 default : return null ;
 }
 }
comment:
START find the _ fields constant that matches field id , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public void set interfaces ( class < ? > ... interfaces ) {
 assert . not null ( interfaces , String ) ;
 this . interfaces . clear ( ) ;
 for ( class < ? > ifc : interfaces ) {
 add interface ( ifc ) ;
 }
 }
comment:
START set the interfaces to be proxied . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set to UNK to UNK .
sets the UNK for the given file .

code:
public final bean definition registry get registry ( ) {
 return this . registry ;
 }
comment:
START return the bean definition registry that this scanner operates on . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
return the UNK of the given UNK .

code:
public object get caller context ( ) {
 return UNK context ;
 }
comment:
START gets the UNK tag & caller context END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
protected class loader get proxy class loader ( ) {
 return this . proxy class loader ;
 }
comment:
START return the configured proxy class loader for this processor . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
return the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public string get call string ( ) {
 return this . call string ;
 }
comment:
START get the call string . END
BLUE1:0.285714285714
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public abstract display device info get display device info locked ( ) ;
comment:
START gets information about the display device . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static < k , v > builder < k , v > builder ( ) {
 return new builder < k , v > ( ) ;
 }
comment:
START returns a new builder . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public display info get display info locked ( ) {
 if ( info == null ) {
 info = new display info ( ) ;
 info . copy from ( mbase display info ) ;
 if ( moverride display info != null ) {
 info . app width = moverride display info . app width ;
 info . app height = moverride display info . app height ;
 info . smallest nominal app width = moverride display info . smallest nominal app width ;
 info . smallest nominal app height = moverride display info . smallest nominal app height ;
 info . largest nominal app width = moverride display info . largest nominal app width ;
 info . largest nominal app height = moverride display info . largest nominal app height ;
 info . logical width = moverride display info . logical width ;
 info . logical height = moverride display info . logical height ;
 info . overscan left = moverride display info . overscan left ;
 info . overscan top = moverride display info . overscan top ;
 info . overscan right = moverride display info . overscan right ;
 info . overscan bottom = moverride display info . overscan bottom ;
 info . rotation = moverride display info . rotation ;
 info . logical density dpi = moverride display info . logical density dpi ;
 info . physical dpi = moverride display info . physical dpi ;
 info . physical dpi = moverride display info . physical dpi ;
 }
 }
 return info ;
 }
comment:
START gets information about the logical display . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
START find the _ fields constant that matches name , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set date time style ( format style date time style ) {
 this . date style = date time style ;
 this . time style = date time style ;
 }
comment:
START set the style to use for date and time types . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public void clear ( ) {
 synchronized ( lock ) {
 if ( moriginal values != null ) {
 moriginal values . clear ( ) ;
 }
 else {
 objects . clear ( ) ;
 }
 }
 if ( UNK on change ) notify data set changed ( ) ;
 }
comment:
START remove all elements from the list . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to the UNK .
used to the UNK of the given .
used to the UNK of UNK

code:
boolean in same UNK ( final label block ) {
 if ( ( status & d ) == DecimalInteger || ( block . status & d ) == DecimalInteger ) {
 return false ;
 }
 for ( int i = DecimalInteger ;
 i < src and ref positions . length ;
 ++ i ) {
 if ( ( src and ref positions [ i ] & block . src and ref positions [ i ] ) != DecimalInteger ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START returns true if this basic block and the given one belong to a common subroutine . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set whether to UNK UNK UNK .
set whether to UNK UNK UNK UNK .

code:
public abstract tab set text ( @ string res int res id ) ;
comment:
START set the text displayed on this tab . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public query profiler get current query profiler ( ) {
 return query profilers . get ( query profilers . size ( ) - DecimalInteger ) ;
 }
comment:
START get the current profiler . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public path fragment as fragment ( ) {
 string [ ] result segments = new string [ depth ] ;
 path current path = this ;
 for ( int pos = depth - DecimalInteger ;
 pos >= DecimalInteger ;
 pos -- ) {
 result segments [ pos ] = current path . get base name ( ) ;
 current path = current path . get parent directory ( ) ;
 }
 char UNK letter = String ;
 if ( result segments . length > DecimalInteger ) {
 UNK letter = path fragment . get windows UNK letter ( result segments [ DecimalInteger ] ) ;
 if ( UNK letter != String ) {
 result segments = arrays . copy of range ( result segments , DecimalInteger , result segments . length ) ;
 }
 }
 return new path fragment ( UNK letter , true , result segments ) ;
 }
comment:
START returns an absolute path fragment representing this path . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected request context create request context ( http servlet request request , http servlet response response , map < string , object > model ) {
 return new request context ( request , response , get servlet context ( ) , model ) ;
 }
comment:
START create a request context to expose under the specified attribute name . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
protected string get tmp dir name ( path fragment exec path ) {
 string basename = exec path . get base name ( ) ;
 synchronized ( tmp index ) {
 int index = tmp index . contains key ( basename ) ? tmp index . get ( basename ) : DecimalInteger ;
 tmp index . put ( basename , index + DecimalInteger ) ;
 return basename + String + index ;
 }
 }
comment:
START returns a unique name for a temporary directory a test could use . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public key character map get key character map ( ) {
 return mkey character map ;
 }
comment:
START gets the key character map associated with this input device . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public builder < t > add error ( sky key key , error info error ) {
 errors . put ( key , preconditions . check not null ( error , key ) ) ;
 preconditions . check state ( ! result . contains key ( key ) , String , error , result ) ;
 return this ;
 }
comment:
START adds an error to the result . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
protected factory bean < ? > get factory bean ( string bean name , object bean instance ) throws beans exception {
 if ( ! ( bean instance instanceof factory bean ) ) {
 throw new bean creation exception ( bean name , String + bean instance . get class ( ) + String ) ;
 }
 return ( factory bean < ? > ) bean instance ;
 }
comment:
START get a factory bean for the given bean if possible . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set validator ( validator validator ) {
 if ( validator instanceof local validator factory bean ) {
 this . validator = ( ( local validator factory bean ) validator ) . get validator ( ) ;
 }
 else {
 this . validator = validator ;
 }
 }
comment:
START set the jsr-303 validator to delegate to for validating methods . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given request .
set the UNK for the given UNK .

code:
public boolean has timeout ( ) {
 return ( this . deadline != null ) ;
 }
comment:
START return whether this object has an associated timeout . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is valid task id ( int task id ) {
 synchronized ( mwindow map ) {
 return mtask id to task . get ( task id ) != null ;
 }
 }
comment:
START return true if the input task id represents a valid window manager task . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .

code:
public static string get active account name ( final context context ) {
 shared preferences sp = get shared preferences ( context ) ;
 return sp . get string ( pref_ active_ t , null ) ;
 }
comment:
START return the account name the app is using as the active google account . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
default map < schema table name , connector view definition > get views ( connector session session , schema table prefix prefix ) {
 return empty map ( ) ;
 }
comment:
START gets the view data for views that match the specified table prefix . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static final int get audio source max ( ) {
 return audio source . d ;
 }
comment:
START gets the maximum value for audio sources . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static boolean remove ( logger logger ) {
 if ( logger == null ) {
 throw new illegal argument exception ( String ) ;
 }
 synchronized ( s ) {
 s . remove ( logger ) ;
 int new min level = integer . max_ e ;
 for ( int i = DecimalInteger ;
 i < s . size ( ) ;
 i ++ ) {
 int log min = s . get ( i ) . get minimum native debug level ( ) ;
 if ( log min < new min level ) {
 new min level = log min ;
 }
 }
 set minimum native debug level ( new min level ) ;
 UNK as array = s . to array ( new logger [ s . size ( ) ] ) ;
 }
 return true ;
 }
comment:
START removes the given logger if it is currently added . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
create a listener for the UNK UNK .
create a listener for the UNK .

code:
public url based view resolver registration view class ( class < ? > view class ) {
 this . view resolver . set view class ( view class ) ;
 return this ;
 }
comment:
START set the view class that should be used to create views . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
@ nullable public drawable get top level drawable ( ) {
 return mdrawee holder . get top level drawable ( ) ;
 }
comment:
START gets the top-level drawable if hierarchy is set , null otherwise . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public abstract string explain conflict for UNK ( long current version , long expected version ) ;
comment:
START returns a human readable explanation for a version conflict on read . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void get bounds in parent ( rect out bounds ) {
 out bounds . set ( mbounds in parent . left , mbounds in parent . top , mbounds in parent . right , mbounds in parent . bottom ) ;
 }
comment:
START gets the node bounds in parent coordinates . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
private void add block at offset ( int offset ) {
 final int line = get line for offset ( offset ) ;
 if ( mblock end lines == null ) {
 mblock end lines = array utils . new UNK int array ( DecimalInteger ) ;
 mblock end lines [ mnumber of blocks ] = line ;
 mnumber of blocks ++ ;
 return ;
 }
 final int previous block end line = mblock end lines [ mnumber of blocks - DecimalInteger ] ;
 if ( line > previous block end line ) {
 mblock end lines = growing array utils . append ( mblock end lines , mnumber of blocks , line ) ;
 mnumber of blocks ++ ;
 }
 }
comment:
START create a new block , ending at the specified character offset . END
BLUE1:0.285714285714
--generate--
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .
sets the UNK for the given file .

code:
public boolean in tap square ( ) {
 return touch down x != - DecimalInteger ;
 }
comment:
START returns true if a touch is within the tap square . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set content view ( view v ) {
 UNK = true ;
 activity . set content view ( v ) ;
 }
comment:
START set the activity content to an explicit view . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public jack compilation helper . builder add source jars ( collection < artifact > source jars ) {
 this . source jars . add all ( preconditions . check not null ( source jars ) ) ;
 return this ;
 }
comment:
START adds a collection of zip files containing java sources to be compiled by jack . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public boolean is immediate ( ) {
 int count = mprop duration . size ( ) ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) {
 if ( mprop duration . value at ( i ) > DecimalInteger ) {
 return false ;
 }
 }
 return true ;
 }
comment:
START returns whether this animation has any duration . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
set whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether the UNK is UNK in the .

code:
public rational get value as rational ( long default value ) {
 rational default val = new rational ( default value , DecimalInteger ) ;
 return get value as rational ( default val ) ;
 }
comment:
START gets the value as a rational . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public static fields find by thrift id ( int field id ) {
 switch ( field id ) {
 case DecimalInteger : return g ;
 default : return null ;
 }
 }
comment:
START find the _ fields constant that matches field id , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public create index request builder set aliases ( xcontent builder source ) {
 request . aliases ( source ) ;
 return this ;
 }
comment:
START sets the aliases that will be associated with the index when it gets created END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public string get output header ( ) {
 return formatter . get header ( ) ;
 }
comment:
START returns the output header particular to the associated formatter END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public view focus search ( @ focus real direction int direction ) {
 if ( parent != null ) {
 return parent . focus search ( this , direction ) ;
 }
 else {
 return null ;
 }
 }
comment:
START find the nearest view in the specified direction that can take focus . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set period ( long period ) {
 this . period = period ;
 }
comment:
START set the period between repeated task executions , in milliseconds . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public string type ( ) {
 return response . get content type ( ) ;
 }
comment:
START returns the content type @return the content type END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void add source folder ( file source folder ) throws apk creation exception , sealed apk exception , duplicate file exception {
 if ( mis sealed ) {
 throw new sealed apk exception ( String ) ;
 }
 add source folder ( this , source folder ) ;
 }
comment:
START adds the resources from a source folder . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
protected final connection get shared connection ( ) {
 if ( ! shared connection enabled ( ) ) {
 throw new illegal state exception ( String ) ;
 }
 synchronized ( this . shared connection monitor ) {
 if ( this . shared connection == null ) {
 throw new shared connection not initialized exception ( String ) ;
 }
 return this . shared connection ;
 }
 }
comment:
START return the shared jms connection maintained by this container . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public intent put extra ( string name , float [ ] value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put float array ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set UNK offset ( int val ) {
 UNK offset = val ;
 if ( ! mfirst layout ) {
 request layout ( ) ;
 }
 }
comment:
START set UNK offset for the panel @param val a height in pixels END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public intent put extra ( string name , long [ ] value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put long array ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public static type descriptor value of ( class < ? > type ) {
 if ( type == null ) {
 type = object . class ;
 }
 type descriptor desc = common types cache . get ( type ) ;
 return ( desc != null ? desc : new type descriptor ( resolvable type . for class ( type ) , null , null ) ) ;
 }
comment:
START create a new type descriptor from the given type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static float action bar height ( context context ) {
 int action bar height = DecimalInteger ;
 typed value tv = new typed value ( ) ;
 if ( context . get theme ( ) . resolve attribute ( android . r . attr . action bar size , tv , true ) ) {
 action bar height = typed value . complex to dimension pixel size ( tv . data , context . get resources ( ) . get display metrics ( ) ) ;
 }
 return action bar height ;
 }
comment:
START returns action bar height in raw pixels . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
default isolation level get isolation level ( ) {
 return isolation level . read_ d ;
 }
comment:
START get the transaction read isolation level supported by this connector . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void add url mappings ( string ... url mappings ) {
 assert . not null ( url mappings , String ) ;
 this . url mappings . add all ( arrays . as list ( url mappings ) ) ;
 }
comment:
START add url mappings for the servlet . END
BLUE1:0.285714285714
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public final native boolean get UNK ( web program program , web UNK location location ) ;
comment:
START return the uniform value at the passed location in the passed program . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public builder add route ( inet address address , int prefix length ) {
 check ( address , prefix length ) ;
 int offset = prefix length / DecimalInteger ;
 byte [ ] bytes = address . get address ( ) ;
 if ( offset < bytes . length ) {
 for ( bytes [ offset ] <<= prefix length % DecimalInteger ;
 offset < bytes . length ;
 ++ offset ) {
 if ( bytes [ offset ] != DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 }
 }
 routes . add ( new route info ( new ip prefix ( address , prefix length ) , null ) ) ;
 config . update allowed families ( address ) ;
 return this ;
 }
comment:
START add a network route to the vpn interface . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public quaternion set from cross ( final float x1 , final float y1 , final float z1 , final float x2 , final float y2 , final float z2 ) {
 final float dot = math utils . clamp ( vector3 . dot ( x1 , y1 , z1 , x2 , y2 , z2 ) , - DecimalFloatingPoint , DecimalFloatingPoint ) ;
 final float angle = ( float ) math . acos ( dot ) ;
 return set from axis rad ( y1 * z2 - z1 * y2 , z1 * x2 - x1 * z2 , x1 * y2 - y1 * x2 , angle ) ;
 }
comment:
START set this quaternion to the rotation between two vectors . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public final class loader get aspect class loader ( ) {
 return this . aspect instance factory . get aspect class loader ( ) ;
 }
comment:
START return the class loader for aspect instances . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public builder < type , type > remove ( type key ) {
 map . remove ( key ) ;
 return this ;
 }
comment:
START remove that can be used in the fluent pattern . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK of the UNK to .

code:
public final char sequence get text ( @ string res int res id ) {
 return get resources ( ) . get text ( res id ) ;
 }
comment:
START return a localized , styled char sequence from the application 's package 's default string table . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
protected boolean get expose path variables ( ) {
 return this . expose path variables ;
 }
comment:
START return whether views resolved by this resolver should add path variables to the model or not . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
@ view debug . exported property ( category = String ) public final boolean is focusable ( ) {
 return e == ( mview flags & focusable_ k ) ;
 }
comment:
START returns whether this view is able to take focus . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .

code:
public void set marker ( marker marker ) {
 marker = marker ;
 }
comment:
START sets the marker that is displayed when a value is clicked on the chart @param marker END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of UNK UNK

code:
public parcel file descriptor get wallpaper file ( @ set wallpaper flags int which ) {
 return get wallpaper file ( which , context . get user id ( ) ) ;
 }
comment:
START get an open , readable file descriptor to the given wallpaper image file . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private int [ ] get sensitivity test values ( ) {
 int max sensitivity = mstatic info . get sensitivity maximum or default ( default_ y ) ;
 int min sensitivity = mstatic info . get sensitivity minimum or default ( default_ y ) ;
 int range = max sensitivity - min sensitivity ;
 int step size = default_ sensitivity_ step_ e ;
 int num steps = range / step size ;
 if ( num steps > default_ num_ sensitivity_ s ) {
 num steps = default_ num_ sensitivity_ s ;
 step size = range / num steps ;
 }
 int [ ] test values = new int [ num steps + DecimalInteger ] ;
 for ( int i = DecimalInteger ;
 i < test values . length ;
 i ++ ) {
 test values [ i ] = max sensitivity - step size * i ;
 test values [ i ] = mstatic info . get sensitivity clamp to range ( test values [ i ] ) ;
 }
 return test values ;
 }
comment:
START get the sensitivity array that contains multiple sensitivity steps in the sensitivity range . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public void set failure image ( int resource id ) {
 set failure image ( resources . get drawable ( resource id ) ) ;
 }
comment:
START sets a new failure drawable with old scale type . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void set protocol ( string protocol ) {
 this . protocol = protocol ;
 }
comment:
START set the mail protocol . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public float get angle ( ) {
 return body . get angle ( ) ;
 }
comment:
START get the angle in radians . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set zoom interpolator ( interpolator interpolator ) {
 interpolator = interpolator ;
 }
comment:
START set the zoom interpolator @param interpolator the zoom interpolator END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public list < exif tag > get all tags ( ) {
 return data . get all tags ( ) ;
 }
comment:
START get the exif tags in this exif interface object or null if none exist . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected byte [ ] get strip ( int index ) {
 return mstrip bytes . get ( index ) ;
 }
comment:
START gets the strip at the specified index . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public final string get volume identifier ( ) {
 return mvolume identifier ;
 }
comment:
START returns the volume identifier for the storage unit @return the storage volume identifier END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
protected < t > t get bean ( string bean name , class < t > expected type ) {
 return bean factory annotation utils . qualified bean of type ( this . bean factory , expected type , bean name ) ;
 }
comment:
START return a bean with the specified name and type . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static class < ? > [ ] get all interfaces for class ( class < ? > clazz ) {
 return get all interfaces for class ( clazz , null ) ;
 }
comment:
START return all interfaces that the given class implements as array , including ones implemented by superclasses . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void remove session ( media session record record ) {
 sessions . remove ( record ) ;
 if ( record == mglobal priority session ) {
 mglobal priority session = null ;
 }
 clear cache ( ) ;
 }
comment:
START remove a record from the priority tracker . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK .
used to the UNK of UNK

code:
public boolean contains key ( type key ) {
 return map . contains key ( key ) ;
 }
comment:
START returns true if this container has an association to a value for the given key . END
BLUE1:0.285714285714
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public string get output footer ( ) {
 return formatter . get footer ( ) ;
 }
comment:
START returns the output footer particular to the associated formatter END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public static key serializer < integer > get UNK key serializer ( ) {
 return UNK key serializer . e ;
 }
comment:
START returns a map key serializer for integer keys . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public string peek auth token ( final account account , final string auth token type ) {
 if ( account == null ) throw new illegal argument exception ( String ) ;
 if ( auth token type == null ) throw new illegal argument exception ( String ) ;
 try {
 return service . peek auth token ( account , auth token type ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START gets an auth token from the account manager 's cache . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public final string get category ( int index ) {
 return categories . get ( index ) ;
 }
comment:
START return a category in the filter . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
static native long native create process ( string command line , byte [ ] env , string cwd , string stdout file , string stderr file ) ;
comment:
START creates a process with the specified windows command line . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public boolean set value ( byte value ) {
 return set value ( new byte [ ] {
 value }
 ) ;
 }
comment:
START sets byte value into this tag . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
set the UNK of the given UNK .

code:
public builder add dns server ( inet address address ) {
 if ( address . is loopback address ( ) || address . is any local address ( ) ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( config . dns servers == null ) {
 config . dns servers = new array list < string > ( ) ;
 }
 config . dns servers . add ( address . get host address ( ) ) ;
 return this ;
 }
comment:
START add a dns server to the vpn connection . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public final string get path ( ) {
 return this . path ;
 }
comment:
START return the path for this resource . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public void delay ( long delay millis ) {
 synchronized ( this ) {
 for ( int i = DecimalInteger , n = tasks . size ;
 i < n ;
 i ++ ) {
 task task = tasks . get ( i ) ;
 synchronized ( task ) {
 task . execute time millis += delay millis ;
 }
 }
 }
 }
comment:
START adds the specified delay to all tasks . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public reader reader ( string charset ) {
 throw new gdx runtime exception ( String ) ;
 }
comment:
START returns a reader for reading this file as characters . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public list < string > get supported color effects ( ) {
 string str = get ( key_ t + supported_ values_ x ) ;
 return split ( str ) ;
 }
comment:
START gets the supported color effects . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
private static boolean merge ( final class writer cw , int t , final int [ ] types , final int index ) {
 int u = types [ index ] ;
 if ( u == t ) {
 return false ;
 }
 if ( ( t & ~ m ) == l ) {
 if ( u == l ) {
 return false ;
 }
 t = l ;
 }
 if ( u == DecimalInteger ) {
 types [ index ] = t ;
 return true ;
 }
 int v ;
 if ( ( u & base_ d ) == t || ( u & m ) != DecimalInteger ) {
 if ( t == l ) {
 return false ;
 }
 else if ( ( t & ( m | base_ d ) ) == ( u & ( m | base_ d ) ) ) {
 if ( ( u & base_ d ) == t ) {
 v = ( t & m ) | t | cw . get merged type ( t & base_ e , u & base_ e ) ;
 }
 else {
 v = t | cw . add type ( String ) ;
 }
 }
 else if ( ( t & base_ d ) == t || ( t & m ) != DecimalInteger ) {
 v = t | cw . add type ( String ) ;
 }
 else {
 v = p ;
 }
 }
 else if ( u == l ) {
 v = ( t & base_ d ) == t || ( t & m ) != DecimalInteger ? t : p ;
 }
 else {
 v = p ;
 }
 if ( u != v ) {
 types [ index ] = v ;
 return true ;
 }
 return false ;
 }
comment:
START returns true if the type array has been modified by this operation . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
set to UNK UNK .
sets the UNK of the given UNK .
set to UNK for the given UNK .
set to UNK to UNK .

code:
protected object lookup stub ( ) throws remote lookup failure exception {
 try {
 return lookup ( ) ;
 }
 catch ( naming exception ex ) {
 throw new remote lookup failure exception ( String + get jndi name ( ) + String , ex ) ;
 }
 }
comment:
START create the rmi stub , typically by looking it up . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
private boolean select current paragraph ( ) {
 if ( ! mtext view . can select text ( ) ) {
 return false ;
 }
 if ( needs to select all to select word or paragraph ( ) ) {
 return mtext view . select all text ( ) ;
 }
 long last touch offsets = get last touch offsets ( ) ;
 final int min last touch offset = text utils . unpack range start from long ( last touch offsets ) ;
 final int max last touch offset = text utils . unpack range end from long ( last touch offsets ) ;
 final long UNK range = get UNK range ( min last touch offset , max last touch offset ) ;
 final int start = text utils . unpack range start from long ( UNK range ) ;
 final int end = text utils . unpack range end from long ( UNK range ) ;
 if ( start < end ) {
 selection . set selection ( ( spannable ) mtext view . get text ( ) , start , end ) ;
 return true ;
 }
 return false ;
 }
comment:
START return true if the operation was successfully performed . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void recycle ( ) {
 if ( strategy == null ) {
 clear ( ) ;
 pool . release ( this ) ;
 }
 }
comment:
START return a velocity tracker object back to be UNK by others . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public float get joint angle ( ) {
 return joint . get joint angle ( ) ;
 }
comment:
START get the current joint angle in radians . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public closeable reference < bitmap > create bitmap ( display metrics display , int [ ] colors , int offset , int stride , int width , int height , bitmap . config config , @ nullable object caller context ) {
 closeable reference < bitmap > bitmap ref = create bitmap ( display , width , height , config , caller context ) ;
 bitmap bitmap = bitmap ref . get ( ) ;
 bitmap . set pixels ( colors , offset , stride , DecimalInteger , DecimalInteger , width , height ) ;
 return bitmap ref ;
 }
comment:
START creates a bitmap with the specified width and height . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
boolean sync bluetooth state ( ) {
 int current state = adapter . get state ( ) ;
 if ( current state != state ) {
 set bluetooth state int ( adapter . get state ( ) ) ;
 return true ;
 }
 return false ;
 }
comment:
START returns true if the state changed false otherwise . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .

code:
public drawable get drawable ( ) {
 if ( drawable == mrecycleable bitmap drawable ) {
 mrecycleable bitmap drawable = null ;
 }
 return drawable ;
 }
comment:
START return the view 's drawable , or null if no drawable has been assigned . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public void set prompt view ( @ nullable view prompt ) {
 boolean showing = is showing ( ) ;
 if ( showing ) {
 remove prompt view ( ) ;
 }
 mprompt view = prompt ;
 if ( showing ) {
 show ( ) ;
 }
 }
comment:
START set a view to UNK as a user prompt for this popup window . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
sets the UNK of the UNK to .

code:
@ visible for testing public header discovery . dotd pruning mode get dotd pruning plan ( ) {
 return dotd pruning plan ;
 }
comment:
START returns the dotd pruning plan for this compile END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected application component get application component ( ) {
 return ( ( android application ) get application ( ) ) . get application component ( ) ;
 }
comment:
START get the main application component for dependency injection . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
collection < v > create unmodifiable empty collection ( ) {
 return unmodifiable collection subclass ( create collection ( ) ) ;
 }
comment:
START creates an unmodifiable , empty collection of values . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public input binding get current input binding ( ) {
 return minput binding ;
 }
comment:
START return the currently active input binding for the input method , or null if there is none . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public drawable get drawable ( string name ) {
 drawable drawable = optional ( name , drawable . class ) ;
 if ( drawable != null ) return drawable ;
 try {
 texture region texture region = get region ( name ) ;
 if ( texture region instanceof atlas region ) {
 atlas region region = ( atlas region ) texture region ;
 if ( region . splits != null ) drawable = new nine patch drawable ( get patch ( name ) ) ;
 else if ( region . rotate || region . packed width != region . original width || region . packed height != region . original height ) drawable = new sprite drawable ( get sprite ( name ) ) ;
 }
 if ( drawable == null ) drawable = new texture region drawable ( texture region ) ;
 }
 catch ( gdx runtime exception ignored ) {
 }
 if ( drawable == null ) {
 nine patch patch = optional ( name , nine patch . class ) ;
 if ( patch != null ) drawable = new nine patch drawable ( patch ) ;
 else {
 sprite sprite = optional ( name , sprite . class ) ;
 if ( sprite != null ) drawable = new sprite drawable ( sprite ) ;
 else throw new gdx runtime exception ( String + name ) ;
 }
 }
 if ( drawable instanceof base drawable ) ( ( base drawable ) drawable ) . set name ( name ) ;
 add ( name , drawable , drawable . class ) ;
 return drawable ;
 }
comment:
START returns a registered drawable . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
@ deprecated public void set plugins path ( string plugins path ) {
 }
comment:
START sets a custom path to plugins used by the web view . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public intent put extra ( string name , double value ) {
 if ( extras == null ) {
 extras = new bundle ( ) ;
 }
 extras . put double ( name , value ) ;
 return this ;
 }
comment:
START add extended data to the intent . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public list < UNK response > get nodes ( ) {
 return nodes ;
 }
comment:
START get the <em> successful </em> node responses . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
@ non null public printer id get id ( ) {
 return id ;
 }
comment:
START get the globally unique printer id . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public url path helper get url path helper ( ) {
 return this . url path helper ;
 }
comment:
START return the url path helper implementation to use . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
START find the _ fields constant that matches name , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
private file get screenshot dir ( ) {
 return new file ( environment . get external storage directory ( ) , String + file . separator + String ) ;
 }
comment:
START get the directory where screenshot images are stored . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void remove route ( int index ) {
 route info route = routes . remove ( index ) ;
 route . group = null ;
 mupdate name = true ;
 update volume ( ) ;
 dispatch route UNK ( route , this ) ;
 route updated ( ) ;
 }
comment:
START remove the route at the specified index from this group . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to the UNK .
used to the UNK of the given UNK .
used to the UNK of the given .

code:
public final input device get device ( ) {
 return input device . get device ( get device id ( ) ) ;
 }
comment:
START gets the device that this event came from . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public long get total kb ( ) {
 return get ram kb ( String ) ;
 }
comment:
START return the total physical memory . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void remove uid stats locked ( int uid ) {
 mkernel uid cpu time reader . remove uid ( uid ) ;
 UNK stats . remove ( uid ) ;
 }
comment:
START remove the statistics object for a particular uid . END
BLUE1:0.285714285714
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK .
used to the UNK of the given .

code:
public reader reader ( ) {
 return new input stream reader ( read ( ) ) ;
 }
comment:
START returns a reader for reading this file as characters . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final vec2 get center ( ) {
 final vec2 center = new vec2 ( lower bound ) ;
 center . add local ( upper bound ) ;
 center . mul local ( DecimalFloatingPoint ) ;
 return center ;
 }
comment:
START get the center of the aabb @return END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
public void set environment ( environment environment ) {
 this . environment = environment ;
 }
comment:
START set the environment to use when reading bean definitions . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public int create session ( @ non null session params params ) throws exception {
 try {
 return installer . create session ( params , UNK package name , muser id ) ;
 }
 catch ( runtime exception e ) {
 exception utils . maybe unwrap exception ( e ) ;
 throw e ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START create a new session using the given parameters , returning a unique id that represents the session . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set input filter ( UNK filter filter ) {
 synchronized ( minput filter lock ) {
 final UNK filter old filter = minput filter ;
 if ( old filter == filter ) {
 return ;
 }
 if ( old filter != null ) {
 minput filter = null ;
 minput filter host . disconnect locked ( ) ;
 minput filter host = null ;
 try {
 old filter . UNK ( ) ;
 }
 catch ( remote exception re ) {
 }
 }
 if ( filter != null ) {
 minput filter = filter ;
 minput filter host = new input filter host ( ) ;
 try {
 filter . install ( minput filter host ) ;
 }
 catch ( remote exception re ) {
 }
 }
 native set input filter enabled ( ptr , filter != null ) ;
 }
 }
comment:
START sets an input filter that will receive all input events before they are dispatched . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public object evaluate ( string path , stash stash ) throws exception {
 string [ ] parts = parse path ( path ) ;
 object object = this . object ;
 for ( string part : parts ) {
 object = evaluate ( part , object , stash ) ;
 if ( object == null ) {
 return null ;
 }
 }
 return object ;
 }
comment:
START returns the object corresponding to the provided path if present , null otherwise END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public synchronized cluster state get next cluster state to process ( ) {
 if ( pending states . is empty ( ) ) {
 return null ;
 }
 cluster state context state to process = null ;
 int index = DecimalInteger ;
 for ( ;
 index < pending states . size ( ) ;
 index ++ ) {
 cluster state context potential state = pending states . get ( index ) ;
 if ( potential state . committed ( ) ) {
 state to process = potential state ;
 break ;
 }
 }
 if ( state to process == null ) {
 return null ;
 }
 for ( ;
 index < pending states . size ( ) ;
 index ++ ) {
 cluster state context potential state = pending states . get ( index ) ;
 if ( potential state . state . UNK ( state to process . state ) && potential state . committed ( ) ) {
 state to process = potential state ;
 }
 }
 assert state to process . committed ( ) : String + state to process . state ;
 return state to process . state ;
 }
comment:
START gets the next committed state to process . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public array < v > to array ( array < v > array ) {
 while ( has next ) array . add ( next ( ) ) ;
 return array ;
 }
comment:
START adds the remaining values to the specified array . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
public string get json ( ) {
 return this . json ;
 }
comment:
START return the actual json content string . END
BLUE1:0.285714285714
--generate--
returns the UNK of the request .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the request

code:
public job data map get job data map ( ) {
 return this . job data map ;
 }
comment:
START return the trigger 's job data map . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public wake lock new wake lock ( int level and flags , string tag ) {
 validate wake lock parameters ( level and flags , tag ) ;
 return new wake lock ( level and flags , tag , context . get op package name ( ) ) ;
 }
comment:
START creates a new wake lock with the specified level and flags . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void init ( ) {
 try {
 if ( this . region == null || this . region . equals ( String ) ) {
 r . debug ( String ) ;
 return ;
 }
 list domains result list domains = UNK client ( ) . list domains ( ) ;
 for ( string d : list domains . get domain names ( ) ) {
 if ( d . equals ( domain ) ) {
 r . debug ( String , domain ) ;
 return ;
 }
 }
 r . info ( String , domain ) ;
 create domain request create domain request = new create domain request ( domain ) ;
 UNK client ( ) . create domain ( create domain request ) ;
 }
 catch ( amazon client exception e ) {
 r . warn ( String , e ) ;
 }
 }
comment:
START creates the simple b domain , if it does not already exist . END
BLUE1:0.285714285714
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static priority get UNK priority ( @ nullable priority UNK , @ nullable priority UNK ) {
 if ( UNK == null ) {
 return UNK ;
 }
 if ( UNK == null ) {
 return UNK ;
 }
 if ( UNK . ordinal ( ) > UNK . ordinal ( ) ) {
 return UNK ;
 }
 else {
 return UNK ;
 }
 }
comment:
START gets the higher priority among the two . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static fields find by name ( string name ) {
 return by name . get ( name ) ;
 }
comment:
START find the _ fields constant that matches name , or null if its not found . END
BLUE1:0.285714285714
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public float get pitch rad ( ) {
 final int pole = get UNK pole ( ) ;
 return pole == DecimalInteger ? ( float ) math . UNK ( math utils . clamp ( DecimalFloatingPoint * ( w * x - z * y ) , - DecimalFloatingPoint , DecimalFloatingPoint ) ) : ( float ) pole * math utils . i * DecimalFloatingPoint ;
 }
comment:
START get the pitch euler angle in radians , which is the rotation around the x axis . END
BLUE1:0.285714285714
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static void set callbacks ( drawable drawable , @ nullable drawable . callback callback , @ nullable transform callback transform callback ) {
 if ( drawable != null ) {
 drawable . set callback ( callback ) ;
 if ( drawable instanceof transform aware drawable ) {
 ( ( transform aware drawable ) drawable ) . set transform callback ( transform callback ) ;
 }
 }
 }
comment:
START sets callback to the drawable . END
BLUE1:0.272727272727
--generate--
set the listener that should be added to the user .
set the listener that will be used to the UNK .
set the listener that should be added to the UNK .
set the listener that will be used to the UNK of the UNK .
set the listener that will be used to the UNK of the UNK

code:
public void set color ( color color ) {
 this . color = color . UNK ( color . r , color . g , color . b , color . a ) ;
 }
comment:
START sets the color for the following drawing operations . END
BLUE1:0.272727272727
--generate--
set the listener that should be applied to the user .
set the listener that should be applied to the UNK .
set the listener that will be used to the UNK .
set the listener that should be applied to the current .
set the listener that will be used to the UNK of the UNK .

code:
public void set window title ( char sequence title ) {
 if ( ! muser title ) {
 set title impl ( title ) ;
 }
 }
comment:
START set the window title . END
BLUE1:0.272727272727
--generate--
set the listener that should be added to the user .
set the listener that will be used to the UNK .
set the listener that should be added to the UNK .
set the listener that will be used to the UNK of UNK .
set the listener that will be used to the UNK of UNK

code:
public void set parameter listener ( on parameter change listener listener ) {
 synchronized ( mlistener lock ) {
 UNK change listener = listener ;
 }
 if ( ( listener != null ) && ( mnative event handler == null ) ) {
 create native event handler ( ) ;
 }
 }
comment:
START sets the listener audio effect notifies when a parameter is changed . END
BLUE1:0.272727272727
--generate--
set the listener that should be added to the user .
set the listener that will be used to the UNK .
set the listener that should be added to the UNK .
set the listener that will be used to the UNK of the UNK .
set the listener that will be used to the UNK of the UNK

code:
public void set title text color ( @ color int int color ) {
 mtitle text color = color ;
 if ( mtitle text view != null ) {
 mtitle text view . set text color ( color ) ;
 }
 }
comment:
START sets the text color of the title , if present . END
BLUE1:0.272727272727
--generate--
set the listener that should be added to the user .
set the listener that will be used to the UNK .
set the listener that should be added to the UNK .
set the listener that will be used to the UNK of the UNK .
set the listener that will be used to the UNK of the UNK

code:
public void set update listener ( effect update listener listener ) {
 }
comment:
START set an effect listener . END
BLUE1:0.272727272727
--generate--
set the listener that should be applied to the request .
set the listener that should be applied to the user .
set the listener that should be applied to the action .
set the listener that should be applied to the current .
set the listener that should be applied to the user

code:
public cpp compile action builder set pic mode ( boolean use pic ) {
 this . use pic = use pic ;
 return this ;
 }
comment:
START sets whether the compile action should use pic mode . END
BLUE1:0.272727272727
--generate--
sets the listener that will be applied to the UNK .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current UNK .
sets the listener that will be applied to the UNK of the UNK .
sets the listener that will be applied to the current .

code:
public final void set require session ( boolean require session ) {
 this . require session = require session ;
 }
comment:
START set whether a session should be required to handle requests . END
BLUE1:0.272727272727
--generate--
sets the listener that will be applied to the UNK .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the UNK of .
sets the listener that will be applied to the current .
sets the listener that will be applied to the UNK of the UNK .

code:
public void set shadow width ( float width ) {
 mshadow width = utils . convert dp to pixel ( width ) ;
 }
comment:
START sets the width of the UNK in pixels . END
BLUE1:0.272727272727
--generate--
set the listener that should be applied to the user .
set the listener that should be applied to the UNK .
set the listener that will be used to the UNK .
set the listener that should be applied to the current .
set the listener that will be used to the UNK of the UNK .

code:
@ deprecated void set scroll view callbacks ( observable scroll view callbacks listener ) ;
comment:
START set a callback listener . END
BLUE1:0.272727272727
--generate--
set the listener that should be applied to the user .
set the listener that should be applied to the given UNK .
set the listener that should be applied to the current .
set the listener that should be applied to the given .
set the listener that should be applied to the user

code:
public void set window title ( char sequence title ) {
 if ( ! muser title ) {
 set title impl ( title ) ;
 }
 }
comment:
START set the window title . END
BLUE1:0.272727272727
--generate--
set the listener that should be added to the user .
set the listener that will be used to the UNK .
set the listener that should be added to the UNK .
set the listener that will be used to the UNK of UNK .
set the listener that will be used to the UNK of UNK

code:
protected index shard new shard ( shard routing routing , index meta data index meta data , @ nullable index searcher wrapper index searcher wrapper , indexing operation listener ... listeners ) throws exception {
 final shard id shard id = routing . shard id ( ) ;
 final node environment . node path node path = new node environment . node path ( create temp dir ( ) ) ;
 shard path shard path = new shard path ( false , node path . resolve ( shard id ) , node path . resolve ( shard id ) , shard id ) ;
 return new shard ( routing , shard path , index meta data , index searcher wrapper , listeners ) ;
 }
comment:
START creates a new initializing shard . END
BLUE1:0.25
--generate--
returns a immutable array of the UNK .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable array of the given file .
returns a immutable array of the given UNK .

code:
public builder add ( string name , string value ) {
 check name and value ( name , value ) ;
 return add lenient ( name , value ) ;
 }
comment:
START add a field with the specified value . END
BLUE1:0.25
--generate--
adds the given UNK to the UNK .
adds the given UNK to the given UNK .
adds a new UNK to the given UNK .
adds the given UNK to the specified UNK .
adds the given UNK to the given .

code:
public static activity options make custom animation ( context context , int enter res id , int exit res id , handler handler , on animation started listener listener ) {
 activity options opts = new activity options ( ) ;
 opts . mpackage name = context . get package name ( ) ;
 opts . manimation type = anim_ m ;
 opts . mcustom enter res id = enter res id ;
 opts . mcustom exit res id = exit res id ;
 opts . set on animation started listener ( handler , listener ) ;
 return opts ;
 }
comment:
START create an activity options specifying a custom animation to run when the activity is displayed . END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
public void set z ( float z ) {
 this . position . z = z ;
 updated = false ;
 }
comment:
START sets the position on the z axis @param z position to locate the decal at END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the user .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
public put repository request builder set settings ( settings . builder settings ) {
 request . settings ( settings ) ;
 return this ;
 }
comment:
START sets the repository settings @param settings repository settings builder @return this builder END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
private static boolean is valid port ( int port ) {
 return port >= DecimalInteger && port <= DecimalInteger ;
 }
comment:
START return true for valid port numbers . END
BLUE1:0.25
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the given UNK is UNK .
returns true if the UNK is UNK in the UNK .
returns true if the user is UNK in the UNK .

code:
protected map < string , object > create column map ( int column count ) {
 return new linked case insensitive map < > ( column count ) ;
 }
comment:
START create a map instance to be used as column map . END
BLUE1:0.25
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data for the given file .
returns a immutable array of the data for the given UNK .

code:
public account header builder with on account header selection view click listener ( account header . on account header selection view click listener on account header selection view click listener ) {
 this . mon account header selection view click listener = on account header selection view click listener ;
 return this ;
 }
comment:
START set a on selection listener for the selection box @param on account header selection view click listener @return END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the user .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
@ fluent multi map add ( string name , string value ) ;
comment:
START adds a new value with the specified name and value . END
BLUE1:0.25
--generate--
sets the UNK for the given UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given file .
sets the UNK of the given UNK .

code:
public event handler group < t > handle events with ( final event handler < ? super t > ... handlers ) {
 return disruptor . create event processors ( sequences , handlers ) ;
 }
comment:
START set up batch handlers to handle events from the ring buffer . END
BLUE1:0.25
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .
returns a immutable array of the data in the given file .

code:
public static boolean get boolean ( string key , boolean def ) {
 if ( key . length ( ) > prop_ name_ x ) {
 throw new illegal argument exception ( String + prop_ name_ x ) ;
 }
 return UNK ( key , def ) ;
 }
comment:
START get the value for the given key , returned as a boolean . END
BLUE1:0.25
--generate--
returns true if the file is UNK .
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public static camera open legacy ( int camera id , int UNK version ) {
 if ( UNK version < camera_ UNK UNK UNK ) {
 throw new illegal argument exception ( String + UNK version ) ;
 }
 return new camera ( camera id , UNK version ) ;
 }
comment:
START creates a new camera object to access a particular hardware camera with given hal api version . END
BLUE1:0.25
--generate--
returns a immutable instance of the given key , in any .
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given key .
returns a immutable instance of the given file .

code:
public http headers preflight response headers ( ) {
 if ( preflight headers . is empty ( ) ) {
 return http headers . empty_ s ;
 }
 final http headers preflight headers = new default http headers ( ) ;
 for ( map . entry < char sequence , callable < ? > > entry : this . preflight headers . entry set ( ) ) {
 final object value = get value ( entry . get value ( ) ) ;
 if ( value instanceof iterable ) {
 preflight headers . add ( entry . get key ( ) . to string ( ) , ( iterable < ? > ) value ) ;
 }
 else {
 preflight headers . add ( entry . get key ( ) . to string ( ) , value ) ;
 }
 }
 return preflight headers ;
 }
comment:
START returns http response headers that should be added to a cors preflight response . END
BLUE1:0.25
--generate--
returns a immutable instance of the given values , in any .
returns a immutable instance of the given values .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given values , in any

code:
@ can ignore return value public static boolean remove all ( iterable < ? > remove from , collection < ? > elements to remove ) {
 return ( remove from instanceof collection ) ? ( ( collection < ? > ) remove from ) . remove all ( check not null ( elements to remove ) ) : iterators . remove all ( remove from . iterator ( ) , elements to remove ) ;
 }
comment:
START removes , from an iterable , every element that belongs to the provided collection . END
BLUE1:0.25
--generate--
returns a immutable instance of the given values , in any .
returns a immutable instance of the given values .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given values , in any

code:
@ suppress warnings ( {
 String , String }
 ) public static < k , v > map < k , v > create map ( class < ? > map type , class < ? > key type , int capacity ) {
 assert . not null ( map type , String ) ;
 if ( map type . is interface ( ) ) {
 if ( map . class == map type ) {
 return new linked hash map < > ( capacity ) ;
 }
 else if ( sorted map . class == map type || navigable map . class == map type ) {
 return new tree map < > ( ) ;
 }
 else if ( multi value map . class == map type ) {
 return new linked multi value map ( ) ;
 }
 else {
 throw new illegal argument exception ( String + map type . get name ( ) ) ;
 }
 }
 else if ( enum map . class == map type ) {
 assert . not null ( key type , String ) ;
 return new enum map ( as enum type ( key type ) ) ;
 }
 else {
 if ( ! map . class . is assignable from ( map type ) ) {
 throw new illegal argument exception ( String + map type . get name ( ) ) ;
 }
 try {
 return ( map < k , v > ) reflection utils . accessible constructor ( map type ) . new instance ( ) ;
 }
 catch ( throwable ex ) {
 throw new illegal argument exception ( String + map type . get name ( ) , ex ) ;
 }
 }
 }
comment:
START create the most appropriate map for the given map type . END
BLUE1:0.25
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable instance of the given file .
returns a immutable array of the given UNK .
returns a immutable instance of the given file , in any .

code:
public static boolean tasks are floating ( int stack id ) {
 return stack id == freeform_ workspace_ stack_ d || stack id == pinned_ stack_ d ;
 }
comment:
START return whether a stack id is a stack containing floating windows . END
BLUE1:0.25
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
@ system api @ requires permission ( manifest . permission . UNK grant_ UNK s ) public abstract void add on permissions change listener ( on permissions changed listener listener ) ;
comment:
START adds a listener for permission changes for installed packages . END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that should be applied to the given UNK .
sets the listener that should be added to the given UNK .
sets the listener that should be applied to the current .
sets the listener that should be applied to the given .

code:
public static boolean has color ( int packed color ) {
 return ( packed color > > > DecimalInteger ) != DecimalInteger || ( packed color & 0x UNK ) == DecimalInteger ;
 }
comment:
START returns whether a packed color indicates a non-default value . END
BLUE1:0.25
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the user is UNK in the UNK .
returns true if the UNK is UNK in the UNK .

code:
public drawer builder with slider background drawable res ( @ drawable res int slider background drawable res ) {
 this . mslider background drawable res = slider background drawable res ;
 return this ;
 }
comment:
START set the background drawable for the slider from a resource . END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
protected object get home ( ) throws naming exception {
 if ( ! this . cache home || ( this . lookup home on startup && ! is home refreshable ( ) ) ) {
 return ( this . cached home != null ? this . cached home : lookup ( ) ) ;
 }
 else {
 synchronized ( this . home monitor ) {
 if ( this . cached home == null ) {
 this . cached home = lookup ( ) ;
 this . create method = get create method ( this . cached home ) ;
 }
 return this . cached home ;
 }
 }
 }
comment:
START return the ejb home object to use . END
BLUE1:0.25
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public static completable concat ( observable < ? extends completable > sources ) {
 return concat ( sources , DecimalInteger ) ;
 }
comment:
START returns a completable which completes only when all sources complete , one after another . END
BLUE1:0.25
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
public void set compilation customizers ( compilation UNK ... compilation customizers ) {
 this . compiler configuration . add compilation customizers ( compilation customizers ) ;
 }
comment:
START set one or more UNK to be applied to this evaluator 's compiler configuration . END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the user .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
public static spline create spline ( float [ ] x , float [ ] y ) {
 if ( ! is UNK increasing ( x ) ) {
 throw new illegal argument exception ( String + String ) ;
 }
 if ( is UNK ( y ) ) {
 return create UNK cubic spline ( x , y ) ;
 }
 else {
 return create linear spline ( x , y ) ;
 }
 }
comment:
START creates an appropriate UNK based on the properties of the control points . END
BLUE1:0.25
--generate--
returns a immutable instance of the given values , in any .
returns a immutable instance of the given values .
returns a immutable instance of the given key .
returns a immutable array of the UNK .
returns a immutable instance of the given values , in any

code:
public script . kernel d get kernel src ( ) {
 return create kernel d ( DecimalInteger , DecimalInteger , null , null ) ;
 }
comment:
START get a kernel d for the src kernel . END
BLUE1:0.25
--generate--
returns a immutable instance of the given file , if any .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given file .
returns a immutable array of the UNK .

code:
private stopwatch timer read timer from parcel ( int type , array list < stopwatch timer > pool , time base time base , parcel in ) {
 if ( in . read int ( ) == DecimalInteger ) {
 return null ;
 }
 return new stopwatch timer ( UNK . UNK , uid , type , pool , time base , in ) ;
 }
comment:
START return a new timer , or null . END
BLUE1:0.25
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given key , in any .
returns a immutable array of the UNK .

code:
public static android data UNK create with path UNK ( listening executor service executor service ) {
 return create ( content UNK checker . create ( ) , executor service ) ;
 }
comment:
START creates a UNK with a file contents UNK UNK . END
BLUE1:0.25
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given file .

code:
public static < e > ring buffer < e > create multi producer ( event factory < e > factory , int buffer size , wait strategy wait strategy ) {
 multi producer sequencer sequencer = new multi producer sequencer ( buffer size , wait strategy ) ;
 return new ring buffer < e > ( factory , sequencer ) ;
 }
comment:
START create a new multiple producer ring buffer with the specified wait strategy . END
BLUE1:0.25
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key .
returns a immutable array of the UNK .
returns a immutable instance of the given key , in any .
returns a immutable instance of the given file .

code:
private closeable reference < bitmap > create bitmap ( display metrics display , int width , int height , bitmap . config config , boolean has alpha ) {
 return create bitmap ( display , width , height , config , has alpha , null ) ;
 }
comment:
START creates a bitmap with the specified width and height . END
BLUE1:0.25
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given key , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given key .

code:
private static function score query builder create random function score builder ( ) {
 switch ( random int between ( DecimalInteger , DecimalInteger ) ) {
 case DecimalInteger : filter function builder [ ] functions = new filter function builder [ random int between ( DecimalInteger , DecimalInteger ) ] ;
 for ( int i = DecimalInteger ;
 i < functions . length ;
 i ++ ) {
 functions [ i ] = new filter function builder ( random query builder . create query ( random ( ) ) , random score function ( ) ) ;
 }
 if ( random boolean ( ) ) {
 return new function score query builder ( random query builder . create query ( random ( ) ) , functions ) ;
 }
 return new function score query builder ( functions ) ;
 case DecimalInteger : return new function score query builder ( random score function ( ) ) ;
 case DecimalInteger : return new function score query builder ( random query builder . create query ( random ( ) ) , random score function ( ) ) ;
 case DecimalInteger : return new function score query builder ( random query builder . create query ( random ( ) ) ) ;
 default : throw new unsupported operation exception ( ) ;
 }
 }
comment:
START creates a random function score query using only constructor params . END
BLUE1:0.25
--generate--
returns a immutable array of the UNK .
returns a immutable instance of the given key .
returns a immutable instance of the given type .
returns a immutable instance of the given key , in any .
returns a immutable instance of the given file .

code:
protected resource pattern resolver get resource pattern resolver ( ) {
 return new path matching resource pattern resolver ( this ) ;
 }
comment:
START return the resource pattern resolver to use for resolving location patterns into resource instances . END
BLUE1:0.25
--generate--
returns a immutable array of the data .
returns a immutable array of the UNK .
returns a immutable array of the data for the given file .
returns a immutable array of the data for the given type .
returns a immutable array of the data for the given UNK .

code:
public builder set fix message ( fix message fix message ) {
 this . fix message = fix message ;
 return this ;
 }
comment:
START set the message to display when a missing indirect dependency is found . END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
private void setup start end listeners ( ) {
 transition set listener listener = new transition set listener ( this ) ;
 for ( transition child transition : transitions ) {
 child transition . add listener ( listener ) ;
 }
 mcurrent listeners = transitions . size ( ) ;
 }
comment:
START sets up listeners for each of the child transitions . END
BLUE1:0.25
--generate--
set the listener that should be enabled .
set the listener that should be used to UNK .
set the listener that should be used to UNK UNK .
set the listener that should be used to UNK the UNK .
set the listener that should be used to UNK UNK

code:
public void set view pager ( view pager view pager ) {
 mtab strip . remove all views ( ) ;
 mview pager = view pager ;
 if ( view pager != null ) {
 view pager . set on page change listener ( new internal view pager listener ( ) ) ;
 populate tab strip ( ) ;
 }
 }
comment:
START sets the associated view pager . END
BLUE1:0.25
--generate--
set the listener that should be enabled .
set the listener that will be used for the UNK .
set the listener that will be used to the UNK .
set the listener that should be used to the UNK .
set the listener that will be used to the UNK of the UNK .

code:
protected synchronized void mark change time ( ) {
 preconditions . check state ( clock != null ) ;
 last change time = clock . current time millis ( ) ;
 }
comment:
START sets the last change time to the current time . END
BLUE1:0.25
--generate--
set the listener that should be enabled .
set the listener that will be used for the UNK .
set the listener that will be used to the UNK .
set the listener that should be used to the UNK .
set the listener that will be used to the UNK of the UNK .

code:
public static fileset traversal params recursive traversal of package ( label owner label , artifact build file , path fragment dest path , @ nullable set < string > excludes , symlink behavior symlink behavior mode , package boundary mode pkg boundary mode ) {
 preconditions . check state ( build file . is source artifact ( ) , String , build file ) ;
 return new directory traversal params ( owner label , direct traversal root impl . for package ( build file ) , true , dest path , excludes , symlink behavior mode , pkg boundary mode , true , false ) ;
 }
comment:
START creates parameters for a recursive traversal request in a package . END
BLUE1:0.25
--generate--
returns a immutable array of the UNK .
returns a immutable instance of the given type .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given type , in any .

code:
public static builder new builder from existing ( test summary existing ) {
 builder builder = new builder ( ) ;
 builder . merge from ( existing ) ;
 return builder ;
 }
comment:
START creates a new builder initialized with a copy of the existing object 's values . END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the user .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK UNK .
sets the listener that should be added to the UNK of the UNK .

code:
public static void set velocity threshold ( float threshold ) {
 settings . velocity threshold = threshold ;
 }
comment:
START sets the UNK velocity threshold globally , for all world instances . END
BLUE1:0.25
--generate--
returns the listener that should be enabled .
returns the listener that should be added to the given UNK .
returns the listener that should be added to the user .
returns the listener that should be added to the UNK .
returns the listener that should be added to the UNK of the UNK .

code:
public boolean remove ( int key ) {
 if ( key == DecimalInteger ) {
 if ( ! has zero value ) return false ;
 has zero value = false ;
 size -- ;
 return true ;
 }
 int index = key & mask ;
 if ( key table [ index ] == key ) {
 key table [ index ] = y ;
 size -- ;
 return true ;
 }
 index = hash2 ( key ) ;
 if ( key table [ index ] == key ) {
 key table [ index ] = y ;
 size -- ;
 return true ;
 }
 index = hash3 ( key ) ;
 if ( key table [ index ] == key ) {
 key table [ index ] = y ;
 size -- ;
 return true ;
 }
 return remove stash ( key ) ;
 }
comment:
START returns true if the key was removed . END
BLUE1:0.25
--generate--
remove the UNK of the given UNK .
returns the list of UNK UNK .
remove the UNK of the given file .
remove the UNK of the given .
returns the list of UNK UNK

code:
public update request builder set ttl ( string ttl ) {
 request . doc ( ) . ttl ( ttl ) ;
 return this ;
 }
comment:
START set the new ttl of the document as a time value expression . END
BLUE1:0.25
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
public int remove all ( predicate < k > predicate ) {
 array list < entry < k , v > > old exclusives ;
 array list < entry < k , v > > old entries ;
 synchronized ( this ) {
 old exclusives = mexclusive entries . remove all ( predicate ) ;
 old entries = mcached entries . remove all ( predicate ) ;
 make orphans ( old entries ) ;
 }
 maybe close ( old entries ) ;
 maybe notify exclusive entry removal ( old exclusives ) ;
 maybe update cache params ( ) ;
 maybe evict entries ( ) ;
 return old entries . size ( ) ;
 }
comment:
START removes all the items from the cache whose key matches the specified predicate . END
BLUE1:0.25
--generate--
creates a new instance of the UNK .
creates a new instance for the given UNK .
creates a new instance for the given file .
creates a new instance for the UNK .
creates a new instance of the given UNK .

code:
public static media codec info new passthrough instance ( string name ) {
 return new media codec info ( name , null , null ) ;
 }
comment:
START creates an instance representing an audio passthrough decoder . END
BLUE1:0.222222222222
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key , in any .

code:
@ can ignore return value public builder < k , v > put ( entry < ? extends k , ? extends v > entry ) {
 return put ( entry . get key ( ) , entry . get value ( ) ) ;
 }
comment:
START adds an entry to the built multimap . END
BLUE1:0.222222222222
--generate--
creates a new instance for the given UNK .
creates a new instance for the given file .
creates a new instance of the UNK .
creates a new instance of the given UNK .
creates a new instance for the UNK .

code:
public static credentials google ( string google token ) {
 if ( google token == null || google token . equals ( String ) ) {
 throw new illegal argument exception ( String ) ;
 }
 return new credentials ( identity provider . e , google token , null ) ;
 }
comment:
START creates credentials based on a google login . END
BLUE1:0.222222222222
--generate--
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given type , in any .

code:
public display get compatible display ( int display id , display adjustments UNK ) {
 display info display info = get display info ( display id ) ;
 if ( display info == null ) {
 return null ;
 }
 return new display ( this , display id , display info , UNK ) ;
 }
comment:
START gets information about a logical display . END
BLUE1:0.222222222222
--generate--
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given key , in any .

code:
public v put ( k key , v value ) {
 if ( key == null ) throw new illegal argument exception ( String ) ;
 return UNK ( key , value ) ;
 }
comment:
START returns the old value associated with the specified key , or null . END
BLUE1:0.222222222222
--generate--
creates a new instance for the given type .
creates a new instance for the given UNK .
creates a new instance for the given file .
creates a new instance of the UNK .
creates a new instance for the UNK .

code:
public static test analysis create test analysis ( index settings index settings , settings node settings , analysis plugin ... analysis plugins ) throws exception {
 environment env = new environment ( node settings ) ;
 analysis module analysis module = new analysis module ( env , arrays . as list ( analysis plugins ) ) ;
 analysis registry analysis registry = analysis module . get analysis registry ( ) ;
 return new test analysis ( analysis registry . build ( index settings ) , analysis registry . build token filter factories ( index settings ) , analysis registry . build tokenizer factories ( index settings ) , analysis registry . build char filter factories ( index settings ) ) ;
 }
comment:
START creates an test analysis with all the default analyzers configured . END
BLUE1:0.222222222222
--generate--
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given type , in any .

code:
private string get before message ( http servlet request request ) {
 return create message ( request , this . before message prefix , this . before message suffix ) ;
 }
comment:
START get the message to write to the log before the request . END
BLUE1:0.222222222222
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the UNK .
returns a immutable instance of the given type , in any .

code:
public static credentials twitter ( string twitter token ) {
 if ( twitter token == null || twitter token . equals ( String ) ) {
 throw new illegal argument exception ( String ) ;
 }
 return new credentials ( identity provider . r , twitter token , null ) ;
 }
comment:
START creates credentials based on a UNK login . END
BLUE1:0.222222222222
--generate--
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given type , in any .

code:
protected index shard new shard ( shard routing routing , index meta data index meta data , indexing operation listener ... listeners ) throws exception {
 return new shard ( routing , index meta data , null , listeners ) ;
 }
comment:
START creates a new initializing shard . END
BLUE1:0.222222222222
--generate--
returns a immutable instance of the given type .
returns a immutable array of the UNK .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file , in use .

code:
public boolean remove child ( view child ) {
 return remove child ( child , undefined_ item_ d ) ;
 }
comment:
START removes a child . END
BLUE1:0.222222222222
--generate--
creates a new instance of the UNK UNK .
creates a new instance of the UNK .
creates a new instance for the given UNK .
creates a new instance for the UNK .
creates a new instance of the given UNK .

code:
public void invoke ( string origin , boolean allow , boolean retain ) ;
comment:
START sets the geolocation permission state for the supplied origin . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public intent set type ( string type ) {
 data = null ;
 type = type ;
 return this ;
 }
comment:
START set an explicit mime data type . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public snapshots status request repository ( string repository ) {
 this . repository = repository ;
 return this ;
 }
comment:
START sets repository name @param repository repository name @return this request END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean build translations ( ) {
 return ( bundle translations != tri state . o ) && ! translation targets . is empty ( ) ;
 }
comment:
START returns true if the we should build translations . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
void add scroll view callbacks ( observable scroll view callbacks listener ) ;
comment:
START add a callback listener . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public date range aggregation builder add unbounded to ( string key , date time to ) {
 add range ( new range ( key , null , convert date time ( to ) ) ) ;
 return this ;
 }
comment:
START add a new range with no lower bound . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
public noop search request builder add sort ( sort builder sort ) {
 source builder ( ) . sort ( sort ) ;
 return this ;
 }
comment:
START adds a generic sort builder . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public range aggregation builder add unbounded from ( string key , double from ) {
 add range ( new range ( key , from , null ) ) ;
 return this ;
 }
comment:
START add a new range with no upper bound . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public internal search hit source ref ( bytes reference source ) {
 this . source = source ;
 this . source as bytes = null ;
 this . source as map = null ;
 return this ;
 }
comment:
START sets representation , might be compressed ... END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public create snapshot request builder set settings ( map < string , object > settings ) {
 request . settings ( settings ) ;
 return this ;
 }
comment:
START sets repository-specific snapshot settings . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public final mat22 add local ( final mat22 b ) {
 ex . x += b . ex . x ;
 ex . y += b . ex . y ;
 ey . x += b . ey . x ;
 ey . y += b . ey . y ;
 return this ;
 }
comment:
START add b to this matrix locally . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
static animator create animation ( view view , transition values values , int view pos x , int view pos y , float start x , float start y , float end x , float end y , time interpolator interpolator , transition transition ) {
 float terminal x = view . get translation x ( ) ;
 float terminal y = view . get translation y ( ) ;
 int [ ] start position = ( int [ ] ) values . view . get tag ( r . id . transition position ) ;
 if ( start position != null ) {
 start x = start position [ DecimalInteger ] - view pos x + terminal x ;
 start y = start position [ DecimalInteger ] - view pos y + terminal y ;
 }
 int start pos x = view pos x + math . round ( start x - terminal x ) ;
 int start pos y = view pos y + math . round ( start y - terminal y ) ;
 view . set translation x ( start x ) ;
 view . set translation y ( start y ) ;
 if ( start x == end x && start y == end y ) {
 return null ;
 }
 path path = new path ( ) ;
 path . move to ( start x , start y ) ;
 path . line to ( end x , end y ) ;
 object animator anim = object animator . of float ( view , view . UNK x , view . UNK y , path ) ;
 transition position listener listener = new transition position listener ( view , values . view , start pos x , start pos y , terminal x , terminal y ) ;
 transition . add listener ( listener ) ;
 anim . add listener ( listener ) ;
 anim . add pause listener ( listener ) ;
 anim . set interpolator ( interpolator ) ;
 return anim ;
 }
comment:
START creates an animator that can be used for x and/or y translations . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to UNK .
set to UNK to UNK to UNK .
set to UNK to UNK to UNK

code:
public void set touch enabled ( boolean enabled ) {
 mis touch enabled = enabled ;
 }
comment:
START set sliding enabled flag @param enabled flag value END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the request .
sets the UNK of the UNK .
sets the UNK of the UNK to .
sets the UNK of the request to be used to the UNK .

code:
public void set report issues ( boolean report issues ) {
 UNK issues = report issues ;
 }
comment:
START sets whether lint should report issues in this project . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
protected builder create builder ( action cache action cache , final int thread count , final boolean keep going ) throws exception {
 return create builder ( action cache , thread count , keep going , null ) ;
 }
comment:
START create a parallel builder with a database dependency checker using the specified action cache . END
BLUE1:0.2
--generate--
returns a immutable buffer that will be applied to the current list of UNK .
returns a immutable buffer that will be added by the specified key .
returns a immutable buffer that will be applied to the given key .
returns a immutable buffer that will be applied for the given key .
returns a immutable buffer that will be applied to the current list of UNK . .

code:
public void remove all sticky events ( ) {
 synchronized ( sticky events ) {
 sticky events . clear ( ) ;
 }
 }
comment:
START removes all sticky events . END
BLUE1:0.2
--generate--
used to UNK UNK .
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of UNK

code:
public account header builder with saved instance ( bundle saved instance ) {
 this . UNK instance = saved instance ;
 return this ;
 }
comment:
START create the drawer with the values of a saved instance @param saved instance @return END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
boolean connection UNK idle ( real connection connection ) {
 assert ( thread . UNK lock ( this ) ) ;
 if ( connection . no new streams || max idle connections == DecimalInteger ) {
 connections . remove ( connection ) ;
 return true ;
 }
 else {
 notify all ( ) ;
 return false ;
 }
 }
comment:
START returns true if the connection has been removed from the pool and should be closed . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ deprecated public void set background data setting ( boolean allow background data ) {
 }
comment:
START sets the value of the setting for background data usage . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the request .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the request

code:
@ suppress warnings ( String ) public boolean is android project ( ) {
 return true ;
 }
comment:
START returns true if this project is an android project . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public void add items at position ( int position , @ non null idrawer item ... drawer items ) {
 mdrawer builder . get item adapter ( ) . add ( position , drawer items ) ;
 }
comment:
START add new items to the current drawer item list at a specific position @param position @param drawer items END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public builder set read pending intent ( pending intent pending intent ) {
 UNK pending intent = pending intent ;
 return this ;
 }
comment:
START sets the pending intent that will be sent once the messages in this notification are read . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public get snapshots request builder add snapshots ( string ... snapshots ) {
 request . snapshots ( array utils . concat ( request . snapshots ( ) , snapshots ) ) ;
 return this ;
 }
comment:
START adds additional snapshots to the list of snapshots to return @param snapshots additional snapshots @return this builder END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public option set required ( boolean required ) {
 this . required = required ;
 return this ;
 }
comment:
START sets whether or not this option is mandatory . END
BLUE1:0.2
--generate--
set to UNK UNK .
set to UNK to UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public transport client add transport addresses ( transport address ... transport address ) {
 nodes service . add transport addresses ( transport address ) ;
 return this ;
 }
comment:
START adds a list of transport addresses that will be used to connect to . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public dialog text ( label label ) {
 content table . add ( label ) ;
 return this ;
 }
comment:
START adds the given label to the content table END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public static enabled components observer build ( @ non null context context , @ non null handler handler , @ non null string setting name , @ non null looper looper , @ non null string service permission , @ non null string service name , @ non null final object lock , @ non null collection < enabled component change listener > listeners ) {
 settings observer s = settings observer . build ( context , handler , setting name ) ;
 final enabled components observer o = new enabled components observer ( context , setting name , service permission , service name , lock , listeners ) ;
 package monitor package monitor = new package monitor ( ) {
 @ override public void on some packages changed ( ) {
 o . on packages changed ( ) ;
 }
 @ override public void on package UNK ( string package name , int reason ) {
 o . on packages changed ( ) ;
 }
 @ override public void on package modified ( string package name ) {
 o . on packages changed ( ) ;
 }
 @ override public boolean on handle force stop ( intent intent , string [ ] packages , int uid , boolean UNK ) {
 o . on packages changed ( ) ;
 return super . on handle force stop ( intent , packages , uid , UNK ) ;
 }
 }
 ;
 package monitor . register ( context , looper , user handle . l , true ) ;
 s . add listener ( o ) ;
 return o ;
 }
comment:
START create a enabled component observer instance . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to UNK .
set to UNK to UNK to UNK .
set to UNK to UNK to UNK

code:
public void remove change listener ( realm change listener listener ) {
 if ( listener == null ) {
 throw new illegal argument exception ( String ) ;
 }
 realm . check if valid ( ) ;
 listeners . remove ( listener ) ;
 }
comment:
START removes a previously registered listener . END
BLUE1:0.2
--generate--
sets the listener to be used to the UNK .
set the listener to be used for the given UNK .
sets the listener to be used to the UNK of the given UNK .
sets the listener to be used to the current .
sets the listener to be used to the UNK

code:
public event bus options set clustered ( boolean clustered ) {
 this . clustered = clustered ;
 return this ;
 }
comment:
START sets whether or not the event bus is clustered . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public put index template request create ( boolean create ) {
 this . create = create ;
 return this ;
 }
comment:
START set to true to force only creation , not an update of an index template . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK to be used for the UNK .
sets the UNK to be used to the UNK .
sets the UNK to be used to the UNK of the UNK .

code:
public boolean swap actor ( int first , int second ) {
 int max index = children . size ;
 if ( first < DecimalInteger || first >= max index ) return false ;
 if ( second < DecimalInteger || second >= max index ) return false ;
 children . swap ( first , second ) ;
 return true ;
 }
comment:
START returns false if the swap did not occur because the indexes were out of bounds . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public register repository request settings ( settings settings ) {
 this . settings = settings ;
 return this ;
 }
comment:
START sets repository settings @param settings repository settings @return this request END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public builder add default value ( string default value ) {
 this . default values . add ( default value ) ;
 return this ;
 }
comment:
START add value to the default values of the mapping END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public void set callback ( @ nullable callback cb ) {
 set callback ( cb , null ) ;
 }
comment:
START sets an asynchronous callback for actionable media codec events on the default looper . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public boolean match token ( int to match ) throws exception {
 int token = get token ( ) ;
 if ( token == to match ) return true ;
 UNK -- ;
 this . UNK token = token ;
 return false ;
 }
comment:
START return and UNK the token from the stream if it matches ... otherwise return null END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .

code:
public term vectors request positions ( boolean positions ) {
 set flag ( flag . positions , positions ) ;
 return this ;
 }
comment:
START return the positions for each term if stored or skip . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean [ ] set size ( int new size ) {
 if ( new size > items . length ) resize ( math . max ( DecimalInteger , new size ) ) ;
 size = new size ;
 return items ;
 }
comment:
START sets the array size , leaving any values beyond the current size undefined . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to UNK .
sets the UNK of the given UNK .
set to UNK to UNK to the UNK .

code:
public abstract void remove all cookies ( value callback < boolean > callback ) ;
comment:
START removes all cookies . END
BLUE1:0.2
--generate--
used to UNK UNK .
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given UNK .

code:
public percentile UNK aggregation builder keyed ( boolean keyed ) {
 this . keyed = keyed ;
 return this ;
 }
comment:
START set whether the xcontent response should be keyed END
BLUE1:0.2
--generate--
set to UNK UNK .
set to UNK to UNK .
set to UNK to UNK to .
set to UNK to UNK to UNK .
set to UNK to UNK to UNK

code:
public delete snapshot request snapshot ( string snapshot ) {
 this . snapshot = snapshot ;
 return this ;
 }
comment:
START sets snapshot name @return this request END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void remove listener ( @ non null setting change listener listener ) {
 msettings listeners . remove ( listener ) ;
 }
comment:
START remove a listener for setting changes . END
BLUE1:0.2
--generate--
used to all UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given UNK .
used to the UNK of the given .

code:
public restore snapshot request builder set settings ( settings . builder settings ) {
 request . settings ( settings ) ;
 return this ;
 }
comment:
START sets repository-specific restore settings . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of UNK .
set to UNK to UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public geo distance aggregation builder add unbounded from ( string key , double from ) {
 add range ( new range ( key , from , null ) ) ;
 return this ;
 }
comment:
START add a new range with no upper bound . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
void create view ( session session , qualified object name view name , string view data , boolean replace ) ;
comment:
START creates the specified view with the specified view definition . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
set to UNK to UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set shared elements use overlay ( boolean shared elements use overlay ) {
 }
comment:
START sets whether or not shared elements should use an overlay during shared element transitions . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the request .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the request to be UNK .

code:
private boolean in storage sub directory ( string path ) {
 if ( msub directories == null ) return true ;
 if ( path == null ) return false ;
 boolean allowed = false ;
 int path length = path . length ( ) ;
 for ( int i = DecimalInteger ;
 i < msub directories . length && ! allowed ;
 i ++ ) {
 string subdir = msub directories [ i ] ;
 int subdir length = subdir . length ( ) ;
 if ( subdir length < path length && path . char at ( subdir length ) == String && path . starts with ( subdir ) ) {
 allowed = true ;
 }
 }
 return allowed ;
 }
comment:
START returns true if we have no special UNK END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public geo distance range query builder set validation method ( geo validation method method ) {
 this . validation method = method ;
 return this ;
 }
comment:
START set validation method for coordinates . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public static void build ( mesh part builder builder , matrix4 transform ) {
 build ( builder , obtain v3 ( ) . set ( - DecimalFloatingPoint , - DecimalFloatingPoint , - DecimalFloatingPoint ) . mul ( transform ) , obtain v3 ( ) . set ( - DecimalFloatingPoint , DecimalFloatingPoint , - DecimalFloatingPoint ) . mul ( transform ) , obtain v3 ( ) . set ( DecimalFloatingPoint , - DecimalFloatingPoint , - DecimalFloatingPoint ) . mul ( transform ) , obtain v3 ( ) . set ( DecimalFloatingPoint , DecimalFloatingPoint , - DecimalFloatingPoint ) . mul ( transform ) , obtain v3 ( ) . set ( - DecimalFloatingPoint , - DecimalFloatingPoint , DecimalFloatingPoint ) . mul ( transform ) , obtain v3 ( ) . set ( - DecimalFloatingPoint , DecimalFloatingPoint , DecimalFloatingPoint ) . mul ( transform ) , obtain v3 ( ) . set ( DecimalFloatingPoint , - DecimalFloatingPoint , DecimalFloatingPoint ) . mul ( transform ) , obtain v3 ( ) . set ( DecimalFloatingPoint , DecimalFloatingPoint , DecimalFloatingPoint ) . mul ( transform ) ) ;
 free all ( ) ;
 }
comment:
START add a box given the matrix . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK to .

code:
public abstract void set cookie ( string url , string value , value callback < boolean > callback ) ;
comment:
START sets a cookie for the given url . END
BLUE1:0.2
--generate--
set to UNK UNK .
set to UNK to UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public significant terms aggregation builder include exclude ( include exclude include exclude ) {
 this . include exclude = include exclude ;
 return this ;
 }
comment:
START set terms to include and exclude from the aggregation results END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK to be used for the UNK .
sets the UNK to be used to the UNK .

code:
public void set static sw version ( int static sw version ) {
 mstatic sw version = static sw version ;
 }
comment:
START set platform software version @param static UNK version platform static UNK version number END
BLUE1:0.2
--generate--
set the listener to be used for the UNK .
set the listener to be used to the UNK .
set the listener to be used to the UNK of the UNK .
set the listener to be used to the UNK
set the listener to be used to the UNK of the UNK

code:
public animation desc set animation ( final string id , int loop count , float speed , final animation listener listener ) {
 return set animation ( id , DecimalFloatingPoint , - DecimalFloatingPoint , loop count , speed , listener ) ;
 }
comment:
START set the active animation , replacing any current animation . END
BLUE1:0.2
--generate--
return the listener that be used for all UNK .
returns the listener that be used for the UNK .
returns the listener that be used for the given UNK .
returns the listener that be used for the UNK of the UNK .
returns the listener that be used for the UNK of the UNK

code:
public intent set flags ( int flags ) {
 flags = flags ;
 return this ;
 }
comment:
START set special flags controlling how this intent is handled . END
BLUE1:0.2
--generate--
sets the UNK UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public date range aggregation builder add unbounded from ( string key , string from ) {
 add range ( new range ( key , from , null ) ) ;
 return this ;
 }
comment:
START add a new range with no upper bound . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public UNK aggregation builder keyed ( boolean keyed ) {
 this . keyed = keyed ;
 return this ;
 }
comment:
START set whether the xcontent response should be keyed END
BLUE1:0.2
--generate--
set to UNK UNK .
set to UNK to UNK .
set to UNK to UNK to .
set to UNK to UNK to UNK .
set to UNK to UNK to UNK

code:
public void set UNK ( boolean UNK ) {
 UNK = UNK ;
 }
comment:
START sets whether this print is being cancelled . END
BLUE1:0.2
--generate--
set to UNK UNK .
set to UNK to UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public builder should validate inclusions ( ) {
 this . should validate inclusions = true ;
 return this ;
 }
comment:
START sets that this compile should validate inclusions against the dotd file . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of the request .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the request to be UNK .

code:
public builder add quote include dir ( path fragment quote include dir ) {
 quote include dirs . add ( quote include dir . normalize ( ) ) ;
 return this ;
 }
comment:
START add a single include directory to be added with '' iquote '' . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set is supported ( boolean is supported ) {
 this . mis supported = is supported ;
 }
comment:
START sets is as supported or not supported . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK to be used for the UNK .
sets the UNK to be used for the UNK

code:
public snapshot request settings ( settings settings ) {
 this . settings = settings ;
 return this ;
 }
comment:
START sets repository-specific snapshot settings @param settings snapshot settings @return this request END
BLUE1:0.2
--generate--
sets the UNK UNK .
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public multi match query builder cutoff frequency ( float cutoff ) {
 this . cutoff frequency = cutoff ;
 return this ;
 }
comment:
START set a cutoff value in -lsb- NUMBER . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public boolean remove account explicitly ( account account ) {
 if ( account == null ) throw new illegal argument exception ( String ) ;
 try {
 return service . remove account explicitly ( account ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START removes an account directly . END
BLUE1:0.2
--generate--
creates a new instance .
creates a new instance for the given type .
creates a new instance for the given UNK .
creates a new instance of the UNK .
creates a new instance for the given file .

code:
public argument set multi valued ( boolean multi valued ) {
 this . multi valued = multi valued ;
 return this ;
 }
comment:
START sets whether or not the argument can receive several values . END
BLUE1:0.2
--generate--
set to UNK UNK .
sets the UNK of UNK .
set to UNK to UNK .
sets the UNK of the UNK .
sets the UNK of the UNK to .

code:
public snapshots status request builder add snapshots ( string ... snapshots ) {
 request . snapshots ( array utils . concat ( request . snapshots ( ) , snapshots ) ) ;
 return this ;
 }
comment:
START adds additional snapshots to the list of snapshots to return @param snapshots additional snapshots @return this builder END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public account header builder with header background ( @ drawable res int header background res ) {
 this . mheader background = new image holder ( header background res ) ;
 return this ;
 }
comment:
START set the background for the header as resource @param header background res @return END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cache control cache private ( ) {
 this . cache private = true ;
 return this ;
 }
comment:
START add a `` private '' directive . END
BLUE1:0.2
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set on error listener ( @ nullable on error listener listener , @ nullable handler handler ) {
 synchronized ( mon error listener lock ) {
 if ( handler != null ) {
 mon error listener handler = handler ;
 }
 else {
 looper looper ;
 if ( ( looper = looper . my looper ( ) ) == null ) {
 looper = looper . get main looper ( ) ;
 }
 if ( looper == null ) {
 mon error listener handler = null ;
 }
 else {
 mon error listener handler = new handler ( looper ) ;
 }
 }
 mon error listener = listener ;
 }
 }
comment:
START sets an asynchronous callback for error events . END
BLUE1:0.181818181818
--generate--
sets the listener that will be applied to the user .
sets the listener that will be applied to the given UNK .
sets the listener that will be applied to the current UNK .
sets the listener that will be applied to the current .
sets the listener that will be applied to the current of .

code:
public void load image ( string uri , display image options options , image loading listener listener ) {
 load image ( uri , null , options , listener , null ) ;
 }
comment:
START adds load image task to execution pool . END
BLUE1:0.181818181818
--generate--
set the listener that should be added to the user .
set the listener that will be used to the UNK .
set the listener that should be added to the UNK .
set the listener that will be used to the UNK of the UNK .
set the listener that will be used to the UNK of the UNK

code:
public static synchronized void remove listener ( connection listener listener ) {
 listeners . remove ( listener ) ;
 }
comment:
START removes a network listener . END
BLUE1:0.181818181818
--generate--
set the listener that should be added to the user .
sets the listener that will be used to the UNK .
set the listener that should be added to the UNK .
sets the listener that will be used to the UNK of UNK .
sets the listener that will be used to the UNK of UNK

code:
public void display image ( string uri , image aware image aware , image loading listener listener ) {
 display image ( uri , image aware , null , listener , null ) ;
 }
comment:
START adds display image task to execution pool . END
BLUE1:0.181818181818
--generate--
set the listener that should be applied to the user .
set the listener that should be applied to the given UNK .
set the listener that should be applied to the current .
set the listener that should be applied to the given .
set the listener that should be applied to the user

code:
public static test analysis create test analysis ( index index , settings settings , analysis plugin ... analysis plugins ) throws exception {
 settings node settings = settings . builder ( ) . put ( environment . path_ home_ g . get key ( ) , create temp dir ( ) ) . build ( ) ;
 return create test analysis ( index , node settings , settings , analysis plugins ) ;
 }
comment:
START creates an test analysis with all the default analyzers configured . END
BLUE1:0.166666666667
--generate--
returns a immutable instance of the given file , in any .
returns a immutable array of the UNK .
returns a immutable instance of the given type .
returns a immutable instance of the given file .
returns a immutable instance of the given type , in any .

code:
public static notification . builder recover builder ( context context , notification n ) {
 application info application info = n . extras . get parcelable ( extra_ UNK application_ o ) ;
 context builder context ;
 if ( application info != null ) {
 try {
 builder context = context . create application context ( application info , context . context_ d ) ;
 }
 catch ( name not found exception e ) {
 log . e ( g , String + application info + String ) ;
 builder context = context ;
 }
 }
 else {
 builder context = context ;
 }
 return new builder ( builder context , n ) ;
 }
comment:
START creates a builder from an existing notification so further changes can be made . END
BLUE1:0.166666666667
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given file .

code:
public static completion stats completion stats ( index reader index reader , string ... field name patterns ) {
 long size in bytes = DecimalInteger ;
 object long hash map < string > completion fields = null ;
 if ( field name patterns != null && field name patterns . length > DecimalInteger ) {
 completion fields = new object long hash map < > ( field name patterns . length ) ;
 }
 for ( leaf reader context atomic reader context : index reader . UNK ( ) ) {
 leaf reader atomic reader = atomic reader context . reader ( ) ;
 try {
 fields fields = atomic reader . fields ( ) ;
 for ( string field name : fields ) {
 terms terms = fields . terms ( field name ) ;
 if ( terms instanceof completion terms ) {
 long fst size = ( ( completion terms ) terms ) . UNK ( ) . ram bytes used ( ) ;
 if ( field name patterns != null && field name patterns . length > DecimalInteger && regex . simple match ( field name patterns , field name ) ) {
 completion fields . add to ( field name , fst size ) ;
 }
 size in bytes += fst size ;
 }
 }
 }
 catch ( exception ioe ) {
 throw new elasticsearch exception ( ioe ) ;
 }
 }
 return new completion stats ( size in bytes , completion fields ) ;
 }
comment:
START returns total UNK bytes used by all UNK . END
BLUE1:0.166666666667
--generate--
returns a immutable instance of the given values , in any .
returns a immutable instance of the given values .
returns a immutable instance of the given key .
returns a immutable instance of the given file .
returns a immutable instance of the given values , in any

code:
public string get service type ( ) {
 return mservice type ;
 }
comment:
START get the service type END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public UNK request type request type ( ) {
 return request type ;
 }
comment:
START returns socks request type @return socks request type END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public boolean retain all ( collection < ? > collection ) {
 return map collections . retain all helper ( this , collection ) ;
 }
comment:
START remove all keys in the array map that do <b> not </b> exist in the given collection . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public static < v > concurrent map long < v > new concurrent map long with aggressive concurrency ( ) {
 return new concurrent hash map long < > ( concurrent collections . < long , v > new concurrent map with aggressive concurrency ( ) ) ;
 }
comment:
START creates a new UNK with an aggressive concurrency level , UNK at UNK UNK long UNK maps . END
BLUE1:0.166666666667
--generate--
returns a immutable array of the values for the given file .
returns a immutable array of the values for the given type .
returns a immutable array of the values .
returns a immutable array of the values for the given UNK .
returns a immutable array of the UNK .

code:
public static boolean has body content ( final rest request request ) {
 return request . has content ( ) || request . has param ( String ) ;
 }
comment:
START returns true if either payload or source parameter is present . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is valid ( ) {
 synchronized ( this ) {
 update display info locked ( ) ;
 return mis valid ;
 }
 }
comment:
START returns true if this display is still valid , false if the display has been removed . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public void set ( UNK a ) {
 this . x = a . x ;
 this . y = a . y ;
 }
comment:
START set vector value by UNK @param a END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean has recorded stdout ( ) {
 return get file output stream ( ) . has recorded output ( ) ;
 }
comment:
START returns true if output was recorded on stdout . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public float get stack scroll ( ) {
 return mstack scroll p ;
 }
comment:
START gets the current stack scroll END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the number of all UNK .

code:
public static animated drawable options builder new builder ( ) {
 return new animated drawable options builder ( ) ;
 }
comment:
START creates a new builder . END
BLUE1:0.166666666667
--generate--
returns the UNK of UNK .
returns the UNK of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .

code:
@ nullable protected drawable get controller overlay ( ) {
 return mcontroller overlay ;
 }
comment:
START gets the controller overlay END
BLUE1:0.166666666667
--generate--
returns the number of UNK .
returns the number of UNK UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public boolean is multi valued ( ) {
 return num multi valued docs > DecimalInteger ;
 }
comment:
START returns true iff this builder contains a document id that is associated with more than one ordinal . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public builder clone from ( display image options options ) {
 image res on loading = options . image res on loading ;
 image res for empty uri = options . image res for empty uri ;
 image res on fail = options . image res on fail ;
 image on loading = options . image on loading ;
 image for empty uri = options . image for empty uri ;
 image on fail = options . image on fail ;
 reset view before loading = options . reset view before loading ;
 cache in memory = options . cache in memory ;
 cache on disk = options . cache on disk ;
 image scale type = options . image scale type ;
 decoding options = options . decoding options ;
 delay before loading = options . delay before loading ;
 UNK exif params = options . UNK exif params ;
 extra for downloader = options . extra for downloader ;
 pre processor = options . pre processor ;
 post processor = options . post processor ;
 UNK = options . UNK ;
 handler = options . handler ;
 is sync loading = options . is sync loading ;
 return this ;
 }
comment:
START sets all options equal to incoming options END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
@ override public boolean is auto startup ( ) {
 return this . auto startup ;
 }
comment:
START return the value for the ` auto startup ' property . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public boolean has same address ( wifi display other ) {
 return other != null && mdevice address . equals ( other . mdevice address ) ;
 }
comment:
START returns true if the other display is not null and has the same address as this one . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean use pic objects for binaries ( ) {
 return force pic ( ) || use pic for binaries ( ) ;
 }
comment:
START returns true iff we should use '' . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is rotation enabled ( ) {
 return mrotate enabled ;
 }
comment:
START returns true if rotation of the chart by touch is enabled , false if not . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is master mute ( ) {
 return audio system . get master mute ( ) ;
 }
comment:
START get master mute state . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public void set serialization inclusion ( json include . include serialization inclusion ) {
 this . builder . serialization inclusion ( serialization inclusion ) ;
 }
comment:
START set a custom inclusion strategy for serialization . END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean is delete on exit ( ) {
 return delete on exit ;
 }
comment:
START returns true iff the process id file is deleted on system exit . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public int get app version ( ) {
 return mapp version ;
 }
comment:
START get the app version @return app version END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public file input stream create input stream ( ) throws exception {
 if ( length < DecimalInteger ) {
 return new parcel file descriptor . auto close input stream ( fd ) ;
 }
 return new auto close input stream ( this ) ;
 }
comment:
START create and return a new UNK input stream for this asset . END
BLUE1:0.166666666667
--generate--
returns a immutable instance of the given file , in any .
returns a immutable instance of the given key .
returns a immutable instance of the given key , in any .
returns a immutable instance of the given type .
returns a immutable instance of the given file .

code:
public boolean extended sanity checks ( ) {
 return options . extended sanity checks ;
 }
comment:
START returns true if extended sanity checks should be enabled . END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK

code:
public void set ignore case ( boolean ignore case ) {
 this . ignore case = ignore case ;
 }
comment:
START set whether upper and lower case in string values should be ignored . END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean is ignored empty ( ) {
 return ignored . is empty ( ) ;
 }
comment:
START returns true iff any unassigned shards are marked as temporarily ignored . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
@ override public boolean has focus ( ) {
 return UNK focus || super . has focus ( ) ;
 }
comment:
START returns the focus state in the drop down . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set url decode ( boolean url decode ) {
 this . url decode = url decode ;
 }
comment:
START set if context path and request uri should be url-decoded . END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public final boolean is dynamic ( ) {
 return properties . contains ( property . dynamic ) ;
 }
comment:
START returns true if this setting is dynamically UNK , otherwise false END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean use header compilation ( ) {
 return use header compilation ;
 }
comment:
START returns true iff java header compilation is enabled . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public static boolean is system only ( int user id ) {
 return user id == user handle . user_ m && user manager . is split system user ( ) ;
 }
comment:
START returns true if the given user is a split system user . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is file ( symlinks follow symlinks ) {
 return file system . is file ( this , follow symlinks . to boolean ( ) ) ;
 }
comment:
START returns true iff this path denotes an existing regular or special file . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public boolean should UNK static libs ( ) {
 return this . UNK static libs ;
 }
comment:
START returns true if the linker invocation should contain static library includes before framework and system library includes . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK to .

code:
public int get border color ( ) {
 return mborder color ;
 }
comment:
START gets the border color END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public boolean is gesture in progress ( ) {
 return detector . is gesture in progress ( ) ;
 }
comment:
START gets whether there is a gesture in progress END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public synchronized long start time ( ) {
 return start time ;
 }
comment:
START returns start time in millis END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public boolean is auto fdo lipo ( ) {
 return cpp options . fdo optimize != null && cpp file types . UNK auto_ e . matches ( cpp options . fdo optimize ) && get lipo mode ( ) != lipo mode . f ;
 }
comment:
START returns true if it is auto o lipo build . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .

code:
spdy settings frame set persisted ( int id , boolean persisted ) ;
comment:
START sets if this setting is persisted . END
BLUE1:0.166666666667
--generate--
returns the number of UNK .
returns the number of bytes in the request .
returns the number of bytes of the given UNK .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public int get cdma dbm ( ) {
 return mcdma dbm ;
 }
comment:
START get the cdma rssi value in dbm END
BLUE1:0.166666666667
--generate--
returns the number of UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK .
returns the number of all UNK .

code:
public boolean reset ( boolean detach if reset ) {
 mtotal time = UNK time = mlast time = mtime before mark = DecimalInteger ;
 count = UNK count = mlast count = DecimalInteger ;
 if ( detach if reset ) {
 detach ( ) ;
 }
 return true ;
 }
comment:
START returns true if the timer is inactive so can be completely dropped . END
BLUE1:0.166666666667
--generate--
set whether to UNK UNK .
set whether to UNK UNK UNK .
set whether to UNK UNK UNK UNK .
set whether to UNK to UNK .
set whether to UNK UNK UNK UNK

code:
public boolean is draw entry labels enabled ( ) {
 return mdraw entry labels ;
 }
comment:
START returns true if drawing the entry labels is enabled , false if not . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK UNK UNK

code:
final boolean has identity matrix ( ) {
 return mrender node . has identity matrix ( ) ;
 }
comment:
START returns true if the transform matrix is the identity matrix . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
public byte [ ] get app binary ( ) {
 return mapp binary ;
 }
comment:
START get the binary for this app @return app binary END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set vertex data ( ) {
 if ( use u ) {
 current attributes = UNK s ;
 current vertex size = UNK vertex_ e ;
 }
 else {
 current attributes = UNK s ;
 current vertex size = UNK vertex_ e ;
 }
 }
comment:
START sets vertex attributes and size END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
@ system api @ deprecated public abstract int get id ( ) ;
comment:
START return an identifier for this history item . END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is in memory database ( ) {
 synchronized ( lock ) {
 return mconfiguration locked . is in memory db ( ) ;
 }
 }
comment:
START returns true if the database is in-memory db . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public boolean is query string lenient ( ) {
 return query string lenient ;
 }
comment:
START returns true if query string parsing should be lenient . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public boolean is set user id ( ) {
 return ( st_mode & s_ d ) != DecimalInteger ;
 }
comment:
START returns true iff this file has its `` set uid '' bit set . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK of the UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean is jack sanity checked ( ) {
 return jack sanity checks ;
 }
comment:
START returns true if jack sanity checks should be enabled . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
@ override public vertx get vertx ( ) {
 return vertx ;
 }
comment:
START get the vert.x instance @return the vert.x instance END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK

code:
public boolean is UNK ( ) {
 return get boolean property ( boolean_ property_ e ) ;
 }
comment:
START gets if the node can be dismissed . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of UNK

code:
public int get evdo ecio ( ) {
 return mevdo ecio ;
 }
comment:
START get the evdo ec/ io value in db NUMBER END
BLUE1:0.166666666667
--generate--
returns the number of UNK .
returns the current number of UNK .
returns the number of bytes in the request .
returns the number of bytes in the given UNK .
returns the number of bytes in the request

code:
public void set tag ( object tag ) {
 tag = tag ;
 route updated ( ) ;
 }
comment:
START set an application-specific tag object for this route . END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public account header builder with translucent status bar ( boolean translucent status bar ) {
 this . UNK status bar = translucent status bar ;
 return this ;
 }
comment:
START set or disable this if you use a translucent UNK @param translucent status bar @return END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the UNK

code:
public analyze request builder set attributes ( string attributes ) {
 request . attributes ( attributes ) ;
 return this ;
 }
comment:
START sets attributes that will include results END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
@ override @ nullable public string get content description ( ) {
 return mcontent description ;
 }
comment:
START gets accessibility content description . END
BLUE1:0.166666666667
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean is scroll x ( ) {
 return scroll x ;
 }
comment:
START returns true if the widget is larger than the scroll pane horizontally . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK of UNK .
sets whether to UNK the UNK .
sets whether to UNK UNK of the UNK .

code:
public boolean is enable gc UNK ( ) {
 return enable gc UNK ;
 }
comment:
START returns true iff delete garbage collection in the engine should be enabled . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
@ override public boolean is redirect view ( ) {
 return true ;
 }
comment:
START returns `` true '' indicating this view performs a redirect . END
BLUE1:0.166666666667
--generate--
set whether to UNK UNK .
sets whether to UNK UNK UNK .
set whether to UNK UNK UNK .
set whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public boolean is disabled ( ) {
 return this . disabled ;
 }
comment:
START returns if this mapping is disabled . END
BLUE1:0.166666666667
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public restore snapshot request builder set snapshot ( string snapshot ) {
 request . snapshot ( snapshot ) ;
 return this ;
 }
comment:
START sets snapshot name @param snapshot snapshot name @return this builder END
BLUE1:0.166666666667
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .
sets the UNK of UNK to the given UNK .

code:
public string minimum should match ( ) {
 return this . minimum should match ;
 }
comment:
START gets the minimum should match value END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
public mapper . builder find template builder ( parse context context , string name , string dynamic type , xcontent field type match type ) {
 dynamic template dynamic template = find template ( context . path ( ) , name , match type ) ;
 if ( dynamic template == null ) {
 return null ;
 }
 mapper . type parser . parser context parser context = context . doc mapper parser ( ) . parser context ( name ) ;
 string mapping type = dynamic template . mapping type ( dynamic type ) ;
 mapper . type parser type parser = parser context . type parser ( mapping type ) ;
 if ( type parser == null ) {
 throw new mapper parsing exception ( String + mapping type + String + name + String ) ;
 }
 return type parser . parse ( name , dynamic template . mapping for name ( name , dynamic type ) , parser context ) ;
 }
comment:
START find a template . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public jack compilation helper . builder add deps ( iterable < ? extends transitive info collection > deps ) {
 return add classpath deps ( deps ) . add runtime deps ( deps ) ;
 }
comment:
START adds a set of normal dependencies . END
BLUE1:0.142857142857
--generate--
add the UNK to the UNK .
add the UNK UNK to the UNK .
add a new UNK to the UNK .
add the UNK UNK to the given UNK .
add the UNK UNK to the UNK

code:
public void create chain ( vector2 [ ] vertices ) {
 vec2 [ ] v = new vec2 [ vertices . length ] ;
 for ( int i = DecimalInteger ;
 i < vertices . length ;
 i ++ ) {
 v [ i ] = new vec2 ( vertices [ i ] . x , vertices [ i ] . y ) ;
 }
 shape . create chain ( v , v . length ) ;
 is UNK = false ;
 }
comment:
START create a chain with isolated end vertices . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given file .

code:
public void set attributes map ( map < string , ? > attributes ) {
 if ( attributes != null ) {
 for ( map . entry < string , ? > entry : attributes . entry set ( ) ) {
 add static attribute ( entry . get key ( ) , entry . get value ( ) ) ;
 }
 }
 }
comment:
START set static attributes for this view from a map . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given file .
sets the UNK of the given UNK .

code:
public void set values ( byte a , byte b ) {
 this . x = a ;
 this . y = b ;
 }
comment:
START set the vector field value by char @param a @param b END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private map < string , set < string > > resolve search routing all indices ( meta data meta data , string routing ) {
 if ( routing != null ) {
 set < string > r = strings . split string by comma to set ( routing ) ;
 map < string , set < string > > UNK = new hash map < > ( ) ;
 string [ ] concrete indices = meta data . get concrete all indices ( ) ;
 for ( string index : concrete indices ) {
 UNK . put ( index , r ) ;
 }
 return UNK ;
 }
 return null ;
 }
comment:
START sets the same routing for all indices END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
t get ( index settings index settings , environment environment , string name , settings settings ) throws exception ;
comment:
START creates a new analysis provider . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
@ override public closeable reference < bitmap > decode UNK encoded image ( encoded image encoded image , bitmap . config bitmap config , int length ) {
 boolean is jpeg complete = encoded image . is complete at ( length ) ;
 final bitmap factory . options options = get decode options for stream ( encoded image , bitmap config ) ;
 input stream jpeg data stream = encoded image . get input stream ( ) ;
 preconditions . check not null ( jpeg data stream ) ;
 if ( encoded image . get size ( ) > length ) {
 jpeg data stream = new limited input stream ( jpeg data stream , length ) ;
 }
 if ( ! is jpeg complete ) {
 jpeg data stream = new tail UNK input stream ( jpeg data stream , UNK l ) ;
 }
 boolean retry on fail = options . in preferred config != bitmap . config . b_8888 ;
 try {
 return decode static image from stream ( jpeg data stream , options ) ;
 }
 catch ( runtime exception re ) {
 if ( retry on fail ) {
 return decode from encoded image ( encoded image , bitmap . config . b_8888 ) ;
 }
 throw re ;
 }
 }
comment:
START creates a bitmap from encoded jpeg bytes . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void setup crosstool ( mock tools config config , boolean add embedded runtimes , boolean add module map , string static runtimes label , string dynamic runtimes label , toolchain toolchain ) throws exception {
 create crosstool package ( config , add embedded runtimes , add module map , static runtimes label , dynamic runtimes label , toolchain ) ;
 }
comment:
START create a crosstool package . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
sets the UNK of the UNK to the UNK .

code:
public void add notification ( expandable notification row row , int child index ) {
 int new index = child index < DecimalInteger ? children . size ( ) : child index ;
 children . add ( new index , row ) ;
 add view ( row ) ;
 row . set user locked ( muser locked ) ;
 view divider = inflate divider ( ) ;
 add view ( divider ) ;
 UNK . add ( new index , divider ) ;
 update group overflow ( ) ;
 }
comment:
START add a child notification to this view . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public string cookie ( string name ) {
 cookie [ ] cookies = servlet request . get cookies ( ) ;
 if ( cookies != null ) {
 for ( cookie cookie : cookies ) {
 if ( cookie . get name ( ) . equals ( name ) ) {
 return cookie . get value ( ) ;
 }
 }
 }
 return null ;
 }
comment:
START gets cookie by name . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of the UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .

code:
public static servlet context handler create ( map < string , web socket handler wrapper > web socket handlers , optional < integer > web socket idle timeout millis ) {
 servlet context handler web socket servlet context handler = null ;
 if ( web socket handlers != null ) {
 try {
 web socket servlet context handler = new servlet context handler ( null , String , true , false ) ;
 web socket upgrade filter web socket upgrade filter = web socket upgrade filter . configure context ( web socket servlet context handler ) ;
 if ( web socket idle timeout millis . is present ( ) ) {
 web socket upgrade filter . get factory ( ) . get policy ( ) . set idle timeout ( web socket idle timeout millis . get ( ) ) ;
 }
 for ( string path : web socket handlers . key set ( ) ) {
 web socket creator web socket creator = web socket creator factory . create ( web socket handlers . get ( path ) ) ;
 web socket upgrade filter . add mapping ( new servlet path spec ( path ) , web socket creator ) ;
 }
 }
 catch ( exception ex ) {
 logger . error ( String , ex ) ;
 web socket servlet context handler = null ;
 }
 }
 return web socket servlet context handler ;
 }
comment:
START creates a new websocket servlet context handler . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK for the given UNK .

code:
@ visible for testing array map < string , shortcut package > get all packages for test ( ) {
 return packages ;
 }
comment:
START remove from it . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public static bean factory locator get instance ( string selector ) throws fatal bean exception {
 return context singleton bean factory locator . get instance ( selector ) ;
 }
comment:
START return an instance object implementing bean factory locator . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK

code:
@ thread safe public static void ensure symbolic link ( path link , string target ) throws exception {
 ensure symbolic link ( link , new path fragment ( target ) ) ;
 }
comment:
START creates or updates a symbolic link from ` link ' to ` target ' . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .
sets the UNK of the UNK UNK .

code:
private static page [ ] mask pages ( boolean mask value , page ... pages ) {
 page [ ] masked pages = new page [ pages . length ] ;
 for ( int i = DecimalInteger ;
 i < pages . length ;
 i ++ ) {
 page page = pages [ i ] ;
 block builder block builder = n . create block builder ( new block builder status ( ) , page . get position count ( ) ) ;
 for ( int j = DecimalInteger ;
 j < page . get position count ( ) ;
 j ++ ) {
 n . write boolean ( block builder , mask value ) ;
 }
 block [ ] source blocks = page . get blocks ( ) ;
 block [ ] output blocks = new block [ source blocks . length + DecimalInteger ] ;
 system . arraycopy ( source blocks , DecimalInteger , output blocks , DecimalInteger , source blocks . length ) ;
 output blocks [ source blocks . length ] = block builder . build ( ) ;
 masked pages [ i ] = new page ( output blocks ) ;
 }
 return masked pages ;
 }
comment:
START adds the mask as the last channel END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void clear scheduled sync operations ( sync storage engine . end point info ) {
 list < sync operation > ops = get all pending syncs ( ) ;
 for ( sync operation op : ops ) {
 if ( ! op . is periodic && op . target . matches spec ( info ) ) {
 get job scheduler ( ) . cancel ( op . job id ) ;
 get sync storage engine ( ) . mark pending ( op . target , false ) ;
 }
 }
 msync storage engine . set backoff ( info , sync storage engine . not_ in_ UNK e , sync storage engine . not_ in_ UNK e ) ;
 }
comment:
START remove scheduled sync operations . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void add synthetic method ( function function ) {
 if ( ! function . synthetic ) {
 throw new illegal state exception ( String + function . name + String ) ;
 }
 if ( synthetic methods . put ( function . name , function ) != null ) {
 throw new illegal state exception ( String + function . name + String ) ;
 }
 }
comment:
START adds a new synthetic method to be written . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
set the UNK for the given UNK .

code:
@ suppress warnings ( String ) public static < t > connectable observable < t > create ( observable < ? extends t > source ) {
 return create ( source , default_ UNK y ) ;
 }
comment:
START creates a replaying connectable observable with an unbounded buffer . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public string get operator alpha long ( ) {
 return mvoice operator alpha long ;
 }
comment:
START get current registered operator name in long alphanumeric format . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
return the UNK of the given UNK .

code:
public double opt extra double ( string key , double default value ) {
 return mextra data . opt double ( key , default value ) ;
 }
comment:
START get extra double value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set default guest restrictions ( bundle restrictions ) {
 try {
 service . set default guest restrictions ( restrictions ) ;
 }
 catch ( remote exception re ) {
 throw re . rethrow from system server ( ) ;
 }
 }
comment:
START set restrictions that should apply to any future guest user that 's created . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void clear disappearing children ( ) {
 final array list < view > disappearing children = mdisappearing children ;
 if ( disappearing children != null ) {
 final int count = disappearing children . size ( ) ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) {
 final view view = disappearing children . get ( i ) ;
 if ( view . mattach info != null ) {
 view . dispatch detached from window ( ) ;
 }
 view . clear animation ( ) ;
 }
 disappearing children . clear ( ) ;
 invalidate ( ) ;
 }
 }
comment:
START removes any pending animations for views that have been removed . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public builder add idl srcs ( collection < artifact > idl srcs ) {
 this . idl srcs . add all ( idl srcs ) ;
 add idl dirs ( idl srcs ) ;
 return this ;
 }
comment:
START add `` idl_srcs '' contents . END
BLUE1:0.142857142857
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
@ override void layout ( int delta , boolean animate ) {
 mis rtl = is layout rtl ( ) ;
 int children left = mspinner padding . left ;
 int children width = right - left - mspinner padding . left - mspinner padding . right ;
 if ( mdata changed ) {
 handle data changed ( ) ;
 }
 if ( mitem count == DecimalInteger ) {
 reset list ( ) ;
 return ;
 }
 if ( mnext selected position >= DecimalInteger ) {
 set selected position int ( mnext selected position ) ;
 }
 recycle all views ( ) ;
 detach all views from parent ( ) ;
 mright most = DecimalInteger ;
 mleft most = DecimalInteger ;
 mfirst position = mselected position ;
 view sel = make and add view ( mselected position , DecimalInteger , DecimalInteger , true ) ;
 int selected offset = children left + ( children width / DecimalInteger ) - ( sel . get width ( ) / DecimalInteger ) + mselected center offset ;
 sel . offset left and right ( selected offset ) ;
 fill to UNK right ( ) ;
 fill to UNK left ( ) ;
 recycler . clear ( ) ;
 invalidate ( ) ;
 check selection changed ( ) ;
 mdata changed = false ;
 UNK sync = false ;
 set next selected position int ( mselected position ) ;
 update selected item metadata ( ) ;
 }
comment:
START creates and positions all views for this gallery . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .

code:
public < e extends realm model > e create object from json ( class < e > clazz , string json ) {
 if ( clazz == null || json == null || json . length ( ) == DecimalInteger ) {
 return null ;
 }
 object obj ;
 try {
 obj = new object ( json ) ;
 }
 catch ( exception e ) {
 throw new realm exception ( String , e ) ;
 }
 return create object from json ( clazz , obj ) ;
 }
comment:
START creates a realm object pre-filled with data from a json object . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public static cors config builder for any origin ( ) {
 return new cors config builder ( ) ;
 }
comment:
START creates a builder instance with it 's origin set to ' ' . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public boolean refresh needed ( ) {
 return refresh listeners != null ;
 }
comment:
START returns true if there are pending listeners . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public set < string > get allowed methods ( ) {
 set < string > result = new linked hash set < > ( ) ;
 for ( partial match match : this . partial matches ) {
 for ( request method method : match . get info ( ) . get methods condition ( ) . get methods ( ) ) {
 result . add ( method . name ( ) ) ;
 }
 }
 return result ;
 }
comment:
START return declared http methods . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of the UNK .
returns the list of UNK UNK UNK

code:
public static type get type ( final string name ) {
 return e . get type internal ( name ) ;
 }
comment:
START gets the type given by its name END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public http status get status ( ) {
 return this . client response . get status code ( ) ;
 }
comment:
START return the http status END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public void set tag ( object tag ) {
 tag = tag ;
 }
comment:
START set a tag object associated with this action mode . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
@ override public closeable reference < bitmap > decode from encoded image ( final encoded image encoded image , bitmap . config bitmap config ) {
 bitmap factory . options options = get bitmap factory options ( encoded image . get sample size ( ) , bitmap config ) ;
 closeable reference < pooled byte buffer > bytes ref = encoded image . get byte buffer ref ( ) ;
 preconditions . check not null ( bytes ref ) ;
 try {
 bitmap bitmap = decode byte array as UNK ( bytes ref , options ) ;
 return pin bitmap ( bitmap ) ;
 }
 finally {
 closeable reference . close safely ( bytes ref ) ;
 }
 }
comment:
START creates a bitmap from encoded bytes . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private static label label for ( string target name ) throws label syntax exception {
 return label . create ( String , target name ) ;
 }
comment:
START creates fake label in package `` foo '' . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public long get from preferences ( context context , string preference file name , string key ) {
 shared preferences shared preferences = context . get shared preferences ( preference file name , context . mode_ e ) ;
 return shared preferences . get long ( key , DecimalInteger ) ;
 }
comment:
START get a value from a user preferences file . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ nullable public static string [ ] remove string ( @ nullable string [ ] cur , string val ) {
 if ( cur == null ) {
 return null ;
 }
 final int n = cur . length ;
 for ( int i = DecimalInteger ;
 i < n ;
 i ++ ) {
 if ( objects . equals ( cur [ i ] , val ) ) {
 string [ ] ret = new string [ n - DecimalInteger ] ;
 if ( i > DecimalInteger ) {
 system . arraycopy ( cur , DecimalInteger , ret , DecimalInteger , i ) ;
 }
 if ( i < ( n - DecimalInteger ) ) {
 system . arraycopy ( cur , i + DecimalInteger , ret , i , n - i - DecimalInteger ) ;
 }
 return ret ;
 }
 }
 return cur ;
 }
comment:
START removes value from given array if present , providing set-like behavior . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public void create chain ( final vec2 vertices [ ] , int count ) {
 assert ( m_vertices == null && m_count == DecimalInteger ) ;
 assert ( count >= DecimalInteger ) ;
 m_count = count ;
 m_vertices = new vec2 [ m_count ] ;
 for ( int i = DecimalInteger ;
 i < m_count ;
 i ++ ) {
 vec2 v1 = vertices [ i - DecimalInteger ] ;
 vec2 v2 = vertices [ i ] ;
 if ( math utils . distance squared ( v1 , v2 ) < settings . linear slop * settings . linear slop ) {
 throw new runtime exception ( String ) ;
 }
 }
 for ( int i = DecimalInteger ;
 i < m_count ;
 i ++ ) {
 m_vertices [ i ] = new vec2 ( vertices [ i ] ) ;
 }
 m_has prev vertex = false ;
 m_has next vertex = false ;
 m_prev vertex . set zero ( ) ;
 m_next vertex . set zero ( ) ;
 }
comment:
START create a chain with isolated end vertices . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public boolean equal to ( entry e ) {
 if ( e == null ) return false ;
 if ( e . get data ( ) != this . get data ( ) ) return false ;
 if ( math . abs ( e . x - this . x ) > utils . float_ n ) return false ;
 if ( math . abs ( e . get y ( ) - this . get y ( ) ) > utils . float_ n ) return false ;
 return true ;
 }
comment:
START returns true if entries are equal in those points , false if not . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void close all UNK view ( binder token , view view , string who , string what ) {
 synchronized ( lock ) {
 int count = views . size ( ) ;
 for ( int i = DecimalInteger ;
 i < count ;
 i ++ ) {
 if ( ( view == null || views . get ( i ) != view ) && ( token == null || params . get ( i ) . token == token ) ) {
 view root impl root = roots . get ( i ) ;
 if ( who != null ) {
 window UNK leak = new window UNK ( what + String + who + String + root . get view ( ) + String ) ;
 leak . set stack trace ( root . get location ( ) . get stack trace ( ) ) ;
 log . e ( g , String , leak ) ;
 }
 remove view locked ( i , false ) ;
 }
 }
 }
 }
comment:
START remove all roots with specified token , except maybe one view . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
protected jms message endpoint manager create container instance ( ) {
 return new jms message endpoint manager ( ) ;
 }
comment:
START create an empty container instance . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
@ nullable public synchronized closeable reference < bitmap > get decoded frame ( int index ) {
 if ( mdecoded frames != null ) {
 return closeable reference . clone or null ( mdecoded frames . get ( index ) ) ;
 }
 return null ;
 }
comment:
START gets a decoded frame . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public int get sequence number ( ) {
 return msequence generator . increment and get ( ) ;
 }
comment:
START gets a sequence number . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public boolean has configurable attributes ( ) {
 for ( attribute attribute : get attributes ( ) ) {
 if ( abstract attribute mapper . is configurable ( this , attribute . get name ( ) , attribute . get type ( ) ) ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START returns true if this rule has any attributes that are configurable . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets the UNK of the given UNK .
sets whether the UNK is UNK in the UNK .

code:
void add providers ( rule context rule context , java common java common , list < string > jvm flags , artifact class jar , artifact src jar , artifact gen jar , artifact gensrc jar , immutable map < artifact , artifact > compilation to runtime jar map , nested set builder < artifact > files builder , rule configured target builder rule builder ) throws interrupted exception ;
comment:
START adds extra providers to a java target . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .
sets the UNK of the given UNK .

code:
public void add UNK master service ( string type , class < ? extends UNK master service > master service ) {
 if ( master service type . contains key ( type ) ) {
 throw new illegal argument exception ( String + type + String ) ;
 }
 this . master service type . put ( type , master service ) ;
 }
comment:
START adds a custom zen master service type . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void remove frame callback ( frame callback callback ) {
 if ( callback == null ) {
 throw new illegal argument exception ( String ) ;
 }
 remove callbacks internal ( callback_ n , callback , frame_ callback_ n ) ;
 }
comment:
START removes a previously posted frame callback . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
creates a new instance for the given UNK .
creates a new instance of the UNK .
creates a new instance for the given file .
creates a new instance for the UNK .

code:
private boolean is black UNK ( int clazz , int sub class , int protocol ) {
 if ( clazz == usb constants . usb_ class_ b ) return true ;
 if ( clazz == usb constants . usb_ class_ d && sub class == usb constants . usb_ UNK UNK t ) {
 return true ;
 }
 return false ;
 }
comment:
START returns true if the usb device should not be accessible by applications END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public boolean wps display supported ( ) {
 return ( wps config methods supported & UNK config_ y ) != DecimalInteger ;
 }
comment:
START returns true if UNK display configuration is supported END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public void clear ( ) {
 targets . clear ( ) ;
 for ( entry < source , drag listener > entry : source listeners . entries ( ) ) entry . key . actor . remove capture listener ( entry . value ) ;
 source listeners . clear ( ) ;
 }
comment:
START removes all targets and sources . END
BLUE1:0.142857142857
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to all UNK .
used to the UNK of the given UNK .
used to the UNK of UNK

code:
public static geofence hardware request create circular geofence ( double latitude , double longitude , double radius ) {
 geofence hardware request geofence request = new geofence hardware request ( ) ;
 geofence request . set circular geofence ( latitude , longitude , radius ) ;
 return geofence request ;
 }
comment:
START create a circular geofence . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public void set ( int x , int y ) {
 this . x = x ;
 this . y = y ;
 }
comment:
START set the point 's x and y coordinates END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
private static boolean process args ( log log , string [ ] args , array list < string > os jar path , string [ ] os dest jar ) {
 boolean UNK = true ;
 for ( string s : args ) {
 if ( s . equals ( String ) ) {
 log . set verbose ( true ) ;
 }
 else if ( s . equals ( String ) ) {
 options . list all deps = true ;
 UNK = false ;
 }
 else if ( s . equals ( String ) ) {
 options . list only missing deps = true ;
 UNK = false ;
 }
 else if ( ! s . starts with ( String ) ) {
 if ( UNK && os dest jar [ DecimalInteger ] == null ) {
 os dest jar [ DecimalInteger ] = s ;
 }
 else {
 os jar path . add ( s ) ;
 }
 }
 else {
 log . error ( String , s ) ;
 return false ;
 }
 }
 if ( os jar path . is empty ( ) ) {
 log . error ( String ) ;
 return false ;
 }
 if ( UNK && os dest jar [ DecimalInteger ] == null ) {
 log . error ( String ) ;
 return false ;
 }
 return true ;
 }
comment:
START returns true if args where properly parsed . returns false if program should exit with command-line usage . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public synchronized boolean is empty ( ) {
 if ( callbacks . is empty ( ) ) {
 return true ;
 }
 else if ( mnotification level == DecimalInteger ) {
 return false ;
 }
 else {
 int num listeners = callbacks . size ( ) ;
 for ( int i = DecimalInteger ;
 i < num listeners ;
 i ++ ) {
 if ( ! is removed locked ( i ) ) {
 return false ;
 }
 }
 return true ;
 }
 }
comment:
START returns true if there are no registered callbacks or false otherwise . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether the UNK is UNK to .

code:
@ override public double get covariance ( string field x , string field y ) {
 if ( results == null ) {
 return double . na n ;
 }
 return results . get covariance ( field x , field y ) ;
 }
comment:
START get the covariance between the two fields END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private void set from notifier bundle ( bundle m ) {
 UNK state = m . get int ( String ) ;
 }
comment:
START set UNK lte service state based on intent notifier map @param m intent notifier map END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public int [ ] get valid output formats for input ( int input format ) {
 key < stream configuration map > key = camera characteristics . scaler_ stream_ configuration_ p ;
 stream configuration map config = get value from key non null ( key ) ;
 if ( config == null ) {
 return new int [ DecimalInteger ] ;
 }
 return config . get valid output formats for input ( input format ) ;
 }
comment:
START get valid output formats for a given input format . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static string get authority without user id ( string auth ) {
 if ( auth == null ) return null ;
 int end = auth . last index of ( String ) ;
 return auth . substring ( end + DecimalInteger ) ;
 }
comment:
START removes user id part from authority string . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public response actions expect ( request matcher matcher ) {
 return expect ( expected count . once ( ) , matcher ) ;
 }
comment:
START set up an expectation for a single http request . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public boolean matches ( string filename ) {
 int slash index = filename . last index of ( String ) ;
 if ( slash index != - DecimalInteger ) {
 filename = filename . substring ( slash index + DecimalInteger ) ;
 }
 return apply ( filename ) ;
 }
comment:
START return true if a file name is matched by the file type END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
private void prune scrap views ( ) {
 final int max views = mactive views . length ;
 final int view type count = mview type count ;
 final array list < view > [ ] scrap views = UNK views ;
 for ( int i = DecimalInteger ;
 i < view type count ;
 ++ i ) {
 final array list < view > scrap UNK = scrap views [ i ] ;
 int size = scrap UNK . size ( ) ;
 while ( size > max views ) {
 scrap UNK . remove ( -- size ) ;
 }
 }
 final sparse array < view > trans views by pos = mtransient state views ;
 if ( trans views by pos != null ) {
 for ( int i = DecimalInteger ;
 i < trans views by pos . size ( ) ;
 i ++ ) {
 final view v = trans views by pos . value at ( i ) ;
 if ( ! v . has transient state ( ) ) {
 remove detached view ( v , false ) ;
 trans views by pos . remove at ( i ) ;
 i -- ;
 }
 }
 }
 final long sparse array < view > trans views by id = mtransient state views by id ;
 if ( trans views by id != null ) {
 for ( int i = DecimalInteger ;
 i < trans views by id . size ( ) ;
 i ++ ) {
 final view v = trans views by id . value at ( i ) ;
 if ( ! v . has transient state ( ) ) {
 remove detached view ( v , false ) ;
 trans views by id . remove at ( i ) ;
 i -- ;
 }
 }
 }
 }
comment:
START removes cached transient state views that no longer have transient state . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public float get ( int i ) {
 switch ( i ) {
 case DecimalInteger : return x ;
 case DecimalInteger : return y ;
 case DecimalInteger : return z ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START get the vector field value by index @param i @return END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
@ override public double get mean ( string field ) {
 if ( results == null ) {
 return double . na n ;
 }
 return results . get mean ( field ) ;
 }
comment:
START get the mean for the given field END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public final void add data type ( string type ) throws malformed mime type exception {
 final int slashpos = type . index of ( String ) ;
 final int UNK = type . length ( ) ;
 if ( slashpos > DecimalInteger && UNK >= slashpos + DecimalInteger ) {
 if ( mdata types == null ) mdata types = new array list < string > ( ) ;
 if ( UNK == slashpos + DecimalInteger && type . char at ( slashpos + DecimalInteger ) == String ) {
 string str = type . substring ( DecimalInteger , slashpos ) ;
 if ( ! mdata types . contains ( str ) ) {
 mdata types . add ( str . intern ( ) ) ;
 }
 mhas partial types = true ;
 }
 else {
 if ( ! mdata types . contains ( type ) ) {
 mdata types . add ( type . intern ( ) ) ;
 }
 }
 return ;
 }
 throw new malformed mime type exception ( type ) ;
 }
comment:
START add a new intent data type to match against . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public long get ( int id ) {
 switch ( id ) {
 case DecimalInteger : return header table size ;
 case DecimalInteger : return push enabled ? DecimalInteger : DecimalInteger ;
 case DecimalInteger : return max concurrent streams ;
 case DecimalInteger : return ( long ) initial window size ;
 case DecimalInteger : return ( long ) max frame size ;
 case DecimalInteger : return ( long ) max header list size ;
 default : return extra settings != null ? extra settings . get ( id ) : null ;
 }
 }
comment:
START return a setting value according to its identifier . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ deprecated public void remove nmea listener ( gps status . nmea listener listener ) {
 try {
 gnss status listener transport transport = mgps nmea listeners . remove ( listener ) ;
 if ( transport != null ) {
 service . unregister gnss status callback ( transport ) ;
 }
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START removes an nmea listener . END
BLUE1:0.142857142857
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void clear ( ) {
 int n = size ;
 weak reference < ? > [ ] values = values ;
 for ( int i = DecimalInteger ;
 i < n ;
 i ++ ) {
 values [ i ] = null ;
 }
 size = DecimalInteger ;
 garbage = false ;
 }
comment:
START removes all key-value mappings from this sparse array . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public throwable proxy [ ] get suppressed proxies ( ) {
 return this . suppressed proxies ;
 }
comment:
START gets proxies for suppressed exceptions . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public static iterable < string > files ( segment infos infos ) throws exception {
 final list < collection < string > > list = new array list < > ( ) ;
 list . add ( collections . singleton ( infos . get segments file name ( ) ) ) ;
 for ( segment commit info info : infos ) {
 list . add ( info . files ( ) ) ;
 }
 return iterables . flatten ( list ) ;
 }
comment:
START returns an iterable that allows to iterate over all files in this segments info END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public params add button ( final string text , float height ratio ) {
 mview factories . add ( new view factory base ( height ratio ) {
 public view create ( final context context ) {
 final button button = new button ( context ) ;
 button . set text ( text ) ;
 return button ;
 }
 }
 ) ;
 return this ;
 }
comment:
START add a button . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static set < path > files in directory ( path directory ) throws exception {
 set < path > files = new hash set < > ( ) ;
 try ( directory stream < path > stream = files . new directory stream ( directory ) ) {
 for ( path file : stream ) {
 files . add ( file ) ;
 }
 }
 return files ;
 }
comment:
START return a set of all files in a given directory END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK UNK

code:
public void create loop ( float [ ] vertices ) {
 jni create loop ( addr , vertices , vertices . length / DecimalInteger ) ;
 is UNK = true ;
 }
comment:
START create a loop . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
public void set values ( byte a , byte b , byte c ) {
 this . x = a ;
 this . y = b ;
 this . z = c ;
 }
comment:
START set the vector field value by char @param a @param b @param c END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public bluetooth server socket listen using rfcomm on ( int channel ) throws exception {
 return listen using rfcomm on ( channel , false , false ) ;
 }
comment:
START create a listening , secure rfcomm bluetooth socket . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
@ thread safe public boolean is auto fdo enabled ( ) {
 return fdo mode == fdo mode . auto_ o ;
 }
comment:
START returns whether auto o is enabled . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK .

code:
public int get cdma dbm ( ) {
 return this . mcdma dbm ;
 }
comment:
START get the cdma rssi value in dbm END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
public int get connection state ( bluetooth device device ) {
 if ( g ) log ( String + device + String ) ;
 if ( service != null && is enabled ( ) && is valid device ( device ) ) {
 try {
 return service . get connection state ( device ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , log . get stack trace string ( new throwable ( ) ) ) ;
 return bluetooth profile . state_ d ;
 }
 }
 if ( service == null ) log . w ( g , String ) ;
 return bluetooth profile . state_ d ;
 }
comment:
START get connection state of device @return device connection state END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public static string find single main class ( jar file jar file , string classes location ) throws exception {
 main classes callback callback = new main classes callback ( ) ;
 main class UNK . do with main classes ( jar file , classes location , callback ) ;
 return callback . get main class ( ) ;
 }
comment:
START find a single main class in a given jar file . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public create index request aliases ( xcontent builder source ) {
 return aliases ( source . bytes ( ) ) ;
 }
comment:
START sets the aliases that will be associated with the index when it gets created END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
< t > binding impl < t > get explicit binding ( key < t > key ) ;
comment:
START gets a binding which was specified explicitly in a module , or null . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK in the given UNK .
returns the list of UNK UNK

code:
public static script intrinsic color matrix create ( render script rs ) {
 long id = rs . nscript intrinsic create ( DecimalInteger , DecimalInteger ) ;
 return new script intrinsic color matrix ( id , rs ) ;
 }
comment:
START create an intrinsic for applying a color matrix to an allocation . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .

code:
public final vec2 abs ( ) {
 return new vec2 ( math utils . abs ( x ) , math utils . abs ( y ) ) ;
 }
comment:
START return a new vector that has positive components . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static boolean make advisor chain aspect UNK if necessary ( list < advisor > advisors ) {
 if ( ! advisors . is empty ( ) ) {
 boolean found aspect advice = false ;
 for ( advisor advisor : advisors ) {
 if ( is aspect advice ( advisor ) ) {
 found aspect advice = true ;
 }
 }
 if ( found aspect advice && ! advisors . contains ( expose invocation interceptor . r ) ) {
 advisors . add ( DecimalInteger , expose invocation interceptor . r ) ;
 return true ;
 }
 }
 return false ;
 }
comment:
START add special advisors if necessary to work with a proxy chain that contains aspect j advisors . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public static parcel file descriptor open ( file file , int mode , handler handler , final on close listener listener ) throws exception {
 if ( handler == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( listener == null ) {
 throw new illegal argument exception ( String ) ;
 }
 final file descriptor fd = open internal ( file , mode ) ;
 if ( fd == null ) return null ;
 return from fd ( fd , handler , listener ) ;
 }
comment:
START create a new parcel file descriptor accessing a given file . END
BLUE1:0.142857142857
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .
returns the number of UNK UNK

code:
public final void set ( final vec2 c1 , final vec2 c2 ) {
 ex . x = c1 . x ;
 ey . x = c2 . x ;
 ex . y = c1 . y ;
 ey . y = c2 . y ;
 }
comment:
START set by column vectors . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static open index request open index request ( string index ) {
 return new open index request ( index ) ;
 }
comment:
START creates an open index request . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
protected void set attributes ( attribute set attrs ) {
 set minimum height ( utils . dp to px ( DecimalInteger , get resources ( ) ) ) ;
 set minimum width ( utils . dp to px ( DecimalInteger , get resources ( ) ) ) ;
 int bacground color = attrs . get attribute resource value ( l , String , - DecimalInteger ) ;
 if ( bacground color != - DecimalInteger ) {
 set background color ( get resources ( ) . get color ( bacground color ) ) ;
 }
 else {
 int background = attrs . get attribute int value ( l , String , - DecimalInteger ) ;
 if ( background != - DecimalInteger ) set background color ( background ) ;
 else set background color ( color . parse color ( String ) ) ;
 }
 set minimum height ( utils . dp to px ( DecimalInteger , get resources ( ) ) ) ;
 }
comment:
START set atributtes of xml to view END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public builder set device address ( string device address ) {
 if ( device address != null && ! bluetooth adapter . check bluetooth address ( device address ) ) {
 throw new illegal argument exception ( String + device address ) ;
 }
 mdevice address = device address ;
 return this ;
 }
comment:
START set filter on device address . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ override pair < integer , integer > get offsets for line ( int line ) {
 for ( int ii = DecimalInteger , len = table . size ( ) ;
 ii < len ;
 ii ++ ) {
 if ( table . get ( ii ) . line == line ) {
 return pair . of ( table . get ( ii ) . offset , ii < len - DecimalInteger ? table . get ( ii + DecimalInteger ) . offset : buffer length ) ;
 }
 }
 return pair . of ( DecimalInteger , DecimalInteger ) ;
 }
comment:
START returns NUMBER , NUMBER for an unknown line END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int [ ] get keys ( ) {
 int [ ] keys = this . keys ;
 int n = key count ;
 int [ ] result = new int [ n ] ;
 for ( int i = DecimalInteger ;
 n != DecimalInteger ;
 ++ i ) {
 int entry = keys [ i ] ;
 if ( entry != y && entry != d ) {
 result [ -- n ] = entry ;
 }
 }
 return result ;
 }
comment:
START return array of present keys END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public boolean get last voice tag number ( bluetooth device device ) {
 if ( g ) log ( String ) ;
 if ( service != null && is enabled ( ) && is valid device ( device ) ) {
 try {
 return service . get last voice tag number ( device ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , log . get stack trace string ( new throwable ( ) ) ) ;
 }
 }
 if ( service == null ) log . w ( g , String ) ;
 return false ;
 }
comment:
START get a number corresponding to last voice tag recorded on ag . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK UNK

code:
private static char UNK to char ( byte b ) {
 if ( b < UNK ) {
 return ( char ) ( String + b ) ;
 }
 else switch ( b ) {
 case UNK : return String ;
 case UNK : return String ;
 case UNK : return e ;
 case UNK : return d ;
 default : return DecimalInteger ;
 }
 }
comment:
START returns NUMBER on invalid value END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
protected unmarshaller create unmarshaller ( ) {
 try {
 unmarshaller unmarshaller = get jaxb context ( ) . create unmarshaller ( ) ;
 init jaxb unmarshaller ( unmarshaller ) ;
 return unmarshaller ;
 }
 catch ( exception ex ) {
 throw convert jaxb exception ( ex ) ;
 }
 }
comment:
START return a newly created jaxb unmarshaller . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
protected < t > row mapper < t > get single column row mapper ( class < t > required type ) {
 return new single column row mapper < > ( required type ) ;
 }
comment:
START create a new row mapper for reading result objects from a single column . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
private string full path ( action input input ) {
 string rel path = input . get exec path string ( ) ;
 return rel path . starts with ( String ) ? rel path : new file ( cwd , rel path ) . get path ( ) ;
 }
comment:
START creates a file object that refers to file name , if file name is an absolute path . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public < e > e find ( class < e > entity class , object primary key ) {
 return get entity manager ( ) . find ( entity class , primary key ) ;
 }
comment:
START find by primary key . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected collection < hystrix collapser . collapsed request < object , object > > get collapsed requests ( ) {
 return collapsed requests ;
 }
comment:
START gets collapsed requests . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
@ gwt compatible ( serializable = true ) public static < t > ordering < t > from ( comparator < t > comparator ) {
 return ( comparator instanceof ordering ) ? ( ordering < t > ) comparator : new comparator ordering < t > ( comparator ) ;
 }
comment:
START returns an ordering based on an <i> existing </i> comparator instance . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public void set fixed rotation ( boolean flag ) {
 jni set fixed rotation ( addr , flag ) ;
 }
comment:
START set this body to have fixed rotation . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
int get worker id ( ) {
 return this . worker id ;
 }
comment:
START returns a unique id for this worker . END
BLUE1:0.142857142857
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
public void recycle ( ) {
 clear ( ) ;
 pool . release ( this ) ;
 }
comment:
START return an instance back to be reused . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
sets the UNK of the UNK to the UNK .

code:
public static snapshots status request snapshots status request ( string repository ) {
 return new snapshots status request ( repository ) ;
 }
comment:
START get status of snapshots @param repository repository name @return snapshot status request END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
private void on disk destroyed internal ( @ non null disk info disk ) {
 mnotification manager . cancel as user ( disk . get id ( ) , disk_ d , user handle . l ) ;
 }
comment:
START remove all notifications for a disk when it goes away . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set currency time limit ( int currency time limit ) {
 this . currency time limit = currency time limit ;
 }
comment:
START set a currency time limit for this attribute . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public < e extends realm model > void create all from json ( class < e > clazz , string json ) {
 if ( clazz == null || json == null || json . length ( ) == DecimalInteger ) {
 return ;
 }
 array arr ;
 try {
 arr = new array ( json ) ;
 }
 catch ( exception e ) {
 throw new realm exception ( String , e ) ;
 }
 create all from json ( clazz , arr ) ;
 }
comment:
START creates a realm object for each object in a json array . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK UNK

code:
public void set icon attribute ( @ attr res int attr id ) {
 typed value out = new typed value ( ) ;
 context . get theme ( ) . resolve attribute ( attr id , out , true ) ;
 alert . set icon ( out . resource id ) ;
 }
comment:
START set an icon as supplied by a theme attribute . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
void set scaling mode ( @ scaling mode int scaling mode ) {
 synchronized ( lock ) {
 check not released locked ( ) ;
 int err = native set scaling mode ( mnative object , scaling mode ) ;
 if ( err != DecimalInteger ) {
 throw new illegal argument exception ( String + scaling mode ) ;
 }
 }
 }
comment:
START set the scaling mode to be used for this surfaces buffers END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given request .
set the UNK for the given UNK .

code:
list < hdmi device info > get safe external inputs locked ( ) {
 return UNK external inputs ;
 }
comment:
START return external input devices . END
BLUE1:0.142857142857
--generate--
returns the number of UNK UNK .
returns the number of UNK .
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
public void start time ( long start time ) {
 this . start time = start time ;
 }
comment:
START sets snapshot start time @param start time snapshot start time END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given request .
set the UNK for the given UNK .

code:
private network security config get empty config ( ) {
 return new network security config . builder ( ) . build ( ) ;
 }
comment:
START return a network security config that has an empty trust anchor set . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void set user data ( object user data ) {
 this . user data = user data ;
 }
comment:
START set the user data END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ target api ( build . version_ s . b ) public < e extends realm model > e create object from json ( class < e > clazz , input stream input stream ) throws exception {
 if ( clazz == null || input stream == null ) {
 return null ;
 }
 check if valid ( ) ;
 e realm object ;
 table table = schema . get table ( clazz ) ;
 if ( table . has primary key ( ) ) {
 scanner scanner = null ;
 try {
 scanner = get full string scanner ( input stream ) ;
 object json = new object ( scanner . next ( ) ) ;
 realm object = configuration . get schema mediator ( ) . create or update using json object ( clazz , this , json , false ) ;
 }
 catch ( exception e ) {
 throw new realm exception ( String , e ) ;
 }
 finally {
 if ( scanner != null ) {
 scanner . close ( ) ;
 }
 }
 }
 else {
 json reader reader = new json reader ( new input stream reader ( input stream , String ) ) ;
 try {
 realm object = configuration . get schema mediator ( ) . create using json stream ( clazz , this , reader ) ;
 }
 finally {
 reader . close ( ) ;
 }
 }
 return realm object ;
 }
comment:
START creates a realm object pre-filled with data from a json object . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
private void unregister dependent ( preference dependent ) {
 if ( dependents != null ) {
 dependents . remove ( dependent ) ;
 }
 }
comment:
START removes a dependent preference on this preference . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean is nested scrolling enabled ( ) {
 return ( mprivate flags3 & pflag3_ nested_ UNK d ) == pflag3_ nested_ UNK d ;
 }
comment:
START returns true if nested scrolling is enabled for this view . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
set whether to UNK UNK .
set whether to UNK UNK UNK .
sets the UNK of the given UNK .
set whether to UNK UNK UNK UNK .

code:
public float get max force ( ) {
 return jni get max force ( addr ) ;
 }
comment:
START get the maximum friction force in n. END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public double get ( int i ) {
 switch ( i ) {
 case DecimalInteger : return x ;
 case DecimalInteger : return y ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START get the vector field value by index @param i @return END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public virtual display create virtual display ( @ non null string name , int width , int height , int density dpi , @ nullable surface surface , int flags , @ nullable virtual display . callback callback , @ nullable handler handler ) {
 return create virtual display ( null , name , width , height , density dpi , surface , flags , callback , handler ) ;
 }
comment:
START creates a virtual display . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public boolean remove interface ( class < ? > intf ) {
 return this . interfaces . remove ( intf ) ;
 }
comment:
START remove a proxied interface . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns UNK UNK of the given UNK .

code:
@ suppress warnings ( String ) public t master node timeout ( time value master node timeout ) {
 this . master node timeout = master node timeout ;
 return ( t ) this ;
 }
comment:
START sets the master node timeout END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
private prepared statement prepare statement for generated keys ( connection con ) throws exception {
 if ( get generated key names ( ) . length < DecimalInteger ) {
 throw new invalid data access api usage exception ( String + String ) ;
 }
 prepared statement ps ;
 if ( this . table meta data context . is generated keys column name array supported ( ) ) {
 if ( logger . is debug enabled ( ) ) {
 logger . debug ( String ) ;
 }
 ps = con . prepare statement ( get insert string ( ) , get generated key names ( ) ) ;
 }
 else {
 if ( logger . is debug enabled ( ) ) {
 logger . debug ( String ) ;
 }
 ps = con . prepare statement ( get insert string ( ) , statement . return_ UNK s ) ;
 }
 return ps ;
 }
comment:
START create a prepared statement to be used for an insert operation with generated keys . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
static tuple < path , environment > create env ( file system fs , function < string , path > temp ) throws exception {
 path home = temp . apply ( String ) ;
 files . create directories ( home . resolve ( String ) ) ;
 files . create file ( home . resolve ( String ) . resolve ( String ) ) ;
 files . create directories ( home . resolve ( String ) ) ;
 files . create file ( home . resolve ( String ) . resolve ( String ) ) ;
 path plugins = files . create directories ( home . resolve ( String ) ) ;
 assert true ( files . exists ( plugins ) ) ;
 settings settings = settings . builder ( ) . put ( String , home ) . build ( ) ;
 return tuple . tuple ( home , new environment ( settings ) ) ;
 }
comment:
START creates a test environment with bin , config and plugins directories . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
public void add at ( int i , long value ) {
 switch ( i ) {
 case DecimalInteger : x += value ;
 return ;
 case DecimalInteger : y += value ;
 return ;
 case DecimalInteger : z += value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START add the vector field value by index @param i @param value END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
boolean UNK key ( reference entry < k , v > entry , int hash ) {
 lock ( ) ;
 try {
 int new count = count - DecimalInteger ;
 atomic reference array < reference entry < k , v > > table = this . table ;
 int index = hash & ( table . length ( ) - DecimalInteger ) ;
 reference entry < k , v > first = table . get ( index ) ;
 for ( reference entry < k , v > e = first ;
 e != null ;
 e = e . get next ( ) ) {
 if ( e == entry ) {
 ++ mod count ;
 reference entry < k , v > new first = remove value from chain ( first , e , e . get key ( ) , hash , e . get value reference ( ) . get ( ) , e . get value reference ( ) , removal cause . d ) ;
 new count = this . count - DecimalInteger ;
 table . set ( index , new first ) ;
 this . count = new count ;
 return true ;
 }
 }
 return false ;
 }
 finally {
 unlock ( ) ;
 post write cleanup ( ) ;
 }
 }
comment:
START removes an entry whose key has been garbage collected . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK UNK .

code:
public boolean get is UNK selection ( ) {
 return mis UNK network selection ;
 }
comment:
START get current network selection mode . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK that be UNK for the UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for .

code:
public void set java script escape ( boolean java script escape ) throws jsp exception {
 this . java script escape = java script escape ;
 }
comment:
START set java script escaping for this tag , as boolean value . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public cursor get suggestions ( searchable info searchable , string query ) {
 return get suggestions ( searchable , query , - DecimalInteger ) ;
 }
comment:
START gets a cursor with search suggestions . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public float get minimum focus distance checked ( ) {
 key < float > key = camera characteristics . lens_ info_ minimum_ focus_ e ;
 float min focus distance ;
 if ( is hardware level full ( ) || is capability supported ( camera characteristics . request_ available_ capabilities_ UNK r ) ) {
 min focus distance = get value from key non null ( key ) ;
 }
 else {
 min focus distance = characteristics . get ( key ) ;
 }
 if ( min focus distance == null ) {
 return DecimalFloatingPoint ;
 }
 check true for key ( key , String , min focus distance >= DecimalInteger ) ;
 if ( min focus distance < DecimalInteger ) {
 min focus distance = DecimalFloatingPoint ;
 }
 return min focus distance ;
 }
comment:
START get minimum focus distance . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public boolean has port ( ) {
 return port >= DecimalInteger ;
 }
comment:
START return true if this instance has a defined port . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .

code:
public boolean is motion event UNK enabled ( ) {
 return ( mgroup flags & flag_ UNK UNK s ) == flag_ UNK UNK s ;
 }
comment:
START returns true if motion events dispatched to this view group can be split to multiple children . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
public final void remove printers ( @ non null list < printer id > printer ids ) {
 print service . throw if not called on main thread ( ) ;
 if ( mis destroyed ) {
 log . w ( log_ g , String ) ;
 return ;
 }
 if ( mis discovery started ) {
 list < printer id > removed printer ids = new array list < printer id > ( ) ;
 final int removed printer id count = printer ids . size ( ) ;
 for ( int i = DecimalInteger ;
 i < removed printer id count ;
 i ++ ) {
 printer id removed printer id = printer ids . get ( i ) ;
 if ( printers . remove ( removed printer id ) != null ) {
 removed printer ids . add ( removed printer id ) ;
 }
 }
 if ( ! removed printer ids . is empty ( ) ) {
 try {
 observer . on printers removed ( new parceled list slice < printer id > ( removed printer ids ) ) ;
 }
 catch ( remote exception re ) {
 log . e ( log_ g , String , re ) ;
 }
 }
 }
 else {
 if ( mlast sent printers == null ) {
 mlast sent printers = new array map < printer id , printer info > ( printers ) ;
 }
 final int removed printer id count = printer ids . size ( ) ;
 for ( int i = DecimalInteger ;
 i < removed printer id count ;
 i ++ ) {
 printer id removed printer id = printer ids . get ( i ) ;
 printers . remove ( removed printer id ) ;
 }
 }
 }
comment:
START removes added printers . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public void set values ( int a , int b , int c ) {
 this . x = a ;
 this . y = b ;
 this . z = c ;
 }
comment:
START set the vector field value by int @param a @param b @param c END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public int buffer size in bytes ( ) {
 return this . buffer size in bytes ;
 }
comment:
START returns read buffer size @return read buffer size END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set UNK ( action action ) {
 update status ( action status message . UNK strategy ( action ) ) ;
 }
comment:
START set `` preparing '' status . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public void display image ( string uri , image view image view , display image options options ) {
 display image ( uri , new image view aware ( image view ) , options , null , null ) ;
 }
comment:
START adds display image task to execution pool . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public void set values ( int a , int b ) {
 this . x = a ;
 this . y = b ;
 }
comment:
START set the vector field value by int @param a @param b END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
set < shard metadata > get node shards ( string node identifier , long table id ) ;
comment:
START get shard metadata for shards on a given node . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public final void add data authority ( string host , string port ) {
 if ( port != null ) port = port . intern ( ) ;
 add data authority ( new authority entry ( host . intern ( ) , port ) ) ;
 }
comment:
START add a new intent data authority to match against . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public boolean contains ( t value , boolean identity ) {
 t [ ] items = this . items ;
 int i = size - DecimalInteger ;
 if ( identity || value == null ) {
 while ( i >= DecimalInteger ) if ( items [ i -- ] == value ) return true ;
 }
 else {
 while ( i >= DecimalInteger ) if ( value . equals ( items [ i -- ] ) ) return true ;
 }
 return false ;
 }
comment:
START returns if this array contains value . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
set whether to UNK UNK UNK .
sets whether the UNK is UNK in the UNK .

code:
@ override public double get kurtosis ( string field ) {
 if ( results == null ) {
 return double . na n ;
 }
 return results . get kurtosis ( field ) ;
 }
comment:
START get the distribution shape for the given field END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set client certificate alias ( string alias ) {
 set field value ( client_ cert_ y , alias , client_ cert_ x ) ;
 set field value ( private_ key_ id_ y , alias , credentials . user_ private_ y ) ;
 if ( text utils . is empty ( alias ) ) {
 set field value ( engine_ y , engine_ e ) ;
 set field value ( engine_ id_ y , String ) ;
 }
 else {
 set field value ( engine_ y , engine_ e ) ;
 set field value ( engine_ id_ y , engine_ id_ e ) ;
 }
 }
comment:
START set client certificate alias . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public l get url ( ) throws malformed exception {
 if ( this . url == null ) {
 handler handler = new handler ( this ) ;
 string file = this . root file . get file ( ) . to i ( ) + this . path from root + String ;
 file = file . replace ( String , String ) ;
 this . url = new l ( String , String , - DecimalInteger , file , handler ) ;
 }
 return this . url ;
 }
comment:
START return a url that can be used to access this jar file . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void set state ( int state ) {
 state = state ;
 }
comment:
START sets call 's state . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public event bus builder add index ( subscriber info index index ) {
 if ( subscriber info indexes == null ) {
 subscriber info indexes = new array list < > ( ) ;
 }
 subscriber info indexes . add ( index ) ;
 return this ;
 }
comment:
START adds an index generated by event bus ' annotation preprocessor . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public synchronized handler start ( ) throws exception {
 final condition variable start done = new condition variable ( ) ;
 if ( looper != null || handler != null ) {
 log . w ( g , String ) ;
 return handler ;
 }
 new thread ( ) {
 @ override public void run ( ) {
 if ( e ) log . v ( g , String ) ;
 looper . prepare ( ) ;
 looper = looper . my looper ( ) ;
 handler = new handler ( ) ;
 start done . open ( ) ;
 looper . loop ( ) ;
 if ( e ) log . v ( g , String ) ;
 }
 }
 . start ( ) ;
 if ( e ) log . v ( g , String ) ;
 if ( ! start done . block ( wait_ for_ UNK to_ e ) ) {
 throw new timeout exception ( String ) ;
 }
 return handler ;
 }
comment:
START create and start a looper thread , return the handler END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public static string canonical name ( string blob name ) {
 if ( blob name . contains ( String ) ) {
 return blob name . substring ( DecimalInteger , blob name . index of ( String ) ) ;
 }
 return blob name ;
 }
comment:
START returns base file name from part name @param blob name part name @return base file name END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that UNK the UNK .
returns the list of UNK UNK that be UNK to the UNK .

code:
public static int get modifier meta state mask ( ) {
 return meta_ modifier_ k ;
 }
comment:
START gets a mask that includes all valid modifier key meta state bits . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public address resolver options add search domain ( string search domain ) {
 if ( search domains == null ) {
 search domains = new array list < > ( ) ;
 }
 search domains . add ( search domain ) ;
 return this ;
 }
comment:
START add a dns search domain . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public int set parameter ( int [ ] param , int [ ] value ) throws illegal state exception {
 if ( param . length > DecimalInteger || value . length > DecimalInteger ) {
 return error_ bad_ e ;
 }
 byte [ ] p = int to byte array ( param [ DecimalInteger ] ) ;
 if ( param . length > DecimalInteger ) {
 byte [ ] p2 = int to byte array ( param [ DecimalInteger ] ) ;
 p = concat arrays ( p , p2 ) ;
 }
 byte [ ] v = int to byte array ( value [ DecimalInteger ] ) ;
 if ( value . length > DecimalInteger ) {
 byte [ ] v2 = int to byte array ( value [ DecimalInteger ] ) ;
 v = concat arrays ( v , v2 ) ;
 }
 return set parameter ( p , v ) ;
 }
comment:
START set effect parameter . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public static bitmap region decoder new instance ( input stream is , boolean is shareable ) throws exception {
 if ( is instanceof asset manager . asset input stream ) {
 return native new instance ( ( ( asset manager . asset input stream ) is ) . get native asset ( ) , is shareable ) ;
 }
 else {
 byte [ ] temp storage = new byte [ DecimalInteger * DecimalInteger ] ;
 return native new instance ( is , temp storage , is shareable ) ;
 }
 }
comment:
START create a bitmap region decoder from an input stream . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
@ suppress warnings ( String ) public static < t > connectable observable < t > create ( observable < ? extends t > source , final int buffer size ) {
 if ( buffer size == integer . max_ e ) {
 return ( connectable observable < t > ) create ( source ) ;
 }
 return create ( source , new func0 < replay buffer < t > > ( ) {
 @ override public replay buffer < t > call ( ) {
 return new size bound replay buffer < t > ( buffer size ) ;
 }
 }
 ) ;
 }
comment:
START creates a replaying connectable observable with a size bound buffer . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
static xml writer create for testing ( string writer writer ) {
 return new xml writer ( writer ) ;
 }
comment:
START creates an xml writer for testing purposes . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public void remove item ( long identifier ) {
 int position = get position ( identifier ) ;
 if ( mdrawer builder . check drawer item ( position , false ) ) {
 mdrawer builder . get item adapter ( ) . remove ( position ) ;
 }
 }
comment:
START remove a drawer item by the identifier @param identifier END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given request .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static < t > key < t > get ( class < t > type ) {
 return new key < > ( type , null annotation strategy . e ) ;
 }
comment:
START gets a key for an injection type . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void remove all zeros ( ) {
 iterator < map . entry < k , atomic long > > entry iterator = map . entry set ( ) . iterator ( ) ;
 while ( entry iterator . has next ( ) ) {
 map . entry < k , atomic long > entry = entry iterator . next ( ) ;
 atomic long atomic = entry . get value ( ) ;
 if ( atomic != null && atomic . get ( ) == DecimalInteger ) {
 entry iterator . remove ( ) ;
 }
 }
 }
comment:
START removes all mappings from this map whose values are zero . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static key < ? > get ( type type ) {
 return new key < object > ( type , null annotation strategy . e ) ;
 }
comment:
START gets a key for an injection type . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public delivery options add header ( string key , string value ) {
 check headers ( ) ;
 objects . require non null ( key , String ) ;
 objects . require non null ( value , String ) ;
 headers . add ( key , value ) ;
 return this ;
 }
comment:
START add a message header . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public params add text view ( final string text , float height ratio ) {
 mview factories . add ( new view factory base ( height ratio ) {
 public view create ( final context context ) {
 final text view tv = new text view ( context ) ;
 tv . set text ( text ) ;
 return tv ;
 }
 }
 ) ;
 return this ;
 }
comment:
START add a text view . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public particle group create particle group ( particle group def def ) {
 assert ( is locked ( ) == false ) ;
 if ( is locked ( ) ) {
 return null ;
 }
 particle group g = m_particle system . create particle group ( def ) ;
 return g ;
 }
comment:
START create a particle group whose properties have been defined . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public final void set ( final attribute attribute ) {
 final int idx = index of ( attribute . type ) ;
 if ( idx < DecimalInteger ) {
 enable ( attribute . type ) ;
 attributes . add ( attribute ) ;
 sorted = false ;
 }
 else {
 attributes . set ( idx , attribute ) ;
 }
 sort ( ) ;
 }
comment:
START add a attribute to this material . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .

code:
@ nullable public < t > t get ( key < t > key ) {
 return request . settings . get ( key ) ;
 }
comment:
START get a capture request field value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public static uri from file ( file file ) {
 if ( file == null ) {
 throw new null pointer exception ( String ) ;
 }
 path part path = path part . from decoded ( file . get absolute path ( ) ) ;
 return new hierarchical uri ( String , part . y , path , part . l , part . l ) ;
 }
comment:
START creates a uri from a file . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .
returns the UNK of the given UNK , in the UNK .
returns the list of UNK UNK

code:
public synchronized cluster state [ ] pending cluster states ( ) {
 array list < cluster state > states = new array list < > ( ) ;
 for ( cluster state context context : pending states ) {
 states . add ( context . state ) ;
 }
 return states . to array ( new cluster state [ states . size ( ) ] ) ;
 }
comment:
START returns all pending states , committed or not END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
action future < get pipeline response > get pipeline ( get pipeline request request ) ;
comment:
START returns a stored ingest pipeline END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
public void triangle ( vector3 p1 , vector3 p2 , vector3 p3 ) ;
comment:
START add a triangle . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set max motor force ( float force ) {
 m_body a . set awake ( true ) ;
 m_body b . set awake ( true ) ;
 UNK motor force = force ;
 }
comment:
START set the maximum motor force , usually in n. @param force END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK to .

code:
public final boolean get auto verify ( ) {
 return ( ( mverify state & state_ verify_ o ) == DecimalInteger ) ;
 }
comment:
START return if this filter will needs to be automatically verified again its data uris or not . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public int format volume ( string mount point ) throws remote exception ;
comment:
START returns an int consistent with mount service result code END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public profile get active profile ( ) {
 return maccount header builder . mcurrent profile ;
 }
comment:
START get the current active profile @return END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static string add paths ( string segment1 , string segment2 ) {
 if ( segment1 == null || segment1 . length ( ) == DecimalInteger ) {
 if ( segment1 != null && segment2 == null ) {
 return segment1 ;
 }
 return segment2 ;
 }
 if ( segment2 == null || segment2 . length ( ) == DecimalInteger ) {
 return segment1 ;
 }
 int split = segment1 . index of ( String ) ;
 if ( split < DecimalInteger ) {
 split = segment1 . index of ( String ) ;
 }
 if ( split == DecimalInteger ) {
 return segment2 + segment1 ;
 }
 if ( split < DecimalInteger ) {
 split = segment1 . length ( ) ;
 }
 string builder buf = new string builder ( segment1 . length ( ) + segment2 . length ( ) + DecimalInteger ) ;
 buf . append ( segment1 ) ;
 if ( buf . char at ( split - DecimalInteger ) == String ) {
 if ( segment2 . starts with ( h ) ) {
 buf . delete char at ( split - DecimalInteger ) ;
 buf . insert ( split - DecimalInteger , segment2 ) ;
 }
 else {
 buf . insert ( split , segment2 ) ;
 }
 }
 else {
 if ( segment2 . starts with ( h ) ) {
 buf . insert ( split , segment2 ) ;
 }
 else {
 buf . insert ( split , String ) ;
 buf . insert ( split + DecimalInteger , segment2 ) ;
 }
 }
 return buf . to string ( ) ;
 }
comment:
START add two uri path segments . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK for the UNK .

code:
public synchronized media metadata editor put string ( int key , string value ) throws illegal argument exception {
 if ( applied ) {
 log . e ( g , String ) ;
 return this ;
 }
 if ( metadata_ keys_ e . get ( key , metadata_ type_ d ) != metadata_ type_ g ) {
 throw ( new illegal argument exception ( String + key ) ) ;
 }
 UNK metadata . put string ( string . value of ( key ) , value ) ;
 mmetadata changed = true ;
 return this ;
 }
comment:
START adds textual information . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public cursor get suggestions ( searchable info searchable , string query , int limit ) {
 if ( searchable == null ) {
 return null ;
 }
 string authority = searchable . get suggest authority ( ) ;
 if ( authority == null ) {
 return null ;
 }
 uri . builder uri builder = new uri . builder ( ) . scheme ( content resolver . scheme_ t ) . authority ( authority ) . query ( String ) . fragment ( String ) ;
 final string content path = searchable . get suggest path ( ) ;
 if ( content path != null ) {
 uri builder . append encoded path ( content path ) ;
 }
 uri builder . append path ( search manager . suggest_ uri_ path_ y ) ;
 string selection = searchable . get suggest selection ( ) ;
 string [ ] sel args = null ;
 if ( selection != null ) {
 sel args = new string [ ] {
 query }
 ;
 }
 else {
 uri builder . append path ( query ) ;
 }
 if ( limit > DecimalInteger ) {
 uri builder . append query parameter ( suggest_ parameter_ t , string . value of ( limit ) ) ;
 }
 uri uri = uri builder . build ( ) ;
 return context . get content resolver ( ) . query ( uri , null , selection , sel args , null ) ;
 }
comment:
START gets a cursor with search suggestions . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK UNK .

code:
public mock http servlet request builder session attr ( string name , object value ) {
 add to map ( this . session attributes , name , value ) ;
 return this ;
 }
comment:
START set a session attribute . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void add callback ( task callbacks cb ) {
 if ( ! callbacks . contains ( cb ) ) {
 callbacks . add ( cb ) ;
 }
 }
comment:
START add a callback . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
@ override public string to string ( ) {
 string builder sb = new string builder ( String ) ;
 if ( is reference ( ) ) {
 sb . append ( String ) . append ( this . view ) . append ( String ) ;
 }
 else {
 sb . append ( String ) . append ( this . view ) . append ( String ) ;
 }
 sb . append ( String ) . append ( this . model ) ;
 return sb . to string ( ) ;
 }
comment:
START return diagnostic information about this model and view . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public int mount volume ( string mount point ) throws remote exception ;
comment:
START returns an int consistent with mount service result code END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public sorted map < string , context mapping > get context mapping ( ) {
 return context mapping ;
 }
comment:
START get the context mapping associated with this completion field END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public double opt extra double ( string key , double default value ) {
 return mextra data . opt double ( key , default value ) ;
 }
comment:
START get extra double value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set transaction id ( int id ) {
 mtrans id = id ;
 }
comment:
START set transaction id . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public static abstract asset create ( string asset json ) throws association service exception {
 json reader reader = new json reader ( new string reader ( asset json ) ) ;
 reader . set lenient ( false ) ;
 try {
 return asset factory . create ( json parser . parse ( reader ) ) ;
 }
 catch ( exception | exception e ) {
 throw new association service exception ( String , e ) ;
 }
 }
comment:
START creates a new asset from its json string representation . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static locals new function scope ( locals program scope , type return type , list < parameter > parameters , int max loop counter ) {
 locals locals = new locals ( program scope , return type ) ;
 for ( parameter parameter : parameters ) {
 locals . add variable ( parameter . location , parameter . type , parameter . name , false ) ;
 }
 if ( max loop counter > DecimalInteger ) {
 locals . define variable ( null , definition . int_ e , p , true ) ;
 }
 return locals ;
 }
comment:
START creates a new function scope inside the current scope END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
@ override public object resolve argument ( method parameter parameter , model and view container UNK container , native web request web request , web data binder factory binder factory ) throws exception {
 @ suppress warnings ( String ) map < string , string > uri template vars = ( map < string , string > ) web request . get attribute ( handler mapping . uri_ UNK UNK e , request attributes . scope_ t ) ;
 if ( ! collection utils . is empty ( uri template vars ) ) {
 return new linked hash map < > ( uri template vars ) ;
 }
 else {
 return collections . empty map ( ) ;
 }
 }
comment:
START return a map with all uri template variables or an empty map . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public final void set ( final attribute attribute1 , final attribute attribute2 , final attribute UNK , final attribute UNK ) {
 set ( attribute1 ) ;
 set ( attribute2 ) ;
 set ( UNK ) ;
 set ( UNK ) ;
 }
comment:
START add multiple attributes to this material . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public long get ( int i ) {
 switch ( i ) {
 case DecimalInteger : return ( long ) ( x ) ;
 case DecimalInteger : return ( long ) ( y ) ;
 case DecimalInteger : return ( long ) ( z ) ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START get the vector field value by index @param i @return END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ nullable public < s extends values source > s values source ( values source config < s > config , search context context ) throws exception {
 if ( ! config . valid ( ) ) {
 throw new illegal state exception ( String ) ;
 }
 final s vs ;
 if ( config . unmapped ( ) ) {
 if ( config . missing ( ) == null ) {
 vs = null ;
 }
 else if ( config . value source type ( ) == values source type . c ) {
 vs = ( s ) values source . numeric . y ;
 }
 else if ( config . value source type ( ) == values source type . t ) {
 vs = ( s ) values source . geo point . y ;
 }
 else if ( config . value source type ( ) == values source type . y || config . value source type ( ) == values source type . s ) {
 vs = ( s ) values source . bytes . with UNK . y ;
 }
 else {
 throw new search parse exception ( search context , String + config . value source type ( ) , null ) ;
 }
 }
 else {
 vs = original values source ( config ) ;
 }
 if ( config . missing ( ) == null ) {
 return vs ;
 }
 if ( vs instanceof values source . bytes ) {
 final bytes ref missing = new bytes ref ( config . missing ( ) . to string ( ) ) ;
 if ( vs instanceof values source . bytes . with UNK ) {
 return ( s ) missing values . replace missing ( ( values source . bytes . with UNK ) vs , missing ) ;
 }
 else {
 return ( s ) missing values . replace missing ( ( values source . bytes ) vs , missing ) ;
 }
 }
 else if ( vs instanceof values source . numeric ) {
 number missing = null ;
 if ( config . missing ( ) instanceof number ) {
 missing = ( number ) config . missing ( ) ;
 }
 else {
 if ( config . field context ( ) != null && config . field context ( ) . field type ( ) != null ) {
 missing = config . field context ( ) . field type ( ) . doc value format ( null , date time zone . c ) . parse double ( config . missing ( ) . to string ( ) , false , context :: now in millis ) ;
 }
 else {
 missing = double . parse double ( config . missing ( ) . to string ( ) ) ;
 }
 }
 return ( s ) missing values . replace missing ( ( values source . numeric ) vs , missing ) ;
 }
 else if ( vs instanceof values source . geo point ) {
 final geo point missing = geo utils . parse geo point ( config . missing ( ) . to string ( ) , new geo point ( ) ) ;
 return ( s ) missing values . replace missing ( ( values source . geo point ) vs , missing ) ;
 }
 else {
 throw new search parse exception ( search context , String + vs . get class ( ) , null ) ;
 }
 }
comment:
START get a value source given its configuration . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void set protected targets ( string ... targets ) {
 handler . set protected targets ( arrays . copy of ( targets , targets . length ) ) ;
 }
comment:
START set protected targets . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public rect attach stack ( int stack id , int display id , boolean on top ) {
 final long orig id = binder . clear calling identity ( ) ;
 try {
 synchronized ( mwindow map ) {
 final display content display content = mdisplay contents . get ( display id ) ;
 if ( display content != null ) {
 task stack stack = mstack id to stack . get ( stack id ) ;
 if ( stack == null ) {
 if ( debug_ k ) slog . d ( tag_ m , String + stack id ) ;
 stack = new task stack ( this , stack id ) ;
 mstack id to stack . put ( stack id , stack ) ;
 if ( stack id == docked_ stack_ d ) {
 get default display content locked ( ) . mdivider controller locked . notify docked stack exists changed ( true ) ;
 }
 }
 stack . attach display content ( display content ) ;
 display content . attach stack ( stack , on top ) ;
 if ( stack . get raw fullscreen ( ) ) {
 return null ;
 }
 rect bounds = new rect ( ) ;
 stack . get raw bounds ( bounds ) ;
 return bounds ;
 }
 }
 }
 finally {
 binder . restore calling identity ( orig id ) ;
 }
 return null ;
 }
comment:
START create a new task stack and place it on a display content . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
public static bitmap drawable mock bitmap drawable ( ) {
 return mock drawable ( bitmap drawable . class ) ;
 }
comment:
START creates a mock bitmap drawable with some methods stubbed . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public string pretty print ( ) {
 string builder sb = new string builder ( short summary ( ) ) ;
 sb . append ( String ) ;
 if ( ! this . keep task list ) {
 sb . append ( String ) ;
 }
 else {
 sb . append ( String ) ;
 sb . append ( String ) ;
 sb . append ( String ) ;
 number format nf = number format . get number instance ( ) ;
 nf . set minimum integer digits ( DecimalInteger ) ;
 nf . set grouping used ( false ) ;
 number format pf = number format . get percent instance ( ) ;
 pf . set minimum integer digits ( DecimalInteger ) ;
 pf . set grouping used ( false ) ;
 for ( task info task : get task info ( ) ) {
 sb . append ( nf . format ( task . get time millis ( ) ) ) . append ( String ) ;
 sb . append ( pf . format ( task . get time seconds ( ) / get total time seconds ( ) ) ) . append ( String ) ;
 sb . append ( task . get task name ( ) ) . append ( String ) ;
 }
 }
 return sb . to string ( ) ;
 }
comment:
START return a string with a table describing all tasks performed . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
public builder set service data ( parcel uuid service data uuid , byte [ ] service data ) {
 if ( service data uuid == null ) {
 throw new illegal argument exception ( String ) ;
 }
 mservice data uuid = service data uuid ;
 mservice data = service data ;
 mservice data mask = null ;
 return this ;
 }
comment:
START set filtering on service data . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void purge UNK entries ( ) {
 for ( segment segment : this . segments ) {
 segment . UNK if necessary ( false ) ;
 }
 }
comment:
START remove any entries that have been garbage collected and are no longer referenced . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
private list < network service . custom name resolver > get custom name resolvers ( list < discovery plugin > discovery plugins ) {
 list < network service . custom name resolver > custom name resolvers = new array list < > ( ) ;
 for ( discovery plugin discovery plugin : discovery plugins ) {
 network service . custom name resolver custom name resolver = discovery plugin . get custom name resolver ( settings ) ;
 if ( custom name resolver != null ) {
 custom name resolvers . add ( custom name resolver ) ;
 }
 }
 return custom name resolvers ;
 }
comment:
START get custom name resolvers list based on a discovery plugins list @param discovery plugins discovery plugins list END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK to the given UNK .

code:
@ service thread only boolean is arc UNK ( ) {
 assert run on service thread ( ) ;
 if ( UNK UNK ) {
 for ( int i = DecimalInteger ;
 i < UNK feature enabled . size ( ) ;
 i ++ ) {
 if ( UNK feature enabled . value at ( i ) ) return true ;
 }
 }
 return false ;
 }
comment:
START returns true if arc is currently established on a certain port . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK for the given view .
sets the UNK of the given UNK .

code:
public short get as short ( string key ) {
 object value = values . get ( key ) ;
 try {
 return value != null ? ( ( number ) value ) . short value ( ) : null ;
 }
 catch ( class cast exception e ) {
 if ( value instanceof char sequence ) {
 try {
 return short . value of ( value . to string ( ) ) ;
 }
 catch ( number format exception e2 ) {
 log . e ( g , String + value + String + key ) ;
 return null ;
 }
 }
 else {
 log . e ( g , String + key + String + value , e ) ;
 return null ;
 }
 }
 }
comment:
START gets a value and converts it to a short . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static double buffer allocate ( int capacity ) {
 if ( capacity < DecimalInteger ) {
 throw new illegal argument exception ( ) ;
 }
 return buffer factory . new double buffer ( capacity ) ;
 }
comment:
START creates a double buffer based on a newly allocated double array . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void delete dynamic with id ( @ non null shortcut service s , @ non null string shortcut id ) {
 final shortcut info old shortcut = shortcuts . get ( shortcut id ) ;
 if ( old shortcut == null ) {
 return ;
 }
 if ( old shortcut . is dynamic ( ) ) {
 mdynamic shortcut count -- ;
 }
 if ( old shortcut . is pinned ( ) ) {
 old shortcut . clear flags ( shortcut info . flag_ c ) ;
 }
 else {
 delete shortcut ( s , shortcut id ) ;
 }
 }
comment:
START remove a dynamic shortcut by id . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
@ can ignore return value boolean UNK key ( e entry , int hash ) {
 lock ( ) ;
 try {
 int new count = count - DecimalInteger ;
 atomic reference array < e > table = this . table ;
 int index = hash & ( table . length ( ) - DecimalInteger ) ;
 e first = table . get ( index ) ;
 for ( e e = first ;
 e != null ;
 e = e . get next ( ) ) {
 if ( e == entry ) {
 ++ mod count ;
 e new first = remove from chain ( first , e ) ;
 new count = this . count - DecimalInteger ;
 table . set ( index , new first ) ;
 this . count = new count ;
 return true ;
 }
 }
 return false ;
 }
 finally {
 unlock ( ) ;
 }
 }
comment:
START removes an entry whose key has been garbage collected . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void clear ( ) {
 int n = size ;
 object [ ] values = values ;
 for ( int i = DecimalInteger ;
 i < n ;
 i ++ ) {
 values [ i ] = null ;
 }
 size = DecimalInteger ;
 garbage = false ;
 }
comment:
START removes all key-value mappings from this sparse array . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public long get extra long ( string key ) throws exception {
 return mextra data . get long ( key ) ;
 }
comment:
START get extra long value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
@ thread safe public static sky key key ( collection < label > targets ) {
 return sky key . create ( sky functions . test_ UNK n , new test suite expansion ( immutable sorted set . copy of ( targets ) ) ) ;
 }
comment:
START create a target pattern value key . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK for the given UNK .

code:
public map < t , handler method > get handler methods ( ) {
 return collections . unmodifiable map ( this . handler methods ) ;
 }
comment:
START return a map with all handler methods and their mappings . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public map sql parameter source add value ( string param name , object value ) {
 assert . not null ( param name , String ) ;
 this . values . put ( param name , value ) ;
 if ( value instanceof sql parameter value ) {
 register sql type ( param name , ( ( sql parameter value ) value ) . get sql type ( ) ) ;
 }
 return this ;
 }
comment:
START add a parameter to this parameter source . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of all UNK .
returns the list of UNK UNK to the UNK .

code:
public void start animation ( rect bounds , int area alpha , int hint alpha , int duration , interpolator interpolator , boolean animate alpha , boolean animate bounds ) {
 if ( mdock area overlay animator != null ) {
 mdock area overlay animator . cancel ( ) ;
 }
 object animator anim ;
 array list < animator > animators = new array list < > ( ) ;
 if ( dock area overlay . get alpha ( ) != area alpha ) {
 if ( animate alpha ) {
 anim = object animator . of int ( dock area overlay , utilities . drawable_ a , dock area overlay . get alpha ( ) , area alpha ) ;
 anim . set duration ( duration ) ;
 anim . set interpolator ( interpolator ) ;
 animators . add ( anim ) ;
 }
 else {
 dock area overlay . set alpha ( area alpha ) ;
 }
 }
 if ( mhint text alpha != hint alpha ) {
 if ( animate alpha ) {
 anim = object animator . of int ( this , hint_ a , mhint text alpha , hint alpha ) ;
 anim . set duration ( DecimalInteger ) ;
 anim . set interpolator ( hint alpha > mhint text alpha ? interpolators . alpha_ n : interpolators . alpha_ t ) ;
 animators . add ( anim ) ;
 }
 else {
 mhint text alpha = hint alpha ;
 dock area overlay . invalidate self ( ) ;
 }
 }
 if ( bounds != null && ! dock area overlay . get bounds ( ) . equals ( bounds ) ) {
 if ( animate bounds ) {
 property values holder prop = property values holder . of object ( utilities . drawable_ t , utilities . UNK r , new rect ( dock area overlay . get bounds ( ) ) , bounds ) ;
 anim = object animator . of property values holder ( dock area overlay , prop ) ;
 anim . set duration ( duration ) ;
 anim . set interpolator ( interpolator ) ;
 animators . add ( anim ) ;
 }
 else {
 dock area overlay . set bounds ( bounds ) ;
 }
 }
 if ( ! animators . is empty ( ) ) {
 mdock area overlay animator = new animator set ( ) ;
 mdock area overlay animator . play together ( animators ) ;
 mdock area overlay animator . start ( ) ;
 }
 }
comment:
START creates a new bounds and alpha animation . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static void create all tables ( database db , boolean if not exists ) {
 simple entity dao . create table ( db , if not exists ) ;
 simple entity not null dao . create table ( db , if not exists ) ;
 test entity dao . create table ( db , if not exists ) ;
 relation entity dao . create table ( db , if not exists ) ;
 date entity dao . create table ( db , if not exists ) ;
 special names entity dao . create table ( db , if not exists ) ;
 UNK entity dao . create table ( db , if not exists ) ;
 to many target entity dao . create table ( db , if not exists ) ;
 to many entity dao . create table ( db , if not exists ) ;
 join many to date entity dao . create table ( db , if not exists ) ;
 tree entity dao . create table ( db , if not exists ) ;
 an active entity dao . create table ( db , if not exists ) ;
 extends UNK entity dao . create table ( db , if not exists ) ;
 string key value entity dao . create table ( db , if not exists ) ;
 UNK entity dao . create table ( db , if not exists ) ;
 custom type entity dao . create table ( db , if not exists ) ;
 indexed string entity dao . create table ( db , if not exists ) ;
 }
comment:
START creates underlying database table using daos . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .

code:
public void set transaction attribute sources ( transaction attribute source [ ] transaction attribute sources ) {
 this . transaction attribute source = new composite transaction attribute source ( transaction attribute sources ) ;
 }
comment:
START set multiple transaction attribute sources which are used to find transaction attributes . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public static image request builder new builder with resource id ( int res id ) {
 return new builder with source ( uri util . get uri for resource id ( res id ) ) ;
 }
comment:
START creates a new request builder instance for a local resource image . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
void get stored script ( get stored script request request , action listener < get stored script response > listener ) ;
comment:
START get a script from the cluster state END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK of the UNK .
returns the list of UNK that be UNK to the UNK .
returns the list of UNK UNK

code:
public byte [ ] to byte array ( ) {
 int len = ( pos > > > DecimalInteger ) + ( ( pos & UNK ) > DecimalInteger ? DecimalInteger : DecimalInteger ) ;
 byte [ ] new buf = new byte [ len ] ;
 system . arraycopy ( buf , DecimalInteger , new buf , DecimalInteger , len ) ;
 return new buf ;
 }
comment:
START return byte array containing accumulated data , sized to just fit . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set open enabled ( boolean enabled ) {
 if ( mevent queue . is empty ( ) ) {
 UNK enabled = enabled ;
 }
 else {
 throw new illegal state exception ( String ) ;
 }
 }
comment:
START set whether decoder may use open l for decoding . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK UNK

code:
@ override public entry get entry for highlight ( highlight highlight ) {
 list < bar line scatter candle bubble data > data objects = get all data ( ) ;
 if ( highlight . get data index ( ) >= data objects . size ( ) ) return null ;
 chart data data = data objects . get ( highlight . get data index ( ) ) ;
 if ( highlight . get data set index ( ) >= data . get data set count ( ) ) return null ;
 else {
 list < entry > entries = data . get data set by index ( highlight . get data set index ( ) ) . get entries for value ( highlight . get x ( ) ) ;
 for ( entry entry : entries ) if ( entry . get y ( ) == highlight . get y ( ) || float . is na n ( highlight . get y ( ) ) ) return entry ;
 return null ;
 }
 }
comment:
START get the entry for a corresponding highlight object @param highlight @return the entry that is highlighted END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static < e extends realm model > void add change listener ( e object , realm change listener < e > listener ) {
 if ( object == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( listener == null ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( object instanceof realm object proxy ) {
 realm object proxy proxy = ( realm object proxy ) object ;
 base realm realm = proxy . realm get$proxy state ( ) . get realm$realm ( ) ;
 realm . check if valid ( ) ;
 if ( ! realm . handler controller . is auto refresh enabled ( ) ) {
 throw new illegal state exception ( String ) ;
 }
 list < realm change listener > listeners = proxy . realm get$proxy state ( ) . get UNK ( ) ;
 if ( ! listeners . contains ( listener ) ) {
 listeners . add ( listener ) ;
 }
 if ( is loaded ( proxy ) ) {
 realm . handler controller . add to realm objects ( proxy ) ;
 }
 }
 else {
 throw new illegal argument exception ( String ) ;
 }
 }
comment:
START adds a change listener to a realm object . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
public double get extra double ( string key ) throws exception {
 return mextra data . get double ( key ) ;
 }
comment:
START get extra double value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set interface down ( ) {
 flags . remove ( flag_ p ) ;
 flags . add ( flag_ n ) ;
 }
comment:
START set flags to mark interface as down . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
protected abstract b [ ] create buckets array ( int size ) ;
comment:
START create an array to hold some buckets . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void add header ( string name , string value ) {
 if ( custom headers == null ) {
 custom headers = new hash map < > ( DecimalInteger ) ;
 }
 list < string > header = custom headers . get ( name ) ;
 if ( header == null ) {
 header = new array list < > ( ) ;
 custom headers . put ( name , header ) ;
 }
 header . add ( value ) ;
 }
comment:
START add a custom header . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public searchable info get searchable info ( component name component name ) {
 try {
 return service . get searchable info ( component name ) ;
 }
 catch ( remote exception ex ) {
 throw ex . rethrow from system server ( ) ;
 }
 }
comment:
START gets information about a searchable activity . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean get enable debugging ( ) {
 return menable debugging ;
 }
comment:
START gets whether to enable additional verbose debugging diagnostics . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void set uid policy ( int uid , int policy ) {
 try {
 service . set uid policy ( uid , policy ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START set policy flags for specific uid . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public builder add placeholder tree artifact exec path ( artifact tree artifact ) {
 if ( tree artifact != null ) {
 arguments . add ( new tree file artifact exec path arg ( tree artifact ) ) ;
 }
 return this ;
 }
comment:
START adds a placeholder tree artifact exec path . END
BLUE1:0.142857142857
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the UNK to the UNK .

code:
public static int hash ( int hash , float item ) {
 return hash * prime + float . float to int bits ( item ) ;
 }
comment:
START add a float value to a given hash . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void line ( vector3 p1 , color c1 , vector3 p2 , color c2 ) ;
comment:
START add a line . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public builder with value back reference ( string key , int previous result ) {
 if ( type != type_ t && type != type_ e && type != type_ t ) {
 throw new illegal argument exception ( String ) ;
 }
 if ( mvalues back references == null ) {
 mvalues back references = new content values ( ) ;
 }
 mvalues back references . put ( key , previous result ) ;
 return this ;
 }
comment:
START add a content values back reference . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static hystrix thread pool properties . setter initialize thread pool properties ( list < hystrix property > properties ) throws illegal argument exception {
 return initialize properties ( hystrix thread pool properties . setter ( ) , properties , UNK prop_ p , String ) ;
 }
comment:
START creates and sets hystrix thread pool properties . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .

code:
public static optional < source tree > from build setting ( string build setting ) {
 switch ( char matcher . is ( String ) . trim leading from ( build setting ) ) {
 case String : return optional . of ( UNK UNK r ) ;
 case String : return optional . of ( t ) ;
 case String : return optional . of ( source_ t ) ;
 case String : return optional . of ( UNK r ) ;
 default : return optional . absent ( ) ;
 }
 }
comment:
START return a source tree given a build setting that is typically used as a source tree prefix . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public r add queries ( map < string , list < string > > params ) ;
comment:
START add multiple query parameters at once @param params @return END
BLUE1:0.142857142857
--generate--
add a UNK to the UNK .
add the UNK to the UNK .
add the UNK to the given UNK .
add a UNK to the given UNK .
add the UNK to the UNK to the UNK .

code:
private boolean is session active ( ) {
 return mspell checker session != null ;
 }
comment:
START returns false if not , for instance when spell checking has been disabled in settings . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
@ skylark callable ( name = String , struct field = true , doc = String + String ) public boolean use device debug entitlements ( ) {
 return device debug entitlements && compilation mode != compilation mode . t ;
 }
comment:
START returns whether device debug entitlements should be included when signing an application . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
protected string get no such message exception description ( no such message exception ex ) {
 return ex . get message ( ) ;
 }
comment:
START return default exception message . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void set attribute ( string key , string value ) {
 try {
 set attribute ( key , value == null ? ( byte [ ] ) null : value . get bytes ( String ) ) ;
 }
 catch ( unsupported encoding exception e ) {
 throw new illegal argument exception ( String ) ;
 }
 }
comment:
START add a service attribute as a key/value pair . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
@ override void layout ( int delta , boolean animate ) {
 int children left = mspinner padding . left ;
 int children width = right - left - mspinner padding . left - mspinner padding . right ;
 if ( mdata changed ) {
 handle data changed ( ) ;
 }
 if ( mitem count == DecimalInteger ) {
 reset list ( ) ;
 return ;
 }
 if ( mnext selected position >= DecimalInteger ) {
 set selected position int ( mnext selected position ) ;
 }
 recycle all views ( ) ;
 remove all views in layout ( ) ;
 mfirst position = mselected position ;
 if ( adapter != null ) {
 view sel = make view ( mselected position , true ) ;
 int width = sel . get measured width ( ) ;
 int selected offset = children left ;
 final int layout direction = get layout direction ( ) ;
 final int absolute gravity = gravity . get absolute gravity ( gravity , layout direction ) ;
 switch ( absolute gravity & gravity . horizontal_ gravity_ k ) {
 case gravity . center_ l : selected offset = children left + ( children width / DecimalInteger ) - ( width / DecimalInteger ) ;
 break ;
 case gravity . t : selected offset = children left + children width - width ;
 break ;
 }
 sel . offset left and right ( selected offset ) ;
 }
 recycler . clear ( ) ;
 invalidate ( ) ;
 check selection changed ( ) ;
 mdata changed = false ;
 UNK sync = false ;
 set next selected position int ( mselected position ) ;
 }
comment:
START creates and positions all views for this spinner . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the given UNK .

code:
@ nullable map < path fragment , artifact > resolve source artifacts ( iterable < path fragment > exec paths , package root resolver resolver ) throws package root resolution exception , interrupted exception ;
comment:
START return null if any dependencies are missing . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public static int hash ( int hash , char item ) {
 return hash * prime + item ;
 }
comment:
START add a char value to a given hash . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static ion get instance ( context context , string name ) {
 if ( context == null ) throw new null pointer exception ( String ) ;
 ion instance = instances . get ( name ) ;
 if ( instance == null ) instances . put ( name , instance = new ion ( context , name ) ) ;
 return instance ;
 }
comment:
START get the given ion instance by name @param context @param name @return END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public mini drawer get mini drawer ( ) {
 if ( mdrawer builder . UNK drawer == null ) {
 mdrawer builder . UNK drawer = new mini drawer ( ) . with drawer ( this ) . with account header ( mdrawer builder . maccount header ) . with position based state management ( mdrawer builder . mposition based state management ) ;
 }
 return mdrawer builder . UNK drawer ;
 }
comment:
START gets the already generated mini drawer or creates a new one @return END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set bind empty multipart files ( boolean bind empty multipart files ) {
 this . bind empty multipart files = bind empty multipart files ;
 }
comment:
START set whether to bind empty multipart file parameters . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void clear latitude ( ) {
 mhas latitude = false ;
 }
comment:
START removes any latitude associated with this address . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public int get evdo ecio ( ) {
 return this . mevdo ecio ;
 }
comment:
START get the evdo ec/ io value in db NUMBER END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
return the UNK for the given UNK .
returns the UNK of the UNK

code:
private array list < content provider operation > process clear all sessions ( content resolver resolver , long calendar id ) {
 array list < content provider operation > batch = new array list < content provider operation > ( ) ;
 if ( calendar id == invalid_ calendar_ d ) {
 log . e ( g , String ) ;
 return batch ;
 }
 batch . add ( content provider operation . new delete ( calendar contract . events . content_ i ) . with selection ( calendar contract . events . calendar_ d + String + calendar contract . events . e + String + calendar contract . events . t + String + calendar contract . events . d + String , new string [ ] {
 long . to string ( calendar id ) , calendar_ clear_ UNK UNK n , long . to string ( config . conference_ start_ s ) , long . to string ( config . conference_ end_ s ) }
 ) . build ( ) ) ;
 return batch ;
 }
comment:
START removes all calendar entries associated with google i/ o NUMBER . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK to the UNK .

code:
public void set adapter ( pager adapter adapter ) {
 if ( adapter != null ) {
 adapter . unregister data set observer ( observer ) ;
 adapter . start update ( this ) ;
 for ( int i = DecimalInteger ;
 i < items . size ( ) ;
 i ++ ) {
 final item info ii = items . get ( i ) ;
 adapter . destroy item ( this , ii . position , ii . object ) ;
 }
 adapter . finish update ( this ) ;
 items . clear ( ) ;
 remove non decor views ( ) ;
 mcur item = DecimalInteger ;
 scroll to ( DecimalInteger , DecimalInteger ) ;
 }
 final pager adapter old adapter = adapter ;
 adapter = adapter ;
 UNK adapter count = DecimalInteger ;
 if ( adapter != null ) {
 if ( observer == null ) {
 observer = new pager observer ( ) ;
 }
 adapter . register data set observer ( observer ) ;
 UNK pending = false ;
 final boolean was first layout = mfirst layout ;
 mfirst layout = true ;
 UNK adapter count = adapter . get count ( ) ;
 if ( mrestored cur item >= DecimalInteger ) {
 adapter . restore state ( mrestored adapter state , mrestored class loader ) ;
 set current item internal ( mrestored cur item , false , true ) ;
 mrestored cur item = - DecimalInteger ;
 mrestored adapter state = null ;
 mrestored class loader = null ;
 }
 else if ( ! was first layout ) {
 populate ( ) ;
 }
 else {
 request layout ( ) ;
 }
 }
 if ( madapter change listener != null && old adapter != adapter ) {
 madapter change listener . on adapter changed ( old adapter , adapter ) ;
 }
 }
comment:
START set a pager adapter that will supply views for this pager as needed . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public boolean wps UNK supported ( ) {
 return ( wps config methods supported & UNK config_ n ) != DecimalInteger ;
 }
comment:
START returns true if UNK push button configuration is supported END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .

code:
public void add marker ( string tag ) {
 if ( marker log . d ) {
 mevent log . add ( tag , thread . current thread ( ) . get id ( ) ) ;
 }
 else if ( mrequest UNK time == DecimalInteger ) {
 mrequest UNK time = system clock . elapsed realtime ( ) ;
 }
 }
comment:
START adds an event to this request 's event log for debugging . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
sets the UNK for the UNK .

code:
public static bulk request bulk request ( ) {
 return new bulk request ( ) ;
 }
comment:
START creates a new bulk request . END
BLUE1:0.142857142857
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
protected configuration new configuration ( ) throws exception , template exception {
 return new configuration ( configuration . default_ UNK s ) ;
 }
comment:
START return a new configuration object . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string pretty print ( ) {
 string builder sb = new string builder ( short summary ( ) ) ;
 sb . append ( String ) ;
 if ( ! this . keep task list ) {
 sb . append ( String ) ;
 }
 else {
 sb . append ( String ) ;
 sb . append ( String ) ;
 sb . append ( String ) ;
 number format nf = number format . get number instance ( locale . t ) ;
 nf . set minimum integer digits ( DecimalInteger ) ;
 nf . set grouping used ( false ) ;
 number format pf = number format . get percent instance ( locale . t ) ;
 pf . set minimum integer digits ( DecimalInteger ) ;
 pf . set grouping used ( false ) ;
 for ( task info task : task info ( ) ) {
 sb . append ( nf . format ( task . get time ( ) . millis ( ) ) ) . append ( String ) ;
 sb . append ( pf . format ( task . get time ( ) . seconds UNK ( ) / total time ( ) . seconds UNK ( ) ) ) . append ( String ) ;
 sb . append ( task . get task name ( ) ) . append ( String ) ;
 }
 }
 return sb . to string ( ) ;
 }
comment:
START return a string with a table describing all tasks performed . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .

code:
int error code on stop ( ) {
 return mclient is using v2 ? text to speech . d : text to speech . r ;
 }
comment:
START get status code for a `` stop '' . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public list < snapshot shard failure > shard failures ( ) {
 return shard failures ;
 }
comment:
START returns shard failures @return shard failures END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public group shards iterator all active shards grouped ( string [ ] indices , boolean include empty , boolean include relocation targets ) {
 return all UNK predicate shards grouped ( indices , include empty , include relocation targets , active_ e ) ;
 }
comment:
START return group shards iterator where each active shard routing has it 's own shard iterator . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public discovery node get local node ( ) {
 return nodes . get ( local node id ) ;
 }
comment:
START get the local node @return local node END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the list of UNK UNK
returns the number of UNK UNK

code:
public int opt extra int ( string key ) {
 return mextra data . opt int ( key ) ;
 }
comment:
START get extra int value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
closeable reference < bitmap > decode UNK encoded image ( encoded image encoded image , bitmap . config bitmap config , int length ) ;
comment:
START creates a bitmap from encoded jpeg bytes . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public void set active ( boolean active ) {
 if ( active == active ) {
 return ;
 }
 try {
 binder . set active ( active ) ;
 active = active ;
 }
 catch ( remote exception e ) {
 log . wtf ( g , String , e ) ;
 }
 }
comment:
START set if this session is currently active and ready to receive commands . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public realm object schema set class name ( string class name ) {
 realm . check not in sync ( ) ;
 check empty ( class name ) ;
 string internal table name = table . table_ x + class name ;
 if ( internal table name . length ( ) > table . table_ max_ h ) {
 throw new illegal argument exception ( String + class name + String + integer . to string ( class name . length ( ) ) + String ) ;
 }
 if ( realm . shared realm . has table ( internal table name ) ) {
 throw new illegal argument exception ( String + class name ) ;
 }
 string old table name = null ;
 string pk field = null ;
 if ( table . has primary key ( ) ) {
 old table name = table . get name ( ) ;
 pk field = get primary key ( ) ;
 table . set primary key ( null ) ;
 }
 realm . shared realm . rename table ( table . get name ( ) , internal table name ) ;
 if ( pk field != null && ! pk field . is empty ( ) ) {
 try {
 table . set primary key ( pk field ) ;
 }
 catch ( exception e ) {
 realm . shared realm . rename table ( table . get name ( ) , old table name ) ;
 throw e ;
 }
 }
 return this ;
 }
comment:
START sets a new name for this realm object class . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public void test single value with offset min doc count ( ) throws exception {
 prepare index ( date ( String ) , DecimalInteger , DecimalInteger , DecimalInteger ) ;
 prepare index ( date ( String ) , DecimalInteger , DecimalInteger , DecimalInteger ) ;
 search response response = client ( ) . prepare search ( String ) . set query ( match all query ( ) ) . add aggregation ( date histogram ( String ) . field ( String ) . offset ( String ) . min doc count ( DecimalInteger ) . format ( date_ t ) . date histogram interval ( date histogram interval . y ) ) . execute ( ) . action get ( ) ;
 assert that ( response . get hits ( ) . get total hits ( ) , equal to ( DecimalInteger ) ) ;
 histogram UNK = response . get aggregations ( ) . get ( String ) ;
 list < ? extends histogram . bucket > buckets = UNK . get buckets ( ) ;
 assert that ( buckets . size ( ) , equal to ( DecimalInteger ) ) ;
 check bucket for ( buckets . get ( DecimalInteger ) , new date time ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , date time zone . c ) , DecimalInteger ) ;
 check bucket for ( buckets . get ( DecimalInteger ) , new date time ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , date time zone . c ) , DecimalInteger ) ;
 check bucket for ( buckets . get ( DecimalInteger ) , new date time ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , date time zone . c ) , DecimalInteger ) ;
 check bucket for ( buckets . get ( DecimalInteger ) , new date time ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , date time zone . c ) , DecimalInteger ) ;
 check bucket for ( buckets . get ( DecimalInteger ) , new date time ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger , date time zone . c ) , DecimalInteger ) ;
 }
comment:
START set offset so day buckets start at NUMBER . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
@ suppress warnings ( String ) protected < c > c get component ( class < c > component type ) {
 return component type . cast ( ( ( has component < c > ) get activity ( ) ) . get component ( ) ) ;
 }
comment:
START gets a component for dependency injection by its type . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , if any .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
@ suppress warnings ( String ) public create index request aliases ( map source ) {
 try {
 xcontent builder builder = xcontent factory . json builder ( ) ;
 builder . map ( source ) ;
 return aliases ( builder . bytes ( ) ) ;
 }
 catch ( exception e ) {
 throw new elasticsearch generation exception ( String + source + String , e ) ;
 }
 }
comment:
START sets the aliases that will be associated with the index when it gets created END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
private synchronized void rebuild journal ( ) throws exception {
 if ( journal writer != null ) {
 journal writer . close ( ) ;
 }
 writer writer = new buffered writer ( new output stream writer ( new file output stream ( journal file tmp ) , util . us_ i ) ) ;
 try {
 writer . write ( c ) ;
 writer . write ( String ) ;
 writer . write ( n_1 ) ;
 writer . write ( String ) ;
 writer . write ( integer . to string ( app version ) ) ;
 writer . write ( String ) ;
 writer . write ( integer . to string ( value count ) ) ;
 writer . write ( String ) ;
 writer . write ( String ) ;
 for ( entry entry : lru entries . values ( ) ) {
 if ( entry . current editor != null ) {
 writer . write ( y + String + entry . key + String ) ;
 }
 else {
 writer . write ( n + String + entry . key + entry . get lengths ( ) + String ) ;
 }
 }
 }
 finally {
 writer . close ( ) ;
 }
 if ( journal file . exists ( ) ) {
 rename to ( journal file , journal file backup , true ) ;
 }
 rename to ( journal file tmp , journal file , false ) ;
 journal file backup . delete ( ) ;
 journal writer = new buffered writer ( new output stream writer ( new file output stream ( journal file , true ) , util . us_ i ) ) ;
 }
comment:
START creates a new journal that omits redundant information . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public void set singleton ( boolean singleton ) {
 this . singleton = singleton ;
 }
comment:
START set if a singleton should be created , or a new object on each request otherwise . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean is enabled ( ) {
 try {
 return service . get state ( ) == state_ n ;
 }
 catch ( remote exception e ) {
 attempt dead service recovery ( e ) ;
 return false ;
 }
 }
comment:
START return true if this nfc adapter has any features enabled . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public static native int set parameters ( string key value pairs ) ;
comment:
START sets a group generic audio configuration parameters . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void clear children ( ) {
 actor [ ] UNK = children . begin ( ) ;
 for ( int i = DecimalInteger , n = children . size ;
 i < n ;
 i ++ ) {
 actor child = UNK [ i ] ;
 child . set stage ( null ) ;
 child . set parent ( null ) ;
 }
 children . end ( ) ;
 children . clear ( ) ;
 children changed ( ) ;
 }
comment:
START removes all actors from this group . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void add at ( int i , long value ) {
 switch ( i ) {
 case DecimalInteger : x += value ;
 return ;
 case DecimalInteger : y += value ;
 return ;
 case DecimalInteger : z += value ;
 return ;
 case DecimalInteger : w += value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START add the vector field value by index @param i @param value END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public top level artifact context get top level artifact context ( ) {
 return new top level artifact context ( get options ( execution options . class ) . test strategy . equals ( String ) , output group provider . determine output groups ( get build options ( ) . output groups ) ) ;
 }
comment:
START creates a new top level artifact context from this build request . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
public static void make empty file ( path path ) throws exception {
 file system utils . create directory and parents ( path . get parent directory ( ) ) ;
 file system utils . create empty file ( path ) ;
 }
comment:
START creates an empty file , along with all its parent directories . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public top hits aggregation builder sort ( sort builder < ? > sort ) {
 if ( sort == null ) {
 throw new illegal argument exception ( String + name + String ) ;
 }
 if ( sorts == null ) {
 sorts = new array list < > ( ) ;
 }
 sorts . add ( sort ) ;
 return this ;
 }
comment:
START adds a sort builder . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public grid point3 add ( int x , int y , int z ) {
 this . x += x ;
 this . y += y ;
 this . z += z ;
 return this ;
 }
comment:
START adds another NUMBER grid point to this point . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static string create ( context context , exception exception ) {
 string message = context . get string ( r . string . UNK ) ;
 if ( exception instanceof network connection exception ) {
 message = context . get string ( r . string . UNK ) ;
 }
 else if ( exception instanceof user not found exception ) {
 message = context . get string ( r . string . UNK ) ;
 }
 return message ;
 }
comment:
START creates a string representing an error message . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK UNK of the given UNK .

code:
public float get reaction torque ( float inv_dt ) {
 return joint . get reaction torque ( inv_dt ) ;
 }
comment:
START get the reaction torque on body2 in n m. END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public string get data connection change reason ( ) {
 return reason ;
 }
comment:
START get data connection change reason . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the number of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the list of UNK UNK

code:
public void remove all change listeners ( ) {
 check if valid ( ) ;
 if ( ! handler controller . is auto refresh enabled ( ) ) {
 throw new illegal state exception ( String ) ;
 }
 handler controller . remove all change listeners ( ) ;
 }
comment:
START removes all user-defined change listeners . END
BLUE1:0.142857142857
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given UNK .
used to the UNK of the UNK

code:
@ requires permission ( manifest . permission . h ) public boolean is enabled ( ) {
 try {
 mservice lock . read lock ( ) . lock ( ) ;
 if ( service != null ) return service . is enabled ( ) ;
 }
 catch ( remote exception e ) {
 log . e ( g , String , e ) ;
 }
 finally {
 mservice lock . read lock ( ) . unlock ( ) ;
 }
 return false ;
 }
comment:
START return true if bluetooth is currently enabled and ready for use . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public mock http servlet request builder flash attr ( string name , object value ) {
 add to map ( this . flash attributes , name , value ) ;
 return this ;
 }
comment:
START set an `` input '' flash attribute . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void add attribute ( string key , serializable value ) throws illegal state exception {
 if ( this . attributes == null ) {
 this . attributes = new hash map < > ( ) ;
 }
 if ( this . attributes . contains key ( key ) ) {
 throw new illegal state exception ( String + key + String ) ;
 }
 this . attributes . put ( key , value ) ;
 }
comment:
START add an additional invocation attribute . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
@ override public void set up ( ) throws exception {
 super . set up ( ) ;
 from = new string [ ] {
 String , String , String }
 ;
 to = new int [ ] {
 com . android . internal . r . id . text1 , com . android . internal . r . id . UNK }
 ;
 layout = com . android . internal . r . layout . UNK ;
 context = get context ( ) ;
 UNK = create test list ( DecimalInteger , DecimalInteger ) ;
 UNK = create cursor ( from , UNK ) ;
 }
comment:
START set up basic columns and cursor for the tests END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK for the given file .

code:
final void remove ( task . task key key ) {
 cache . remove ( key . id ) ;
 keys . remove ( key . id ) ;
 }
comment:
START removes a cache entry for a specific key . END
BLUE1:0.142857142857
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to UNK the UNK .
used to the UNK of the given .

code:
public abstract void add tab ( tab tab , int position , boolean set selected ) ;
comment:
START add a tab for use in tabbed navigation mode . END
BLUE1:0.142857142857
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
add the UNK UNK to the UNK .
adds the UNK to the UNK to .
adds the UNK to the UNK to the given UNK .

code:
public void remove split ( @ non null string split name ) throws exception {
 try {
 session . remove split ( split name ) ;
 }
 catch ( runtime exception e ) {
 exception utils . maybe unwrap exception ( e ) ;
 throw e ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START removes a split . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK

code:
public map < string , object > missing map ( ) {
 return missing map ;
 }
comment:
START gets the value to use when the aggregation finds a missing value in a document END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void set name ( string name ) {
 this . name = name ;
 }
comment:
START set via setter injection once instance is created . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK

code:
public void add realm ( i uri , string access token , string local path , boolean delete on UNK ) {
 if ( uri == null || access token == null ) {
 throw new illegal argument exception ( String ) ;
 }
 uri = sync util . get full server url ( uri , identity ) ;
 token token = new token ( access token , null , uri . to string ( ) , long . max_ e , token . permission . values ( ) ) ;
 add realm ( uri , new access description ( token , local path , delete on UNK ) ) ;
 }
comment:
START adds an access token to this user . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public void set menu visibility ( boolean menu visible ) {
 if ( mmenu visible != menu visible ) {
 mmenu visible = menu visible ;
 if ( mhas menu && is added ( ) && ! is hidden ( ) ) {
 mfragment manager . invalidate options menu ( ) ;
 }
 }
 }
comment:
START set a hint for whether this fragment 's menu should be visible . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public void set max torque ( float torque ) {
 assert ( torque >= DecimalFloatingPoint ) ;
 UNK torque = torque ;
 }
comment:
START set the maximum friction torque in n m. END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public long get duration ( ) {
 return mend time - mstart time ;
 }
comment:
START get the stroke 's duration @return the duration for this stroke END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public color set ( float r , float g , float b , float a ) {
 this . r = r ;
 this . g = g ;
 this . b = b ;
 this . a = a ;
 return clamp ( ) ;
 }
comment:
START sets this color 's component values . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the number of UNK UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
public void set width ( int width ) {
 this . width = width ;
 }
comment:
START sets the image width END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public static void remove periodic sync ( account account , string authority , bundle extras ) {
 validate sync extras bundle ( extras ) ;
 try {
 get content service ( ) . remove periodic sync ( account , authority , extras ) ;
 }
 catch ( remote exception e ) {
 throw new runtime exception ( String , e ) ;
 }
 }
comment:
START remove a periodic sync . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
creates a new instance of the UNK UNK .
creates a new instance of the UNK .
creates a new instance for the given UNK .
creates a new instance for the UNK .

code:
public static get repositories request get repository request ( string ... repositories ) {
 return new get repositories request ( repositories ) ;
 }
comment:
START gets snapshot repository @param repositories names of repositories @return get repository request END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of all UNK .
returns the list of UNK UNK

code:
public void remove on file descriptor event listener ( @ non null file descriptor fd ) {
 if ( fd == null ) {
 throw new illegal argument exception ( String ) ;
 }
 synchronized ( this ) {
 update on file descriptor event listener locked ( fd , DecimalInteger , null ) ;
 }
 }
comment:
START removes a file descriptor listener . END
BLUE1:0.142857142857
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
used to the UNK of the given UNK .

code:
public void add timed text source ( string path , string mime type ) throws exception , illegal argument exception , illegal state exception {
 if ( ! available mime type for external source ( mime type ) ) {
 final string msg = String + mime type ;
 throw new illegal argument exception ( msg ) ;
 }
 file file = new file ( path ) ;
 if ( file . exists ( ) ) {
 file input stream is = new file input stream ( file ) ;
 file descriptor fd = is . get d ( ) ;
 add timed text source ( fd , mime type ) ;
 is . close ( ) ;
 }
 else {
 throw new exception ( path ) ;
 }
 }
comment:
START adds an external timed text source file . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void put all ( content values other ) {
 values . put all ( other . values ) ;
 }
comment:
START adds all values from the passed in content values . END
BLUE1:0.142857142857
--generate--
used to UNK to UNK UNK .
used to UNK to UNK .
used to UNK to the UNK .
used to UNK to the UNK of the UNK .
used to UNK to UNK UNK

code:
public builder add pruning manifest ( pruning manifest manifest ) {
 pruning manifests builder . add ( manifest ) ;
 return this ;
 }
comment:
START adds a pruning manifest . END
BLUE1:0.142857142857
--generate--
add the UNK to the UNK .
add the UNK to the given UNK .
sets the UNK for the given UNK .
add the UNK to the UNK UNK .
add the UNK to the UNK to the UNK .

code:
@ override public void set null ( long column index ) {
 parent . check immutable ( ) ;
 get table ( ) . check duplicated null for primary key value ( column index , get index ( ) ) ;
 native set null ( native pointer , column index ) ;
 }
comment:
START set null to a row pointer . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
static native int native wait for ( long process , long timeout ) ;
comment:
START return values <li> NUMBER process finished </li> <li> NUMBER timeout </li> <li> NUMBER something UNK wrong </li> END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public builder add compilation prerequisites ( iterable < artifact > prerequisites ) {
 for ( artifact prerequisite : prerequisites ) {
 string basename = prerequisite . get filename ( ) ;
 preconditions . check argument ( ! link . object_ s . matches ( basename ) ) ;
 preconditions . check argument ( ! link . UNK library_ s . matches ( basename ) ) ;
 preconditions . check argument ( ! link . shared_ library_ s . matches ( basename ) ) ;
 }
 iterables . add all ( compilation prerequisites , prerequisites ) ;
 return this ;
 }
comment:
START adds multiple compilation prerequisites . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
@ non null static gradient color create from xml inner ( @ non null resources r , @ non null xml pull parser parser , @ non null attribute set attrs , @ nullable theme theme ) throws xml pull parser exception , exception {
 final string name = parser . get name ( ) ;
 if ( ! name . equals ( String ) ) {
 throw new xml pull parser exception ( parser . get position description ( ) + String + name ) ;
 }
 final gradient color gradient color = new gradient color ( ) ;
 gradient color . inflate ( r , parser , attrs , theme ) ;
 return gradient color ;
 }
comment:
START create from inside an xml document . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static int get device count ( ) {
 return UNK ( ) . load ( ) . type ( device . class ) . count ( ) ;
 }
comment:
START gets registered device count . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
test result new cached test result ( path exec root , test runner action action , test result data cached ) throws exception ;
comment:
START creates a cached test result . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK UNK

code:
public int set parameter ( int param , byte [ ] value ) throws illegal state exception {
 byte [ ] p = int to byte array ( param ) ;
 return set parameter ( p , value ) ;
 }
comment:
START set effect parameter . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
@ service thread only void set option ( int flag , int value ) {
 assert run on service thread ( ) ;
 hdmi logger . debug ( String , flag , value ) ;
 native set option ( mnative ptr , flag , value ) ;
 }
comment:
START set an option to cec hal . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public get repositories request builder set repositories ( string ... repositories ) {
 request . repositories ( repositories ) ;
 return this ;
 }
comment:
START sets list of repositories to get @param repositories list of repositories @return builder END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK

code:
@ nullable public < t > t get ( key < t > key ) {
 return settings . get ( key ) ;
 }
comment:
START get a capture request field value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static generic drawee hierarchy builder mock builder of ( generic drawee hierarchy ... drawable UNK ) {
 generic drawee hierarchy builder builder = mock ( generic drawee hierarchy builder . class , UNK UNK s ) ;
 final supplier < generic drawee hierarchy > gdh provider = supplier of ( drawable UNK ) ;
 do answer ( new answer ( ) {
 @ override public object answer ( invocation on mock invocation ) throws throwable {
 return gdh provider . get ( ) ;
 }
 }
 ) . when ( builder ) . build ( ) ;
 return builder ;
 }
comment:
START creates a mock generic drawee hierarchy builder with stubbed build . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public discovery node get master node ( ) {
 return nodes . get ( master node id ) ;
 }
comment:
START get the master node @return master node END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public term vectors request doc ( xcontent builder document builder ) {
 return this . doc ( document builder . bytes ( ) , true ) ;
 }
comment:
START sets an artificial document from which term vectors are requested for . END
BLUE1:0.142857142857
--generate--
returns the number of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .

code:
public void test indexing ( ) {
 atomic double array aa = new atomic double array ( e ) ;
 for ( int index : new int [ ] {
 - DecimalInteger , e }
 ) {
 try {
 aa . get ( index ) ;
 fail ( ) ;
 }
 catch ( index out of bounds exception success ) {
 }
 try {
 aa . set ( index , DecimalFloatingPoint ) ;
 fail ( ) ;
 }
 catch ( index out of bounds exception success ) {
 }
 try {
 aa . lazy set ( index , DecimalFloatingPoint ) ;
 fail ( ) ;
 }
 catch ( index out of bounds exception success ) {
 }
 try {
 aa . compare and set ( index , DecimalFloatingPoint , DecimalFloatingPoint ) ;
 fail ( ) ;
 }
 catch ( index out of bounds exception success ) {
 }
 try {
 aa . weak compare and set ( index , DecimalFloatingPoint , DecimalFloatingPoint ) ;
 fail ( ) ;
 }
 catch ( index out of bounds exception success ) {
 }
 try {
 aa . get and add ( index , DecimalFloatingPoint ) ;
 fail ( ) ;
 }
 catch ( index out of bounds exception success ) {
 }
 try {
 aa . add and get ( index , DecimalFloatingPoint ) ;
 fail ( ) ;
 }
 catch ( index out of bounds exception success ) {
 }
 }
 }
comment:
START get and set for out of bound indices throw index out of bounds exception END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the given UNK .
returns the list of UNK UNK

code:
public < t > void add settings update consumer ( setting < t > setting , consumer < t > consumer ) {
 ensure not frozen ( ) ;
 if ( setting == null ) {
 throw new illegal argument exception ( String ) ;
 }
 index settings . get scoped settings ( ) . add settings update consumer ( setting , consumer ) ;
 }
comment:
START adds a setting and it 's consumer for this index . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
private inet address UNK scoped ( string hostname , string address , int UNK ) throws exception {
 byte bytes [ ] = inet address . get by name ( address ) . get address ( ) ;
 return inet6 address . get by address ( hostname , bytes , UNK ) ;
 }
comment:
START creates scoped ipv6 address without any lookups . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .
returns the number of all UNK in the specified .

code:
public environment new skylark environment ( ) {
 return environment . builder ( mutability ) . set skylark ( ) . set globals ( environment . k ) . set event handler ( get event handler ( ) ) . build ( ) ;
 }
comment:
START creates an environment for skylark with a mostly empty initial environment . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public builder set manufacturer data ( int manufacturer id , byte [ ] manufacturer data ) {
 if ( manufacturer data != null && manufacturer id < DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 mmanufacturer id = manufacturer id ;
 mmanufacturer data = manufacturer data ;
 mmanufacturer data mask = null ;
 return this ;
 }
comment:
START set filter on on manufacturer data . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ non null static color state list create from xml inner ( @ non null resources r , @ non null xml pull parser parser , @ non null attribute set attrs , @ nullable theme theme ) throws xml pull parser exception , exception {
 final string name = parser . get name ( ) ;
 if ( ! name . equals ( String ) ) {
 throw new xml pull parser exception ( parser . get position description ( ) + String + name ) ;
 }
 final color state list color state list = new color state list ( ) ;
 color state list . inflate ( r , parser , attrs , theme ) ;
 return color state list ;
 }
comment:
START create from inside an xml document . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
protected void process viewport ( light properties lp , boolean camera viewport ) {
 camera camera = lp . camera ;
 shadow map region r = allocator . next result ( current light ) ;
 if ( r == null ) return ;
 texture region region = lp . region ;
 region . set texture ( frame buffers [ current UNK ] . get color buffer texture ( ) ) ;
 gdx . gl . gl viewport ( r . x , r . y , r . width , r . height ) ;
 gdx . gl . gl UNK ( r . x + DecimalInteger , r . y + DecimalInteger , r . width - DecimalInteger , r . height - DecimalInteger ) ;
 region . set region ( r . x , r . y , r . width , r . height ) ;
 if ( camera viewport ) {
 camera . viewport height = r . height ;
 camera . viewport width = r . width ;
 camera . update ( ) ;
 }
 }
comment:
START set viewport according to allocator . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
private final void free node ( dynamic tree node node ) {
 assert ( node != null ) ;
 assert ( DecimalInteger < m_node count ) ;
 node . parent = m_free list != null_ e ? UNK [ m_free list ] : null ;
 node . height = - DecimalInteger ;
 m_free list = node . id ;
 m_node count -- ;
 }
comment:
START returns a node to the pool END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public synchronized long time ( ) {
 if ( start nano time == DecimalInteger ) {
 return DecimalInteger ;
 }
 if ( time >= DecimalInteger ) {
 return time ;
 }
 return math . max ( DecimalInteger , time value . UNK to sec ( system . nano time ( ) - start nano time ) ) ;
 }
comment:
START returns elapsed time in millis , or NUMBER if timer was not started END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private void set af regions ( metering rectangle [ ] af regions ) {
 if ( af regions == null ) {
 set default af regions ( ) ;
 return ;
 }
 if ( af regions . length == DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 UNK regions = af regions ;
 }
comment:
START set af regions , fall back to default region if af regions is null . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK UNK .
sets the UNK of the UNK to the UNK .

code:
public float get ( int i ) {
 switch ( i ) {
 case DecimalInteger : return x ;
 case DecimalInteger : return y ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START get the vector field value by index @param i @return END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public builder set device name ( string device name ) {
 mdevice name = device name ;
 return this ;
 }
comment:
START set filter on device name . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
@ override public int get dbm ( ) {
 int bm ;
 int level = msignal strength ;
 int asu = ( level == DecimalInteger ? integer . max_ e : level ) ;
 if ( asu != integer . max_ e ) {
 bm = - DecimalInteger + ( DecimalInteger * asu ) ;
 }
 else {
 bm = integer . max_ e ;
 }
 if ( g ) log ( String + bm ) ;
 return bm ;
 }
comment:
START get the signal strength as dbm END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
private void set web view proxy ( ) {
 loaded apk loaded apk = get application ( ) . UNK apk ;
 try {
 field receivers field = loaded apk . class . get declared field ( String ) ;
 receivers field . set accessible ( true ) ;
 array map receivers = ( array map ) receivers field . get ( loaded apk ) ;
 for ( object receiver map : receivers . values ( ) ) {
 for ( object rec : ( ( array map ) receiver map ) . key set ( ) ) {
 class clazz = rec . get class ( ) ;
 if ( clazz . get name ( ) . contains ( String ) ) {
 method on receive method = clazz . get declared method ( String , context . class , intent . class ) ;
 intent intent = new intent ( proxy . UNK change_ n ) ;
 on receive method . invoke ( rec , get application context ( ) , intent ) ;
 log . v ( g , String ) ;
 }
 }
 }
 }
 catch ( exception e ) {
 log . e ( g , String + e ) ;
 }
 }
comment:
START find web view 's proxy broadcast receiver and prompt it to read proxy system properties . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public drawer builder with drawer width res ( @ dimen res int drawer width res ) {
 if ( activity == null ) {
 throw new runtime exception ( String ) ;
 }
 this . mdrawer width = activity . get resources ( ) . get dimension pixel size ( drawer width res ) ;
 return this ;
 }
comment:
START set the drawer builder width with a dimension resource @param drawer width res @return END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .
sets the UNK for the given UNK .

code:
private static boolean can view receive pointer events ( @ non null view child ) {
 return ( child . mview flags & visibility_ k ) == e || child . get animation ( ) != null ;
 }
comment:
START returns true if a child view can receive pointer events . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether the UNK is UNK to .
sets whether the UNK is UNK in the UNK .

code:
private void delete widgets locked ( provider provider , int user id ) {
 final int n = provider . widgets . size ( ) ;
 for ( int i = n - DecimalInteger ;
 i >= DecimalInteger ;
 i -- ) {
 widget widget = provider . widgets . get ( i ) ;
 if ( user id == user handle . user_ l || user id == widget . host . get user id ( ) ) {
 provider . widgets . remove ( i ) ;
 update app widget instance locked ( widget , null , false ) ;
 widget . host . widgets . remove ( widget ) ;
 remove widget locked ( widget ) ;
 widget . provider = null ;
 prune host locked ( widget . host ) ;
 widget . host = null ;
 }
 }
 }
comment:
START remove widgets for provider that are hosted in user id . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public float get gain factor ( final int color channel , final int column , final int row ) {
 if ( color channel < DecimalInteger || color channel > t ) {
 throw new illegal argument exception ( String ) ;
 }
 else if ( column < DecimalInteger || column >= columns ) {
 throw new illegal argument exception ( String ) ;
 }
 else if ( row < DecimalInteger || row >= rows ) {
 throw new illegal argument exception ( String ) ;
 }
 return elements [ color channel + ( row * columns + column ) * t ] ;
 }
comment:
START get a single color channel gain factor from this lens shading map by its row and column . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public static void remove callbacks ( runnable r ) {
 throw if not called on main thread ( ) ;
 UNK UNK . remove ( r ) ;
 handler . remove callbacks ( r ) ;
 }
comment:
START removes a previously scheduled runnable . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
creates a new instance of the UNK UNK .
creates a new instance of the UNK .
creates a new instance for the given UNK .
creates a new instance for the UNK .

code:
@ override public boolean is empty ( ) {
 return head == tail ;
 }
comment:
START returns true if this queue contains no elements . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public static settings add human readable settings ( settings settings ) {
 settings . builder builder = settings . builder ( ) . put ( settings ) ;
 version version = settings . get as version ( setting_ version_ d , null ) ;
 if ( version != null ) {
 builder . put ( setting_ version_ UNK g , version . to string ( ) ) ;
 }
 version version UNK = settings . get as version ( setting_ version_ d , null ) ;
 if ( version UNK != null ) {
 builder . put ( setting_ version_ UNK g , version UNK . to string ( ) ) ;
 }
 long creation date = settings . get as long ( setting_ UNK e , null ) ;
 if ( creation date != null ) {
 date time creation date time = new date time ( creation date , date time zone . c ) ;
 builder . put ( setting_ UNK date_ g , creation date time . to string ( ) ) ;
 }
 return builder . build ( ) ;
 }
comment:
START adds human readable version and creation date settings . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
@ nullable public session info get session info ( int session id ) {
 try {
 return installer . get session info ( session id ) ;
 }
 catch ( remote exception e ) {
 throw e . rethrow from system server ( ) ;
 }
 }
comment:
START return details for a specific session . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected int get current selection ( ) {
 if ( mcurrent profile != null && profiles != null ) {
 int i = DecimalInteger ;
 for ( profile profile : profiles ) {
 if ( profile == mcurrent profile ) {
 return i ;
 }
 i ++ ;
 }
 }
 return - DecimalInteger ;
 }
comment:
START get the current selection @return END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public static bitmap create video thumbnail ( string file path , int kind ) {
 bitmap bitmap = null ;
 media metadata retriever retriever = new media metadata retriever ( ) ;
 try {
 retriever . set data source ( file path ) ;
 bitmap = retriever . get frame at time ( - DecimalInteger ) ;
 }
 catch ( illegal argument exception ex ) {
 }
 catch ( runtime exception ex ) {
 }
 finally {
 try {
 retriever . release ( ) ;
 }
 catch ( runtime exception ex ) {
 }
 }
 if ( bitmap == null ) return null ;
 if ( kind == images . UNK . UNK d ) {
 int width = bitmap . get width ( ) ;
 int height = bitmap . get height ( ) ;
 int max = math . max ( width , height ) ;
 if ( max > DecimalInteger ) {
 float scale = DecimalFloatingPoint / max ;
 int w = math . round ( scale * width ) ;
 int h = math . round ( scale * height ) ;
 bitmap = bitmap . create scaled bitmap ( bitmap , w , h , true ) ;
 }
 }
 else if ( kind == images . UNK . UNK d ) {
 bitmap = extract thumbnail ( bitmap , target_ size_ UNK l , target_ size_ UNK l , UNK UNK t ) ;
 }
 return bitmap ;
 }
comment:
START create a video thumbnail for a video . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
protected void set savepoint ( object savepoint ) {
 this . savepoint = savepoint ;
 }
comment:
START set a savepoint for this transaction . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public void close all ( binder token , string who , string what ) {
 close all UNK view ( token , null , who , what ) ;
 }
comment:
START remove all roots with specified token . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public < e > e get value ( string key , class < e > type ) throws eval exception {
 object obj = values . get ( key ) ;
 if ( obj == null ) {
 return null ;
 }
 skylark type . check type ( obj , type , key ) ;
 return type . cast ( obj ) ;
 }
comment:
START returns a value and try to cast it into specified type END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .
returns the list of UNK that be UNK in the .

code:
@ thread safe public static void ensure symbolic link ( path link , path fragment target ) throws exception {
 try {
 if ( link . read symbolic link ( ) . equals ( target ) ) {
 return ;
 }
 }
 catch ( exception e ) {
 }
 if ( link . is symbolic link ( ) ) {
 link . delete ( ) ;
 }
 else {
 create directory and parents ( link . get parent directory ( ) ) ;
 }
 try {
 link . create symbolic link ( target ) ;
 }
 catch ( exception e ) {
 if ( ! link . is symbolic link ( ) || ! link . resolve symbolic links ( ) . equals ( link . get relative ( target ) ) ) {
 throw e ;
 }
 }
 }
comment:
START creates or updates a symbolic link from ` link ' to ` target ' . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static boolean check for shared libraries ( iterable < transitive info collection > deps ) throws eval exception {
 for ( transitive info collection dep : deps ) {
 skylark providers providers = dep . get provider ( skylark providers . class ) ;
 skylark class object provider = null ;
 if ( providers != null ) {
 provider = providers . get value ( UNK UNK UNK e , skylark class object . class ) ;
 }
 if ( provider != null ) {
 boolean is using shared library = provider . get value ( is_ UNK shared_ y , boolean . class ) ;
 if ( boolean . e . equals ( is using shared library ) ) {
 return true ;
 }
 }
 else if ( file type . contains ( dep . get provider ( file provider . class ) . get files to build ( ) , cpp file types . shared_ y ) ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START returns true if this target has an . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
set whether to UNK UNK UNK .
sets the UNK of the given UNK .
set whether to UNK UNK UNK UNK .
set whether to be UNK for the UNK .

code:
public static UNK cors config builder for any origin ( ) {
 return new UNK cors config builder ( ) ;
 }
comment:
START creates a builder instance with it 's origin set to ' ' . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of UNK UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .

code:
public boolean get auto play animations ( ) {
 return mauto play animations ;
 }
comment:
START gets whether to auto play animations . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public string [ ] get selection args ( ) {
 return mselection args . to array ( new string [ mselection args . size ( ) ] ) ;
 }
comment:
START return selection arguments for current internal state . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public iaccessibility service connection get connection ( int connection id ) {
 synchronized ( sconnection cache ) {
 return sconnection cache . get ( connection id ) ;
 }
 }
comment:
START gets a cached accessibility service connection . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public static image decode options builder new builder ( ) {
 return new image decode options builder ( ) ;
 }
comment:
START creates a new builder . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of UNK UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .

code:
@ thread safe static sky key key ( repository name repository , rooted path rooted path , immutable set < path fragment > excluded paths ) {
 return key ( new recursive pkg key ( repository , rooted path , excluded paths ) ) ;
 }
comment:
START create a collect packages under directory request . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean get extra boolean ( string key ) throws exception {
 return mextra data . get boolean ( key ) ;
 }
comment:
START get extra boolean value . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the UNK .
returns the UNK of the given UNK .

code:
public boolean use test only flags ( ) {
 return this . use test only flags ;
 }
comment:
START returns true if this link action uses test only flags . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public display get display ( int display id ) {
 synchronized ( lock ) {
 return get or create display locked ( display id , false ) ;
 }
 }
comment:
START gets information about a logical display . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set values ( long a , long b , long c ) {
 this . x = a ;
 this . y = b ;
 this . z = c ;
 }
comment:
START set the vector field value by long @param a @param b @param c END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
private drawable get drawable from resource value ( string drawable id ) {
 if ( drawable id == null || drawable id . length ( ) == DecimalInteger || String . equals ( drawable id ) ) {
 return null ;
 }
 try {
 int resource id = integer . parse int ( drawable id ) ;
 string drawable uri = content resolver . scheme_ android_ e + String + mprovider context . get package name ( ) + String + resource id ;
 drawable drawable = check icon cache ( drawable uri ) ;
 if ( drawable != null ) {
 return drawable ;
 }
 drawable = mprovider context . get drawable ( resource id ) ;
 store in icon cache ( drawable uri , drawable ) ;
 return drawable ;
 }
 catch ( number format exception UNK ) {
 drawable drawable = check icon cache ( drawable id ) ;
 if ( drawable != null ) {
 return drawable ;
 }
 uri uri = uri . parse ( drawable id ) ;
 drawable = get drawable ( uri ) ;
 store in icon cache ( drawable id , drawable ) ;
 return drawable ;
 }
 catch ( resources . not found exception UNK ) {
 log . w ( log_ g , String + drawable id ) ;
 return null ;
 }
 }
comment:
START gets a drawable given a value provided by a suggestion provider . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public cpp link action builder add linkopt ( string linkopt ) {
 this . linkopts . add ( linkopt ) ;
 return this ;
 }
comment:
START adds an additional linker option . END
BLUE1:0.142857142857
--generate--
add the UNK to the UNK .
add the UNK to the given UNK .
sets the UNK for the given UNK .
add the UNK to the UNK UNK .
add the UNK to the UNK to the UNK .

code:
private void set from notifier bundle ( bundle m ) {
 mvoice reg state = m . get int ( String ) ;
 mdata reg state = m . get int ( String ) ;
 mvoice roaming type = m . get int ( String ) ;
 mdata roaming type = m . get int ( String ) ;
 mvoice operator alpha long = m . get string ( String ) ;
 mvoice operator alpha short = m . get string ( String ) ;
 mvoice operator numeric = m . get string ( String ) ;
 mdata operator alpha long = m . get string ( String ) ;
 mdata operator alpha short = m . get string ( String ) ;
 mdata operator numeric = m . get string ( String ) ;
 mis UNK network selection = m . get boolean ( String ) ;
 UNK voice radio UNK = m . get int ( String ) ;
 UNK data radio UNK = m . get int ( String ) ;
 UNK indicator = m . get boolean ( String ) ;
 mnetwork id = m . get int ( String ) ;
 msystem id = m . get int ( String ) ;
 mcdma roaming indicator = m . get int ( String ) ;
 mcdma default roaming indicator = m . get int ( String ) ;
 mis emergency only = m . get boolean ( String ) ;
 mis data roaming from registration = m . get boolean ( String ) ;
 }
comment:
START set service state based on intent notifier map . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public int get gsm level ( ) {
 int level ;
 int asu = get gsm signal strength ( ) ;
 if ( asu <= DecimalInteger || asu == DecimalInteger ) level = signal_ strength_ none_ or_ n ;
 else if ( asu >= DecimalInteger ) level = signal_ strength_ t ;
 else if ( asu >= DecimalInteger ) level = signal_ strength_ d ;
 else if ( asu >= DecimalInteger ) level = signal_ strength_ e ;
 else level = signal_ strength_ r ;
 if ( g ) log ( String + level ) ;
 return level ;
 }
comment:
START get gsm as level NUMBER . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public resolve info get activity ( int index ) {
 synchronized ( minstance lock ) {
 return activites . get ( index ) . resolve info ;
 }
 }
comment:
START gets an activity at a given index . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
protected simple type converter get simple type converter ( ) {
 if ( this . type converter == null ) {
 this . type converter = new simple type converter ( ) ;
 if ( this . conversion service != null ) {
 this . type converter . set conversion service ( this . conversion service ) ;
 }
 }
 return this . type converter ;
 }
comment:
START return this binder 's underlying simple type converter . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
public void add fail to send no connect rule ( transport service transport service , final set < string > blocked actions ) {
 for ( transport address transport address : extract transport addresses ( transport service ) ) {
 add fail to send no connect rule ( transport address , blocked actions ) ;
 }
 }
comment:
START adds a rule that will cause matching operations to throw connect transport exceptions END
BLUE1:0.142857142857
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public view get view ( ) {
 return maccount header builder . maccount header container ;
 }
comment:
START get the root view for the header @return END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
private boolean has next inet socket address ( ) {
 return next inet socket address index < inet socket addresses . size ( ) ;
 }
comment:
START returns true if there 's another socket address to try . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets whether the UNK is UNK .
sets the UNK of the given UNK .
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .

code:
protected void add heap metrics ( collection < metric < ? > > result ) {
 memory usage memory usage = management factory . get memory bean ( ) . get heap memory usage ( ) ;
 result . add ( new memory metric ( String , memory usage . get committed ( ) ) ) ;
 result . add ( new memory metric ( String , memory usage . get init ( ) ) ) ;
 result . add ( new memory metric ( String , memory usage . get used ( ) ) ) ;
 result . add ( new memory metric ( String , memory usage . get max ( ) ) ) ;
 }
comment:
START add jvm heap metrics . END
BLUE1:0.142857142857
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .
adds the UNK to the UNK to the given UNK .

code:
public char sequence get error message ( ) {
 return UNK message ;
 }
comment:
START get a user readable error message . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK in the UNK .
returns the list of UNK UNK
returns the list of UNK in the UNK

code:
public void clear actions ( ) {
 for ( int i = actions . size - DecimalInteger ;
 i >= DecimalInteger ;
 i -- ) actions . get ( i ) . set actor ( null ) ;
 actions . clear ( ) ;
 }
comment:
START removes all actions on this actor . END
BLUE1:0.142857142857
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given .
used to the UNK of UNK

code:
@ deprecated public update request add script param ( string name , object value ) {
 script script = script ( ) ;
 if ( script == null ) {
 hash map < string , object > script params = new hash map < > ( ) ;
 script params . put ( name , value ) ;
 update or create script ( null , null , null , script params ) ;
 }
 else {
 map < string , object > script params = script . get params ( ) ;
 if ( script params == null ) {
 script params = new hash map < > ( ) ;
 script params . put ( name , value ) ;
 update or create script ( null , null , null , script params ) ;
 }
 else {
 script params . put ( name , value ) ;
 }
 }
 return this ;
 }
comment:
START add a script parameter . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void set java script escape ( boolean java script escape ) throws jsp exception {
 this . java script escape = java script escape ;
 }
comment:
START set java script escaping for this tag , as boolean value . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
private void add usb interface ( int id , string name , int alt setting , int class , int sub class , int protocol ) {
 if ( mnew interface != null ) {
 mnew interface . set endpoints ( mnew endpoints . to array ( new usb endpoint [ mnew endpoints . size ( ) ] ) ) ;
 mnew endpoints . clear ( ) ;
 }
 mnew interface = new usb interface ( id , alt setting , name , class , sub class , protocol ) ;
 mnew interfaces . add ( mnew interface ) ;
 }
comment:
START returns true if successful , false in case of error . END
BLUE1:0.142857142857
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public void put ( float value ) {
 latest = value ;
 total += value ;
 count ++ ;
 average = total / count ;
 if ( mean != null ) {
 mean . add value ( value ) ;
 this . value = mean . get mean ( ) ;
 }
 else this . value = latest ;
 if ( mean == null || mean . has enough data ( ) ) {
 if ( this . value < min ) min = this . value ;
 if ( this . value > max ) max = this . value ;
 }
 }
comment:
START add a value and update all fields . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public static final tv content rating system info create tv content rating system info ( int xml resource id , application info application info ) {
 uri uri = new uri . builder ( ) . scheme ( content resolver . scheme_ android_ e ) . authority ( application info . package name ) . append path ( string . value of ( xml resource id ) ) . build ( ) ;
 return new tv content rating system info ( uri , application info ) ;
 }
comment:
START creates a tv content rating system info object with given resource id and receiver info . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean has ipv4 default route ( ) {
 for ( route info r : routes ) {
 if ( r . is ipv4 default ( ) ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START returns true if this link has an ipv4 default route . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK UNK .
set whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK the UNK UNK .

code:
private cluster block random global block ( ) {
 switch ( random int ( DecimalInteger ) ) {
 case DecimalInteger : return discovery settings . no_ master_ block_ l ;
 case DecimalInteger : return discovery settings . no_ master_ block_ s ;
 default : return gateway service . state_ not_ UNK k ;
 }
 }
comment:
START returns a random global block END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
private static void set serial number ( file file , int serial number ) throws exception {
 try {
 final byte [ ] buf = integer . to string ( serial number ) . get bytes ( standard charsets . f_8 ) ;
 os . UNK ( file . get absolute path ( ) , UNK l , buf , os constants . UNK e ) ;
 }
 catch ( errno exception e ) {
 throw e . rethrow as exception ( ) ;
 }
 }
comment:
START set serial number stored in user directory inode . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
private void make directories ( path path ) throws exception {
 if ( ! path . is root directory ( ) ) {
 path parent = path . get parent directory ( ) ;
 if ( ! parent . exists ( ) ) {
 make directories ( path . get parent directory ( ) ) ;
 parent . create directory ( ) ;
 }
 }
 }
comment:
START create parent directories for the given path END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given file .

code:
public static settings observer build ( @ non null context context , @ non null handler handler , @ non null string setting name ) {
 uri setting uri = settings . secure . get uri for ( setting name ) ;
 return new settings observer ( context , handler , setting uri , setting name ) ;
 }
comment:
START create a settings observer instance . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public string [ ] get secure container list ( ) throws remote exception {
 parcel _data = parcel . obtain ( ) ;
 parcel _reply = parcel . obtain ( ) ;
 string [ ] _result ;
 try {
 _data . write interface token ( r ) ;
 remote . transact ( stub . UNK secure container list , _data , _reply , DecimalInteger ) ;
 _reply . read exception ( ) ;
 _result = _reply . create string array ( ) ;
 }
 finally {
 _reply . recycle ( ) ;
 _data . recycle ( ) ;
 }
 return _result ;
 }
comment:
START gets an array of currently known secure container ids END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public void set logo ( @ drawable res int res id ) {
 set logo ( get context ( ) . get drawable ( res id ) ) ;
 }
comment:
START set a logo drawable from a resource id . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public static long get long parameter ( servlet request request , string name , long default val ) {
 if ( request . get parameter ( name ) == null ) {
 return default val ;
 }
 try {
 return get required long parameter ( request , name ) ;
 }
 catch ( servlet request binding exception ex ) {
 return default val ;
 }
 }
comment:
START get a long parameter , with a fallback value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public rect get active array size checked ( ) {
 key < rect > key = camera characteristics . sensor_ info_ active_ array_ e ;
 rect active array = get value from key non null ( key ) ;
 if ( active array == null ) {
 return new rect ( DecimalInteger , DecimalInteger , DecimalInteger , DecimalInteger ) ;
 }
 size pixel array size = get pixel array size checked ( ) ;
 check true for key ( key , String , active array . left >= DecimalInteger && active array . top >= DecimalInteger ) ;
 check true for key ( key , String , active array . width ( ) <= pixel array size . get width ( ) && active array . height ( ) <= pixel array size . get height ( ) ) ;
 return active array ;
 }
comment:
START get and check active array size . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the number of all UNK in the given .

code:
public void set status mapping ( map < string , http status > status mapping ) {
 assert . not null ( status mapping , String ) ;
 this . status mapping = new hash map < string , http status > ( status mapping ) ;
 }
comment:
START set specific status mappings . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
set the UNK for the given view .
sets the UNK of the given UNK .

code:
public void clear longitude ( ) {
 mhas longitude = false ;
 }
comment:
START removes any longitude associated with this address . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK

code:
public static void add collection converters ( converter registry converter registry ) {
 conversion service conversion service = ( conversion service ) converter registry ;
 converter registry . add converter ( new array to collection converter ( conversion service ) ) ;
 converter registry . add converter ( new collection to array converter ( conversion service ) ) ;
 converter registry . add converter ( new array to array converter ( conversion service ) ) ;
 converter registry . add converter ( new collection to collection converter ( conversion service ) ) ;
 converter registry . add converter ( new map to map converter ( conversion service ) ) ;
 converter registry . add converter ( new array to string converter ( conversion service ) ) ;
 converter registry . add converter ( new string to array converter ( conversion service ) ) ;
 converter registry . add converter ( new array to object converter ( conversion service ) ) ;
 converter registry . add converter ( new object to array converter ( conversion service ) ) ;
 converter registry . add converter ( new collection to string converter ( conversion service ) ) ;
 converter registry . add converter ( new string to collection converter ( conversion service ) ) ;
 converter registry . add converter ( new collection to object converter ( conversion service ) ) ;
 converter registry . add converter ( new object to collection converter ( conversion service ) ) ;
 converter registry . add converter ( new stream converter ( conversion service ) ) ;
 }
comment:
START add collection converters . END
BLUE1:0.142857142857
--generate--
remove the UNK from the UNK .
remove the UNK from the given UNK .
sets the UNK for the given UNK .
remove the UNK from the specified UNK .
sets the UNK of the given UNK .

code:
public static size get max depth size ( string camera id , camera manager camera manager ) throws camera access exception {
 list < size > sizes = get sorted sizes for format ( camera id , camera manager , image format . UNK , null ) ;
 return sizes . get ( DecimalInteger ) ;
 }
comment:
START get max depth size for a camera device . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public char matcher UNK ( ) {
 return new UNK ( this ) ;
 }
comment:
START returns a matcher that matches any character not matched by this matcher . END
BLUE1:0.142857142857
--generate--
return the number of UNK UNK .
return the number of UNK .
return the number of bytes in the request .
return the number of bytes that be UNK for the UNK .
return the number of bytes that be UNK for the current .

code:
@ android . view . remotable view method public void set displayed child ( int which child ) {
 set displayed child ( which child , true ) ;
 }
comment:
START sets which child view will be displayed . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public void add at ( int i , short value ) {
 switch ( i ) {
 case DecimalInteger : x += value ;
 return ;
 case DecimalInteger : y += value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START add the vector field value by index @param i @param value END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK for the given file .

code:
public static typeface create ( string family name , int style ) {
 if ( UNK font map != null ) {
 return create ( UNK font map . get ( family name ) , style ) ;
 }
 return null ;
 }
comment:
START create a typeface object given a family name , and option style information . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public static entity manager create container managed entity manager ( entity manager factory emf , map < ? , ? > properties ) {
 return create container managed entity manager ( emf , properties , true ) ;
 }
comment:
START create a container-managed extended entity manager proxy . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
creates a new instance of the UNK UNK .
creates a new instance of the UNK .
creates a new instance for the given UNK .
creates a new instance for the UNK .

code:
public void set at ( int i , long value ) {
 switch ( i ) {
 case DecimalInteger : x = value ;
 return ;
 case DecimalInteger : y = value ;
 return ;
 case DecimalInteger : z = value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START set the vector field value by index @param i @param value END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK of the given UNK .

code:
public abstract suggestions info on get suggestions ( text info text info , int suggestions limit ) ;
comment:
START get suggestions for specified text in text info . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
void set ( final long long val ) {
 this . type = class writer . g ;
 this . long val = long val ;
 this . hash code = 0x7 f & ( type + ( int ) long val ) ;
 }
comment:
START sets this item to a long item . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public static state from value ( byte value ) {
 switch ( value ) {
 case DecimalInteger : return t ;
 case DecimalInteger : return d ;
 case DecimalInteger : return s ;
 case DecimalInteger : return e ;
 default : throw new illegal argument exception ( String + value + String ) ;
 }
 }
comment:
START returns state corresponding to state code @param value stat code @return state END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK

code:
public < t > binding impl < t > get binding or throw ( key < t > key , errors errors ) throws errors exception {
 binding impl < t > binding = state . get explicit binding ( key ) ;
 if ( binding != null ) {
 return binding ;
 }
 return get just in time binding ( key , errors ) ;
 }
comment:
START gets a binding implementation . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public void set toolchain version ( int toolchain version ) {
 UNK version = toolchain version ;
 }
comment:
START set the tool chain version number @param toolchain version tool chain version number END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public string dump internal state ( boolean include data ) {
 final string builder sb = new string builder ( ) ;
 sb . append ( String ) ;
 sb . append ( String ) ;
 sb . append ( sequence ) ;
 sb . append ( String ) ;
 sb . append ( mnext index ) ;
 sb . append ( String ) ;
 final int n = longs . size ( ) ;
 sb . append ( n ) ;
 sb . append ( String ) ;
 if ( include data ) {
 for ( int i = DecimalInteger ;
 i < n ;
 i ++ ) {
 final long [ ] array = longs . get ( i ) ;
 for ( int j = DecimalInteger ;
 j < array . length ;
 j ++ ) {
 if ( i == n - DecimalInteger && j == mnext index ) {
 break ;
 }
 sb . append ( string . format ( String , i , j , array [ j ] , array [ j ] ) ) ;
 }
 }
 }
 sb . append ( String ) ;
 return sb . to string ( ) ;
 }
comment:
START return a string for debugging . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public void clear children ( ) {
 super . clear children ( ) ;
 set over node ( null ) ;
 root nodes . clear ( ) ;
 selection . clear ( ) ;
 }
comment:
START removes all tree nodes . END
BLUE1:0.142857142857
--generate--
used to UNK to UNK UNK .
used to UNK to UNK .
used to UNK to the given UNK .
used to UNK to UNK UNK to .
used to UNK to UNK UNK

code:
public void add actor before ( actor actor before , actor actor ) {
 if ( actor . parent != null ) actor . parent . remove actor ( actor , false ) ;
 int index = children . index of ( actor before , true ) ;
 children . insert ( index , actor ) ;
 actor . set parent ( this ) ;
 actor . set stage ( get stage ( ) ) ;
 children changed ( ) ;
 }
comment:
START adds an actor as a child of this group , immediately before another child actor . END
BLUE1:0.142857142857
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public void set values ( long a , long b , long c , long d ) {
 this . x = a ;
 this . y = b ;
 this . z = c ;
 this . w = d ;
 }
comment:
START set the vector field value by long @param a @param b @param c @param d END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
public void set app binary ( byte [ ] app binary ) {
 mapp binary = app binary ;
 }
comment:
START set output events returned by the nano app @param app binary generated events END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
protected long get index buffer rambytes used ( index shard shard ) {
 return shard . get index buffer rambytes used ( ) ;
 }
comment:
START returns how much heap this shard is using for its indexing buffer END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean is touchable ( ) {
 return touchable == touchable . enabled ;
 }
comment:
START returns true if input events are processed by this actor . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
public void set function ( boolean function ) {
 this . function = function ;
 }
comment:
START set whether this call is for a function . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public final void stop UNK ( ) {
 final UNK thread t = get thread ( ) ;
 if ( t != null ) {
 t . remove observer ( this ) ;
 }
 }
comment:
START repeated calls have no effect . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given view .
sets the UNK for the given file .

code:
public animation props set interpolator ( @ prop type int property type , interpolator interpolator ) {
 if ( mprop interpolators == null ) {
 mprop interpolators = new sparse array < > ( ) ;
 }
 mprop interpolators . append ( property type , interpolator ) ;
 return this ;
 }
comment:
START sets an interpolator for a specific property . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of all UNK .

code:
public void add fail to send no connect rule ( transport service transport service , final string ... blocked actions ) {
 add fail to send no connect rule ( transport service , new hash set < > ( arrays . as list ( blocked actions ) ) ) ;
 }
comment:
START adds a rule that will cause matching operations to throw connect transport exceptions END
BLUE1:0.142857142857
--generate--
add the UNK to the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public void set text ( char sequence text ) {
 if ( text == null || ! text . equals ( text ) ) {
 text = text ;
 mtext to draw = null ;
 clear texture ( ) ;
 UNK ( ) ;
 }
 }
comment:
START set the title to display @param text END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public < e extends realm model > void create all from json ( class < e > clazz , array json ) {
 if ( clazz == null || json == null ) {
 return ;
 }
 check if valid ( ) ;
 for ( int i = DecimalInteger ;
 i < json . length ( ) ;
 i ++ ) {
 try {
 configuration . get schema mediator ( ) . create or update using json object ( clazz , this , json . get object ( i ) , false ) ;
 }
 catch ( exception e ) {
 throw new realm exception ( String , e ) ;
 }
 }
 }
comment:
START creates a realm object for each object in a json array . END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public void set at ( int i , byte value ) {
 switch ( i ) {
 case DecimalInteger : x = value ;
 return ;
 case DecimalInteger : y = value ;
 return ;
 default : throw new index out of bounds exception ( String ) ;
 }
 }
comment:
START set the vector field value by index @param i @param value END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
set the UNK of the given UNK .

code:
public void recycle ( ) {
 clear ( ) ;
 pool . release ( this ) ;
 }
comment:
START return an instance back to be reused . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .
sets the UNK of the UNK to the UNK .

code:
public void add connection ( int connection id , iaccessibility service connection connection ) {
 synchronized ( sconnection cache ) {
 sconnection cache . put ( connection id , connection ) ;
 }
 }
comment:
START adds a cached accessibility service connection . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
add the UNK to the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
add the UNK to the given UNK .

code:
public object get extra object ( string key ) throws exception {
 return mextra data . get object ( key ) ;
 }
comment:
START get extra jsonobject value . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
void add return value handlers ( list < handler method return value handler > return value handlers ) ;
comment:
START add handlers to support custom controller method return value types . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of the UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK to the given UNK .

code:
public list < permission state > get runtime permission states ( int user id ) {
 enforce valid user id ( user id ) ;
 return get permission states internal ( user id ) ;
 }
comment:
START gets all runtime permission states . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the .

code:
public shared preferences get shared preferences ( ) {
 if ( mshared preferences == null ) {
 final context storage context ;
 switch ( storage ) {
 case storage_ device_ d : storage context = context . create device protected storage context ( ) ;
 break ;
 case storage_ UNK d : storage context = context . create UNK protected storage context ( ) ;
 break ;
 default : storage context = context ;
 break ;
 }
 mshared preferences = storage context . get shared preferences ( mshared preferences name , mshared preferences mode ) ;
 }
 return mshared preferences ;
 }
comment:
START gets a shared preferences instance that preferences managed by this will use . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK UNK

code:
@ non null public byte [ ] get data ( ) {
 if ( data == null ) {
 throw new runtime exception ( String ) ;
 }
 return data ;
 }
comment:
START get the opaque message data END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK for the UNK .
returns the list of UNK UNK for the given UNK .

code:
public request [ ] get active requests ( ) {
 synchronized ( mactive requests ) {
 final int n = mactive requests . size ( ) ;
 if ( n <= DecimalInteger ) {
 return no_ s ;
 }
 request [ ] requests = new request [ n ] ;
 for ( int i = DecimalInteger ;
 i < n ;
 i ++ ) {
 requests [ i ] = mactive requests . value at ( i ) ;
 }
 return requests ;
 }
 }
comment:
START return all currently active requests . END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public int fix permissions secure container ( string id , int gid , string filename ) throws remote exception {
 parcel _data = parcel . obtain ( ) ;
 parcel _reply = parcel . obtain ( ) ;
 int _result ;
 try {
 _data . write interface token ( r ) ;
 _data . write string ( id ) ;
 _data . write int ( gid ) ;
 _data . write string ( filename ) ;
 remote . transact ( stub . UNK permissions secure container , _data , _reply , DecimalInteger ) ;
 _reply . read exception ( ) ;
 _result = _reply . read int ( ) ;
 }
 finally {
 _reply . recycle ( ) ;
 _data . recycle ( ) ;
 }
 return _result ;
 }
comment:
START returns an int consistent with mount service result code END
BLUE1:0.142857142857
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public boolean is empty ( ) {
 return unconditional artifacts . is empty ( ) && symlinks . is empty ( ) && root symlinks . is empty ( ) && pruning manifests . is empty ( ) ;
 }
comment:
START returns if there are no runfiles . END
BLUE1:0.142857142857
--generate--
sets whether the UNK is UNK .
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .

code:
public void set use dynamic logger ( boolean use dynamic logger ) {
 this . default logger = ( use dynamic logger ? null : log factory . get log ( get class ( ) ) ) ;
 }
comment:
START set whether to use a dynamic logger or a static logger . END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK of UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .

code:
public long find ( bytes ref key , int code ) {
 final long slot = slot ( UNK ( code ) , mask ) ;
 for ( long index = slot ;
 ;
 index = next slot ( index , mask ) ) {
 final long id = id ( index ) ;
 if ( id == - DecimalInteger || key . bytes equals ( get ( id , UNK ) ) ) {
 return id ;
 }
 }
 }
comment:
START get the id associated with key END
BLUE1:0.142857142857
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of all UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK for the UNK .

code:
public void set values ( byte a , byte b , byte c , byte d ) {
 this . x = a ;
 this . y = b ;
 this . z = c ;
 this . w = d ;
 }
comment:
START set the vector field values @param a @param b @param c @param d END
BLUE1:0.142857142857
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK to .

code:
public static files to run provider from single executable artifact ( artifact artifact ) {
 return new files to run provider ( immutable list . of ( artifact ) , null , artifact ) ;
 }
comment:
START creates an instance that contains one single executable and no other files . END
BLUE1:0.133333333333
--generate--
returns a immutable buffer that containing the elements in the elements , in milliseconds .
returns a immutable buffer that containing the elements in the elements , in pixels .
returns a immutable instance of the given file .
returns a immutable instance of the given file , in any .
returns a immutable buffer that containing the elements in the elements .

code:
@ override public void unregister listener ( inotification listener token , int userid ) {
 listeners . unregister service ( token , userid ) ;
 }
comment:
START remove a listener binder directly END
BLUE1:0.125
--generate--
set the listener that should be enabled .
set the listener that will be used for the UNK .
set the listener that should be used to the UNK .
set the listener that will be used to the UNK .
set the listener that will be used to the UNK of the UNK .

code:
public void add panel slide listener ( panel slide listener listener ) {
 synchronized ( mpanel slide listeners ) {
 mpanel slide listeners . add ( listener ) ;
 }
 }
comment:
START adds a panel slide listener @param listener END
BLUE1:0.125
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the user .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
public filter registration . dynamic add filter ( string name , class < ? extends filter > klass ) {
 return add filter ( name , new filter holder ( require non null ( klass ) ) ) ;
 }
comment:
START add a filter class . END
BLUE1:0.125
--generate--
sets the UNK for the given UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public boolean is highlight per tap enabled ( ) {
 return mhigh light per tap enabled ;
 }
comment:
START returns true if values can be highlighted via tap gesture , false if not . END
BLUE1:0.125
--generate--
sets whether to UNK the UNK UNK .
sets whether to UNK the UNK .
sets whether to use to UNK UNK .
sets whether to use to UNK .
sets whether to UNK the UNK UNK

code:
private static long UNK ( int a , int b ) {
 if ( a == DecimalInteger || b == DecimalInteger ) {
 throw new illegal argument exception ( String ) ;
 }
 return ( long ) a * b / UNK ( a , b ) ;
 }
comment:
START returns least common multiple END
BLUE1:0.125
--generate--
returns a immutable array of the UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data for the given file .
returns a immutable array of the data for the given UNK .

code:
public static boolean dump service ( string name , file descriptor fd , string [ ] args ) {
 binder service = service manager . get service ( name ) ;
 if ( service == null ) {
 log . e ( g , String + name ) ;
 return false ;
 }
 try {
 service . dump ( fd , args ) ;
 return true ;
 }
 catch ( remote exception e ) {
 log . e ( g , String + name , e ) ;
 return false ;
 }
 }
comment:
START get a debugging dump of a system service by name . END
BLUE1:0.125
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in the UNK .

code:
protected mutable action graph get mutable action graph ( ) {
 return mutable action graph ;
 }
comment:
START get a mutable action graph for testing purposes . END
BLUE1:0.125
--generate--
returns the UNK UNK of the UNK .
returns the UNK of UNK .
returns the UNK UNK of the given UNK .
creates a new instance of the UNK .
creates a new instance of the given UNK .

code:
public drawer builder with sticky footer divider ( boolean sticky footer divider ) {
 this . msticky footer divider = sticky footer divider ;
 return this ;
 }
comment:
START set this to true if you want the divider above the sticky footer @param sticky footer divider @return END
BLUE1:0.125
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that will be used for the UNK .
sets the listener that should be used to the UNK .
sets the listener that will be used to the UNK of the UNK .

code:
public static string create sql select ( string UNK , string table alias , string [ ] columns , boolean distinct ) {
 if ( table alias == null || table alias . length ( ) < DecimalInteger ) {
 throw new dao exception ( String ) ;
 }
 string builder builder = new string builder ( distinct ? String : String ) ;
 sql utils . append columns ( builder , table alias , columns ) . append ( String ) ;
 builder . append ( String ) . append ( UNK ) . append ( String ) . append ( String ) . append ( table alias ) . append ( String ) ;
 return builder . to string ( ) ;
 }
comment:
START creates an select for given columns with a trailing space END
BLUE1:0.125
--generate--
returns a immutable array of the UNK .
returns a immutable array of the UNK UNK .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public static boolean contains ( page range [ ] page ranges , int page index ) {
 final int range count = page ranges . length ;
 for ( int i = DecimalInteger ;
 i < range count ;
 i ++ ) {
 page range page range = page ranges [ i ] ;
 if ( page range . contains ( page index ) ) {
 return true ;
 }
 }
 return false ;
 }
comment:
START gets whether page ranges contains a given page . END
BLUE1:0.125
--generate--
returns true if the UNK is UNK .
returns true if the view is UNK .
returns true if the user is UNK .
returns true if the UNK UNK is UNK .
returns true if the view is UNK in the UNK .

code:
public drawer builder with header divider ( boolean header divider ) {
 this . mheader divider = header divider ;
 return this ;
 }
comment:
START set this to false if you do n't need the divider below the header @param header divider @return END
BLUE1:0.125
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be added to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
public static completable concat ( iterable < ? extends completable > sources ) {
 require non null ( sources ) ;
 return create ( new completable on subscribe concat iterable ( sources ) ) ;
 }
comment:
START returns a completable which completes only when all sources complete , one after another . END
BLUE1:0.125
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be used to the UNK .
sets the listener that will be used for the UNK .
sets the listener that will be used to the UNK of the UNK .

code:
void create snapshot ( create snapshot request request , action listener < create snapshot response > listener ) ;
comment:
START creates a new snapshot . END
BLUE1:0.125
--generate--
sets the listener that should be enabled .
sets the listener that will be used to the UNK .
sets the listener that should be used to the UNK .
sets the listener that will be used to the UNK of the UNK .
sets the listener that will be used to the UNK of the UNK

code:
private void add ref counts from saved packages pw ( array map < long , integer > key set ref counts ) {
 final int num ref counts = key set ref counts . size ( ) ;
 for ( int i = DecimalInteger ;
 i < num ref counts ;
 i ++ ) {
 key set handle ks = mkey sets . get ( key set ref counts . key at ( i ) ) ;
 if ( ks == null ) {
 slog . wtf ( g , String ) ;
 continue ;
 }
 ks . set ref count pw ( key set ref counts . value at ( i ) ) ;
 }
 array set < long > UNK key sets = new array set < long > ( ) ;
 final int num key sets = mkey sets . size ( ) ;
 for ( int i = DecimalInteger ;
 i < num key sets ;
 i ++ ) {
 if ( mkey sets . value at ( i ) . get ref count pr ( ) == DecimalInteger ) {
 slog . wtf ( g , String ) ;
 UNK key sets . add ( mkey sets . key at ( i ) ) ;
 }
 array set < long > pub keys = mkey set mapping . value at ( i ) ;
 final int pk size = pub keys . size ( ) ;
 for ( int j = DecimalInteger ;
 j < pk size ;
 j ++ ) {
 mpublic keys . get ( pub keys . value at ( j ) ) . UNK ref count pw ( ) ;
 }
 }
 final int num orphans = UNK key sets . size ( ) ;
 for ( int i = DecimalInteger ;
 i < num orphans ;
 i ++ ) {
 decrement key set pw ( UNK key sets . value at ( i ) ) ;
 }
 }
comment:
START set each key set ref count . END
BLUE1:0.125
--generate--
sets the UNK for the given UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
@ deprecated public void remove buckets before ( long cutoff ) {
 int i ;
 for ( i = DecimalInteger ;
 i < bucket count ;
 i ++ ) {
 final long cur start = bucket start [ i ] ;
 final long cur end = cur start + bucket duration ;
 if ( cur end > cutoff ) break ;
 }
 if ( i > DecimalInteger ) {
 final int length = bucket start . length ;
 bucket start = arrays . copy of range ( bucket start , i , length ) ;
 if ( active time != null ) active time = arrays . copy of range ( active time , i , length ) ;
 if ( rx bytes != null ) rx bytes = arrays . copy of range ( rx bytes , i , length ) ;
 if ( rx packets != null ) rx packets = arrays . copy of range ( rx packets , i , length ) ;
 if ( tx bytes != null ) tx bytes = arrays . copy of range ( tx bytes , i , length ) ;
 if ( tx packets != null ) tx packets = arrays . copy of range ( tx packets , i , length ) ;
 if ( operations != null ) operations = arrays . copy of range ( operations , i , length ) ;
 bucket count -= i ;
 }
 }
comment:
START remove buckets older than requested cutoff . END
BLUE1:0.125
--generate--
sets the UNK for the given UNK .
returns the UNK of the UNK .
set the UNK for the given UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
transport address [ ] addresses from string ( string address , int per address limit ) throws exception ;
comment:
START returns an address from its string representation . END
BLUE1:0.125
--generate--
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
returns the UNK of the given UNK .

code:
public put index template request builder set create ( boolean create ) {
 request . create ( create ) ;
 return this ;
 }
comment:
START set to true to force only creation , not an update of an index template . END
BLUE1:0.125
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the user .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
public boolean remove ( runnable runnable ) {
 return delta queue . remove ( runnable ) ;
 }
comment:
START removes a task from the queue @param runnable the runnable to remove @return whether the element was removed END
BLUE1:0.125
--generate--
returns true if the UNK is UNK .
returns true if the user is UNK .
returns true if the given UNK is UNK .
returns true if the user is UNK in UNK .
returns true if the user is UNK in UNK

code:
public static description create suite description ( string name , serializable unique id , annotation ... annotations ) {
 return new description ( null , name , unique id , annotations ) ;
 }
comment:
START create a description named name . END
BLUE1:0.125
--generate--
returns true if the user is UNK .
returns true if the UNK is UNK .
returns true if the UNK UNK is UNK .
returns true if the user is UNK in the UNK .
returns true if the user is UNK in a UNK .

code:
public static put mapping request put mapping request ( string ... indices ) {
 return new put mapping request ( indices ) ;
 }
comment:
START create a create mapping request against one or more indices . END
BLUE1:0.125
--generate--
remove the UNK from the given UNK .
removes the UNK from the given UNK .
removes the UNK from the specified UNK .
removes the UNK from the given index .
remove the UNK of the given UNK .

code:
public boolean add states from children ( ) {
 return ( mgroup flags & flag_ add_ UNK from_ n ) != DecimalInteger ;
 }
comment:
START returns whether this view group 's drawable states also include its children 's drawable states . END
BLUE1:0.125
--generate--
remove the UNK from the given UNK .
remove the UNK of the given UNK .
removes the UNK from the given UNK .
removes the UNK of the given UNK .
remove the UNK UNK .

code:
public recovery ref get recovery ( long id ) {
 recovery target status = on going UNK . get ( id ) ;
 if ( status != null && status . try inc ref ( ) ) {
 return new recovery ref ( status ) ;
 }
 return null ;
 }
comment:
START returns null if recovery is not found END
BLUE1:0.125
--generate--
returns a immutable array of the UNK .
returns a immutable array of the UNK UNK .
returns a immutable array of the data .
returns a immutable array of the data in the given UNK .
returns a immutable array of the data in the given file .

code:
public static icon create with data ( byte [ ] data , int offset , int length ) {
 if ( data == null ) {
 throw new illegal argument exception ( String ) ;
 }
 final icon rep = new icon ( type_ a ) ;
 rep . UNK = data ;
 rep . UNK = length ;
 rep . UNK = offset ;
 return rep ;
 }
comment:
START create an icon pointing to a compressed bitmap stored in a byte array . END
BLUE1:0.125
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the user .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
public void remove on window attach listener ( on window attach listener victim ) {
 check is alive ( ) ;
 if ( mon window attach listeners == null ) {
 return ;
 }
 mon window attach listeners . remove ( victim ) ;
 }
comment:
START remove a previously installed window attach callback . END
BLUE1:0.125
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the user .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
private boolean add UNK record ( historical record historical record ) {
 final boolean added = mhistorical records . add ( historical record ) ;
 if ( added ) {
 mhistorical records changed = true ;
 prune UNK historical records if needed ( ) ;
 persist historical data if needed ( ) ;
 sort activities if needed ( ) ;
 notify changed ( ) ;
 }
 return added ;
 }
comment:
START adds a historical record . END
BLUE1:0.125
--generate--
removes the UNK from the given UNK .
remove the UNK from the given UNK .
removes the UNK from the specified UNK .
remove the UNK of the given UNK .
remove the UNK from the given .

code:
public file cache store store ( string key ) {
 return new file cache store ( this , store cache , key ) ;
 }
comment:
START get or put an item in the persistent store @return END
BLUE1:0.111111111111
--generate--
returns a immutable instance of the given type .
returns a immutable instance of the given file , in any .
returns a immutable instance of the given file .
returns a immutable instance of the given key .
returns a immutable instance of the given key , in any .

code:
public static string remove trailing period ( string string ) {
 if ( string == null ) return null ;
 final int length = string . length ( ) ;
 if ( string . ends with ( String ) ) {
 return string . substring ( DecimalInteger , length - DecimalInteger ) ;
 }
 return string ;
 }
comment:
START remove the period from the network name END
BLUE1:0.111111111111
--generate--
creates a new instance of the UNK UNK .
creates a new instance for the UNK UNK .
creates a new instance for the given UNK .
creates a new instance of the UNK .
creates a new instance for the UNK .

code:
public static executor create executor ( int thread pool size , int thread priority , queue processing type tasks processing type ) {
 boolean UNK = tasks processing type == queue processing type . o ;
 blocking queue < runnable > task queue = UNK ? new UNK blocking deque < runnable > ( ) : new linked blocking queue < runnable > ( ) ;
 return new thread pool executor ( thread pool size , thread pool size , DecimalInteger , time unit . s , task queue , create thread factory ( thread priority , String ) ) ;
 }
comment:
START creates default implementation of task executor END
BLUE1:0.0833333333333
--generate--
returns a immutable instance of the given values , in any .
returns a immutable instance of the given values .
returns a immutable instance of the given type .
returns a immutable instance of the given key .
returns a immutable instance of the given values , in any

code:
public static void set method listener ( string signature , method listener listener ) {
 if ( listener == null ) {
 methods . remove ( signature ) ;
 }
 else {
 methods . put ( signature , listener ) ;
 }
 }
comment:
START removes it if null . END
BLUE1:0.0833333333333
--generate--
set the listener that should be added to the given UNK .
set the listener that should be added to the user .
set the listener that should be added to the UNK .
set the listener that should be added to the UNK of the UNK .
set the listener that should be added to the user

code:
private static discovery node new node ( final string node id , set < discovery node . role > roles ) {
 return new discovery node ( node id , node id , node id , String , String , new local transport address ( String + node id ) , collections . empty map ( ) , roles , version . t ) ;
 }
comment:
START create a new discovery node END
BLUE1:0.0666666666667
--generate--
returns a immutable buffer that will be applied to the current list of UNK .
returns a immutable buffer that will be added by the provided key .
returns a immutable buffer that will be added by the specified key .
returns a immutable buffer that will be applied for the given key .
returns a immutable buffer that will be applied to the current list of UNK . .

code:
public java . util . list < java . lang . integer > get class name list ( ) {
 return java . util . collections . unmodifiable list ( class name_ ) ;
 }
comment:
START repeated int32 class_name = NUMBER -lsb- packed = true -rsb- <pre> id in string table </pre> END
BLUE1:0.0
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK of the UNK

code:
public void set platform version ( int platform version ) {
 UNK version = platform version ;
 }
comment:
START set platform version @param platform version platform version number END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .
sets the UNK of the UNK UNK .

code:
public float get particle damping ( ) {
 return m_particle system . get particle damping ( ) ;
 }
comment:
START get damping for particles @return END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of UNK UNK .
returns the number of all UNK .
returns the number of all UNK in the given .

code:
public int get class name count ( ) {
 return class name_ . size ( ) ;
 }
comment:
START repeated string class_name = NUMBER END
BLUE1:0.0
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public noop bulk request builder add ( byte [ ] data , int from , int length , @ nullable string default index , @ nullable string default type ) throws exception {
 request . add ( data , from , length , default index , default type ) ;
 return this ;
 }
comment:
START adds a framed data in binary format END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public int get nested class name count ( ) {
 return nested class name_ . size ( ) ;
 }
comment:
START repeated int32 nested_class_name = NUMBER -lsb- packed = true -rsb- END
BLUE1:0.0
--generate--
returns the UNK of the UNK .
returns the UNK for the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .

code:
optional < lottery ticket > find by id ( lottery ticket id id ) ;
comment:
START find lottery ticket by id END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK in the .

code:
public void set back button visibility with done ( boolean show ) {
 this . show back button with done = show ;
 }
comment:
START sets wizard mode @param show on/off END
BLUE1:0.0
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public org . jetbrains . kotlin . protobuf . byte string get string bytes ( int index ) {
 return string_ . get byte string ( index ) ;
 }
comment:
START repeated string string = NUMBER END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public boolean is draw value above bar enabled ( ) {
 return mdraw value above bar ;
 }
comment:
START returns true if drawing values above bars is enabled , false if not @return END
BLUE1:0.0
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK UNK UNK UNK

code:
private boolean is name and address set ( ) {
 return name != null && address != null && name . length ( ) > DecimalInteger && address . length ( ) > DecimalInteger ;
 }
comment:
START returns true if the bluetooth adapter 's name and address is locally cached @return END
BLUE1:0.0
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
set whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
set whether to UNK UNK UNK UNK .

code:
protected map < string , string > get extra map on failure ( exception exception ) {
 return null ;
 }
comment:
START create extra map for exception END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the number of all UNK in the UNK .
returns the list of UNK UNK

code:
public builder add mandatory input ( artifact input ) {
 preconditions . check not null ( input ) ;
 this . mandatory inputs . add ( input ) ;
 this . add input ( input ) ;
 return this ;
 }
comment:
START add an input that can not be pruned END
BLUE1:0.0
--generate--
adds the UNK to the UNK .
add the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the UNK to the UNK .

code:
public builder add all nested class name ( java . lang . iterable < ? extends java . lang . integer > values ) {
 ensure nested class name is mutable ( ) ;
 org . jetbrains . kotlin . protobuf . abstract message lite . builder . add all ( values , nested class name_ ) ;
 on changed ( ) ;
 return this ;
 }
comment:
START repeated int32 nested_class_name = NUMBER -lsb- packed = true -rsb- END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK for the UNK .
sets the UNK of the UNK to the UNK .

code:
public static create snapshot request create snapshot request ( string repository , string snapshot ) {
 return new create snapshot request ( repository , snapshot ) ;
 }
comment:
START creates new snapshot @param repository repository name @param snapshot snapshot name @return create snapshot request END
BLUE1:0.0
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of the UNK UNK .
returns the UNK for the given UNK .

code:
public builder add string bytes ( org . jetbrains . kotlin . protobuf . byte string value ) {
 if ( value == null ) {
 throw new null pointer exception ( ) ;
 }
 ensure string is mutable ( ) ;
 string_ . add ( value ) ;
 return this ;
 }
comment:
START repeated string string = NUMBER END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public int get gsm dbm ( ) {
 int bm ;
 int gsm signal strength = get gsm signal strength ( ) ;
 int asu = ( gsm signal strength == DecimalInteger ? - DecimalInteger : gsm signal strength ) ;
 if ( asu != - DecimalInteger ) {
 bm = - DecimalInteger + ( DecimalInteger * asu ) ;
 }
 else {
 bm = - DecimalInteger ;
 }
 if ( g ) log ( String + bm ) ;
 return bm ;
 }
comment:
START get gsm signal strength as dbm END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
private identifier make error expression ( int start , int end ) {
 return set location ( new identifier ( String ) , start , end ) ;
 }
comment:
START create an error expression END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK UNK

code:
public builder add class name ( int value ) {
 ensure class name is mutable ( ) ;
 class name_ . add ( value ) ;
 return this ;
 }
comment:
START repeated int32 class_name = NUMBER -lsb- packed = true -rsb- <pre> id in string table </pre> END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public builder set supertype id ( int index , int value ) {
 ensure supertype id is mutable ( ) ;
 supertype id_ . set ( index , value ) ;
 on changed ( ) ;
 return this ;
 }
comment:
START repeated int32 supertype_id = NUMBER -lsb- packed = true -rsb- END
BLUE1:0.0
--generate--
sets the listener that should be enabled .
sets the listener that should be added to the given UNK .
sets the listener that should be added to the user .
sets the listener that should be added to the UNK .
sets the listener that should be added to the UNK of the UNK .

code:
java . lang . string get class name ( int index ) ;
comment:
START repeated string class_name = NUMBER END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the list of UNK that UNK the UNK .

code:
protected static void add tlv ( byte buffer buf , byte type , short value ) {
 if ( value != null ) {
 buf . put ( type ) ;
 buf . put ( ( byte ) DecimalInteger ) ;
 buf . put short ( value . short value ( ) ) ;
 }
 }
comment:
START adds an optional parameter containing a short integer END
BLUE1:0.0
--generate--
remove the UNK from the UNK .
sets the UNK of the UNK .
remove the UNK from the given UNK .
sets the UNK for the given UNK .
remove the UNK from the given UNK , in the UNK .

code:
public synchronized void add pending ( cluster state state ) {
 pending states . add ( new cluster state context ( state ) ) ;
 if ( pending states . size ( ) > max queue size ) {
 cluster state context context = pending states . remove ( DecimalInteger ) ;
 logger . warn ( String , context , max queue size ) ;
 if ( context . committed ( ) ) {
 context . listener . on new cluster state failed ( new elasticsearch exception ( String , max queue size ) ) ;
 }
 }
 }
comment:
START add an incoming , not yet committed cluster state END
BLUE1:0.0
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
adds the UNK to the UNK to the UNK .

code:
public builder add class name bytes ( org . jetbrains . kotlin . protobuf . byte string value ) {
 if ( value == null ) {
 throw new null pointer exception ( ) ;
 }
 ensure class name is mutable ( ) ;
 class name_ . add ( value ) ;
 on changed ( ) ;
 return this ;
 }
comment:
START repeated string class_name = NUMBER END
BLUE1:0.0
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public builder clear class name ( ) {
 class name_ = org . jetbrains . kotlin . protobuf . lazy string array list . y ;
 bit field0_ = ( bit field0_ & ~ UNK ) ;
 return this ;
 }
comment:
START repeated string class_name = NUMBER END
BLUE1:0.0
--generate--
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the UNK .
returns the UNK of the UNK UNK .
returns the UNK of the given UNK .

code:
public int get platform version ( ) {
 return UNK version ;
 }
comment:
START get platform version @return int platform version number END
BLUE1:0.0
--generate--
returns the list of UNK .
returns the list of UNK UNK .
returns the number of UNK .
returns the number of all UNK .
returns the list of UNK UNK

code:
public void add sticky footer item at position ( @ non null idrawer item drawer item , int position ) {
 if ( mdrawer builder . msticky drawer items == null ) {
 mdrawer builder . msticky drawer items = new array list < > ( ) ;
 }
 mdrawer builder . msticky drawer items . add ( position , drawer item ) ;
 drawer utils . rebuild sticky footer view ( mdrawer builder ) ;
 }
comment:
START add a footer drawer item at a specific position @param drawer item @param position END
BLUE1:0.0
--generate--
adds the UNK to the UNK .
adds the UNK to the given UNK .
adds the UNK to the UNK UNK .
adds the UNK to the given .
adds the UNK to the UNK to the UNK .

code:
public void test remove app UNK unique ( ) throws reflective operation exception {
 package setting ps = generate fake package setting ( String ) ;
 mpackages map . put ( ps . name , ps ) ;
 array set < public key > signing keys = new array set < public key > ( ) ;
 public key key a = package parser . parse public key ( key set strings . cts key set public key a ) ;
 signing keys . add ( key a ) ;
 ksms . add signing key set to package pw ( ps , signing keys ) ;
 ksms . remove app key set data pw ( ps . name ) ;
 assert equals ( DecimalInteger , key set utils . get key set ref count ( ksms , DecimalInteger ) ) ;
 assert equals ( DecimalInteger , key set utils . get pub key ref count ( ksms , DecimalInteger ) ) ;
 long sparse array < array set < long > > ks mapping = key set utils . get key set mapping ( ksms ) ;
 assert equals ( DecimalInteger , ks mapping . size ( ) ) ;
 assert equals ( package key set data . keyset_ d , ps . key set data . get proper signing key set ( ) ) ;
 }
comment:
START remove package and validate that keyset and public keys are removed END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK for the given file .

code:
public builder add all upper bound id ( java . lang . iterable < ? extends java . lang . integer > values ) {
 ensure upper bound id is mutable ( ) ;
 org . jetbrains . kotlin . protobuf . abstract message lite . builder . add all ( values , upper bound id_ ) ;
 return this ;
 }
comment:
START repeated int32 upper_bound_id = NUMBER END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public static get snapshots request get snapshots request ( string repository ) {
 return new get snapshots request ( repository ) ;
 }
comment:
START gets snapshots from repository @param repository repository name @return get snapshot request END
BLUE1:0.0
--generate--
returns a immutable array of the UNK .
returns a immutable array of the given file .
returns a immutable array of the data .
returns a immutable array of the given UNK .
returns a immutable array of the data in the given UNK .

code:
public builder clear upper bound id ( ) {
 upper bound id_ = java . util . collections . empty list ( ) ;
 bit field0_ = ( bit field0_ & ~ 0x00000020 ) ;
 on changed ( ) ;
 return this ;
 }
comment:
START repeated int32 upper_bound_id = NUMBER END
BLUE1:0.0
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
returns the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given UNK .

code:
public builder clear imported module ( ) {
 imported module_ = org . jetbrains . kotlin . protobuf . lazy string array list . y ;
 bit field0_ = ( bit field0_ & ~ UNK ) ;
 on changed ( ) ;
 return this ;
 }
comment:
START repeated string imported_module = NUMBER END
BLUE1:0.0
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
returns the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given UNK .

code:
public builder cache in memory ( boolean cache in memory ) {
 this . cache in memory = cache in memory ;
 return this ;
 }
comment:
START sets whether loaded image will be cached in memory END
BLUE1:0.0
--generate--
set to UNK UNK .
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK of UNK to .
sets the UNK of UNK to the UNK .

code:
public void test add signing ksto package new same ( ) throws reflective operation exception {
 package setting ps1 = generate fake package setting ( String ) ;
 mpackages map . put ( ps1 . name , ps1 ) ;
 package setting ps2 = generate fake package setting ( String ) ;
 mpackages map . put ( ps2 . name , ps2 ) ;
 array set < public key > signing keys = new array set < public key > ( ) ;
 public key key a = package parser . parse public key ( key set strings . cts key set public key a ) ;
 signing keys . add ( key a ) ;
 ksms . add signing key set to package pw ( ps1 , signing keys ) ;
 ksms . add signing key set to package pw ( ps2 , signing keys ) ;
 assert equals ( DecimalInteger , key set utils . get key set ref count ( ksms , DecimalInteger ) ) ;
 assert equals ( DecimalInteger , key set utils . get pub key ref count ( ksms , DecimalInteger ) ) ;
 assert equals ( key a , key set utils . get pub key ( ksms , DecimalInteger ) ) ;
 long sparse array < array set < long > > ks mapping = key set utils . get key set mapping ( ksms ) ;
 assert equals ( DecimalInteger , ks mapping . size ( ) ) ;
 array set < long > mapping = ks mapping . get ( DecimalInteger ) ;
 assert equals ( DecimalInteger , mapping . size ( ) ) ;
 assert true ( mapping . contains ( new long ( DecimalInteger ) ) ) ;
 assert equals ( DecimalInteger , ps1 . key set data . get proper signing key set ( ) ) ;
 assert equals ( DecimalInteger , ps2 . key set data . get proper signing key set ( ) ) ;
 }
comment:
START add identical keyset info to system via new package and ensure previous keysets has reference count incremented END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
org . jetbrains . kotlin . protobuf . protocol string list get class name list ( ) ;
comment:
START repeated string class_name = NUMBER END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public create snapshot request repository ( string repository ) {
 this . repository = repository ;
 return this ;
 }
comment:
START sets repository name @param repository name @return this request END
BLUE1:0.0
--generate--
set to UNK UNK .
sets the UNK of the UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
public void set needed write mem bytes ( int needed write mem bytes ) {
 mneeded write mem bytes = needed write mem bytes ;
 }
comment:
START set writable memory needed in bytes @param needed write mem bytes writable memory needed in bytes END
BLUE1:0.0
--generate--
sets the UNK of UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

code:
public boolean has index scope ( ) {
 return properties . contains ( property . index scope ) ;
 }
comment:
START returns true if this setting has an index scope , otherwise false END
BLUE1:0.0
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK to UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK the UNK .

code:
boolean is UNK ( ) {
 return mtarget alpha != DecimalInteger ;
 }
comment:
START return true if dim layer is showing END
BLUE1:0.0
--generate--
sets whether to UNK UNK .
sets whether to UNK UNK UNK .
sets whether to UNK the UNK .
sets whether to UNK to UNK .
sets whether to UNK to UNK the UNK .

code:
boolean remove ( task t ) {
 if ( UNK tasks . contains ( t ) ) {
 boolean removed = tasks . remove ( t ) ;
 update filtered tasks ( ) ;
 return removed ;
 }
 return false ;
 }
comment:
START removes a task from the base list only if it is in the filtered list END
BLUE1:0.0
--generate--
UNK UNK .
UNK UNK UNK .
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK

code:
public default client web request builder header ( string name , string ... values ) {
 arrays . stream ( values ) . for each ( value -> this . http headers . add ( name , value ) ) ;
 return this ;
 }
comment:
START add an http request header END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
returns the UNK of the UNK .
sets the UNK of the given UNK .
returns the UNK of the given UNK .

code:
java . util . list < java . lang . integer > get nested class name list ( ) ;
comment:
START repeated int32 nested_class_name = NUMBER -lsb- packed = true -rsb- END
BLUE1:0.0
--generate--
returns the UNK of the UNK .
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public builder add all imported module ( java . lang . iterable < java . lang . string > values ) {
 ensure imported module is mutable ( ) ;
 org . jetbrains . kotlin . protobuf . abstract message lite . builder . add all ( values , imported module_ ) ;
 return this ;
 }
comment:
START repeated string imported_module = NUMBER END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to the UNK .

code:
public org . jetbrains . kotlin . protobuf . byte string get imported module bytes ( int index ) {
 return imported module_ . get byte string ( index ) ;
 }
comment:
START repeated string imported_module = NUMBER END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public int get class name ( int index ) {
 return class name_ . get ( index ) ;
 }
comment:
START repeated int32 class_name = NUMBER -lsb- packed = true -rsb- <pre> id in string table </pre> END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the list of UNK that be UNK to the UNK .

code:
public int get nested class name ( int index ) {
 return nested class name_ . get ( index ) ;
 }
comment:
START repeated int32 nested_class_name = NUMBER -lsb- packed = true -rsb- END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the UNK for the given UNK .
returns the list of UNK UNK
returns the UNK for the given UNK , in the UNK .

code:
public org . jetbrains . kotlin . protobuf . protocol string list get class name list ( ) {
 return class name_ . get unmodifiable view ( ) ;
 }
comment:
START repeated string class_name = NUMBER END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void test add UNK ( ) {
 string inject = String ;
 UNK push manager iwapman = get interface ( ) ;
 try {
 assert false ( iwapman . add package ( inject , integer . to string ( mcontent type value ) , mpackage name , mclass name , wap push manager params . app_ type_ e , true , true ) ) ;
 }
 catch ( remote exception e ) {
 assert true ( false ) ;
 }
 }
comment:
START add sqlite injection test END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .
set the UNK for the given UNK .

code:
public void set vibrate ( boolean UNK enabled ) {
 this . is vibrate on = UNK enabled ;
 }
comment:
START sets vibration when buttons are pressed @param vibration enabled on/off END
BLUE1:0.0
--generate--
set to UNK UNK .
set to UNK to UNK .
sets the UNK of the UNK .
set to UNK to UNK to .
set to UNK to UNK to the UNK .

code:
public builder add string ( java . lang . string value ) {
 if ( value == null ) {
 throw new null pointer exception ( ) ;
 }
 ensure string is mutable ( ) ;
 string_ . add ( value ) ;
 on changed ( ) ;
 return this ;
 }
comment:
START repeated string string = NUMBER END
BLUE1:0.0
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the given UNK .
sets the UNK for the UNK .
sets the UNK of the given UNK .

code:
public builder add supertype id ( int value ) {
 ensure supertype id is mutable ( ) ;
 supertype id_ . add ( value ) ;
 on changed ( ) ;
 return this ;
 }
comment:
START repeated int32 supertype_id = NUMBER -lsb- packed = true -rsb- END
BLUE1:0.0
--generate--
sets the UNK UNK .
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the UNK to the UNK .

code:
private boolean in whitelist ( string pkg ) {
 synchronized ( lock ) {
 for ( string white : whitelist ) {
 if ( pkg . starts with ( white ) ) return true ;
 }
 }
 return false ;
 }
comment:
START return true if any of packages are in whitelist END
BLUE1:0.0
--generate--
sets whether the UNK is UNK .
sets the UNK of the UNK .
sets whether to UNK UNK UNK .
sets whether to UNK UNK UNK UNK .
sets the UNK of the given UNK .

code:
@ nullable private static lint module project create module project ( @ non null lint client client , @ non null module module ) {
 android facet facet = android facet . get instance ( module ) ;
 file dir ;
 if ( facet != null ) {
 final virtual file main content root = android root util . get main content root ( facet ) ;
 if ( main content root == null ) {
 return null ;
 }
 dir = new file ( file util . to system dependent name ( main content root . get path ( ) ) ) ;
 }
 else {
 string module dir path = android root util . get module dir path ( module ) ;
 if ( module dir path == null ) {
 return null ;
 }
 dir = new file ( file util . to system dependent name ( module dir path ) ) ;
 }
 lint module project project ;
 if ( facet == null ) {
 project = new lint module project ( client , dir , dir , module ) ;
 android facet f = find android facet in project ( module . get project ( ) ) ;
 if ( f != null ) {
 project . mgradle project = is gradle module ( f ) ;
 }
 }
 else if ( is gradle module ( ( facet ) ) ) {
 project = new lint gradle project ( client , dir , dir , facet ) ;
 }
 else {
 project = new lint android project ( client , dir , dir , facet ) ;
 }
 client . register project ( dir , project ) ;
 return project ;
 }
comment:
START creates a new module project END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK to the UNK .
returns the list of UNK UNK UNK

code:
public static geo query query ( string name , geo point point ) {
 return query ( name , point . get geohash ( ) ) ;
 }
comment:
START create a new geolocation query from a given geo point @param point query location @return new geolocation query END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the number of all UNK .
returns the list of UNK UNK
returns the number of all UNK in the given .

code:
public boolean get data roaming ( ) {
 return mdata roaming type != roaming_ type_ not_ g ;
 }
comment:
START get current data network roaming type @return roaming type END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK for the given UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public java . lang . string get imported module ( int index ) {
 return imported module_ . get ( index ) ;
 }
comment:
START repeated string imported_module = NUMBER END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void remove sticky footer item at position ( int position ) {
 if ( mdrawer builder . msticky drawer items != null && mdrawer builder . msticky drawer items . size ( ) > position ) {
 mdrawer builder . msticky drawer items . remove ( position ) ;
 }
 drawer utils . rebuild sticky footer view ( mdrawer builder ) ;
 }
comment:
START remove a footer drawer item at a specific position @param position END
BLUE1:0.0
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to UNK to UNK .
used to the UNK of the given UNK .
used to the UNK of the given .

code:
java . util . list < java . lang . integer > get class name list ( ) ;
comment:
START repeated int32 class_name = NUMBER -lsb- packed = true -rsb- <pre> id in string table </pre> END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public int get class name count ( ) {
 return class name_ . size ( ) ;
 }
comment:
START repeated string class_name = NUMBER END
BLUE1:0.0
--generate--
returns the UNK of the UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK for the given UNK .
returns the UNK of the UNK

code:
public static bytes reference get rest content ( rest request request ) {
 assert request != null ;
 bytes reference content = request . content ( ) ;
 if ( ! request . has content ( ) ) {
 string source = request . param ( String ) ;
 if ( source != null ) {
 content = new bytes array ( source ) ;
 }
 }
 return content ;
 }
comment:
START get rest content from either payload or source parameter @param request rest request @return rest content END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the list of UNK .
returns the list of UNK UNK UNK .
returns the list of UNK UNK
returns the list of UNK UNK UNK

code:
public void set subject ( subject subject ) {
 UNK = subject ;
 }
comment:
START set remote subject explicitly END
BLUE1:0.0
--generate--
returns the UNK of the UNK .
returns the UNK of UNK UNK .
returns the UNK of UNK .
returns the UNK of the given UNK .
returns the UNK of UNK UNK

code:
public org . jetbrains . kotlin . protobuf . byte string get class name bytes ( int index ) {
 return class name_ . get byte string ( index ) ;
 }
comment:
START repeated string class_name = NUMBER END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public org . jetbrains . kotlin . protobuf . protocol string list get imported module list ( ) {
 return imported module_ . get unmodifiable view ( ) ;
 }
comment:
START repeated string imported_module = NUMBER END
BLUE1:0.0
--generate--
returns the list of UNK UNK .
returns the UNK of the UNK .
returns the UNK for the given UNK .
returns the UNK for the given UNK , in the UNK .
returns the list of UNK UNK

code:
public void clear credentials provider ( ) {
 this . http client . get credentials provider ( ) . clear ( ) ;
 }
comment:
START removes previously set auth credentials END
BLUE1:0.0
--generate--
used to the UNK of UNK .
used to the UNK of the UNK .
used to all UNK .
used to the UNK of UNK
used to the UNK of the UNK

code:
public builder set nested class name ( int index , int value ) {
 ensure nested class name is mutable ( ) ;
 nested class name_ . set ( index , value ) ;
 return this ;
 }
comment:
START repeated int32 nested_class_name = NUMBER -lsb- packed = true -rsb- END
BLUE1:0.0
--generate--
sets the UNK of the UNK .
sets the UNK for the UNK .
sets the UNK for the given UNK .
sets the UNK of the given UNK .
sets the UNK of the UNK to .

